

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Oct 04 17:38:24 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18LF47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	dabs	1,0x100,256,_rxBuf
    64                           	dabs	1,0x200,256,_txBuf
    65  0000                     
    66                           ; Version 2.10
    67                           ; Generated 31/07/2019 GMT
    68                           ; 
    69                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18LF47K42 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100  0000                     
   101                           	psect	idataBANK0
   102  005C18                     __pidataBANK0:
   103                           	opt callstack 0
   104                           
   105                           ;initializer for _ackCmd
   106  005C18  14                 	db	20
   107  005C19  00                 	db	0
   108                           
   109                           	psect	smallconst
   110  002000                     __psmallconst:
   111                           	opt callstack 0
   112  002000  00                 	db	0
   113  002001                     _soundAmplify:
   114                           	opt callstack 0
   115  002001  0000               	dw	0
   116  002003  0000               	dw	0
   117  002005  0000               	dw	0
   118  002007  02EE               	dw	750
   119  002009  0258               	dw	600
   120  00200B  01C2               	dw	450
   121  00200D  012C               	dw	300
   122  00200F  00C8               	dw	200
   123  002011  0078               	dw	120
   124  002013  004B               	dw	75
   125  002015  0032               	dw	50
   126  002017  0023               	dw	35
   127  002019  0019               	dw	25
   128  00201B  000F               	dw	15
   129  00201D  000A               	dw	10
   130  00201F  0007               	dw	7
   131  002021                     __end_of_soundAmplify:
   132                           	opt callstack 0
   133  002021                     _volCheckCmd:
   134                           	opt callstack 0
   135  002021  16                 	db	22
   136  002022  00                 	db	0
   137  002023  04                 	db	4
   138  002024                     __end_of_volCheckCmd:
   139                           	opt callstack 0
   140  002024                     _stateCheckCmd:
   141                           	opt callstack 0
   142  002024  0D                 	db	13
   143  002025  00                 	db	0
   144  002026                     __end_of_stateCheckCmd:
   145                           	opt callstack 0
   146  0000                     _PRLOCKbits	set	14831
   147  0000                     _PRLOCK	set	14831
   148  0000                     _PMD7	set	14791
   149  0000                     _PMD6	set	14790
   150  0000                     _PMD5	set	14789
   151  0000                     _PMD4	set	14788
   152  0000                     _PMD3	set	14787
   153  0000                     _PMD2	set	14786
   154  0000                     _PMD1	set	14785
   155  0000                     _PMD0	set	14784
   156  0000                     _DMA2SCNTIF	set	118058
   157  0000                     _U1TXIF	set	118044
   158  0000                     _RB0PPS	set	14856
   159  0000                     _U1RXPPS	set	15077
   160  0000                     _RD7PPS	set	14879
   161  0000                     _RD6PPS	set	14878
   162  0000                     _RD5PPS	set	14877
   163  0000                     _RD4PPS	set	14876
   164  0000                     _RC7PPS	set	14871
   165  0000                     _ODCONE	set	14978
   166  0000                     _SLRCONE	set	14979
   167  0000                     _INLVLE	set	14980
   168  0000                     _WPUE	set	14977
   169  0000                     _ANSELE	set	14976
   170  0000                     _ODCOND	set	14962
   171  0000                     _SLRCOND	set	14963
   172  0000                     _INLVLD	set	14964
   173  0000                     _WPUD	set	14961
   174  0000                     _ANSELD	set	14960
   175  0000                     _ODCONC	set	14946
   176  0000                     _SLRCONC	set	14947
   177  0000                     _INLVLC	set	14948
   178  0000                     _WPUC	set	14945
   179  0000                     _ANSELC	set	14944
   180  0000                     _ODCONB	set	14930
   181  0000                     _SLRCONB	set	14931
   182  0000                     _INLVLB	set	14932
   183  0000                     _WPUB	set	14929
   184  0000                     _ANSELB	set	14928
   185  0000                     _ODCONA	set	14914
   186  0000                     _SLRCONA	set	14915
   187  0000                     _INLVLA	set	14916
   188  0000                     _WPUA	set	14913
   189  0000                     _ANSELA	set	14912
   190  0000                     _DMA2CON0bits	set	15324
   191  0000                     _DMA1DPTRL	set	15340
   192  0000                     _DMA2CON0	set	15324
   193  0000                     _DMA2AIRQ	set	15326
   194  0000                     _DMA2SIRQ	set	15327
   195  0000                     _DMA2DSAL	set	15312
   196  0000                     _DMA2DSAH	set	15313
   197  0000                     _DMA2DSZL	set	15310
   198  0000                     _DMA2DSZH	set	15311
   199  0000                     _DMA2SSAL	set	15321
   200  0000                     _DMA2SSAH	set	15322
   201  0000                     _DMA2SSAU	set	15323
   202  0000                     _DMA2SSZL	set	15319
   203  0000                     _DMA2SSZH	set	15320
   204  0000                     _DMA2CON1	set	15325
   205  0000                     _DMA1CON0	set	15356
   206  0000                     _DMA1AIRQ	set	15358
   207  0000                     _DMA1SIRQ	set	15359
   208  0000                     _DMA1DSAL	set	15344
   209  0000                     _DMA1DSAH	set	15345
   210  0000                     _DMA1DSZL	set	15342
   211  0000                     _DMA1DSZH	set	15343
   212  0000                     _DMA1SSAL	set	15353
   213  0000                     _DMA1SSAH	set	15354
   214  0000                     _DMA1SSAU	set	15355
   215  0000                     _DMA1SSZL	set	15351
   216  0000                     _DMA1SSZH	set	15352
   217  0000                     _DMA1CON1	set	15357
   218  0000                     _U1TXCHK	set	15851
   219  0000                     _U1TXB	set	15850
   220  0000                     _U1CON2	set	15860
   221  0000                     _U1CON1	set	15859
   222  0000                     _U1CON0	set	15858
   223  0000                     _U1BRGL	set	15861
   224  0000                     _U1BRGH	set	15862
   225  0000                     _ADREF	set	16125
   226  0000                     _ADCLK	set	16127
   227  0000                     _ADCON3	set	16123
   228  0000                     _ADCON2	set	16122
   229  0000                     _ADCON1	set	16121
   230  0000                     _ADCON0	set	16120
   231  0000                     _ADRESL	set	16111
   232  0000                     _ADRESH	set	16112
   233  0000                     _ADCON0bits	set	16120
   234  0000                     _ADPCH	set	16113
   235  0000                     _CCPTMRS0	set	16222
   236  0000                     _PWM8DCL	set	16224
   237  0000                     _PWM8DCH	set	16225
   238  0000                     _PWM6DCL	set	16232
   239  0000                     _PWM6DCH	set	16233
   240  0000                     _T2CON	set	16300
   241  0000                     _T2CLK	set	16302
   242  0000                     _T2PR	set	16299
   243  0000                     _PWM8CON	set	16226
   244  0000                     _PWM6CON	set	16234
   245  0000                     _CCP4CON	set	16242
   246  0000                     _CCP3CON	set	16246
   247  0000                     _CCP2CON	set	16250
   248  0000                     _PORTE	set	16334
   249  0000                     _TRISE	set	16326
   250  0000                     _PORTD	set	16333
   251  0000                     _TRISD	set	16325
   252  0000                     _PORTC	set	16332
   253  0000                     _TRISC	set	16324
   254  0000                     _PORTB	set	16331
   255  0000                     _TRISB	set	16323
   256  0000                     _PORTA	set	16330
   257  0000                     _TRISA	set	16322
   258  0000                     _PORTDbits	set	16333
   259  0000                     _PORTCbits	set	16332
   260  0000                     _CCPR4L	set	16240
   261  0000                     _CCPR4H	set	16241
   262  0000                     _CCPR2L	set	16248
   263  0000                     _CCPR2H	set	16249
   264  0000                     _CCPR3L	set	16244
   265  0000                     _CCPR3H	set	16245
   266  0000                     _LATE0	set	130544
   267  0000                     _LATE1	set	130545
   268  0000                     _LATE2	set	130546
   269  0000                     _LATB4	set	130524
   270  002026                     STR_2:
   271  002026  43                 	db	67	;'C'
   272  002027  68                 	db	104	;'h'
   273  002028  67                 	db	103	;'g'
   274  002029  20                 	db	32
   275  00202A  66                 	db	102	;'f'
   276  00202B  61                 	db	97	;'a'
   277  00202C  75                 	db	117	;'u'
   278  00202D  6C                 	db	108	;'l'
   279  00202E  74                 	db	116	;'t'
   280  00202F  3A                 	db	58	;':'
   281  002030  20                 	db	32
   282  002031  25                 	db	37
   283  002032  33                 	db	51	;'3'
   284  002033  2E                 	db	46
   285  002034  30                 	db	48	;'0'
   286  002035  66                 	db	102	;'f'
   287  002036  25                 	db	37
   288  002037  25                 	db	37
   289  002038  00                 	db	0
   290  002039                     STR_3:
   291  002039  46                 	db	70	;'F'
   292  00203A  75                 	db	117	;'u'
   293  00203B  6C                 	db	108	;'l'
   294  00203C  6C                 	db	108	;'l'
   295  00203D  20                 	db	32
   296  00203E  43                 	db	67	;'C'
   297  00203F  68                 	db	104	;'h'
   298  002040  67                 	db	103	;'g'
   299  002041  3A                 	db	58	;':'
   300  002042  20                 	db	32
   301  002043  25                 	db	37
   302  002044  33                 	db	51	;'3'
   303  002045  2E                 	db	46
   304  002046  30                 	db	48	;'0'
   305  002047  66                 	db	102	;'f'
   306  002048  25                 	db	37
   307  002049  25                 	db	37
   308  00204A  00                 	db	0
   309  00204B                     STR_4:
   310  00204B  46                 	db	70	;'F'
   311  00204C  61                 	db	97	;'a'
   312  00204D  73                 	db	115	;'s'
   313  00204E  74                 	db	116	;'t'
   314  00204F  20                 	db	32
   315  002050  43                 	db	67	;'C'
   316  002051  68                 	db	104	;'h'
   317  002052  67                 	db	103	;'g'
   318  002053  3A                 	db	58	;':'
   319  002054  20                 	db	32
   320  002055  25                 	db	37
   321  002056  33                 	db	51	;'3'
   322  002057  2E                 	db	46
   323  002058  30                 	db	48	;'0'
   324  002059  66                 	db	102	;'f'
   325  00205A  25                 	db	37
   326  00205B  25                 	db	37
   327  00205C  00                 	db	0
   328  00205D                     STR_5:
   329  00205D  42                 	db	66	;'B'
   330  00205E  61                 	db	97	;'a'
   331  00205F  74                 	db	116	;'t'
   332  002060  74                 	db	116	;'t'
   333  002061  65                 	db	101	;'e'
   334  002062  72                 	db	114	;'r'
   335  002063  79                 	db	121	;'y'
   336  002064  3A                 	db	58	;':'
   337  002065  20                 	db	32
   338  002066  25                 	db	37
   339  002067  33                 	db	51	;'3'
   340  002068  2E                 	db	46
   341  002069  30                 	db	48	;'0'
   342  00206A  66                 	db	102	;'f'
   343  00206B  25                 	db	37
   344  00206C  25                 	db	37
   345  00206D  00                 	db	0
   346  00206E                     STR_6:
   347  00206E  48                 	db	72	;'H'
   348  00206F  65                 	db	101	;'e'
   349  002070  6C                 	db	108	;'l'
   350  002071  6C                 	db	108	;'l'
   351  002072  6F                 	db	111	;'o'
   352  002073  20                 	db	32
   353  002074  57                 	db	87	;'W'
   354  002075  6F                 	db	111	;'o'
   355  002076  72                 	db	114	;'r'
   356  002077  6C                 	db	108	;'l'
   357  002078  64                 	db	100	;'d'
   358  002079  21                 	db	33
   359  00207A  00                 	db	0
   360  00207B                     STR_1:
   361  00207B  4E                 	db	78	;'N'
   362  00207C  6F                 	db	111	;'o'
   363  00207D  20                 	db	32
   364  00207E  42                 	db	66	;'B'
   365  00207F  61                 	db	97	;'a'
   366  002080  74                 	db	116	;'t'
   367  002081  74                 	db	116	;'t'
   368  002082  65                 	db	101	;'e'
   369  002083  72                 	db	114	;'r'
   370  002084  79                 	db	121	;'y'
   371  002085  00                 	db	0
   372  002086                     STR_7:
   373  002086  49                 	db	73	;'I'
   374  002087  4E                 	db	78	;'N'
   375  002088  46                 	db	70	;'F'
   376  002089  00                 	db	0
   377  00208A                     STR_11:
   378  00208A  4E                 	db	78	;'N'
   379  00208B  41                 	db	65	;'A'
   380  00208C  4E                 	db	78	;'N'
   381  00208D  00                 	db	0
   382  00208E                     STR_8:
   383  00208E  69                 	db	105	;'i'
   384  00208F  6E                 	db	110	;'n'
   385  002090  66                 	db	102	;'f'
   386  002091  00                 	db	0
   387  002092                     STR_12:
   388  002092  6E                 	db	110	;'n'
   389  002093  61                 	db	97	;'a'
   390  002094  6E                 	db	110	;'n'
   391  002095  00                 	db	0
   392  002096                     STR_15:
   393  002096  6C                 	db	108	;'l'
   394  002097  66                 	db	102	;'f'
   395  002098  00                 	db	0
   396  0000                     
   397                           ; #config settings
   398  002099  00                 	db	0	; dummy byte at the end
   399  0000                     
   400                           	psect	cinit
   401  005A7E                     __pcinit:
   402                           	opt callstack 0
   403  005A7E                     start_initialization:
   404                           	opt callstack 0
   405  005A7E                     __initialization:
   406                           	opt callstack 0
   407                           
   408                           ; Initialize objects allocated to BANK0 (2 bytes)
   409                           ; load TBLPTR registers with __pidataBANK0
   410  005A7E  0E18               	movlw	low __pidataBANK0
   411  005A80  6EF6               	movwf	tblptrl,c
   412  005A82  0E5C               	movlw	high __pidataBANK0
   413  005A84  6EF7               	movwf	tblptrh,c
   414  005A86  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   415  005A88  6EF8               	movwf	tblptru,c
   416  005A8A  0009               	tblrd		*+	;fetch initializer
   417  005A8C  006F FFD4  F0E3    	movff	tablat,__pdataBANK0
   418  005A92  0009               	tblrd		*+	;fetch initializer
   419  005A94  006F FFD4  F0E4    	movff	tablat,__pdataBANK0+1
   420                           
   421                           ; Clear objects allocated to BANK4 (136 bytes)
   422  005A9A  EE01  F000         	lfsr	0,__pbssBANK4
   423  005A9E  0E88               	movlw	136
   424  005AA0                     clear_0:
   425  005AA0  6AEE               	clrf	postinc0,c
   426  005AA2  06E8               	decf	wreg,f,c
   427  005AA4  E1FD               	bnz	clear_0
   428                           
   429                           ; Clear objects allocated to BANK0 (18 bytes)
   430  005AA6  EE00  F0D1         	lfsr	0,__pbssBANK0
   431  005AAA  0E12               	movlw	18
   432  005AAC                     clear_1:
   433  005AAC  6AEE               	clrf	postinc0,c
   434  005AAE  06E8               	decf	wreg,f,c
   435  005AB0  E1FD               	bnz	clear_1
   436  005AB2                     end_of_initialization:
   437                           	opt callstack 0
   438  005AB2                     __end_of__initialization:
   439                           	opt callstack 0
   440  005AB2  0100               	movlb	0
   441  005AB4  EF00  F024         	goto	_main	;jump to C main() function
   442                           
   443                           	psect	bssBANK0
   444  0000D1                     __pbssBANK0:
   445                           	opt callstack 0
   446  0000D1                     floorf@F524:
   447                           	opt callstack 0
   448  0000D1                     	ds	4
   449  0000D5                     ___fpclassifyf@F463:
   450                           	opt callstack 0
   451  0000D5                     	ds	4
   452  0000D9                     _nout:
   453                           	opt callstack 0
   454  0000D9                     	ds	2
   455  0000DB                     _width:
   456                           	opt callstack 0
   457  0000DB                     	ds	2
   458  0000DD                     _prec:
   459                           	opt callstack 0
   460  0000DD                     	ds	2
   461  0000DF                     _flags:
   462                           	opt callstack 0
   463  0000DF                     	ds	2
   464  0000E1                     uart_tasks@rxPos:
   465                           	opt callstack 0
   466  0000E1                     	ds	1
   467  0000E2                     _pairing:
   468                           	opt callstack 0
   469  0000E2                     	ds	1
   470                           
   471                           	psect	dataBANK0
   472  0000E3                     __pdataBANK0:
   473                           	opt callstack 0
   474  0000E3                     _ackCmd:
   475                           	opt callstack 0
   476  0000E3                     	ds	2
   477                           
   478                           	psect	bssBANK4
   479  000400                     __pbssBANK4:
   480                           	opt callstack 0
   481  000400                     main_loop@last:
   482                           	opt callstack 0
   483  000400                     	ds	40
   484  000428                     main_loop@lastSum:
   485                           	opt callstack 0
   486  000428                     	ds	4
   487  00042C                     main_loop@sum:
   488                           	opt callstack 0
   489  00042C                     	ds	4
   490  000430                     main_loop@counter:
   491                           	opt callstack 0
   492  000430                     	ds	4
   493  000434                     main_loop@pos:
   494                           	opt callstack 0
   495  000434                     	ds	2
   496  000436                     _streaming:
   497                           	opt callstack 0
   498  000436                     	ds	1
   499  000437                     _volume_level:
   500                           	opt callstack 0
   501  000437                     	ds	1
   502  000438                     _dbuf:
   503                           	opt callstack 0
   504  000438                     	ds	80
   505                           
   506                           	psect	cstackBANK4
   507  000488                     __pcstackBANK4:
   508                           	opt callstack 0
   509  000488                     main_loop@batmsg:
   510                           	opt callstack 0
   511                           
   512                           ; 16 bytes @ 0x0
   513  000488                     	ds	16
   514  000498                     main_loop@lastAvg:
   515                           	opt callstack 0
   516                           
   517                           ; 4 bytes @ 0x10
   518  000498                     	ds	4
   519  00049C                     _main_loop$307:
   520                           	opt callstack 0
   521                           
   522                           ; 4 bytes @ 0x14
   523  00049C                     	ds	4
   524  0004A0                     _main_loop$308:
   525                           	opt callstack 0
   526                           
   527                           ; 4 bytes @ 0x18
   528  0004A0                     	ds	4
   529  0004A4                     _main_loop$309:
   530                           	opt callstack 0
   531                           
   532                           ; 4 bytes @ 0x1C
   533  0004A4                     	ds	4
   534  0004A8                     _main_loop$323:
   535                           	opt callstack 0
   536                           
   537                           ; 4 bytes @ 0x20
   538  0004A8                     	ds	4
   539  0004AC                     main_loop@absRes:
   540                           	opt callstack 0
   541                           
   542                           ; 2 bytes @ 0x24
   543  0004AC                     	ds	2
   544  0004AE                     main_loop@batlvl:
   545                           	opt callstack 0
   546                           
   547                           ; 2 bytes @ 0x26
   548  0004AE                     	ds	2
   549  0004B0                     main_loop@res:
   550                           	opt callstack 0
   551                           
   552                           ; 2 bytes @ 0x28
   553  0004B0                     	ds	2
   554  0004B2                     main_loop@sample:
   555                           	opt callstack 0
   556                           
   557                           ; 4 bytes @ 0x2A
   558  0004B2                     	ds	4
   559  0004B6                     main_loop@rel:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0x2E
   563  0004B6                     	ds	4
   564  0004BA                     main_loop@bat_percent:
   565                           	opt callstack 0
   566                           
   567                           ; 4 bytes @ 0x32
   568  0004BA                     	ds	4
   569                           
   570                           	psect	cstackBANK3
   571  000300                     __pcstackBANK3:
   572                           	opt callstack 0
   573  000300                     uart_tasks@message:
   574                           	opt callstack 0
   575                           
   576                           ; 256 bytes @ 0x0
   577  000300                     	ds	256
   578                           
   579                           	psect	cstackBANK0
   580  000060                     __pcstackBANK0:
   581                           	opt callstack 0
   582  000060                     ?_efgtoa:
   583                           	opt callstack 0
   584  000060                     efgtoa@fp:
   585                           	opt callstack 0
   586                           
   587                           ; 1 bytes @ 0x0
   588  000060                     	ds	1
   589  000061                     efgtoa@f:
   590                           	opt callstack 0
   591                           
   592                           ; 4 bytes @ 0x1
   593  000061                     	ds	4
   594  000065                     efgtoa@c:
   595                           	opt callstack 0
   596                           
   597                           ; 1 bytes @ 0x5
   598  000065                     	ds	1
   599  000066                     ??_efgtoa:
   600                           
   601                           ; 1 bytes @ 0x6
   602  000066                     	ds	5
   603  00006B                     efgtoa@ou:
   604                           	opt callstack 0
   605                           
   606                           ; 4 bytes @ 0xB
   607  00006B                     	ds	4
   608  00006F                     _efgtoa$603:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0xF
   612  00006F                     	ds	2
   613  000071                     _efgtoa$604:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x11
   617  000071                     	ds	2
   618  000073                     _efgtoa$609:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x13
   622  000073                     	ds	2
   623  000075                     _efgtoa$613:
   624                           	opt callstack 0
   625                           
   626                           ; 2 bytes @ 0x15
   627  000075                     	ds	2
   628  000077                     _efgtoa$614:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x17
   632  000077                     	ds	2
   633  000079                     _efgtoa$615:
   634                           	opt callstack 0
   635                           
   636                           ; 2 bytes @ 0x19
   637  000079                     	ds	2
   638  00007B                     efgtoa@t:
   639                           	opt callstack 0
   640                           
   641                           ; 2 bytes @ 0x1B
   642  00007B                     	ds	2
   643  00007D                     efgtoa@pp:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x1D
   647  00007D                     	ds	2
   648  00007F                     efgtoa@m:
   649                           	opt callstack 0
   650                           
   651                           ; 2 bytes @ 0x1F
   652  00007F                     	ds	2
   653  000081                     efgtoa@ne:
   654                           	opt callstack 0
   655                           
   656                           ; 2 bytes @ 0x21
   657  000081                     	ds	2
   658  000083                     efgtoa@d:
   659                           	opt callstack 0
   660                           
   661                           ; 2 bytes @ 0x23
   662  000083                     	ds	2
   663  000085                     efgtoa@sign:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0x25
   667  000085                     	ds	2
   668  000087                     efgtoa@p:
   669                           	opt callstack 0
   670                           
   671                           ; 2 bytes @ 0x27
   672  000087                     	ds	2
   673  000089                     efgtoa@nmode:
   674                           	opt callstack 0
   675                           
   676                           ; 1 bytes @ 0x29
   677  000089                     	ds	1
   678  00008A                     efgtoa@w:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x2A
   682  00008A                     	ds	2
   683  00008C                     efgtoa@mode:
   684                           	opt callstack 0
   685                           
   686                           ; 1 bytes @ 0x2C
   687  00008C                     	ds	1
   688  00008D                     efgtoa@h:
   689                           	opt callstack 0
   690                           
   691                           ; 4 bytes @ 0x2D
   692  00008D                     	ds	4
   693  000091                     efgtoa@l:
   694                           	opt callstack 0
   695                           
   696                           ; 4 bytes @ 0x31
   697  000091                     	ds	4
   698  000095                     efgtoa@i:
   699                           	opt callstack 0
   700                           
   701                           ; 2 bytes @ 0x35
   702  000095                     	ds	2
   703  000097                     efgtoa@g:
   704                           	opt callstack 0
   705                           
   706                           ; 4 bytes @ 0x37
   707  000097                     	ds	4
   708  00009B                     efgtoa@e:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x3B
   712  00009B                     	ds	2
   713  00009D                     efgtoa@n:
   714                           	opt callstack 0
   715                           
   716                           ; 2 bytes @ 0x3D
   717  00009D                     	ds	2
   718  00009F                     efgtoa@u:
   719                           	opt callstack 0
   720                           
   721                           ; 4 bytes @ 0x3F
   722  00009F                     	ds	4
   723  0000A3                     ??_vfpfcnvrt:
   724                           
   725                           ; 1 bytes @ 0x43
   726  0000A3                     	ds	4
   727  0000A7                     _vfpfcnvrt$629:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x47
   731  0000A7                     	ds	2
   732  0000A9                     _vfpfcnvrt$630:
   733                           	opt callstack 0
   734                           
   735                           ; 2 bytes @ 0x49
   736  0000A9                     	ds	2
   737  0000AB                     _vfpfcnvrt$634:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x4B
   741  0000AB                     	ds	2
   742  0000AD                     vfpfcnvrt@ct:
   743                           	opt callstack 0
   744                           
   745                           ; 3 bytes @ 0x4D
   746  0000AD                     	ds	3
   747  0000B0                     vfpfcnvrt@f:
   748                           	opt callstack 0
   749                           
   750                           ; 4 bytes @ 0x50
   751  0000B0                     	ds	4
   752  0000B4                     vfpfcnvrt@c:
   753                           	opt callstack 0
   754                           
   755                           ; 1 bytes @ 0x54
   756  0000B4                     	ds	1
   757  0000B5                     ?_vfprintf:
   758                           	opt callstack 0
   759  0000B5                     vfprintf@fp:
   760                           	opt callstack 0
   761                           
   762                           ; 1 bytes @ 0x55
   763  0000B5                     	ds	1
   764  0000B6                     vfprintf@fmt:
   765                           	opt callstack 0
   766                           
   767                           ; 1 bytes @ 0x56
   768  0000B6                     	ds	1
   769  0000B7                     vfprintf@ap:
   770                           	opt callstack 0
   771                           
   772                           ; 1 bytes @ 0x57
   773  0000B7                     	ds	1
   774  0000B8                     vfprintf@cfmt:
   775                           	opt callstack 0
   776                           
   777                           ; 1 bytes @ 0x58
   778  0000B8                     	ds	1
   779  0000B9                     ?_sprintf:
   780                           	opt callstack 0
   781  0000B9                     sprintf@s:
   782                           	opt callstack 0
   783                           
   784                           ; 2 bytes @ 0x59
   785  0000B9                     	ds	2
   786  0000BB                     sprintf@fmt:
   787                           	opt callstack 0
   788                           
   789                           ; 1 bytes @ 0x5B
   790  0000BB                     	ds	7
   791  0000C2                     sprintf@ap:
   792                           	opt callstack 0
   793                           
   794                           ; 1 bytes @ 0x62
   795  0000C2                     	ds	1
   796  0000C3                     sprintf@f:
   797                           	opt callstack 0
   798                           
   799                           ; 6 bytes @ 0x63
   800  0000C3                     	ds	6
   801  0000C9                     ??_main_loop:
   802                           
   803                           ; 1 bytes @ 0x69
   804  0000C9                     	ds	6
   805  0000CF                     ??_main:
   806                           
   807                           ; 1 bytes @ 0x6F
   808  0000CF                     	ds	2
   809                           
   810                           	psect	cstackCOMRAM
   811  000001                     __pcstackCOMRAM:
   812                           	opt callstack 0
   813  000001                     ?_strlen:
   814                           	opt callstack 0
   815  000001                     ?___fpclassifyf:
   816                           	opt callstack 0
   817  000001                     ?_isupper:
   818                           	opt callstack 0
   819  000001                     ?_isdigit:
   820                           	opt callstack 0
   821  000001                     ?_strncmp:
   822                           	opt callstack 0
   823  000001                     ?_isspace:
   824                           	opt callstack 0
   825  000001                     ?___wmul:
   826                           	opt callstack 0
   827  000001                     ?___awdiv:
   828                           	opt callstack 0
   829  000001                     ?___awmod:
   830                           	opt callstack 0
   831  000001                     ?___lmul:
   832                           	opt callstack 0
   833  000001                     ?___flneg:
   834                           	opt callstack 0
   835  000001                     ?___fltol:
   836                           	opt callstack 0
   837  000001                     ?___xxtofl:
   838                           	opt callstack 0
   839  000001                     lcd_write@data:
   840                           	opt callstack 0
   841  000001                     strncmp@_l:
   842                           	opt callstack 0
   843  000001                     ___wmul@multiplier:
   844                           	opt callstack 0
   845  000001                     ___awdiv@dividend:
   846                           	opt callstack 0
   847  000001                     ___awmod@dividend:
   848                           	opt callstack 0
   849  000001                     isdigit@c:
   850                           	opt callstack 0
   851  000001                     isspace@c:
   852                           	opt callstack 0
   853  000001                     isupper@c:
   854                           	opt callstack 0
   855  000001                     memcpy@d1:
   856                           	opt callstack 0
   857  000001                     fputc@c:
   858                           	opt callstack 0
   859  000001                     strcpy@dest:
   860                           	opt callstack 0
   861  000001                     strlen@s:
   862                           	opt callstack 0
   863  000001                     ___lmul@multiplier:
   864                           	opt callstack 0
   865  000001                     ___fleq@ff1:
   866                           	opt callstack 0
   867  000001                     ___flneg@f1:
   868                           	opt callstack 0
   869  000001                     ___fltol@f1:
   870                           	opt callstack 0
   871  000001                     ___xxtofl@val:
   872                           	opt callstack 0
   873  000001                     ___fpclassifyf@x:
   874                           	opt callstack 0
   875                           
   876                           ; 4 bytes @ 0x0
   877  000001                     	ds	1
   878  000002                     lcd_write@longdelay:
   879                           	opt callstack 0
   880  000002                     strncmp@_r:
   881                           	opt callstack 0
   882                           
   883                           ; 1 bytes @ 0x1
   884  000002                     	ds	1
   885  000003                     ??_isupper:
   886  000003                     ??_isdigit:
   887  000003                     ??_isspace:
   888  000003                     ??_lcd_write:
   889  000003                     fputc@fp:
   890                           	opt callstack 0
   891  000003                     ___wmul@multiplicand:
   892                           	opt callstack 0
   893  000003                     ___awdiv@divisor:
   894                           	opt callstack 0
   895  000003                     ___awmod@divisor:
   896                           	opt callstack 0
   897  000003                     memcpy@s1:
   898                           	opt callstack 0
   899  000003                     strcpy@src:
   900                           	opt callstack 0
   901  000003                     strlen@a:
   902                           	opt callstack 0
   903  000003                     strncmp@n:
   904                           	opt callstack 0
   905                           
   906                           ; 2 bytes @ 0x2
   907  000003                     	ds	1
   908  000004                     ??_fputc:
   909  000004                     lcd_write@rs:
   910                           	opt callstack 0
   911                           
   912                           ; 1 bytes @ 0x3
   913  000004                     	ds	1
   914  000005                     ??___fpclassifyf:
   915  000005                     ??_strcpy:
   916  000005                     ??_strncmp:
   917  000005                     ??___fltol:
   918  000005                     ??___xxtofl:
   919  000005                     lcd_init@shift:
   920                           	opt callstack 0
   921  000005                     lcd_set_data_addr@addr:
   922                           	opt callstack 0
   923  000005                     ___awdiv@counter:
   924                           	opt callstack 0
   925  000005                     ___awmod@counter:
   926                           	opt callstack 0
   927  000005                     lcd_print@string:
   928                           	opt callstack 0
   929  000005                     ___wmul@product:
   930                           	opt callstack 0
   931  000005                     memcpy@n:
   932                           	opt callstack 0
   933  000005                     ___lmul@multiplicand:
   934                           	opt callstack 0
   935  000005                     ___fleq@ff2:
   936                           	opt callstack 0
   937                           
   938                           ; 4 bytes @ 0x4
   939  000005                     	ds	1
   940  000006                     lcd_init@cursor:
   941                           	opt callstack 0
   942  000006                     ___awdiv@sign:
   943                           	opt callstack 0
   944  000006                     ___awmod@sign:
   945                           	opt callstack 0
   946  000006                     strncmp@l:
   947                           	opt callstack 0
   948                           
   949                           ; 1 bytes @ 0x5
   950  000006                     	ds	1
   951  000007                     ??_lcd_print:
   952  000007                     ?_tolower:
   953                           	opt callstack 0
   954  000007                     lcd_init@cursorblink:
   955                           	opt callstack 0
   956  000007                     _isspace$1136:
   957                           	opt callstack 0
   958  000007                     strncmp@r:
   959                           	opt callstack 0
   960  000007                     ___awdiv@quotient:
   961                           	opt callstack 0
   962  000007                     memcpy@d:
   963                           	opt callstack 0
   964  000007                     strcpy@s:
   965                           	opt callstack 0
   966  000007                     tolower@c:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x6
   970  000007                     	ds	1
   971  000008                     ?_atoi:
   972                           	opt callstack 0
   973  000008                     lcd_init@on:
   974                           	opt callstack 0
   975  000008                     atoi@s:
   976                           	opt callstack 0
   977                           
   978                           ; 1 bytes @ 0x7
   979  000008                     	ds	1
   980  000009                     ??_lcd_init:
   981  000009                     ??_tolower:
   982  000009                     ??___fleq:
   983  000009                     lcd_print@i:
   984                           	opt callstack 0
   985  000009                     ___fltol@sign1:
   986                           	opt callstack 0
   987  000009                     ___xxtofl@sign:
   988                           	opt callstack 0
   989  000009                     ___fpclassifyf@e:
   990                           	opt callstack 0
   991  000009                     memcpy@s:
   992                           	opt callstack 0
   993  000009                     fputs@s:
   994                           	opt callstack 0
   995  000009                     strcpy@d:
   996                           	opt callstack 0
   997  000009                     ___lmul@product:
   998                           	opt callstack 0
   999                           
  1000                           ; 4 bytes @ 0x8
  1001  000009                     	ds	1
  1002  00000A                     ??_atoi:
  1003  00000A                     lcd_init@inc:
  1004                           	opt callstack 0
  1005  00000A                     ___fltol@exp1:
  1006                           	opt callstack 0
  1007  00000A                     ___xxtofl@exp:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 1 bytes @ 0x9
  1011  00000A                     	ds	1
  1012  00000B                     memcpy@tmp:
  1013                           	opt callstack 0
  1014  00000B                     fputs@fp:
  1015                           	opt callstack 0
  1016  00000B                     ___xxtofl@arg:
  1017                           	opt callstack 0
  1018  00000B                     ___fpclassifyf@u:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 4 bytes @ 0xA
  1022  00000B                     	ds	1
  1023  00000C                     fputs@c:
  1024                           	opt callstack 0
  1025  00000C                     uart_send@buf:
  1026                           	opt callstack 0
  1027                           
  1028                           ; 2 bytes @ 0xB
  1029  00000C                     	ds	1
  1030  00000D                     ?___lldiv:
  1031                           	opt callstack 0
  1032  00000D                     fputs@i:
  1033                           	opt callstack 0
  1034  00000D                     _tolower$1228:
  1035                           	opt callstack 0
  1036  00000D                     ___lldiv@dividend:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 4 bytes @ 0xC
  1040  00000D                     	ds	1
  1041  00000E                     uart_send@len:
  1042                           	opt callstack 0
  1043  00000E                     atoi@neg:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 2 bytes @ 0xD
  1047  00000E                     	ds	1
  1048  00000F                     ??_uart_send:
  1049  00000F                     ?_pad:
  1050                           	opt callstack 0
  1051  00000F                     ?___fladd:
  1052                           	opt callstack 0
  1053  00000F                     pad@fp:
  1054                           	opt callstack 0
  1055  00000F                     ___fladd@b:
  1056                           	opt callstack 0
  1057                           
  1058                           ; 4 bytes @ 0xE
  1059  00000F                     	ds	1
  1060  000010                     pad@buf:
  1061                           	opt callstack 0
  1062  000010                     _atoi$1105:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 2 bytes @ 0xF
  1066  000010                     	ds	1
  1067  000011                     handle_message@message:
  1068                           	opt callstack 0
  1069  000011                     ___lldiv@divisor:
  1070                           	opt callstack 0
  1071                           
  1072                           ; 4 bytes @ 0x10
  1073  000011                     	ds	1
  1074  000012                     pad@p:
  1075                           	opt callstack 0
  1076  000012                     _atoi$1107:
  1077                           	opt callstack 0
  1078                           
  1079                           ; 2 bytes @ 0x11
  1080  000012                     	ds	1
  1081  000013                     handle_message@len:
  1082                           	opt callstack 0
  1083  000013                     ___fladd@a:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x12
  1087  000013                     	ds	1
  1088  000014                     ??_pad:
  1089  000014                     _atoi$1106:
  1090                           	opt callstack 0
  1091                           
  1092                           ; 1 bytes @ 0x13
  1093  000014                     	ds	1
  1094  000015                     ??_uart_tasks:
  1095  000015                     pad@i:
  1096                           	opt callstack 0
  1097  000015                     atoi@n:
  1098                           	opt callstack 0
  1099  000015                     ___lldiv@quotient:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x14
  1103  000015                     	ds	2
  1104  000017                     ??___fladd:
  1105  000017                     pad@w:
  1106                           	opt callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x16
  1109  000017                     	ds	2
  1110  000019                     uart_tasks@rxLen:
  1111                           	opt callstack 0
  1112  000019                     ___lldiv@counter:
  1113                           	opt callstack 0
  1114                           
  1115                           ; 1 bytes @ 0x18
  1116  000019                     	ds	1
  1117  00001A                     ?___llmod:
  1118                           	opt callstack 0
  1119  00001A                     uart_tasks@rawMsgOffset:
  1120                           	opt callstack 0
  1121  00001A                     setLED@r:
  1122                           	opt callstack 0
  1123  00001A                     ___llmod@dividend:
  1124                           	opt callstack 0
  1125                           
  1126                           ; 4 bytes @ 0x19
  1127  00001A                     	ds	1
  1128  00001B                     uart_tasks@checksum:
  1129                           	opt callstack 0
  1130  00001B                     ___fladd@signs:
  1131                           	opt callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x1A
  1134  00001B                     	ds	1
  1135  00001C                     uart_tasks@msgOffset:
  1136                           	opt callstack 0
  1137  00001C                     ___fladd@aexp:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x1B
  1141  00001C                     	ds	1
  1142  00001D                     uart_tasks@posInRawMsg:
  1143                           	opt callstack 0
  1144  00001D                     ___fladd@bexp:
  1145                           	opt callstack 0
  1146                           
  1147                           ; 1 bytes @ 0x1C
  1148  00001D                     	ds	1
  1149  00001E                     uart_tasks@i:
  1150                           	opt callstack 0
  1151  00001E                     ___fladd@grs:
  1152                           	opt callstack 0
  1153  00001E                     setLED@g:
  1154                           	opt callstack 0
  1155  00001E                     ___llmod@divisor:
  1156                           	opt callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x1D
  1159  00001E                     	ds	1
  1160  00001F                     ?___fldiv:
  1161                           	opt callstack 0
  1162  00001F                     uart_tasks@bytePos:
  1163                           	opt callstack 0
  1164  00001F                     ___fldiv@b:
  1165                           	opt callstack 0
  1166                           
  1167                           ; 4 bytes @ 0x1E
  1168  00001F                     	ds	1
  1169  000020                     uart_tasks@intPos:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x1F
  1173  000020                     	ds	1
  1174  000021                     uart_tasks@msgLen:
  1175                           	opt callstack 0
  1176                           
  1177                           ; 1 bytes @ 0x20
  1178  000021                     	ds	1
  1179  000022                     uart_tasks@zeroByte:
  1180                           	opt callstack 0
  1181  000022                     ___llmod@counter:
  1182                           	opt callstack 0
  1183  000022                     setLED@b:
  1184                           	opt callstack 0
  1185                           
  1186                           ; 4 bytes @ 0x21
  1187  000022                     	ds	1
  1188  000023                     uart_tasks@val:
  1189                           	opt callstack 0
  1190  000023                     ___fldiv@a:
  1191                           	opt callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x22
  1194  000023                     	ds	3
  1195  000026                     _setLED$284:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x25
  1199  000026                     	ds	1
  1200  000027                     ??___fldiv:
  1201                           
  1202                           ; 1 bytes @ 0x26
  1203  000027                     	ds	3
  1204  00002A                     _setLED$286:
  1205                           	opt callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x29
  1208  00002A                     	ds	1
  1209  00002B                     ___fldiv@rem:
  1210                           	opt callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x2A
  1213  00002B                     	ds	3
  1214  00002E                     _setLED$288:
  1215                           	opt callstack 0
  1216                           
  1217                           ; 4 bytes @ 0x2D
  1218  00002E                     	ds	1
  1219  00002F                     ___fldiv@sign:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 1 bytes @ 0x2E
  1223  00002F                     	ds	1
  1224  000030                     ___fldiv@new_exp:
  1225                           	opt callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x2F
  1228  000030                     	ds	2
  1229  000032                     _setLED$283:
  1230                           	opt callstack 0
  1231  000032                     ___fldiv@grs:
  1232                           	opt callstack 0
  1233                           
  1234                           ; 4 bytes @ 0x31
  1235  000032                     	ds	4
  1236  000036                     ___fldiv@bexp:
  1237                           	opt callstack 0
  1238  000036                     _setLED$285:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 4 bytes @ 0x35
  1242  000036                     	ds	1
  1243  000037                     ___fldiv@aexp:
  1244                           	opt callstack 0
  1245                           
  1246                           ; 1 bytes @ 0x36
  1247  000037                     	ds	1
  1248  000038                     ?_floorf:
  1249                           	opt callstack 0
  1250  000038                     ?___flmul:
  1251                           	opt callstack 0
  1252  000038                     ___flmul@b:
  1253                           	opt callstack 0
  1254  000038                     floorf@x:
  1255                           	opt callstack 0
  1256                           
  1257                           ; 4 bytes @ 0x37
  1258  000038                     	ds	2
  1259  00003A                     _setLED$287:
  1260                           	opt callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x39
  1263  00003A                     	ds	2
  1264  00003C                     ??_floorf:
  1265  00003C                     ___flmul@a:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x3B
  1269  00003C                     	ds	2
  1270  00003E                     setLED@sr:
  1271                           	opt callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x3D
  1274  00003E                     	ds	2
  1275  000040                     ??___flmul:
  1276                           
  1277                           ; 1 bytes @ 0x3F
  1278  000040                     	ds	2
  1279  000042                     setLED@sg:
  1280                           	opt callstack 0
  1281  000042                     floorf@m:
  1282                           	opt callstack 0
  1283                           
  1284                           ; 4 bytes @ 0x41
  1285  000042                     	ds	2
  1286  000044                     ___flmul@sign:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 1 bytes @ 0x43
  1290  000044                     	ds	1
  1291  000045                     ___flmul@aexp:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 1 bytes @ 0x44
  1295  000045                     	ds	1
  1296  000046                     floorf@e:
  1297                           	opt callstack 0
  1298  000046                     setLED@sb:
  1299                           	opt callstack 0
  1300  000046                     ___flmul@grs:
  1301                           	opt callstack 0
  1302                           
  1303                           ; 4 bytes @ 0x45
  1304  000046                     	ds	2
  1305  000048                     floorf@u:
  1306                           	opt callstack 0
  1307                           
  1308                           ; 4 bytes @ 0x47
  1309  000048                     	ds	2
  1310  00004A                     ___flmul@bexp:
  1311                           	opt callstack 0
  1312                           
  1313                           ; 1 bytes @ 0x49
  1314  00004A                     	ds	1
  1315  00004B                     ___flmul@prod:
  1316                           	opt callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x4A
  1319  00004B                     	ds	4
  1320  00004F                     ___flmul@temp:
  1321                           	opt callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x4E
  1324  00004F                     	ds	2
  1325  000051                     ?___flsub:
  1326                           	opt callstack 0
  1327  000051                     ___flge@ff1:
  1328                           	opt callstack 0
  1329  000051                     ___flsub@b:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 4 bytes @ 0x50
  1333  000051                     	ds	4
  1334  000055                     ___flge@ff2:
  1335                           	opt callstack 0
  1336  000055                     ___flsub@a:
  1337                           	opt callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x54
  1340  000055                     	ds	4
  1341  000059                     ??___flge:
  1342                           
  1343                           ; 1 bytes @ 0x58
  1344  000059                     	ds	4
  1345  00005D                     ?_vfpfcnvrt:
  1346                           	opt callstack 0
  1347  00005D                     vfpfcnvrt@fp:
  1348                           	opt callstack 0
  1349                           
  1350                           ; 1 bytes @ 0x5C
  1351  00005D                     	ds	1
  1352  00005E                     vfpfcnvrt@fmt:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 1 bytes @ 0x5D
  1356  00005E                     	ds	1
  1357  00005F                     vfpfcnvrt@ap:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 1 bytes @ 0x5E
  1361  00005F                     	ds	1
  1362  000060                     
  1363                           ; 1 bytes @ 0x5F
  1364 ;;
  1365 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1366 ;;
  1367 ;; *************** function _main *****************
  1368 ;; Defined at:
  1369 ;;		line 207 in file "main.c"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;		None
  1374 ;; Return value:  Size  Location     Type
  1375 ;;                  1    wreg      void 
  1376 ;; Registers used:
  1377 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1385 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1386 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1387 ;;Total ram usage:        2 bytes
  1388 ;; Hardware stack levels required when called:    9
  1389 ;; This function calls:
  1390 ;;		_lcd_init
  1391 ;;		_lcd_print
  1392 ;;		_main_loop
  1393 ;;		_uart_init
  1394 ;; This function is called by:
  1395 ;;		Startup code after reset
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           	psect	text0
  1400  004800                     __ptext0:
  1401                           	opt callstack 0
  1402  004800                     _main:
  1403                           	opt callstack 22
  1404                           
  1405                           ;main.c: 208:     TRISA = 0b00000000;
  1406                           
  1407                           ;incstack = 0
  1408  004800  0E00               	movlw	0
  1409  004802  6EC2               	movwf	194,c	;volatile
  1410                           
  1411                           ;main.c: 209:     PORTA = 0b00000000;
  1412  004804  0E00               	movlw	0
  1413  004806  6ECA               	movwf	202,c	;volatile
  1414                           
  1415                           ;main.c: 210:     ANSELA = 0b00000000;
  1416  004808  0E00               	movlw	0
  1417  00480A  013A               	movlb	58	; () banked
  1418  00480C  6F40               	movwf	64,b	;volatile
  1419                           
  1420                           ;main.c: 211:     WPUA = 0b00000000;
  1421  00480E  0E00               	movlw	0
  1422  004810  6F41               	movwf	65,b	;volatile
  1423                           
  1424                           ; BSR set to: 58
  1425                           ;main.c: 212:     INLVLA = 0b11111111;
  1426  004812  6944               	setf	68,b	;volatile
  1427                           
  1428                           ; BSR set to: 58
  1429                           ;main.c: 213:     SLRCONA = 0b11111111;
  1430  004814  6943               	setf	67,b	;volatile
  1431                           
  1432                           ;main.c: 214:     ODCONA = 0b00000000;
  1433  004816  0E00               	movlw	0
  1434  004818  6F42               	movwf	66,b	;volatile
  1435                           
  1436                           ;main.c: 216:     TRISB = 0b11001110;
  1437  00481A  0ECE               	movlw	206
  1438  00481C  6EC3               	movwf	195,c	;volatile
  1439                           
  1440                           ;main.c: 217:     PORTB = 0b00010000;
  1441  00481E  0E10               	movlw	16
  1442  004820  6ECB               	movwf	203,c	;volatile
  1443                           
  1444                           ;main.c: 218:     ANSELB = 0b00000000;
  1445  004822  0E00               	movlw	0
  1446  004824  6F50               	movwf	80,b	;volatile
  1447                           
  1448                           ;main.c: 219:     WPUB = 0b11000000;
  1449  004826  0EC0               	movlw	192
  1450  004828  6F51               	movwf	81,b	;volatile
  1451                           
  1452                           ; BSR set to: 58
  1453                           ;main.c: 220:     INLVLB = 0b11111111;
  1454  00482A  6954               	setf	84,b	;volatile
  1455                           
  1456                           ; BSR set to: 58
  1457                           ;main.c: 221:     SLRCONB = 0b11111111;
  1458  00482C  6953               	setf	83,b	;volatile
  1459                           
  1460                           ;main.c: 222:     ODCONB = 0b00000000;
  1461  00482E  0E00               	movlw	0
  1462  004830  6F52               	movwf	82,b	;volatile
  1463                           
  1464                           ;main.c: 224:     TRISC = 0b01101110;
  1465  004832  0E6E               	movlw	110
  1466  004834  6EC4               	movwf	196,c	;volatile
  1467                           
  1468                           ;main.c: 225:     PORTC = 0b00000000;
  1469  004836  0E00               	movlw	0
  1470  004838  6ECC               	movwf	204,c	;volatile
  1471                           
  1472                           ;main.c: 226:     ANSELC = 0b01100000;
  1473  00483A  0E60               	movlw	96
  1474  00483C  6F60               	movwf	96,b	;volatile
  1475                           
  1476                           ;main.c: 227:     WPUC = 0b00001110;
  1477  00483E  0E0E               	movlw	14
  1478  004840  6F61               	movwf	97,b	;volatile
  1479                           
  1480                           ; BSR set to: 58
  1481                           ;main.c: 228:     INLVLC = 0b11111111;
  1482  004842  6964               	setf	100,b	;volatile
  1483                           
  1484                           ; BSR set to: 58
  1485                           ;main.c: 229:     SLRCONC = 0b11111111;
  1486  004844  6963               	setf	99,b	;volatile
  1487                           
  1488                           ;main.c: 230:     ODCONC = 0b00000000;
  1489  004846  0E00               	movlw	0
  1490  004848  6F62               	movwf	98,b	;volatile
  1491                           
  1492                           ;main.c: 232:     TRISD = 0b00001111;
  1493  00484A  0E0F               	movlw	15
  1494  00484C  6EC5               	movwf	197,c	;volatile
  1495                           
  1496                           ;main.c: 233:     PORTD = 0b00000000;
  1497  00484E  0E00               	movlw	0
  1498  004850  6ECD               	movwf	205,c	;volatile
  1499                           
  1500                           ;main.c: 234:     ANSELD = 0b00001000;
  1501  004852  0E08               	movlw	8
  1502  004854  6F70               	movwf	112,b	;volatile
  1503                           
  1504                           ;main.c: 235:     WPUD = 0b00000111;
  1505  004856  0E07               	movlw	7
  1506  004858  6F71               	movwf	113,b	;volatile
  1507                           
  1508                           ; BSR set to: 58
  1509                           ;main.c: 236:     INLVLD = 0b11111111;
  1510  00485A  6974               	setf	116,b	;volatile
  1511                           
  1512                           ; BSR set to: 58
  1513                           ;main.c: 237:     SLRCOND = 0b11111111;
  1514  00485C  6973               	setf	115,b	;volatile
  1515                           
  1516                           ;main.c: 238:     ODCOND = 0b00000000;
  1517  00485E  0E00               	movlw	0
  1518  004860  6F72               	movwf	114,b	;volatile
  1519                           
  1520                           ;main.c: 240:     TRISE = 0b11111000;
  1521  004862  0EF8               	movlw	248
  1522  004864  6EC6               	movwf	198,c	;volatile
  1523                           
  1524                           ;main.c: 241:     PORTE = 0b00000100;
  1525  004866  0E04               	movlw	4
  1526  004868  6ECE               	movwf	206,c	;volatile
  1527                           
  1528                           ;main.c: 242:     ANSELE = 0b11110000;
  1529  00486A  0EF0               	movlw	240
  1530  00486C  6F80               	movwf	128,b	;volatile
  1531                           
  1532                           ;main.c: 243:     WPUE = 0b00001000;
  1533  00486E  0E08               	movlw	8
  1534  004870  6F81               	movwf	129,b	;volatile
  1535                           
  1536                           ; BSR set to: 58
  1537                           ;main.c: 244:     INLVLE = 0b11111111;
  1538  004872  6984               	setf	132,b	;volatile
  1539                           
  1540                           ; BSR set to: 58
  1541                           ;main.c: 245:     SLRCONE = 0b11111111;
  1542  004874  6983               	setf	131,b	;volatile
  1543                           
  1544                           ;main.c: 246:     ODCONE = 0b00000000;
  1545  004876  0E00               	movlw	0
  1546  004878  6F82               	movwf	130,b	;volatile
  1547                           
  1548                           ;main.c: 248:     PMD0 = 0b01111111;
  1549  00487A  0E7F               	movlw	127
  1550  00487C  0139               	movlb	57	; () banked
  1551  00487E  6FC0               	movwf	192,b	;volatile
  1552                           
  1553                           ;main.c: 249:     PMD1 = 0b11111011;
  1554  004880  0EFB               	movlw	251
  1555  004882  6FC1               	movwf	193,b	;volatile
  1556                           
  1557                           ;main.c: 250:     PMD2 = 0b01000111;
  1558  004884  0E47               	movlw	71
  1559  004886  6FC2               	movwf	194,b	;volatile
  1560                           
  1561                           ;main.c: 251:     PMD3 = 0b01010001;
  1562  004888  0E51               	movlw	81
  1563  00488A  6FC3               	movwf	195,b	;volatile
  1564                           
  1565                           ;main.c: 252:     PMD4 = 0b11100000;
  1566  00488C  0EE0               	movlw	224
  1567  00488E  6FC4               	movwf	196,b	;volatile
  1568                           
  1569                           ;main.c: 253:     PMD5 = 0b00100111;
  1570  004890  0E27               	movlw	39
  1571  004892  6FC5               	movwf	197,b	;volatile
  1572                           
  1573                           ;main.c: 254:     PMD6 = 0b00111111;
  1574  004894  0E3F               	movlw	63
  1575  004896  6FC6               	movwf	198,b	;volatile
  1576                           
  1577                           ;main.c: 255:     PMD7 = 0b00000000;
  1578  004898  0E00               	movlw	0
  1579  00489A  6FC7               	movwf	199,b	;volatile
  1580                           
  1581                           ;main.c: 257:     ADCON0 = 0b10000100;
  1582  00489C  0E84               	movlw	132
  1583  00489E  013E               	movlb	62	; () banked
  1584  0048A0  6FF8               	movwf	248,b	;volatile
  1585                           
  1586                           ;main.c: 258:     ADCON1 = 0b00000000;
  1587  0048A2  0E00               	movlw	0
  1588  0048A4  6FF9               	movwf	249,b	;volatile
  1589                           
  1590                           ;main.c: 259:     ADCON2 = 0b00000000;
  1591  0048A6  0E00               	movlw	0
  1592  0048A8  6FFA               	movwf	250,b	;volatile
  1593                           
  1594                           ;main.c: 260:     ADCON3 = 0b00000000;
  1595  0048AA  0E00               	movlw	0
  1596  0048AC  6FFB               	movwf	251,b	;volatile
  1597                           
  1598                           ;main.c: 261:     ADCLK = 0b00011111;
  1599  0048AE  0E1F               	movlw	31
  1600  0048B0  6FFF               	movwf	255,b	;volatile
  1601                           
  1602                           ;main.c: 262:     ADREF = 0b00000000;
  1603  0048B2  0E00               	movlw	0
  1604  0048B4  6FFD               	movwf	253,b	;volatile
  1605                           
  1606                           ;main.c: 264:     RC7PPS = 0b001010;
  1607  0048B6  0E0A               	movlw	10
  1608  0048B8  013A               	movlb	58	; () banked
  1609  0048BA  6F17               	movwf	23,b	;volatile
  1610                           
  1611                           ;main.c: 265:     RD4PPS = 0b001011;
  1612  0048BC  0E0B               	movlw	11
  1613  0048BE  6F1C               	movwf	28,b	;volatile
  1614                           
  1615                           ;main.c: 266:     RD5PPS = 0b001100;
  1616  0048C0  0E0C               	movlw	12
  1617  0048C2  6F1D               	movwf	29,b	;volatile
  1618                           
  1619                           ;main.c: 267:     RD6PPS = 0b001110;
  1620  0048C4  0E0E               	movlw	14
  1621  0048C6  6F1E               	movwf	30,b	;volatile
  1622                           
  1623                           ;main.c: 268:     RD7PPS = 0b010000;
  1624  0048C8  0E10               	movlw	16
  1625  0048CA  6F1F               	movwf	31,b	;volatile
  1626                           
  1627                           ;main.c: 270:     CCPTMRS0 = 0b01010101;
  1628  0048CC  0E55               	movlw	85
  1629  0048CE  013F               	movlb	63	; () banked
  1630  0048D0  6F5E               	movwf	94,b	;volatile
  1631                           
  1632                           ;main.c: 271:     CCP2CON = 0b10001111;
  1633  0048D2  0E8F               	movlw	143
  1634  0048D4  6E7A               	movwf	122,c	;volatile
  1635                           
  1636                           ;main.c: 272:     CCP3CON = 0b10001111;
  1637  0048D6  0E8F               	movlw	143
  1638  0048D8  6E76               	movwf	118,c	;volatile
  1639                           
  1640                           ;main.c: 273:     CCP4CON = 0b10001111;
  1641  0048DA  0E8F               	movlw	143
  1642  0048DC  6E72               	movwf	114,c	;volatile
  1643                           
  1644                           ;main.c: 274:     PWM6CON = 0b10000000;
  1645  0048DE  0E80               	movlw	128
  1646  0048E0  6E6A               	movwf	106,c	;volatile
  1647                           
  1648                           ;main.c: 275:     PWM8CON = 0b10000000;
  1649  0048E2  0E80               	movlw	128
  1650  0048E4  6E62               	movwf	98,c	;volatile
  1651                           
  1652                           ; BSR set to: 63
  1653                           ;main.c: 277:     T2PR = 255;
  1654  0048E6  68AB               	setf	171,c	;volatile
  1655                           
  1656                           ;main.c: 278:     T2CLK = 0b0001;
  1657  0048E8  0E01               	movlw	1
  1658  0048EA  6EAE               	movwf	174,c	;volatile
  1659                           
  1660                           ;main.c: 279:     T2CON = 0b10010000;
  1661  0048EC  0E90               	movlw	144
  1662  0048EE  6EAC               	movwf	172,c	;volatile
  1663                           
  1664                           ;main.c: 281:     CCPR2L = 0;
  1665  0048F0  0E00               	movlw	0
  1666  0048F2  6E78               	movwf	120,c	;volatile
  1667                           
  1668                           ;main.c: 282:     CCPR2H = 0;
  1669  0048F4  0E00               	movlw	0
  1670  0048F6  6E79               	movwf	121,c	;volatile
  1671                           
  1672                           ;main.c: 283:     CCPR3L = 0;
  1673  0048F8  0E00               	movlw	0
  1674  0048FA  6E74               	movwf	116,c	;volatile
  1675                           
  1676                           ;main.c: 284:     CCPR3H = 0;
  1677  0048FC  0E00               	movlw	0
  1678  0048FE  6E75               	movwf	117,c	;volatile
  1679                           
  1680                           ;main.c: 285:     CCPR4L = 0;
  1681  004900  0E00               	movlw	0
  1682  004902  6E70               	movwf	112,c	;volatile
  1683                           
  1684                           ;main.c: 286:     CCPR4H = 0;
  1685  004904  0E00               	movlw	0
  1686  004906  6E71               	movwf	113,c	;volatile
  1687                           
  1688                           ; BSR set to: 63
  1689                           ;main.c: 287:     PWM6DCH = 255;
  1690  004908  6869               	setf	105,c	;volatile
  1691                           
  1692                           ; BSR set to: 63
  1693                           ;main.c: 288:     PWM6DCL = 255;
  1694  00490A  6868               	setf	104,c	;volatile
  1695                           
  1696                           ; BSR set to: 63
  1697                           ;main.c: 289:     PWM8DCH = 255;
  1698  00490C  6861               	setf	97,c	;volatile
  1699                           
  1700                           ; BSR set to: 63
  1701                           ;main.c: 290:     PWM8DCL = 255;
  1702  00490E  6860               	setf	96,c	;volatile
  1703                           
  1704                           ; BSR set to: 63
  1705                           ;main.c: 292:     LATB4 = 0;
  1706  004910  98BB               	bcf	16315,4,c	;volatile
  1707                           
  1708                           ; BSR set to: 63
  1709                           ;main.c: 293:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1710  004912  0E05               	movlw	5
  1711  004914  0100               	movlb	0	; () banked
  1712  004916  6FD0               	movwf	(??_main+1)& (0+255),b
  1713  004918  0E0F               	movlw	15
  1714  00491A  6FCF               	movwf	??_main& (0+255),b
  1715  00491C  0EF1               	movlw	241
  1716  00491E                     u7247:
  1717  00491E  2EE8               	decfsz	wreg,f,c
  1718  004920  D7FE               	bra	u7247
  1719  004922  2FCF               	decfsz	??_main& (0+255),f,b
  1720  004924  D7FC               	bra	u7247
  1721  004926  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1722  004928  D7FA               	bra	u7247
  1723                           
  1724                           ;main.c: 294:     LATB4 = 1;
  1725  00492A  88BB               	bsf	16315,4,c	;volatile
  1726                           
  1727                           ;main.c: 296:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1728  00492C  0E05               	movlw	5
  1729  00492E  0100               	movlb	0	; () banked
  1730  004930  6FD0               	movwf	(??_main+1)& (0+255),b
  1731  004932  0E0F               	movlw	15
  1732  004934  6FCF               	movwf	??_main& (0+255),b
  1733  004936  0EF1               	movlw	241
  1734  004938                     u7257:
  1735  004938  2EE8               	decfsz	wreg,f,c
  1736  00493A  D7FE               	bra	u7257
  1737  00493C  2FCF               	decfsz	??_main& (0+255),f,b
  1738  00493E  D7FC               	bra	u7257
  1739  004940  2FD0               	decfsz	(??_main+1)& (0+255),f,b
  1740  004942  D7FA               	bra	u7257
  1741                           
  1742                           ;main.c: 297:     lcd_init(1, 0, 0, 0, 1);
  1743  004944  0E00               	movlw	0
  1744  004946  6E05               	movwf	lcd_init@shift^0,c
  1745  004948  0E00               	movlw	0
  1746  00494A  6E06               	movwf	lcd_init@cursor^0,c
  1747  00494C  0E00               	movlw	0
  1748  00494E  6E07               	movwf	lcd_init@cursorblink^0,c
  1749  004950  0E01               	movlw	1
  1750  004952  6E08               	movwf	lcd_init@on^0,c
  1751  004954  0E01               	movlw	1
  1752  004956  ECC9  F02A         	call	_lcd_init
  1753                           
  1754                           ;main.c: 298:     lcd_print("Hello World!");
  1755  00495A  0E6E               	movlw	low STR_6
  1756  00495C  6E05               	movwf	lcd_print@string^0,c
  1757  00495E  5005               	movf	lcd_print@string^0,w,c
  1758  004960  A4D8               	btfss	status,2,c
  1759  004962  0E20               	movlw	high __smallconst
  1760  004964  6E06               	movwf	(lcd_print@string+1)^0,c
  1761  004966  ECB4  F029         	call	_lcd_print	;wreg free
  1762                           
  1763                           ;main.c: 300:     uart_init();
  1764  00496A  EC19  F029         	call	_uart_init	;wreg free
  1765  00496E                     l5716:
  1766  00496E  ECFA  F015         	call	_main_loop	;wreg free
  1767  004972  D7FD               	goto	l5716
  1768  004974                     __end_of_main:
  1769                           	opt callstack 0
  1770                           
  1771 ;; *************** function _uart_init *****************
  1772 ;; Defined at:
  1773 ;;		line 16 in file "uart.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg, status,2
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/3F
  1784 ;;		On exit  : 3F/3A
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_main
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text1
  1801  005232                     __ptext1:
  1802                           	opt callstack 0
  1803  005232                     _uart_init:
  1804                           	opt callstack 30
  1805                           
  1806                           ;uart.c: 17:     DMA1CON1 = 0b01000000;
  1807                           
  1808                           ;incstack = 0
  1809  005232  0E40               	movlw	64
  1810  005234  013B               	movlb	59	; () banked
  1811  005236  6FFD               	movwf	253,b	;volatile
  1812                           
  1813                           ;uart.c: 18:     DMA1SSZH = 0x00;
  1814  005238  0E00               	movlw	0
  1815  00523A  6FF8               	movwf	248,b	;volatile
  1816                           
  1817                           ;uart.c: 19:     DMA1SSZL = 0x01;
  1818  00523C  0E01               	movlw	1
  1819  00523E  6FF7               	movwf	247,b	;volatile
  1820                           
  1821                           ;uart.c: 20:     DMA1SSAU = 0x00;
  1822  005240  0E00               	movlw	0
  1823  005242  6FFB               	movwf	251,b	;volatile
  1824                           
  1825                           ;uart.c: 21:     DMA1SSAH = 0x3d;
  1826  005244  0E3D               	movlw	61
  1827  005246  6FFA               	movwf	250,b	;volatile
  1828                           
  1829                           ;uart.c: 22:     DMA1SSAL = 0xe8;
  1830  005248  0EE8               	movlw	232
  1831  00524A  6FF9               	movwf	249,b	;volatile
  1832                           
  1833                           ;uart.c: 23:     DMA1DSZH = 0x01;
  1834  00524C  0E01               	movlw	1
  1835  00524E  6FEF               	movwf	239,b	;volatile
  1836                           
  1837                           ;uart.c: 24:     DMA1DSZL = 0x00;
  1838  005250  0E00               	movlw	0
  1839  005252  6FEE               	movwf	238,b	;volatile
  1840                           
  1841                           ;uart.c: 25:     DMA1DSAH = 0x01;
  1842  005254  0E01               	movlw	1
  1843  005256  6FF1               	movwf	241,b	;volatile
  1844                           
  1845                           ;uart.c: 26:     DMA1DSAL = 0x00;
  1846  005258  0E00               	movlw	0
  1847  00525A  6FF0               	movwf	240,b	;volatile
  1848                           
  1849                           ;uart.c: 27:     DMA1SIRQ = 0x1b;
  1850  00525C  0E1B               	movlw	27
  1851  00525E  6FFF               	movwf	255,b	;volatile
  1852                           
  1853                           ;uart.c: 28:     DMA1AIRQ = 0x1d;
  1854  005260  0E1D               	movlw	29
  1855  005262  6FFE               	movwf	254,b	;volatile
  1856                           
  1857                           ;uart.c: 29:     DMA1CON0 = 0b11000100;
  1858  005264  0EC4               	movlw	196
  1859  005266  6FFC               	movwf	252,b	;volatile
  1860                           
  1861                           ;uart.c: 31:     DMA2CON1 = 0b00000011;
  1862  005268  0E03               	movlw	3
  1863  00526A  6FDD               	movwf	221,b	;volatile
  1864                           
  1865                           ;uart.c: 32:     DMA2SSZH = 0x00;
  1866  00526C  0E00               	movlw	0
  1867  00526E  6FD8               	movwf	216,b	;volatile
  1868                           
  1869                           ;uart.c: 33:     DMA2SSZL = 0x01;
  1870  005270  0E01               	movlw	1
  1871  005272  6FD7               	movwf	215,b	;volatile
  1872                           
  1873                           ;uart.c: 34:     DMA2SSAU = 0x00;
  1874  005274  0E00               	movlw	0
  1875  005276  6FDB               	movwf	219,b	;volatile
  1876                           
  1877                           ;uart.c: 35:     DMA2SSAH = 0x02;
  1878  005278  0E02               	movlw	2
  1879  00527A  6FDA               	movwf	218,b	;volatile
  1880                           
  1881                           ;uart.c: 36:     DMA2SSAL = 0x00;
  1882  00527C  0E00               	movlw	0
  1883  00527E  6FD9               	movwf	217,b	;volatile
  1884                           
  1885                           ;uart.c: 37:     DMA2DSZH = 0x00;
  1886  005280  0E00               	movlw	0
  1887  005282  6FCF               	movwf	207,b	;volatile
  1888                           
  1889                           ;uart.c: 38:     DMA2DSZL = 0x01;
  1890  005284  0E01               	movlw	1
  1891  005286  6FCE               	movwf	206,b	;volatile
  1892                           
  1893                           ;uart.c: 39:     DMA2DSAH = 0x3d;
  1894  005288  0E3D               	movlw	61
  1895  00528A  6FD1               	movwf	209,b	;volatile
  1896                           
  1897                           ;uart.c: 40:     DMA2DSAL = 0xea;
  1898  00528C  0EEA               	movlw	234
  1899  00528E  6FD0               	movwf	208,b	;volatile
  1900                           
  1901                           ;uart.c: 41:     DMA2SIRQ = 0x1c;
  1902  005290  0E1C               	movlw	28
  1903  005292  6FDF               	movwf	223,b	;volatile
  1904                           
  1905                           ;uart.c: 42:     DMA2AIRQ = 0x1d;
  1906  005294  0E1D               	movlw	29
  1907  005296  6FDE               	movwf	222,b	;volatile
  1908                           
  1909                           ;uart.c: 43:     DMA2CON0 = 0b00000100;
  1910  005298  0E04               	movlw	4
  1911  00529A  6FDC               	movwf	220,b	;volatile
  1912                           
  1913                           ;uart.c: 45:     PRLOCK = 0x55;
  1914  00529C  0E55               	movlw	85
  1915  00529E  0139               	movlb	57	; () banked
  1916  0052A0  6FEF               	movwf	239,b	;volatile
  1917                           
  1918                           ;uart.c: 46:     PRLOCK = 0xAA;
  1919  0052A2  0EAA               	movlw	170
  1920  0052A4  6FEF               	movwf	239,b	;volatile
  1921                           
  1922                           ; BSR set to: 57
  1923                           ;uart.c: 47:     PRLOCKbits.PRLOCKED = 1;
  1924  0052A6  81EF               	bsf	239,0,b	;volatile
  1925                           
  1926                           ;uart.c: 49:     U1BRGH = 0;
  1927  0052A8  0E00               	movlw	0
  1928  0052AA  013D               	movlb	61	; () banked
  1929  0052AC  6FF6               	movwf	246,b	;volatile
  1930                           
  1931                           ;uart.c: 50:     U1BRGL = 34;
  1932  0052AE  0E22               	movlw	34
  1933  0052B0  6FF5               	movwf	245,b	;volatile
  1934                           
  1935                           ;uart.c: 51:     U1RXPPS = 0b001001;
  1936  0052B2  0E09               	movlw	9
  1937  0052B4  013A               	movlb	58	; () banked
  1938  0052B6  6FE5               	movwf	229,b	;volatile
  1939                           
  1940                           ;uart.c: 52:     U1CON0 = 0b00110000;
  1941  0052B8  0E30               	movlw	48
  1942  0052BA  013D               	movlb	61	; () banked
  1943  0052BC  6FF2               	movwf	242,b	;volatile
  1944                           
  1945                           ;uart.c: 53:     U1CON1 = 0b10000000;
  1946  0052BE  0E80               	movlw	128
  1947  0052C0  6FF3               	movwf	243,b	;volatile
  1948                           
  1949                           ;uart.c: 54:     U1CON2 = 0b00001000;
  1950  0052C2  0E08               	movlw	8
  1951  0052C4  6FF4               	movwf	244,b	;volatile
  1952                           
  1953                           ;uart.c: 55:     RB0PPS = 0b010011;
  1954  0052C6  0E13               	movlw	19
  1955  0052C8  013A               	movlb	58	; () banked
  1956  0052CA  6F08               	movwf	8,b	;volatile
  1957                           
  1958                           ; BSR set to: 58
  1959  0052CC  0012               	return		;funcret
  1960  0052CE                     __end_of_uart_init:
  1961                           	opt callstack 0
  1962                           
  1963 ;; *************** function _main_loop *****************
  1964 ;; Defined at:
  1965 ;;		line 106 in file "main.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;		None
  1968 ;; Auto vars:     Size  Location     Type
  1969 ;;  bat_percent     4   50[BANK4 ] float 
  1970 ;;  batmsg         16    0[BANK4 ] unsigned char [16]
  1971 ;;  batlvl          2   38[BANK4 ] unsigned short 
  1972 ;;  rel             4   46[BANK4 ] long 
  1973 ;;  sample          4   42[BANK4 ] long 
  1974 ;;  lastAvg         4   16[BANK4 ] unsigned long 
  1975 ;;  res             2   40[BANK4 ] short 
  1976 ;;  absRes          2   36[BANK4 ] short 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;                  1    wreg      void 
  1979 ;; Registers used:
  1980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/3A
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1987 ;;      Locals:         0       0       0      54       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1988 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;      Totals:         0       6       0      54       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;Total ram usage:       60 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    8
  1993 ;; This function calls:
  1994 ;;		___awdiv
  1995 ;;		___fladd
  1996 ;;		___fldiv
  1997 ;;		___flge
  1998 ;;		___flmul
  1999 ;;		___lldiv
  2000 ;;		___llmod
  2001 ;;		___lmul
  2002 ;;		___xxtofl
  2003 ;;		_lcd_print
  2004 ;;		_lcd_set_data_addr
  2005 ;;		_setLED
  2006 ;;		_sprintf
  2007 ;;		_uart_send
  2008 ;;		_uart_tasks
  2009 ;; This function is called by:
  2010 ;;		_main
  2011 ;; This function uses a non-reentrant model
  2012 ;;
  2013                           
  2014                           	psect	text2
  2015  002BF4                     __ptext2:
  2016                           	opt callstack 0
  2017  002BF4                     _main_loop:
  2018                           	opt callstack 22
  2019                           
  2020                           ;main.c: 107:     static uint32_t counter = 0;;main.c: 108:     static uint32_t sum = 0;
      +                          ;main.c: 109:     static uint16_t last[20];;main.c: 110:     static uint32_t lastSum = 0
      +                          ;;main.c: 113:     static int16_t pos = 0;;main.c: 115:     ADPCH = 0b010101;
  2021                           
  2022                           ; BSR set to: 58
  2023                           ;incstack = 0
  2024  002BF4  0E15               	movlw	21
  2025  002BF6  013E               	movlb	62	; () banked
  2026  002BF8  6FF1               	movwf	241,b	;volatile
  2027                           
  2028                           ; BSR set to: 62
  2029                           ;main.c: 116:     ADCON0bits.GO = 1;
  2030  002BFA  81F8               	bsf	248,0,b	;volatile
  2031                           
  2032                           ;main.c: 117:     while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000.0))
      +                          );
  2033  002BFC  D004               	goto	l5546
  2034  002BFE                     l5544:
  2035                           
  2036                           ; BSR set to: 62
  2037  002BFE  0E05               	movlw	5
  2038  002C00                     u7267:
  2039  002C00  2EE8               	decfsz	wreg,f,c
  2040  002C02  D7FE               	bra	u7267
  2041  002C04  F000               	nop	
  2042  002C06                     l5546:
  2043  002C06  013E               	movlb	62	; () banked
  2044  002C08  B1F8               	btfsc	248,0,b	;volatile
  2045  002C0A  D7F9               	goto	l5544
  2046                           
  2047                           ; BSR set to: 62
  2048                           ;main.c: 118:     int16_t res = ((ADRESH << 8) | ADRESL) - 1545;
  2049  002C0C  51EF               	movf	239,w,b	;volatile
  2050  002C0E  006F FBC0  F0C9    	movff	16112,??_main_loop	;volatile
  2051  002C14  0100               	movlb	0	; () banked
  2052  002C16  6BCA               	clrf	(??_main_loop+1)& (0+255),b
  2053  002C18  0060  F324  F0CA   	movff	??_main_loop,??_main_loop+1
  2054  002C1E  6BC9               	clrf	??_main_loop& (0+255),b
  2055  002C20  13C9               	iorwf	??_main_loop& (0+255),f,b
  2056  002C22  0E00               	movlw	0
  2057  002C24  13CA               	iorwf	(??_main_loop+1)& (0+255),f,b
  2058  002C26  0EF7               	movlw	247
  2059  002C28  25C9               	addwf	??_main_loop& (0+255),w,b
  2060  002C2A  0104               	movlb	4	; () banked
  2061  002C2C  6FB0               	movwf	main_loop@res& (0+255),b
  2062  002C2E  0EF9               	movlw	249
  2063  002C30  0100               	movlb	0	; () banked
  2064  002C32  21CA               	addwfc	(??_main_loop+1)& (0+255),w,b
  2065  002C34  0104               	movlb	4	; () banked
  2066  002C36  6FB1               	movwf	(main_loop@res+1)& (0+255),b
  2067                           
  2068                           ;main.c: 119:     int16_t absRes = res < 0 ? -res : res;
  2069  002C38  BFB1               	btfsc	(main_loop@res+1)& (0+255),7,b
  2070  002C3A  D007               	goto	l232
  2071                           
  2072                           ; BSR set to: 4
  2073  002C3C  0061  F2C0  F4AC   	movff	main_loop@res,main_loop@absRes
  2074  002C42  0061  F2C4  F4AD   	movff	main_loop@res+1,main_loop@absRes+1
  2075  002C48  D011               	goto	l5552
  2076  002C4A                     l232:
  2077                           
  2078                           ; BSR set to: 4
  2079  002C4A  0061  F2C0  F0C9   	movff	main_loop@res,??_main_loop
  2080  002C50  0061  F2C4  F0CA   	movff	main_loop@res+1,??_main_loop+1
  2081  002C56  0100               	movlb	0	; () banked
  2082  002C58  1FC9               	comf	??_main_loop& (0+255),f,b
  2083  002C5A  1FCA               	comf	(??_main_loop+1)& (0+255),f,b
  2084  002C5C  4BC9               	infsnz	??_main_loop& (0+255),f,b
  2085  002C5E  2BCA               	incf	(??_main_loop+1)& (0+255),f,b
  2086  002C60  0060  F324  F4AC   	movff	??_main_loop,main_loop@absRes
  2087  002C66  0060  F328  F4AD   	movff	??_main_loop+1,main_loop@absRes+1
  2088  002C6C                     l5552:
  2089                           
  2090                           ;main.c: 120:     sum += absRes;
  2091  002C6C  0061  F2B0  F0C9   	movff	main_loop@absRes,??_main_loop
  2092  002C72  0061  F2B4  F0CA   	movff	main_loop@absRes+1,??_main_loop+1
  2093  002C78  0E00               	movlw	0
  2094  002C7A  0100               	movlb	0	; () banked
  2095  002C7C  BFCA               	btfsc	(??_main_loop+1)& (0+255),7,b
  2096  002C7E  0EFF               	movlw	255
  2097  002C80  6FCB               	movwf	(??_main_loop+2)& (0+255),b
  2098  002C82  6FCC               	movwf	(??_main_loop+3)& (0+255),b
  2099  002C84  51C9               	movf	??_main_loop& (0+255),w,b
  2100  002C86  0104               	movlb	4	; () banked
  2101  002C88  272C               	addwf	main_loop@sum& (0+255),f,b
  2102  002C8A  0100               	movlb	0	; () banked
  2103  002C8C  51CA               	movf	(??_main_loop+1)& (0+255),w,b
  2104  002C8E  0104               	movlb	4	; () banked
  2105  002C90  232D               	addwfc	(main_loop@sum+1)& (0+255),f,b
  2106  002C92  0100               	movlb	0	; () banked
  2107  002C94  51CB               	movf	(??_main_loop+2)& (0+255),w,b
  2108  002C96  0104               	movlb	4	; () banked
  2109  002C98  232E               	addwfc	(main_loop@sum+2)& (0+255),f,b
  2110  002C9A  0100               	movlb	0	; () banked
  2111  002C9C  51CC               	movf	(??_main_loop+3)& (0+255),w,b
  2112  002C9E  0104               	movlb	4	; () banked
  2113  002CA0  232F               	addwfc	(main_loop@sum+3)& (0+255),f,b
  2114                           
  2115                           ; BSR set to: 4
  2116                           ;main.c: 122:     if (counter % 50 == 50 - 1) {
  2117  002CA2  0061  F0C0  F01A   	movff	main_loop@counter,___llmod@dividend
  2118  002CA8  0061  F0C4  F01B   	movff	main_loop@counter+1,___llmod@dividend+1
  2119  002CAE  0061  F0C8  F01C   	movff	main_loop@counter+2,___llmod@dividend+2
  2120  002CB4  0061  F0CC  F01D   	movff	main_loop@counter+3,___llmod@dividend+3
  2121  002CBA  0E32               	movlw	50
  2122  002CBC  6E1E               	movwf	___llmod@divisor^0,c
  2123  002CBE  0E00               	movlw	0
  2124  002CC0  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2125  002CC2  0E00               	movlw	0
  2126  002CC4  6E20               	movwf	(___llmod@divisor+2)^0,c
  2127  002CC6  0E00               	movlw	0
  2128  002CC8  6E21               	movwf	(___llmod@divisor+3)^0,c
  2129  002CCA  ECB5  F02B         	call	___llmod	;wreg free
  2130  002CCE  0E31               	movlw	49
  2131  002CD0  181A               	xorwf	?___llmod^0,w,c
  2132  002CD2  101B               	iorwf	(?___llmod+1)^0,w,c
  2133  002CD4  101C               	iorwf	(?___llmod+2)^0,w,c
  2134  002CD6  101D               	iorwf	(?___llmod+3)^0,w,c
  2135  002CD8  A4D8               	btfss	status,2,c
  2136  002CDA  D268               	goto	l5608
  2137                           
  2138                           ;main.c: 123:         int32_t sample = sum * 2 / 50;
  2139  002CDC  90D8               	bcf	status,0,c
  2140  002CDE  0104               	movlb	4	; () banked
  2141  002CE0  352C               	rlcf	main_loop@sum& (0+255),w,b
  2142  002CE2  6E0D               	movwf	___lldiv@dividend^0,c
  2143  002CE4  352D               	rlcf	(main_loop@sum+1)& (0+255),w,b
  2144  002CE6  6E0E               	movwf	(___lldiv@dividend+1)^0,c
  2145  002CE8  352E               	rlcf	(main_loop@sum+2)& (0+255),w,b
  2146  002CEA  6E0F               	movwf	(___lldiv@dividend+2)^0,c
  2147  002CEC  352F               	rlcf	(main_loop@sum+3)& (0+255),w,b
  2148  002CEE  6E10               	movwf	(___lldiv@dividend+3)^0,c
  2149  002CF0  0E32               	movlw	50
  2150  002CF2  6E11               	movwf	___lldiv@divisor^0,c
  2151  002CF4  0E00               	movlw	0
  2152  002CF6  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2153  002CF8  0E00               	movlw	0
  2154  002CFA  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2155  002CFC  0E00               	movlw	0
  2156  002CFE  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2157  002D00  EC40  F02A         	call	___lldiv	;wreg free
  2158  002D04  0060  F034  F4B2   	movff	?___lldiv,main_loop@sample
  2159  002D0A  0060  F038  F4B3   	movff	?___lldiv+1,main_loop@sample+1
  2160  002D10  0060  F03C  F4B4   	movff	?___lldiv+2,main_loop@sample+2
  2161  002D16  0060  F040  F4B5   	movff	?___lldiv+3,main_loop@sample+3
  2162                           
  2163                           ;main.c: 128:         sample -= 9;
  2164  002D1C  0EF7               	movlw	247
  2165  002D1E  0104               	movlb	4	; () banked
  2166  002D20  27B2               	addwf	main_loop@sample& (0+255),f,b
  2167  002D22  0EFF               	movlw	255
  2168  002D24  23B3               	addwfc	(main_loop@sample+1)& (0+255),f,b
  2169  002D26  0EFF               	movlw	255
  2170  002D28  23B4               	addwfc	(main_loop@sample+2)& (0+255),f,b
  2171  002D2A  0EFF               	movlw	255
  2172  002D2C  23B5               	addwfc	(main_loop@sample+3)& (0+255),f,b
  2173                           
  2174                           ; BSR set to: 4
  2175                           ;main.c: 129:         if (sample < 0) sample = 0;
  2176  002D2E  AFB5               	btfss	(main_loop@sample+3)& (0+255),7,b
  2177  002D30  D008               	goto	l5564
  2178                           
  2179                           ; BSR set to: 4
  2180  002D32  0E00               	movlw	0
  2181  002D34  6FB2               	movwf	main_loop@sample& (0+255),b
  2182  002D36  0E00               	movlw	0
  2183  002D38  6FB3               	movwf	(main_loop@sample+1)& (0+255),b
  2184  002D3A  0E00               	movlw	0
  2185  002D3C  6FB4               	movwf	(main_loop@sample+2)& (0+255),b
  2186  002D3E  0E00               	movlw	0
  2187  002D40  6FB5               	movwf	(main_loop@sample+3)& (0+255),b
  2188  002D42                     l5564:
  2189                           
  2190                           ; BSR set to: 4
  2191                           ;main.c: 131:         uint32_t lastAvg = lastSum / 20;
  2192  002D42  0061  F0A0  F00D   	movff	main_loop@lastSum,___lldiv@dividend
  2193  002D48  0061  F0A4  F00E   	movff	main_loop@lastSum+1,___lldiv@dividend+1
  2194  002D4E  0061  F0A8  F00F   	movff	main_loop@lastSum+2,___lldiv@dividend+2
  2195  002D54  0061  F0AC  F010   	movff	main_loop@lastSum+3,___lldiv@dividend+3
  2196  002D5A  0E14               	movlw	20
  2197  002D5C  6E11               	movwf	___lldiv@divisor^0,c
  2198  002D5E  0E00               	movlw	0
  2199  002D60  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2200  002D62  0E00               	movlw	0
  2201  002D64  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2202  002D66  0E00               	movlw	0
  2203  002D68  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2204  002D6A  EC40  F02A         	call	___lldiv	;wreg free
  2205  002D6E  0060  F034  F498   	movff	?___lldiv,main_loop@lastAvg
  2206  002D74  0060  F038  F499   	movff	?___lldiv+1,main_loop@lastAvg+1
  2207  002D7A  0060  F03C  F49A   	movff	?___lldiv+2,main_loop@lastAvg+2
  2208  002D80  0060  F040  F49B   	movff	?___lldiv+3,main_loop@lastAvg+3
  2209                           
  2210                           ;main.c: 134:         int32_t rel = (sample - lastAvg) * soundAmplify[volume_level];
  2211  002D86  0104               	movlb	4	; () banked
  2212  002D88  5198               	movf	main_loop@lastAvg& (0+255),w,b
  2213  002D8A  5DB2               	subwf	main_loop@sample& (0+255),w,b
  2214  002D8C  6E01               	movwf	___lmul@multiplier^0,c
  2215  002D8E  5199               	movf	(main_loop@lastAvg+1)& (0+255),w,b
  2216  002D90  59B3               	subwfb	(main_loop@sample+1)& (0+255),w,b
  2217  002D92  6E02               	movwf	(___lmul@multiplier+1)^0,c
  2218  002D94  519A               	movf	(main_loop@lastAvg+2)& (0+255),w,b
  2219  002D96  59B4               	subwfb	(main_loop@sample+2)& (0+255),w,b
  2220  002D98  6E03               	movwf	(___lmul@multiplier+2)^0,c
  2221  002D9A  519B               	movf	(main_loop@lastAvg+3)& (0+255),w,b
  2222  002D9C  59B5               	subwfb	(main_loop@sample+3)& (0+255),w,b
  2223  002D9E  6E04               	movwf	(___lmul@multiplier+3)^0,c
  2224  002DA0  5137               	movf	_volume_level& (0+255),w,b
  2225  002DA2  0D02               	mullw	2
  2226  002DA4  50F3               	movf	243,w,c
  2227  002DA6  0F01               	addlw	low _soundAmplify
  2228  002DA8  0100               	movlb	0	; () banked
  2229  002DAA  6FC9               	movwf	??_main_loop& (0+255),b
  2230  002DAC  0060  F327  FFF6   	movff	??_main_loop,tblptrl
  2231  002DB2                     	if	1	;There is more than 1 active tblptr byte
  2232  002DB2  0E20               	movlw	high __smallconst
  2233  002DB4  6EF7               	movwf	tblptrh,c
  2234  002DB6                     	endif
  2235  002DB6                     	if	0	;tblptru may be non-zero
  2236  002DB6                     	endif
  2237  002DB6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2238  002DB6  0E00               	movlw	low (__smallconst shr (0+16))
  2239  002DB8  6EF8               	movwf	tblptru,c
  2240  002DBA                     	endif
  2241  002DBA  0009               	tblrd		*+
  2242  002DBC  006F FFD4  F0CA    	movff	tablat,??_main_loop+1
  2243  002DC2  0009               	tblrd		*+
  2244  002DC4  006F FFD4  F0CB    	movff	tablat,??_main_loop+2
  2245  002DCA  0060  F328  F005   	movff	??_main_loop+1,___lmul@multiplicand
  2246  002DD0  0060  F32C  F006   	movff	??_main_loop+2,___lmul@multiplicand+1
  2247  002DD6  6A07               	clrf	(___lmul@multiplicand+2)^0,c
  2248  002DD8  6A08               	clrf	(___lmul@multiplicand+3)^0,c
  2249  002DDA  EC4F  F02C         	call	___lmul	;wreg free
  2250  002DDE  0060  F004  F4B6   	movff	?___lmul,main_loop@rel
  2251  002DE4  0060  F008  F4B7   	movff	?___lmul+1,main_loop@rel+1
  2252  002DEA  0060  F00C  F4B8   	movff	?___lmul+2,main_loop@rel+2
  2253  002DF0  0060  F010  F4B9   	movff	?___lmul+3,main_loop@rel+3
  2254                           
  2255                           ;main.c: 135:         if (streaming && rel > 2000) pos = (4095 < (pos > rel ? pos : rel)
      +                           ? 4095 : (pos > rel ? pos : rel));
  2256  002DF6  0104               	movlb	4	; () banked
  2257  002DF8  5136               	movf	_streaming& (0+255),w,b
  2258  002DFA  A4D8               	btfss	status,2,c
  2259                           
  2260                           ; BSR set to: 4
  2261  002DFC  BFB9               	btfsc	(main_loop@rel+3)& (0+255),7,b
  2262  002DFE  D0A0               	goto	l5592
  2263  002E00  51B9               	movf	(main_loop@rel+3)& (0+255),w,b
  2264  002E02  11B8               	iorwf	(main_loop@rel+2)& (0+255),w,b
  2265  002E04  E106               	bnz	u7060
  2266  002E06  0ED1               	movlw	209
  2267  002E08  5DB6               	subwf	main_loop@rel& (0+255),w,b
  2268  002E0A  0E07               	movlw	7
  2269  002E0C  59B7               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2270  002E0E  A0D8               	btfss	status,0,c
  2271  002E10  D097               	goto	l5592
  2272  002E12                     u7060:
  2273                           
  2274                           ; BSR set to: 4
  2275  002E12  0061  F0D0  F0C9   	movff	main_loop@pos,??_main_loop
  2276  002E18  0061  F0D4  F0CA   	movff	main_loop@pos+1,??_main_loop+1
  2277  002E1E  0E00               	movlw	0
  2278  002E20  0100               	movlb	0	; () banked
  2279  002E22  BFCA               	btfsc	(??_main_loop+1)& (0+255),7,b
  2280  002E24  0EFF               	movlw	255
  2281  002E26  6FCB               	movwf	(??_main_loop+2)& (0+255),b
  2282  002E28  6FCC               	movwf	(??_main_loop+3)& (0+255),b
  2283  002E2A  51C9               	movf	??_main_loop& (0+255),w,b
  2284  002E2C  0104               	movlb	4	; () banked
  2285  002E2E  5DB6               	subwf	main_loop@rel& (0+255),w,b
  2286  002E30  0100               	movlb	0	; () banked
  2287  002E32  51CA               	movf	(??_main_loop+1)& (0+255),w,b
  2288  002E34  0104               	movlb	4	; () banked
  2289  002E36  59B7               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2290  002E38  0100               	movlb	0	; () banked
  2291  002E3A  51CB               	movf	(??_main_loop+2)& (0+255),w,b
  2292  002E3C  0104               	movlb	4	; () banked
  2293  002E3E  59B8               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2294  002E40  51B9               	movf	(main_loop@rel+3)& (0+255),w,b
  2295  002E42  0A80               	xorlw	128
  2296  002E44  0100               	movlb	0	; () banked
  2297  002E46  6FCD               	movwf	(??_main_loop+4)& (0+255),b
  2298  002E48  51CC               	movf	(??_main_loop+3)& (0+255),w,b
  2299  002E4A  0A80               	xorlw	128
  2300  002E4C  59CD               	subwfb	(??_main_loop+4)& (0+255),w,b
  2301  002E4E  A0D8               	btfss	status,0,c
  2302  002E50  D00D               	goto	l5576
  2303                           
  2304                           ; BSR set to: 0
  2305  002E52  0061  F2D8  F4A0   	movff	main_loop@rel,_main_loop$308
  2306  002E58  0061  F2DC  F4A1   	movff	main_loop@rel+1,_main_loop$308+1
  2307  002E5E  0061  F2E0  F4A2   	movff	main_loop@rel+2,_main_loop$308+2
  2308  002E64  0061  F2E4  F4A3   	movff	main_loop@rel+3,_main_loop$308+3
  2309  002E6A  D00C               	goto	l5578
  2310  002E6C                     l5576:
  2311                           
  2312                           ; BSR set to: 0
  2313  002E6C  0061  F0D0  F4A0   	movff	main_loop@pos,_main_loop$308
  2314  002E72  0061  F0D4  F4A1   	movff	main_loop@pos+1,_main_loop$308+1
  2315  002E78  0104               	movlb	4	; () banked
  2316  002E7A  0E00               	movlw	0
  2317  002E7C  BFA1               	btfsc	(_main_loop$308+1)& (0+255),7,b
  2318  002E7E  0EFF               	movlw	-1
  2319  002E80  6FA2               	movwf	(_main_loop$308+2)& (0+255),b
  2320  002E82  6FA3               	movwf	(_main_loop$308+3)& (0+255),b
  2321  002E84                     l5578:
  2322  002E84  0104               	movlb	4	; () banked
  2323  002E86  BFA3               	btfsc	(_main_loop$308+3)& (0+255),7,b
  2324  002E88  D007               	goto	u7080
  2325  002E8A  51A3               	movf	(_main_loop$308+3)& (0+255),w,b
  2326  002E8C  11A2               	iorwf	(_main_loop$308+2)& (0+255),w,b
  2327  002E8E  E14A               	bnz	l5588
  2328  002E90  0E10               	movlw	16
  2329  002E92  5DA1               	subwf	(_main_loop$308+1)& (0+255),w,b
  2330  002E94  B0D8               	btfsc	status,0,c
  2331  002E96  D046               	goto	l5588
  2332  002E98                     u7080:
  2333                           
  2334                           ; BSR set to: 4
  2335  002E98  0061  F0D0  F0C9   	movff	main_loop@pos,??_main_loop
  2336  002E9E  0061  F0D4  F0CA   	movff	main_loop@pos+1,??_main_loop+1
  2337  002EA4  0E00               	movlw	0
  2338  002EA6  0100               	movlb	0	; () banked
  2339  002EA8  BFCA               	btfsc	(??_main_loop+1)& (0+255),7,b
  2340  002EAA  0EFF               	movlw	255
  2341  002EAC  6FCB               	movwf	(??_main_loop+2)& (0+255),b
  2342  002EAE  6FCC               	movwf	(??_main_loop+3)& (0+255),b
  2343  002EB0  51C9               	movf	??_main_loop& (0+255),w,b
  2344  002EB2  0104               	movlb	4	; () banked
  2345  002EB4  5DB6               	subwf	main_loop@rel& (0+255),w,b
  2346  002EB6  0100               	movlb	0	; () banked
  2347  002EB8  51CA               	movf	(??_main_loop+1)& (0+255),w,b
  2348  002EBA  0104               	movlb	4	; () banked
  2349  002EBC  59B7               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2350  002EBE  0100               	movlb	0	; () banked
  2351  002EC0  51CB               	movf	(??_main_loop+2)& (0+255),w,b
  2352  002EC2  0104               	movlb	4	; () banked
  2353  002EC4  59B8               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2354  002EC6  51B9               	movf	(main_loop@rel+3)& (0+255),w,b
  2355  002EC8  0A80               	xorlw	128
  2356  002ECA  0100               	movlb	0	; () banked
  2357  002ECC  6FCD               	movwf	(??_main_loop+4)& (0+255),b
  2358  002ECE  51CC               	movf	(??_main_loop+3)& (0+255),w,b
  2359  002ED0  0A80               	xorlw	128
  2360  002ED2  59CD               	subwfb	(??_main_loop+4)& (0+255),w,b
  2361  002ED4  A0D8               	btfss	status,0,c
  2362  002ED6  D00D               	goto	l5584
  2363                           
  2364                           ; BSR set to: 0
  2365  002ED8  0061  F2D8  F4A4   	movff	main_loop@rel,_main_loop$309
  2366  002EDE  0061  F2DC  F4A5   	movff	main_loop@rel+1,_main_loop$309+1
  2367  002EE4  0061  F2E0  F4A6   	movff	main_loop@rel+2,_main_loop$309+2
  2368  002EEA  0061  F2E4  F4A7   	movff	main_loop@rel+3,_main_loop$309+3
  2369  002EF0  D00C               	goto	l5586
  2370  002EF2                     l5584:
  2371                           
  2372                           ; BSR set to: 0
  2373  002EF2  0061  F0D0  F4A4   	movff	main_loop@pos,_main_loop$309
  2374  002EF8  0061  F0D4  F4A5   	movff	main_loop@pos+1,_main_loop$309+1
  2375  002EFE  0104               	movlb	4	; () banked
  2376  002F00  0E00               	movlw	0
  2377  002F02  BFA5               	btfsc	(_main_loop$309+1)& (0+255),7,b
  2378  002F04  0EFF               	movlw	-1
  2379  002F06  6FA6               	movwf	(_main_loop$309+2)& (0+255),b
  2380  002F08  6FA7               	movwf	(_main_loop$309+3)& (0+255),b
  2381  002F0A                     l5586:
  2382  002F0A  0061  F290  F49C   	movff	_main_loop$309,_main_loop$307
  2383  002F10  0061  F294  F49D   	movff	_main_loop$309+1,_main_loop$307+1
  2384  002F16  0061  F298  F49E   	movff	_main_loop$309+2,_main_loop$307+2
  2385  002F1C  0061  F29C  F49F   	movff	_main_loop$309+3,_main_loop$307+3
  2386  002F22  D008               	goto	l5590
  2387  002F24                     l5588:
  2388                           
  2389                           ; BSR set to: 4
  2390  002F24  0EFF               	movlw	255
  2391  002F26  6F9C               	movwf	_main_loop$307& (0+255),b
  2392  002F28  0E0F               	movlw	15
  2393  002F2A  6F9D               	movwf	(_main_loop$307+1)& (0+255),b
  2394  002F2C  0E00               	movlw	0
  2395  002F2E  6F9E               	movwf	(_main_loop$307+2)& (0+255),b
  2396  002F30  0E00               	movlw	0
  2397  002F32  6F9F               	movwf	(_main_loop$307+3)& (0+255),b
  2398  002F34                     l5590:
  2399  002F34  0061  F270  F434   	movff	_main_loop$307,main_loop@pos
  2400  002F3A  0061  F274  F435   	movff	_main_loop$307+1,main_loop@pos+1
  2401  002F40                     l5592:
  2402                           
  2403                           ;main.c: 137:         setLED(pos, 2047 - pos / 2, 2047 - pos / 2);
  2404  002F40  0061  F0D0  F01A   	movff	main_loop@pos,setLED@r
  2405  002F46  0061  F0D4  F01B   	movff	main_loop@pos+1,setLED@r+1
  2406  002F4C  0E00               	movlw	0
  2407  002F4E  BE1B               	btfsc	(setLED@r+1)^0,7,c
  2408  002F50  0EFF               	movlw	-1
  2409  002F52  6E1C               	movwf	(setLED@r+2)^0,c
  2410  002F54  6E1D               	movwf	(setLED@r+3)^0,c
  2411  002F56  0061  F0D0  F001   	movff	main_loop@pos,___awdiv@dividend
  2412  002F5C  0061  F0D4  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2413  002F62  0E00               	movlw	0
  2414  002F64  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2415  002F66  0E02               	movlw	2
  2416  002F68  6E03               	movwf	___awdiv@divisor^0,c
  2417  002F6A  EC85  F02A         	call	___awdiv	;wreg free
  2418  002F6E  0EFF               	movlw	255
  2419  002F70  0100               	movlb	0	; () banked
  2420  002F72  6FC9               	movwf	??_main_loop& (0+255),b
  2421  002F74  0E07               	movlw	7
  2422  002F76  6FCA               	movwf	(??_main_loop+1)& (0+255),b
  2423  002F78  5001               	movf	?___awdiv^0,w,c
  2424  002F7A  5FC9               	subwf	??_main_loop& (0+255),f,b
  2425  002F7C  5002               	movf	(?___awdiv+1)^0,w,c
  2426  002F7E  5BCA               	subwfb	(??_main_loop+1)& (0+255),f,b
  2427  002F80  0060  F324  F01E   	movff	??_main_loop,setLED@g
  2428  002F86  0060  F328  F01F   	movff	??_main_loop+1,setLED@g+1
  2429  002F8C  0E00               	movlw	0
  2430  002F8E  BE1F               	btfsc	(setLED@g+1)^0,7,c
  2431  002F90  0EFF               	movlw	-1
  2432  002F92  6E20               	movwf	(setLED@g+2)^0,c
  2433  002F94  6E21               	movwf	(setLED@g+3)^0,c
  2434  002F96  0061  F0D0  F001   	movff	main_loop@pos,___awdiv@dividend
  2435  002F9C  0061  F0D4  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2436  002FA2  0E00               	movlw	0
  2437  002FA4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2438  002FA6  0E02               	movlw	2
  2439  002FA8  6E03               	movwf	___awdiv@divisor^0,c
  2440  002FAA  EC85  F02A         	call	___awdiv	;wreg free
  2441  002FAE  0EFF               	movlw	255
  2442  002FB0  0100               	movlb	0	; () banked
  2443  002FB2  6FCB               	movwf	(??_main_loop+2)& (0+255),b
  2444  002FB4  0E07               	movlw	7
  2445  002FB6  6FCC               	movwf	(??_main_loop+3)& (0+255),b
  2446  002FB8  5001               	movf	?___awdiv^0,w,c
  2447  002FBA  5FCB               	subwf	(??_main_loop+2)& (0+255),f,b
  2448  002FBC  5002               	movf	(?___awdiv+1)^0,w,c
  2449  002FBE  5BCC               	subwfb	(??_main_loop+3)& (0+255),f,b
  2450  002FC0  0060  F32C  F022   	movff	??_main_loop+2,setLED@b
  2451  002FC6  0060  F330  F023   	movff	??_main_loop+3,setLED@b+1
  2452  002FCC  0E00               	movlw	0
  2453  002FCE  BE23               	btfsc	(setLED@b+1)^0,7,c
  2454  002FD0  0EFF               	movlw	-1
  2455  002FD2  6E24               	movwf	(setLED@b+2)^0,c
  2456  002FD4  6E25               	movwf	(setLED@b+3)^0,c
  2457  002FD6  EC4C  F020         	call	_setLED	;wreg free
  2458                           
  2459                           ;main.c: 139:         pos = (pos - (pos / 100 + 1) > 0 ? pos - (pos / 100 + 1) : 0);
  2460  002FDA  0EFF               	movlw	255
  2461  002FDC  0100               	movlb	0	; () banked
  2462  002FDE  6FC9               	movwf	??_main_loop& (0+255),b
  2463  002FE0  0EFF               	movlw	255
  2464  002FE2  6FCA               	movwf	(??_main_loop+1)& (0+255),b
  2465  002FE4  0061  F0D0  F001   	movff	main_loop@pos,___awdiv@dividend
  2466  002FEA  0061  F0D4  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2467  002FF0  0E00               	movlw	0
  2468  002FF2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2469  002FF4  0E64               	movlw	100
  2470  002FF6  6E03               	movwf	___awdiv@divisor^0,c
  2471  002FF8  EC85  F02A         	call	___awdiv	;wreg free
  2472  002FFC  0061  F0D0  F0CB   	movff	main_loop@pos,??_main_loop+2
  2473  003002  0061  F0D4  F0CC   	movff	main_loop@pos+1,??_main_loop+3
  2474  003008  5001               	movf	?___awdiv^0,w,c
  2475  00300A  0100               	movlb	0	; () banked
  2476  00300C  5FCB               	subwf	(??_main_loop+2)& (0+255),f,b
  2477  00300E  5002               	movf	(?___awdiv+1)^0,w,c
  2478  003010  5BCC               	subwfb	(??_main_loop+3)& (0+255),f,b
  2479  003012  51C9               	movf	??_main_loop& (0+255),w,b
  2480  003014  27CB               	addwf	(??_main_loop+2)& (0+255),f,b
  2481  003016  51CA               	movf	(??_main_loop+1)& (0+255),w,b
  2482  003018  23CC               	addwfc	(??_main_loop+3)& (0+255),f,b
  2483  00301A  BFCC               	btfsc	(??_main_loop+3)& (0+255),7,b
  2484  00301C  D005               	goto	u7100
  2485  00301E  51CC               	movf	(??_main_loop+3)& (0+255),w,b
  2486  003020  E109               	bnz	l5598
  2487  003022  05CB               	decf	(??_main_loop+2)& (0+255),w,b
  2488  003024  B0D8               	btfsc	status,0,c
  2489  003026  D006               	goto	l5598
  2490  003028                     u7100:
  2491                           
  2492                           ; BSR set to: 0
  2493  003028  0E00               	movlw	0
  2494  00302A  0104               	movlb	4	; () banked
  2495  00302C  6F35               	movwf	(main_loop@pos+1)& (0+255),b
  2496  00302E  0E00               	movlw	0
  2497  003030  6F34               	movwf	main_loop@pos& (0+255),b
  2498  003032  D020               	goto	l5600
  2499  003034                     l5598:
  2500                           
  2501                           ; BSR set to: 0
  2502  003034  0061  F0D0  F001   	movff	main_loop@pos,___awdiv@dividend
  2503  00303A  0061  F0D4  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2504  003040  0E00               	movlw	0
  2505  003042  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2506  003044  0E64               	movlw	100
  2507  003046  6E03               	movwf	___awdiv@divisor^0,c
  2508  003048  EC85  F02A         	call	___awdiv	;wreg free
  2509  00304C  0061  F0D0  F0C9   	movff	main_loop@pos,??_main_loop
  2510  003052  0061  F0D4  F0CA   	movff	main_loop@pos+1,??_main_loop+1
  2511  003058  5001               	movf	?___awdiv^0,w,c
  2512  00305A  0100               	movlb	0	; () banked
  2513  00305C  5FC9               	subwf	??_main_loop& (0+255),f,b
  2514  00305E  5002               	movf	(?___awdiv+1)^0,w,c
  2515  003060  5BCA               	subwfb	(??_main_loop+1)& (0+255),f,b
  2516  003062  0EFF               	movlw	255
  2517  003064  25C9               	addwf	??_main_loop& (0+255),w,b
  2518  003066  0104               	movlb	4	; () banked
  2519  003068  6F34               	movwf	main_loop@pos& (0+255),b
  2520  00306A  0EFF               	movlw	255
  2521  00306C  0100               	movlb	0	; () banked
  2522  00306E  21CA               	addwfc	(??_main_loop+1)& (0+255),w,b
  2523  003070  0104               	movlb	4	; () banked
  2524  003072  6F35               	movwf	(main_loop@pos+1)& (0+255),b
  2525  003074                     l5600:
  2526                           
  2527                           ; BSR set to: 4
  2528                           ;main.c: 141:         sum = 0;
  2529  003074  0E00               	movlw	0
  2530  003076  6F2C               	movwf	main_loop@sum& (0+255),b
  2531  003078  0E00               	movlw	0
  2532  00307A  6F2D               	movwf	(main_loop@sum+1)& (0+255),b
  2533  00307C  0E00               	movlw	0
  2534  00307E  6F2E               	movwf	(main_loop@sum+2)& (0+255),b
  2535  003080  0E00               	movlw	0
  2536  003082  6F2F               	movwf	(main_loop@sum+3)& (0+255),b
  2537                           
  2538                           ; BSR set to: 4
  2539                           ;main.c: 147:         lastSum -= last[(counter / 50) % 20];
  2540  003084  0E32               	movlw	50
  2541  003086  6E11               	movwf	___lldiv@divisor^0,c
  2542  003088  0E00               	movlw	0
  2543  00308A  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2544  00308C  0E00               	movlw	0
  2545  00308E  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2546  003090  0E00               	movlw	0
  2547  003092  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2548  003094  0061  F0C0  F00D   	movff	main_loop@counter,___lldiv@dividend
  2549  00309A  0061  F0C4  F00E   	movff	main_loop@counter+1,___lldiv@dividend+1
  2550  0030A0  0061  F0C8  F00F   	movff	main_loop@counter+2,___lldiv@dividend+2
  2551  0030A6  0061  F0CC  F010   	movff	main_loop@counter+3,___lldiv@dividend+3
  2552  0030AC  EC40  F02A         	call	___lldiv	;wreg free
  2553  0030B0  0060  F034  F01A   	movff	?___lldiv,___llmod@dividend
  2554  0030B6  0060  F038  F01B   	movff	?___lldiv+1,___llmod@dividend+1
  2555  0030BC  0060  F03C  F01C   	movff	?___lldiv+2,___llmod@dividend+2
  2556  0030C2  0060  F040  F01D   	movff	?___lldiv+3,___llmod@dividend+3
  2557  0030C8  0E14               	movlw	20
  2558  0030CA  6E1E               	movwf	___llmod@divisor^0,c
  2559  0030CC  0E00               	movlw	0
  2560  0030CE  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2561  0030D0  0E00               	movlw	0
  2562  0030D2  6E20               	movwf	(___llmod@divisor+2)^0,c
  2563  0030D4  0E00               	movlw	0
  2564  0030D6  6E21               	movwf	(___llmod@divisor+3)^0,c
  2565  0030D8  ECB5  F02B         	call	___llmod	;wreg free
  2566  0030DC  90D8               	bcf	status,0,c
  2567  0030DE  361A               	rlcf	?___llmod^0,f,c
  2568  0030E0  361B               	rlcf	(?___llmod+1)^0,f,c
  2569  0030E2  0E00               	movlw	low main_loop@last
  2570  0030E4  241A               	addwf	?___llmod^0,w,c
  2571  0030E6  6ED9               	movwf	fsr2l,c
  2572  0030E8  0E04               	movlw	high main_loop@last
  2573  0030EA  201B               	addwfc	(?___llmod+1)^0,w,c
  2574  0030EC  6EDA               	movwf	fsr2h,c
  2575  0030EE  006F FF78  F0C9    	movff	postinc2,??_main_loop
  2576  0030F4  006F FF74  F0CA    	movff	postdec2,??_main_loop+1
  2577  0030FA  0100               	movlb	0	; () banked
  2578  0030FC  51C9               	movf	??_main_loop& (0+255),w,b
  2579  0030FE  6FCB               	movwf	(??_main_loop+2)& (0+255),b
  2580  003100  51CA               	movf	(??_main_loop+1)& (0+255),w,b
  2581  003102  6FCC               	movwf	(??_main_loop+3)& (0+255),b
  2582  003104  6BCD               	clrf	(??_main_loop+4)& (0+255),b
  2583  003106  6BCE               	clrf	(??_main_loop+5)& (0+255),b
  2584  003108  51CB               	movf	(??_main_loop+2)& (0+255),w,b
  2585  00310A  0104               	movlb	4	; () banked
  2586  00310C  5F28               	subwf	main_loop@lastSum& (0+255),f,b
  2587  00310E  0100               	movlb	0	; () banked
  2588  003110  51CC               	movf	(??_main_loop+3)& (0+255),w,b
  2589  003112  0104               	movlb	4	; () banked
  2590  003114  5B29               	subwfb	(main_loop@lastSum+1)& (0+255),f,b
  2591  003116  0100               	movlb	0	; () banked
  2592  003118  51CD               	movf	(??_main_loop+4)& (0+255),w,b
  2593  00311A  0104               	movlb	4	; () banked
  2594  00311C  5B2A               	subwfb	(main_loop@lastSum+2)& (0+255),f,b
  2595  00311E  0100               	movlb	0	; () banked
  2596  003120  51CE               	movf	(??_main_loop+5)& (0+255),w,b
  2597  003122  0104               	movlb	4	; () banked
  2598  003124  5B2B               	subwfb	(main_loop@lastSum+3)& (0+255),f,b
  2599                           
  2600                           ; BSR set to: 4
  2601                           ;main.c: 148:         lastSum += sample;
  2602  003126  51B2               	movf	main_loop@sample& (0+255),w,b
  2603  003128  2728               	addwf	main_loop@lastSum& (0+255),f,b
  2604  00312A  51B3               	movf	(main_loop@sample+1)& (0+255),w,b
  2605  00312C  2329               	addwfc	(main_loop@lastSum+1)& (0+255),f,b
  2606  00312E  51B4               	movf	(main_loop@sample+2)& (0+255),w,b
  2607  003130  232A               	addwfc	(main_loop@lastSum+2)& (0+255),f,b
  2608  003132  51B5               	movf	(main_loop@sample+3)& (0+255),w,b
  2609  003134  232B               	addwfc	(main_loop@lastSum+3)& (0+255),f,b
  2610                           
  2611                           ; BSR set to: 4
  2612                           ;main.c: 149:         last[(counter / 50) % 20] = sample;
  2613  003136  0E32               	movlw	50
  2614  003138  6E11               	movwf	___lldiv@divisor^0,c
  2615  00313A  0E00               	movlw	0
  2616  00313C  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2617  00313E  0E00               	movlw	0
  2618  003140  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2619  003142  0E00               	movlw	0
  2620  003144  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2621  003146  0061  F0C0  F00D   	movff	main_loop@counter,___lldiv@dividend
  2622  00314C  0061  F0C4  F00E   	movff	main_loop@counter+1,___lldiv@dividend+1
  2623  003152  0061  F0C8  F00F   	movff	main_loop@counter+2,___lldiv@dividend+2
  2624  003158  0061  F0CC  F010   	movff	main_loop@counter+3,___lldiv@dividend+3
  2625  00315E  EC40  F02A         	call	___lldiv	;wreg free
  2626  003162  0060  F034  F01A   	movff	?___lldiv,___llmod@dividend
  2627  003168  0060  F038  F01B   	movff	?___lldiv+1,___llmod@dividend+1
  2628  00316E  0060  F03C  F01C   	movff	?___lldiv+2,___llmod@dividend+2
  2629  003174  0060  F040  F01D   	movff	?___lldiv+3,___llmod@dividend+3
  2630  00317A  0E14               	movlw	20
  2631  00317C  6E1E               	movwf	___llmod@divisor^0,c
  2632  00317E  0E00               	movlw	0
  2633  003180  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2634  003182  0E00               	movlw	0
  2635  003184  6E20               	movwf	(___llmod@divisor+2)^0,c
  2636  003186  0E00               	movlw	0
  2637  003188  6E21               	movwf	(___llmod@divisor+3)^0,c
  2638  00318A  ECB5  F02B         	call	___llmod	;wreg free
  2639  00318E  90D8               	bcf	status,0,c
  2640  003190  361A               	rlcf	?___llmod^0,f,c
  2641  003192  361B               	rlcf	(?___llmod+1)^0,f,c
  2642  003194  0E00               	movlw	low main_loop@last
  2643  003196  241A               	addwf	?___llmod^0,w,c
  2644  003198  6ED9               	movwf	fsr2l,c
  2645  00319A  0E04               	movlw	high main_loop@last
  2646  00319C  201B               	addwfc	(?___llmod+1)^0,w,c
  2647  00319E  6EDA               	movwf	fsr2h,c
  2648  0031A0  0061  F2CB  FFDE   	movff	main_loop@sample,postinc2
  2649  0031A6  0061  F2CF  FFDD   	movff	main_loop@sample+1,postdec2
  2650  0031AC                     l5608:
  2651                           
  2652                           ;main.c: 152:     if (counter % 1000 == 999) {
  2653  0031AC  0061  F0C0  F01A   	movff	main_loop@counter,___llmod@dividend
  2654  0031B2  0061  F0C4  F01B   	movff	main_loop@counter+1,___llmod@dividend+1
  2655  0031B8  0061  F0C8  F01C   	movff	main_loop@counter+2,___llmod@dividend+2
  2656  0031BE  0061  F0CC  F01D   	movff	main_loop@counter+3,___llmod@dividend+3
  2657  0031C4  0EE8               	movlw	232
  2658  0031C6  6E1E               	movwf	___llmod@divisor^0,c
  2659  0031C8  0E03               	movlw	3
  2660  0031CA  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2661  0031CC  0E00               	movlw	0
  2662  0031CE  6E20               	movwf	(___llmod@divisor+2)^0,c
  2663  0031D0  0E00               	movlw	0
  2664  0031D2  6E21               	movwf	(___llmod@divisor+3)^0,c
  2665  0031D4  ECB5  F02B         	call	___llmod	;wreg free
  2666  0031D8  0EE7               	movlw	231
  2667  0031DA  181A               	xorwf	?___llmod^0,w,c
  2668  0031DC  E113               	bnz	l5612
  2669  0031DE  0E03               	movlw	3
  2670  0031E0  181B               	xorwf	(?___llmod+1)^0,w,c
  2671  0031E2  101C               	iorwf	(?___llmod+2)^0,w,c
  2672  0031E4  101D               	iorwf	(?___llmod+3)^0,w,c
  2673  0031E6  A4D8               	btfss	status,2,c
  2674  0031E8  D00D               	goto	l5612
  2675                           
  2676                           ;main.c: 153:         PORTCbits.RC0 = !PORTCbits.RC1;
  2677  0031EA  B2CC               	btfsc	204,1,c	;volatile
  2678  0031EC  D004               	goto	u7120
  2679  0031EE  0100               	movlb	0	; () banked
  2680  0031F0  6BC9               	clrf	??_main_loop& (0+255),b
  2681  0031F2  2BC9               	incf	??_main_loop& (0+255),f,b
  2682  0031F4  D002               	goto	u7138
  2683  0031F6                     u7120:
  2684  0031F6  0100               	movlb	0	; () banked
  2685  0031F8  6BC9               	clrf	??_main_loop& (0+255),b
  2686  0031FA                     u7138:
  2687  0031FA  50CC               	movf	204,w,c	;volatile
  2688  0031FC  19C9               	xorwf	??_main_loop& (0+255),w,b
  2689  0031FE  0BFE               	andlw	-2
  2690  003200  19C9               	xorwf	??_main_loop& (0+255),w,b
  2691  003202  6ECC               	movwf	204,c	;volatile
  2692  003204                     l5612:
  2693                           
  2694                           ;main.c: 168:     if (counter % 10000 == 9999) {
  2695  003204  0061  F0C0  F01A   	movff	main_loop@counter,___llmod@dividend
  2696  00320A  0061  F0C4  F01B   	movff	main_loop@counter+1,___llmod@dividend+1
  2697  003210  0061  F0C8  F01C   	movff	main_loop@counter+2,___llmod@dividend+2
  2698  003216  0061  F0CC  F01D   	movff	main_loop@counter+3,___llmod@dividend+3
  2699  00321C  0E10               	movlw	16
  2700  00321E  6E1E               	movwf	___llmod@divisor^0,c
  2701  003220  0E27               	movlw	39
  2702  003222  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2703  003224  0E00               	movlw	0
  2704  003226  6E20               	movwf	(___llmod@divisor+2)^0,c
  2705  003228  0E00               	movlw	0
  2706  00322A  6E21               	movwf	(___llmod@divisor+3)^0,c
  2707  00322C  ECB5  F02B         	call	___llmod	;wreg free
  2708  003230  0E0F               	movlw	15
  2709  003232  181A               	xorwf	?___llmod^0,w,c
  2710  003234  E111               	bnz	l5616
  2711  003236  0E27               	movlw	39
  2712  003238  181B               	xorwf	(?___llmod+1)^0,w,c
  2713  00323A  101C               	iorwf	(?___llmod+2)^0,w,c
  2714  00323C  101D               	iorwf	(?___llmod+3)^0,w,c
  2715  00323E  A4D8               	btfss	status,2,c
  2716  003240  D00B               	goto	l5616
  2717                           
  2718                           ;main.c: 169:         uart_send(volCheckCmd, 3);
  2719  003242  0E21               	movlw	low _volCheckCmd
  2720  003244  6E0C               	movwf	uart_send@buf^0,c
  2721  003246  500C               	movf	uart_send@buf^0,w,c
  2722  003248  A4D8               	btfss	status,2,c
  2723  00324A  0E20               	movlw	high __smallconst
  2724  00324C  6E0D               	movwf	(uart_send@buf+1)^0,c
  2725  00324E  0E03               	movlw	3
  2726  003250  6E0E               	movwf	uart_send@len^0,c
  2727  003252  EC07  F02B         	call	_uart_send	;wreg free
  2728                           
  2729                           ;main.c: 170:     } else if (counter % 10000 == 4999) {
  2730  003256  D029               	goto	l5620
  2731  003258                     l5616:
  2732  003258  0061  F0C0  F01A   	movff	main_loop@counter,___llmod@dividend
  2733  00325E  0061  F0C4  F01B   	movff	main_loop@counter+1,___llmod@dividend+1
  2734  003264  0061  F0C8  F01C   	movff	main_loop@counter+2,___llmod@dividend+2
  2735  00326A  0061  F0CC  F01D   	movff	main_loop@counter+3,___llmod@dividend+3
  2736  003270  0E10               	movlw	16
  2737  003272  6E1E               	movwf	___llmod@divisor^0,c
  2738  003274  0E27               	movlw	39
  2739  003276  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2740  003278  0E00               	movlw	0
  2741  00327A  6E20               	movwf	(___llmod@divisor+2)^0,c
  2742  00327C  0E00               	movlw	0
  2743  00327E  6E21               	movwf	(___llmod@divisor+3)^0,c
  2744  003280  ECB5  F02B         	call	___llmod	;wreg free
  2745  003284  0E87               	movlw	135
  2746  003286  181A               	xorwf	?___llmod^0,w,c
  2747  003288  E110               	bnz	l5620
  2748  00328A  0E13               	movlw	19
  2749  00328C  181B               	xorwf	(?___llmod+1)^0,w,c
  2750  00328E  101C               	iorwf	(?___llmod+2)^0,w,c
  2751  003290  101D               	iorwf	(?___llmod+3)^0,w,c
  2752  003292  A4D8               	btfss	status,2,c
  2753  003294  D00A               	goto	l5620
  2754                           
  2755                           ;main.c: 171:         uart_send(stateCheckCmd, 2);
  2756  003296  0E24               	movlw	low _stateCheckCmd
  2757  003298  6E0C               	movwf	uart_send@buf^0,c
  2758  00329A  500C               	movf	uart_send@buf^0,w,c
  2759  00329C  A4D8               	btfss	status,2,c
  2760  00329E  0E20               	movlw	high __smallconst
  2761  0032A0  6E0D               	movwf	(uart_send@buf+1)^0,c
  2762  0032A2  0E02               	movlw	2
  2763  0032A4  6E0E               	movwf	uart_send@len^0,c
  2764  0032A6  EC07  F02B         	call	_uart_send	;wreg free
  2765  0032AA                     l5620:
  2766                           
  2767                           ;main.c: 174:     if (++counter >= 100000) {
  2768  0032AA  0E01               	movlw	1
  2769  0032AC  0104               	movlb	4	; () banked
  2770  0032AE  2730               	addwf	main_loop@counter& (0+255),f,b
  2771  0032B0  0E00               	movlw	0
  2772  0032B2  2331               	addwfc	(main_loop@counter+1)& (0+255),f,b
  2773  0032B4  2332               	addwfc	(main_loop@counter+2)& (0+255),f,b
  2774  0032B6  2333               	addwfc	(main_loop@counter+3)& (0+255),f,b
  2775  0032B8  5133               	movf	(main_loop@counter+3)& (0+255),w,b
  2776  0032BA  E108               	bnz	u7160
  2777  0032BC  0EA0               	movlw	160
  2778  0032BE  5D30               	subwf	main_loop@counter& (0+255),w,b
  2779  0032C0  0E86               	movlw	134
  2780  0032C2  5931               	subwfb	(main_loop@counter+1)& (0+255),w,b
  2781  0032C4  0E01               	movlw	1
  2782  0032C6  5932               	subwfb	(main_loop@counter+2)& (0+255),w,b
  2783  0032C8  A0D8               	btfss	status,0,c
  2784  0032CA  D158               	goto	l5666
  2785  0032CC                     u7160:
  2786                           
  2787                           ; BSR set to: 4
  2788                           ;main.c: 175:         ADPCH = 0b011011;
  2789  0032CC  0E1B               	movlw	27
  2790  0032CE  013E               	movlb	62	; () banked
  2791  0032D0  6FF1               	movwf	241,b	;volatile
  2792                           
  2793                           ; BSR set to: 62
  2794                           ;main.c: 176:         ADCON0bits.GO = 1;
  2795  0032D2  81F8               	bsf	248,0,b	;volatile
  2796                           
  2797                           ;main.c: 177:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  2798  0032D4  D004               	goto	l5628
  2799  0032D6                     l5626:
  2800                           
  2801                           ; BSR set to: 62
  2802  0032D6  0E05               	movlw	5
  2803  0032D8                     u7277:
  2804  0032D8  2EE8               	decfsz	wreg,f,c
  2805  0032DA  D7FE               	bra	u7277
  2806  0032DC  F000               	nop	
  2807  0032DE                     l5628:
  2808  0032DE  013E               	movlb	62	; () banked
  2809  0032E0  B1F8               	btfsc	248,0,b	;volatile
  2810  0032E2  D7F9               	goto	l5626
  2811                           
  2812                           ; BSR set to: 62
  2813                           ;main.c: 178:         uint16_t batlvl = ((ADRESH << 8) | ADRESL);
  2814  0032E4  51EF               	movf	239,w,b	;volatile
  2815  0032E6  006F FBC0  F0C9    	movff	16112,??_main_loop	;volatile
  2816  0032EC  0100               	movlb	0	; () banked
  2817  0032EE  6BCA               	clrf	(??_main_loop+1)& (0+255),b
  2818  0032F0  0060  F324  F0CA   	movff	??_main_loop,??_main_loop+1
  2819  0032F6  6BC9               	clrf	??_main_loop& (0+255),b
  2820  0032F8  11C9               	iorwf	??_main_loop& (0+255),w,b
  2821  0032FA  0104               	movlb	4	; () banked
  2822  0032FC  6FAE               	movwf	main_loop@batlvl& (0+255),b
  2823  0032FE  0100               	movlb	0	; () banked
  2824  003300  51CA               	movf	(??_main_loop+1)& (0+255),w,b
  2825  003302  0104               	movlb	4	; () banked
  2826  003304  6FAF               	movwf	(main_loop@batlvl+1)& (0+255),b
  2827                           
  2828                           ; BSR set to: 4
  2829                           ;main.c: 179:         char batmsg[16];;main.c: 180:         if (batlvl < 2090.0f - 100) 
      +                          sprintf(batmsg, "No Battery");
  2830  003306  0061  F2B8  F001   	movff	main_loop@batlvl,___xxtofl@val
  2831  00330C  0061  F2BC  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  2832  003312  6A03               	clrf	(___xxtofl@val+2)^0,c
  2833  003314  6A04               	clrf	(___xxtofl@val+3)^0,c
  2834  003316  0E00               	movlw	0
  2835  003318  EC22  F026         	call	___xxtofl
  2836  00331C  0060  F004  F051   	movff	?___xxtofl,___flge@ff1
  2837  003322  0060  F008  F052   	movff	?___xxtofl+1,___flge@ff1+1
  2838  003328  0060  F00C  F053   	movff	?___xxtofl+2,___flge@ff1+2
  2839  00332E  0060  F010  F054   	movff	?___xxtofl+3,___flge@ff1+3
  2840  003334  0E00               	movlw	0
  2841  003336  6E55               	movwf	___flge@ff2^0,c
  2842  003338  0EC0               	movlw	192
  2843  00333A  6E56               	movwf	(___flge@ff2+1)^0,c
  2844  00333C  0EF8               	movlw	248
  2845  00333E  6E57               	movwf	(___flge@ff2+2)^0,c
  2846  003340  0E44               	movlw	68
  2847  003342  6E58               	movwf	(___flge@ff2+3)^0,c
  2848  003344  EC4A  F027         	call	___flge	;wreg free
  2849  003348  B0D8               	btfsc	status,0,c
  2850  00334A  D00A               	goto	l5636
  2851  00334C  0E88               	movlw	low main_loop@batmsg
  2852  00334E  0100               	movlb	0	; () banked
  2853  003350  6FB9               	movwf	sprintf@s& (0+255),b
  2854  003352  0E04               	movlw	high main_loop@batmsg
  2855  003354  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  2856  003356  0E7B               	movlw	low STR_1
  2857  003358  6FBB               	movwf	sprintf@fmt& (0+255),b
  2858  00335A  ECFB  F02C         	call	_sprintf	;wreg free
  2859  00335E  D0FC               	goto	l5660
  2860  003360                     l5636:
  2861                           
  2862                           ;main.c: 182:             float bat_percent = (batlvl - 2090.0f) / (2996.0f - 2090.0f) *
      +                           100.0f;
  2863  003360  0E00               	movlw	0
  2864  003362  6E23               	movwf	___fldiv@a^0,c
  2865  003364  0E80               	movlw	128
  2866  003366  6E24               	movwf	(___fldiv@a+1)^0,c
  2867  003368  0E62               	movlw	98
  2868  00336A  6E25               	movwf	(___fldiv@a+2)^0,c
  2869  00336C  0E44               	movlw	68
  2870  00336E  6E26               	movwf	(___fldiv@a+3)^0,c
  2871  003370  0E00               	movlw	0
  2872  003372  6E13               	movwf	___fladd@a^0,c
  2873  003374  0EA0               	movlw	160
  2874  003376  6E14               	movwf	(___fladd@a+1)^0,c
  2875  003378  0E02               	movlw	2
  2876  00337A  6E15               	movwf	(___fladd@a+2)^0,c
  2877  00337C  0EC5               	movlw	197
  2878  00337E  6E16               	movwf	(___fladd@a+3)^0,c
  2879  003380  0061  F2B8  F001   	movff	main_loop@batlvl,___xxtofl@val
  2880  003386  0061  F2BC  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  2881  00338C  6A03               	clrf	(___xxtofl@val+2)^0,c
  2882  00338E  6A04               	clrf	(___xxtofl@val+3)^0,c
  2883  003390  0E00               	movlw	0
  2884  003392  EC22  F026         	call	___xxtofl
  2885  003396  0060  F004  F00F   	movff	?___xxtofl,___fladd@b
  2886  00339C  0060  F008  F010   	movff	?___xxtofl+1,___fladd@b+1
  2887  0033A2  0060  F00C  F011   	movff	?___xxtofl+2,___fladd@b+2
  2888  0033A8  0060  F010  F012   	movff	?___xxtofl+3,___fladd@b+3
  2889  0033AE  ECA8  F01E         	call	___fladd	;wreg free
  2890  0033B2  0060  F03C  F01F   	movff	?___fladd,___fldiv@b
  2891  0033B8  0060  F040  F020   	movff	?___fladd+1,___fldiv@b+1
  2892  0033BE  0060  F044  F021   	movff	?___fladd+2,___fldiv@b+2
  2893  0033C4  0060  F048  F022   	movff	?___fladd+3,___fldiv@b+3
  2894  0033CA  ECB5  F021         	call	___fldiv	;wreg free
  2895  0033CE  0060  F07C  F038   	movff	?___fldiv,___flmul@b
  2896  0033D4  0060  F080  F039   	movff	?___fldiv+1,___flmul@b+1
  2897  0033DA  0060  F084  F03A   	movff	?___fldiv+2,___flmul@b+2
  2898  0033E0  0060  F088  F03B   	movff	?___fldiv+3,___flmul@b+3
  2899  0033E6  0E00               	movlw	0
  2900  0033E8  6E3C               	movwf	___flmul@a^0,c
  2901  0033EA  0E00               	movlw	0
  2902  0033EC  6E3D               	movwf	(___flmul@a+1)^0,c
  2903  0033EE  0EC8               	movlw	200
  2904  0033F0  6E3E               	movwf	(___flmul@a+2)^0,c
  2905  0033F2  0E42               	movlw	66
  2906  0033F4  6E3F               	movwf	(___flmul@a+3)^0,c
  2907  0033F6  ECE6  F01C         	call	___flmul	;wreg free
  2908  0033FA  0060  F0E0  F4BA   	movff	?___flmul,main_loop@bat_percent
  2909  003400  0060  F0E4  F4BB   	movff	?___flmul+1,main_loop@bat_percent+1
  2910  003406  0060  F0E8  F4BC   	movff	?___flmul+2,main_loop@bat_percent+2
  2911  00340C  0060  F0EC  F4BD   	movff	?___flmul+3,main_loop@bat_percent+3
  2912                           
  2913                           ;main.c: 183:             bat_percent = (bat_percent < 0.0f ? 0.0f : (bat_percent > 100.
      +                          0f ? 100.0f : bat_percent));
  2914  003412  0104               	movlb	4	; () banked
  2915  003414  BFBD               	btfsc	(main_loop@bat_percent+3)& (0+255),7,b
  2916  003416  D03B               	goto	l5648
  2917                           
  2918                           ; BSR set to: 4
  2919  003418  0E00               	movlw	0
  2920  00341A  6E51               	movwf	___flge@ff1^0,c
  2921  00341C  0E00               	movlw	0
  2922  00341E  6E52               	movwf	(___flge@ff1+1)^0,c
  2923  003420  0EC8               	movlw	200
  2924  003422  6E53               	movwf	(___flge@ff1+2)^0,c
  2925  003424  0E42               	movlw	66
  2926  003426  6E54               	movwf	(___flge@ff1+3)^0,c
  2927  003428  0061  F2E8  F055   	movff	main_loop@bat_percent,___flge@ff2
  2928  00342E  0061  F2EC  F056   	movff	main_loop@bat_percent+1,___flge@ff2+1
  2929  003434  0061  F2F0  F057   	movff	main_loop@bat_percent+2,___flge@ff2+2
  2930  00343A  0061  F2F4  F058   	movff	main_loop@bat_percent+3,___flge@ff2+3
  2931  003440  EC4A  F027         	call	___flge	;wreg free
  2932  003444  A0D8               	btfss	status,0,c
  2933  003446  D00D               	goto	l5644
  2934  003448  0061  F2E8  F4A8   	movff	main_loop@bat_percent,_main_loop$323
  2935  00344E  0061  F2EC  F4A9   	movff	main_loop@bat_percent+1,_main_loop$323+1
  2936  003454  0061  F2F0  F4AA   	movff	main_loop@bat_percent+2,_main_loop$323+2
  2937  00345A  0061  F2F4  F4AB   	movff	main_loop@bat_percent+3,_main_loop$323+3
  2938  003460  D009               	goto	l5646
  2939  003462                     l5644:
  2940  003462  0E00               	movlw	0
  2941  003464  0104               	movlb	4	; () banked
  2942  003466  6FA8               	movwf	_main_loop$323& (0+255),b
  2943  003468  0E00               	movlw	0
  2944  00346A  6FA9               	movwf	(_main_loop$323+1)& (0+255),b
  2945  00346C  0EC8               	movlw	200
  2946  00346E  6FAA               	movwf	(_main_loop$323+2)& (0+255),b
  2947  003470  0E42               	movlw	66
  2948  003472  6FAB               	movwf	(_main_loop$323+3)& (0+255),b
  2949  003474                     l5646:
  2950  003474  0061  F2A0  F4BA   	movff	_main_loop$323,main_loop@bat_percent
  2951  00347A  0061  F2A4  F4BB   	movff	_main_loop$323+1,main_loop@bat_percent+1
  2952  003480  0061  F2A8  F4BC   	movff	_main_loop$323+2,main_loop@bat_percent+2
  2953  003486  0061  F2AC  F4BD   	movff	_main_loop$323+3,main_loop@bat_percent+3
  2954  00348C  D008               	goto	l5650
  2955  00348E                     l5648:
  2956                           
  2957                           ; BSR set to: 4
  2958  00348E  0E00               	movlw	0
  2959  003490  6FBA               	movwf	main_loop@bat_percent& (0+255),b
  2960  003492  0E00               	movlw	0
  2961  003494  6FBB               	movwf	(main_loop@bat_percent+1)& (0+255),b
  2962  003496  0E00               	movlw	0
  2963  003498  6FBC               	movwf	(main_loop@bat_percent+2)& (0+255),b
  2964  00349A  0E00               	movlw	0
  2965  00349C  6FBD               	movwf	(main_loop@bat_percent+3)& (0+255),b
  2966  00349E                     l5650:
  2967                           
  2968                           ;main.c: 184:             if (!PORTDbits.RD2) sprintf(batmsg, "Chg fault: %3.0f%%", bat_
      +                          percent);
  2969  00349E  B4CD               	btfsc	205,2,c	;volatile
  2970  0034A0  D016               	goto	l272
  2971  0034A2  0E88               	movlw	low main_loop@batmsg
  2972  0034A4  0100               	movlb	0	; () banked
  2973  0034A6  6FB9               	movwf	sprintf@s& (0+255),b
  2974  0034A8  0E04               	movlw	high main_loop@batmsg
  2975  0034AA  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  2976  0034AC  0E26               	movlw	low STR_2
  2977  0034AE  6FBB               	movwf	sprintf@fmt& (0+255),b
  2978  0034B0  0061  F2E8  F0BC   	movff	main_loop@bat_percent,?_sprintf+3
  2979  0034B6  0061  F2EC  F0BD   	movff	main_loop@bat_percent+1,?_sprintf+4
  2980  0034BC  0061  F2F0  F0BE   	movff	main_loop@bat_percent+2,?_sprintf+5
  2981  0034C2  0061  F2F4  F0BF   	movff	main_loop@bat_percent+3,?_sprintf+6
  2982  0034C8  ECFB  F02C         	call	_sprintf	;wreg free
  2983  0034CC  D045               	goto	l5660
  2984  0034CE                     l272:
  2985  0034CE  B2CD               	btfsc	205,1,c	;volatile
  2986  0034D0  D016               	goto	l274
  2987  0034D2  0E88               	movlw	low main_loop@batmsg
  2988  0034D4  0100               	movlb	0	; () banked
  2989  0034D6  6FB9               	movwf	sprintf@s& (0+255),b
  2990  0034D8  0E04               	movlw	high main_loop@batmsg
  2991  0034DA  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  2992  0034DC  0E39               	movlw	low STR_3
  2993  0034DE  6FBB               	movwf	sprintf@fmt& (0+255),b
  2994  0034E0  0061  F2E8  F0BC   	movff	main_loop@bat_percent,?_sprintf+3
  2995  0034E6  0061  F2EC  F0BD   	movff	main_loop@bat_percent+1,?_sprintf+4
  2996  0034EC  0061  F2F0  F0BE   	movff	main_loop@bat_percent+2,?_sprintf+5
  2997  0034F2  0061  F2F4  F0BF   	movff	main_loop@bat_percent+3,?_sprintf+6
  2998  0034F8  ECFB  F02C         	call	_sprintf	;wreg free
  2999  0034FC  D02D               	goto	l5660
  3000  0034FE                     l274:
  3001  0034FE  B0CD               	btfsc	205,0,c	;volatile
  3002  003500  D016               	goto	l5658
  3003  003502  0E88               	movlw	low main_loop@batmsg
  3004  003504  0100               	movlb	0	; () banked
  3005  003506  6FB9               	movwf	sprintf@s& (0+255),b
  3006  003508  0E04               	movlw	high main_loop@batmsg
  3007  00350A  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  3008  00350C  0E4B               	movlw	low STR_4
  3009  00350E  6FBB               	movwf	sprintf@fmt& (0+255),b
  3010  003510  0061  F2E8  F0BC   	movff	main_loop@bat_percent,?_sprintf+3
  3011  003516  0061  F2EC  F0BD   	movff	main_loop@bat_percent+1,?_sprintf+4
  3012  00351C  0061  F2F0  F0BE   	movff	main_loop@bat_percent+2,?_sprintf+5
  3013  003522  0061  F2F4  F0BF   	movff	main_loop@bat_percent+3,?_sprintf+6
  3014  003528  ECFB  F02C         	call	_sprintf	;wreg free
  3015  00352C  D015               	goto	l5660
  3016  00352E                     l5658:
  3017  00352E  0E88               	movlw	low main_loop@batmsg
  3018  003530  0100               	movlb	0	; () banked
  3019  003532  6FB9               	movwf	sprintf@s& (0+255),b
  3020  003534  0E04               	movlw	high main_loop@batmsg
  3021  003536  6FBA               	movwf	(sprintf@s+1)& (0+255),b
  3022  003538  0E5D               	movlw	low STR_5
  3023  00353A  6FBB               	movwf	sprintf@fmt& (0+255),b
  3024  00353C  0061  F2E8  F0BC   	movff	main_loop@bat_percent,?_sprintf+3
  3025  003542  0061  F2EC  F0BD   	movff	main_loop@bat_percent+1,?_sprintf+4
  3026  003548  0061  F2F0  F0BE   	movff	main_loop@bat_percent+2,?_sprintf+5
  3027  00354E  0061  F2F4  F0BF   	movff	main_loop@bat_percent+3,?_sprintf+6
  3028  003554  ECFB  F02C         	call	_sprintf	;wreg free
  3029  003558                     l5660:
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;main.c: 189:         lcd_set_data_addr(0);
  3033  003558  0E00               	movlw	0
  3034  00355A  ECF7  F02D         	call	_lcd_set_data_addr
  3035                           
  3036                           ;main.c: 190:         lcd_print(batmsg);
  3037  00355E  0E88               	movlw	low main_loop@batmsg
  3038  003560  6E05               	movwf	lcd_print@string^0,c
  3039  003562  0E04               	movlw	high main_loop@batmsg
  3040  003564  6E06               	movwf	(lcd_print@string+1)^0,c
  3041  003566  ECB4  F029         	call	_lcd_print	;wreg free
  3042                           
  3043                           ;main.c: 198:         counter = 0;
  3044  00356A  0E00               	movlw	0
  3045  00356C  0104               	movlb	4	; () banked
  3046  00356E  6F30               	movwf	main_loop@counter& (0+255),b
  3047  003570  0E00               	movlw	0
  3048  003572  6F31               	movwf	(main_loop@counter+1)& (0+255),b
  3049  003574  0E00               	movlw	0
  3050  003576  6F32               	movwf	(main_loop@counter+2)& (0+255),b
  3051  003578  0E00               	movlw	0
  3052  00357A  6F33               	movwf	(main_loop@counter+3)& (0+255),b
  3053  00357C                     l5666:
  3054                           
  3055                           ; BSR set to: 4
  3056                           ;main.c: 201:     uart_tasks();
  3057  00357C  EC70  F025         	call	_uart_tasks	;wreg free
  3058  003580  0004               	clrwdt		;# 
  3059                           
  3060                           ;main.c: 204:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  3061  003582  0E35               	movlw	53
  3062  003584                     u7287:
  3063  003584  2EE8               	decfsz	wreg,f,c
  3064  003586  D7FE               	bra	u7287
  3065  003588  F000               	nop	
  3066  00358A  0012               	return		;funcret
  3067  00358C                     __end_of_main_loop:
  3068                           	opt callstack 0
  3069                           
  3070 ;; *************** function _uart_tasks *****************
  3071 ;; Defined at:
  3072 ;;		line 76 in file "uart.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;		None
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  val             1   34[COMRAM] unsigned char 
  3077 ;;  intPos          1   31[COMRAM] unsigned char 
  3078 ;;  bytePos         1   30[COMRAM] unsigned char 
  3079 ;;  posInRawMsg     1   28[COMRAM] unsigned char 
  3080 ;;  message       256    0[BANK3 ] unsigned char [256]
  3081 ;;  zeroByte        1   33[COMRAM] _Bool 
  3082 ;;  msgLen          1   32[COMRAM] unsigned char 
  3083 ;;  i               1   29[COMRAM] unsigned char 
  3084 ;;  msgOffset       1   27[COMRAM] unsigned char 
  3085 ;;  checksum        1   26[COMRAM] unsigned char 
  3086 ;;  rawMsgOffset    1   25[COMRAM] unsigned char 
  3087 ;;  rxLen           1   24[COMRAM] unsigned char 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  1    wreg      void 
  3090 ;; Registers used:
  3091 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3092 ;; Tracked objects:
  3093 ;;		On entry : 3F/4
  3094 ;;		On exit  : 4/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3098 ;;      Locals:        11       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3099 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3100 ;;      Totals:        15       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3101 ;;Total ram usage:      271 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; Hardware stack levels required when called:    3
  3104 ;; This function calls:
  3105 ;;		_handle_message
  3106 ;;		_transmitChecksum
  3107 ;; This function is called by:
  3108 ;;		_main_loop
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text3
  3113  004AE0                     __ptext3:
  3114                           	opt callstack 0
  3115  004AE0                     _uart_tasks:
  3116                           	opt callstack 26
  3117                           
  3118                           ; BSR set to: 4
  3119                           ;uart.c: 77:     static uint8_t rxPos = 0;;uart.c: 79:     if (DMA2SCNTIF) transmitCheck
      +                          sum();
  3120                           
  3121                           ;incstack = 0
  3122  004AE0  0139               	movlb	57	; () banked
  3123  004AE2  B5A5               	btfsc	165,2,b	;volatile
  3124                           
  3125                           ; BSR set to: 57
  3126  004AE4  EC02  F02E         	call	_transmitChecksum	;wreg free
  3127                           
  3128                           ; BSR set to: 57
  3129                           ;uart.c: 81:     if (DMA1DPTRL == rxPos) return;
  3130  004AE8  0100               	movlb	0	; () banked
  3131  004AEA  51E1               	movf	uart_tasks@rxPos& (0+255),w,b
  3132  004AEC  013B               	movlb	59	; () banked
  3133  004AEE  19EC               	xorwf	236,w,b	;volatile
  3134  004AF0  B4D8               	btfsc	status,2,c
  3135  004AF2  0012               	return	
  3136                           
  3137                           ; BSR set to: 59
  3138                           ;uart.c: 82:     uint8_t rxLen = DMA1DPTRL - rxPos;
  3139  004AF4  0100               	movlb	0	; () banked
  3140  004AF6  51E1               	movf	uart_tasks@rxPos& (0+255),w,b
  3141  004AF8  013B               	movlb	59	; () banked
  3142  004AFA  5DEC               	subwf	236,w,b	;volatile
  3143  004AFC  6E19               	movwf	uart_tasks@rxLen^0,c
  3144                           
  3145                           ; BSR set to: 59
  3146                           ;uart.c: 83:     uint8_t i;;uart.c: 84:     _Bool zeroByte = 0;
  3147  004AFE  0E00               	movlw	0
  3148  004B00  6E22               	movwf	uart_tasks@zeroByte^0,c
  3149                           
  3150                           ; BSR set to: 59
  3151                           ;uart.c: 85:     uint8_t msgLen = 0;
  3152  004B02  0E00               	movlw	0
  3153  004B04  6E21               	movwf	uart_tasks@msgLen^0,c
  3154                           
  3155                           ; BSR set to: 59
  3156                           ;uart.c: 86:     uint8_t checksum = 0;
  3157  004B06  0E00               	movlw	0
  3158  004B08  6E1B               	movwf	uart_tasks@checksum^0,c
  3159                           
  3160                           ; BSR set to: 59
  3161                           ;uart.c: 87:     uint8_t message[256];;uart.c: 88:     uint8_t msgOffset = 0;
  3162  004B0A  0E00               	movlw	0
  3163  004B0C  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3164                           
  3165                           ; BSR set to: 59
  3166                           ;uart.c: 89:     uint8_t rawMsgOffset = 0;
  3167  004B0E  0E00               	movlw	0
  3168  004B10  6E1A               	movwf	uart_tasks@rawMsgOffset^0,c
  3169                           
  3170                           ; BSR set to: 59
  3171                           ;uart.c: 90:     for (i = 0; i < rxLen; i++) {
  3172  004B12  0E00               	movlw	0
  3173  004B14  6E1E               	movwf	uart_tasks@i^0,c
  3174  004B16  D08E               	goto	l4788
  3175  004B18                     l4726:
  3176                           
  3177                           ;uart.c: 91:         uint8_t bytePos = i - msgOffset;
  3178  004B18  501C               	movf	uart_tasks@msgOffset^0,w,c
  3179  004B1A  5C1E               	subwf	uart_tasks@i^0,w,c
  3180  004B1C  6E1F               	movwf	uart_tasks@bytePos^0,c
  3181                           
  3182                           ;uart.c: 92:         uint8_t intPos = rxPos + i;
  3183  004B1E  0100               	movlb	0	; () banked
  3184  004B20  51E1               	movf	uart_tasks@rxPos& (0+255),w,b
  3185  004B22  241E               	addwf	uart_tasks@i^0,w,c
  3186  004B24  6E20               	movwf	uart_tasks@intPos^0,c
  3187                           
  3188                           ; BSR set to: 0
  3189                           ;uart.c: 93:         uint8_t val = rxBuf[intPos];
  3190  004B26  0E00               	movlw	0
  3191  004B28  2420               	addwf	uart_tasks@intPos^0,w,c
  3192  004B2A  6ED9               	movwf	fsr2l,c
  3193  004B2C  6ADA               	clrf	fsr2h,c
  3194  004B2E  0E01               	movlw	1
  3195  004B30  22DA               	addwfc	fsr2h,f,c
  3196  004B32  50DF               	movf	indf2,w,c
  3197  004B34  6E23               	movwf	uart_tasks@val^0,c
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;uart.c: 94:         uint8_t posInRawMsg = bytePos - (3 + zeroByte);
  3201  004B36  5022               	movf	uart_tasks@zeroByte^0,w,c
  3202  004B38  5C1F               	subwf	uart_tasks@bytePos^0,w,c
  3203  004B3A  0FFD               	addlw	253
  3204  004B3C  6E1D               	movwf	uart_tasks@posInRawMsg^0,c
  3205                           
  3206                           ; BSR set to: 0
  3207                           ;uart.c: 95:         if (bytePos == zeroByte) {
  3208  004B3E  5022               	movf	uart_tasks@zeroByte^0,w,c
  3209  004B40  181F               	xorwf	uart_tasks@bytePos^0,w,c
  3210  004B42  A4D8               	btfss	status,2,c
  3211  004B44  D011               	goto	l4746
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;uart.c: 96:             if (val == 0x00 && !zeroByte) {
  3215  004B46  5023               	movf	uart_tasks@val^0,w,c
  3216  004B48  A4D8               	btfss	status,2,c
  3217  004B4A  D005               	goto	l4740
  3218                           
  3219                           ; BSR set to: 0
  3220  004B4C  5022               	movf	uart_tasks@zeroByte^0,w,c
  3221  004B4E  A4D8               	btfss	status,2,c
  3222  004B50  D002               	goto	l4740
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;uart.c: 97:                 zeroByte = 1;
  3226  004B52  0E01               	movlw	1
  3227  004B54  D007               	goto	L1
  3228  004B56                     l4740:
  3229                           
  3230                           ; BSR set to: 0
  3231  004B56  0EAA               	movlw	170
  3232  004B58  1823               	xorwf	uart_tasks@val^0,w,c
  3233  004B5A  B4D8               	btfsc	status,2,c
  3234  004B5C  D06A               	goto	l4786
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;uart.c: 99:                 msgOffset = intPos + 1;
  3238  004B5E  2820               	incf	uart_tasks@intPos^0,w,c
  3239  004B60  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3240                           
  3241                           ; BSR set to: 0
  3242                           ;uart.c: 100:                 zeroByte = 0;
  3243  004B62  0E00               	movlw	0
  3244  004B64                     L1:
  3245  004B64  6E22               	movwf	uart_tasks@zeroByte^0,c
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;uart.c: 102:         } else if (bytePos == 1 + zeroByte) {
  3249  004B66  D065               	goto	l4786
  3250  004B68                     l4746:
  3251                           
  3252                           ; BSR set to: 0
  3253  004B68  501F               	movf	uart_tasks@bytePos^0,w,c
  3254  004B6A  6E15               	movwf	??_uart_tasks^0,c
  3255  004B6C  6A16               	clrf	(??_uart_tasks+1)^0,c
  3256  004B6E  5022               	movf	uart_tasks@zeroByte^0,w,c
  3257  004B70  6E17               	movwf	(??_uart_tasks+2)^0,c
  3258  004B72  6A18               	clrf	(??_uart_tasks+3)^0,c
  3259  004B74  0E01               	movlw	1
  3260  004B76  2617               	addwf	(??_uart_tasks+2)^0,f,c
  3261  004B78  0E00               	movlw	0
  3262  004B7A  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  3263  004B7C  5015               	movf	??_uart_tasks^0,w,c
  3264  004B7E  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  3265  004B80  E107               	bnz	l4750
  3266  004B82  5016               	movf	(??_uart_tasks+1)^0,w,c
  3267  004B84  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  3268  004B86  A4D8               	btfss	status,2,c
  3269  004B88  D003               	goto	l4750
  3270  004B8A                     u5780:
  3271                           
  3272                           ; BSR set to: 0
  3273                           ;uart.c: 103:             checksum += val;
  3274  004B8A  5023               	movf	uart_tasks@val^0,w,c
  3275  004B8C  261B               	addwf	uart_tasks@checksum^0,f,c
  3276                           
  3277                           ;uart.c: 104:         } else if (bytePos == 2 + zeroByte) {
  3278  004B8E  D051               	goto	l4786
  3279  004B90                     l4750:
  3280                           
  3281                           ; BSR set to: 0
  3282  004B90  501F               	movf	uart_tasks@bytePos^0,w,c
  3283  004B92  6E15               	movwf	??_uart_tasks^0,c
  3284  004B94  6A16               	clrf	(??_uart_tasks+1)^0,c
  3285  004B96  5022               	movf	uart_tasks@zeroByte^0,w,c
  3286  004B98  6E17               	movwf	(??_uart_tasks+2)^0,c
  3287  004B9A  6A18               	clrf	(??_uart_tasks+3)^0,c
  3288  004B9C  0E02               	movlw	2
  3289  004B9E  2617               	addwf	(??_uart_tasks+2)^0,f,c
  3290  004BA0  0E00               	movlw	0
  3291  004BA2  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  3292  004BA4  5015               	movf	??_uart_tasks^0,w,c
  3293  004BA6  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  3294  004BA8  E113               	bnz	l4764
  3295  004BAA  5016               	movf	(??_uart_tasks+1)^0,w,c
  3296  004BAC  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  3297  004BAE  A4D8               	btfss	status,2,c
  3298  004BB0  D00F               	goto	l4764
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;uart.c: 105:             msgLen = val;
  3302  004BB2  0060  F08C  F021   	movff	uart_tasks@val,uart_tasks@msgLen
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;uart.c: 106:             checksum += val;
  3306  004BB8  5023               	movf	uart_tasks@val^0,w,c
  3307  004BBA  261B               	addwf	uart_tasks@checksum^0,f,c
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;uart.c: 107:             if (msgLen == 0) {
  3311  004BBC  5021               	movf	uart_tasks@msgLen^0,w,c
  3312  004BBE  A4D8               	btfss	status,2,c
  3313  004BC0  D038               	goto	l4786
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;uart.c: 108:                 msgOffset = intPos + 1;
  3317  004BC2  2820               	incf	uart_tasks@intPos^0,w,c
  3318  004BC4  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3319                           
  3320                           ; BSR set to: 0
  3321                           ;uart.c: 109:                 zeroByte = 0;
  3322  004BC6  0E00               	movlw	0
  3323  004BC8  6E22               	movwf	uart_tasks@zeroByte^0,c
  3324  004BCA                     l4762:
  3325                           
  3326                           ;uart.c: 110:                 checksum = 0;
  3327  004BCA  0E00               	movlw	0
  3328  004BCC  6E1B               	movwf	uart_tasks@checksum^0,c
  3329  004BCE  D031               	goto	l4786
  3330  004BD0                     l4764:
  3331                           
  3332                           ; BSR set to: 0
  3333  004BD0  5021               	movf	uart_tasks@msgLen^0,w,c
  3334  004BD2  5C1D               	subwf	uart_tasks@posInRawMsg^0,w,c
  3335  004BD4  B0D8               	btfsc	status,0,c
  3336  004BD6  D012               	goto	l4770
  3337                           
  3338                           ; BSR set to: 0
  3339                           ;uart.c: 113:             message[rawMsgOffset + posInRawMsg] = val;
  3340  004BD8  0E00               	movlw	low uart_tasks@message
  3341  004BDA  6E15               	movwf	??_uart_tasks^0,c
  3342  004BDC  0E03               	movlw	high uart_tasks@message
  3343  004BDE  6E16               	movwf	(??_uart_tasks+1)^0,c
  3344  004BE0  501A               	movf	uart_tasks@rawMsgOffset^0,w,c
  3345  004BE2  2615               	addwf	??_uart_tasks^0,f,c
  3346  004BE4  0E00               	movlw	0
  3347  004BE6  2216               	addwfc	(??_uart_tasks+1)^0,f,c
  3348  004BE8  501D               	movf	uart_tasks@posInRawMsg^0,w,c
  3349  004BEA  2415               	addwf	??_uart_tasks^0,w,c
  3350  004BEC  6ED9               	movwf	fsr2l,c
  3351  004BEE  0E00               	movlw	0
  3352  004BF0  2016               	addwfc	(??_uart_tasks+1)^0,w,c
  3353  004BF2  6EDA               	movwf	fsr2h,c
  3354  004BF4  0060  F08F  FFDF   	movff	uart_tasks@val,indf2
  3355  004BFA  D7C7               	goto	u5780
  3356  004BFC                     l4770:
  3357                           
  3358                           ; BSR set to: 0
  3359  004BFC  5021               	movf	uart_tasks@msgLen^0,w,c
  3360  004BFE  181D               	xorwf	uart_tasks@posInRawMsg^0,w,c
  3361  004C00  A4D8               	btfss	status,2,c
  3362  004C02  D017               	goto	l4786
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;uart.c: 116:             checksum += val;
  3366  004C04  5023               	movf	uart_tasks@val^0,w,c
  3367  004C06  261B               	addwf	uart_tasks@checksum^0,f,c
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;uart.c: 117:             if (checksum == 0x00) {
  3371  004C08  501B               	movf	uart_tasks@checksum^0,w,c
  3372  004C0A  A4D8               	btfss	status,2,c
  3373  004C0C  D00B               	goto	l4778
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;uart.c: 118:                 handle_message(message + rawMsgOffset, msgLen);
  3377  004C0E  0E00               	movlw	low uart_tasks@message
  3378  004C10  241A               	addwf	uart_tasks@rawMsgOffset^0,w,c
  3379  004C12  6E11               	movwf	handle_message@message^0,c
  3380  004C14  6A12               	clrf	(handle_message@message+1)^0,c
  3381  004C16  0E03               	movlw	high uart_tasks@message
  3382  004C18  2212               	addwfc	(handle_message@message+1)^0,f,c
  3383  004C1A  0060  F084  F013   	movff	uart_tasks@msgLen,handle_message@len
  3384  004C20  EC17  F028         	call	_handle_message	;wreg free
  3385  004C24                     l4778:
  3386                           
  3387                           ;uart.c: 120:             msgOffset = intPos + 1;
  3388  004C24  2820               	incf	uart_tasks@intPos^0,w,c
  3389  004C26  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3390                           
  3391                           ;uart.c: 121:             zeroByte = 0;
  3392  004C28  0E00               	movlw	0
  3393  004C2A  6E22               	movwf	uart_tasks@zeroByte^0,c
  3394                           
  3395                           ;uart.c: 122:             rawMsgOffset += msgLen;
  3396  004C2C  5021               	movf	uart_tasks@msgLen^0,w,c
  3397  004C2E  261A               	addwf	uart_tasks@rawMsgOffset^0,f,c
  3398  004C30  D7CC               	goto	l4762
  3399  004C32                     l4786:
  3400                           
  3401                           ;uart.c: 125:     }
  3402  004C32  2A1E               	incf	uart_tasks@i^0,f,c
  3403  004C34                     l4788:
  3404  004C34  5019               	movf	uart_tasks@rxLen^0,w,c
  3405  004C36  5C1E               	subwf	uart_tasks@i^0,w,c
  3406  004C38  A0D8               	btfss	status,0,c
  3407  004C3A  D76E               	goto	l4726
  3408                           
  3409                           ;uart.c: 126:     rxPos = msgOffset;
  3410  004C3C  0060  F070  F0E1   	movff	uart_tasks@msgOffset,uart_tasks@rxPos
  3411  004C42  0012               	return		;funcret
  3412  004C44                     __end_of_uart_tasks:
  3413                           	opt callstack 0
  3414                           
  3415 ;; *************** function _handle_message *****************
  3416 ;; Defined at:
  3417 ;;		line 58 in file "uart.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;  message         2   16[COMRAM] PTR unsigned char 
  3420 ;;		 -> uart_tasks@message(256), 
  3421 ;;  len             1   18[COMRAM] unsigned char 
  3422 ;; Auto vars:     Size  Location     Type
  3423 ;;		None
  3424 ;; Return value:  Size  Location     Type
  3425 ;;                  1    wreg      void 
  3426 ;; Registers used:
  3427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3428 ;; Tracked objects:
  3429 ;;		On entry : 3F/0
  3430 ;;		On exit  : 3F/3B
  3431 ;;		Unchanged: 0/0
  3432 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3433 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3436 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3437 ;;Total ram usage:        4 bytes
  3438 ;; Hardware stack levels used:    1
  3439 ;; Hardware stack levels required when called:    2
  3440 ;; This function calls:
  3441 ;;		_uart_send
  3442 ;; This function is called by:
  3443 ;;		_uart_tasks
  3444 ;; This function uses a non-reentrant model
  3445 ;;
  3446                           
  3447                           	psect	text4
  3448  00502E                     __ptext4:
  3449                           	opt callstack 0
  3450  00502E                     _handle_message:
  3451                           	opt callstack 26
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;uart.c: 59:     if (message[0] == 0x17 && message[2] == 0x04 && len == 4) {
  3455                           
  3456                           ;incstack = 0
  3457  00502E  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  3458  005034  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  3459  00503A  0E17               	movlw	23
  3460  00503C  18DE               	xorwf	postinc2,w,c
  3461  00503E  A4D8               	btfss	status,2,c
  3462  005040  D019               	goto	l4604
  3463                           
  3464                           ; BSR set to: 0
  3465  005042  EE20 F002          	lfsr	2,2
  3466  005046  5011               	movf	handle_message@message^0,w,c
  3467  005048  26D9               	addwf	fsr2l,f,c
  3468  00504A  5012               	movf	(handle_message@message+1)^0,w,c
  3469  00504C  22DA               	addwfc	fsr2h,f,c
  3470  00504E  0E04               	movlw	4
  3471  005050  18DE               	xorwf	postinc2,w,c
  3472  005052  A4D8               	btfss	status,2,c
  3473  005054  D00F               	goto	l4604
  3474                           
  3475                           ; BSR set to: 0
  3476  005056  0E04               	movlw	4
  3477  005058  1813               	xorwf	handle_message@len^0,w,c
  3478  00505A  A4D8               	btfss	status,2,c
  3479  00505C  D00B               	goto	l4604
  3480                           
  3481                           ; BSR set to: 0
  3482                           ;uart.c: 60:         volume_level = message[3] & 0x0f;
  3483  00505E  EE20 F003          	lfsr	2,3
  3484  005062  5011               	movf	handle_message@message^0,w,c
  3485  005064  26D9               	addwf	fsr2l,f,c
  3486  005066  5012               	movf	(handle_message@message+1)^0,w,c
  3487  005068  22DA               	addwfc	fsr2h,f,c
  3488  00506A  50DF               	movf	indf2,w,c
  3489  00506C  0B0F               	andlw	15
  3490  00506E  0104               	movlb	4	; () banked
  3491  005070  6F37               	movwf	_volume_level& (0+255),b
  3492                           
  3493                           ;uart.c: 61:     } else if (message[0] == 0x1E && len == 8) {
  3494  005072  D029               	goto	l4610
  3495  005074                     l4604:
  3496                           
  3497                           ; BSR set to: 0
  3498  005074  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  3499  00507A  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  3500  005080  0E1E               	movlw	30
  3501  005082  18DE               	xorwf	postinc2,w,c
  3502  005084  A4D8               	btfss	status,2,c
  3503  005086  D01F               	goto	l4610
  3504                           
  3505                           ; BSR set to: 0
  3506  005088  0E08               	movlw	8
  3507  00508A  1813               	xorwf	handle_message@len^0,w,c
  3508  00508C  A4D8               	btfss	status,2,c
  3509  00508E  D01B               	goto	l4610
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;uart.c: 62:         pairing = message[1] == 0x01;
  3513  005090  EE20 F001          	lfsr	2,1
  3514  005094  5011               	movf	handle_message@message^0,w,c
  3515  005096  26D9               	addwf	fsr2l,f,c
  3516  005098  5012               	movf	(handle_message@message+1)^0,w,c
  3517  00509A  22DA               	addwfc	fsr2h,f,c
  3518  00509C  04DE               	decf	postinc2,w,c
  3519  00509E  A4D8               	btfss	status,2,c
  3520  0050A0  D002               	goto	u5520
  3521  0050A2  0E01               	movlw	1
  3522  0050A4  D001               	goto	u5530
  3523  0050A6                     u5520:
  3524  0050A6  0E00               	movlw	0
  3525  0050A8                     u5530:
  3526  0050A8  6FE2               	movwf	_pairing& (0+255),b
  3527                           
  3528                           ;uart.c: 63:         streaming = message[6];
  3529  0050AA  EE20 F006          	lfsr	2,6
  3530  0050AE  5011               	movf	handle_message@message^0,w,c
  3531  0050B0  26D9               	addwf	fsr2l,f,c
  3532  0050B2  5012               	movf	(handle_message@message+1)^0,w,c
  3533  0050B4  22DA               	addwfc	fsr2h,f,c
  3534  0050B6  50DF               	movf	indf2,w,c
  3535  0050B8  B4D8               	btfsc	status,2,c
  3536  0050BA  D002               	goto	u5540
  3537  0050BC  0E01               	movlw	1
  3538  0050BE  D001               	goto	u5550
  3539  0050C0                     u5540:
  3540  0050C0  0E00               	movlw	0
  3541  0050C2                     u5550:
  3542  0050C2  0104               	movlb	4	; () banked
  3543  0050C4  6F36               	movwf	_streaming& (0+255),b
  3544  0050C6                     l4610:
  3545                           
  3546                           ;uart.c: 66:     ackCmd[1] = message[0];
  3547  0050C6  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  3548  0050CC  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  3549  0050D2  50DF               	movf	indf2,w,c
  3550  0050D4  0100               	movlb	0	; () banked
  3551  0050D6  6FE4               	movwf	(_ackCmd+1)& (0+255),b
  3552                           
  3553                           ; BSR set to: 0
  3554                           ;uart.c: 67:     uart_send(ackCmd, 2);
  3555  0050D8  0EE3               	movlw	low _ackCmd
  3556  0050DA  6E0C               	movwf	uart_send@buf^0,c
  3557  0050DC  6A0D               	clrf	(uart_send@buf+1)^0,c
  3558  0050DE  0E02               	movlw	2
  3559  0050E0  6E0E               	movwf	uart_send@len^0,c
  3560  0050E2  EC07  F02B         	call	_uart_send	;wreg free
  3561                           
  3562                           ; BSR set to: 59
  3563  0050E6  0012               	return		;funcret
  3564  0050E8                     __end_of_handle_message:
  3565                           	opt callstack 0
  3566                           
  3567 ;; *************** function _uart_send *****************
  3568 ;; Defined at:
  3569 ;;		line 129 in file "uart.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  buf             2   11[COMRAM] PTR unsigned char 
  3572 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  3573 ;;  len             1   13[COMRAM] unsigned char 
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/4
  3582 ;;		On exit  : 3F/3B
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3589 ;;Total ram usage:        5 bytes
  3590 ;; Hardware stack levels used:    1
  3591 ;; Hardware stack levels required when called:    1
  3592 ;; This function calls:
  3593 ;;		_memcpy
  3594 ;;		_transmitChecksum
  3595 ;; This function is called by:
  3596 ;;		_main_loop
  3597 ;;		_handle_message
  3598 ;; This function uses a non-reentrant model
  3599 ;;
  3600                           
  3601                           	psect	text5
  3602  00560E                     __ptext5:
  3603                           	opt callstack 0
  3604  00560E                     _uart_send:
  3605                           	opt callstack 26
  3606                           
  3607                           ;uart.c: 130:     while (DMA2CON0bits.SIRQEN);
  3608                           
  3609                           ; BSR set to: 59
  3610                           ;incstack = 0
  3611  00560E  013B               	movlb	59	; () banked
  3612  005610  BDDC               	btfsc	220,6,b	;volatile
  3613  005612  D7FD               	goto	_uart_send
  3614                           
  3615                           ; BSR set to: 59
  3616                           ;uart.c: 131:     if (DMA2SCNTIF) transmitChecksum();
  3617  005614  0139               	movlb	57	; () banked
  3618  005616  B5A5               	btfsc	165,2,b	;volatile
  3619                           
  3620                           ; BSR set to: 57
  3621  005618  EC02  F02E         	call	_transmitChecksum	;wreg free
  3622                           
  3623                           ; BSR set to: 57
  3624                           ;uart.c: 132:     DMA2CON0bits.EN = 0;
  3625  00561C  013B               	movlb	59	; () banked
  3626  00561E  9FDC               	bcf	220,7,b	;volatile
  3627                           
  3628                           ; BSR set to: 59
  3629                           ;uart.c: 133:     txBuf[0] = 0xAA;
  3630  005620  0EAA               	movlw	170
  3631  005622  0102               	movlb	2	; () banked
  3632  005624  6F00               	movwf	0,b
  3633                           
  3634                           ; BSR set to: 2
  3635                           ;uart.c: 134:     txBuf[1] = 0x00;
  3636  005626  0E00               	movlw	0
  3637  005628  6F01               	movwf	1,b
  3638                           
  3639                           ; BSR set to: 2
  3640                           ;uart.c: 135:     txBuf[2] = len;
  3641  00562A  0060  F038  F202   	movff	uart_send@len,514
  3642                           
  3643                           ; BSR set to: 2
  3644                           ;uart.c: 136:     memcpy(txBuf + 3, buf, len);
  3645  005630  0E03               	movlw	3
  3646  005632  6E01               	movwf	memcpy@d1^0,c
  3647  005634  0E02               	movlw	2
  3648  005636  6E02               	movwf	(memcpy@d1+1)^0,c
  3649  005638  0060  F030  F003   	movff	uart_send@buf,memcpy@s1
  3650  00563E  0060  F034  F004   	movff	uart_send@buf+1,memcpy@s1+1
  3651  005644  0060  F038  F005   	movff	uart_send@len,memcpy@n
  3652  00564A  6A06               	clrf	(memcpy@n+1)^0,c
  3653  00564C  EC7C  F02B         	call	_memcpy	;wreg free
  3654                           
  3655                           ;uart.c: 137:     DMA2SSZH = ((uint16_t)len + 3) >> 8;
  3656  005650  500E               	movf	uart_send@len^0,w,c
  3657  005652  6E0F               	movwf	??_uart_send^0,c
  3658  005654  6A10               	clrf	(??_uart_send+1)^0,c
  3659  005656  0E03               	movlw	3
  3660  005658  260F               	addwf	??_uart_send^0,f,c
  3661  00565A  0E00               	movlw	0
  3662  00565C  2210               	addwfc	(??_uart_send+1)^0,f,c
  3663  00565E  0060  F040  F00F   	movff	??_uart_send+1,??_uart_send
  3664  005664  6A10               	clrf	(??_uart_send+1)^0,c
  3665  005666  500F               	movf	??_uart_send^0,w,c
  3666  005668  013B               	movlb	59	; () banked
  3667  00566A  6FD8               	movwf	216,b	;volatile
  3668                           
  3669                           ; BSR set to: 59
  3670                           ;uart.c: 138:     DMA2SSZL = (len + 3) & 0xff;
  3671  00566C  500E               	movf	uart_send@len^0,w,c
  3672  00566E  0F03               	addlw	3
  3673  005670  6FD7               	movwf	215,b	;volatile
  3674                           
  3675                           ; BSR set to: 59
  3676                           ;uart.c: 139:     U1TXCHK = 0;
  3677  005672  0E00               	movlw	0
  3678  005674  013D               	movlb	61	; () banked
  3679  005676  6FEB               	movwf	235,b	;volatile
  3680                           
  3681                           ; BSR set to: 61
  3682                           ;uart.c: 140:     DMA2SCNTIF = 0;
  3683  005678  0139               	movlb	57	; () banked
  3684  00567A  95A5               	bcf	165,2,b	;volatile
  3685                           
  3686                           ; BSR set to: 57
  3687                           ;uart.c: 141:     DMA2CON0bits.EN = 1;
  3688  00567C  013B               	movlb	59	; () banked
  3689  00567E  8FDC               	bsf	220,7,b	;volatile
  3690                           
  3691                           ; BSR set to: 59
  3692                           ;uart.c: 142:     DMA2CON0bits.SIRQEN = 1;
  3693  005680  8DDC               	bsf	220,6,b	;volatile
  3694                           
  3695                           ; BSR set to: 59
  3696  005682  0012               	return		;funcret
  3697  005684                     __end_of_uart_send:
  3698                           	opt callstack 0
  3699                           
  3700 ;; *************** function _transmitChecksum *****************
  3701 ;; Defined at:
  3702 ;;		line 70 in file "uart.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;		None
  3707 ;; Return value:  Size  Location     Type
  3708 ;;                  1    wreg      void 
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, status,0
  3711 ;; Tracked objects:
  3712 ;;		On entry : 3F/39
  3713 ;;		On exit  : 3F/39
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3720 ;;Total ram usage:        0 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; This function calls:
  3723 ;;		Nothing
  3724 ;; This function is called by:
  3725 ;;		_uart_tasks
  3726 ;;		_uart_send
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730                           	psect	text6
  3731  005C04                     __ptext6:
  3732                           	opt callstack 0
  3733  005C04                     _transmitChecksum:
  3734                           	opt callstack 28
  3735                           
  3736                           ; BSR set to: 57
  3737                           
  3738                           ; BSR set to: 57
  3739                           ;uart.c: 71:     while (!U1TXIF);
  3740                           
  3741                           ; BSR set to: 59
  3742                           ;incstack = 0
  3743  005C04  A9A3               	btfss	163,4,b	;volatile
  3744  005C06  D7FE               	goto	_transmitChecksum
  3745                           
  3746                           ; BSR set to: 57
  3747                           ;uart.c: 72:     U1TXB = -(U1TXCHK - 0xaa);
  3748  005C08  013D               	movlb	61	; () banked
  3749  005C0A  51EB               	movf	235,w,b	;volatile
  3750  005C0C  0F56               	addlw	86
  3751  005C0E  0800               	sublw	0
  3752  005C10  6FEA               	movwf	234,b	;volatile
  3753                           
  3754                           ; BSR set to: 61
  3755                           ;uart.c: 73:     DMA2SCNTIF = 0;
  3756  005C12  0139               	movlb	57	; () banked
  3757  005C14  95A5               	bcf	165,2,b	;volatile
  3758                           
  3759                           ; BSR set to: 57
  3760  005C16  0012               	return		;funcret
  3761  005C18                     __end_of_transmitChecksum:
  3762                           	opt callstack 0
  3763                           
  3764 ;; *************** function _memcpy *****************
  3765 ;; Defined at:
  3766 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  d1              2    0[COMRAM] PTR void 
  3769 ;;		 -> txBuf(256), 
  3770 ;;  s1              2    2[COMRAM] PTR const void 
  3771 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  3772 ;;  n               2    4[COMRAM] unsigned int 
  3773 ;; Auto vars:     Size  Location     Type
  3774 ;;  s               2    8[COMRAM] PTR const unsigned char 
  3775 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  3776 ;;  d               2    6[COMRAM] PTR unsigned char 
  3777 ;;		 -> txBuf(256), 
  3778 ;;  tmp             1   10[COMRAM] unsigned char 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  2    0[COMRAM] PTR void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3783 ;; Tracked objects:
  3784 ;;		On entry : 3F/2
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3788 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3789 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3791 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3792 ;;Total ram usage:       11 bytes
  3793 ;; Hardware stack levels used:    1
  3794 ;; This function calls:
  3795 ;;		Nothing
  3796 ;; This function is called by:
  3797 ;;		_uart_send
  3798 ;; This function uses a non-reentrant model
  3799 ;;
  3800                           
  3801                           	psect	text7
  3802  0056F8                     __ptext7:
  3803                           	opt callstack 0
  3804  0056F8                     _memcpy:
  3805                           	opt callstack 26
  3806                           
  3807                           ; BSR set to: 2
  3808                           
  3809                           ; BSR set to: 57
  3810                           ;incstack = 0
  3811  0056F8  0060  F00C  F009   	movff	memcpy@s1,memcpy@s
  3812  0056FE  0060  F010  F00A   	movff	memcpy@s1+1,memcpy@s+1
  3813  005704  0060  F004  F007   	movff	memcpy@d1,memcpy@d
  3814  00570A  0060  F008  F008   	movff	memcpy@d1+1,memcpy@d+1
  3815  005710  D023               	goto	l4074
  3816  005712                     l4066:
  3817  005712  0060  F027  FFF6   	movff	memcpy@s,tblptrl
  3818  005718  0060  F02B  FFF7   	movff	memcpy@s+1,tblptrh
  3819  00571E  0E00               	movlw	low (__smallconst shr (0+16))
  3820  005720  6EF8               	movwf	tblptru,c
  3821  005722  0E1F               	movlw	(high __ramtop+-1)
  3822  005724  64F7               	cpfsgt	tblptrh,c
  3823  005726  D003               	bra	u4587
  3824  005728  0008               	tblrd		*
  3825  00572A  50F5               	movf	tablat,w,c
  3826  00572C  D007               	bra	u4580
  3827  00572E                     u4587:
  3828  00572E  006F FFDB FFE1     	movff	tblptrl,fsr1l
  3829  005734  006F FFDF FFE2     	movff	tblptrh,fsr1h
  3830  00573A  50E7               	movf	indf1,w,c
  3831  00573C                     u4580:
  3832  00573C  6E0B               	movwf	memcpy@tmp^0,c
  3833  00573E  4A09               	infsnz	memcpy@s^0,f,c
  3834  005740  2A0A               	incf	(memcpy@s+1)^0,f,c
  3835  005742  0060  F01F  FFD9   	movff	memcpy@d,fsr2l
  3836  005748  0060  F023  FFDA   	movff	memcpy@d+1,fsr2h
  3837  00574E  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
  3838  005754  4A07               	infsnz	memcpy@d^0,f,c
  3839  005756  2A08               	incf	(memcpy@d+1)^0,f,c
  3840  005758                     l4074:
  3841  005758  0605               	decf	memcpy@n^0,f,c
  3842  00575A  A0D8               	btfss	status,0,c
  3843  00575C  0606               	decf	(memcpy@n+1)^0,f,c
  3844  00575E  2805               	incf	memcpy@n^0,w,c
  3845  005760  E1D8               	bnz	l4066
  3846  005762  2806               	incf	(memcpy@n+1)^0,w,c
  3847  005764  B4D8               	btfsc	status,2,c
  3848  005766  0012               	return	
  3849  005768  D7D4               	goto	l4066
  3850  00576A                     __end_of_memcpy:
  3851                           	opt callstack 0
  3852                           
  3853 ;; *************** function _sprintf *****************
  3854 ;; Defined at:
  3855 ;;		line 9 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  s               2   89[BANK0 ] PTR unsigned char 
  3858 ;;		 -> main_loop@batmsg(16), 
  3859 ;;  fmt             1   91[BANK0 ] PTR const unsigned char 
  3860 ;;		 -> STR_5(17), STR_4(18), STR_3(18), STR_2(19), 
  3861 ;;		 -> STR_1(11), 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  f               6   99[BANK0 ] struct _IO_FILE
  3864 ;;  ret             2    0        int 
  3865 ;;  ap              1   98[BANK0 ] PTR void [1]
  3866 ;;		 -> ?_sprintf(2), 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  2   89[BANK0 ] int 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 3F/0
  3873 ;;		On exit  : 3F/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3876 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3877 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;Total ram usage:       16 bytes
  3881 ;; Hardware stack levels used:    1
  3882 ;; Hardware stack levels required when called:    7
  3883 ;; This function calls:
  3884 ;;		_vfprintf
  3885 ;; This function is called by:
  3886 ;;		_main_loop
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           	psect	text8
  3891  0059F6                     __ptext8:
  3892                           	opt callstack 0
  3893  0059F6                     _sprintf:
  3894                           	opt callstack 22
  3895                           
  3896                           ; BSR set to: 0
  3897                           
  3898                           ;incstack = 0
  3899  0059F6  0EBC               	movlw	low (?_sprintf+3)
  3900  0059F8  6FC2               	movwf	sprintf@ap& (0+255),b
  3901  0059FA  0060  F2E4  F0C3   	movff	sprintf@s,sprintf@f
  3902  005A00  0060  F2E8  F0C4   	movff	sprintf@s+1,sprintf@f+1
  3903                           
  3904                           ; BSR set to: 0
  3905  005A06  0E00               	movlw	0
  3906  005A08  6FC6               	movwf	(sprintf@f+3)& (0+255),b
  3907  005A0A  0E00               	movlw	0
  3908  005A0C  6FC5               	movwf	(sprintf@f+2)& (0+255),b
  3909                           
  3910                           ; BSR set to: 0
  3911  005A0E  0E00               	movlw	0
  3912  005A10  6FC8               	movwf	(sprintf@f+5)& (0+255),b
  3913  005A12  0E00               	movlw	0
  3914  005A14  6FC7               	movwf	(sprintf@f+4)& (0+255),b
  3915                           
  3916                           ; BSR set to: 0
  3917  005A16  0EC3               	movlw	low sprintf@f
  3918  005A18  6FB5               	movwf	vfprintf@fp& (0+255),b
  3919  005A1A  0060  F2EC  F0B6   	movff	sprintf@fmt,vfprintf@fmt
  3920  005A20  0EC2               	movlw	low sprintf@ap
  3921  005A22  6FB7               	movwf	vfprintf@ap& (0+255),b
  3922  005A24  EC7E  F02C         	call	_vfprintf	;wreg free
  3923                           
  3924                           ; BSR set to: 0
  3925  005A28  51C5               	movf	(sprintf@f+2)& (0+255),w,b
  3926  005A2A  25B9               	addwf	sprintf@s& (0+255),w,b
  3927  005A2C  6ED9               	movwf	fsr2l,c
  3928  005A2E  51C6               	movf	(sprintf@f+3)& (0+255),w,b
  3929  005A30  21BA               	addwfc	(sprintf@s+1)& (0+255),w,b
  3930  005A32  6EDA               	movwf	fsr2h,c
  3931  005A34  0E00               	movlw	0
  3932  005A36  6EDF               	movwf	indf2,c
  3933                           
  3934                           ; BSR set to: 0
  3935  005A38  0012               	return		;funcret
  3936  005A3A                     __end_of_sprintf:
  3937                           	opt callstack 0
  3938                           
  3939 ;; *************** function _vfprintf *****************
  3940 ;; Defined at:
  3941 ;;		line 1368 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;  fp              1   85[BANK0 ] PTR struct _IO_FILE
  3944 ;;		 -> sprintf@f(6), 
  3945 ;;  fmt             1   86[BANK0 ] PTR const unsigned char 
  3946 ;;		 -> STR_5(17), STR_4(18), STR_3(18), STR_2(19), 
  3947 ;;		 -> STR_1(11), 
  3948 ;;  ap              1   87[BANK0 ] PTR PTR void 
  3949 ;;		 -> sprintf@ap(1), 
  3950 ;; Auto vars:     Size  Location     Type
  3951 ;;  cfmt            1   88[BANK0 ] PTR unsigned char 
  3952 ;;		 -> STR_5(17), STR_4(18), STR_3(18), STR_2(19), 
  3953 ;;		 -> STR_1(11), 
  3954 ;; Return value:  Size  Location     Type
  3955 ;;                  2   85[BANK0 ] int 
  3956 ;; Registers used:
  3957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3958 ;; Tracked objects:
  3959 ;;		On entry : 3F/0
  3960 ;;		On exit  : 3F/0
  3961 ;;		Unchanged: 0/0
  3962 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3963 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3964 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;Total ram usage:        4 bytes
  3968 ;; Hardware stack levels used:    1
  3969 ;; Hardware stack levels required when called:    6
  3970 ;; This function calls:
  3971 ;;		_vfpfcnvrt
  3972 ;; This function is called by:
  3973 ;;		_sprintf
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text9
  3978  0058FC                     __ptext9:
  3979                           	opt callstack 0
  3980  0058FC                     _vfprintf:
  3981                           	opt callstack 22
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FI
      +                          LE *fp, const char *fmt, va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1369: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1371:     char *cfmt;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1373:     cfmt = (char *)fmt;
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;incstack = 0
  3988  0058FC  0060  F2D8  F0B8   	movff	vfprintf@fmt,vfprintf@cfmt
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  3992  005902  0E00               	movlw	0
  3993  005904  6FDA               	movwf	(_nout+1)& (0+255),b
  3994  005906  0E00               	movlw	0
  3995  005908  6FD9               	movwf	_nout& (0+255),b
  3996                           
  3997                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  3998  00590A  D00F               	goto	l5526
  3999  00590C                     l5524:
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:         nout +=
      +                           vfpfcnvrt(fp, &cfmt, ap);
  4003  00590C  0060  F2D4  F05D   	movff	vfprintf@fp,vfpfcnvrt@fp
  4004  005912  0EB8               	movlw	low vfprintf@cfmt
  4005  005914  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  4006  005916  0060  F2DC  F05F   	movff	vfprintf@ap,vfpfcnvrt@ap
  4007  00591C  ECC6  F01A         	call	_vfpfcnvrt	;wreg free
  4008  005920  505D               	movf	?_vfpfcnvrt^0,w,c
  4009  005922  0100               	movlb	0	; () banked
  4010  005924  27D9               	addwf	_nout& (0+255),f,b
  4011  005926  505E               	movf	(?_vfpfcnvrt+1)^0,w,c
  4012  005928  23DA               	addwfc	(_nout+1)& (0+255),f,b
  4013  00592A                     l5526:
  4014                           
  4015                           ; BSR set to: 0
  4016                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4017  00592A  0060  F2E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  4018  005930                     	if	1	;There is more than 1 active tblptr byte
  4019  005930  0E20               	movlw	high __smallconst
  4020  005932  6EF7               	movwf	tblptrh,c
  4021  005934                     	endif
  4022  005934                     	if	0	;tblptru may be non-zero
  4023  005934                     	endif
  4024  005934                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4025  005934  0E00               	movlw	low (__smallconst shr (0+16))
  4026  005936  6EF8               	movwf	tblptru,c
  4027  005938                     	endif
  4028  005938  0008               	tblrd		*
  4029  00593A  50F5               	movf	tablat,w,c
  4030  00593C  0900               	iorlw	0
  4031  00593E  A4D8               	btfss	status,2,c
  4032  005940  D7E5               	goto	l5524
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     return nout
      +                          ;
  4036  005942  0060  F364  F0B5   	movff	_nout,?_vfprintf
  4037  005948  0060  F368  F0B6   	movff	_nout+1,?_vfprintf+1
  4038                           
  4039                           ; BSR set to: 0
  4040  00594E  0012               	return		;funcret
  4041  005950                     __end_of_vfprintf:
  4042                           	opt callstack 0
  4043                           
  4044 ;; *************** function _vfpfcnvrt *****************
  4045 ;; Defined at:
  4046 ;;		line 670 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4047 ;; Parameters:    Size  Location     Type
  4048 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  4049 ;;		 -> sprintf@f(6), 
  4050 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  4051 ;;		 -> vfprintf@cfmt(1), 
  4052 ;;  ap              1   94[COMRAM] PTR PTR void 
  4053 ;;		 -> sprintf@ap(1), 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;  llu             8    0        unsigned long long 
  4056 ;;  ll              8    0        long long 
  4057 ;;  f               4   80[BANK0 ] long long 
  4058 ;;  ct              3   77[BANK0 ] unsigned char [3]
  4059 ;;  vp              3    0        PTR void 
  4060 ;;  cp              3    0        PTR unsigned char 
  4061 ;;  i               2    0        int 
  4062 ;;  done            2    0        int 
  4063 ;;  c               1   84[BANK0 ] unsigned char 
  4064 ;; Return value:  Size  Location     Type
  4065 ;;                  2   92[COMRAM] int 
  4066 ;; Registers used:
  4067 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4068 ;; Tracked objects:
  4069 ;;		On entry : 3F/0
  4070 ;;		On exit  : 0/0
  4071 ;;		Unchanged: 0/0
  4072 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4073 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4075 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4076 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4077 ;;Total ram usage:       21 bytes
  4078 ;; Hardware stack levels used:    1
  4079 ;; Hardware stack levels required when called:    5
  4080 ;; This function calls:
  4081 ;;		_atoi
  4082 ;;		_efgtoa
  4083 ;;		_fputc
  4084 ;;		_isdigit
  4085 ;;		_isupper
  4086 ;;		_strncmp
  4087 ;;		_tolower
  4088 ;; This function is called by:
  4089 ;;		_vfprintf
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text10
  4094  00358C                     __ptext10:
  4095                           	opt callstack 0
  4096  00358C                     _vfpfcnvrt:
  4097                           	opt callstack 22
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static int vfpfc
      +                          nvrt(FILE *fp, char *fmt[], va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 671: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 672:     char c, *cp, ct[3];;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 673:     int done, i;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 674:     long long ll;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 675:     unsigned long long llu;
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;incstack = 0
  4104  00358C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4105  00358E  6ED9               	movwf	fsr2l,c
  4106  003590  6ADA               	clrf	fsr2h,c
  4107  003592  006F FF7F FFF6     	movff	indf2,tblptrl
  4108  003598                     	if	1	;There is more than 1 active tblptr byte
  4109  003598  0E20               	movlw	high __smallconst
  4110  00359A  6EF7               	movwf	tblptrh,c
  4111  00359C                     	endif
  4112  00359C                     	if	0	;tblptru may be non-zero
  4113  00359C                     	endif
  4114  00359C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4115  00359C  0E00               	movlw	low (__smallconst shr (0+16))
  4116  00359E  6EF8               	movwf	tblptru,c
  4117  0035A0                     	endif
  4118  0035A0  0008               	tblrd		*
  4119  0035A2  50F5               	movf	tablat,w,c
  4120  0035A4  0A25               	xorlw	37
  4121  0035A6  A4D8               	btfss	status,2,c
  4122  0035A8  D1F9               	goto	l5512
  4123                           
  4124                           ; BSR set to: 0
  4125                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  4126  0035AA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4127  0035AC  6ED9               	movwf	fsr2l,c
  4128  0035AE  6ADA               	clrf	fsr2h,c
  4129  0035B0  2ADF               	incf	indf2,f,c
  4130                           
  4131                           ; BSR set to: 0
  4132                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:         flags = 
      +                          width = 0;
  4133  0035B2  0E00               	movlw	0
  4134  0035B4  6FDC               	movwf	(_width+1)& (0+255),b
  4135  0035B6  0E00               	movlw	0
  4136  0035B8  6FDB               	movwf	_width& (0+255),b
  4137  0035BA  C0DB  F0DF         	movff	_width,_flags
  4138  0035BE  C0DC  F0E0         	movff	_width+1,_flags+1
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:         prec = -
      +                          1;
  4142  0035C2  69DD               	setf	_prec& (0+255),b
  4143  0035C4  69DE               	setf	(_prec+1)& (0+255),b
  4144                           
  4145                           ; BSR set to: 0
  4146                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:         if ((*fm
      +                          t)[0] == '*') {
  4147  0035C6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4148  0035C8  6ED9               	movwf	fsr2l,c
  4149  0035CA  6ADA               	clrf	fsr2h,c
  4150  0035CC  006F FF7F FFF6     	movff	indf2,tblptrl
  4151  0035D2                     	if	1	;There is more than 1 active tblptr byte
  4152  0035D2  0E20               	movlw	high __smallconst
  4153  0035D4  6EF7               	movwf	tblptrh,c
  4154  0035D6                     	endif
  4155  0035D6                     	if	0	;tblptru may be non-zero
  4156  0035D6                     	endif
  4157  0035D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4158  0035D6  0E00               	movlw	low (__smallconst shr (0+16))
  4159  0035D8  6EF8               	movwf	tblptru,c
  4160  0035DA                     	endif
  4161  0035DA  0008               	tblrd		*
  4162  0035DC  50F5               	movf	tablat,w,c
  4163  0035DE  0A2A               	xorlw	42
  4164  0035E0  A4D8               	btfss	status,2,c
  4165  0035E2  D01A               	goto	l5426
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:             ++*f
      +                          mt;
  4169  0035E4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4170  0035E6  6ED9               	movwf	fsr2l,c
  4171  0035E8  6ADA               	clrf	fsr2h,c
  4172  0035EA  2ADF               	incf	indf2,f,c
  4173                           
  4174                           ; BSR set to: 0
  4175                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:             widt
      +                          h = (*(int *)__va_arg(*(int **)ap, (int)0));
  4176  0035EC  505F               	movf	vfpfcnvrt@ap^0,w,c
  4177  0035EE  6ED9               	movwf	fsr2l,c
  4178  0035F0  6ADA               	clrf	fsr2h,c
  4179  0035F2  0E02               	movlw	2
  4180  0035F4  26DF               	addwf	indf2,f,c
  4181  0035F6  5CDF               	subwf	indf2,w,c
  4182  0035F8  6ED9               	movwf	fsr2l,c
  4183  0035FA  6ADA               	clrf	fsr2h,c
  4184  0035FC  006F FF78  F0DB    	movff	postinc2,_width
  4185  003602  006F FF78  F0DC    	movff	postinc2,_width+1
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:             if (
      +                          width < 0) {
  4189  003608  AFDC               	btfss	(_width+1)& (0+255),7,b
  4190  00360A  D03E               	goto	u6860
  4191                           
  4192                           ; BSR set to: 0
  4193                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:                 
      +                          flags |= (1 << 0);
  4194  00360C  81DF               	bsf	_flags& (0+255),0,b
  4195                           
  4196                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:                 
      +                          width = -width;
  4197  00360E  6DDB               	negf	_width& (0+255),b
  4198  003610  1FDC               	comf	(_width+1)& (0+255),f,b
  4199  003612  B0D8               	btfsc	status,0,c
  4200  003614  2BDC               	incf	(_width+1)& (0+255),f,b
  4201  003616  D038               	goto	u6860
  4202  003618                     l5426:
  4203                           
  4204                           ; BSR set to: 0
  4205                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:             widt
      +                          h = atoi(*fmt);
  4206  003618  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4207  00361A  6ED9               	movwf	fsr2l,c
  4208  00361C  6ADA               	clrf	fsr2h,c
  4209  00361E  50DF               	movf	indf2,w,c
  4210  003620  6E08               	movwf	atoi@s^0,c
  4211  003622  ECBA  F024         	call	_atoi	;wreg free
  4212  003626  0060  F020  F0DB   	movff	?_atoi,_width
  4213  00362C  0060  F024  F0DC   	movff	?_atoi+1,_width+1
  4214                           
  4215                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:             whil
      +                          e ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4216  003632  D004               	goto	l5430
  4217  003634                     l5428:
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:                 
      +                          ++*fmt;
  4221  003634  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4222  003636  6ED9               	movwf	fsr2l,c
  4223  003638  6ADA               	clrf	fsr2h,c
  4224  00363A  2ADF               	incf	indf2,f,c
  4225  00363C                     l5430:
  4226  00363C  0ED0               	movlw	208
  4227  00363E  0100               	movlb	0	; () banked
  4228  003640  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4229  003642  0EFF               	movlw	255
  4230  003644  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4231  003646  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4232  003648  6ED9               	movwf	fsr2l,c
  4233  00364A  6ADA               	clrf	fsr2h,c
  4234  00364C  006F FF7F FFF6     	movff	indf2,tblptrl
  4235  003652                     	if	1	;There is more than 1 active tblptr byte
  4236  003652  0E20               	movlw	high __smallconst
  4237  003654  6EF7               	movwf	tblptrh,c
  4238  003656                     	endif
  4239  003656                     	if	0	;tblptru may be non-zero
  4240  003656                     	endif
  4241  003656                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4242  003656  0E00               	movlw	low (__smallconst shr (0+16))
  4243  003658  6EF8               	movwf	tblptru,c
  4244  00365A                     	endif
  4245  00365A  0008               	tblrd		*
  4246  00365C  50F5               	movf	tablat,w,c
  4247  00365E  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4248  003660  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4249  003662  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4250  003664  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4251  003666  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4252  003668  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4253  00366A  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4254  00366C  E106               	bnz	u6840
  4255  00366E  0E0A               	movlw	10
  4256  003670  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4257  003672  B0D8               	btfsc	status,0,c
  4258  003674  D002               	goto	u6840
  4259  003676  0E01               	movlw	1
  4260  003678  D001               	goto	u6850
  4261  00367A                     u6840:
  4262  00367A  0E00               	movlw	0
  4263  00367C                     u6850:
  4264  00367C  6FA7               	movwf	_vfpfcnvrt$629& (0+255),b
  4265  00367E  6BA8               	clrf	(_vfpfcnvrt$629+1)& (0+255),b
  4266                           
  4267                           ; BSR set to: 0
  4268  003680  51A7               	movf	_vfpfcnvrt$629& (0+255),w,b
  4269  003682  11A8               	iorwf	(_vfpfcnvrt$629+1)& (0+255),w,b
  4270  003684  A4D8               	btfss	status,2,c
  4271  003686  D7D6               	goto	l5428
  4272  003688                     u6860:
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:         if ((*fm
      +                          t)[0] == '.') {
  4276  003688  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4277  00368A  6ED9               	movwf	fsr2l,c
  4278  00368C  6ADA               	clrf	fsr2h,c
  4279  00368E  006F FF7F FFF6     	movff	indf2,tblptrl
  4280  003694                     	if	1	;There is more than 1 active tblptr byte
  4281  003694  0E20               	movlw	high __smallconst
  4282  003696  6EF7               	movwf	tblptrh,c
  4283  003698                     	endif
  4284  003698                     	if	0	;tblptru may be non-zero
  4285  003698                     	endif
  4286  003698                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4287  003698  0E00               	movlw	low (__smallconst shr (0+16))
  4288  00369A  6EF8               	movwf	tblptru,c
  4289  00369C                     	endif
  4290  00369C  0008               	tblrd		*
  4291  00369E  50F5               	movf	tablat,w,c
  4292  0036A0  0A2E               	xorlw	46
  4293  0036A2  A4D8               	btfss	status,2,c
  4294  0036A4  D062               	goto	u6910
  4295                           
  4296                           ; BSR set to: 0
  4297                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:             prec
      +                           = 0;
  4298  0036A6  0E00               	movlw	0
  4299  0036A8  6FDE               	movwf	(_prec+1)& (0+255),b
  4300  0036AA  0E00               	movlw	0
  4301  0036AC  6FDD               	movwf	_prec& (0+255),b
  4302                           
  4303                           ; BSR set to: 0
  4304                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:             ++*f
      +                          mt;
  4305  0036AE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4306  0036B0  6ED9               	movwf	fsr2l,c
  4307  0036B2  6ADA               	clrf	fsr2h,c
  4308  0036B4  2ADF               	incf	indf2,f,c
  4309                           
  4310                           ; BSR set to: 0
  4311                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:             if (
      +                          (*fmt)[0] == '*') {
  4312  0036B6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4313  0036B8  6ED9               	movwf	fsr2l,c
  4314  0036BA  6ADA               	clrf	fsr2h,c
  4315  0036BC  006F FF7F FFF6     	movff	indf2,tblptrl
  4316  0036C2                     	if	1	;There is more than 1 active tblptr byte
  4317  0036C2  0E20               	movlw	high __smallconst
  4318  0036C4  6EF7               	movwf	tblptrh,c
  4319  0036C6                     	endif
  4320  0036C6                     	if	0	;tblptru may be non-zero
  4321  0036C6                     	endif
  4322  0036C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4323  0036C6  0E00               	movlw	low (__smallconst shr (0+16))
  4324  0036C8  6EF8               	movwf	tblptru,c
  4325  0036CA                     	endif
  4326  0036CA  0008               	tblrd		*
  4327  0036CC  50F5               	movf	tablat,w,c
  4328  0036CE  0A2A               	xorlw	42
  4329  0036D0  A4D8               	btfss	status,2,c
  4330  0036D2  D013               	goto	l5448
  4331                           
  4332                           ; BSR set to: 0
  4333                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:                 
      +                          ++*fmt;
  4334  0036D4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4335  0036D6  6ED9               	movwf	fsr2l,c
  4336  0036D8  6ADA               	clrf	fsr2h,c
  4337  0036DA  2ADF               	incf	indf2,f,c
  4338                           
  4339                           ; BSR set to: 0
  4340                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:                 
      +                          prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4341  0036DC  505F               	movf	vfpfcnvrt@ap^0,w,c
  4342  0036DE  6ED9               	movwf	fsr2l,c
  4343  0036E0  6ADA               	clrf	fsr2h,c
  4344  0036E2  0E02               	movlw	2
  4345  0036E4  26DF               	addwf	indf2,f,c
  4346  0036E6  5CDF               	subwf	indf2,w,c
  4347  0036E8  6ED9               	movwf	fsr2l,c
  4348  0036EA  6ADA               	clrf	fsr2h,c
  4349  0036EC  006F FF78  F0DD    	movff	postinc2,_prec
  4350  0036F2  006F FF78  F0DE    	movff	postinc2,_prec+1
  4351                           
  4352                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:             } el
      +                          se {
  4353  0036F8  D038               	goto	u6910
  4354  0036FA                     l5448:
  4355                           
  4356                           ; BSR set to: 0
  4357                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:                 
      +                          prec = atoi(*fmt);
  4358  0036FA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4359  0036FC  6ED9               	movwf	fsr2l,c
  4360  0036FE  6ADA               	clrf	fsr2h,c
  4361  003700  50DF               	movf	indf2,w,c
  4362  003702  6E08               	movwf	atoi@s^0,c
  4363  003704  ECBA  F024         	call	_atoi	;wreg free
  4364  003708  0060  F020  F0DD   	movff	?_atoi,_prec
  4365  00370E  0060  F024  F0DE   	movff	?_atoi+1,_prec+1
  4366                           
  4367                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:                 
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4368  003714  D004               	goto	l5452
  4369  003716                     l5450:
  4370                           
  4371                           ; BSR set to: 0
  4372                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:                 
      +                              ++*fmt;
  4373  003716  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4374  003718  6ED9               	movwf	fsr2l,c
  4375  00371A  6ADA               	clrf	fsr2h,c
  4376  00371C  2ADF               	incf	indf2,f,c
  4377  00371E                     l5452:
  4378  00371E  0ED0               	movlw	208
  4379  003720  0100               	movlb	0	; () banked
  4380  003722  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4381  003724  0EFF               	movlw	255
  4382  003726  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4383  003728  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4384  00372A  6ED9               	movwf	fsr2l,c
  4385  00372C  6ADA               	clrf	fsr2h,c
  4386  00372E  006F FF7F FFF6     	movff	indf2,tblptrl
  4387  003734                     	if	1	;There is more than 1 active tblptr byte
  4388  003734  0E20               	movlw	high __smallconst
  4389  003736  6EF7               	movwf	tblptrh,c
  4390  003738                     	endif
  4391  003738                     	if	0	;tblptru may be non-zero
  4392  003738                     	endif
  4393  003738                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4394  003738  0E00               	movlw	low (__smallconst shr (0+16))
  4395  00373A  6EF8               	movwf	tblptru,c
  4396  00373C                     	endif
  4397  00373C  0008               	tblrd		*
  4398  00373E  50F5               	movf	tablat,w,c
  4399  003740  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4400  003742  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4401  003744  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4402  003746  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4403  003748  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4404  00374A  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4405  00374C  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4406  00374E  E106               	bnz	u6890
  4407  003750  0E0A               	movlw	10
  4408  003752  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4409  003754  B0D8               	btfsc	status,0,c
  4410  003756  D002               	goto	u6890
  4411  003758  0E01               	movlw	1
  4412  00375A  D001               	goto	u6900
  4413  00375C                     u6890:
  4414  00375C  0E00               	movlw	0
  4415  00375E                     u6900:
  4416  00375E  6FA9               	movwf	_vfpfcnvrt$630& (0+255),b
  4417  003760  6BAA               	clrf	(_vfpfcnvrt$630+1)& (0+255),b
  4418                           
  4419                           ; BSR set to: 0
  4420  003762  51A9               	movf	_vfpfcnvrt$630& (0+255),w,b
  4421  003764  11AA               	iorwf	(_vfpfcnvrt$630+1)& (0+255),w,b
  4422  003766  A4D8               	btfss	status,2,c
  4423  003768  D7D6               	goto	l5450
  4424  00376A                     u6910:
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:         ct[0] = 
      +                          tolower((int)(*fmt)[0]);
  4428  00376A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4429  00376C  6ED9               	movwf	fsr2l,c
  4430  00376E  6ADA               	clrf	fsr2h,c
  4431  003770  006F FF7F FFF6     	movff	indf2,tblptrl
  4432  003776                     	if	1	;There is more than 1 active tblptr byte
  4433  003776  0E20               	movlw	high __smallconst
  4434  003778  6EF7               	movwf	tblptrh,c
  4435  00377A                     	endif
  4436  00377A                     	if	0	;tblptru may be non-zero
  4437  00377A                     	endif
  4438  00377A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4439  00377A  0E00               	movlw	low (__smallconst shr (0+16))
  4440  00377C  6EF8               	movwf	tblptru,c
  4441  00377E                     	endif
  4442  00377E  0008               	tblrd		*
  4443  003780  50F5               	movf	tablat,w,c
  4444  003782  6E07               	movwf	tolower@c^0,c
  4445  003784  6A08               	clrf	(tolower@c+1)^0,c
  4446  003786  ECA8  F02C         	call	_tolower	;wreg free
  4447  00378A  5007               	movf	?_tolower^0,w,c
  4448  00378C  0100               	movlb	0	; () banked
  4449  00378E  6FAD               	movwf	vfpfcnvrt@ct& (0+255),b
  4450                           
  4451                           ; BSR set to: 0
  4452                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:         if (ct[0
      +                          ]) {
  4453  003790  51AD               	movf	vfpfcnvrt@ct& (0+255),w,b
  4454  003792  B4D8               	btfsc	status,2,c
  4455  003794  D031               	goto	l5468
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:             ct[1
      +                          ] = tolower((int)(*fmt)[1]);
  4459  003796  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4460  003798  6ED9               	movwf	fsr2l,c
  4461  00379A  6ADA               	clrf	fsr2h,c
  4462  00379C  50DF               	movf	indf2,w,c
  4463  00379E  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4464  0037A0  0E01               	movlw	1
  4465  0037A2  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  4466  0037A4  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4467  0037AA                     	if	1	;There is more than 1 active tblptr byte
  4468  0037AA  0E20               	movlw	high __smallconst
  4469  0037AC  6EF7               	movwf	tblptrh,c
  4470  0037AE                     	endif
  4471  0037AE                     	if	0	;tblptru may be non-zero
  4472  0037AE                     	endif
  4473  0037AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4474  0037AE  0E00               	movlw	low (__smallconst shr (0+16))
  4475  0037B0  6EF8               	movwf	tblptru,c
  4476  0037B2                     	endif
  4477  0037B2  0008               	tblrd		*
  4478  0037B4  50F5               	movf	tablat,w,c
  4479  0037B6  6E07               	movwf	tolower@c^0,c
  4480  0037B8  6A08               	clrf	(tolower@c+1)^0,c
  4481  0037BA  ECA8  F02C         	call	_tolower	;wreg free
  4482  0037BE  5007               	movf	?_tolower^0,w,c
  4483  0037C0  0100               	movlb	0	; () banked
  4484  0037C2  6FAE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4485                           
  4486                           ; BSR set to: 0
  4487                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:             if (
      +                          ct[1]) {
  4488  0037C4  51AE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4489  0037C6  B4D8               	btfsc	status,2,c
  4490  0037C8  D017               	goto	l5468
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:                 
      +                          ct[2] = tolower((int)(*fmt)[2]);
  4494  0037CA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4495  0037CC  6ED9               	movwf	fsr2l,c
  4496  0037CE  6ADA               	clrf	fsr2h,c
  4497  0037D0  50DF               	movf	indf2,w,c
  4498  0037D2  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4499  0037D4  0E02               	movlw	2
  4500  0037D6  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  4501  0037D8  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4502  0037DE                     	if	1	;There is more than 1 active tblptr byte
  4503  0037DE  0E20               	movlw	high __smallconst
  4504  0037E0  6EF7               	movwf	tblptrh,c
  4505  0037E2                     	endif
  4506  0037E2                     	if	0	;tblptru may be non-zero
  4507  0037E2                     	endif
  4508  0037E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4509  0037E2  0E00               	movlw	low (__smallconst shr (0+16))
  4510  0037E4  6EF8               	movwf	tblptru,c
  4511  0037E6                     	endif
  4512  0037E6  0008               	tblrd		*
  4513  0037E8  50F5               	movf	tablat,w,c
  4514  0037EA  6E07               	movwf	tolower@c^0,c
  4515  0037EC  6A08               	clrf	(tolower@c+1)^0,c
  4516  0037EE  ECA8  F02C         	call	_tolower	;wreg free
  4517  0037F2  5007               	movf	?_tolower^0,w,c
  4518  0037F4  0100               	movlb	0	; () banked
  4519  0037F6  6FAF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4520  0037F8                     l5468:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:         if (ct[0
      +                          ] == 'f') {
  4524  0037F8  0E66               	movlw	102
  4525  0037FA  19AD               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4526  0037FC  A4D8               	btfss	status,2,c
  4527  0037FE  D044               	goto	l5480
  4528                           
  4529                           ; BSR set to: 0
  4530                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:             c = 
      +                          (*fmt)[0];
  4531  003800  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4532  003802  6ED9               	movwf	fsr2l,c
  4533  003804  6ADA               	clrf	fsr2h,c
  4534  003806  006F FF7F FFF6     	movff	indf2,tblptrl
  4535  00380C                     	if	1	;There is more than 1 active tblptr byte
  4536  00380C  0E20               	movlw	high __smallconst
  4537  00380E  6EF7               	movwf	tblptrh,c
  4538  003810                     	endif
  4539  003810                     	if	0	;tblptru may be non-zero
  4540  003810                     	endif
  4541  003810                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4542  003810  0E00               	movlw	low (__smallconst shr (0+16))
  4543  003812  6EF8               	movwf	tblptru,c
  4544  003814                     	endif
  4545  003814  0008               	tblrd		*
  4546  003816  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  4547                           
  4548                           ; BSR set to: 0
  4549                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:             ++*f
      +                          mt;
  4550  00381C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4551  00381E  6ED9               	movwf	fsr2l,c
  4552  003820  6ADA               	clrf	fsr2h,c
  4553  003822  2ADF               	incf	indf2,f,c
  4554                           
  4555                           ; BSR set to: 0
  4556                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:             f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4557  003824  505F               	movf	vfpfcnvrt@ap^0,w,c
  4558  003826  6ED9               	movwf	fsr2l,c
  4559  003828  6ADA               	clrf	fsr2h,c
  4560  00382A  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  4561  003830  0E04               	movlw	4
  4562  003832  26DF               	addwf	indf2,f,c
  4563  003834  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4564  003836  6ED9               	movwf	fsr2l,c
  4565  003838  6ADA               	clrf	fsr2h,c
  4566  00383A  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  4567  003840  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  4568  003846  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  4569  00384C  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  4570  003852                     l5476:
  4571                           
  4572                           ; BSR set to: 0
  4573                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:             retu
      +                          rn efgtoa(fp, f, c);
  4574  003852  0060  F174  F060   	movff	vfpfcnvrt@fp,efgtoa@fp
  4575  003858  0060  F2C0  F061   	movff	vfpfcnvrt@f,efgtoa@f
  4576  00385E  0060  F2C4  F062   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4577  003864  0060  F2C8  F063   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4578  00386A  0060  F2CC  F064   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4579  003870  0060  F2D0  F065   	movff	vfpfcnvrt@c,efgtoa@c
  4580  003876  EC4D  F010         	call	_efgtoa	;wreg free
  4581  00387A  0060  F180  F05D   	movff	?_efgtoa,?_vfpfcnvrt
  4582  003880  0060  F184  F05E   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4583  003886  0012               	return	
  4584  003888                     l5480:
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:         if (!str
      +                          ncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4588  003888  0EAD               	movlw	low vfpfcnvrt@ct
  4589  00388A  6E01               	movwf	strncmp@_l^0,c
  4590  00388C  0E96               	movlw	low STR_15
  4591  00388E  6E02               	movwf	strncmp@_r^0,c
  4592  003890  0E00               	movlw	0
  4593  003892  6E04               	movwf	(strncmp@n+1)^0,c
  4594  003894  0E02               	movlw	2
  4595  003896  6E03               	movwf	strncmp@n^0,c
  4596  003898  EC74  F028         	call	_strncmp	;wreg free
  4597  00389C  5001               	movf	?_strncmp^0,w,c
  4598  00389E  1002               	iorwf	(?_strncmp+1)^0,w,c
  4599  0038A0  A4D8               	btfss	status,2,c
  4600  0038A2  D052               	goto	l5496
  4601                           
  4602                           ; BSR set to: 0
  4603                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:             if (
      +                          (0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4604  0038A4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4605  0038A6  6ED9               	movwf	fsr2l,c
  4606  0038A8  6ADA               	clrf	fsr2h,c
  4607  0038AA  50DF               	movf	indf2,w,c
  4608  0038AC  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4609  0038AE  0E01               	movlw	1
  4610  0038B0  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  4611  0038B2  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4612  0038B8                     	if	1	;There is more than 1 active tblptr byte
  4613  0038B8  0E20               	movlw	high __smallconst
  4614  0038BA  6EF7               	movwf	tblptrh,c
  4615  0038BC                     	endif
  4616  0038BC                     	if	0	;tblptru may be non-zero
  4617  0038BC                     	endif
  4618  0038BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4619  0038BC  0E00               	movlw	low (__smallconst shr (0+16))
  4620  0038BE  6EF8               	movwf	tblptru,c
  4621  0038C0                     	endif
  4622  0038C0  0008               	tblrd		*
  4623  0038C2  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  4624  0038C8  0EBF               	movlw	191
  4625  0038CA  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4626  0038CC  0EFF               	movlw	255
  4627  0038CE  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4628  0038D0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4629  0038D2  6ED9               	movwf	fsr2l,c
  4630  0038D4  6ADA               	clrf	fsr2h,c
  4631  0038D6  006F FF7F FFF6     	movff	indf2,tblptrl
  4632  0038DC                     	if	1	;There is more than 1 active tblptr byte
  4633  0038DC  0E20               	movlw	high __smallconst
  4634  0038DE  6EF7               	movwf	tblptrh,c
  4635  0038E0                     	endif
  4636  0038E0                     	if	0	;tblptru may be non-zero
  4637  0038E0                     	endif
  4638  0038E0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4639  0038E0  0E00               	movlw	low (__smallconst shr (0+16))
  4640  0038E2  6EF8               	movwf	tblptru,c
  4641  0038E4                     	endif
  4642  0038E4  0008               	tblrd		*
  4643  0038E6  50F5               	movf	tablat,w,c
  4644  0038E8  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4645  0038EA  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4646  0038EC  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4647  0038EE  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4648  0038F0  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4649  0038F2  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4650  0038F4  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4651  0038F6  E106               	bnz	u6960
  4652  0038F8  0E1A               	movlw	26
  4653  0038FA  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4654  0038FC  B0D8               	btfsc	status,0,c
  4655  0038FE  D002               	goto	u6960
  4656  003900  0E01               	movlw	1
  4657  003902  D001               	goto	u6970
  4658  003904                     u6960:
  4659  003904  0E00               	movlw	0
  4660  003906                     u6970:
  4661  003906  6FAB               	movwf	_vfpfcnvrt$634& (0+255),b
  4662  003908  6BAC               	clrf	(_vfpfcnvrt$634+1)& (0+255),b
  4663                           
  4664                           ; BSR set to: 0
  4665  00390A  51AB               	movf	_vfpfcnvrt$634& (0+255),w,b
  4666  00390C  11AC               	iorwf	(_vfpfcnvrt$634+1)& (0+255),w,b
  4667                           
  4668                           ; BSR set to: 0
  4669                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:                 
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4670                           
  4671                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:             } el
      +                          se {
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:                 
      +                          f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4675  00390E  505F               	movf	vfpfcnvrt@ap^0,w,c
  4676  003910  6ED9               	movwf	fsr2l,c
  4677  003912  6ADA               	clrf	fsr2h,c
  4678  003914  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  4679  00391A  0E04               	movlw	4
  4680  00391C  26DF               	addwf	indf2,f,c
  4681  00391E  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4682  003920  6ED9               	movwf	fsr2l,c
  4683  003922  6ADA               	clrf	fsr2h,c
  4684  003924  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  4685  00392A  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  4686  003930  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  4687  003936  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:             *fmt
      +                           += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4691                           
  4692                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 935:             }
  4693  00393C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4694  00393E  6ED9               	movwf	fsr2l,c
  4695  003940  6ADA               	clrf	fsr2h,c
  4696  003942  0E02               	movlw	2
  4697  003944  26DF               	addwf	indf2,f,c
  4698  003946  D785               	goto	l5476
  4699  003948                     l5496:
  4700                           
  4701                           ; BSR set to: 0
  4702                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:         if ((*f
      +                          mt)[0] == '%') {
  4703  003948  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4704  00394A  6ED9               	movwf	fsr2l,c
  4705  00394C  6ADA               	clrf	fsr2h,c
  4706  00394E  006F FF7F FFF6     	movff	indf2,tblptrl
  4707  003954                     	if	1	;There is more than 1 active tblptr byte
  4708  003954  0E20               	movlw	high __smallconst
  4709  003956  6EF7               	movwf	tblptrh,c
  4710  003958                     	endif
  4711  003958                     	if	0	;tblptru may be non-zero
  4712  003958                     	endif
  4713  003958                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4714  003958  0E00               	movlw	low (__smallconst shr (0+16))
  4715  00395A  6EF8               	movwf	tblptru,c
  4716  00395C                     	endif
  4717  00395C  0008               	tblrd		*
  4718  00395E  50F5               	movf	tablat,w,c
  4719  003960  0A25               	xorlw	37
  4720  003962  A4D8               	btfss	status,2,c
  4721  003964  D012               	goto	l5506
  4722                           
  4723                           ; BSR set to: 0
  4724                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:             ++*
      +                          fmt;
  4725  003966  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4726  003968  6ED9               	movwf	fsr2l,c
  4727  00396A  6ADA               	clrf	fsr2h,c
  4728  00396C  2ADF               	incf	indf2,f,c
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:             fpu
      +                          tc((int)'%', fp);
  4732  00396E  0E00               	movlw	0
  4733  003970  6E02               	movwf	(fputc@c+1)^0,c
  4734  003972  0E25               	movlw	37
  4735  003974  6E01               	movwf	fputc@c^0,c
  4736  003976  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  4737  00397C  EC67  F029         	call	_fputc	;wreg free
  4738  003980                     l5502:
  4739                           
  4740                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:             ret
      +                          urn 1;
  4741  003980  0E00               	movlw	0
  4742  003982  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  4743  003984  0E01               	movlw	1
  4744  003986  6E5D               	movwf	?_vfpfcnvrt^0,c
  4745  003988  0012               	return	
  4746  00398A                     l5506:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  4750  00398A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4751  00398C  6ED9               	movwf	fsr2l,c
  4752  00398E  6ADA               	clrf	fsr2h,c
  4753  003990  2ADF               	incf	indf2,f,c
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:         return 
      +                          0;
  4757  003992  0E00               	movlw	0
  4758  003994  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  4759  003996  0E00               	movlw	0
  4760  003998  6E5D               	movwf	?_vfpfcnvrt^0,c
  4761  00399A  0012               	return	
  4762  00399C                     l5512:
  4763                           
  4764                           ; BSR set to: 0
  4765                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)
      +                          (*fmt)[0], fp);
  4766  00399C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4767  00399E  6ED9               	movwf	fsr2l,c
  4768  0039A0  6ADA               	clrf	fsr2h,c
  4769  0039A2  006F FF7F FFF6     	movff	indf2,tblptrl
  4770  0039A8                     	if	1	;There is more than 1 active tblptr byte
  4771  0039A8  0E20               	movlw	high __smallconst
  4772  0039AA  6EF7               	movwf	tblptrh,c
  4773  0039AC                     	endif
  4774  0039AC                     	if	0	;tblptru may be non-zero
  4775  0039AC                     	endif
  4776  0039AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4777  0039AC  0E00               	movlw	low (__smallconst shr (0+16))
  4778  0039AE  6EF8               	movwf	tblptru,c
  4779  0039B0                     	endif
  4780  0039B0  0008               	tblrd		*
  4781  0039B2  50F5               	movf	tablat,w,c
  4782  0039B4  6E01               	movwf	fputc@c^0,c
  4783  0039B6  6A02               	clrf	(fputc@c+1)^0,c
  4784  0039B8  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  4785  0039BE  EC67  F029         	call	_fputc	;wreg free
  4786                           
  4787                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4788  0039C2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4789  0039C4  6ED9               	movwf	fsr2l,c
  4790  0039C6  6ADA               	clrf	fsr2h,c
  4791  0039C8  2ADF               	incf	indf2,f,c
  4792  0039CA  D7DA               	goto	l5502
  4793  0039CC                     __end_of_vfpfcnvrt:
  4794                           	opt callstack 0
  4795                           
  4796 ;; *************** function _strncmp *****************
  4797 ;; Defined at:
  4798 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  _l              1    0[COMRAM] PTR const unsigned char 
  4801 ;;		 -> vfpfcnvrt@ct(3), 
  4802 ;;  _r              1    1[COMRAM] PTR const unsigned char 
  4803 ;;		 -> STR_17(3), 
  4804 ;;  n               2    2[COMRAM] unsigned int 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;  r               1    6[COMRAM] PTR const unsigned char 
  4807 ;;		 -> STR_17(3), 
  4808 ;;  l               1    5[COMRAM] PTR const unsigned char 
  4809 ;;		 -> vfpfcnvrt@ct(3), 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  2    0[COMRAM] int 
  4812 ;; Registers used:
  4813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4814 ;; Tracked objects:
  4815 ;;		On entry : 3F/0
  4816 ;;		On exit  : 3F/0
  4817 ;;		Unchanged: 3F/0
  4818 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4819 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4820 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4821 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4822 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4823 ;;Total ram usage:        7 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; This function calls:
  4826 ;;		Nothing
  4827 ;; This function is called by:
  4828 ;;		_vfpfcnvrt
  4829 ;; This function uses a non-reentrant model
  4830 ;;
  4831                           
  4832                           	psect	text11
  4833  0050E8                     __ptext11:
  4834                           	opt callstack 0
  4835  0050E8                     _strncmp:
  4836                           	opt callstack 26
  4837                           
  4838                           ; BSR set to: 0
  4839                           
  4840                           ;incstack = 0
  4841  0050E8  0060  F004  F006   	movff	strncmp@_l,strncmp@l
  4842  0050EE  0060  F008  F007   	movff	strncmp@_r,strncmp@r
  4843  0050F4  0603               	decf	strncmp@n^0,f,c
  4844  0050F6  A0D8               	btfss	status,0,c
  4845  0050F8  0604               	decf	(strncmp@n+1)^0,f,c
  4846  0050FA  2803               	incf	strncmp@n^0,w,c
  4847  0050FC  E10D               	bnz	l4424
  4848  0050FE  2804               	incf	(strncmp@n+1)^0,w,c
  4849  005100  A4D8               	btfss	status,2,c
  4850  005102  D00A               	goto	l4424
  4851                           
  4852                           ; BSR set to: 0
  4853  005104  0E00               	movlw	0
  4854  005106  6E02               	movwf	(?_strncmp+1)^0,c
  4855  005108  0E00               	movlw	0
  4856  00510A  6E01               	movwf	?_strncmp^0,c
  4857  00510C  0012               	return	
  4858  00510E                     l4422:
  4859                           
  4860                           ; BSR set to: 0
  4861  00510E  2A06               	incf	strncmp@l^0,f,c
  4862  005110  2A07               	incf	strncmp@r^0,f,c
  4863  005112  0603               	decf	strncmp@n^0,f,c
  4864  005114  A0D8               	btfss	status,0,c
  4865  005116  0604               	decf	(strncmp@n+1)^0,f,c
  4866  005118                     l4424:
  4867                           
  4868                           ; BSR set to: 0
  4869  005118  5006               	movf	strncmp@l^0,w,c
  4870  00511A  6ED9               	movwf	fsr2l,c
  4871  00511C  6ADA               	clrf	fsr2h,c
  4872  00511E  50DF               	movf	indf2,w,c
  4873  005120  B4D8               	btfsc	status,2,c
  4874  005122  D021               	goto	u5230
  4875                           
  4876                           ; BSR set to: 0
  4877  005124  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  4878  00512A                     	if	1	;There is more than 1 active tblptr byte
  4879  00512A  0E20               	movlw	high __smallconst
  4880  00512C  6EF7               	movwf	tblptrh,c
  4881  00512E                     	endif
  4882  00512E                     	if	0	;tblptru may be non-zero
  4883  00512E                     	endif
  4884  00512E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4885  00512E  0E00               	movlw	low (__smallconst shr (0+16))
  4886  005130  6EF8               	movwf	tblptru,c
  4887  005132                     	endif
  4888  005132  0008               	tblrd		*
  4889  005134  50F5               	movf	tablat,w,c
  4890  005136  0900               	iorlw	0
  4891  005138  B4D8               	btfsc	status,2,c
  4892  00513A  D015               	goto	u5230
  4893                           
  4894                           ; BSR set to: 0
  4895  00513C  5003               	movf	strncmp@n^0,w,c
  4896  00513E  1004               	iorwf	(strncmp@n+1)^0,w,c
  4897  005140  B4D8               	btfsc	status,2,c
  4898  005142  D011               	goto	u5230
  4899                           
  4900                           ; BSR set to: 0
  4901  005144  5006               	movf	strncmp@l^0,w,c
  4902  005146  6ED9               	movwf	fsr2l,c
  4903  005148  6ADA               	clrf	fsr2h,c
  4904  00514A  50DF               	movf	indf2,w,c
  4905  00514C  6E05               	movwf	??_strncmp^0,c
  4906  00514E  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  4907  005154                     	if	1	;There is more than 1 active tblptr byte
  4908  005154  0E20               	movlw	high __smallconst
  4909  005156  6EF7               	movwf	tblptrh,c
  4910  005158                     	endif
  4911  005158                     	if	0	;tblptru may be non-zero
  4912  005158                     	endif
  4913  005158                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4914  005158  0E00               	movlw	low (__smallconst shr (0+16))
  4915  00515A  6EF8               	movwf	tblptru,c
  4916  00515C                     	endif
  4917  00515C  0008               	tblrd		*
  4918  00515E  50F5               	movf	tablat,w,c
  4919  005160  1805               	xorwf	??_strncmp^0,w,c
  4920  005162  B4D8               	btfsc	status,2,c
  4921  005164  D7D4               	goto	l4422
  4922  005166                     u5230:
  4923                           
  4924                           ; BSR set to: 0
  4925  005166  5006               	movf	strncmp@l^0,w,c
  4926  005168  6ED9               	movwf	fsr2l,c
  4927  00516A  6ADA               	clrf	fsr2h,c
  4928  00516C  50DF               	movf	indf2,w,c
  4929  00516E  6E05               	movwf	??_strncmp^0,c
  4930  005170  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  4931  005176                     	if	1	;There is more than 1 active tblptr byte
  4932  005176  0E20               	movlw	high __smallconst
  4933  005178  6EF7               	movwf	tblptrh,c
  4934  00517A                     	endif
  4935  00517A                     	if	0	;tblptru may be non-zero
  4936  00517A                     	endif
  4937  00517A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4938  00517A  0E00               	movlw	low (__smallconst shr (0+16))
  4939  00517C  6EF8               	movwf	tblptru,c
  4940  00517E                     	endif
  4941  00517E  0008               	tblrd		*
  4942  005180  50F5               	movf	tablat,w,c
  4943  005182  5C05               	subwf	??_strncmp^0,w,c
  4944  005184  6E01               	movwf	?_strncmp^0,c
  4945  005186  6A02               	clrf	(?_strncmp+1)^0,c
  4946  005188  A0D8               	btfss	status,0,c
  4947  00518A  0602               	decf	(?_strncmp+1)^0,f,c
  4948                           
  4949                           ; BSR set to: 0
  4950  00518C  0012               	return		;funcret
  4951  00518E                     __end_of_strncmp:
  4952                           	opt callstack 0
  4953                           
  4954 ;; *************** function _efgtoa *****************
  4955 ;; Defined at:
  4956 ;;		line 319 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4957 ;; Parameters:    Size  Location     Type
  4958 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  4959 ;;		 -> sprintf@f(6), 
  4960 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  4961 ;;  c               1    5[BANK0 ] unsigned char 
  4962 ;; Auto vars:     Size  Location     Type
  4963 ;;  u               4   63[BANK0 ] unsigned char 
  4964 ;;  g               4   55[BANK0 ] unsigned char 
  4965 ;;  l               4   49[BANK0 ] unsigned char 
  4966 ;;  h               4   45[BANK0 ] unsigned char 
  4967 ;;  ou              4   11[BANK0 ] unsigned char 
  4968 ;;  n               2   61[BANK0 ] int 
  4969 ;;  e               2   59[BANK0 ] int 
  4970 ;;  i               2   53[BANK0 ] int 
  4971 ;;  w               2   42[BANK0 ] int 
  4972 ;;  p               2   39[BANK0 ] int 
  4973 ;;  sign            2   37[BANK0 ] int 
  4974 ;;  d               2   35[BANK0 ] int 
  4975 ;;  ne              2   33[BANK0 ] int 
  4976 ;;  m               2   31[BANK0 ] int 
  4977 ;;  pp              2   29[BANK0 ] int 
  4978 ;;  t               2   27[BANK0 ] int 
  4979 ;;  mode            1   44[BANK0 ] unsigned char 
  4980 ;;  nmode           1   41[BANK0 ] unsigned char 
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  2    0[BANK0 ] int 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 3F/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4990 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4991 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4992 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4993 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4994 ;;Total ram usage:       67 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    4
  4997 ;; This function calls:
  4998 ;;		___awdiv
  4999 ;;		___awmod
  5000 ;;		___fladd
  5001 ;;		___fldiv
  5002 ;;		___fleq
  5003 ;;		___flge
  5004 ;;		___flmul
  5005 ;;		___flneg
  5006 ;;		___flsub
  5007 ;;		___fltol
  5008 ;;		___fpclassifyf
  5009 ;;		_floorf
  5010 ;;		_isupper
  5011 ;;		_pad
  5012 ;;		_strcpy
  5013 ;;		_tolower
  5014 ;; This function is called by:
  5015 ;;		_vfpfcnvrt
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text12
  5020  00209A                     __ptext12:
  5021                           	opt callstack 0
  5022  00209A                     _efgtoa:
  5023                           	opt callstack 22
  5024                           
  5025                           ; BSR set to: 0
  5026                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static int efgto
      +                          a(FILE *fp, long double f, char c);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\comm
      +                          on\doprnt.c: 320: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 32
      +                          1:     char mode, nmode;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;F:\Programme\Microchip\xc8\v2.10\p
      +                          ic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;F:\Programme\Microc
      +                          hip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;incstack = 0
  5030  00209A  0E00               	movlw	0
  5031  00209C  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5032  00209E  0E00               	movlw	0
  5033  0020A0  6F85               	movwf	efgtoa@sign& (0+255),b
  5034                           
  5035                           ; BSR set to: 0
  5036                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g = f;
  5037  0020A2  0060  F184  F097   	movff	efgtoa@f,efgtoa@g
  5038  0020A8  0060  F188  F098   	movff	efgtoa@f+1,efgtoa@g+1
  5039  0020AE  0060  F18C  F099   	movff	efgtoa@f+2,efgtoa@g+2
  5040  0020B4  0060  F190  F09A   	movff	efgtoa@f+3,efgtoa@g+3
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0)
      +                           {
  5044  0020BA  AF9A               	btfss	(efgtoa@g+3)& (0+255),7,b
  5045  0020BC  D01E               	goto	l5120
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:         sign = 1
      +                          ;
  5049  0020BE  0E00               	movlw	0
  5050  0020C0  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5051  0020C2  0E01               	movlw	1
  5052  0020C4  6F85               	movwf	efgtoa@sign& (0+255),b
  5053                           
  5054                           ; BSR set to: 0
  5055                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  5056  0020C6  0060  F25C  F001   	movff	efgtoa@g,___flneg@f1
  5057  0020CC  0060  F260  F002   	movff	efgtoa@g+1,___flneg@f1+1
  5058  0020D2  0060  F264  F003   	movff	efgtoa@g+2,___flneg@f1+2
  5059  0020D8  0060  F268  F004   	movff	efgtoa@g+3,___flneg@f1+3
  5060  0020DE  EC78  F02D         	call	___flneg	;wreg free
  5061  0020E2  0060  F004  F097   	movff	?___flneg,efgtoa@g
  5062  0020E8  0060  F008  F098   	movff	?___flneg+1,efgtoa@g+1
  5063  0020EE  0060  F00C  F099   	movff	?___flneg+2,efgtoa@g+2
  5064  0020F4  0060  F010  F09A   	movff	?___flneg+3,efgtoa@g+3
  5065  0020FA                     l5120:
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  5069  0020FA  0E00               	movlw	0
  5070  0020FC  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  5071  0020FE  0E00               	movlw	0
  5072  002100  6F9D               	movwf	efgtoa@n& (0+255),b
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w = width;
  5076  002102  0060  F36C  F08A   	movff	_width,efgtoa@w
  5077  002108  0060  F370  F08B   	movff	_width+1,efgtoa@w+1
  5078                           
  5079                           ; BSR set to: 0
  5080                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if (sign || 
      +                          (flags & (1 << 2))) {
  5081  00210E  5185               	movf	efgtoa@sign& (0+255),w,b
  5082  002110  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5083  002112  A4D8               	btfss	status,2,c
  5084  002114  D002               	goto	u6310
  5085                           
  5086                           ; BSR set to: 0
  5087  002116  A5DF               	btfss	_flags& (0+255),2,b
  5088  002118  D014               	goto	l5140
  5089  00211A                     u6310:
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] 
      +                          = sign ? '-' : '+';
  5093  00211A  5185               	movf	efgtoa@sign& (0+255),w,b
  5094  00211C  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5095  00211E  A4D8               	btfss	status,2,c
  5096  002120  D004               	goto	l5132
  5097                           
  5098                           ; BSR set to: 0
  5099  002122  0E00               	movlw	0
  5100  002124  6F70               	movwf	(_efgtoa$603+1)& (0+255),b
  5101  002126  0E2B               	movlw	43
  5102  002128  D003               	goto	L2
  5103  00212A                     l5132:
  5104                           
  5105                           ; BSR set to: 0
  5106  00212A  0E00               	movlw	0
  5107  00212C  6F70               	movwf	(_efgtoa$603+1)& (0+255),b
  5108  00212E  0E2D               	movlw	45
  5109  002130                     L2:
  5110  002130  6F6F               	movwf	_efgtoa$603& (0+255),b
  5111                           
  5112                           ; BSR set to: 0
  5113  002132  0060  F1BC  F438   	movff	_efgtoa$603,_dbuf
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:         ++n;
  5117  002138  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  5118  00213A  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:         --w;
  5122  00213C  078A               	decf	efgtoa@w& (0+255),f,b
  5123  00213E  A0D8               	btfss	status,0,c
  5124  002140  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5125  002142                     l5140:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5129  002142  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5130  002148  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5131  00214E  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5132  002154  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5133  00215A  ECD4  F026         	call	___fpclassifyf	;wreg free
  5134  00215E  0401               	decf	?___fpclassifyf^0,w,c
  5135  002160  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5136  002162  A4D8               	btfss	status,2,c
  5137  002164  D053               	goto	l5158
  5138  002166  0EBF               	movlw	191
  5139  002168  0100               	movlb	0	; () banked
  5140  00216A  6F66               	movwf	??_efgtoa& (0+255),b
  5141  00216C  0EFF               	movlw	255
  5142  00216E  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5143  002170  5165               	movf	efgtoa@c& (0+255),w,b
  5144  002172  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5145  002174  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5146  002176  5166               	movf	??_efgtoa& (0+255),w,b
  5147  002178  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5148  00217A  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5149  00217C  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5150  00217E  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5151  002180  E106               	bnz	u6340
  5152  002182  0E1A               	movlw	26
  5153  002184  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5154  002186  B0D8               	btfsc	status,0,c
  5155  002188  D002               	goto	u6340
  5156  00218A  0E01               	movlw	1
  5157  00218C  D001               	goto	u6350
  5158  00218E                     u6340:
  5159  00218E  0E00               	movlw	0
  5160  002190                     u6350:
  5161  002190  6F71               	movwf	_efgtoa$604& (0+255),b
  5162  002192  6B72               	clrf	(_efgtoa$604+1)& (0+255),b
  5163                           
  5164                           ; BSR set to: 0
  5165  002194  5171               	movf	_efgtoa$604& (0+255),w,b
  5166  002196  1172               	iorwf	(_efgtoa$604+1)& (0+255),w,b
  5167  002198  B4D8               	btfsc	status,2,c
  5168  00219A  D00F               	goto	l5150
  5169                           
  5170                           ; BSR set to: 0
  5171                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:             strc
      +                          py(&dbuf[n], "INF");
  5172  00219C  0E38               	movlw	low _dbuf
  5173  00219E  259D               	addwf	efgtoa@n& (0+255),w,b
  5174  0021A0  6E01               	movwf	strcpy@dest^0,c
  5175  0021A2  0E04               	movlw	high _dbuf
  5176  0021A4  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5177  0021A6  6E02               	movwf	(strcpy@dest+1)^0,c
  5178  0021A8  0E86               	movlw	low STR_7
  5179  0021AA  6E03               	movwf	strcpy@src^0,c
  5180  0021AC  5003               	movf	strcpy@src^0,w,c
  5181  0021AE  A4D8               	btfss	status,2,c
  5182  0021B0  0E20               	movlw	high __smallconst
  5183  0021B2  6E04               	movwf	(strcpy@src+1)^0,c
  5184  0021B4  ECEC  F02B         	call	_strcpy	;wreg free
  5185                           
  5186                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:         } else {
  5187  0021B8  D00E               	goto	l5152
  5188  0021BA                     l5150:
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:             strc
      +                          py(&dbuf[n], "inf");
  5192  0021BA  0E38               	movlw	low _dbuf
  5193  0021BC  259D               	addwf	efgtoa@n& (0+255),w,b
  5194  0021BE  6E01               	movwf	strcpy@dest^0,c
  5195  0021C0  0E04               	movlw	high _dbuf
  5196  0021C2  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5197  0021C4  6E02               	movwf	(strcpy@dest+1)^0,c
  5198  0021C6  0E8E               	movlw	low STR_8
  5199  0021C8  6E03               	movwf	strcpy@src^0,c
  5200  0021CA  5003               	movf	strcpy@src^0,w,c
  5201  0021CC  A4D8               	btfss	status,2,c
  5202  0021CE  0E20               	movlw	high __smallconst
  5203  0021D0  6E04               	movwf	(strcpy@src+1)^0,c
  5204  0021D2  ECEC  F02B         	call	_strcpy	;wreg free
  5205  0021D6                     l5152:
  5206                           
  5207                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:         w -= ((s
      +                          izeof("inf")/sizeof("inf"[0]))-1);
  5208  0021D6  0100               	movlb	0	; () banked
  5209  0021D8  0EFD               	movlw	253
  5210  0021DA  278A               	addwf	efgtoa@w& (0+255),f,b
  5211  0021DC  0EFF               	movlw	255
  5212  0021DE  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5213  0021E0                     l5154:
  5214                           
  5215                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:         return p
      +                          ad(fp, &dbuf[0], w);
  5216  0021E0  0060  F180  F00F   	movff	efgtoa@fp,pad@fp
  5217  0021E6  0E38               	movlw	low _dbuf
  5218  0021E8  6E10               	movwf	pad@buf^0,c
  5219  0021EA  0E04               	movlw	high _dbuf
  5220  0021EC  6E11               	movwf	(pad@buf+1)^0,c
  5221  0021EE  0060  F228  F012   	movff	efgtoa@w,pad@p
  5222  0021F4  0060  F22C  F013   	movff	efgtoa@w+1,pad@p+1
  5223  0021FA  ECC7  F028         	call	_pad	;wreg free
  5224  0021FE  0060  F03C  F060   	movff	?_pad,?_efgtoa
  5225  002204  0060  F040  F061   	movff	?_pad+1,?_efgtoa+1
  5226  00220A  0012               	return	
  5227  00220C                     l5158:
  5228                           
  5229                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5230  00220C  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5231  002212  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5232  002218  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5233  00221E  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5234  002224  ECD4  F026         	call	___fpclassifyf	;wreg free
  5235  002228  5001               	movf	?___fpclassifyf^0,w,c
  5236  00222A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5237  00222C  A4D8               	btfss	status,2,c
  5238  00222E  D039               	goto	l5176
  5239  002230  0EBF               	movlw	191
  5240  002232  0100               	movlb	0	; () banked
  5241  002234  6F66               	movwf	??_efgtoa& (0+255),b
  5242  002236  0EFF               	movlw	255
  5243  002238  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5244  00223A  5165               	movf	efgtoa@c& (0+255),w,b
  5245  00223C  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5246  00223E  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5247  002240  5166               	movf	??_efgtoa& (0+255),w,b
  5248  002242  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5249  002244  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5250  002246  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5251  002248  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5252  00224A  E106               	bnz	u6380
  5253  00224C  0E1A               	movlw	26
  5254  00224E  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5255  002250  B0D8               	btfsc	status,0,c
  5256  002252  D002               	goto	u6380
  5257  002254  0E01               	movlw	1
  5258  002256  D001               	goto	u6390
  5259  002258                     u6380:
  5260  002258  0E00               	movlw	0
  5261  00225A                     u6390:
  5262  00225A  6F73               	movwf	_efgtoa$609& (0+255),b
  5263  00225C  6B74               	clrf	(_efgtoa$609+1)& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266  00225E  5173               	movf	_efgtoa$609& (0+255),w,b
  5267  002260  1174               	iorwf	(_efgtoa$609+1)& (0+255),w,b
  5268  002262  B4D8               	btfsc	status,2,c
  5269  002264  D00F               	goto	l5168
  5270                           
  5271                           ; BSR set to: 0
  5272                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:             strc
      +                          py(&dbuf[n], "NAN");
  5273  002266  0E38               	movlw	low _dbuf
  5274  002268  259D               	addwf	efgtoa@n& (0+255),w,b
  5275  00226A  6E01               	movwf	strcpy@dest^0,c
  5276  00226C  0E04               	movlw	high _dbuf
  5277  00226E  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5278  002270  6E02               	movwf	(strcpy@dest+1)^0,c
  5279  002272  0E8A               	movlw	low STR_11
  5280  002274  6E03               	movwf	strcpy@src^0,c
  5281  002276  5003               	movf	strcpy@src^0,w,c
  5282  002278  A4D8               	btfss	status,2,c
  5283  00227A  0E20               	movlw	high __smallconst
  5284  00227C  6E04               	movwf	(strcpy@src+1)^0,c
  5285  00227E  ECEC  F02B         	call	_strcpy	;wreg free
  5286                           
  5287                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:         } else {
  5288  002282  D7A9               	goto	l5152
  5289  002284                     l5168:
  5290                           
  5291                           ; BSR set to: 0
  5292                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:             strc
      +                          py(&dbuf[n], "nan");
  5293  002284  0E38               	movlw	low _dbuf
  5294  002286  259D               	addwf	efgtoa@n& (0+255),w,b
  5295  002288  6E01               	movwf	strcpy@dest^0,c
  5296  00228A  0E04               	movlw	high _dbuf
  5297  00228C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5298  00228E  6E02               	movwf	(strcpy@dest+1)^0,c
  5299  002290  0E92               	movlw	low STR_12
  5300  002292  6E03               	movwf	strcpy@src^0,c
  5301  002294  5003               	movf	strcpy@src^0,w,c
  5302  002296  A4D8               	btfss	status,2,c
  5303  002298  0E20               	movlw	high __smallconst
  5304  00229A  6E04               	movwf	(strcpy@src+1)^0,c
  5305  00229C  ECEC  F02B         	call	_strcpy	;wreg free
  5306  0022A0  D79A               	goto	l5152
  5307  0022A2                     l5176:
  5308                           
  5309                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  5310  0022A2  0E00               	movlw	0
  5311  0022A4  0100               	movlb	0	; () banked
  5312  0022A6  6F9F               	movwf	efgtoa@u& (0+255),b
  5313  0022A8  0E00               	movlw	0
  5314  0022AA  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  5315  0022AC  0E80               	movlw	128
  5316  0022AE  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  5317  0022B0  0E3F               	movlw	63
  5318  0022B2  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  5319                           
  5320                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  5321  0022B4  0E00               	movlw	0
  5322  0022B6  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  5323  0022B8  0E00               	movlw	0
  5324  0022BA  6F9B               	movwf	efgtoa@e& (0+255),b
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0
      +                          .0)) {
  5328  0022BC  0060  F25C  F001   	movff	efgtoa@g,___fleq@ff1
  5329  0022C2  0060  F260  F002   	movff	efgtoa@g+1,___fleq@ff1+1
  5330  0022C8  0060  F264  F003   	movff	efgtoa@g+2,___fleq@ff1+2
  5331  0022CE  0060  F268  F004   	movff	efgtoa@g+3,___fleq@ff1+3
  5332  0022D4  0E00               	movlw	0
  5333  0022D6  6E05               	movwf	___fleq@ff2^0,c
  5334  0022D8  0E00               	movlw	0
  5335  0022DA  6E06               	movwf	(___fleq@ff2+1)^0,c
  5336  0022DC  0E00               	movlw	0
  5337  0022DE  6E07               	movwf	(___fleq@ff2+2)^0,c
  5338  0022E0  0E00               	movlw	0
  5339  0022E2  6E08               	movwf	(___fleq@ff2+3)^0,c
  5340  0022E4  ECFB  F029         	call	___fleq	;wreg free
  5341  0022E8  A0D8               	btfss	status,0,c
  5342  0022EA  D026               	goto	l5186
  5343  0022EC  D09A               	goto	u6430
  5344  0022EE                     l5182:
  5345                           
  5346                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:             u = 
      +                          u*10.0;
  5347  0022EE  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  5348  0022F4  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  5349  0022FA  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  5350  002300  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  5351  002306  0E00               	movlw	0
  5352  002308  6E3C               	movwf	___flmul@a^0,c
  5353  00230A  0E00               	movlw	0
  5354  00230C  6E3D               	movwf	(___flmul@a+1)^0,c
  5355  00230E  0E20               	movlw	32
  5356  002310  6E3E               	movwf	(___flmul@a+2)^0,c
  5357  002312  0E41               	movlw	65
  5358  002314  6E3F               	movwf	(___flmul@a+3)^0,c
  5359  002316  ECE6  F01C         	call	___flmul	;wreg free
  5360  00231A  0060  F0E0  F09F   	movff	?___flmul,efgtoa@u
  5361  002320  0060  F0E4  F0A0   	movff	?___flmul+1,efgtoa@u+1
  5362  002326  0060  F0E8  F0A1   	movff	?___flmul+2,efgtoa@u+2
  5363  00232C  0060  F0EC  F0A2   	movff	?___flmul+3,efgtoa@u+3
  5364                           
  5365                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:             ++e;
  5366  002332  0100               	movlb	0	; () banked
  5367  002334  4B9B               	infsnz	efgtoa@e& (0+255),f,b
  5368  002336  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  5369  002338                     l5186:
  5370                           
  5371                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:         while (!
      +                          (g < (u*10.0))) {
  5372  002338  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  5373  00233E  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  5374  002344  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  5375  00234A  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  5376  002350  0E00               	movlw	0
  5377  002352  6E3C               	movwf	___flmul@a^0,c
  5378  002354  0E00               	movlw	0
  5379  002356  6E3D               	movwf	(___flmul@a+1)^0,c
  5380  002358  0E20               	movlw	32
  5381  00235A  6E3E               	movwf	(___flmul@a+2)^0,c
  5382  00235C  0E41               	movlw	65
  5383  00235E  6E3F               	movwf	(___flmul@a+3)^0,c
  5384  002360  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  5385  002366  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  5386  00236C  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  5387  002372  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  5388  002378  ECE6  F01C         	call	___flmul	;wreg free
  5389  00237C  0060  F0E0  F055   	movff	?___flmul,___flge@ff2
  5390  002382  0060  F0E4  F056   	movff	?___flmul+1,___flge@ff2+1
  5391  002388  0060  F0E8  F057   	movff	?___flmul+2,___flge@ff2+2
  5392  00238E  0060  F0EC  F058   	movff	?___flmul+3,___flge@ff2+3
  5393  002394  EC4A  F027         	call	___flge	;wreg free
  5394  002398  A0D8               	btfss	status,0,c
  5395  00239A  D027               	goto	l5192
  5396  00239C  D7A8               	goto	l5182
  5397  00239E                     l5188:
  5398                           
  5399                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:             u = 
      +                          u/10.0;
  5400  00239E  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  5401  0023A4  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  5402  0023AA  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  5403  0023B0  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  5404  0023B6  0E00               	movlw	0
  5405  0023B8  6E23               	movwf	___fldiv@a^0,c
  5406  0023BA  0E00               	movlw	0
  5407  0023BC  6E24               	movwf	(___fldiv@a+1)^0,c
  5408  0023BE  0E20               	movlw	32
  5409  0023C0  6E25               	movwf	(___fldiv@a+2)^0,c
  5410  0023C2  0E41               	movlw	65
  5411  0023C4  6E26               	movwf	(___fldiv@a+3)^0,c
  5412  0023C6  ECB5  F021         	call	___fldiv	;wreg free
  5413  0023CA  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  5414  0023D0  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  5415  0023D6  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  5416  0023DC  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  5417                           
  5418                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:             --e;
  5419  0023E2  0100               	movlb	0	; () banked
  5420  0023E4  079B               	decf	efgtoa@e& (0+255),f,b
  5421  0023E6  A0D8               	btfss	status,0,c
  5422  0023E8  079C               	decf	(efgtoa@e+1)& (0+255),f,b
  5423  0023EA                     l5192:
  5424                           
  5425                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:         while (g
      +                           < u) {
  5426  0023EA  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  5427  0023F0  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  5428  0023F6  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  5429  0023FC  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  5430  002402  0060  F27C  F055   	movff	efgtoa@u,___flge@ff2
  5431  002408  0060  F280  F056   	movff	efgtoa@u+1,___flge@ff2+1
  5432  00240E  0060  F284  F057   	movff	efgtoa@u+2,___flge@ff2+2
  5433  002414  0060  F288  F058   	movff	efgtoa@u+3,___flge@ff2+3
  5434  00241A  EC4A  F027         	call	___flge	;wreg free
  5435  00241E  A0D8               	btfss	status,0,c
  5436  002420  D7BE               	goto	l5188
  5437  002422                     u6430:
  5438                           
  5439                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mode = tolow
      +                          er((int)c);
  5440  002422  0060  F194  F007   	movff	efgtoa@c,tolower@c
  5441  002428  6A08               	clrf	(tolower@c+1)^0,c
  5442  00242A  ECA8  F02C         	call	_tolower	;wreg free
  5443  00242E  5007               	movf	?_tolower^0,w,c
  5444  002430  0100               	movlb	0	; () banked
  5445  002432  6F8C               	movwf	efgtoa@mode& (0+255),b
  5446                           
  5447                           ; BSR set to: 0
  5448                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nmode = mode
      +                          ;
  5449  002434  0060  F230  F089   	movff	efgtoa@mode,efgtoa@nmode
  5450                           
  5451                           ; BSR set to: 0
  5452                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if (mode == 
      +                          'g') {
  5453  00243A  0E67               	movlw	103
  5454  00243C  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5455  00243E  A4D8               	btfss	status,2,c
  5456  002440  D01B               	goto	l5208
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0)
      +                           {
  5460  002442  51DD               	movf	_prec& (0+255),w,b
  5461  002444  11DE               	iorwf	(_prec+1)& (0+255),w,b
  5462  002446  A4D8               	btfss	status,2,c
  5463  002448  D004               	goto	l5204
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5467  00244A  0E00               	movlw	0
  5468  00244C  6FDE               	movwf	(_prec+1)& (0+255),b
  5469  00244E  0E01               	movlw	1
  5470  002450  6FDD               	movwf	_prec& (0+255),b
  5471  002452                     l5204:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:         p = (0 <
      +                           prec) ? prec : 6;
  5475  002452  BFDE               	btfsc	(_prec+1)& (0+255),7,b
  5476  002454  D005               	goto	u6460
  5477  002456  51DE               	movf	(_prec+1)& (0+255),w,b
  5478  002458  E108               	bnz	l559
  5479  00245A  05DD               	decf	_prec& (0+255),w,b
  5480  00245C  B0D8               	btfsc	status,0,c
  5481  00245E  D005               	goto	l559
  5482  002460                     u6460:
  5483                           
  5484                           ; BSR set to: 0
  5485  002460  0E00               	movlw	0
  5486  002462  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  5487  002464  0E06               	movlw	6
  5488  002466  6F87               	movwf	efgtoa@p& (0+255),b
  5489  002468  D00A               	goto	l5214
  5490  00246A                     l559:
  5491                           
  5492                           ; BSR set to: 0
  5493  00246A  0060  F374  F087   	movff	_prec,efgtoa@p
  5494  002470  0060  F378  F088   	movff	_prec+1,efgtoa@p+1
  5495  002476  D003               	goto	l5214
  5496  002478                     l5208:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:         p = (pre
      +                          c < 0) ? 6 : prec;
  5500  002478  AFDE               	btfss	(_prec+1)& (0+255),7,b
  5501  00247A  D7F7               	goto	l559
  5502  00247C  D7F1               	goto	u6460
  5503  00247E                     l5214:
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if (mode == 
      +                          'g') {
  5507  00247E  0E67               	movlw	103
  5508  002480  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5509  002482  A4D8               	btfss	status,2,c
  5510  002484  D024               	goto	l5224
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:         if (!(e 
      +                          < -4) && !((p - 1) < e)) {
  5514  002486  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  5515  002488  D006               	goto	u6490
  5516  00248A  0EFC               	movlw	252
  5517  00248C  5D9B               	subwf	efgtoa@e& (0+255),w,b
  5518  00248E  0EFF               	movlw	255
  5519  002490  599C               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5520  002492  A0D8               	btfss	status,0,c
  5521  002494  D01A               	goto	l5222
  5522  002496                     u6490:
  5523                           
  5524                           ; BSR set to: 0
  5525  002496  0EFF               	movlw	255
  5526  002498  6F66               	movwf	??_efgtoa& (0+255),b
  5527  00249A  0EFF               	movlw	255
  5528  00249C  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5529  00249E  0060  F21C  F068   	movff	efgtoa@p,??_efgtoa+2
  5530  0024A4  0060  F220  F069   	movff	efgtoa@p+1,??_efgtoa+3
  5531  0024AA  5166               	movf	??_efgtoa& (0+255),w,b
  5532  0024AC  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5533  0024AE  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5534  0024B0  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5535  0024B2  519B               	movf	efgtoa@e& (0+255),w,b
  5536  0024B4  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5537  0024B6  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5538  0024B8  0A80               	xorlw	128
  5539  0024BA  6F6A               	movwf	(??_efgtoa+4)& (0+255),b
  5540  0024BC  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  5541  0024BE  0A80               	xorlw	128
  5542  0024C0  596A               	subwfb	(??_efgtoa+4)& (0+255),w,b
  5543  0024C2  A0D8               	btfss	status,0,c
  5544  0024C4  D002               	goto	l5222
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:             nmod
      +                          e = 'f';
  5548  0024C6  0E66               	movlw	102
  5549  0024C8  D001               	goto	L3
  5550  0024CA                     l5222:
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:             nmod
      +                          e = 'e';
  5554  0024CA  0E65               	movlw	101
  5555  0024CC                     L3:
  5556  0024CC  6F89               	movwf	efgtoa@nmode& (0+255),b
  5557  0024CE                     l5224:
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5561  0024CE  0060  F21C  F07F   	movff	efgtoa@p,efgtoa@m
  5562  0024D4  0060  F220  F080   	movff	efgtoa@p+1,efgtoa@m+1
  5563                           
  5564                           ; BSR set to: 0
  5565                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if (!(mode =
      +                          = 'g') || ((nmode == 'f') && (e < 0))) {
  5566  0024DA  0E67               	movlw	103
  5567  0024DC  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5568  0024DE  A4D8               	btfss	status,2,c
  5569  0024E0  D005               	goto	u6530
  5570                           
  5571                           ; BSR set to: 0
  5572  0024E2  0E66               	movlw	102
  5573  0024E4  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  5574  0024E6  B4D8               	btfsc	status,2,c
  5575                           
  5576                           ; BSR set to: 0
  5577  0024E8  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  5578  0024EA  D002               	goto	l5234
  5579  0024EC                     u6530:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5583  0024EC  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  5584  0024EE  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  5585  0024F0                     l5234:
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if (nmode ==
      +                           'f') {
  5589  0024F0  0E66               	movlw	102
  5590  0024F2  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  5591  0024F4  A4D8               	btfss	status,2,c
  5592  0024F6  D016               	goto	l5244
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:         if (e < 
      +                          0) {
  5596  0024F8  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  5597  0024FA  D00C               	goto	l5240
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:             u = 
      +                          1.0;
  5601  0024FC  0E00               	movlw	0
  5602  0024FE  6F9F               	movwf	efgtoa@u& (0+255),b
  5603  002500  0E00               	movlw	0
  5604  002502  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  5605  002504  0E80               	movlw	128
  5606  002506  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  5607  002508  0E3F               	movlw	63
  5608  00250A  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  5609                           
  5610                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:             e = 
      +                          0;
  5611  00250C  0E00               	movlw	0
  5612  00250E  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  5613  002510  0E00               	movlw	0
  5614  002512  6F9B               	movwf	efgtoa@e& (0+255),b
  5615  002514                     l5240:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:         if (!(mo
      +                          de == 'g')) {
  5619  002514  0E67               	movlw	103
  5620  002516  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5621  002518  B4D8               	btfsc	status,2,c
  5622  00251A  D004               	goto	l5244
  5623                           
  5624                           ; BSR set to: 0
  5625                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:             m +=
      +                           e;
  5626  00251C  519B               	movf	efgtoa@e& (0+255),w,b
  5627  00251E  277F               	addwf	efgtoa@m& (0+255),f,b
  5628  002520  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  5629  002522  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5630  002524                     l5244:
  5631                           
  5632                           ; BSR set to: 0
  5633                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5634  002524  0E00               	movlw	0
  5635  002526  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  5636  002528  0E00               	movlw	0
  5637  00252A  6F95               	movwf	efgtoa@i& (0+255),b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5641  00252C  0060  F25C  F08D   	movff	efgtoa@g,efgtoa@h
  5642  002532  0060  F260  F08E   	movff	efgtoa@g+1,efgtoa@h+1
  5643  002538  0060  F264  F08F   	movff	efgtoa@g+2,efgtoa@h+2
  5644  00253E  0060  F268  F090   	movff	efgtoa@g+3,efgtoa@h+3
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5648  002544  0060  F27C  F06B   	movff	efgtoa@u,efgtoa@ou
  5649  00254A  0060  F280  F06C   	movff	efgtoa@u+1,efgtoa@ou+1
  5650  002550  0060  F284  F06D   	movff	efgtoa@u+2,efgtoa@ou+2
  5651  002556  0060  F288  F06E   	movff	efgtoa@u+3,efgtoa@ou+3
  5652                           
  5653                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  5654  00255C  D0AD               	goto	l5258
  5655  00255E                     l5250:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:         l = floo
      +                          rf(h/u);
  5659  00255E  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  5660  002564  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  5661  00256A  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  5662  002570  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  5663  002576  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  5664  00257C  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  5665  002582  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  5666  002588  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  5667  00258E  ECB5  F021         	call	___fldiv	;wreg free
  5668  002592  0060  F07C  F038   	movff	?___fldiv,floorf@x
  5669  002598  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  5670  00259E  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  5671  0025A4  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  5672  0025AA  EC0B  F023         	call	_floorf	;wreg free
  5673  0025AE  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  5674  0025B4  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  5675  0025BA  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  5676  0025C0  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  5677                           
  5678                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:         d = (int
      +                          )l;
  5679  0025C6  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  5680  0025CC  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  5681  0025D2  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  5682  0025D8  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  5683  0025DE  ECB2  F027         	call	___fltol	;wreg free
  5684  0025E2  0060  F004  F083   	movff	?___fltol,efgtoa@d
  5685  0025E8  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  5686                           
  5687                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:         h -= l*u
      +                          ;
  5688  0025EE  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  5689  0025F4  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  5690  0025FA  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  5691  002600  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  5692  002606  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  5693  00260C  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  5694  002612  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  5695  002618  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  5696  00261E  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  5697  002624  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  5698  00262A  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  5699  002630  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  5700  002636  ECE6  F01C         	call	___flmul	;wreg free
  5701  00263A  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  5702  002640  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  5703  002646  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  5704  00264C  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  5705  002652  EC20  F02C         	call	___flsub	;wreg free
  5706  002656  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  5707  00265C  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  5708  002662  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  5709  002668  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  5710                           
  5711                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:         u = u/10
      +                          .0;
  5712  00266E  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  5713  002674  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  5714  00267A  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  5715  002680  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  5716  002686  0E00               	movlw	0
  5717  002688  6E23               	movwf	___fldiv@a^0,c
  5718  00268A  0E00               	movlw	0
  5719  00268C  6E24               	movwf	(___fldiv@a+1)^0,c
  5720  00268E  0E20               	movlw	32
  5721  002690  6E25               	movwf	(___fldiv@a+2)^0,c
  5722  002692  0E41               	movlw	65
  5723  002694  6E26               	movwf	(___fldiv@a+3)^0,c
  5724  002696  ECB5  F021         	call	___fldiv	;wreg free
  5725  00269A  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  5726  0026A0  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  5727  0026A6  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  5728  0026AC  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  5729                           
  5730                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5731  0026B2  0100               	movlb	0	; () banked
  5732  0026B4  4B95               	infsnz	efgtoa@i& (0+255),f,b
  5733  0026B6  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  5734  0026B8                     l5258:
  5735                           
  5736                           ; BSR set to: 0
  5737                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  5738  0026B8  517F               	movf	efgtoa@m& (0+255),w,b
  5739  0026BA  5D95               	subwf	efgtoa@i& (0+255),w,b
  5740  0026BC  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  5741  0026BE  0A80               	xorlw	128
  5742  0026C0  6F66               	movwf	??_efgtoa& (0+255),b
  5743  0026C2  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  5744  0026C4  0A80               	xorlw	128
  5745  0026C6  5966               	subwfb	??_efgtoa& (0+255),w,b
  5746  0026C8  A0D8               	btfss	status,0,c
  5747  0026CA  D749               	goto	l5250
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  5751  0026CC  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  5752  0026D2  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  5753  0026D8  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  5754  0026DE  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  5755  0026E4  0E00               	movlw	0
  5756  0026E6  6E3C               	movwf	___flmul@a^0,c
  5757  0026E8  0E00               	movlw	0
  5758  0026EA  6E3D               	movwf	(___flmul@a+1)^0,c
  5759  0026EC  0EA0               	movlw	160
  5760  0026EE  6E3E               	movwf	(___flmul@a+2)^0,c
  5761  0026F0  0E40               	movlw	64
  5762  0026F2  6E3F               	movwf	(___flmul@a+3)^0,c
  5763  0026F4  ECE6  F01C         	call	___flmul	;wreg free
  5764  0026F8  0060  F0E0  F091   	movff	?___flmul,efgtoa@l
  5765  0026FE  0060  F0E4  F092   	movff	?___flmul+1,efgtoa@l+1
  5766  002704  0060  F0E8  F093   	movff	?___flmul+2,efgtoa@l+2
  5767  00270A  0060  F0EC  F094   	movff	?___flmul+3,efgtoa@l+3
  5768                           
  5769                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  5770  002710  0060  F234  F051   	movff	efgtoa@h,___flge@ff1
  5771  002716  0060  F238  F052   	movff	efgtoa@h+1,___flge@ff1+1
  5772  00271C  0060  F23C  F053   	movff	efgtoa@h+2,___flge@ff1+2
  5773  002722  0060  F240  F054   	movff	efgtoa@h+3,___flge@ff1+3
  5774  002728  0060  F244  F055   	movff	efgtoa@l,___flge@ff2
  5775  00272E  0060  F248  F056   	movff	efgtoa@l+1,___flge@ff2+1
  5776  002734  0060  F24C  F057   	movff	efgtoa@l+2,___flge@ff2+2
  5777  00273A  0060  F250  F058   	movff	efgtoa@l+3,___flge@ff2+3
  5778  002740  EC4A  F027         	call	___flge	;wreg free
  5779  002744  B0D8               	btfsc	status,0,c
  5780  002746  D003               	goto	l5266
  5781                           
  5782                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  5783  002748  0E00               	movlw	0
  5784  00274A  0100               	movlb	0	; () banked
  5785  00274C  D020               	goto	L4
  5786  00274E                     l5266:
  5787                           
  5788                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:         if ((h =
      +                          = l) && !(d % 2)) {
  5789  00274E  0060  F234  F001   	movff	efgtoa@h,___fleq@ff1
  5790  002754  0060  F238  F002   	movff	efgtoa@h+1,___fleq@ff1+1
  5791  00275A  0060  F23C  F003   	movff	efgtoa@h+2,___fleq@ff1+2
  5792  002760  0060  F240  F004   	movff	efgtoa@h+3,___fleq@ff1+3
  5793  002766  0060  F244  F005   	movff	efgtoa@l,___fleq@ff2
  5794  00276C  0060  F248  F006   	movff	efgtoa@l+1,___fleq@ff2+1
  5795  002772  0060  F24C  F007   	movff	efgtoa@l+2,___fleq@ff2+2
  5796  002778  0060  F250  F008   	movff	efgtoa@l+3,___fleq@ff2+3
  5797  00277E  ECFB  F029         	call	___fleq	;wreg free
  5798  002782  A0D8               	btfss	status,0,c
  5799  002784  D00B               	goto	l5272
  5800  002786  0100               	movlb	0	; () banked
  5801  002788  B183               	btfsc	efgtoa@d& (0+255),0,b
  5802  00278A  D008               	goto	l5272
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:             l = 
      +                          0.0;
  5806  00278C  0E00               	movlw	0
  5807  00278E                     L4:
  5808  00278E  6F91               	movwf	efgtoa@l& (0+255),b
  5809  002790  0E00               	movlw	0
  5810  002792  6F92               	movwf	(efgtoa@l+1)& (0+255),b
  5811  002794  0E00               	movlw	0
  5812  002796  6F93               	movwf	(efgtoa@l+2)& (0+255),b
  5813  002798  0E00               	movlw	0
  5814  00279A  6F94               	movwf	(efgtoa@l+3)& (0+255),b
  5815  00279C                     l5272:
  5816                           
  5817                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  5818  00279C  0060  F25C  F00F   	movff	efgtoa@g,___fladd@b
  5819  0027A2  0060  F260  F010   	movff	efgtoa@g+1,___fladd@b+1
  5820  0027A8  0060  F264  F011   	movff	efgtoa@g+2,___fladd@b+2
  5821  0027AE  0060  F268  F012   	movff	efgtoa@g+3,___fladd@b+3
  5822  0027B4  0060  F244  F013   	movff	efgtoa@l,___fladd@a
  5823  0027BA  0060  F248  F014   	movff	efgtoa@l+1,___fladd@a+1
  5824  0027C0  0060  F24C  F015   	movff	efgtoa@l+2,___fladd@a+2
  5825  0027C6  0060  F250  F016   	movff	efgtoa@l+3,___fladd@a+3
  5826  0027CC  ECA8  F01E         	call	___fladd	;wreg free
  5827  0027D0  0060  F03C  F08D   	movff	?___fladd,efgtoa@h
  5828  0027D6  0060  F040  F08E   	movff	?___fladd+1,efgtoa@h+1
  5829  0027DC  0060  F044  F08F   	movff	?___fladd+2,efgtoa@h+2
  5830  0027E2  0060  F048  F090   	movff	?___fladd+3,efgtoa@h+3
  5831                           
  5832                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5833  0027E8  0060  F1AC  F09F   	movff	efgtoa@ou,efgtoa@u
  5834  0027EE  0060  F1B0  F0A0   	movff	efgtoa@ou+1,efgtoa@u+1
  5835  0027F4  0060  F1B4  F0A1   	movff	efgtoa@ou+2,efgtoa@u+2
  5836  0027FA  0060  F1B8  F0A2   	movff	efgtoa@ou+3,efgtoa@u+3
  5837                           
  5838                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode 
      +                          == 'e') ? 0 : e;
  5839  002800  0E65               	movlw	101
  5840  002802  0100               	movlb	0	; () banked
  5841  002804  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  5842  002806  B4D8               	btfsc	status,2,c
  5843  002808  D007               	goto	l5280
  5844                           
  5845                           ; BSR set to: 0
  5846  00280A  0060  F26C  F081   	movff	efgtoa@e,efgtoa@ne
  5847  002810  0060  F270  F082   	movff	efgtoa@e+1,efgtoa@ne+1
  5848  002816  D004               	goto	l585
  5849  002818                     l5280:
  5850                           
  5851                           ; BSR set to: 0
  5852  002818  0E00               	movlw	0
  5853  00281A  6F82               	movwf	(efgtoa@ne+1)& (0+255),b
  5854  00281C  0E00               	movlw	0
  5855  00281E  6F81               	movwf	efgtoa@ne& (0+255),b
  5856  002820                     l585:
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5860  002820  0E00               	movlw	0
  5861  002822  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  5862  002824  0E00               	movlw	0
  5863  002826  6F7D               	movwf	efgtoa@pp& (0+255),b
  5864                           
  5865                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5866  002828  0E00               	movlw	0
  5867  00282A  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  5868  00282C  0E00               	movlw	0
  5869  00282E  6F7B               	movwf	efgtoa@t& (0+255),b
  5870                           
  5871                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5872  002830  0E00               	movlw	0
  5873  002832  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  5874  002834  0E00               	movlw	0
  5875  002836  6F95               	movwf	efgtoa@i& (0+255),b
  5876                           
  5877                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  5878  002838  D0F8               	goto	l5330
  5879  00283A                     l5282:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:         l = floo
      +                          rf(h/u);
  5883  00283A  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  5884  002840  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  5885  002846  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  5886  00284C  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  5887  002852  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  5888  002858  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  5889  00285E  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  5890  002864  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  5891  00286A  ECB5  F021         	call	___fldiv	;wreg free
  5892  00286E  0060  F07C  F038   	movff	?___fldiv,floorf@x
  5893  002874  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  5894  00287A  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  5895  002880  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  5896  002886  EC0B  F023         	call	_floorf	;wreg free
  5897  00288A  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  5898  002890  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  5899  002896  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  5900  00289C  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  5901                           
  5902                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:         d = (int
      +                          )l;
  5903  0028A2  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  5904  0028A8  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  5905  0028AE  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  5906  0028B4  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  5907  0028BA  ECB2  F027         	call	___fltol	;wreg free
  5908  0028BE  0060  F004  F083   	movff	?___fltol,efgtoa@d
  5909  0028C4  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  5910                           
  5911                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:         if (!(fl
      +                          ags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5912  0028CA  0100               	movlb	0	; () banked
  5913  0028CC  B9DF               	btfsc	_flags& (0+255),4,b
  5914  0028CE  D00C               	goto	l5294
  5915                           
  5916                           ; BSR set to: 0
  5917  0028D0  5183               	movf	efgtoa@d& (0+255),w,b
  5918  0028D2  1184               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5919  0028D4  A4D8               	btfss	status,2,c
  5920  0028D6  D008               	goto	l5294
  5921                           
  5922                           ; BSR set to: 0
  5923  0028D8  0E67               	movlw	103
  5924  0028DA  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5925  0028DC  B4D8               	btfsc	status,2,c
  5926                           
  5927                           ; BSR set to: 0
  5928  0028DE  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5929  0028E0  D003               	goto	l5294
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:             ++t;
  5933  0028E2  4B7B               	infsnz	efgtoa@t& (0+255),f,b
  5934  0028E4  2B7C               	incf	(efgtoa@t+1)& (0+255),f,b
  5935                           
  5936                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:         } else {
  5937  0028E6  D039               	goto	l5322
  5938  0028E8                     l5294:
  5939                           
  5940                           ; BSR set to: 0
  5941                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:             if (
      +                          !pp && (ne < 0)) {
  5942  0028E8  517D               	movf	efgtoa@pp& (0+255),w,b
  5943  0028EA  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5944  0028EC  B4D8               	btfsc	status,2,c
  5945                           
  5946                           ; BSR set to: 0
  5947  0028EE  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  5948  0028F0  D022               	goto	l5314
  5949                           
  5950                           ; BSR set to: 0
  5951                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:                 
      +                          dbuf[n++] = '.';
  5952  0028F2  0E38               	movlw	low _dbuf
  5953  0028F4  259D               	addwf	efgtoa@n& (0+255),w,b
  5954  0028F6  6ED9               	movwf	fsr2l,c
  5955  0028F8  0E04               	movlw	high _dbuf
  5956  0028FA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5957  0028FC  6EDA               	movwf	fsr2h,c
  5958  0028FE  0E2E               	movlw	46
  5959  002900  6EDF               	movwf	indf2,c
  5960                           
  5961                           ; BSR set to: 0
  5962  002902  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  5963  002904  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:                 
      +                          --w;
  5967  002906  078A               	decf	efgtoa@w& (0+255),f,b
  5968  002908  A0D8               	btfss	status,0,c
  5969  00290A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5970                           
  5971                           ; BSR set to: 0
  5972                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:                 
      +                          pp = 1;
  5973  00290C  0E00               	movlw	0
  5974  00290E  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  5975  002910  0E01               	movlw	1
  5976  002912  6F7D               	movwf	efgtoa@pp& (0+255),b
  5977  002914  D010               	goto	l5314
  5978  002916                     l5306:
  5979                           
  5980                           ; BSR set to: 0
  5981                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:                 
      +                          dbuf[n++] = '0';
  5982  002916  0E38               	movlw	low _dbuf
  5983  002918  259D               	addwf	efgtoa@n& (0+255),w,b
  5984  00291A  6ED9               	movwf	fsr2l,c
  5985  00291C  0E04               	movlw	high _dbuf
  5986  00291E  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5987  002920  6EDA               	movwf	fsr2h,c
  5988  002922  0E30               	movlw	48
  5989  002924  6EDF               	movwf	indf2,c
  5990                           
  5991                           ; BSR set to: 0
  5992  002926  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  5993  002928  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  5994                           
  5995                           ; BSR set to: 0
  5996                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:                 
      +                          --w;
  5997  00292A  078A               	decf	efgtoa@w& (0+255),f,b
  5998  00292C  A0D8               	btfss	status,0,c
  5999  00292E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:                 
      +                          --t;
  6003  002930  077B               	decf	efgtoa@t& (0+255),f,b
  6004  002932  A0D8               	btfss	status,0,c
  6005  002934  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  6006  002936                     l5314:
  6007                           
  6008                           ; BSR set to: 0
  6009                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:             whil
      +                          e (t) {
  6010  002936  517B               	movf	efgtoa@t& (0+255),w,b
  6011  002938  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6012  00293A  A4D8               	btfss	status,2,c
  6013  00293C  D7EC               	goto	l5306
  6014                           
  6015                           ; BSR set to: 0
  6016                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:             dbuf
      +                          [n++] = '0' + d;
  6017  00293E  0E38               	movlw	low _dbuf
  6018  002940  259D               	addwf	efgtoa@n& (0+255),w,b
  6019  002942  6ED9               	movwf	fsr2l,c
  6020  002944  0E04               	movlw	high _dbuf
  6021  002946  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6022  002948  6EDA               	movwf	fsr2h,c
  6023  00294A  5183               	movf	efgtoa@d& (0+255),w,b
  6024  00294C  0F30               	addlw	48
  6025  00294E  6EDF               	movwf	indf2,c
  6026                           
  6027                           ; BSR set to: 0
  6028  002950  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6029  002952  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:             --w;
  6033  002954  078A               	decf	efgtoa@w& (0+255),f,b
  6034  002956  A0D8               	btfss	status,0,c
  6035  002958  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6036  00295A                     l5322:
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:         h -= l*u
      +                          ;
  6040  00295A  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6041  002960  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6042  002966  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6043  00296C  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6044  002972  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6045  002978  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6046  00297E  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6047  002984  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6048  00298A  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6049  002990  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6050  002996  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6051  00299C  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6052  0029A2  ECE6  F01C         	call	___flmul	;wreg free
  6053  0029A6  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6054  0029AC  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6055  0029B2  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6056  0029B8  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6057  0029BE  EC20  F02C         	call	___flsub	;wreg free
  6058  0029C2  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6059  0029C8  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6060  0029CE  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6061  0029D4  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6062                           
  6063                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:         u = u/10
      +                          .0;
  6064  0029DA  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6065  0029E0  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6066  0029E6  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6067  0029EC  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6068  0029F2  0E00               	movlw	0
  6069  0029F4  6E23               	movwf	___fldiv@a^0,c
  6070  0029F6  0E00               	movlw	0
  6071  0029F8  6E24               	movwf	(___fldiv@a+1)^0,c
  6072  0029FA  0E20               	movlw	32
  6073  0029FC  6E25               	movwf	(___fldiv@a+2)^0,c
  6074  0029FE  0E41               	movlw	65
  6075  002A00  6E26               	movwf	(___fldiv@a+3)^0,c
  6076  002A02  ECB5  F021         	call	___fldiv	;wreg free
  6077  002A06  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6078  002A0C  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6079  002A12  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6080  002A18  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6081                           
  6082                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:         --ne;
  6083  002A1E  0100               	movlb	0	; () banked
  6084  002A20  0781               	decf	efgtoa@ne& (0+255),f,b
  6085  002A22  A0D8               	btfss	status,0,c
  6086  002A24  0782               	decf	(efgtoa@ne+1)& (0+255),f,b
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6090  002A26  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6091  002A28  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6092  002A2A                     l5330:
  6093                           
  6094                           ; BSR set to: 0
  6095                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6096  002A2A  517F               	movf	efgtoa@m& (0+255),w,b
  6097  002A2C  5D95               	subwf	efgtoa@i& (0+255),w,b
  6098  002A2E  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6099  002A30  0A80               	xorlw	128
  6100  002A32  6F66               	movwf	??_efgtoa& (0+255),b
  6101  002A34  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6102  002A36  0A80               	xorlw	128
  6103  002A38  5966               	subwfb	??_efgtoa& (0+255),w,b
  6104  002A3A  B0D8               	btfsc	status,0,c
  6105  002A3C  D008               	goto	u6700
  6106                           
  6107                           ; BSR set to: 0
  6108  002A3E  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6109  002A40  D6FC               	goto	l5282
  6110  002A42  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  6111  002A44  E104               	bnz	u6700
  6112  002A46  0E4B               	movlw	75
  6113  002A48  5D9D               	subwf	efgtoa@n& (0+255),w,b
  6114  002A4A  A0D8               	btfss	status,0,c
  6115  002A4C  D6F6               	goto	l5282
  6116  002A4E                     u6700:
  6117                           
  6118                           ; BSR set to: 0
  6119                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (
      +                          flags & (1 << 4))) {
  6120  002A4E  517D               	movf	efgtoa@pp& (0+255),w,b
  6121  002A50  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6122  002A52  B4D8               	btfsc	status,2,c
  6123                           
  6124                           ; BSR set to: 0
  6125  002A54  A9DF               	btfss	_flags& (0+255),4,b
  6126  002A56  D00A               	goto	l5342
  6127                           
  6128                           ; BSR set to: 0
  6129                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++
      +                          ] = '.';
  6130  002A58  0E38               	movlw	low _dbuf
  6131  002A5A  259D               	addwf	efgtoa@n& (0+255),w,b
  6132  002A5C  6ED9               	movwf	fsr2l,c
  6133  002A5E  0E04               	movlw	high _dbuf
  6134  002A60  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6135  002A62  6EDA               	movwf	fsr2h,c
  6136  002A64  0E2E               	movlw	46
  6137  002A66  6EDF               	movwf	indf2,c
  6138                           
  6139                           ; BSR set to: 0
  6140  002A68  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6141  002A6A  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6142  002A6C                     l5342:
  6143                           
  6144                           ; BSR set to: 0
  6145                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\
      +                          0';
  6146  002A6C  0E38               	movlw	low _dbuf
  6147  002A6E  259D               	addwf	efgtoa@n& (0+255),w,b
  6148  002A70  6ED9               	movwf	fsr2l,c
  6149  002A72  0E04               	movlw	high _dbuf
  6150  002A74  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6151  002A76  6EDA               	movwf	fsr2h,c
  6152  002A78  0E00               	movlw	0
  6153  002A7A  6EDF               	movwf	indf2,c
  6154                           
  6155                           ; BSR set to: 0
  6156                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if (nmode ==
      +                           'e') {
  6157  002A7C  0E65               	movlw	101
  6158  002A7E  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6159  002A80  A4D8               	btfss	status,2,c
  6160  002A82  EFF0  F010         	goto	l5154
  6161                           
  6162                           ; BSR set to: 0
  6163                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:         i = size
      +                          of(dbuf) - 1;
  6164  002A86  0E00               	movlw	0
  6165  002A88  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6166  002A8A  0E4F               	movlw	79
  6167  002A8C  6F95               	movwf	efgtoa@i& (0+255),b
  6168                           
  6169                           ; BSR set to: 0
  6170                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] 
      +                          = '\0';
  6171  002A8E  0E38               	movlw	low _dbuf
  6172  002A90  2595               	addwf	efgtoa@i& (0+255),w,b
  6173  002A92  6ED9               	movwf	fsr2l,c
  6174  002A94  0E04               	movlw	high _dbuf
  6175  002A96  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6176  002A98  6EDA               	movwf	fsr2h,c
  6177  002A9A  0E00               	movlw	0
  6178  002A9C  6EDF               	movwf	indf2,c
  6179                           
  6180                           ; BSR set to: 0
  6181                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:         sign = 0
      +                          ;
  6182  002A9E  0E00               	movlw	0
  6183  002AA0  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6184  002AA2  0E00               	movlw	0
  6185  002AA4  6F85               	movwf	efgtoa@sign& (0+255),b
  6186                           
  6187                           ; BSR set to: 0
  6188                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:         if (e < 
      +                          0) {
  6189  002AA6  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6190  002AA8  D008               	goto	l5358
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:             sign
      +                           = 1;
  6194  002AAA  0E00               	movlw	0
  6195  002AAC  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6196  002AAE  0E01               	movlw	1
  6197  002AB0  6F85               	movwf	efgtoa@sign& (0+255),b
  6198                           
  6199                           ; BSR set to: 0
  6200                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:             e = 
      +                          -e;
  6201  002AB2  6D9B               	negf	efgtoa@e& (0+255),b
  6202  002AB4  1F9C               	comf	(efgtoa@e+1)& (0+255),f,b
  6203  002AB6  B0D8               	btfsc	status,0,c
  6204  002AB8  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  6205  002ABA                     l5358:
  6206                           
  6207                           ; BSR set to: 0
  6208                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  6209  002ABA  0E00               	movlw	0
  6210  002ABC  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  6211  002ABE  0E02               	movlw	2
  6212  002AC0  6F87               	movwf	efgtoa@p& (0+255),b
  6213                           
  6214                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  6215  002AC2  D031               	goto	l5370
  6216  002AC4                     l5360:
  6217                           
  6218                           ; BSR set to: 0
  6219                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:             --i;
  6220  002AC4  0795               	decf	efgtoa@i& (0+255),f,b
  6221  002AC6  A0D8               	btfss	status,0,c
  6222  002AC8  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6223                           
  6224                           ; BSR set to: 0
  6225                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:             dbuf
      +                          [i] = '0' + (e % 10);
  6226  002ACA  0E38               	movlw	low _dbuf
  6227  002ACC  2595               	addwf	efgtoa@i& (0+255),w,b
  6228  002ACE  6ED9               	movwf	fsr2l,c
  6229  002AD0  0E04               	movlw	high _dbuf
  6230  002AD2  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6231  002AD4  6EDA               	movwf	fsr2h,c
  6232  002AD6  0060  F26C  F001   	movff	efgtoa@e,___awmod@dividend
  6233  002ADC  0060  F270  F002   	movff	efgtoa@e+1,___awmod@dividend+1
  6234  002AE2  0E00               	movlw	0
  6235  002AE4  6E04               	movwf	(___awmod@divisor+1)^0,c
  6236  002AE6  0E0A               	movlw	10
  6237  002AE8  6E03               	movwf	___awmod@divisor^0,c
  6238  002AEA  EC42  F02B         	call	___awmod	;wreg free
  6239  002AEE  5001               	movf	?___awmod^0,w,c
  6240  002AF0  0F30               	addlw	48
  6241  002AF2  6EDF               	movwf	indf2,c
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:             e = 
      +                          e / 10;
  6245  002AF4  0060  F26C  F001   	movff	efgtoa@e,___awdiv@dividend
  6246  002AFA  0060  F270  F002   	movff	efgtoa@e+1,___awdiv@dividend+1
  6247  002B00  0E00               	movlw	0
  6248  002B02  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6249  002B04  0E0A               	movlw	10
  6250  002B06  6E03               	movwf	___awdiv@divisor^0,c
  6251  002B08  EC85  F02A         	call	___awdiv	;wreg free
  6252  002B0C  0060  F004  F09B   	movff	?___awdiv,efgtoa@e
  6253  002B12  0060  F008  F09C   	movff	?___awdiv+1,efgtoa@e+1
  6254                           
  6255                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:             --p;
  6256  002B18  0100               	movlb	0	; () banked
  6257  002B1A  0787               	decf	efgtoa@p& (0+255),f,b
  6258  002B1C  A0D8               	btfss	status,0,c
  6259  002B1E  0788               	decf	(efgtoa@p+1)& (0+255),f,b
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:             --w;
  6263  002B20  078A               	decf	efgtoa@w& (0+255),f,b
  6264  002B22  A0D8               	btfss	status,0,c
  6265  002B24  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6266  002B26                     l5370:
  6267                           
  6268                           ; BSR set to: 0
  6269                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  6270  002B26  519B               	movf	efgtoa@e& (0+255),w,b
  6271  002B28  119C               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6272  002B2A  A4D8               	btfss	status,2,c
  6273  002B2C  D7CB               	goto	l5360
  6274                           
  6275                           ; BSR set to: 0
  6276  002B2E  BF88               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6277  002B30  D005               	goto	u6760
  6278  002B32  5188               	movf	(efgtoa@p+1)& (0+255),w,b
  6279  002B34  E1C7               	bnz	l5360
  6280  002B36  0587               	decf	efgtoa@p& (0+255),w,b
  6281  002B38  B0D8               	btfsc	status,0,c
  6282  002B3A  D7C4               	goto	l5360
  6283  002B3C                     u6760:
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:         --i;
  6287  002B3C  0795               	decf	efgtoa@i& (0+255),f,b
  6288  002B3E  A0D8               	btfss	status,0,c
  6289  002B40  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6290                           
  6291                           ; BSR set to: 0
  6292                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] 
      +                          = sign ? '-' : '+';
  6293  002B42  5185               	movf	efgtoa@sign& (0+255),w,b
  6294  002B44  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6295  002B46  A4D8               	btfss	status,2,c
  6296  002B48  D004               	goto	l5380
  6297                           
  6298                           ; BSR set to: 0
  6299  002B4A  0E00               	movlw	0
  6300  002B4C  6F76               	movwf	(_efgtoa$613+1)& (0+255),b
  6301  002B4E  0E2B               	movlw	43
  6302  002B50  D003               	goto	L5
  6303  002B52                     l5380:
  6304                           
  6305                           ; BSR set to: 0
  6306  002B52  0E00               	movlw	0
  6307  002B54  6F76               	movwf	(_efgtoa$613+1)& (0+255),b
  6308  002B56  0E2D               	movlw	45
  6309  002B58                     L5:
  6310  002B58  6F75               	movwf	_efgtoa$613& (0+255),b
  6311                           
  6312                           ; BSR set to: 0
  6313  002B5A  0E38               	movlw	low _dbuf
  6314  002B5C  2595               	addwf	efgtoa@i& (0+255),w,b
  6315  002B5E  6ED9               	movwf	fsr2l,c
  6316  002B60  0E04               	movlw	high _dbuf
  6317  002B62  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6318  002B64  6EDA               	movwf	fsr2h,c
  6319  002B66  0060  F1D7  FFDF   	movff	_efgtoa$613,indf2
  6320                           
  6321                           ; BSR set to: 0
  6322                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:         --w;
  6323  002B6C  078A               	decf	efgtoa@w& (0+255),f,b
  6324  002B6E  A0D8               	btfss	status,0,c
  6325  002B70  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6326                           
  6327                           ; BSR set to: 0
  6328                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] 
      +                          = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6329  002B72  0795               	decf	efgtoa@i& (0+255),f,b
  6330  002B74  A0D8               	btfss	status,0,c
  6331  002B76  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6332                           
  6333                           ; BSR set to: 0
  6334  002B78  0EBF               	movlw	191
  6335  002B7A  6F66               	movwf	??_efgtoa& (0+255),b
  6336  002B7C  0EFF               	movlw	255
  6337  002B7E  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6338  002B80  5165               	movf	efgtoa@c& (0+255),w,b
  6339  002B82  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  6340  002B84  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  6341  002B86  5166               	movf	??_efgtoa& (0+255),w,b
  6342  002B88  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6343  002B8A  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6344  002B8C  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6345  002B8E  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6346  002B90  E106               	bnz	u6780
  6347  002B92  0E1A               	movlw	26
  6348  002B94  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6349  002B96  B0D8               	btfsc	status,0,c
  6350  002B98  D002               	goto	u6780
  6351  002B9A  0E01               	movlw	1
  6352  002B9C  D001               	goto	u6790
  6353  002B9E                     u6780:
  6354  002B9E  0E00               	movlw	0
  6355  002BA0                     u6790:
  6356  002BA0  6F79               	movwf	_efgtoa$615& (0+255),b
  6357  002BA2  6B7A               	clrf	(_efgtoa$615+1)& (0+255),b
  6358                           
  6359                           ; BSR set to: 0
  6360  002BA4  5179               	movf	_efgtoa$615& (0+255),w,b
  6361  002BA6  117A               	iorwf	(_efgtoa$615+1)& (0+255),w,b
  6362  002BA8  A4D8               	btfss	status,2,c
  6363  002BAA  D004               	goto	l5396
  6364                           
  6365                           ; BSR set to: 0
  6366  002BAC  0E00               	movlw	0
  6367  002BAE  6F78               	movwf	(_efgtoa$614+1)& (0+255),b
  6368  002BB0  0E65               	movlw	101
  6369  002BB2  D003               	goto	L6
  6370  002BB4                     l5396:
  6371                           
  6372                           ; BSR set to: 0
  6373  002BB4  0E00               	movlw	0
  6374  002BB6  6F78               	movwf	(_efgtoa$614+1)& (0+255),b
  6375  002BB8  0E45               	movlw	69
  6376  002BBA                     L6:
  6377  002BBA  6F77               	movwf	_efgtoa$614& (0+255),b
  6378                           
  6379                           ; BSR set to: 0
  6380  002BBC  0E38               	movlw	low _dbuf
  6381  002BBE  2595               	addwf	efgtoa@i& (0+255),w,b
  6382  002BC0  6ED9               	movwf	fsr2l,c
  6383  002BC2  0E04               	movlw	high _dbuf
  6384  002BC4  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6385  002BC6  6EDA               	movwf	fsr2h,c
  6386  002BC8  0060  F1DF  FFDF   	movff	_efgtoa$614,indf2
  6387                           
  6388                           ; BSR set to: 0
  6389                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:         --w;
  6390  002BCE  078A               	decf	efgtoa@w& (0+255),f,b
  6391  002BD0  A0D8               	btfss	status,0,c
  6392  002BD2  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6393                           
  6394                           ; BSR set to: 0
  6395                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:         strcpy(&
      +                          dbuf[n], &dbuf[i]);
  6396  002BD4  0E38               	movlw	low _dbuf
  6397  002BD6  259D               	addwf	efgtoa@n& (0+255),w,b
  6398  002BD8  6E01               	movwf	strcpy@dest^0,c
  6399  002BDA  0E04               	movlw	high _dbuf
  6400  002BDC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6401  002BDE  6E02               	movwf	(strcpy@dest+1)^0,c
  6402  002BE0  0E38               	movlw	low _dbuf
  6403  002BE2  2595               	addwf	efgtoa@i& (0+255),w,b
  6404  002BE4  6E03               	movwf	strcpy@src^0,c
  6405  002BE6  0E04               	movlw	high _dbuf
  6406  002BE8  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6407  002BEA  6E04               	movwf	(strcpy@src+1)^0,c
  6408  002BEC  ECEC  F02B         	call	_strcpy	;wreg free
  6409  002BF0  EFF0  F010         	goto	l5154
  6410  002BF4                     __end_of_efgtoa:
  6411                           	opt callstack 0
  6412                           
  6413 ;; *************** function _tolower *****************
  6414 ;; Defined at:
  6415 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  c               2    6[COMRAM] int 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  2    6[COMRAM] int 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6430 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6432 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6433 ;;Total ram usage:        8 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:    1
  6436 ;; This function calls:
  6437 ;;		_isupper
  6438 ;; This function is called by:
  6439 ;;		_efgtoa
  6440 ;;		_vfpfcnvrt
  6441 ;; This function uses a non-reentrant model
  6442 ;;
  6443                           
  6444                           	psect	text13
  6445  005950                     __ptext13:
  6446                           	opt callstack 0
  6447  005950                     _tolower:
  6448                           	opt callstack 25
  6449                           
  6450                           ;incstack = 0
  6451  005950  0EBF               	movlw	191
  6452  005952  6E09               	movwf	??_tolower^0,c
  6453  005954  0EFF               	movlw	255
  6454  005956  6E0A               	movwf	(??_tolower+1)^0,c
  6455  005958  0060  F01C  F00B   	movff	tolower@c,??_tolower+2
  6456  00595E  0060  F020  F00C   	movff	tolower@c+1,??_tolower+3
  6457  005964  5009               	movf	??_tolower^0,w,c
  6458  005966  260B               	addwf	(??_tolower+2)^0,f,c
  6459  005968  500A               	movf	(??_tolower+1)^0,w,c
  6460  00596A  220C               	addwfc	(??_tolower+3)^0,f,c
  6461  00596C  500C               	movf	(??_tolower+3)^0,w,c
  6462  00596E  E106               	bnz	u3710
  6463  005970  0E1A               	movlw	26
  6464  005972  5C0B               	subwf	(??_tolower+2)^0,w,c
  6465  005974  B0D8               	btfsc	status,0,c
  6466  005976  D002               	goto	u3710
  6467  005978  0E01               	movlw	1
  6468  00597A  D001               	goto	u3720
  6469  00597C                     u3710:
  6470  00597C  0E00               	movlw	0
  6471  00597E                     u3720:
  6472  00597E  6E0D               	movwf	_tolower$1228^0,c
  6473  005980  6A0E               	clrf	(_tolower$1228+1)^0,c
  6474  005982  500D               	movf	_tolower$1228^0,w,c
  6475  005984  100E               	iorwf	(_tolower$1228+1)^0,w,c
  6476  005986  B4D8               	btfsc	status,2,c
  6477  005988  D006               	goto	l1466
  6478  00598A  0E20               	movlw	32
  6479  00598C  1007               	iorwf	tolower@c^0,w,c
  6480  00598E  6E07               	movwf	?_tolower^0,c
  6481  005990  5008               	movf	(tolower@c+1)^0,w,c
  6482  005992  6E08               	movwf	(?_tolower+1)^0,c
  6483  005994  0012               	return	
  6484  005996                     l1466:
  6485  005996  0060  F01C  F007   	movff	tolower@c,?_tolower
  6486  00599C  0060  F020  F008   	movff	tolower@c+1,?_tolower+1
  6487  0059A2  0012               	return		;funcret
  6488  0059A4                     __end_of_tolower:
  6489                           	opt callstack 0
  6490                           
  6491 ;; *************** function _isupper *****************
  6492 ;; Defined at:
  6493 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  c               2    0[COMRAM] int 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2    0[COMRAM] int 
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6507 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6509 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;Total ram usage:        6 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; This function calls:
  6514 ;;		Nothing
  6515 ;; This function is called by:
  6516 ;;		_efgtoa
  6517 ;;		_vfpfcnvrt
  6518 ;;		_tolower
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           	psect	text14
  6523  005B26                     __ptext14:
  6524                           	opt callstack 0
  6525  005B26                     _isupper:
  6526                           	opt callstack 25
  6527                           
  6528                           ;incstack = 0
  6529  005B26  0EBF               	movlw	191
  6530  005B28  6E03               	movwf	??_isupper^0,c
  6531  005B2A  0EFF               	movlw	255
  6532  005B2C  6E04               	movwf	(??_isupper+1)^0,c
  6533  005B2E  0060  F004  F005   	movff	isupper@c,??_isupper+2
  6534  005B34  0060  F008  F006   	movff	isupper@c+1,??_isupper+3
  6535  005B3A  5003               	movf	??_isupper^0,w,c
  6536  005B3C  2605               	addwf	(??_isupper+2)^0,f,c
  6537  005B3E  5004               	movf	(??_isupper+1)^0,w,c
  6538  005B40  2206               	addwfc	(??_isupper+3)^0,f,c
  6539  005B42  5006               	movf	(??_isupper+3)^0,w,c
  6540  005B44  E106               	bnz	u3170
  6541  005B46  0E1A               	movlw	26
  6542  005B48  5C05               	subwf	(??_isupper+2)^0,w,c
  6543  005B4A  B0D8               	btfsc	status,0,c
  6544  005B4C  D002               	goto	u3170
  6545  005B4E  0E01               	movlw	1
  6546  005B50  D001               	goto	u3180
  6547  005B52                     u3170:
  6548  005B52  0E00               	movlw	0
  6549  005B54                     u3180:
  6550  005B54  6E01               	movwf	?_isupper^0,c
  6551  005B56  6A02               	clrf	(?_isupper+1)^0,c
  6552  005B58  0012               	return		;funcret
  6553  005B5A                     __end_of_isupper:
  6554                           	opt callstack 0
  6555                           
  6556 ;; *************** function _strcpy *****************
  6557 ;; Defined at:
  6558 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  6559 ;; Parameters:    Size  Location     Type
  6560 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6561 ;;		 -> dbuf(80), 
  6562 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6563 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  6564 ;;		 -> dbuf(80), 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  d               2    8[COMRAM] PTR unsigned char 
  6567 ;;		 -> dbuf(80), 
  6568 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6569 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  6570 ;;		 -> dbuf(80), 
  6571 ;; Return value:  Size  Location     Type
  6572 ;;                  2    0[COMRAM] PTR unsigned char 
  6573 ;; Registers used:
  6574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6575 ;; Tracked objects:
  6576 ;;		On entry : 3F/0
  6577 ;;		On exit  : 0/0
  6578 ;;		Unchanged: 0/0
  6579 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6580 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6581 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6583 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6584 ;;Total ram usage:       10 bytes
  6585 ;; Hardware stack levels used:    1
  6586 ;; This function calls:
  6587 ;;		Nothing
  6588 ;; This function is called by:
  6589 ;;		_efgtoa
  6590 ;; This function uses a non-reentrant model
  6591 ;;
  6592                           
  6593                           	psect	text15
  6594  0057D8                     __ptext15:
  6595                           	opt callstack 0
  6596  0057D8                     _strcpy:
  6597                           	opt callstack 25
  6598                           
  6599                           ; BSR set to: 0
  6600                           
  6601                           ;incstack = 0
  6602  0057D8  0060  F00C  F007   	movff	strcpy@src,strcpy@s
  6603  0057DE  0060  F010  F008   	movff	strcpy@src+1,strcpy@s+1
  6604  0057E4  0060  F004  F009   	movff	strcpy@dest,strcpy@d
  6605  0057EA  0060  F008  F00A   	movff	strcpy@dest+1,strcpy@d+1
  6606  0057F0                     l5108:
  6607  0057F0  5007               	movf	strcpy@s^0,w,c
  6608  0057F2  6E05               	movwf	??_strcpy^0,c
  6609  0057F4  5008               	movf	(strcpy@s+1)^0,w,c
  6610  0057F6  6E06               	movwf	(??_strcpy+1)^0,c
  6611  0057F8  4A07               	infsnz	strcpy@s^0,f,c
  6612  0057FA  2A08               	incf	(strcpy@s+1)^0,f,c
  6613  0057FC  0060  F017  FFF6   	movff	??_strcpy,tblptrl
  6614  005802  0060  F01B  FFF7   	movff	??_strcpy+1,tblptrh
  6615  005808  0E00               	movlw	low (__smallconst shr (0+16))
  6616  00580A  6EF8               	movwf	tblptru,c
  6617  00580C  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  6618  005812  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  6619  005818  4A09               	infsnz	strcpy@d^0,f,c
  6620  00581A  2A0A               	incf	(strcpy@d+1)^0,f,c
  6621  00581C  0E1F               	movlw	(high __ramtop+-1)
  6622  00581E  64F7               	cpfsgt	tblptrh,c
  6623  005820  D003               	bra	u6277
  6624  005822  0008               	tblrd		*
  6625  005824  50F5               	movf	tablat,w,c
  6626  005826  D007               	bra	u6270
  6627  005828                     u6277:
  6628  005828  006F FFDB FFE1     	movff	tblptrl,fsr1l
  6629  00582E  006F FFDF FFE2     	movff	tblptrh,fsr1h
  6630  005834  50E7               	movf	indf1,w,c
  6631  005836                     u6270:
  6632  005836  6EDF               	movwf	indf2,c
  6633  005838  50DF               	movf	indf2,w,c
  6634  00583A  B4D8               	btfsc	status,2,c
  6635  00583C  0012               	return	
  6636  00583E  D7D8               	goto	l5108
  6637  005840                     __end_of_strcpy:
  6638                           	opt callstack 0
  6639                           
  6640 ;; *************** function _pad *****************
  6641 ;; Defined at:
  6642 ;;		line 72 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  6643 ;; Parameters:    Size  Location     Type
  6644 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6645 ;;		 -> sprintf@f(6), 
  6646 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6647 ;;		 -> dbuf(80), 
  6648 ;;  p               2   17[COMRAM] int 
  6649 ;; Auto vars:     Size  Location     Type
  6650 ;;  w               2   22[COMRAM] int 
  6651 ;;  i               2   20[COMRAM] int 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  2   14[COMRAM] int 
  6654 ;; Registers used:
  6655 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6661 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6662 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6664 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6665 ;;Total ram usage:       10 bytes
  6666 ;; Hardware stack levels used:    1
  6667 ;; Hardware stack levels required when called:    3
  6668 ;; This function calls:
  6669 ;;		_fputc
  6670 ;;		_fputs
  6671 ;;		_strlen
  6672 ;; This function is called by:
  6673 ;;		_efgtoa
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text16
  6678  00518E                     __ptext16:
  6679                           	opt callstack 0
  6680  00518E                     _pad:
  6681                           	opt callstack 22
  6682                           
  6683                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static int pad(FI
      +                          LE *fp, char *buf, int p);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt
      +                          .c: 73: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 74:     int 
      +                          i, w;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 77:     if (flag
      +                          s & (1 << 0)) {
  6684                           
  6685                           ;incstack = 0
  6686  00518E  0100               	movlb	0	; () banked
  6687  005190  A1DF               	btfss	_flags& (0+255),0,b
  6688  005192  D00B               	goto	l5088
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:         fputs((co
      +                          nst char *)buf, fp);
  6692  005194  0060  F040  F009   	movff	pad@buf,fputs@s
  6693  00519A  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  6694  0051A0  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  6695  0051A6  EC5C  F02D         	call	_fputs	;wreg free
  6696  0051AA                     l5088:
  6697                           
  6698                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ?
      +                           0 : p;
  6699  0051AA  BE13               	btfsc	(pad@p+1)^0,7,c
  6700  0051AC  D007               	goto	l5092
  6701  0051AE  0060  F048  F017   	movff	pad@p,pad@w
  6702  0051B4  0060  F04C  F018   	movff	pad@p+1,pad@w+1
  6703  0051BA  D004               	goto	l518
  6704  0051BC                     l5092:
  6705  0051BC  0E00               	movlw	0
  6706  0051BE  6E18               	movwf	(pad@w+1)^0,c
  6707  0051C0  0E00               	movlw	0
  6708  0051C2  6E17               	movwf	pad@w^0,c
  6709  0051C4                     l518:
  6710                           
  6711                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  6712  0051C4  0E00               	movlw	0
  6713  0051C6  6E16               	movwf	(pad@i+1)^0,c
  6714  0051C8  0E00               	movlw	0
  6715  0051CA  6E15               	movwf	pad@i^0,c
  6716                           
  6717                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  6718  0051CC  D00B               	goto	l5098
  6719  0051CE                     l5094:
  6720                           
  6721                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:         fputc(' '
      +                          , fp);
  6722  0051CE  0E00               	movlw	0
  6723  0051D0  6E02               	movwf	(fputc@c+1)^0,c
  6724  0051D2  0E20               	movlw	32
  6725  0051D4  6E01               	movwf	fputc@c^0,c
  6726  0051D6  0060  F03C  F003   	movff	pad@fp,fputc@fp
  6727  0051DC  EC67  F029         	call	_fputc	;wreg free
  6728                           
  6729                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:         ++i;
  6730  0051E0  4A15               	infsnz	pad@i^0,f,c
  6731  0051E2  2A16               	incf	(pad@i+1)^0,f,c
  6732  0051E4                     l5098:
  6733                           
  6734                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  6735  0051E4  5017               	movf	pad@w^0,w,c
  6736  0051E6  5C15               	subwf	pad@i^0,w,c
  6737  0051E8  5016               	movf	(pad@i+1)^0,w,c
  6738  0051EA  0A80               	xorlw	128
  6739  0051EC  6E14               	movwf	??_pad^0,c
  6740  0051EE  5018               	movf	(pad@w+1)^0,w,c
  6741  0051F0  0A80               	xorlw	128
  6742  0051F2  5814               	subwfb	??_pad^0,w,c
  6743  0051F4  A0D8               	btfss	status,0,c
  6744  0051F6  D7EB               	goto	l5094
  6745                           
  6746                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if (!(flags &
      +                           (1 << 0))) {
  6747  0051F8  0100               	movlb	0	; () banked
  6748  0051FA  B1DF               	btfsc	_flags& (0+255),0,b
  6749  0051FC  D00B               	goto	l5102
  6750                           
  6751                           ; BSR set to: 0
  6752                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:         fputs((co
      +                          nst char *)buf, fp);
  6753  0051FE  0060  F040  F009   	movff	pad@buf,fputs@s
  6754  005204  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  6755  00520A  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  6756  005210  EC5C  F02D         	call	_fputs	;wreg free
  6757  005214                     l5102:
  6758                           
  6759                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     return strlen
      +                          (buf) + w;
  6760  005214  0060  F040  F001   	movff	pad@buf,strlen@s
  6761  00521A  0060  F044  F002   	movff	pad@buf+1,strlen@s+1
  6762  005220  ECC7  F02D         	call	_strlen	;wreg free
  6763  005224  5017               	movf	pad@w^0,w,c
  6764  005226  2401               	addwf	?_strlen^0,w,c
  6765  005228  6E0F               	movwf	?_pad^0,c
  6766  00522A  5018               	movf	(pad@w+1)^0,w,c
  6767  00522C  2002               	addwfc	(?_strlen+1)^0,w,c
  6768  00522E  6E10               	movwf	(?_pad+1)^0,c
  6769  005230  0012               	return		;funcret
  6770  005232                     __end_of_pad:
  6771                           	opt callstack 0
  6772                           
  6773 ;; *************** function _strlen *****************
  6774 ;; Defined at:
  6775 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  6776 ;; Parameters:    Size  Location     Type
  6777 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6778 ;;		 -> dbuf(80), 
  6779 ;; Auto vars:     Size  Location     Type
  6780 ;;  a               2    2[COMRAM] PTR const unsigned char 
  6781 ;;		 -> dbuf(80), 
  6782 ;; Return value:  Size  Location     Type
  6783 ;;                  2    0[COMRAM] unsigned int 
  6784 ;; Registers used:
  6785 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6786 ;; Tracked objects:
  6787 ;;		On entry : 0/0
  6788 ;;		On exit  : 0/0
  6789 ;;		Unchanged: 0/0
  6790 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6791 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6792 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6794 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6795 ;;Total ram usage:        4 bytes
  6796 ;; Hardware stack levels used:    1
  6797 ;; This function calls:
  6798 ;;		Nothing
  6799 ;; This function is called by:
  6800 ;;		_pad
  6801 ;; This function uses a non-reentrant model
  6802 ;;
  6803                           
  6804                           	psect	text17
  6805  005B8E                     __ptext17:
  6806                           	opt callstack 0
  6807  005B8E                     _strlen:
  6808                           	opt callstack 24
  6809                           
  6810                           ;incstack = 0
  6811  005B8E  0060  F004  F003   	movff	strlen@s,strlen@a
  6812  005B94  0060  F008  F004   	movff	strlen@s+1,strlen@a+1
  6813  005B9A  D002               	goto	l5078
  6814  005B9C                     l5076:
  6815  005B9C  4A01               	infsnz	strlen@s^0,f,c
  6816  005B9E  2A02               	incf	(strlen@s+1)^0,f,c
  6817  005BA0                     l5078:
  6818  005BA0  0060  F007  FFD9   	movff	strlen@s,fsr2l
  6819  005BA6  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  6820  005BAC  50DF               	movf	indf2,w,c
  6821  005BAE  A4D8               	btfss	status,2,c
  6822  005BB0  D7F5               	goto	l5076
  6823  005BB2  5003               	movf	strlen@a^0,w,c
  6824  005BB4  5C01               	subwf	strlen@s^0,w,c
  6825  005BB6  6E01               	movwf	?_strlen^0,c
  6826  005BB8  5004               	movf	(strlen@a+1)^0,w,c
  6827  005BBA  5802               	subwfb	(strlen@s+1)^0,w,c
  6828  005BBC  6E02               	movwf	(?_strlen+1)^0,c
  6829  005BBE  0012               	return		;funcret
  6830  005BC0                     __end_of_strlen:
  6831                           	opt callstack 0
  6832                           
  6833 ;; *************** function _fputs *****************
  6834 ;; Defined at:
  6835 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6838 ;;		 -> dbuf(80), 
  6839 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6840 ;;		 -> sprintf@f(6), 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  i               2   12[COMRAM] int 
  6843 ;;  c               1   11[COMRAM] unsigned char 
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  2    8[COMRAM] int 
  6846 ;; Registers used:
  6847 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6848 ;; Tracked objects:
  6849 ;;		On entry : 3F/0
  6850 ;;		On exit  : 0/0
  6851 ;;		Unchanged: 0/0
  6852 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6853 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6854 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6856 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6857 ;;Total ram usage:        6 bytes
  6858 ;; Hardware stack levels used:    1
  6859 ;; Hardware stack levels required when called:    2
  6860 ;; This function calls:
  6861 ;;		_fputc
  6862 ;; This function is called by:
  6863 ;;		_pad
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text18
  6868  005AB8                     __ptext18:
  6869                           	opt callstack 0
  6870  005AB8                     _fputs:
  6871                           	opt callstack 22
  6872                           
  6873                           ; BSR set to: 0
  6874                           
  6875                           ;incstack = 0
  6876  005AB8  0E00               	movlw	0
  6877  005ABA  6E0E               	movwf	(fputs@i+1)^0,c
  6878  005ABC  0E00               	movlw	0
  6879  005ABE  6E0D               	movwf	fputs@i^0,c
  6880  005AC0  D00B               	goto	l5072
  6881  005AC2                     l5068:
  6882  005AC2  0060  F030  F001   	movff	fputs@c,fputc@c
  6883  005AC8  6A02               	clrf	(fputc@c+1)^0,c
  6884  005ACA  0060  F02C  F003   	movff	fputs@fp,fputc@fp
  6885  005AD0  EC67  F029         	call	_fputc	;wreg free
  6886  005AD4  4A0D               	infsnz	fputs@i^0,f,c
  6887  005AD6  2A0E               	incf	(fputs@i+1)^0,f,c
  6888  005AD8                     l5072:
  6889  005AD8  500D               	movf	fputs@i^0,w,c
  6890  005ADA  2409               	addwf	fputs@s^0,w,c
  6891  005ADC  6ED9               	movwf	fsr2l,c
  6892  005ADE  500E               	movf	(fputs@i+1)^0,w,c
  6893  005AE0  200A               	addwfc	(fputs@s+1)^0,w,c
  6894  005AE2  6EDA               	movwf	fsr2h,c
  6895  005AE4  50DF               	movf	indf2,w,c
  6896  005AE6  6E0C               	movwf	fputs@c^0,c
  6897  005AE8  500C               	movf	fputs@c^0,w,c
  6898  005AEA  B4D8               	btfsc	status,2,c
  6899  005AEC  0012               	return	
  6900  005AEE  D7E9               	goto	l5068
  6901  005AF0                     __end_of_fputs:
  6902                           	opt callstack 0
  6903                           
  6904 ;; *************** function _fputc *****************
  6905 ;; Defined at:
  6906 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  6907 ;; Parameters:    Size  Location     Type
  6908 ;;  c               2    0[COMRAM] int 
  6909 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6910 ;;		 -> sprintf@f(6), 
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  2    0[COMRAM] int 
  6915 ;; Registers used:
  6916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6922 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6924 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6925 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6926 ;;Total ram usage:        8 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; Hardware stack levels required when called:    1
  6929 ;; This function calls:
  6930 ;;		_putch
  6931 ;; This function is called by:
  6932 ;;		_pad
  6933 ;;		_vfpfcnvrt
  6934 ;;		_fputs
  6935 ;; This function uses a non-reentrant model
  6936 ;;
  6937                           
  6938                           	psect	text19
  6939  0052CE                     __ptext19:
  6940                           	opt callstack 0
  6941  0052CE                     _fputc:
  6942                           	opt callstack 25
  6943                           
  6944                           ;incstack = 0
  6945  0052CE  5003               	movf	fputc@fp^0,w,c
  6946  0052D0  B4D8               	btfsc	status,2,c
  6947  0052D2  D003               	goto	u3120
  6948  0052D4  5003               	movf	fputc@fp^0,w,c
  6949  0052D6  A4D8               	btfss	status,2,c
  6950  0052D8  D004               	goto	l3274
  6951  0052DA                     u3120:
  6952  0052DA  5001               	movf	fputc@c^0,w,c
  6953  0052DC  EC0D  F02E         	call	_putch
  6954  0052E0  0012               	return	
  6955  0052E2                     l3274:
  6956  0052E2  5003               	movf	fputc@fp^0,w,c
  6957  0052E4  6ED9               	movwf	fsr2l,c
  6958  0052E6  6ADA               	clrf	fsr2h,c
  6959  0052E8  0E04               	movlw	4
  6960  0052EA  26D9               	addwf	fsr2l,f,c
  6961  0052EC  50DE               	movf	postinc2,w,c
  6962  0052EE  10DE               	iorwf	postinc2,w,c
  6963  0052F0  B4D8               	btfsc	status,2,c
  6964  0052F2  D014               	goto	u3140
  6965  0052F4  5003               	movf	fputc@fp^0,w,c
  6966  0052F6  6ED9               	movwf	fsr2l,c
  6967  0052F8  6ADA               	clrf	fsr2h,c
  6968  0052FA  0E04               	movlw	4
  6969  0052FC  26D9               	addwf	fsr2l,f,c
  6970  0052FE  5003               	movf	fputc@fp^0,w,c
  6971  005300  6EE1               	movwf	fsr1l,c
  6972  005302  6AE2               	clrf	fsr1h,c
  6973  005304  0E02               	movlw	2
  6974  005306  26E1               	addwf	fsr1l,f,c
  6975  005308  50DE               	movf	postinc2,w,c
  6976  00530A  5CE6               	subwf	postinc1,w,c
  6977  00530C  50E6               	movf	postinc1,w,c
  6978  00530E  0A80               	xorlw	128
  6979  005310  6E08               	movwf	(??_fputc+4)^0,c
  6980  005312  50DE               	movf	postinc2,w,c
  6981  005314  0A80               	xorlw	128
  6982  005316  5808               	subwfb	(??_fputc+4)^0,w,c
  6983  005318  B0D8               	btfsc	status,0,c
  6984  00531A  0012               	return	
  6985  00531C                     u3140:
  6986  00531C  5003               	movf	fputc@fp^0,w,c
  6987  00531E  6ED9               	movwf	fsr2l,c
  6988  005320  6ADA               	clrf	fsr2h,c
  6989  005322  0E02               	movlw	2
  6990  005324  26D9               	addwf	fsr2l,f,c
  6991  005326  006F FF78  F004    	movff	postinc2,??_fputc
  6992  00532C  006F FF74  F005    	movff	postdec2,??_fputc+1
  6993  005332  5003               	movf	fputc@fp^0,w,c
  6994  005334  6ED9               	movwf	fsr2l,c
  6995  005336  6ADA               	clrf	fsr2h,c
  6996  005338  006F FF78  F006    	movff	postinc2,??_fputc+2
  6997  00533E  006F FF74  F007    	movff	postdec2,??_fputc+3
  6998  005344  5004               	movf	??_fputc^0,w,c
  6999  005346  2406               	addwf	(??_fputc+2)^0,w,c
  7000  005348  6ED9               	movwf	fsr2l,c
  7001  00534A  5005               	movf	(??_fputc+1)^0,w,c
  7002  00534C  2007               	addwfc	(??_fputc+3)^0,w,c
  7003  00534E  6EDA               	movwf	fsr2h,c
  7004  005350  0060  F007  FFDF   	movff	fputc@c,indf2
  7005  005356  5003               	movf	fputc@fp^0,w,c
  7006  005358  6ED9               	movwf	fsr2l,c
  7007  00535A  6ADA               	clrf	fsr2h,c
  7008  00535C  0E02               	movlw	2
  7009  00535E  26D9               	addwf	fsr2l,f,c
  7010  005360  2ADE               	incf	postinc2,f,c
  7011  005362  0E00               	movlw	0
  7012  005364  22DD               	addwfc	postdec2,f,c
  7013  005366  0012               	return		;funcret
  7014  005368                     __end_of_fputc:
  7015                           	opt callstack 0
  7016                           
  7017 ;; *************** function _putch *****************
  7018 ;; Defined at:
  7019 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7020 ;; Parameters:    Size  Location     Type
  7021 ;;  c               1    wreg     unsigned char 
  7022 ;; Auto vars:     Size  Location     Type
  7023 ;;  c               1    0[COMRAM] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7037 ;;Total ram usage:        0 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; This function calls:
  7040 ;;		Nothing
  7041 ;; This function is called by:
  7042 ;;		_fputc
  7043 ;; This function uses a non-reentrant model
  7044 ;;
  7045                           
  7046                           	psect	text20
  7047  005C1A                     __ptext20:
  7048                           	opt callstack 0
  7049  005C1A                     _putch:
  7050                           	opt callstack 25
  7051                           
  7052                           ;incstack = 0
  7053  005C1A  0012               	return		;funcret
  7054  005C1C                     __end_of_putch:
  7055                           	opt callstack 0
  7056                           
  7057 ;; *************** function _floorf *****************
  7058 ;; Defined at:
  7059 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7060 ;; Parameters:    Size  Location     Type
  7061 ;;  x               4   55[COMRAM] float 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  u               4   71[COMRAM] struct .
  7064 ;;  m               4   65[COMRAM] unsigned long 
  7065 ;;  e               2   69[COMRAM] int 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  4   55[COMRAM] float 
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7076 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7077 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7078 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7079 ;;Total ram usage:       20 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; This function calls:
  7082 ;;		Nothing
  7083 ;; This function is called by:
  7084 ;;		_efgtoa
  7085 ;; This function uses a non-reentrant model
  7086 ;;
  7087                           
  7088                           	psect	text21
  7089  004616                     __ptext21:
  7090                           	opt callstack 0
  7091  004616                     _floorf:
  7092                           	opt callstack 25
  7093                           
  7094                           ;incstack = 0
  7095  004616  0060  F344  F048   	movff	floorf@F524,floorf@u
  7096  00461C  0060  F348  F049   	movff	floorf@F524+1,floorf@u+1
  7097  004622  0060  F34C  F04A   	movff	floorf@F524+2,floorf@u+2
  7098  004628  0060  F350  F04B   	movff	floorf@F524+3,floorf@u+3
  7099  00462E  0060  F0E0  F048   	movff	floorf@x,floorf@u
  7100  004634  0060  F0E4  F049   	movff	floorf@x+1,floorf@u+1
  7101  00463A  0060  F0E8  F04A   	movff	floorf@x+2,floorf@u+2
  7102  004640  0060  F0EC  F04B   	movff	floorf@x+3,floorf@u+3
  7103  004646  0E81               	movlw	129
  7104  004648  6E3C               	movwf	??_floorf^0,c
  7105  00464A  0EFF               	movlw	255
  7106  00464C  6E3D               	movwf	(??_floorf+1)^0,c
  7107  00464E  0060  F120  F03E   	movff	floorf@u,??_floorf+2
  7108  004654  0060  F124  F03F   	movff	floorf@u+1,??_floorf+3
  7109  00465A  0060  F128  F040   	movff	floorf@u+2,??_floorf+4
  7110  004660  0060  F12C  F041   	movff	floorf@u+3,??_floorf+5
  7111  004666  0E18               	movlw	24
  7112  004668  D005               	goto	u3740
  7113  00466A                     u3745:
  7114  00466A  90D8               	bcf	status,0,c
  7115  00466C  3241               	rrcf	(??_floorf+5)^0,f,c
  7116  00466E  3240               	rrcf	(??_floorf+4)^0,f,c
  7117  004670  323F               	rrcf	(??_floorf+3)^0,f,c
  7118  004672  323E               	rrcf	(??_floorf+2)^0,f,c
  7119  004674                     u3740:
  7120  004674  2EE8               	decfsz	wreg,f,c
  7121  004676  D7F9               	goto	u3745
  7122  004678  503E               	movf	(??_floorf+2)^0,w,c
  7123  00467A  243C               	addwf	??_floorf^0,w,c
  7124  00467C  6E46               	movwf	floorf@e^0,c
  7125  00467E  0E00               	movlw	0
  7126  004680  203D               	addwfc	(??_floorf+1)^0,w,c
  7127  004682  6E47               	movwf	(floorf@e+1)^0,c
  7128  004684  BE47               	btfsc	(floorf@e+1)^0,7,c
  7129  004686  D013               	goto	l3570
  7130  004688  5047               	movf	(floorf@e+1)^0,w,c
  7131  00468A  E104               	bnz	u3750
  7132  00468C  0E17               	movlw	23
  7133  00468E  5C46               	subwf	floorf@e^0,w,c
  7134  004690  A0D8               	btfss	status,0,c
  7135  004692  D00D               	goto	l3570
  7136  004694                     u3750:
  7137  004694  0060  F0E0  F038   	movff	floorf@x,?_floorf
  7138  00469A  0060  F0E4  F039   	movff	floorf@x+1,?_floorf+1
  7139  0046A0  0060  F0E8  F03A   	movff	floorf@x+2,?_floorf+2
  7140  0046A6  0060  F0EC  F03B   	movff	floorf@x+3,?_floorf+3
  7141  0046AC  0012               	return	
  7142  0046AE                     l3570:
  7143  0046AE  BE47               	btfsc	(floorf@e+1)^0,7,c
  7144  0046B0  D064               	goto	l3580
  7145  0046B2  0060  F118  F03C   	movff	floorf@e,??_floorf
  7146  0046B8  0EFF               	movlw	255
  7147  0046BA  6E3D               	movwf	(??_floorf+1)^0,c
  7148  0046BC  0EFF               	movlw	255
  7149  0046BE  6E3E               	movwf	(??_floorf+2)^0,c
  7150  0046C0  0E7F               	movlw	127
  7151  0046C2  6E3F               	movwf	(??_floorf+3)^0,c
  7152  0046C4  0E00               	movlw	0
  7153  0046C6  6E40               	movwf	(??_floorf+4)^0,c
  7154  0046C8                     u3775:
  7155  0046C8  663C               	tstfsz	??_floorf^0,c
  7156  0046CA  D001               	goto	u3776
  7157  0046CC  D007               	goto	u3777
  7158  0046CE                     u3776:
  7159  0046CE  3440               	rlcf	(??_floorf+4)^0,w,c
  7160  0046D0  3240               	rrcf	(??_floorf+4)^0,f,c
  7161  0046D2  323F               	rrcf	(??_floorf+3)^0,f,c
  7162  0046D4  323E               	rrcf	(??_floorf+2)^0,f,c
  7163  0046D6  323D               	rrcf	(??_floorf+1)^0,f,c
  7164  0046D8  2E3C               	decfsz	??_floorf^0,f,c
  7165  0046DA  D7F6               	goto	u3775
  7166  0046DC                     u3777:
  7167  0046DC  0060  F0F4  F042   	movff	??_floorf+1,floorf@m
  7168  0046E2  0060  F0F8  F043   	movff	??_floorf+2,floorf@m+1
  7169  0046E8  0060  F0FC  F044   	movff	??_floorf+3,floorf@m+2
  7170  0046EE  0060  F100  F045   	movff	??_floorf+4,floorf@m+3
  7171  0046F4  5042               	movf	floorf@m^0,w,c
  7172  0046F6  1448               	andwf	floorf@u^0,w,c
  7173  0046F8  6E3C               	movwf	??_floorf^0,c
  7174  0046FA  5043               	movf	(floorf@m+1)^0,w,c
  7175  0046FC  1449               	andwf	(floorf@u+1)^0,w,c
  7176  0046FE  6E3D               	movwf	(??_floorf+1)^0,c
  7177  004700  5044               	movf	(floorf@m+2)^0,w,c
  7178  004702  144A               	andwf	(floorf@u+2)^0,w,c
  7179  004704  6E3E               	movwf	(??_floorf+2)^0,c
  7180  004706  5045               	movf	(floorf@m+3)^0,w,c
  7181  004708  144B               	andwf	(floorf@u+3)^0,w,c
  7182  00470A  6E3F               	movwf	(??_floorf+3)^0,c
  7183  00470C  503C               	movf	??_floorf^0,w,c
  7184  00470E  103D               	iorwf	(??_floorf+1)^0,w,c
  7185  004710  103E               	iorwf	(??_floorf+2)^0,w,c
  7186  004712  103F               	iorwf	(??_floorf+3)^0,w,c
  7187  004714  B4D8               	btfsc	status,2,c
  7188  004716  D7BE               	goto	u3750
  7189  004718  0060  F120  F03C   	movff	floorf@u,??_floorf
  7190  00471E  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7191  004724  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7192  00472A  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7193  004730  0E20               	movlw	32
  7194  004732  D005               	goto	u3790
  7195  004734                     u3795:
  7196  004734  90D8               	bcf	status,0,c
  7197  004736  323F               	rrcf	(??_floorf+3)^0,f,c
  7198  004738  323E               	rrcf	(??_floorf+2)^0,f,c
  7199  00473A  323D               	rrcf	(??_floorf+1)^0,f,c
  7200  00473C  323C               	rrcf	??_floorf^0,f,c
  7201  00473E                     u3790:
  7202  00473E  2EE8               	decfsz	wreg,f,c
  7203  004740  D7F9               	goto	u3795
  7204  004742  503C               	movf	??_floorf^0,w,c
  7205  004744  B4D8               	btfsc	status,2,c
  7206  004746  D008               	goto	l1380
  7207  004748  5042               	movf	floorf@m^0,w,c
  7208  00474A  2648               	addwf	floorf@u^0,f,c
  7209  00474C  5043               	movf	(floorf@m+1)^0,w,c
  7210  00474E  2249               	addwfc	(floorf@u+1)^0,f,c
  7211  004750  5044               	movf	(floorf@m+2)^0,w,c
  7212  004752  224A               	addwfc	(floorf@u+2)^0,f,c
  7213  004754  5045               	movf	(floorf@m+3)^0,w,c
  7214  004756  224B               	addwfc	(floorf@u+3)^0,f,c
  7215  004758                     l1380:
  7216  004758  1C42               	comf	floorf@m^0,w,c
  7217  00475A  6E3C               	movwf	??_floorf^0,c
  7218  00475C  1C43               	comf	(floorf@m+1)^0,w,c
  7219  00475E  6E3D               	movwf	(??_floorf+1)^0,c
  7220  004760  1C44               	comf	(floorf@m+2)^0,w,c
  7221  004762  6E3E               	movwf	(??_floorf+2)^0,c
  7222  004764  1C45               	comf	(floorf@m+3)^0,w,c
  7223  004766  6E3F               	movwf	(??_floorf+3)^0,c
  7224  004768  503C               	movf	??_floorf^0,w,c
  7225  00476A  1648               	andwf	floorf@u^0,f,c
  7226  00476C  503D               	movf	(??_floorf+1)^0,w,c
  7227  00476E  1649               	andwf	(floorf@u+1)^0,f,c
  7228  004770  503E               	movf	(??_floorf+2)^0,w,c
  7229  004772  164A               	andwf	(floorf@u+2)^0,f,c
  7230  004774  503F               	movf	(??_floorf+3)^0,w,c
  7231  004776  164B               	andwf	(floorf@u+3)^0,f,c
  7232  004778  D036               	goto	l3588
  7233  00477A                     l3580:
  7234  00477A  0060  F120  F03C   	movff	floorf@u,??_floorf
  7235  004780  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7236  004786  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7237  00478C  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7238  004792  0E20               	movlw	32
  7239  004794  D005               	goto	u3810
  7240  004796                     u3815:
  7241  004796  90D8               	bcf	status,0,c
  7242  004798  323F               	rrcf	(??_floorf+3)^0,f,c
  7243  00479A  323E               	rrcf	(??_floorf+2)^0,f,c
  7244  00479C  323D               	rrcf	(??_floorf+1)^0,f,c
  7245  00479E  323C               	rrcf	??_floorf^0,f,c
  7246  0047A0                     u3810:
  7247  0047A0  2EE8               	decfsz	wreg,f,c
  7248  0047A2  D7F9               	goto	u3815
  7249  0047A4  663C               	tstfsz	??_floorf^0,c
  7250  0047A6  D008               	goto	l3584
  7251  0047A8  0E00               	movlw	0
  7252  0047AA  6E48               	movwf	floorf@u^0,c
  7253  0047AC  0E00               	movlw	0
  7254  0047AE  6E49               	movwf	(floorf@u+1)^0,c
  7255  0047B0  0E00               	movlw	0
  7256  0047B2  6E4A               	movwf	(floorf@u+2)^0,c
  7257  0047B4  0E00               	movlw	0
  7258  0047B6  D016               	goto	L7
  7259  0047B8                     l3584:
  7260  0047B8  90D8               	bcf	status,0,c
  7261  0047BA  3448               	rlcf	floorf@u^0,w,c
  7262  0047BC  6E3C               	movwf	??_floorf^0,c
  7263  0047BE  3449               	rlcf	(floorf@u+1)^0,w,c
  7264  0047C0  6E3D               	movwf	(??_floorf+1)^0,c
  7265  0047C2  344A               	rlcf	(floorf@u+2)^0,w,c
  7266  0047C4  6E3E               	movwf	(??_floorf+2)^0,c
  7267  0047C6  344B               	rlcf	(floorf@u+3)^0,w,c
  7268  0047C8  6E3F               	movwf	(??_floorf+3)^0,c
  7269  0047CA  503C               	movf	??_floorf^0,w,c
  7270  0047CC  103D               	iorwf	(??_floorf+1)^0,w,c
  7271  0047CE  103E               	iorwf	(??_floorf+2)^0,w,c
  7272  0047D0  103F               	iorwf	(??_floorf+3)^0,w,c
  7273  0047D2  B4D8               	btfsc	status,2,c
  7274  0047D4  D008               	goto	l3588
  7275  0047D6  0E00               	movlw	0
  7276  0047D8  6E48               	movwf	floorf@u^0,c
  7277  0047DA  0E00               	movlw	0
  7278  0047DC  6E49               	movwf	(floorf@u+1)^0,c
  7279  0047DE  0E80               	movlw	128
  7280  0047E0  6E4A               	movwf	(floorf@u+2)^0,c
  7281  0047E2  0EBF               	movlw	191
  7282  0047E4                     L7:
  7283  0047E4  6E4B               	movwf	(floorf@u+3)^0,c
  7284  0047E6                     l3588:
  7285  0047E6  0060  F120  F038   	movff	floorf@u,?_floorf
  7286  0047EC  0060  F124  F039   	movff	floorf@u+1,?_floorf+1
  7287  0047F2  0060  F128  F03A   	movff	floorf@u+2,?_floorf+2
  7288  0047F8  0060  F12C  F03B   	movff	floorf@u+3,?_floorf+3
  7289  0047FE  0012               	return		;funcret
  7290  004800                     __end_of_floorf:
  7291                           	opt callstack 0
  7292                           
  7293 ;; *************** function ___fpclassifyf *****************
  7294 ;; Defined at:
  7295 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  x               4    0[COMRAM] float 
  7298 ;; Auto vars:     Size  Location     Type
  7299 ;;  u               4   10[COMRAM] struct .
  7300 ;;  e               2    8[COMRAM] int 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  2    0[COMRAM] int 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7310 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7314 ;;Total ram usage:       14 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; This function calls:
  7317 ;;		Nothing
  7318 ;; This function is called by:
  7319 ;;		_efgtoa
  7320 ;; This function uses a non-reentrant model
  7321 ;;
  7322                           
  7323                           	psect	text22
  7324  004DA8                     __ptext22:
  7325                           	opt callstack 0
  7326  004DA8                     ___fpclassifyf:
  7327                           	opt callstack 25
  7328                           
  7329                           ;incstack = 0
  7330  004DA8  0060  F354  F00B   	movff	___fpclassifyf@F463,___fpclassifyf@u
  7331  004DAE  0060  F358  F00C   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  7332  004DB4  0060  F35C  F00D   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  7333  004DBA  0060  F360  F00E   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  7334  004DC0  0060  F004  F00B   	movff	___fpclassifyf@x,___fpclassifyf@u
  7335  004DC6  0060  F008  F00C   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7336  004DCC  0060  F00C  F00D   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7337  004DD2  0060  F010  F00E   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7338  004DD8  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  7339  004DDE  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7340  004DE4  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7341  004DEA  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7342  004DF0  0E18               	movlw	24
  7343  004DF2  D005               	goto	u3620
  7344  004DF4                     u3625:
  7345  004DF4  90D8               	bcf	status,0,c
  7346  004DF6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7347  004DF8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7348  004DFA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7349  004DFC  3205               	rrcf	??___fpclassifyf^0,f,c
  7350  004DFE                     u3620:
  7351  004DFE  2EE8               	decfsz	wreg,f,c
  7352  004E00  D7F9               	goto	u3625
  7353  004E02  5005               	movf	??___fpclassifyf^0,w,c
  7354  004E04  6E09               	movwf	___fpclassifyf@e^0,c
  7355  004E06  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7356  004E08  5009               	movf	___fpclassifyf@e^0,w,c
  7357  004E0A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7358  004E0C  A4D8               	btfss	status,2,c
  7359  004E0E  D019               	goto	l3540
  7360  004E10  90D8               	bcf	status,0,c
  7361  004E12  340B               	rlcf	___fpclassifyf@u^0,w,c
  7362  004E14  6E05               	movwf	??___fpclassifyf^0,c
  7363  004E16  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7364  004E18  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7365  004E1A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7366  004E1C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7367  004E1E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7368  004E20  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7369  004E22  5005               	movf	??___fpclassifyf^0,w,c
  7370  004E24  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7371  004E26  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7372  004E28  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7373  004E2A  A4D8               	btfss	status,2,c
  7374  004E2C  D005               	goto	l3536
  7375  004E2E  0E00               	movlw	0
  7376  004E30  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7377  004E32  0E02               	movlw	2
  7378  004E34  6E01               	movwf	?___fpclassifyf^0,c
  7379  004E36  0012               	return	
  7380  004E38                     l3536:
  7381  004E38  0E00               	movlw	0
  7382  004E3A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7383  004E3C  0E03               	movlw	3
  7384  004E3E  6E01               	movwf	?___fpclassifyf^0,c
  7385  004E40  0012               	return	
  7386  004E42                     l3540:
  7387  004E42  2809               	incf	___fpclassifyf@e^0,w,c
  7388  004E44  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7389  004E46  A4D8               	btfss	status,2,c
  7390  004E48  D020               	goto	l3546
  7391  004E4A  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  7392  004E50  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7393  004E56  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7394  004E5C  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7395  004E62  0E09               	movlw	9
  7396  004E64                     u3665:
  7397  004E64  90D8               	bcf	status,0,c
  7398  004E66  3605               	rlcf	??___fpclassifyf^0,f,c
  7399  004E68  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7400  004E6A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7401  004E6C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7402  004E6E  2EE8               	decfsz	wreg,f,c
  7403  004E70  D7F9               	goto	u3665
  7404  004E72  5005               	movf	??___fpclassifyf^0,w,c
  7405  004E74  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7406  004E76  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7407  004E78  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7408  004E7A  A4D8               	btfss	status,2,c
  7409  004E7C  D002               	goto	u3670
  7410  004E7E  0E01               	movlw	1
  7411  004E80  D001               	goto	u3680
  7412  004E82                     u3670:
  7413  004E82  0E00               	movlw	0
  7414  004E84                     u3680:
  7415  004E84  6E01               	movwf	?___fpclassifyf^0,c
  7416  004E86  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7417  004E88  0012               	return	
  7418  004E8A                     l3546:
  7419  004E8A  0E00               	movlw	0
  7420  004E8C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7421  004E8E  0E04               	movlw	4
  7422  004E90  6E01               	movwf	?___fpclassifyf^0,c
  7423  004E92  0012               	return		;funcret
  7424  004E94                     __end_of___fpclassifyf:
  7425                           	opt callstack 0
  7426                           
  7427 ;; *************** function ___fltol *****************
  7428 ;; Defined at:
  7429 ;;		line 43 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  f1              4    0[COMRAM] int 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  exp1            1    9[COMRAM] unsigned char 
  7434 ;;  sign1           1    8[COMRAM] unsigned char 
  7435 ;; Return value:  Size  Location     Type
  7436 ;;                  4    0[COMRAM] long 
  7437 ;; Registers used:
  7438 ;;		wreg, status,2, status,0
  7439 ;; Tracked objects:
  7440 ;;		On entry : 0/0
  7441 ;;		On exit  : 0/0
  7442 ;;		Unchanged: 0/0
  7443 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7446 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;Total ram usage:       10 bytes
  7449 ;; Hardware stack levels used:    1
  7450 ;; This function calls:
  7451 ;;		Nothing
  7452 ;; This function is called by:
  7453 ;;		_efgtoa
  7454 ;; This function uses a non-reentrant model
  7455 ;;
  7456                           
  7457                           	psect	text23
  7458  004F64                     __ptext23:
  7459                           	opt callstack 0
  7460  004F64                     ___fltol:
  7461                           	opt callstack 25
  7462                           
  7463                           ;incstack = 0
  7464  004F64  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7465  004F66  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7466  004F68  6E0A               	movwf	___fltol@exp1^0,c
  7467  004F6A  500A               	movf	___fltol@exp1^0,w,c
  7468  004F6C  A4D8               	btfss	status,2,c
  7469  004F6E  D009               	goto	l4008
  7470  004F70                     u4480:
  7471  004F70  0E00               	movlw	0
  7472  004F72  6E01               	movwf	?___fltol^0,c
  7473  004F74  0E00               	movlw	0
  7474  004F76  6E02               	movwf	(?___fltol+1)^0,c
  7475  004F78  0E00               	movlw	0
  7476  004F7A  6E03               	movwf	(?___fltol+2)^0,c
  7477  004F7C  0E00               	movlw	0
  7478  004F7E  6E04               	movwf	(?___fltol+3)^0,c
  7479  004F80  0012               	return	
  7480  004F82                     l4008:
  7481  004F82  0060  F004  F005   	movff	___fltol@f1,??___fltol
  7482  004F88  0060  F008  F006   	movff	___fltol@f1+1,??___fltol+1
  7483  004F8E  0060  F00C  F007   	movff	___fltol@f1+2,??___fltol+2
  7484  004F94  0060  F010  F008   	movff	___fltol@f1+3,??___fltol+3
  7485  004F9A  0E20               	movlw	32
  7486  004F9C  D005               	goto	u4490
  7487  004F9E                     u4495:
  7488  004F9E  90D8               	bcf	status,0,c
  7489  004FA0  3208               	rrcf	(??___fltol+3)^0,f,c
  7490  004FA2  3207               	rrcf	(??___fltol+2)^0,f,c
  7491  004FA4  3206               	rrcf	(??___fltol+1)^0,f,c
  7492  004FA6  3205               	rrcf	??___fltol^0,f,c
  7493  004FA8                     u4490:
  7494  004FA8  2EE8               	decfsz	wreg,f,c
  7495  004FAA  D7F9               	goto	u4495
  7496  004FAC  5005               	movf	??___fltol^0,w,c
  7497  004FAE  6E09               	movwf	___fltol@sign1^0,c
  7498  004FB0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7499  004FB2  0EFF               	movlw	255
  7500  004FB4  1601               	andwf	___fltol@f1^0,f,c
  7501  004FB6  0EFF               	movlw	255
  7502  004FB8  1602               	andwf	(___fltol@f1+1)^0,f,c
  7503  004FBA  0EFF               	movlw	255
  7504  004FBC  1603               	andwf	(___fltol@f1+2)^0,f,c
  7505  004FBE  0E00               	movlw	0
  7506  004FC0  1604               	andwf	(___fltol@f1+3)^0,f,c
  7507  004FC2  0E96               	movlw	150
  7508  004FC4  5E0A               	subwf	___fltol@exp1^0,f,c
  7509  004FC6  AE0A               	btfss	___fltol@exp1^0,7,c
  7510  004FC8  D00D               	goto	l4028
  7511  004FCA  500A               	movf	___fltol@exp1^0,w,c
  7512  004FCC  0A80               	xorlw	128
  7513  004FCE  0F97               	addlw	151
  7514  004FD0  A0D8               	btfss	status,0,c
  7515  004FD2  D7CE               	goto	u4480
  7516  004FD4                     l4024:
  7517  004FD4  90D8               	bcf	status,0,c
  7518  004FD6  3204               	rrcf	(___fltol@f1+3)^0,f,c
  7519  004FD8  3203               	rrcf	(___fltol@f1+2)^0,f,c
  7520  004FDA  3202               	rrcf	(___fltol@f1+1)^0,f,c
  7521  004FDC  3201               	rrcf	___fltol@f1^0,f,c
  7522  004FDE  3E0A               	incfsz	___fltol@exp1^0,f,c
  7523  004FE0  D7F9               	goto	l4024
  7524  004FE2  D00D               	goto	u4530
  7525  004FE4                     l4028:
  7526  004FE4  0E1F               	movlw	31
  7527  004FE6  640A               	cpfsgt	___fltol@exp1^0,c
  7528  004FE8  D007               	goto	l4036
  7529  004FEA  D7C2               	goto	u4480
  7530  004FEC                     l4034:
  7531  004FEC  90D8               	bcf	status,0,c
  7532  004FEE  3601               	rlcf	___fltol@f1^0,f,c
  7533  004FF0  3602               	rlcf	(___fltol@f1+1)^0,f,c
  7534  004FF2  3603               	rlcf	(___fltol@f1+2)^0,f,c
  7535  004FF4  3604               	rlcf	(___fltol@f1+3)^0,f,c
  7536  004FF6  060A               	decf	___fltol@exp1^0,f,c
  7537  004FF8                     l4036:
  7538  004FF8  500A               	movf	___fltol@exp1^0,w,c
  7539  004FFA  A4D8               	btfss	status,2,c
  7540  004FFC  D7F7               	goto	l4034
  7541  004FFE                     u4530:
  7542  004FFE  5009               	movf	___fltol@sign1^0,w,c
  7543  005000  B4D8               	btfsc	status,2,c
  7544  005002  D008               	goto	l4042
  7545  005004  1E04               	comf	(___fltol@f1+3)^0,f,c
  7546  005006  1E03               	comf	(___fltol@f1+2)^0,f,c
  7547  005008  1E02               	comf	(___fltol@f1+1)^0,f,c
  7548  00500A  6C01               	negf	___fltol@f1^0,c
  7549  00500C  0E00               	movlw	0
  7550  00500E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7551  005010  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7552  005012  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7553  005014                     l4042:
  7554  005014  0060  F004  F001   	movff	___fltol@f1,?___fltol
  7555  00501A  0060  F008  F002   	movff	___fltol@f1+1,?___fltol+1
  7556  005020  0060  F00C  F003   	movff	___fltol@f1+2,?___fltol+2
  7557  005026  0060  F010  F004   	movff	___fltol@f1+3,?___fltol+3
  7558  00502C  0012               	return		;funcret
  7559  00502E                     __end_of___fltol:
  7560                           	opt callstack 0
  7561                           
  7562 ;; *************** function ___flsub *****************
  7563 ;; Defined at:
  7564 ;;		line 245 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7565 ;; Parameters:    Size  Location     Type
  7566 ;;  b               4   80[COMRAM] long 
  7567 ;;  a               4   84[COMRAM] long 
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  4   80[COMRAM] long 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7579 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7582 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7583 ;;Total ram usage:        8 bytes
  7584 ;; Hardware stack levels used:    1
  7585 ;; Hardware stack levels required when called:    1
  7586 ;; This function calls:
  7587 ;;		___fladd
  7588 ;; This function is called by:
  7589 ;;		_efgtoa
  7590 ;; This function uses a non-reentrant model
  7591 ;;
  7592                           
  7593                           	psect	text24
  7594  005840                     __ptext24:
  7595                           	opt callstack 0
  7596  005840                     ___flsub:
  7597                           	opt callstack 24
  7598                           
  7599                           ;incstack = 0
  7600  005840  0E00               	movlw	0
  7601  005842  1A55               	xorwf	___flsub@a^0,f,c
  7602  005844  0E00               	movlw	0
  7603  005846  1A56               	xorwf	(___flsub@a+1)^0,f,c
  7604  005848  0E00               	movlw	0
  7605  00584A  1A57               	xorwf	(___flsub@a+2)^0,f,c
  7606  00584C  0E80               	movlw	128
  7607  00584E  1A58               	xorwf	(___flsub@a+3)^0,f,c
  7608  005850  0060  F144  F00F   	movff	___flsub@b,___fladd@b
  7609  005856  0060  F148  F010   	movff	___flsub@b+1,___fladd@b+1
  7610  00585C  0060  F14C  F011   	movff	___flsub@b+2,___fladd@b+2
  7611  005862  0060  F150  F012   	movff	___flsub@b+3,___fladd@b+3
  7612  005868  0060  F154  F013   	movff	___flsub@a,___fladd@a
  7613  00586E  0060  F158  F014   	movff	___flsub@a+1,___fladd@a+1
  7614  005874  0060  F15C  F015   	movff	___flsub@a+2,___fladd@a+2
  7615  00587A  0060  F160  F016   	movff	___flsub@a+3,___fladd@a+3
  7616  005880  ECA8  F01E         	call	___fladd	;wreg free
  7617  005884  0060  F03C  F051   	movff	?___fladd,?___flsub
  7618  00588A  0060  F040  F052   	movff	?___fladd+1,?___flsub+1
  7619  005890  0060  F044  F053   	movff	?___fladd+2,?___flsub+2
  7620  005896  0060  F048  F054   	movff	?___fladd+3,?___flsub+3
  7621  00589C  0012               	return		;funcret
  7622  00589E                     __end_of___flsub:
  7623                           	opt callstack 0
  7624                           
  7625 ;; *************** function ___fladd *****************
  7626 ;; Defined at:
  7627 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  b               4   14[COMRAM] long 
  7630 ;;  a               4   18[COMRAM] long 
  7631 ;; Auto vars:     Size  Location     Type
  7632 ;;  grs             1   29[COMRAM] unsigned char 
  7633 ;;  bexp            1   28[COMRAM] unsigned char 
  7634 ;;  aexp            1   27[COMRAM] unsigned char 
  7635 ;;  signs           1   26[COMRAM] unsigned char 
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  4   14[COMRAM] unsigned char 
  7638 ;; Registers used:
  7639 ;;		wreg, status,2, status,0
  7640 ;; Tracked objects:
  7641 ;;		On entry : 0/4
  7642 ;;		On exit  : 0/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7645 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7646 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7647 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;Total ram usage:       16 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_main_loop
  7655 ;;		_efgtoa
  7656 ;;		___flsub
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text25
  7661  003D50                     __ptext25:
  7662                           	opt callstack 0
  7663  003D50                     ___fladd:
  7664                           	opt callstack 24
  7665                           
  7666                           ;incstack = 0
  7667  003D50  5012               	movf	(___fladd@b+3)^0,w,c
  7668  003D52  0B80               	andlw	128
  7669  003D54  6E1B               	movwf	___fladd@signs^0,c
  7670  003D56  5012               	movf	(___fladd@b+3)^0,w,c
  7671  003D58  2412               	addwf	(___fladd@b+3)^0,w,c
  7672  003D5A  6E1D               	movwf	___fladd@bexp^0,c
  7673  003D5C  BE11               	btfsc	(___fladd@b+2)^0,7,c
  7674  003D5E  801D               	bsf	___fladd@bexp^0,0,c
  7675  003D60  501D               	movf	___fladd@bexp^0,w,c
  7676  003D62  B4D8               	btfsc	status,2,c
  7677  003D64  D00D               	goto	l3320
  7678  003D66  281D               	incf	___fladd@bexp^0,w,c
  7679  003D68  A4D8               	btfss	status,2,c
  7680  003D6A  D008               	goto	l3316
  7681  003D6C  0E00               	movlw	0
  7682  003D6E  6E0F               	movwf	___fladd@b^0,c
  7683  003D70  0E00               	movlw	0
  7684  003D72  6E10               	movwf	(___fladd@b+1)^0,c
  7685  003D74  0E00               	movlw	0
  7686  003D76  6E11               	movwf	(___fladd@b+2)^0,c
  7687  003D78  0E00               	movlw	0
  7688  003D7A  6E12               	movwf	(___fladd@b+3)^0,c
  7689  003D7C                     l3316:
  7690  003D7C  8E11               	bsf	(___fladd@b+2)^0,7,c
  7691  003D7E  D006               	goto	L8
  7692  003D80                     l3320:
  7693  003D80  0E00               	movlw	0
  7694  003D82  6E0F               	movwf	___fladd@b^0,c
  7695  003D84  0E00               	movlw	0
  7696  003D86  6E10               	movwf	(___fladd@b+1)^0,c
  7697  003D88  0E00               	movlw	0
  7698  003D8A  6E11               	movwf	(___fladd@b+2)^0,c
  7699  003D8C                     L8:
  7700  003D8C  0E00               	movlw	0
  7701  003D8E  6E12               	movwf	(___fladd@b+3)^0,c
  7702  003D90  5016               	movf	(___fladd@a+3)^0,w,c
  7703  003D92  0B80               	andlw	128
  7704  003D94  6E1C               	movwf	___fladd@aexp^0,c
  7705  003D96  501B               	movf	___fladd@signs^0,w,c
  7706  003D98  181C               	xorwf	___fladd@aexp^0,w,c
  7707  003D9A  A4D8               	btfss	status,2,c
  7708  003D9C  8C1B               	bsf	___fladd@signs^0,6,c
  7709  003D9E  5016               	movf	(___fladd@a+3)^0,w,c
  7710  003DA0  2416               	addwf	(___fladd@a+3)^0,w,c
  7711  003DA2  6E1C               	movwf	___fladd@aexp^0,c
  7712  003DA4  BE15               	btfsc	(___fladd@a+2)^0,7,c
  7713  003DA6  801C               	bsf	___fladd@aexp^0,0,c
  7714  003DA8  501C               	movf	___fladd@aexp^0,w,c
  7715  003DAA  B4D8               	btfsc	status,2,c
  7716  003DAC  D00D               	goto	l3344
  7717  003DAE  281C               	incf	___fladd@aexp^0,w,c
  7718  003DB0  A4D8               	btfss	status,2,c
  7719  003DB2  D008               	goto	l3340
  7720  003DB4  0E00               	movlw	0
  7721  003DB6  6E13               	movwf	___fladd@a^0,c
  7722  003DB8  0E00               	movlw	0
  7723  003DBA  6E14               	movwf	(___fladd@a+1)^0,c
  7724  003DBC  0E00               	movlw	0
  7725  003DBE  6E15               	movwf	(___fladd@a+2)^0,c
  7726  003DC0  0E00               	movlw	0
  7727  003DC2  6E16               	movwf	(___fladd@a+3)^0,c
  7728  003DC4                     l3340:
  7729  003DC4  8E15               	bsf	(___fladd@a+2)^0,7,c
  7730  003DC6  D006               	goto	L9
  7731  003DC8                     l3344:
  7732  003DC8  0E00               	movlw	0
  7733  003DCA  6E13               	movwf	___fladd@a^0,c
  7734  003DCC  0E00               	movlw	0
  7735  003DCE  6E14               	movwf	(___fladd@a+1)^0,c
  7736  003DD0  0E00               	movlw	0
  7737  003DD2  6E15               	movwf	(___fladd@a+2)^0,c
  7738  003DD4                     L9:
  7739  003DD4  0E00               	movlw	0
  7740  003DD6  6E16               	movwf	(___fladd@a+3)^0,c
  7741  003DD8  501D               	movf	___fladd@bexp^0,w,c
  7742  003DDA  5C1C               	subwf	___fladd@aexp^0,w,c
  7743  003DDC  B0D8               	btfsc	status,0,c
  7744  003DDE  D031               	goto	l3382
  7745  003DE0  AC1B               	btfss	___fladd@signs^0,6,c
  7746  003DE2  D002               	goto	l3352
  7747  003DE4  0E80               	movlw	128
  7748  003DE6  1A1B               	xorwf	___fladd@signs^0,f,c
  7749  003DE8                     l3352:
  7750  003DE8  0060  F074  F01E   	movff	___fladd@bexp,___fladd@grs
  7751  003DEE  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  7752  003DF4  0060  F078  F01C   	movff	___fladd@grs,___fladd@aexp
  7753  003DFA  0060  F03C  F01E   	movff	___fladd@b,___fladd@grs
  7754  003E00  0060  F04C  F00F   	movff	___fladd@a,___fladd@b
  7755  003E06  0060  F078  F013   	movff	___fladd@grs,___fladd@a
  7756  003E0C  0060  F040  F01E   	movff	___fladd@b+1,___fladd@grs
  7757  003E12  0060  F050  F010   	movff	___fladd@a+1,___fladd@b+1
  7758  003E18  0060  F078  F014   	movff	___fladd@grs,___fladd@a+1
  7759  003E1E  0060  F044  F01E   	movff	___fladd@b+2,___fladd@grs
  7760  003E24  0060  F054  F011   	movff	___fladd@a+2,___fladd@b+2
  7761  003E2A  0060  F078  F015   	movff	___fladd@grs,___fladd@a+2
  7762  003E30  0060  F048  F01E   	movff	___fladd@b+3,___fladd@grs
  7763  003E36  0060  F058  F012   	movff	___fladd@a+3,___fladd@b+3
  7764  003E3C  0060  F078  F016   	movff	___fladd@grs,___fladd@a+3
  7765  003E42                     l3382:
  7766  003E42  0E00               	movlw	0
  7767  003E44  6E1E               	movwf	___fladd@grs^0,c
  7768  003E46  501D               	movf	___fladd@bexp^0,w,c
  7769  003E48  0060  F070  F017   	movff	___fladd@aexp,??___fladd
  7770  003E4E  6A18               	clrf	(??___fladd+1)^0,c
  7771  003E50  5E17               	subwf	??___fladd^0,f,c
  7772  003E52  0E00               	movlw	0
  7773  003E54  5A18               	subwfb	(??___fladd+1)^0,f,c
  7774  003E56  BE18               	btfsc	(??___fladd+1)^0,7,c
  7775  003E58  D02D               	goto	l1187
  7776  003E5A  5018               	movf	(??___fladd+1)^0,w,c
  7777  003E5C  E104               	bnz	u3280
  7778  003E5E  0E1A               	movlw	26
  7779  003E60  5C17               	subwf	??___fladd^0,w,c
  7780  003E62  A0D8               	btfss	status,0,c
  7781  003E64  D027               	goto	l1187
  7782  003E66                     u3280:
  7783  003E66  500F               	movf	___fladd@b^0,w,c
  7784  003E68  1010               	iorwf	(___fladd@b+1)^0,w,c
  7785  003E6A  1011               	iorwf	(___fladd@b+2)^0,w,c
  7786  003E6C  1012               	iorwf	(___fladd@b+3)^0,w,c
  7787  003E6E  B4D8               	btfsc	status,2,c
  7788  003E70  D002               	goto	u3290
  7789  003E72  0E01               	movlw	1
  7790  003E74  D001               	goto	u3300
  7791  003E76                     u3290:
  7792  003E76  0E00               	movlw	0
  7793  003E78                     u3300:
  7794  003E78  6E1E               	movwf	___fladd@grs^0,c
  7795  003E7A  0E00               	movlw	0
  7796  003E7C  6E0F               	movwf	___fladd@b^0,c
  7797  003E7E  0E00               	movlw	0
  7798  003E80  6E10               	movwf	(___fladd@b+1)^0,c
  7799  003E82  0E00               	movlw	0
  7800  003E84  6E11               	movwf	(___fladd@b+2)^0,c
  7801  003E86  0E00               	movlw	0
  7802  003E88  6E12               	movwf	(___fladd@b+3)^0,c
  7803  003E8A  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  7804  003E90  D015               	goto	u3330
  7805  003E92                     l1188:
  7806  003E92  A01E               	btfss	___fladd@grs^0,0,c
  7807  003E94  D005               	goto	l3394
  7808  003E96  90D8               	bcf	status,0,c
  7809  003E98  301E               	rrcf	___fladd@grs^0,w,c
  7810  003E9A  0901               	iorlw	1
  7811  003E9C  6E1E               	movwf	___fladd@grs^0,c
  7812  003E9E  D002               	goto	l3396
  7813  003EA0                     l3394:
  7814  003EA0  90D8               	bcf	status,0,c
  7815  003EA2  321E               	rrcf	___fladd@grs^0,f,c
  7816  003EA4                     l3396:
  7817  003EA4  B00F               	btfsc	___fladd@b^0,0,c
  7818  003EA6  8E1E               	bsf	___fladd@grs^0,7,c
  7819  003EA8  3412               	rlcf	(___fladd@b+3)^0,w,c
  7820  003EAA  3212               	rrcf	(___fladd@b+3)^0,f,c
  7821  003EAC  3211               	rrcf	(___fladd@b+2)^0,f,c
  7822  003EAE  3210               	rrcf	(___fladd@b+1)^0,f,c
  7823  003EB0  320F               	rrcf	___fladd@b^0,f,c
  7824  003EB2  2A1D               	incf	___fladd@bexp^0,f,c
  7825  003EB4                     l1187:
  7826  003EB4  501C               	movf	___fladd@aexp^0,w,c
  7827  003EB6  5C1D               	subwf	___fladd@bexp^0,w,c
  7828  003EB8  A0D8               	btfss	status,0,c
  7829  003EBA  D7EB               	goto	l1188
  7830  003EBC                     u3330:
  7831  003EBC  BC1B               	btfsc	___fladd@signs^0,6,c
  7832  003EBE  D028               	goto	l3428
  7833  003EC0  501D               	movf	___fladd@bexp^0,w,c
  7834  003EC2  A4D8               	btfss	status,2,c
  7835  003EC4  D009               	goto	l3410
  7836  003EC6  0E00               	movlw	0
  7837  003EC8  6E0F               	movwf	?___fladd^0,c
  7838  003ECA  0E00               	movlw	0
  7839  003ECC  6E10               	movwf	(?___fladd+1)^0,c
  7840  003ECE  0E00               	movlw	0
  7841  003ED0  6E11               	movwf	(?___fladd+2)^0,c
  7842  003ED2  0E00               	movlw	0
  7843  003ED4  6E12               	movwf	(?___fladd+3)^0,c
  7844  003ED6  0012               	return	
  7845  003ED8                     l3410:
  7846  003ED8  5013               	movf	___fladd@a^0,w,c
  7847  003EDA  260F               	addwf	___fladd@b^0,f,c
  7848  003EDC  5014               	movf	(___fladd@a+1)^0,w,c
  7849  003EDE  2210               	addwfc	(___fladd@b+1)^0,f,c
  7850  003EE0  5015               	movf	(___fladd@a+2)^0,w,c
  7851  003EE2  2211               	addwfc	(___fladd@b+2)^0,f,c
  7852  003EE4  5016               	movf	(___fladd@a+3)^0,w,c
  7853  003EE6  2212               	addwfc	(___fladd@b+3)^0,f,c
  7854  003EE8  A012               	btfss	(___fladd@b+3)^0,0,c
  7855  003EEA  D071               	goto	u3460
  7856  003EEC  A01E               	btfss	___fladd@grs^0,0,c
  7857  003EEE  D005               	goto	l3418
  7858  003EF0  90D8               	bcf	status,0,c
  7859  003EF2  301E               	rrcf	___fladd@grs^0,w,c
  7860  003EF4  0901               	iorlw	1
  7861  003EF6  6E1E               	movwf	___fladd@grs^0,c
  7862  003EF8  D002               	goto	l3420
  7863  003EFA                     l3418:
  7864  003EFA  90D8               	bcf	status,0,c
  7865  003EFC  321E               	rrcf	___fladd@grs^0,f,c
  7866  003EFE                     l3420:
  7867  003EFE  B00F               	btfsc	___fladd@b^0,0,c
  7868  003F00  8E1E               	bsf	___fladd@grs^0,7,c
  7869  003F02  3412               	rlcf	(___fladd@b+3)^0,w,c
  7870  003F04  3212               	rrcf	(___fladd@b+3)^0,f,c
  7871  003F06  3211               	rrcf	(___fladd@b+2)^0,f,c
  7872  003F08  3210               	rrcf	(___fladd@b+1)^0,f,c
  7873  003F0A  320F               	rrcf	___fladd@b^0,f,c
  7874  003F0C  2A1D               	incf	___fladd@bexp^0,f,c
  7875  003F0E  D05F               	goto	u3460
  7876  003F10                     l3428:
  7877  003F10  5013               	movf	___fladd@a^0,w,c
  7878  003F12  5C0F               	subwf	___fladd@b^0,w,c
  7879  003F14  5014               	movf	(___fladd@a+1)^0,w,c
  7880  003F16  5810               	subwfb	(___fladd@b+1)^0,w,c
  7881  003F18  5015               	movf	(___fladd@a+2)^0,w,c
  7882  003F1A  5811               	subwfb	(___fladd@b+2)^0,w,c
  7883  003F1C  5012               	movf	(___fladd@b+3)^0,w,c
  7884  003F1E  0A80               	xorlw	128
  7885  003F20  6E17               	movwf	??___fladd^0,c
  7886  003F22  5016               	movf	(___fladd@a+3)^0,w,c
  7887  003F24  0A80               	xorlw	128
  7888  003F26  5817               	subwfb	??___fladd^0,w,c
  7889  003F28  B0D8               	btfsc	status,0,c
  7890  003F2A  D025               	goto	l3438
  7891  003F2C  500F               	movf	___fladd@b^0,w,c
  7892  003F2E  5C13               	subwf	___fladd@a^0,w,c
  7893  003F30  6E17               	movwf	??___fladd^0,c
  7894  003F32  5010               	movf	(___fladd@b+1)^0,w,c
  7895  003F34  5814               	subwfb	(___fladd@a+1)^0,w,c
  7896  003F36  6E18               	movwf	(??___fladd+1)^0,c
  7897  003F38  5011               	movf	(___fladd@b+2)^0,w,c
  7898  003F3A  5815               	subwfb	(___fladd@a+2)^0,w,c
  7899  003F3C  6E19               	movwf	(??___fladd+2)^0,c
  7900  003F3E  5012               	movf	(___fladd@b+3)^0,w,c
  7901  003F40  5816               	subwfb	(___fladd@a+3)^0,w,c
  7902  003F42  6E1A               	movwf	(??___fladd+3)^0,c
  7903  003F44  0EFF               	movlw	255
  7904  003F46  2417               	addwf	??___fladd^0,w,c
  7905  003F48  6E0F               	movwf	___fladd@b^0,c
  7906  003F4A  0EFF               	movlw	255
  7907  003F4C  2018               	addwfc	(??___fladd+1)^0,w,c
  7908  003F4E  6E10               	movwf	(___fladd@b+1)^0,c
  7909  003F50  0EFF               	movlw	255
  7910  003F52  2019               	addwfc	(??___fladd+2)^0,w,c
  7911  003F54  6E11               	movwf	(___fladd@b+2)^0,c
  7912  003F56  0EFF               	movlw	255
  7913  003F58  201A               	addwfc	(??___fladd+3)^0,w,c
  7914  003F5A  6E12               	movwf	(___fladd@b+3)^0,c
  7915  003F5C  0E80               	movlw	128
  7916  003F5E  1A1B               	xorwf	___fladd@signs^0,f,c
  7917  003F60  6C1E               	negf	___fladd@grs^0,c
  7918  003F62  501E               	movf	___fladd@grs^0,w,c
  7919  003F64  A4D8               	btfss	status,2,c
  7920  003F66  D00F               	goto	l1203
  7921  003F68  0E01               	movlw	1
  7922  003F6A  260F               	addwf	___fladd@b^0,f,c
  7923  003F6C  0E00               	movlw	0
  7924  003F6E  2210               	addwfc	(___fladd@b+1)^0,f,c
  7925  003F70  2211               	addwfc	(___fladd@b+2)^0,f,c
  7926  003F72  2212               	addwfc	(___fladd@b+3)^0,f,c
  7927  003F74  D008               	goto	l1203
  7928  003F76                     l3438:
  7929  003F76  5013               	movf	___fladd@a^0,w,c
  7930  003F78  5E0F               	subwf	___fladd@b^0,f,c
  7931  003F7A  5014               	movf	(___fladd@a+1)^0,w,c
  7932  003F7C  5A10               	subwfb	(___fladd@b+1)^0,f,c
  7933  003F7E  5015               	movf	(___fladd@a+2)^0,w,c
  7934  003F80  5A11               	subwfb	(___fladd@b+2)^0,f,c
  7935  003F82  5016               	movf	(___fladd@a+3)^0,w,c
  7936  003F84  5A12               	subwfb	(___fladd@b+3)^0,f,c
  7937  003F86                     l1203:
  7938  003F86  500F               	movf	___fladd@b^0,w,c
  7939  003F88  1010               	iorwf	(___fladd@b+1)^0,w,c
  7940  003F8A  1011               	iorwf	(___fladd@b+2)^0,w,c
  7941  003F8C  1012               	iorwf	(___fladd@b+3)^0,w,c
  7942  003F8E  A4D8               	btfss	status,2,c
  7943  003F90  D01C               	goto	l3462
  7944  003F92  501E               	movf	___fladd@grs^0,w,c
  7945  003F94  A4D8               	btfss	status,2,c
  7946  003F96  D019               	goto	l3462
  7947  003F98  0E00               	movlw	0
  7948  003F9A  6E0F               	movwf	?___fladd^0,c
  7949  003F9C  0E00               	movlw	0
  7950  003F9E  6E10               	movwf	(?___fladd+1)^0,c
  7951  003FA0  0E00               	movlw	0
  7952  003FA2  6E11               	movwf	(?___fladd+2)^0,c
  7953  003FA4  0E00               	movlw	0
  7954  003FA6  6E12               	movwf	(?___fladd+3)^0,c
  7955  003FA8  0012               	return	
  7956  003FAA                     l3446:
  7957  003FAA  90D8               	bcf	status,0,c
  7958  003FAC  360F               	rlcf	___fladd@b^0,f,c
  7959  003FAE  3610               	rlcf	(___fladd@b+1)^0,f,c
  7960  003FB0  3611               	rlcf	(___fladd@b+2)^0,f,c
  7961  003FB2  3612               	rlcf	(___fladd@b+3)^0,f,c
  7962  003FB4  BE1E               	btfsc	___fladd@grs^0,7,c
  7963  003FB6  800F               	bsf	___fladd@b^0,0,c
  7964  003FB8  A01E               	btfss	___fladd@grs^0,0,c
  7965  003FBA  D002               	goto	l3456
  7966  003FBC  80D8               	bsf	status,0,c
  7967  003FBE  D001               	goto	L10
  7968  003FC0                     l3456:
  7969  003FC0  90D8               	bcf	status,0,c
  7970  003FC2                     L10:
  7971  003FC2  361E               	rlcf	___fladd@grs^0,f,c
  7972  003FC4  501D               	movf	___fladd@bexp^0,w,c
  7973  003FC6  A4D8               	btfss	status,2,c
  7974  003FC8  061D               	decf	___fladd@bexp^0,f,c
  7975  003FCA                     l3462:
  7976  003FCA  AE11               	btfss	(___fladd@b+2)^0,7,c
  7977  003FCC  D7EE               	goto	l3446
  7978  003FCE                     u3460:
  7979  003FCE  0E00               	movlw	0
  7980  003FD0  6E1C               	movwf	___fladd@aexp^0,c
  7981  003FD2  AE1E               	btfss	___fladd@grs^0,7,c
  7982  003FD4  D00C               	goto	l1212
  7983  003FD6  0060  F078  F017   	movff	___fladd@grs,??___fladd
  7984  003FDC  0E7F               	movlw	127
  7985  003FDE  1617               	andwf	??___fladd^0,f,c
  7986  003FE0  B4D8               	btfsc	status,2,c
  7987  003FE2  D003               	goto	l1213
  7988  003FE4                     u3480:
  7989  003FE4  0E01               	movlw	1
  7990  003FE6  6E1C               	movwf	___fladd@aexp^0,c
  7991  003FE8  D002               	goto	l1212
  7992  003FEA                     l1213:
  7993  003FEA  B00F               	btfsc	___fladd@b^0,0,c
  7994  003FEC  D7FB               	goto	u3480
  7995  003FEE                     l1212:
  7996  003FEE  501C               	movf	___fladd@aexp^0,w,c
  7997  003FF0  B4D8               	btfsc	status,2,c
  7998  003FF2  D028               	goto	l3482
  7999  003FF4  0E01               	movlw	1
  8000  003FF6  260F               	addwf	___fladd@b^0,f,c
  8001  003FF8  0E00               	movlw	0
  8002  003FFA  2210               	addwfc	(___fladd@b+1)^0,f,c
  8003  003FFC  2211               	addwfc	(___fladd@b+2)^0,f,c
  8004  003FFE  2212               	addwfc	(___fladd@b+3)^0,f,c
  8005  004000  A012               	btfss	(___fladd@b+3)^0,0,c
  8006  004002  D020               	goto	l3482
  8007  004004  0060  F03C  F017   	movff	___fladd@b,??___fladd
  8008  00400A  0060  F040  F018   	movff	___fladd@b+1,??___fladd+1
  8009  004010  0060  F044  F019   	movff	___fladd@b+2,??___fladd+2
  8010  004016  0060  F048  F01A   	movff	___fladd@b+3,??___fladd+3
  8011  00401C  341A               	rlcf	(??___fladd+3)^0,w,c
  8012  00401E  321A               	rrcf	(??___fladd+3)^0,f,c
  8013  004020  3219               	rrcf	(??___fladd+2)^0,f,c
  8014  004022  3218               	rrcf	(??___fladd+1)^0,f,c
  8015  004024  3217               	rrcf	??___fladd^0,f,c
  8016  004026  0060  F05C  F00F   	movff	??___fladd,___fladd@b
  8017  00402C  0060  F060  F010   	movff	??___fladd+1,___fladd@b+1
  8018  004032  0060  F064  F011   	movff	??___fladd+2,___fladd@b+2
  8019  004038  0060  F068  F012   	movff	??___fladd+3,___fladd@b+3
  8020  00403E  281D               	incf	___fladd@bexp^0,w,c
  8021  004040  A4D8               	btfss	status,2,c
  8022  004042  2A1D               	incf	___fladd@bexp^0,f,c
  8023  004044                     l3482:
  8024  004044  281D               	incf	___fladd@bexp^0,w,c
  8025  004046  B4D8               	btfsc	status,2,c
  8026  004048  D003               	goto	u3540
  8027  00404A  501D               	movf	___fladd@bexp^0,w,c
  8028  00404C  A4D8               	btfss	status,2,c
  8029  00404E  D00D               	goto	l3490
  8030  004050                     u3540:
  8031  004050  0E00               	movlw	0
  8032  004052  6E0F               	movwf	___fladd@b^0,c
  8033  004054  0E00               	movlw	0
  8034  004056  6E10               	movwf	(___fladd@b+1)^0,c
  8035  004058  0E00               	movlw	0
  8036  00405A  6E11               	movwf	(___fladd@b+2)^0,c
  8037  00405C  0E00               	movlw	0
  8038  00405E  6E12               	movwf	(___fladd@b+3)^0,c
  8039  004060  501D               	movf	___fladd@bexp^0,w,c
  8040  004062  A4D8               	btfss	status,2,c
  8041  004064  D002               	goto	l3490
  8042  004066  0E00               	movlw	0
  8043  004068  6E1B               	movwf	___fladd@signs^0,c
  8044  00406A                     l3490:
  8045  00406A  A01D               	btfss	___fladd@bexp^0,0,c
  8046  00406C  D002               	goto	l3494
  8047  00406E  8E11               	bsf	(___fladd@b+2)^0,7,c
  8048  004070  D001               	goto	l3496
  8049  004072                     l3494:
  8050  004072  9E11               	bcf	(___fladd@b+2)^0,7,c
  8051  004074                     l3496:
  8052  004074  90D8               	bcf	status,0,c
  8053  004076  301D               	rrcf	___fladd@bexp^0,w,c
  8054  004078  6E12               	movwf	(___fladd@b+3)^0,c
  8055  00407A  BE1B               	btfsc	___fladd@signs^0,7,c
  8056  00407C  8E12               	bsf	(___fladd@b+3)^0,7,c
  8057  00407E  0060  F03C  F00F   	movff	___fladd@b,?___fladd
  8058  004084  0060  F040  F010   	movff	___fladd@b+1,?___fladd+1
  8059  00408A  0060  F044  F011   	movff	___fladd@b+2,?___fladd+2
  8060  004090  0060  F048  F012   	movff	___fladd@b+3,?___fladd+3
  8061  004096  0012               	return		;funcret
  8062  004098                     __end_of___fladd:
  8063                           	opt callstack 0
  8064                           
  8065 ;; *************** function ___flneg *****************
  8066 ;; Defined at:
  8067 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  f1              4    0[COMRAM] unsigned char 
  8070 ;; Auto vars:     Size  Location     Type
  8071 ;;		None
  8072 ;; Return value:  Size  Location     Type
  8073 ;;                  4    0[COMRAM] unsigned char 
  8074 ;; Registers used:
  8075 ;;		wreg, status,2, status,0
  8076 ;; Tracked objects:
  8077 ;;		On entry : 3F/0
  8078 ;;		On exit  : 3F/0
  8079 ;;		Unchanged: 3F/0
  8080 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8081 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8085 ;;Total ram usage:        4 bytes
  8086 ;; Hardware stack levels used:    1
  8087 ;; This function calls:
  8088 ;;		Nothing
  8089 ;; This function is called by:
  8090 ;;		_efgtoa
  8091 ;; This function uses a non-reentrant model
  8092 ;;
  8093                           
  8094                           	psect	text26
  8095  005AF0                     __ptext26:
  8096                           	opt callstack 0
  8097  005AF0                     ___flneg:
  8098                           	opt callstack 25
  8099                           
  8100                           ; BSR set to: 0
  8101                           
  8102                           ;incstack = 0
  8103  005AF0  5001               	movf	___flneg@f1^0,w,c
  8104  005AF2  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8105  005AF4  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8106  005AF6  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8107  005AF8  B4D8               	btfsc	status,2,c
  8108  005AFA  D008               	goto	l3998
  8109                           
  8110                           ; BSR set to: 0
  8111  005AFC  0E00               	movlw	0
  8112  005AFE  1A01               	xorwf	___flneg@f1^0,f,c
  8113  005B00  0E00               	movlw	0
  8114  005B02  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8115  005B04  0E00               	movlw	0
  8116  005B06  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8117  005B08  0E80               	movlw	128
  8118  005B0A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8119  005B0C                     l3998:
  8120                           
  8121                           ; BSR set to: 0
  8122  005B0C  0060  F004  F001   	movff	___flneg@f1,?___flneg
  8123  005B12  0060  F008  F002   	movff	___flneg@f1+1,?___flneg+1
  8124  005B18  0060  F00C  F003   	movff	___flneg@f1+2,?___flneg+2
  8125  005B1E  0060  F010  F004   	movff	___flneg@f1+3,?___flneg+3
  8126                           
  8127                           ; BSR set to: 0
  8128  005B24  0012               	return		;funcret
  8129  005B26                     __end_of___flneg:
  8130                           	opt callstack 0
  8131                           
  8132 ;; *************** function ___flmul *****************
  8133 ;; Defined at:
  8134 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  b               4   55[COMRAM] unsigned char 
  8137 ;;  a               4   59[COMRAM] unsigned char 
  8138 ;; Auto vars:     Size  Location     Type
  8139 ;;  prod            4   74[COMRAM] struct .
  8140 ;;  grs             4   69[COMRAM] unsigned long 
  8141 ;;  temp            2   78[COMRAM] struct .
  8142 ;;  bexp            1   73[COMRAM] unsigned char 
  8143 ;;  aexp            1   68[COMRAM] unsigned char 
  8144 ;;  sign            1   67[COMRAM] unsigned char 
  8145 ;; Return value:  Size  Location     Type
  8146 ;;                  4   55[COMRAM] unsigned char 
  8147 ;; Registers used:
  8148 ;;		wreg, status,2, status,0, prodl, prodh
  8149 ;; Tracked objects:
  8150 ;;		On entry : 0/4
  8151 ;;		On exit  : 0/0
  8152 ;;		Unchanged: 0/0
  8153 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8154 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8155 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8156 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8157 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8158 ;;Total ram usage:       25 bytes
  8159 ;; Hardware stack levels used:    1
  8160 ;; This function calls:
  8161 ;;		Nothing
  8162 ;; This function is called by:
  8163 ;;		_main_loop
  8164 ;;		_efgtoa
  8165 ;; This function uses a non-reentrant model
  8166 ;;
  8167                           
  8168                           	psect	text27
  8169  0039CC                     __ptext27:
  8170                           	opt callstack 0
  8171  0039CC                     ___flmul:
  8172                           	opt callstack 25
  8173                           
  8174                           ; BSR set to: 0
  8175                           ;incstack = 0
  8176  0039CC  503B               	movf	(___flmul@b+3)^0,w,c
  8177  0039CE  0B80               	andlw	128
  8178  0039D0  6E44               	movwf	___flmul@sign^0,c
  8179  0039D2  503B               	movf	(___flmul@b+3)^0,w,c
  8180  0039D4  243B               	addwf	(___flmul@b+3)^0,w,c
  8181  0039D6  6E4A               	movwf	___flmul@bexp^0,c
  8182  0039D8  BE3A               	btfsc	(___flmul@b+2)^0,7,c
  8183  0039DA  804A               	bsf	___flmul@bexp^0,0,c
  8184  0039DC  504A               	movf	___flmul@bexp^0,w,c
  8185  0039DE  B4D8               	btfsc	status,2,c
  8186  0039E0  D00D               	goto	l3754
  8187  0039E2  284A               	incf	___flmul@bexp^0,w,c
  8188  0039E4  A4D8               	btfss	status,2,c
  8189  0039E6  D008               	goto	l3752
  8190  0039E8  0E00               	movlw	0
  8191  0039EA  6E38               	movwf	___flmul@b^0,c
  8192  0039EC  0E00               	movlw	0
  8193  0039EE  6E39               	movwf	(___flmul@b+1)^0,c
  8194  0039F0  0E00               	movlw	0
  8195  0039F2  6E3A               	movwf	(___flmul@b+2)^0,c
  8196  0039F4  0E00               	movlw	0
  8197  0039F6  6E3B               	movwf	(___flmul@b+3)^0,c
  8198  0039F8                     l3752:
  8199  0039F8  8E3A               	bsf	(___flmul@b+2)^0,7,c
  8200  0039FA  D008               	goto	l3756
  8201  0039FC                     l3754:
  8202  0039FC  0E00               	movlw	0
  8203  0039FE  6E38               	movwf	___flmul@b^0,c
  8204  003A00  0E00               	movlw	0
  8205  003A02  6E39               	movwf	(___flmul@b+1)^0,c
  8206  003A04  0E00               	movlw	0
  8207  003A06  6E3A               	movwf	(___flmul@b+2)^0,c
  8208  003A08  0E00               	movlw	0
  8209  003A0A  6E3B               	movwf	(___flmul@b+3)^0,c
  8210  003A0C                     l3756:
  8211  003A0C  503F               	movf	(___flmul@a+3)^0,w,c
  8212  003A0E  0B80               	andlw	128
  8213  003A10  1A44               	xorwf	___flmul@sign^0,f,c
  8214  003A12  503F               	movf	(___flmul@a+3)^0,w,c
  8215  003A14  243F               	addwf	(___flmul@a+3)^0,w,c
  8216  003A16  6E45               	movwf	___flmul@aexp^0,c
  8217  003A18  BE3E               	btfsc	(___flmul@a+2)^0,7,c
  8218  003A1A  8045               	bsf	___flmul@aexp^0,0,c
  8219  003A1C  5045               	movf	___flmul@aexp^0,w,c
  8220  003A1E  B4D8               	btfsc	status,2,c
  8221  003A20  D00D               	goto	l3772
  8222  003A22  2845               	incf	___flmul@aexp^0,w,c
  8223  003A24  A4D8               	btfss	status,2,c
  8224  003A26  D008               	goto	l3770
  8225  003A28  0E00               	movlw	0
  8226  003A2A  6E3C               	movwf	___flmul@a^0,c
  8227  003A2C  0E00               	movlw	0
  8228  003A2E  6E3D               	movwf	(___flmul@a+1)^0,c
  8229  003A30  0E00               	movlw	0
  8230  003A32  6E3E               	movwf	(___flmul@a+2)^0,c
  8231  003A34  0E00               	movlw	0
  8232  003A36  6E3F               	movwf	(___flmul@a+3)^0,c
  8233  003A38                     l3770:
  8234  003A38  8E3E               	bsf	(___flmul@a+2)^0,7,c
  8235  003A3A  D008               	goto	l1272
  8236  003A3C                     l3772:
  8237  003A3C  0E00               	movlw	0
  8238  003A3E  6E3C               	movwf	___flmul@a^0,c
  8239  003A40  0E00               	movlw	0
  8240  003A42  6E3D               	movwf	(___flmul@a+1)^0,c
  8241  003A44  0E00               	movlw	0
  8242  003A46  6E3E               	movwf	(___flmul@a+2)^0,c
  8243  003A48  0E00               	movlw	0
  8244  003A4A  6E3F               	movwf	(___flmul@a+3)^0,c
  8245  003A4C                     l1272:
  8246  003A4C  5045               	movf	___flmul@aexp^0,w,c
  8247  003A4E  B4D8               	btfsc	status,2,c
  8248  003A50  D003               	goto	u4160
  8249  003A52  504A               	movf	___flmul@bexp^0,w,c
  8250  003A54  A4D8               	btfss	status,2,c
  8251  003A56  D009               	goto	l3780
  8252  003A58                     u4160:
  8253  003A58  0E00               	movlw	0
  8254  003A5A  6E38               	movwf	?___flmul^0,c
  8255  003A5C  0E00               	movlw	0
  8256  003A5E  6E39               	movwf	(?___flmul+1)^0,c
  8257  003A60  0E00               	movlw	0
  8258  003A62  6E3A               	movwf	(?___flmul+2)^0,c
  8259  003A64  0E00               	movlw	0
  8260  003A66  6E3B               	movwf	(?___flmul+3)^0,c
  8261  003A68  0012               	return	
  8262  003A6A                     l3780:
  8263  003A6A  503E               	movf	(___flmul@a+2)^0,w,c
  8264  003A6C  0238               	mulwf	___flmul@b^0,c
  8265  003A6E  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8266  003A74  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8267  003A7A  504F               	movf	___flmul@temp^0,w,c
  8268  003A7C  6E46               	movwf	___flmul@grs^0,c
  8269  003A7E  6A47               	clrf	(___flmul@grs+1)^0,c
  8270  003A80  6A48               	clrf	(___flmul@grs+2)^0,c
  8271  003A82  6A49               	clrf	(___flmul@grs+3)^0,c
  8272  003A84  5050               	movf	(___flmul@temp+1)^0,w,c
  8273  003A86  6E4B               	movwf	___flmul@prod^0,c
  8274  003A88  6A4C               	clrf	(___flmul@prod+1)^0,c
  8275  003A8A  6A4D               	clrf	(___flmul@prod+2)^0,c
  8276  003A8C  6A4E               	clrf	(___flmul@prod+3)^0,c
  8277  003A8E  503D               	movf	(___flmul@a+1)^0,w,c
  8278  003A90  0239               	mulwf	(___flmul@b+1)^0,c
  8279  003A92  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8280  003A98  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8281  003A9E  504F               	movf	___flmul@temp^0,w,c
  8282  003AA0  2646               	addwf	___flmul@grs^0,f,c
  8283  003AA2  0E00               	movlw	0
  8284  003AA4  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8285  003AA6  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8286  003AA8  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8287  003AAA  5050               	movf	(___flmul@temp+1)^0,w,c
  8288  003AAC  264B               	addwf	___flmul@prod^0,f,c
  8289  003AAE  0E00               	movlw	0
  8290  003AB0  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8291  003AB2  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8292  003AB4  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8293  003AB6  503C               	movf	___flmul@a^0,w,c
  8294  003AB8  023A               	mulwf	(___flmul@b+2)^0,c
  8295  003ABA  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8296  003AC0  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8297  003AC6  504F               	movf	___flmul@temp^0,w,c
  8298  003AC8  2646               	addwf	___flmul@grs^0,f,c
  8299  003ACA  0E00               	movlw	0
  8300  003ACC  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8301  003ACE  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8302  003AD0  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8303  003AD2  5050               	movf	(___flmul@temp+1)^0,w,c
  8304  003AD4  264B               	addwf	___flmul@prod^0,f,c
  8305  003AD6  0E00               	movlw	0
  8306  003AD8  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8307  003ADA  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8308  003ADC  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8309  003ADE  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8310  003AE4  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8311  003AEA  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8312  003AF0  6A46               	clrf	___flmul@grs^0,c
  8313  003AF2  503C               	movf	___flmul@a^0,w,c
  8314  003AF4  0239               	mulwf	(___flmul@b+1)^0,c
  8315  003AF6  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8316  003AFC  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8317  003B02  504F               	movf	___flmul@temp^0,w,c
  8318  003B04  2646               	addwf	___flmul@grs^0,f,c
  8319  003B06  5050               	movf	(___flmul@temp+1)^0,w,c
  8320  003B08  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8321  003B0A  0E00               	movlw	0
  8322  003B0C  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8323  003B0E  0E00               	movlw	0
  8324  003B10  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8325  003B12  503D               	movf	(___flmul@a+1)^0,w,c
  8326  003B14  0238               	mulwf	___flmul@b^0,c
  8327  003B16  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8328  003B1C  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8329  003B22  504F               	movf	___flmul@temp^0,w,c
  8330  003B24  2646               	addwf	___flmul@grs^0,f,c
  8331  003B26  5050               	movf	(___flmul@temp+1)^0,w,c
  8332  003B28  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8333  003B2A  0E00               	movlw	0
  8334  003B2C  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8335  003B2E  0E00               	movlw	0
  8336  003B30  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8337  003B32  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8338  003B38  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8339  003B3E  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8340  003B44  6A46               	clrf	___flmul@grs^0,c
  8341  003B46  503C               	movf	___flmul@a^0,w,c
  8342  003B48  0238               	mulwf	___flmul@b^0,c
  8343  003B4A  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8344  003B50  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8345  003B56  504F               	movf	___flmul@temp^0,w,c
  8346  003B58  2646               	addwf	___flmul@grs^0,f,c
  8347  003B5A  5050               	movf	(___flmul@temp+1)^0,w,c
  8348  003B5C  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8349  003B5E  0E00               	movlw	0
  8350  003B60  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8351  003B62  0E00               	movlw	0
  8352  003B64  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8353  003B66  503E               	movf	(___flmul@a+2)^0,w,c
  8354  003B68  0239               	mulwf	(___flmul@b+1)^0,c
  8355  003B6A  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8356  003B70  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8357  003B76  504F               	movf	___flmul@temp^0,w,c
  8358  003B78  264B               	addwf	___flmul@prod^0,f,c
  8359  003B7A  5050               	movf	(___flmul@temp+1)^0,w,c
  8360  003B7C  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8361  003B7E  0E00               	movlw	0
  8362  003B80  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8363  003B82  0E00               	movlw	0
  8364  003B84  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8365  003B86  503D               	movf	(___flmul@a+1)^0,w,c
  8366  003B88  023A               	mulwf	(___flmul@b+2)^0,c
  8367  003B8A  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8368  003B90  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8369  003B96  504F               	movf	___flmul@temp^0,w,c
  8370  003B98  264B               	addwf	___flmul@prod^0,f,c
  8371  003B9A  5050               	movf	(___flmul@temp+1)^0,w,c
  8372  003B9C  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8373  003B9E  0E00               	movlw	0
  8374  003BA0  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8375  003BA2  0E00               	movlw	0
  8376  003BA4  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8377  003BA6  503E               	movf	(___flmul@a+2)^0,w,c
  8378  003BA8  023A               	mulwf	(___flmul@b+2)^0,c
  8379  003BAA  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8380  003BB0  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8381  003BB6  504F               	movf	___flmul@temp^0,w,c
  8382  003BB8  6E40               	movwf	??___flmul^0,c
  8383  003BBA  5050               	movf	(___flmul@temp+1)^0,w,c
  8384  003BBC  6E41               	movwf	(??___flmul+1)^0,c
  8385  003BBE  6A42               	clrf	(??___flmul+2)^0,c
  8386  003BC0  6A43               	clrf	(??___flmul+3)^0,c
  8387  003BC2  0060  F108  F043   	movff	??___flmul+2,??___flmul+3
  8388  003BC8  0060  F104  F042   	movff	??___flmul+1,??___flmul+2
  8389  003BCE  0060  F100  F041   	movff	??___flmul,??___flmul+1
  8390  003BD4  6A40               	clrf	??___flmul^0,c
  8391  003BD6  5040               	movf	??___flmul^0,w,c
  8392  003BD8  264B               	addwf	___flmul@prod^0,f,c
  8393  003BDA  5041               	movf	(??___flmul+1)^0,w,c
  8394  003BDC  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8395  003BDE  5042               	movf	(??___flmul+2)^0,w,c
  8396  003BE0  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8397  003BE2  5043               	movf	(??___flmul+3)^0,w,c
  8398  003BE4  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8399  003BE6  5049               	movf	(___flmul@grs+3)^0,w,c
  8400  003BE8  264B               	addwf	___flmul@prod^0,f,c
  8401  003BEA  0E00               	movlw	0
  8402  003BEC  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8403  003BEE  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8404  003BF0  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8405  003BF2  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8406  003BF8  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8407  003BFE  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8408  003C04  6A46               	clrf	___flmul@grs^0,c
  8409  003C06  5045               	movf	___flmul@aexp^0,w,c
  8410  003C08  0060  F128  F040   	movff	___flmul@bexp,??___flmul
  8411  003C0E  6A41               	clrf	(??___flmul+1)^0,c
  8412  003C10  2640               	addwf	??___flmul^0,f,c
  8413  003C12  0E00               	movlw	0
  8414  003C14  2241               	addwfc	(??___flmul+1)^0,f,c
  8415  003C16  0E82               	movlw	130
  8416  003C18  2440               	addwf	??___flmul^0,w,c
  8417  003C1A  6E4F               	movwf	___flmul@temp^0,c
  8418  003C1C  0EFF               	movlw	255
  8419  003C1E  2041               	addwfc	(??___flmul+1)^0,w,c
  8420  003C20  6E50               	movwf	(___flmul@temp+1)^0,c
  8421  003C22  D00F               	goto	l3828
  8422  003C24                     l3822:
  8423  003C24  90D8               	bcf	status,0,c
  8424  003C26  364B               	rlcf	___flmul@prod^0,f,c
  8425  003C28  364C               	rlcf	(___flmul@prod+1)^0,f,c
  8426  003C2A  364D               	rlcf	(___flmul@prod+2)^0,f,c
  8427  003C2C  364E               	rlcf	(___flmul@prod+3)^0,f,c
  8428  003C2E  BE49               	btfsc	(___flmul@grs+3)^0,7,c
  8429  003C30  804B               	bsf	___flmul@prod^0,0,c
  8430  003C32  90D8               	bcf	status,0,c
  8431  003C34  3646               	rlcf	___flmul@grs^0,f,c
  8432  003C36  3647               	rlcf	(___flmul@grs+1)^0,f,c
  8433  003C38  3648               	rlcf	(___flmul@grs+2)^0,f,c
  8434  003C3A  3649               	rlcf	(___flmul@grs+3)^0,f,c
  8435  003C3C  064F               	decf	___flmul@temp^0,f,c
  8436  003C3E  A0D8               	btfss	status,0,c
  8437  003C40  0650               	decf	(___flmul@temp+1)^0,f,c
  8438  003C42                     l3828:
  8439  003C42  AE4D               	btfss	(___flmul@prod+2)^0,7,c
  8440  003C44  D7EF               	goto	l3822
  8441  003C46  0E00               	movlw	0
  8442  003C48  6E45               	movwf	___flmul@aexp^0,c
  8443  003C4A  AE49               	btfss	(___flmul@grs+3)^0,7,c
  8444  003C4C  D017               	goto	l1281
  8445  003C4E  0EFF               	movlw	255
  8446  003C50  1446               	andwf	___flmul@grs^0,w,c
  8447  003C52  6E40               	movwf	??___flmul^0,c
  8448  003C54  0EFF               	movlw	255
  8449  003C56  1447               	andwf	(___flmul@grs+1)^0,w,c
  8450  003C58  6E41               	movwf	(??___flmul+1)^0,c
  8451  003C5A  0EFF               	movlw	255
  8452  003C5C  1448               	andwf	(___flmul@grs+2)^0,w,c
  8453  003C5E  6E42               	movwf	(??___flmul+2)^0,c
  8454  003C60  0E7F               	movlw	127
  8455  003C62  1449               	andwf	(___flmul@grs+3)^0,w,c
  8456  003C64  6E43               	movwf	(??___flmul+3)^0,c
  8457  003C66  5040               	movf	??___flmul^0,w,c
  8458  003C68  1041               	iorwf	(??___flmul+1)^0,w,c
  8459  003C6A  1042               	iorwf	(??___flmul+2)^0,w,c
  8460  003C6C  1043               	iorwf	(??___flmul+3)^0,w,c
  8461  003C6E  B4D8               	btfsc	status,2,c
  8462  003C70  D003               	goto	l1282
  8463  003C72                     u4200:
  8464  003C72  0E01               	movlw	1
  8465  003C74  6E45               	movwf	___flmul@aexp^0,c
  8466  003C76  D002               	goto	l1281
  8467  003C78                     l1282:
  8468  003C78  B04B               	btfsc	___flmul@prod^0,0,c
  8469  003C7A  D7FB               	goto	u4200
  8470  003C7C                     l1281:
  8471  003C7C  5045               	movf	___flmul@aexp^0,w,c
  8472  003C7E  B4D8               	btfsc	status,2,c
  8473  003C80  D027               	goto	l3848
  8474  003C82  0E01               	movlw	1
  8475  003C84  264B               	addwf	___flmul@prod^0,f,c
  8476  003C86  0E00               	movlw	0
  8477  003C88  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8478  003C8A  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8479  003C8C  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8480  003C8E  A04E               	btfss	(___flmul@prod+3)^0,0,c
  8481  003C90  D01F               	goto	l3848
  8482  003C92  0060  F12C  F040   	movff	___flmul@prod,??___flmul
  8483  003C98  0060  F130  F041   	movff	___flmul@prod+1,??___flmul+1
  8484  003C9E  0060  F134  F042   	movff	___flmul@prod+2,??___flmul+2
  8485  003CA4  0060  F138  F043   	movff	___flmul@prod+3,??___flmul+3
  8486  003CAA  3443               	rlcf	(??___flmul+3)^0,w,c
  8487  003CAC  3243               	rrcf	(??___flmul+3)^0,f,c
  8488  003CAE  3242               	rrcf	(??___flmul+2)^0,f,c
  8489  003CB0  3241               	rrcf	(??___flmul+1)^0,f,c
  8490  003CB2  3240               	rrcf	??___flmul^0,f,c
  8491  003CB4  0060  F100  F04B   	movff	??___flmul,___flmul@prod
  8492  003CBA  0060  F104  F04C   	movff	??___flmul+1,___flmul@prod+1
  8493  003CC0  0060  F108  F04D   	movff	??___flmul+2,___flmul@prod+2
  8494  003CC6  0060  F10C  F04E   	movff	??___flmul+3,___flmul@prod+3
  8495  003CCC  4A4F               	infsnz	___flmul@temp^0,f,c
  8496  003CCE  2A50               	incf	(___flmul@temp+1)^0,f,c
  8497  003CD0                     l3848:
  8498  003CD0  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  8499  003CD2  D00D               	goto	l3852
  8500  003CD4  5050               	movf	(___flmul@temp+1)^0,w,c
  8501  003CD6  E103               	bnz	u4240
  8502  003CD8  284F               	incf	___flmul@temp^0,w,c
  8503  003CDA  A0D8               	btfss	status,0,c
  8504  003CDC  D008               	goto	l3852
  8505  003CDE                     u4240:
  8506  003CDE  0E00               	movlw	0
  8507  003CE0  6E4B               	movwf	___flmul@prod^0,c
  8508  003CE2  0E00               	movlw	0
  8509  003CE4  6E4C               	movwf	(___flmul@prod+1)^0,c
  8510  003CE6  0E80               	movlw	128
  8511  003CE8  6E4D               	movwf	(___flmul@prod+2)^0,c
  8512  003CEA  0E7F               	movlw	127
  8513  003CEC  D021               	goto	L11
  8514  003CEE                     l3852:
  8515  003CEE  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  8516  003CF0  D005               	goto	u4250
  8517  003CF2  5050               	movf	(___flmul@temp+1)^0,w,c
  8518  003CF4  E10E               	bnz	l1289
  8519  003CF6  044F               	decf	___flmul@temp^0,w,c
  8520  003CF8  B0D8               	btfsc	status,0,c
  8521  003CFA  D00B               	goto	l1289
  8522  003CFC                     u4250:
  8523  003CFC  0E00               	movlw	0
  8524  003CFE  6E4B               	movwf	___flmul@prod^0,c
  8525  003D00  0E00               	movlw	0
  8526  003D02  6E4C               	movwf	(___flmul@prod+1)^0,c
  8527  003D04  0E00               	movlw	0
  8528  003D06  6E4D               	movwf	(___flmul@prod+2)^0,c
  8529  003D08  0E00               	movlw	0
  8530  003D0A  6E4E               	movwf	(___flmul@prod+3)^0,c
  8531  003D0C  0E00               	movlw	0
  8532  003D0E  6E44               	movwf	___flmul@sign^0,c
  8533  003D10  D010               	goto	l3864
  8534  003D12                     l1289:
  8535  003D12  0060  F13C  F04A   	movff	___flmul@temp,___flmul@bexp
  8536  003D18  0EFF               	movlw	255
  8537  003D1A  164B               	andwf	___flmul@prod^0,f,c
  8538  003D1C  0EFF               	movlw	255
  8539  003D1E  164C               	andwf	(___flmul@prod+1)^0,f,c
  8540  003D20  0E7F               	movlw	127
  8541  003D22  164D               	andwf	(___flmul@prod+2)^0,f,c
  8542  003D24  0E00               	movlw	0
  8543  003D26  164E               	andwf	(___flmul@prod+3)^0,f,c
  8544  003D28  B04A               	btfsc	___flmul@bexp^0,0,c
  8545  003D2A  8E4D               	bsf	(___flmul@prod+2)^0,7,c
  8546  003D2C  90D8               	bcf	status,0,c
  8547  003D2E  304A               	rrcf	___flmul@bexp^0,w,c
  8548  003D30                     L11:
  8549  003D30  6E4E               	movwf	(___flmul@prod+3)^0,c
  8550  003D32                     l3864:
  8551  003D32  5044               	movf	___flmul@sign^0,w,c
  8552  003D34  124E               	iorwf	(___flmul@prod+3)^0,f,c
  8553  003D36  0060  F12C  F038   	movff	___flmul@prod,?___flmul
  8554  003D3C  0060  F130  F039   	movff	___flmul@prod+1,?___flmul+1
  8555  003D42  0060  F134  F03A   	movff	___flmul@prod+2,?___flmul+2
  8556  003D48  0060  F138  F03B   	movff	___flmul@prod+3,?___flmul+3
  8557  003D4E  0012               	return		;funcret
  8558  003D50                     __end_of___flmul:
  8559                           	opt callstack 0
  8560                           
  8561 ;; *************** function ___flge *****************
  8562 ;; Defined at:
  8563 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  8564 ;; Parameters:    Size  Location     Type
  8565 ;;  ff1             4   80[COMRAM] unsigned char 
  8566 ;;  ff2             4   84[COMRAM] unsigned char 
  8567 ;; Auto vars:     Size  Location     Type
  8568 ;;		None
  8569 ;; Return value:  Size  Location     Type
  8570 ;;		None               void
  8571 ;; Registers used:
  8572 ;;		wreg, status,2, status,0
  8573 ;; Tracked objects:
  8574 ;;		On entry : 0/4
  8575 ;;		On exit  : 0/0
  8576 ;;		Unchanged: 0/0
  8577 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8578 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8580 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8581 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8582 ;;Total ram usage:       12 bytes
  8583 ;; Hardware stack levels used:    1
  8584 ;; This function calls:
  8585 ;;		Nothing
  8586 ;; This function is called by:
  8587 ;;		_main_loop
  8588 ;;		_efgtoa
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592                           	psect	text28
  8593  004E94                     __ptext28:
  8594                           	opt callstack 0
  8595  004E94                     ___flge:
  8596                           	opt callstack 25
  8597                           
  8598                           ;incstack = 0
  8599  004E94  0E00               	movlw	0
  8600  004E96  1451               	andwf	___flge@ff1^0,w,c
  8601  004E98  6E59               	movwf	??___flge^0,c
  8602  004E9A  0E00               	movlw	0
  8603  004E9C  1452               	andwf	(___flge@ff1+1)^0,w,c
  8604  004E9E  6E5A               	movwf	(??___flge+1)^0,c
  8605  004EA0  0E80               	movlw	128
  8606  004EA2  1453               	andwf	(___flge@ff1+2)^0,w,c
  8607  004EA4  6E5B               	movwf	(??___flge+2)^0,c
  8608  004EA6  0E7F               	movlw	127
  8609  004EA8  1454               	andwf	(___flge@ff1+3)^0,w,c
  8610  004EAA  6E5C               	movwf	(??___flge+3)^0,c
  8611  004EAC  5059               	movf	??___flge^0,w,c
  8612  004EAE  105A               	iorwf	(??___flge+1)^0,w,c
  8613  004EB0  105B               	iorwf	(??___flge+2)^0,w,c
  8614  004EB2  105C               	iorwf	(??___flge+3)^0,w,c
  8615  004EB4  A4D8               	btfss	status,2,c
  8616  004EB6  D008               	goto	l3976
  8617  004EB8  0E00               	movlw	0
  8618  004EBA  6E51               	movwf	___flge@ff1^0,c
  8619  004EBC  0E00               	movlw	0
  8620  004EBE  6E52               	movwf	(___flge@ff1+1)^0,c
  8621  004EC0  0E00               	movlw	0
  8622  004EC2  6E53               	movwf	(___flge@ff1+2)^0,c
  8623  004EC4  0E00               	movlw	0
  8624  004EC6  6E54               	movwf	(___flge@ff1+3)^0,c
  8625  004EC8                     l3976:
  8626  004EC8  0E00               	movlw	0
  8627  004ECA  1455               	andwf	___flge@ff2^0,w,c
  8628  004ECC  6E59               	movwf	??___flge^0,c
  8629  004ECE  0E00               	movlw	0
  8630  004ED0  1456               	andwf	(___flge@ff2+1)^0,w,c
  8631  004ED2  6E5A               	movwf	(??___flge+1)^0,c
  8632  004ED4  0E80               	movlw	128
  8633  004ED6  1457               	andwf	(___flge@ff2+2)^0,w,c
  8634  004ED8  6E5B               	movwf	(??___flge+2)^0,c
  8635  004EDA  0E7F               	movlw	127
  8636  004EDC  1458               	andwf	(___flge@ff2+3)^0,w,c
  8637  004EDE  6E5C               	movwf	(??___flge+3)^0,c
  8638  004EE0  5059               	movf	??___flge^0,w,c
  8639  004EE2  105A               	iorwf	(??___flge+1)^0,w,c
  8640  004EE4  105B               	iorwf	(??___flge+2)^0,w,c
  8641  004EE6  105C               	iorwf	(??___flge+3)^0,w,c
  8642  004EE8  A4D8               	btfss	status,2,c
  8643  004EEA  D008               	goto	l3980
  8644  004EEC  0E00               	movlw	0
  8645  004EEE  6E55               	movwf	___flge@ff2^0,c
  8646  004EF0  0E00               	movlw	0
  8647  004EF2  6E56               	movwf	(___flge@ff2+1)^0,c
  8648  004EF4  0E00               	movlw	0
  8649  004EF6  6E57               	movwf	(___flge@ff2+2)^0,c
  8650  004EF8  0E00               	movlw	0
  8651  004EFA  6E58               	movwf	(___flge@ff2+3)^0,c
  8652  004EFC                     l3980:
  8653  004EFC  AE54               	btfss	(___flge@ff1+3)^0,7,c
  8654  004EFE  D009               	goto	l3984
  8655  004F00  6C51               	negf	___flge@ff1^0,c
  8656  004F02  1E52               	comf	(___flge@ff1+1)^0,f,c
  8657  004F04  B0D8               	btfsc	status,0,c
  8658  004F06  2A52               	incf	(___flge@ff1+1)^0,f,c
  8659  004F08  1E53               	comf	(___flge@ff1+2)^0,f,c
  8660  004F0A  B0D8               	btfsc	status,0,c
  8661  004F0C  2A53               	incf	(___flge@ff1+2)^0,f,c
  8662  004F0E  0E80               	movlw	128
  8663  004F10  5654               	subfwb	(___flge@ff1+3)^0,f,c
  8664  004F12                     l3984:
  8665  004F12  AE58               	btfss	(___flge@ff2+3)^0,7,c
  8666  004F14  D009               	goto	l923
  8667  004F16  6C55               	negf	___flge@ff2^0,c
  8668  004F18  1E56               	comf	(___flge@ff2+1)^0,f,c
  8669  004F1A  B0D8               	btfsc	status,0,c
  8670  004F1C  2A56               	incf	(___flge@ff2+1)^0,f,c
  8671  004F1E  1E57               	comf	(___flge@ff2+2)^0,f,c
  8672  004F20  B0D8               	btfsc	status,0,c
  8673  004F22  2A57               	incf	(___flge@ff2+2)^0,f,c
  8674  004F24  0E80               	movlw	128
  8675  004F26  5658               	subfwb	(___flge@ff2+3)^0,f,c
  8676  004F28                     l923:
  8677  004F28  0E00               	movlw	0
  8678  004F2A  1A51               	xorwf	___flge@ff1^0,f,c
  8679  004F2C  0E00               	movlw	0
  8680  004F2E  1A52               	xorwf	(___flge@ff1+1)^0,f,c
  8681  004F30  0E00               	movlw	0
  8682  004F32  1A53               	xorwf	(___flge@ff1+2)^0,f,c
  8683  004F34  0E80               	movlw	128
  8684  004F36  1A54               	xorwf	(___flge@ff1+3)^0,f,c
  8685  004F38  0E00               	movlw	0
  8686  004F3A  1A55               	xorwf	___flge@ff2^0,f,c
  8687  004F3C  0E00               	movlw	0
  8688  004F3E  1A56               	xorwf	(___flge@ff2+1)^0,f,c
  8689  004F40  0E00               	movlw	0
  8690  004F42  1A57               	xorwf	(___flge@ff2+2)^0,f,c
  8691  004F44  0E80               	movlw	128
  8692  004F46  1A58               	xorwf	(___flge@ff2+3)^0,f,c
  8693  004F48  5055               	movf	___flge@ff2^0,w,c
  8694  004F4A  5C51               	subwf	___flge@ff1^0,w,c
  8695  004F4C  5056               	movf	(___flge@ff2+1)^0,w,c
  8696  004F4E  5852               	subwfb	(___flge@ff1+1)^0,w,c
  8697  004F50  5057               	movf	(___flge@ff2+2)^0,w,c
  8698  004F52  5853               	subwfb	(___flge@ff1+2)^0,w,c
  8699  004F54  5058               	movf	(___flge@ff2+3)^0,w,c
  8700  004F56  5854               	subwfb	(___flge@ff1+3)^0,w,c
  8701  004F58  B0D8               	btfsc	status,0,c
  8702  004F5A  D002               	goto	l3990
  8703  004F5C  90D8               	bcf	status,0,c
  8704  004F5E  0012               	return	
  8705  004F60                     l3990:
  8706  004F60  80D8               	bsf	status,0,c
  8707  004F62  0012               	return		;funcret
  8708  004F64                     __end_of___flge:
  8709                           	opt callstack 0
  8710                           
  8711 ;; *************** function ___fleq *****************
  8712 ;; Defined at:
  8713 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  ff1             4    0[COMRAM] unsigned char 
  8716 ;;  ff2             4    4[COMRAM] unsigned char 
  8717 ;; Auto vars:     Size  Location     Type
  8718 ;;		None
  8719 ;; Return value:  Size  Location     Type
  8720 ;;		None               void
  8721 ;; Registers used:
  8722 ;;		wreg, status,2, status,0
  8723 ;; Tracked objects:
  8724 ;;		On entry : 0/0
  8725 ;;		On exit  : 0/0
  8726 ;;		Unchanged: 0/0
  8727 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8731 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8732 ;;Total ram usage:       12 bytes
  8733 ;; Hardware stack levels used:    1
  8734 ;; This function calls:
  8735 ;;		Nothing
  8736 ;; This function is called by:
  8737 ;;		_efgtoa
  8738 ;; This function uses a non-reentrant model
  8739 ;;
  8740                           
  8741                           	psect	text29
  8742  0053F6                     __ptext29:
  8743                           	opt callstack 0
  8744  0053F6                     ___fleq:
  8745                           	opt callstack 25
  8746                           
  8747                           ;incstack = 0
  8748  0053F6  0E00               	movlw	0
  8749  0053F8  1401               	andwf	___fleq@ff1^0,w,c
  8750  0053FA  6E09               	movwf	??___fleq^0,c
  8751  0053FC  0E00               	movlw	0
  8752  0053FE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8753  005400  6E0A               	movwf	(??___fleq+1)^0,c
  8754  005402  0E80               	movlw	128
  8755  005404  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8756  005406  6E0B               	movwf	(??___fleq+2)^0,c
  8757  005408  0E7F               	movlw	127
  8758  00540A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8759  00540C  6E0C               	movwf	(??___fleq+3)^0,c
  8760  00540E  5009               	movf	??___fleq^0,w,c
  8761  005410  100A               	iorwf	(??___fleq+1)^0,w,c
  8762  005412  100B               	iorwf	(??___fleq+2)^0,w,c
  8763  005414  100C               	iorwf	(??___fleq+3)^0,w,c
  8764  005416  A4D8               	btfss	status,2,c
  8765  005418  D008               	goto	l3960
  8766  00541A  0E00               	movlw	0
  8767  00541C  6E01               	movwf	___fleq@ff1^0,c
  8768  00541E  0E00               	movlw	0
  8769  005420  6E02               	movwf	(___fleq@ff1+1)^0,c
  8770  005422  0E00               	movlw	0
  8771  005424  6E03               	movwf	(___fleq@ff1+2)^0,c
  8772  005426  0E00               	movlw	0
  8773  005428  6E04               	movwf	(___fleq@ff1+3)^0,c
  8774  00542A                     l3960:
  8775  00542A  0E00               	movlw	0
  8776  00542C  1405               	andwf	___fleq@ff2^0,w,c
  8777  00542E  6E09               	movwf	??___fleq^0,c
  8778  005430  0E00               	movlw	0
  8779  005432  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8780  005434  6E0A               	movwf	(??___fleq+1)^0,c
  8781  005436  0E80               	movlw	128
  8782  005438  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8783  00543A  6E0B               	movwf	(??___fleq+2)^0,c
  8784  00543C  0E7F               	movlw	127
  8785  00543E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8786  005440  6E0C               	movwf	(??___fleq+3)^0,c
  8787  005442  5009               	movf	??___fleq^0,w,c
  8788  005444  100A               	iorwf	(??___fleq+1)^0,w,c
  8789  005446  100B               	iorwf	(??___fleq+2)^0,w,c
  8790  005448  100C               	iorwf	(??___fleq+3)^0,w,c
  8791  00544A  A4D8               	btfss	status,2,c
  8792  00544C  D008               	goto	l3964
  8793  00544E  0E00               	movlw	0
  8794  005450  6E05               	movwf	___fleq@ff2^0,c
  8795  005452  0E00               	movlw	0
  8796  005454  6E06               	movwf	(___fleq@ff2+1)^0,c
  8797  005456  0E00               	movlw	0
  8798  005458  6E07               	movwf	(___fleq@ff2+2)^0,c
  8799  00545A  0E00               	movlw	0
  8800  00545C  6E08               	movwf	(___fleq@ff2+3)^0,c
  8801  00545E                     l3964:
  8802  00545E  5005               	movf	___fleq@ff2^0,w,c
  8803  005460  1801               	xorwf	___fleq@ff1^0,w,c
  8804  005462  E10A               	bnz	u4410
  8805  005464  5006               	movf	(___fleq@ff2+1)^0,w,c
  8806  005466  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8807  005468  E107               	bnz	u4410
  8808  00546A  5007               	movf	(___fleq@ff2+2)^0,w,c
  8809  00546C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8810  00546E  E104               	bnz	u4410
  8811  005470  5008               	movf	(___fleq@ff2+3)^0,w,c
  8812  005472  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8813  005474  B4D8               	btfsc	status,2,c
  8814  005476  D002               	goto	l3968
  8815  005478                     u4410:
  8816  005478  90D8               	bcf	status,0,c
  8817  00547A  0012               	return	
  8818  00547C                     l3968:
  8819  00547C  80D8               	bsf	status,0,c
  8820  00547E  0012               	return		;funcret
  8821  005480                     __end_of___fleq:
  8822                           	opt callstack 0
  8823                           
  8824 ;; *************** function ___fldiv *****************
  8825 ;; Defined at:
  8826 ;;		line 11 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  8827 ;; Parameters:    Size  Location     Type
  8828 ;;  b               4   30[COMRAM] unsigned char 
  8829 ;;  a               4   34[COMRAM] unsigned char 
  8830 ;; Auto vars:     Size  Location     Type
  8831 ;;  grs             4   49[COMRAM] unsigned long 
  8832 ;;  rem             4   42[COMRAM] unsigned long 
  8833 ;;  new_exp         2   47[COMRAM] short 
  8834 ;;  aexp            1   54[COMRAM] unsigned char 
  8835 ;;  bexp            1   53[COMRAM] unsigned char 
  8836 ;;  sign            1   46[COMRAM] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  4   30[COMRAM] unsigned char 
  8839 ;; Registers used:
  8840 ;;		wreg, status,2, status,0
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/4
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8846 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8847 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8849 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8850 ;;Total ram usage:       25 bytes
  8851 ;; Hardware stack levels used:    1
  8852 ;; This function calls:
  8853 ;;		Nothing
  8854 ;; This function is called by:
  8855 ;;		_main_loop
  8856 ;;		_efgtoa
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860                           	psect	text30
  8861  00436A                     __ptext30:
  8862                           	opt callstack 0
  8863  00436A                     ___fldiv:
  8864                           	opt callstack 25
  8865                           
  8866                           ;incstack = 0
  8867  00436A  5022               	movf	(___fldiv@b+3)^0,w,c
  8868  00436C  0B80               	andlw	128
  8869  00436E  6E2F               	movwf	___fldiv@sign^0,c
  8870  004370  5022               	movf	(___fldiv@b+3)^0,w,c
  8871  004372  2422               	addwf	(___fldiv@b+3)^0,w,c
  8872  004374  6E36               	movwf	___fldiv@bexp^0,c
  8873  004376  BE21               	btfsc	(___fldiv@b+2)^0,7,c
  8874  004378  8036               	bsf	___fldiv@bexp^0,0,c
  8875  00437A  5036               	movf	___fldiv@bexp^0,w,c
  8876  00437C  B4D8               	btfsc	status,2,c
  8877  00437E  D00D               	goto	l3618
  8878  004380  2836               	incf	___fldiv@bexp^0,w,c
  8879  004382  A4D8               	btfss	status,2,c
  8880  004384  D008               	goto	l3614
  8881  004386  0E00               	movlw	0
  8882  004388  6E1F               	movwf	___fldiv@b^0,c
  8883  00438A  0E00               	movlw	0
  8884  00438C  6E20               	movwf	(___fldiv@b+1)^0,c
  8885  00438E  0E00               	movlw	0
  8886  004390  6E21               	movwf	(___fldiv@b+2)^0,c
  8887  004392  0E00               	movlw	0
  8888  004394  6E22               	movwf	(___fldiv@b+3)^0,c
  8889  004396                     l3614:
  8890  004396  8E21               	bsf	(___fldiv@b+2)^0,7,c
  8891  004398  D006               	goto	L12
  8892  00439A                     l3618:
  8893  00439A  0E00               	movlw	0
  8894  00439C  6E1F               	movwf	___fldiv@b^0,c
  8895  00439E  0E00               	movlw	0
  8896  0043A0  6E20               	movwf	(___fldiv@b+1)^0,c
  8897  0043A2  0E00               	movlw	0
  8898  0043A4  6E21               	movwf	(___fldiv@b+2)^0,c
  8899  0043A6                     L12:
  8900  0043A6  0E00               	movlw	0
  8901  0043A8  6E22               	movwf	(___fldiv@b+3)^0,c
  8902  0043AA  5026               	movf	(___fldiv@a+3)^0,w,c
  8903  0043AC  0B80               	andlw	128
  8904  0043AE  1A2F               	xorwf	___fldiv@sign^0,f,c
  8905  0043B0  5026               	movf	(___fldiv@a+3)^0,w,c
  8906  0043B2  2426               	addwf	(___fldiv@a+3)^0,w,c
  8907  0043B4  6E37               	movwf	___fldiv@aexp^0,c
  8908  0043B6  BE25               	btfsc	(___fldiv@a+2)^0,7,c
  8909  0043B8  8037               	bsf	___fldiv@aexp^0,0,c
  8910  0043BA  5037               	movf	___fldiv@aexp^0,w,c
  8911  0043BC  B4D8               	btfsc	status,2,c
  8912  0043BE  D00D               	goto	l3638
  8913  0043C0  2837               	incf	___fldiv@aexp^0,w,c
  8914  0043C2  A4D8               	btfss	status,2,c
  8915  0043C4  D008               	goto	l3634
  8916  0043C6  0E00               	movlw	0
  8917  0043C8  6E23               	movwf	___fldiv@a^0,c
  8918  0043CA  0E00               	movlw	0
  8919  0043CC  6E24               	movwf	(___fldiv@a+1)^0,c
  8920  0043CE  0E00               	movlw	0
  8921  0043D0  6E25               	movwf	(___fldiv@a+2)^0,c
  8922  0043D2  0E00               	movlw	0
  8923  0043D4  6E26               	movwf	(___fldiv@a+3)^0,c
  8924  0043D6                     l3634:
  8925  0043D6  8E25               	bsf	(___fldiv@a+2)^0,7,c
  8926  0043D8  D006               	goto	L13
  8927  0043DA                     l3638:
  8928  0043DA  0E00               	movlw	0
  8929  0043DC  6E23               	movwf	___fldiv@a^0,c
  8930  0043DE  0E00               	movlw	0
  8931  0043E0  6E24               	movwf	(___fldiv@a+1)^0,c
  8932  0043E2  0E00               	movlw	0
  8933  0043E4  6E25               	movwf	(___fldiv@a+2)^0,c
  8934  0043E6                     L13:
  8935  0043E6  0E00               	movlw	0
  8936  0043E8  6E26               	movwf	(___fldiv@a+3)^0,c
  8937  0043EA  5023               	movf	___fldiv@a^0,w,c
  8938  0043EC  1024               	iorwf	(___fldiv@a+1)^0,w,c
  8939  0043EE  1025               	iorwf	(___fldiv@a+2)^0,w,c
  8940  0043F0  1026               	iorwf	(___fldiv@a+3)^0,w,c
  8941  0043F2  A4D8               	btfss	status,2,c
  8942  0043F4  D01B               	goto	l3652
  8943  0043F6  0E00               	movlw	0
  8944  0043F8  6E1F               	movwf	___fldiv@b^0,c
  8945  0043FA  0E00               	movlw	0
  8946  0043FC  6E20               	movwf	(___fldiv@b+1)^0,c
  8947  0043FE  0E00               	movlw	0
  8948  004400  6E21               	movwf	(___fldiv@b+2)^0,c
  8949  004402  0E00               	movlw	0
  8950  004404  6E22               	movwf	(___fldiv@b+3)^0,c
  8951  004406  0E80               	movlw	128
  8952  004408  1221               	iorwf	(___fldiv@b+2)^0,f,c
  8953  00440A  0E7F               	movlw	127
  8954  00440C  1222               	iorwf	(___fldiv@b+3)^0,f,c
  8955  00440E                     l3646:
  8956  00440E  502F               	movf	___fldiv@sign^0,w,c
  8957  004410  1222               	iorwf	(___fldiv@b+3)^0,f,c
  8958  004412  0060  F07C  F01F   	movff	___fldiv@b,?___fldiv
  8959  004418  0060  F080  F020   	movff	___fldiv@b+1,?___fldiv+1
  8960  00441E  0060  F084  F021   	movff	___fldiv@b+2,?___fldiv+2
  8961  004424  0060  F088  F022   	movff	___fldiv@b+3,?___fldiv+3
  8962  00442A  0012               	return	
  8963  00442C                     l3652:
  8964  00442C  5036               	movf	___fldiv@bexp^0,w,c
  8965  00442E  A4D8               	btfss	status,2,c
  8966  004430  D009               	goto	l3660
  8967  004432  0E00               	movlw	0
  8968  004434  6E1F               	movwf	?___fldiv^0,c
  8969  004436  0E00               	movlw	0
  8970  004438  6E20               	movwf	(?___fldiv+1)^0,c
  8971  00443A  0E00               	movlw	0
  8972  00443C  6E21               	movwf	(?___fldiv+2)^0,c
  8973  00443E  0E00               	movlw	0
  8974  004440  6E22               	movwf	(?___fldiv+3)^0,c
  8975  004442  0012               	return	
  8976  004444                     l3660:
  8977  004444  5037               	movf	___fldiv@aexp^0,w,c
  8978  004446  0060  F0D8  F027   	movff	___fldiv@bexp,??___fldiv
  8979  00444C  6A28               	clrf	(??___fldiv+1)^0,c
  8980  00444E  5E27               	subwf	??___fldiv^0,f,c
  8981  004450  0E00               	movlw	0
  8982  004452  5A28               	subwfb	(??___fldiv+1)^0,f,c
  8983  004454  0E7F               	movlw	127
  8984  004456  2427               	addwf	??___fldiv^0,w,c
  8985  004458  6E30               	movwf	___fldiv@new_exp^0,c
  8986  00445A  0E00               	movlw	0
  8987  00445C  2028               	addwfc	(??___fldiv+1)^0,w,c
  8988  00445E  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  8989  004460  0060  F07C  F02B   	movff	___fldiv@b,___fldiv@rem
  8990  004466  0060  F080  F02C   	movff	___fldiv@b+1,___fldiv@rem+1
  8991  00446C  0060  F084  F02D   	movff	___fldiv@b+2,___fldiv@rem+2
  8992  004472  0060  F088  F02E   	movff	___fldiv@b+3,___fldiv@rem+3
  8993  004478  0E00               	movlw	0
  8994  00447A  6E1F               	movwf	___fldiv@b^0,c
  8995  00447C  0E00               	movlw	0
  8996  00447E  6E20               	movwf	(___fldiv@b+1)^0,c
  8997  004480  0E00               	movlw	0
  8998  004482  6E21               	movwf	(___fldiv@b+2)^0,c
  8999  004484  0E00               	movlw	0
  9000  004486  6E22               	movwf	(___fldiv@b+3)^0,c
  9001  004488  0E00               	movlw	0
  9002  00448A  6E32               	movwf	___fldiv@grs^0,c
  9003  00448C  0E00               	movlw	0
  9004  00448E  6E33               	movwf	(___fldiv@grs+1)^0,c
  9005  004490  0E00               	movlw	0
  9006  004492  6E34               	movwf	(___fldiv@grs+2)^0,c
  9007  004494  0E00               	movlw	0
  9008  004496  6E35               	movwf	(___fldiv@grs+3)^0,c
  9009  004498  0E00               	movlw	0
  9010  00449A  6E37               	movwf	___fldiv@aexp^0,c
  9011  00449C  D028               	goto	l1242
  9012  00449E                     l3670:
  9013  00449E  5037               	movf	___fldiv@aexp^0,w,c
  9014  0044A0  B4D8               	btfsc	status,2,c
  9015  0044A2  D011               	goto	l3678
  9016  0044A4  90D8               	bcf	status,0,c
  9017  0044A6  362B               	rlcf	___fldiv@rem^0,f,c
  9018  0044A8  362C               	rlcf	(___fldiv@rem+1)^0,f,c
  9019  0044AA  362D               	rlcf	(___fldiv@rem+2)^0,f,c
  9020  0044AC  362E               	rlcf	(___fldiv@rem+3)^0,f,c
  9021  0044AE  90D8               	bcf	status,0,c
  9022  0044B0  361F               	rlcf	___fldiv@b^0,f,c
  9023  0044B2  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9024  0044B4  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9025  0044B6  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9026  0044B8  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9027  0044BA  801F               	bsf	___fldiv@b^0,0,c
  9028  0044BC  90D8               	bcf	status,0,c
  9029  0044BE  3632               	rlcf	___fldiv@grs^0,f,c
  9030  0044C0  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9031  0044C2  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9032  0044C4  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9033  0044C6                     l3678:
  9034  0044C6  5023               	movf	___fldiv@a^0,w,c
  9035  0044C8  5C2B               	subwf	___fldiv@rem^0,w,c
  9036  0044CA  5024               	movf	(___fldiv@a+1)^0,w,c
  9037  0044CC  582C               	subwfb	(___fldiv@rem+1)^0,w,c
  9038  0044CE  5025               	movf	(___fldiv@a+2)^0,w,c
  9039  0044D0  582D               	subwfb	(___fldiv@rem+2)^0,w,c
  9040  0044D2  5026               	movf	(___fldiv@a+3)^0,w,c
  9041  0044D4  582E               	subwfb	(___fldiv@rem+3)^0,w,c
  9042  0044D6  A0D8               	btfss	status,0,c
  9043  0044D8  D009               	goto	l3684
  9044  0044DA  8C35               	bsf	(___fldiv@grs+3)^0,6,c
  9045  0044DC  5023               	movf	___fldiv@a^0,w,c
  9046  0044DE  5E2B               	subwf	___fldiv@rem^0,f,c
  9047  0044E0  5024               	movf	(___fldiv@a+1)^0,w,c
  9048  0044E2  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
  9049  0044E4  5025               	movf	(___fldiv@a+2)^0,w,c
  9050  0044E6  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
  9051  0044E8  5026               	movf	(___fldiv@a+3)^0,w,c
  9052  0044EA  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
  9053  0044EC                     l3684:
  9054  0044EC  2A37               	incf	___fldiv@aexp^0,f,c
  9055  0044EE                     l1242:
  9056  0044EE  0E19               	movlw	25
  9057  0044F0  6437               	cpfsgt	___fldiv@aexp^0,c
  9058  0044F2  D7D5               	goto	l3670
  9059  0044F4  502B               	movf	___fldiv@rem^0,w,c
  9060  0044F6  102C               	iorwf	(___fldiv@rem+1)^0,w,c
  9061  0044F8  102D               	iorwf	(___fldiv@rem+2)^0,w,c
  9062  0044FA  102E               	iorwf	(___fldiv@rem+3)^0,w,c
  9063  0044FC  B4D8               	btfsc	status,2,c
  9064  0044FE  D011               	goto	l3696
  9065  004500  8032               	bsf	___fldiv@grs^0,0,c
  9066  004502  D00F               	goto	l3696
  9067  004504                     l3690:
  9068  004504  90D8               	bcf	status,0,c
  9069  004506  361F               	rlcf	___fldiv@b^0,f,c
  9070  004508  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9071  00450A  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9072  00450C  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9073  00450E  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9074  004510  801F               	bsf	___fldiv@b^0,0,c
  9075  004512  90D8               	bcf	status,0,c
  9076  004514  3632               	rlcf	___fldiv@grs^0,f,c
  9077  004516  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9078  004518  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9079  00451A  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9080  00451C  0630               	decf	___fldiv@new_exp^0,f,c
  9081  00451E  A0D8               	btfss	status,0,c
  9082  004520  0631               	decf	(___fldiv@new_exp+1)^0,f,c
  9083  004522                     l3696:
  9084  004522  AE21               	btfss	(___fldiv@b+2)^0,7,c
  9085  004524  D7EF               	goto	l3690
  9086  004526  0E00               	movlw	0
  9087  004528  6E37               	movwf	___fldiv@aexp^0,c
  9088  00452A  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  9089  00452C  D017               	goto	l1253
  9090  00452E  0EFF               	movlw	255
  9091  004530  1432               	andwf	___fldiv@grs^0,w,c
  9092  004532  6E27               	movwf	??___fldiv^0,c
  9093  004534  0EFF               	movlw	255
  9094  004536  1433               	andwf	(___fldiv@grs+1)^0,w,c
  9095  004538  6E28               	movwf	(??___fldiv+1)^0,c
  9096  00453A  0EFF               	movlw	255
  9097  00453C  1434               	andwf	(___fldiv@grs+2)^0,w,c
  9098  00453E  6E29               	movwf	(??___fldiv+2)^0,c
  9099  004540  0E7F               	movlw	127
  9100  004542  1435               	andwf	(___fldiv@grs+3)^0,w,c
  9101  004544  6E2A               	movwf	(??___fldiv+3)^0,c
  9102  004546  5027               	movf	??___fldiv^0,w,c
  9103  004548  1028               	iorwf	(??___fldiv+1)^0,w,c
  9104  00454A  1029               	iorwf	(??___fldiv+2)^0,w,c
  9105  00454C  102A               	iorwf	(??___fldiv+3)^0,w,c
  9106  00454E  B4D8               	btfsc	status,2,c
  9107  004550  D003               	goto	l1254
  9108  004552                     u4020:
  9109  004552  0E01               	movlw	1
  9110  004554  6E37               	movwf	___fldiv@aexp^0,c
  9111  004556  D002               	goto	l1253
  9112  004558                     l1254:
  9113  004558  B01F               	btfsc	___fldiv@b^0,0,c
  9114  00455A  D7FB               	goto	u4020
  9115  00455C                     l1253:
  9116  00455C  5037               	movf	___fldiv@aexp^0,w,c
  9117  00455E  B4D8               	btfsc	status,2,c
  9118  004560  D027               	goto	l3716
  9119  004562  0E01               	movlw	1
  9120  004564  261F               	addwf	___fldiv@b^0,f,c
  9121  004566  0E00               	movlw	0
  9122  004568  2220               	addwfc	(___fldiv@b+1)^0,f,c
  9123  00456A  2221               	addwfc	(___fldiv@b+2)^0,f,c
  9124  00456C  2222               	addwfc	(___fldiv@b+3)^0,f,c
  9125  00456E  A022               	btfss	(___fldiv@b+3)^0,0,c
  9126  004570  D01F               	goto	l3716
  9127  004572  0060  F07C  F027   	movff	___fldiv@b,??___fldiv
  9128  004578  0060  F080  F028   	movff	___fldiv@b+1,??___fldiv+1
  9129  00457E  0060  F084  F029   	movff	___fldiv@b+2,??___fldiv+2
  9130  004584  0060  F088  F02A   	movff	___fldiv@b+3,??___fldiv+3
  9131  00458A  342A               	rlcf	(??___fldiv+3)^0,w,c
  9132  00458C  322A               	rrcf	(??___fldiv+3)^0,f,c
  9133  00458E  3229               	rrcf	(??___fldiv+2)^0,f,c
  9134  004590  3228               	rrcf	(??___fldiv+1)^0,f,c
  9135  004592  3227               	rrcf	??___fldiv^0,f,c
  9136  004594  0060  F09C  F01F   	movff	??___fldiv,___fldiv@b
  9137  00459A  0060  F0A0  F020   	movff	??___fldiv+1,___fldiv@b+1
  9138  0045A0  0060  F0A4  F021   	movff	??___fldiv+2,___fldiv@b+2
  9139  0045A6  0060  F0A8  F022   	movff	??___fldiv+3,___fldiv@b+3
  9140  0045AC  4A30               	infsnz	___fldiv@new_exp^0,f,c
  9141  0045AE  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
  9142  0045B0                     l3716:
  9143  0045B0  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9144  0045B2  D010               	goto	l3720
  9145  0045B4  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9146  0045B6  E103               	bnz	u4060
  9147  0045B8  2830               	incf	___fldiv@new_exp^0,w,c
  9148  0045BA  A0D8               	btfss	status,0,c
  9149  0045BC  D00B               	goto	l3720
  9150  0045BE                     u4060:
  9151  0045BE  0E00               	movlw	0
  9152  0045C0  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9153  0045C2  6830               	setf	___fldiv@new_exp^0,c
  9154  0045C4  0E00               	movlw	0
  9155  0045C6  6E1F               	movwf	___fldiv@b^0,c
  9156  0045C8  0E00               	movlw	0
  9157  0045CA  6E20               	movwf	(___fldiv@b+1)^0,c
  9158  0045CC  0E00               	movlw	0
  9159  0045CE  6E21               	movwf	(___fldiv@b+2)^0,c
  9160  0045D0  0E00               	movlw	0
  9161  0045D2  6E22               	movwf	(___fldiv@b+3)^0,c
  9162  0045D4                     l3720:
  9163  0045D4  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9164  0045D6  D005               	goto	u4070
  9165  0045D8  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9166  0045DA  E111               	bnz	l3724
  9167  0045DC  0430               	decf	___fldiv@new_exp^0,w,c
  9168  0045DE  B0D8               	btfsc	status,0,c
  9169  0045E0  D00E               	goto	l3724
  9170  0045E2                     u4070:
  9171  0045E2  0E00               	movlw	0
  9172  0045E4  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9173  0045E6  0E00               	movlw	0
  9174  0045E8  6E30               	movwf	___fldiv@new_exp^0,c
  9175  0045EA  0E00               	movlw	0
  9176  0045EC  6E1F               	movwf	___fldiv@b^0,c
  9177  0045EE  0E00               	movlw	0
  9178  0045F0  6E20               	movwf	(___fldiv@b+1)^0,c
  9179  0045F2  0E00               	movlw	0
  9180  0045F4  6E21               	movwf	(___fldiv@b+2)^0,c
  9181  0045F6  0E00               	movlw	0
  9182  0045F8  6E22               	movwf	(___fldiv@b+3)^0,c
  9183  0045FA  0E00               	movlw	0
  9184  0045FC  6E2F               	movwf	___fldiv@sign^0,c
  9185  0045FE                     l3724:
  9186  0045FE  0060  F0C0  F036   	movff	___fldiv@new_exp,___fldiv@bexp
  9187  004604  A036               	btfss	___fldiv@bexp^0,0,c
  9188  004606  D002               	goto	l3730
  9189  004608  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9190  00460A  D001               	goto	l3732
  9191  00460C                     l3730:
  9192  00460C  9E21               	bcf	(___fldiv@b+2)^0,7,c
  9193  00460E                     l3732:
  9194  00460E  90D8               	bcf	status,0,c
  9195  004610  3036               	rrcf	___fldiv@bexp^0,w,c
  9196  004612  6E22               	movwf	(___fldiv@b+3)^0,c
  9197  004614  D6FC               	goto	l3646
  9198  004616                     __end_of___fldiv:
  9199                           	opt callstack 0
  9200                           
  9201 ;; *************** function ___awmod *****************
  9202 ;; Defined at:
  9203 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  dividend        2    0[COMRAM] int 
  9206 ;;  divisor         2    2[COMRAM] int 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  sign            1    5[COMRAM] unsigned char 
  9209 ;;  counter         1    4[COMRAM] unsigned char 
  9210 ;; Return value:  Size  Location     Type
  9211 ;;                  2    0[COMRAM] int 
  9212 ;; Registers used:
  9213 ;;		wreg, status,2, status,0
  9214 ;; Tracked objects:
  9215 ;;		On entry : 3F/0
  9216 ;;		On exit  : 3F/0
  9217 ;;		Unchanged: 3F/0
  9218 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9222 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9223 ;;Total ram usage:        6 bytes
  9224 ;; Hardware stack levels used:    1
  9225 ;; This function calls:
  9226 ;;		Nothing
  9227 ;; This function is called by:
  9228 ;;		_efgtoa
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text31
  9233  005684                     __ptext31:
  9234                           	opt callstack 0
  9235  005684                     ___awmod:
  9236                           	opt callstack 25
  9237                           
  9238                           ; BSR set to: 0
  9239                           
  9240                           ;incstack = 0
  9241  005684  0E00               	movlw	0
  9242  005686  6E06               	movwf	___awmod@sign^0,c
  9243                           
  9244                           ; BSR set to: 0
  9245  005688  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  9246  00568A  D006               	goto	l3928
  9247                           
  9248                           ; BSR set to: 0
  9249  00568C  6C01               	negf	___awmod@dividend^0,c
  9250  00568E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9251  005690  B0D8               	btfsc	status,0,c
  9252  005692  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9253                           
  9254                           ; BSR set to: 0
  9255  005694  0E01               	movlw	1
  9256  005696  6E06               	movwf	___awmod@sign^0,c
  9257  005698                     l3928:
  9258                           
  9259                           ; BSR set to: 0
  9260  005698  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9261  00569A  D004               	goto	l3932
  9262                           
  9263                           ; BSR set to: 0
  9264  00569C  6C03               	negf	___awmod@divisor^0,c
  9265  00569E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9266  0056A0  B0D8               	btfsc	status,0,c
  9267  0056A2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9268  0056A4                     l3932:
  9269                           
  9270                           ; BSR set to: 0
  9271  0056A4  5003               	movf	___awmod@divisor^0,w,c
  9272  0056A6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9273  0056A8  B4D8               	btfsc	status,2,c
  9274  0056AA  D018               	goto	l3948
  9275                           
  9276                           ; BSR set to: 0
  9277  0056AC  0E01               	movlw	1
  9278  0056AE  6E05               	movwf	___awmod@counter^0,c
  9279  0056B0  D004               	goto	l3938
  9280  0056B2                     l3936:
  9281                           
  9282                           ; BSR set to: 0
  9283  0056B2  90D8               	bcf	status,0,c
  9284  0056B4  3603               	rlcf	___awmod@divisor^0,f,c
  9285  0056B6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9286  0056B8  2A05               	incf	___awmod@counter^0,f,c
  9287  0056BA                     l3938:
  9288                           
  9289                           ; BSR set to: 0
  9290  0056BA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9291  0056BC  D7FA               	goto	l3936
  9292  0056BE                     u4360:
  9293                           
  9294                           ; BSR set to: 0
  9295  0056BE  5003               	movf	___awmod@divisor^0,w,c
  9296  0056C0  5C01               	subwf	___awmod@dividend^0,w,c
  9297  0056C2  5004               	movf	(___awmod@divisor+1)^0,w,c
  9298  0056C4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9299  0056C6  A0D8               	btfss	status,0,c
  9300  0056C8  D004               	goto	l3944
  9301                           
  9302                           ; BSR set to: 0
  9303  0056CA  5003               	movf	___awmod@divisor^0,w,c
  9304  0056CC  5E01               	subwf	___awmod@dividend^0,f,c
  9305  0056CE  5004               	movf	(___awmod@divisor+1)^0,w,c
  9306  0056D0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9307  0056D2                     l3944:
  9308                           
  9309                           ; BSR set to: 0
  9310  0056D2  90D8               	bcf	status,0,c
  9311  0056D4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9312  0056D6  3203               	rrcf	___awmod@divisor^0,f,c
  9313                           
  9314                           ; BSR set to: 0
  9315  0056D8  2E05               	decfsz	___awmod@counter^0,f,c
  9316  0056DA  D7F1               	goto	u4360
  9317  0056DC                     l3948:
  9318                           
  9319                           ; BSR set to: 0
  9320  0056DC  5006               	movf	___awmod@sign^0,w,c
  9321  0056DE  B4D8               	btfsc	status,2,c
  9322  0056E0  D004               	goto	l3952
  9323                           
  9324                           ; BSR set to: 0
  9325  0056E2  6C01               	negf	___awmod@dividend^0,c
  9326  0056E4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9327  0056E6  B0D8               	btfsc	status,0,c
  9328  0056E8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9329  0056EA                     l3952:
  9330                           
  9331                           ; BSR set to: 0
  9332  0056EA  0060  F004  F001   	movff	___awmod@dividend,?___awmod
  9333  0056F0  0060  F008  F002   	movff	___awmod@dividend+1,?___awmod+1
  9334                           
  9335                           ; BSR set to: 0
  9336  0056F6  0012               	return		;funcret
  9337  0056F8                     __end_of___awmod:
  9338                           	opt callstack 0
  9339                           
  9340 ;; *************** function ___awdiv *****************
  9341 ;; Defined at:
  9342 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  9343 ;; Parameters:    Size  Location     Type
  9344 ;;  dividend        2    0[COMRAM] int 
  9345 ;;  divisor         2    2[COMRAM] int 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  quotient        2    6[COMRAM] int 
  9348 ;;  sign            1    5[COMRAM] unsigned char 
  9349 ;;  counter         1    4[COMRAM] unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  2    0[COMRAM] int 
  9352 ;; Registers used:
  9353 ;;		wreg, status,2, status,0
  9354 ;; Tracked objects:
  9355 ;;		On entry : 3B/4
  9356 ;;		On exit  : 3B/0
  9357 ;;		Unchanged: 3B/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9359 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9360 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9362 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9363 ;;Total ram usage:        8 bytes
  9364 ;; Hardware stack levels used:    1
  9365 ;; This function calls:
  9366 ;;		Nothing
  9367 ;; This function is called by:
  9368 ;;		_main_loop
  9369 ;;		_efgtoa
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text32
  9374  00550A                     __ptext32:
  9375                           	opt callstack 0
  9376  00550A                     ___awdiv:
  9377                           	opt callstack 25
  9378                           
  9379                           ; BSR set to: 0
  9380                           ;incstack = 0
  9381  00550A  0E00               	movlw	0
  9382  00550C  6E06               	movwf	___awdiv@sign^0,c
  9383  00550E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9384  005510  D006               	goto	l3884
  9385  005512  6C03               	negf	___awdiv@divisor^0,c
  9386  005514  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9387  005516  B0D8               	btfsc	status,0,c
  9388  005518  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9389  00551A  0E01               	movlw	1
  9390  00551C  6E06               	movwf	___awdiv@sign^0,c
  9391  00551E                     l3884:
  9392  00551E  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  9393  005520  D006               	goto	l3890
  9394  005522  6C01               	negf	___awdiv@dividend^0,c
  9395  005524  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9396  005526  B0D8               	btfsc	status,0,c
  9397  005528  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9398  00552A  0E01               	movlw	1
  9399  00552C  1A06               	xorwf	___awdiv@sign^0,f,c
  9400  00552E                     l3890:
  9401  00552E  0E00               	movlw	0
  9402  005530  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9403  005532  0E00               	movlw	0
  9404  005534  6E07               	movwf	___awdiv@quotient^0,c
  9405  005536  5003               	movf	___awdiv@divisor^0,w,c
  9406  005538  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9407  00553A  B4D8               	btfsc	status,2,c
  9408  00553C  D01C               	goto	l3912
  9409  00553E  0E01               	movlw	1
  9410  005540  6E05               	movwf	___awdiv@counter^0,c
  9411  005542  D004               	goto	l3898
  9412  005544                     l3896:
  9413  005544  90D8               	bcf	status,0,c
  9414  005546  3603               	rlcf	___awdiv@divisor^0,f,c
  9415  005548  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9416  00554A  2A05               	incf	___awdiv@counter^0,f,c
  9417  00554C                     l3898:
  9418  00554C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9419  00554E  D7FA               	goto	l3896
  9420  005550                     u4300:
  9421  005550  90D8               	bcf	status,0,c
  9422  005552  3607               	rlcf	___awdiv@quotient^0,f,c
  9423  005554  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9424  005556  5003               	movf	___awdiv@divisor^0,w,c
  9425  005558  5C01               	subwf	___awdiv@dividend^0,w,c
  9426  00555A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9427  00555C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9428  00555E  A0D8               	btfss	status,0,c
  9429  005560  D005               	goto	l3908
  9430  005562  5003               	movf	___awdiv@divisor^0,w,c
  9431  005564  5E01               	subwf	___awdiv@dividend^0,f,c
  9432  005566  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9433  005568  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9434  00556A  8007               	bsf	___awdiv@quotient^0,0,c
  9435  00556C                     l3908:
  9436  00556C  90D8               	bcf	status,0,c
  9437  00556E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9438  005570  3203               	rrcf	___awdiv@divisor^0,f,c
  9439  005572  2E05               	decfsz	___awdiv@counter^0,f,c
  9440  005574  D7ED               	goto	u4300
  9441  005576                     l3912:
  9442  005576  5006               	movf	___awdiv@sign^0,w,c
  9443  005578  B4D8               	btfsc	status,2,c
  9444  00557A  D004               	goto	l3916
  9445  00557C  6C07               	negf	___awdiv@quotient^0,c
  9446  00557E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9447  005580  B0D8               	btfsc	status,0,c
  9448  005582  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9449  005584                     l3916:
  9450  005584  0060  F01C  F001   	movff	___awdiv@quotient,?___awdiv
  9451  00558A  0060  F020  F002   	movff	___awdiv@quotient+1,?___awdiv+1
  9452  005590  0012               	return		;funcret
  9453  005592                     __end_of___awdiv:
  9454                           	opt callstack 0
  9455                           
  9456 ;; *************** function _atoi *****************
  9457 ;; Defined at:
  9458 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  s               1    7[COMRAM] PTR const unsigned char 
  9461 ;;		 -> STR_5(17), STR_4(18), STR_3(18), STR_2(19), 
  9462 ;;		 -> STR_1(11), 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;  n               2   20[COMRAM] int 
  9465 ;;  neg             2   13[COMRAM] int 
  9466 ;; Return value:  Size  Location     Type
  9467 ;;                  2    7[COMRAM] int 
  9468 ;; Registers used:
  9469 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9470 ;; Tracked objects:
  9471 ;;		On entry : 3F/0
  9472 ;;		On exit  : 0/0
  9473 ;;		Unchanged: 0/0
  9474 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9475 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9476 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9477 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9478 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;Total ram usage:       15 bytes
  9480 ;; Hardware stack levels used:    1
  9481 ;; Hardware stack levels required when called:    1
  9482 ;; This function calls:
  9483 ;;		___wmul
  9484 ;;		_isdigit
  9485 ;;		_isspace
  9486 ;; This function is called by:
  9487 ;;		_vfpfcnvrt
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           	psect	text33
  9492  004974                     __ptext33:
  9493                           	opt callstack 0
  9494  004974                     _atoi:
  9495                           	opt callstack 25
  9496                           
  9497                           ; BSR set to: 0
  9498                           
  9499                           ;incstack = 0
  9500  004974  0E00               	movlw	0
  9501  004976  6E16               	movwf	(atoi@n+1)^0,c
  9502  004978  0E00               	movlw	0
  9503  00497A  6E15               	movwf	atoi@n^0,c
  9504  00497C  0E00               	movlw	0
  9505  00497E  6E0F               	movwf	(atoi@neg+1)^0,c
  9506  004980  0E00               	movlw	0
  9507  004982  6E0E               	movwf	atoi@neg^0,c
  9508  004984  D001               	goto	l4378
  9509  004986                     l4376:
  9510                           
  9511                           ; BSR set to: 0
  9512  004986  2A08               	incf	atoi@s^0,f,c
  9513  004988                     l4378:
  9514                           
  9515                           ; BSR set to: 0
  9516  004988  0E01               	movlw	1
  9517  00498A  6E14               	movwf	_atoi$1106^0,c
  9518                           
  9519                           ; BSR set to: 0
  9520  00498C  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9521  004992                     	if	1	;There is more than 1 active tblptr byte
  9522  004992  0E20               	movlw	high __smallconst
  9523  004994  6EF7               	movwf	tblptrh,c
  9524  004996                     	endif
  9525  004996                     	if	0	;tblptru may be non-zero
  9526  004996                     	endif
  9527  004996                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9528  004996  0E00               	movlw	low (__smallconst shr (0+16))
  9529  004998  6EF8               	movwf	tblptru,c
  9530  00499A                     	endif
  9531  00499A  0008               	tblrd		*
  9532  00499C  50F5               	movf	tablat,w,c
  9533  00499E  0A20               	xorlw	32
  9534  0049A0  B4D8               	btfsc	status,2,c
  9535  0049A2  D01B               	goto	l4386
  9536                           
  9537                           ; BSR set to: 0
  9538  0049A4  0EF7               	movlw	247
  9539  0049A6  6E0A               	movwf	??_atoi^0,c
  9540  0049A8  0EFF               	movlw	255
  9541  0049AA  6E0B               	movwf	(??_atoi+1)^0,c
  9542  0049AC  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9543  0049B2                     	if	1	;There is more than 1 active tblptr byte
  9544  0049B2  0E20               	movlw	high __smallconst
  9545  0049B4  6EF7               	movwf	tblptrh,c
  9546  0049B6                     	endif
  9547  0049B6                     	if	0	;tblptru may be non-zero
  9548  0049B6                     	endif
  9549  0049B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9550  0049B6  0E00               	movlw	low (__smallconst shr (0+16))
  9551  0049B8  6EF8               	movwf	tblptru,c
  9552  0049BA                     	endif
  9553  0049BA  0008               	tblrd		*
  9554  0049BC  50F5               	movf	tablat,w,c
  9555  0049BE  6E0C               	movwf	(??_atoi+2)^0,c
  9556  0049C0  6A0D               	clrf	(??_atoi+3)^0,c
  9557  0049C2  500A               	movf	??_atoi^0,w,c
  9558  0049C4  260C               	addwf	(??_atoi+2)^0,f,c
  9559  0049C6  500B               	movf	(??_atoi+1)^0,w,c
  9560  0049C8  220D               	addwfc	(??_atoi+3)^0,f,c
  9561  0049CA  500D               	movf	(??_atoi+3)^0,w,c
  9562  0049CC  E104               	bnz	u5130
  9563  0049CE  0E05               	movlw	5
  9564  0049D0  5C0C               	subwf	(??_atoi+2)^0,w,c
  9565  0049D2  A0D8               	btfss	status,0,c
  9566  0049D4  D002               	goto	l4386
  9567  0049D6                     u5130:
  9568                           
  9569                           ; BSR set to: 0
  9570  0049D6  0E00               	movlw	0
  9571  0049D8  6E14               	movwf	_atoi$1106^0,c
  9572  0049DA                     l4386:
  9573                           
  9574                           ; BSR set to: 0
  9575  0049DA  0060  F050  F010   	movff	_atoi$1106,_atoi$1105
  9576  0049E0  6A11               	clrf	(_atoi$1105+1)^0,c
  9577                           
  9578                           ; BSR set to: 0
  9579  0049E2  5010               	movf	_atoi$1105^0,w,c
  9580  0049E4  1011               	iorwf	(_atoi$1105+1)^0,w,c
  9581  0049E6  B4D8               	btfsc	status,2,c
  9582  0049E8  D007               	goto	l4396
  9583  0049EA  D7CD               	goto	l4376
  9584  0049EC                     l4392:
  9585                           
  9586                           ; BSR set to: 0
  9587  0049EC  0E00               	movlw	0
  9588  0049EE  6E0F               	movwf	(atoi@neg+1)^0,c
  9589  0049F0  0E01               	movlw	1
  9590  0049F2  6E0E               	movwf	atoi@neg^0,c
  9591  0049F4                     l4394:
  9592  0049F4  2A08               	incf	atoi@s^0,f,c
  9593  0049F6  D036               	goto	l4402
  9594  0049F8                     l4396:
  9595                           
  9596                           ; BSR set to: 0
  9597  0049F8  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9598  0049FE                     	if	1	;There is more than 1 active tblptr byte
  9599  0049FE  0E20               	movlw	high __smallconst
  9600  004A00  6EF7               	movwf	tblptrh,c
  9601  004A02                     	endif
  9602  004A02                     	if	0	;tblptru may be non-zero
  9603  004A02                     	endif
  9604  004A02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9605  004A02  0E00               	movlw	low (__smallconst shr (0+16))
  9606  004A04  6EF8               	movwf	tblptru,c
  9607  004A06                     	endif
  9608  004A06  0008               	tblrd		*
  9609  004A08  50F5               	movf	tablat,w,c
  9610  004A0A  6E0A               	movwf	??_atoi^0,c
  9611  004A0C  6A0B               	clrf	(??_atoi+1)^0,c
  9612                           
  9613                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9614                           ; Switch size 1, requested type "simple"
  9615                           ; Number of cases is 1, Range of values is 0 to 0
  9616                           ; switch strategies available:
  9617                           ; Name         Instructions Cycles
  9618                           ; simple_byte            4     3 (average)
  9619                           ;	Chosen strategy is simple_byte
  9620  004A0E  500B               	movf	(??_atoi+1)^0,w,c
  9621  004A10  0A00               	xorlw	0	; case 0
  9622  004A12  A4D8               	btfss	status,2,c
  9623  004A14  D027               	goto	l4402
  9624                           
  9625                           ; BSR set to: 0
  9626                           ; Switch size 1, requested type "simple"
  9627                           ; Number of cases is 2, Range of values is 43 to 45
  9628                           ; switch strategies available:
  9629                           ; Name         Instructions Cycles
  9630                           ; simple_byte            7     4 (average)
  9631                           ;	Chosen strategy is simple_byte
  9632  004A16  500A               	movf	??_atoi^0,w,c
  9633  004A18  0A2B               	xorlw	43	; case 43
  9634  004A1A  B4D8               	btfsc	status,2,c
  9635  004A1C  D7EB               	goto	l4394
  9636  004A1E  0A06               	xorlw	6	; case 45
  9637  004A20  B4D8               	btfsc	status,2,c
  9638  004A22  D7E4               	goto	l4392
  9639  004A24  D01F               	goto	l4402
  9640  004A26                     l4398:
  9641  004A26  0060  F054  F001   	movff	atoi@n,___wmul@multiplier
  9642  004A2C  0060  F058  F002   	movff	atoi@n+1,___wmul@multiplier+1
  9643  004A32  0E00               	movlw	0
  9644  004A34  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9645  004A36  0E0A               	movlw	10
  9646  004A38  6E03               	movwf	___wmul@multiplicand^0,c
  9647  004A3A  ECE0  F02D         	call	___wmul	;wreg free
  9648  004A3E  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9649  004A44                     	if	1	;There is more than 1 active tblptr byte
  9650  004A44  0E20               	movlw	high __smallconst
  9651  004A46  6EF7               	movwf	tblptrh,c
  9652  004A48                     	endif
  9653  004A48                     	if	0	;tblptru may be non-zero
  9654  004A48                     	endif
  9655  004A48                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9656  004A48  0E00               	movlw	low (__smallconst shr (0+16))
  9657  004A4A  6EF8               	movwf	tblptru,c
  9658  004A4C                     	endif
  9659  004A4C  0008               	tblrd		*
  9660  004A4E  50F5               	movf	tablat,w,c
  9661  004A50  5E01               	subwf	?___wmul^0,f,c
  9662  004A52  0E00               	movlw	0
  9663  004A54  5A02               	subwfb	(?___wmul+1)^0,f,c
  9664  004A56  0E30               	movlw	48
  9665  004A58  2401               	addwf	?___wmul^0,w,c
  9666  004A5A  6E15               	movwf	atoi@n^0,c
  9667  004A5C  0E00               	movlw	0
  9668  004A5E  2002               	addwfc	(?___wmul+1)^0,w,c
  9669  004A60  6E16               	movwf	(atoi@n+1)^0,c
  9670  004A62  D7C8               	goto	l4394
  9671  004A64                     l4402:
  9672  004A64  0ED0               	movlw	208
  9673  004A66  6E0A               	movwf	??_atoi^0,c
  9674  004A68  0EFF               	movlw	255
  9675  004A6A  6E0B               	movwf	(??_atoi+1)^0,c
  9676  004A6C  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9677  004A72                     	if	1	;There is more than 1 active tblptr byte
  9678  004A72  0E20               	movlw	high __smallconst
  9679  004A74  6EF7               	movwf	tblptrh,c
  9680  004A76                     	endif
  9681  004A76                     	if	0	;tblptru may be non-zero
  9682  004A76                     	endif
  9683  004A76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9684  004A76  0E00               	movlw	low (__smallconst shr (0+16))
  9685  004A78  6EF8               	movwf	tblptru,c
  9686  004A7A                     	endif
  9687  004A7A  0008               	tblrd		*
  9688  004A7C  50F5               	movf	tablat,w,c
  9689  004A7E  6E0C               	movwf	(??_atoi+2)^0,c
  9690  004A80  6A0D               	clrf	(??_atoi+3)^0,c
  9691  004A82  500A               	movf	??_atoi^0,w,c
  9692  004A84  260C               	addwf	(??_atoi+2)^0,f,c
  9693  004A86  500B               	movf	(??_atoi+1)^0,w,c
  9694  004A88  220D               	addwfc	(??_atoi+3)^0,f,c
  9695  004A8A  500D               	movf	(??_atoi+3)^0,w,c
  9696  004A8C  E106               	bnz	u5150
  9697  004A8E  0E0A               	movlw	10
  9698  004A90  5C0C               	subwf	(??_atoi+2)^0,w,c
  9699  004A92  B0D8               	btfsc	status,0,c
  9700  004A94  D002               	goto	u5150
  9701  004A96  0E01               	movlw	1
  9702  004A98  D001               	goto	u5160
  9703  004A9A                     u5150:
  9704  004A9A  0E00               	movlw	0
  9705  004A9C                     u5160:
  9706  004A9C  6E12               	movwf	_atoi$1107^0,c
  9707  004A9E  6A13               	clrf	(_atoi$1107+1)^0,c
  9708  004AA0  5012               	movf	_atoi$1107^0,w,c
  9709  004AA2  1013               	iorwf	(_atoi$1107+1)^0,w,c
  9710  004AA4  A4D8               	btfss	status,2,c
  9711  004AA6  D7BF               	goto	l4398
  9712  004AA8  500E               	movf	atoi@neg^0,w,c
  9713  004AAA  100F               	iorwf	(atoi@neg+1)^0,w,c
  9714  004AAC  A4D8               	btfss	status,2,c
  9715  004AAE  D011               	goto	l1368
  9716  004AB0  0060  F054  F00A   	movff	atoi@n,??_atoi
  9717  004AB6  0060  F058  F00B   	movff	atoi@n+1,??_atoi+1
  9718  004ABC  1E0A               	comf	??_atoi^0,f,c
  9719  004ABE  1E0B               	comf	(??_atoi+1)^0,f,c
  9720  004AC0  4A0A               	infsnz	??_atoi^0,f,c
  9721  004AC2  2A0B               	incf	(??_atoi+1)^0,f,c
  9722  004AC4  0060  F028  F008   	movff	??_atoi,?_atoi
  9723  004ACA  0060  F02C  F009   	movff	??_atoi+1,?_atoi+1
  9724  004AD0  0012               	return	
  9725  004AD2                     l1368:
  9726  004AD2  0060  F054  F008   	movff	atoi@n,?_atoi
  9727  004AD8  0060  F058  F009   	movff	atoi@n+1,?_atoi+1
  9728  004ADE  0012               	return		;funcret
  9729  004AE0                     __end_of_atoi:
  9730                           	opt callstack 0
  9731                           
  9732 ;; *************** function _isspace *****************
  9733 ;; Defined at:
  9734 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9735 ;; Parameters:    Size  Location     Type
  9736 ;;  c               2    0[COMRAM] int 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;		None
  9739 ;; Return value:  Size  Location     Type
  9740 ;;                  2    0[COMRAM] int 
  9741 ;; Registers used:
  9742 ;;		wreg, status,2, status,0
  9743 ;; Tracked objects:
  9744 ;;		On entry : 0/0
  9745 ;;		On exit  : 0/0
  9746 ;;		Unchanged: 0/0
  9747 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9749 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9750 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9751 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9752 ;;Total ram usage:        7 bytes
  9753 ;; Hardware stack levels used:    1
  9754 ;; This function calls:
  9755 ;;		Nothing
  9756 ;; This function is called by:
  9757 ;;		_atoi
  9758 ;; This function uses a non-reentrant model
  9759 ;;
  9760                           
  9761                           	psect	text34
  9762  005A3A                     __ptext34:
  9763                           	opt callstack 0
  9764  005A3A                     _isspace:
  9765                           	opt callstack 25
  9766                           
  9767                           ;incstack = 0
  9768  005A3A  0E01               	movlw	1
  9769  005A3C  6E07               	movwf	_isspace$1136^0,c
  9770  005A3E  0E20               	movlw	32
  9771  005A40  1801               	xorwf	isspace@c^0,w,c
  9772  005A42  1002               	iorwf	(isspace@c+1)^0,w,c
  9773  005A44  B4D8               	btfsc	status,2,c
  9774  005A46  D016               	goto	l4054
  9775  005A48  0EF7               	movlw	247
  9776  005A4A  6E03               	movwf	??_isspace^0,c
  9777  005A4C  0EFF               	movlw	255
  9778  005A4E  6E04               	movwf	(??_isspace+1)^0,c
  9779  005A50  0060  F004  F005   	movff	isspace@c,??_isspace+2
  9780  005A56  0060  F008  F006   	movff	isspace@c+1,??_isspace+3
  9781  005A5C  5003               	movf	??_isspace^0,w,c
  9782  005A5E  2605               	addwf	(??_isspace+2)^0,f,c
  9783  005A60  5004               	movf	(??_isspace+1)^0,w,c
  9784  005A62  2206               	addwfc	(??_isspace+3)^0,f,c
  9785  005A64  5006               	movf	(??_isspace+3)^0,w,c
  9786  005A66  E104               	bnz	u4560
  9787  005A68  0E05               	movlw	5
  9788  005A6A  5C05               	subwf	(??_isspace+2)^0,w,c
  9789  005A6C  A0D8               	btfss	status,0,c
  9790  005A6E  D002               	goto	l4054
  9791  005A70                     u4560:
  9792  005A70  0E00               	movlw	0
  9793  005A72  6E07               	movwf	_isspace$1136^0,c
  9794  005A74                     l4054:
  9795  005A74  0060  F01C  F001   	movff	_isspace$1136,?_isspace
  9796  005A7A  6A02               	clrf	(?_isspace+1)^0,c
  9797  005A7C  0012               	return		;funcret
  9798  005A7E                     __end_of_isspace:
  9799                           	opt callstack 0
  9800                           
  9801 ;; *************** function _isdigit *****************
  9802 ;; Defined at:
  9803 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9804 ;; Parameters:    Size  Location     Type
  9805 ;;  c               2    0[COMRAM] int 
  9806 ;; Auto vars:     Size  Location     Type
  9807 ;;		None
  9808 ;; Return value:  Size  Location     Type
  9809 ;;                  2    0[COMRAM] int 
  9810 ;; Registers used:
  9811 ;;		wreg, status,2, status,0
  9812 ;; Tracked objects:
  9813 ;;		On entry : 0/0
  9814 ;;		On exit  : 0/0
  9815 ;;		Unchanged: 0/0
  9816 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9817 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9819 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9820 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9821 ;;Total ram usage:        6 bytes
  9822 ;; Hardware stack levels used:    1
  9823 ;; This function calls:
  9824 ;;		Nothing
  9825 ;; This function is called by:
  9826 ;;		_vfpfcnvrt
  9827 ;;		_atoi
  9828 ;; This function uses a non-reentrant model
  9829 ;;
  9830                           
  9831                           	psect	text35
  9832  005B5A                     __ptext35:
  9833                           	opt callstack 0
  9834  005B5A                     _isdigit:
  9835                           	opt callstack 26
  9836                           
  9837                           ;incstack = 0
  9838  005B5A  0ED0               	movlw	208
  9839  005B5C  6E03               	movwf	??_isdigit^0,c
  9840  005B5E  0EFF               	movlw	255
  9841  005B60  6E04               	movwf	(??_isdigit+1)^0,c
  9842  005B62  0060  F004  F005   	movff	isdigit@c,??_isdigit+2
  9843  005B68  0060  F008  F006   	movff	isdigit@c+1,??_isdigit+3
  9844  005B6E  5003               	movf	??_isdigit^0,w,c
  9845  005B70  2605               	addwf	(??_isdigit+2)^0,f,c
  9846  005B72  5004               	movf	(??_isdigit+1)^0,w,c
  9847  005B74  2206               	addwfc	(??_isdigit+3)^0,f,c
  9848  005B76  5006               	movf	(??_isdigit+3)^0,w,c
  9849  005B78  E106               	bnz	u3840
  9850  005B7A  0E0A               	movlw	10
  9851  005B7C  5C05               	subwf	(??_isdigit+2)^0,w,c
  9852  005B7E  B0D8               	btfsc	status,0,c
  9853  005B80  D002               	goto	u3840
  9854  005B82  0E01               	movlw	1
  9855  005B84  D001               	goto	u3850
  9856  005B86                     u3840:
  9857  005B86  0E00               	movlw	0
  9858  005B88                     u3850:
  9859  005B88  6E01               	movwf	?_isdigit^0,c
  9860  005B8A  6A02               	clrf	(?_isdigit+1)^0,c
  9861  005B8C  0012               	return		;funcret
  9862  005B8E                     __end_of_isdigit:
  9863                           	opt callstack 0
  9864                           
  9865 ;; *************** function ___wmul *****************
  9866 ;; Defined at:
  9867 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9868 ;; Parameters:    Size  Location     Type
  9869 ;;  multiplier      2    0[COMRAM] unsigned int 
  9870 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9871 ;; Auto vars:     Size  Location     Type
  9872 ;;  product         2    4[COMRAM] unsigned int 
  9873 ;; Return value:  Size  Location     Type
  9874 ;;                  2    0[COMRAM] unsigned int 
  9875 ;; Registers used:
  9876 ;;		wreg, status,2, status,0, prodl, prodh
  9877 ;; Tracked objects:
  9878 ;;		On entry : 0/0
  9879 ;;		On exit  : 0/0
  9880 ;;		Unchanged: 0/0
  9881 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9883 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9885 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9886 ;;Total ram usage:        6 bytes
  9887 ;; Hardware stack levels used:    1
  9888 ;; This function calls:
  9889 ;;		Nothing
  9890 ;; This function is called by:
  9891 ;;		_atoi
  9892 ;; This function uses a non-reentrant model
  9893 ;;
  9894                           
  9895                           	psect	text36
  9896  005BC0                     __ptext36:
  9897                           	opt callstack 0
  9898  005BC0                     ___wmul:
  9899                           	opt callstack 25
  9900                           
  9901                           ;incstack = 0
  9902  005BC0  5001               	movf	___wmul@multiplier^0,w,c
  9903  005BC2  0203               	mulwf	___wmul@multiplicand^0,c
  9904  005BC4  006F FFCC  F005    	movff	prodl,___wmul@product
  9905  005BCA  006F FFD0  F006    	movff	prodh,___wmul@product+1
  9906  005BD0  5001               	movf	___wmul@multiplier^0,w,c
  9907  005BD2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9908  005BD4  50F3               	movf	243,w,c
  9909  005BD6  2606               	addwf	(___wmul@product+1)^0,f,c
  9910  005BD8  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9911  005BDA  0203               	mulwf	___wmul@multiplicand^0,c
  9912  005BDC  50F3               	movf	243,w,c
  9913  005BDE  2606               	addwf	(___wmul@product+1)^0,f,c
  9914  005BE0  0060  F014  F001   	movff	___wmul@product,?___wmul
  9915  005BE6  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
  9916  005BEC  0012               	return		;funcret
  9917  005BEE                     __end_of___wmul:
  9918                           	opt callstack 0
  9919                           
  9920 ;; *************** function _setLED *****************
  9921 ;; Defined at:
  9922 ;;		line 93 in file "main.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  r               4   25[COMRAM] unsigned long 
  9925 ;;  g               4   29[COMRAM] unsigned long 
  9926 ;;  b               4   33[COMRAM] unsigned long 
  9927 ;; Auto vars:     Size  Location     Type
  9928 ;;  sb              4   69[COMRAM] unsigned long 
  9929 ;;  sg              4   65[COMRAM] unsigned long 
  9930 ;;  sr              4   61[COMRAM] unsigned long 
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, status,2, status,0, cstack
  9935 ;; Tracked objects:
  9936 ;;		On entry : 3F/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9940 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9941 ;;      Locals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;Total ram usage:       48 bytes
  9945 ;; Hardware stack levels used:    1
  9946 ;; Hardware stack levels required when called:    1
  9947 ;; This function calls:
  9948 ;;		___lldiv
  9949 ;;		___lmul
  9950 ;; This function is called by:
  9951 ;;		_main_loop
  9952 ;; This function uses a non-reentrant model
  9953 ;;
  9954                           
  9955                           	psect	text37
  9956  004098                     __ptext37:
  9957                           	opt callstack 0
  9958  004098                     _setLED:
  9959                           	opt callstack 28
  9960                           
  9961                           ; BSR set to: 0
  9962                           ;main.c: 94:     uint32_t sr = r * 20 / 100;
  9963                           
  9964                           ;incstack = 0
  9965  004098  0060  F068  F001   	movff	setLED@r,___lmul@multiplier
  9966  00409E  0060  F06C  F002   	movff	setLED@r+1,___lmul@multiplier+1
  9967  0040A4  0060  F070  F003   	movff	setLED@r+2,___lmul@multiplier+2
  9968  0040AA  0060  F074  F004   	movff	setLED@r+3,___lmul@multiplier+3
  9969  0040B0  0E14               	movlw	20
  9970  0040B2  6E05               	movwf	___lmul@multiplicand^0,c
  9971  0040B4  0E00               	movlw	0
  9972  0040B6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  9973  0040B8  0E00               	movlw	0
  9974  0040BA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  9975  0040BC  0E00               	movlw	0
  9976  0040BE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  9977  0040C0  EC4F  F02C         	call	___lmul	;wreg free
  9978  0040C4  0060  F004  F00D   	movff	?___lmul,___lldiv@dividend
  9979  0040CA  0060  F008  F00E   	movff	?___lmul+1,___lldiv@dividend+1
  9980  0040D0  0060  F00C  F00F   	movff	?___lmul+2,___lldiv@dividend+2
  9981  0040D6  0060  F010  F010   	movff	?___lmul+3,___lldiv@dividend+3
  9982  0040DC  0E64               	movlw	100
  9983  0040DE  6E11               	movwf	___lldiv@divisor^0,c
  9984  0040E0  0E00               	movlw	0
  9985  0040E2  6E12               	movwf	(___lldiv@divisor+1)^0,c
  9986  0040E4  0E00               	movlw	0
  9987  0040E6  6E13               	movwf	(___lldiv@divisor+2)^0,c
  9988  0040E8  0E00               	movlw	0
  9989  0040EA  6E14               	movwf	(___lldiv@divisor+3)^0,c
  9990  0040EC  EC40  F02A         	call	___lldiv	;wreg free
  9991  0040F0  0060  F034  F03E   	movff	?___lldiv,setLED@sr
  9992  0040F6  0060  F038  F03F   	movff	?___lldiv+1,setLED@sr+1
  9993  0040FC  0060  F03C  F040   	movff	?___lldiv+2,setLED@sr+2
  9994  004102  0060  F040  F041   	movff	?___lldiv+3,setLED@sr+3
  9995                           
  9996                           ;main.c: 95:     uint32_t sg = g * 20 / 100;
  9997  004108  0060  F078  F001   	movff	setLED@g,___lmul@multiplier
  9998  00410E  0060  F07C  F002   	movff	setLED@g+1,___lmul@multiplier+1
  9999  004114  0060  F080  F003   	movff	setLED@g+2,___lmul@multiplier+2
 10000  00411A  0060  F084  F004   	movff	setLED@g+3,___lmul@multiplier+3
 10001  004120  0E14               	movlw	20
 10002  004122  6E05               	movwf	___lmul@multiplicand^0,c
 10003  004124  0E00               	movlw	0
 10004  004126  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10005  004128  0E00               	movlw	0
 10006  00412A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10007  00412C  0E00               	movlw	0
 10008  00412E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10009  004130  EC4F  F02C         	call	___lmul	;wreg free
 10010  004134  0060  F004  F00D   	movff	?___lmul,___lldiv@dividend
 10011  00413A  0060  F008  F00E   	movff	?___lmul+1,___lldiv@dividend+1
 10012  004140  0060  F00C  F00F   	movff	?___lmul+2,___lldiv@dividend+2
 10013  004146  0060  F010  F010   	movff	?___lmul+3,___lldiv@dividend+3
 10014  00414C  0E64               	movlw	100
 10015  00414E  6E11               	movwf	___lldiv@divisor^0,c
 10016  004150  0E00               	movlw	0
 10017  004152  6E12               	movwf	(___lldiv@divisor+1)^0,c
 10018  004154  0E00               	movlw	0
 10019  004156  6E13               	movwf	(___lldiv@divisor+2)^0,c
 10020  004158  0E00               	movlw	0
 10021  00415A  6E14               	movwf	(___lldiv@divisor+3)^0,c
 10022  00415C  EC40  F02A         	call	___lldiv	;wreg free
 10023  004160  0060  F034  F042   	movff	?___lldiv,setLED@sg
 10024  004166  0060  F038  F043   	movff	?___lldiv+1,setLED@sg+1
 10025  00416C  0060  F03C  F044   	movff	?___lldiv+2,setLED@sg+2
 10026  004172  0060  F040  F045   	movff	?___lldiv+3,setLED@sg+3
 10027                           
 10028                           ;main.c: 96:     uint32_t sb = b * 20 / 100;
 10029  004178  0060  F088  F001   	movff	setLED@b,___lmul@multiplier
 10030  00417E  0060  F08C  F002   	movff	setLED@b+1,___lmul@multiplier+1
 10031  004184  0060  F090  F003   	movff	setLED@b+2,___lmul@multiplier+2
 10032  00418A  0060  F094  F004   	movff	setLED@b+3,___lmul@multiplier+3
 10033  004190  0E14               	movlw	20
 10034  004192  6E05               	movwf	___lmul@multiplicand^0,c
 10035  004194  0E00               	movlw	0
 10036  004196  6E06               	movwf	(___lmul@multiplicand+1)^0,c
 10037  004198  0E00               	movlw	0
 10038  00419A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
 10039  00419C  0E00               	movlw	0
 10040  00419E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
 10041  0041A0  EC4F  F02C         	call	___lmul	;wreg free
 10042  0041A4  0060  F004  F00D   	movff	?___lmul,___lldiv@dividend
 10043  0041AA  0060  F008  F00E   	movff	?___lmul+1,___lldiv@dividend+1
 10044  0041B0  0060  F00C  F00F   	movff	?___lmul+2,___lldiv@dividend+2
 10045  0041B6  0060  F010  F010   	movff	?___lmul+3,___lldiv@dividend+3
 10046  0041BC  0E64               	movlw	100
 10047  0041BE  6E11               	movwf	___lldiv@divisor^0,c
 10048  0041C0  0E00               	movlw	0
 10049  0041C2  6E12               	movwf	(___lldiv@divisor+1)^0,c
 10050  0041C4  0E00               	movlw	0
 10051  0041C6  6E13               	movwf	(___lldiv@divisor+2)^0,c
 10052  0041C8  0E00               	movlw	0
 10053  0041CA  6E14               	movwf	(___lldiv@divisor+3)^0,c
 10054  0041CC  EC40  F02A         	call	___lldiv	;wreg free
 10055  0041D0  0060  F034  F046   	movff	?___lldiv,setLED@sb
 10056  0041D6  0060  F038  F047   	movff	?___lldiv+1,setLED@sb+1
 10057  0041DC  0060  F03C  F048   	movff	?___lldiv+2,setLED@sb+2
 10058  0041E2  0060  F040  F049   	movff	?___lldiv+3,setLED@sb+3
 10059                           
 10060                           ;main.c: 98:     CCPR3H = (sr < 4095 ? sr : 4095) >> 8;
 10061  0041E8  5041               	movf	(setLED@sr+3)^0,w,c
 10062  0041EA  1040               	iorwf	(setLED@sr+2)^0,w,c
 10063  0041EC  E105               	bnz	u5620
 10064  0041EE  283E               	incf	setLED@sr^0,w,c
 10065  0041F0  0E0F               	movlw	15
 10066  0041F2  583F               	subwfb	(setLED@sr+1)^0,w,c
 10067  0041F4  A0D8               	btfss	status,0,c
 10068  0041F6  D009               	goto	l192
 10069  0041F8                     u5620:
 10070  0041F8  0EFF               	movlw	255
 10071  0041FA  6E32               	movwf	_setLED$283^0,c
 10072  0041FC  0E0F               	movlw	15
 10073  0041FE  6E33               	movwf	(_setLED$283+1)^0,c
 10074  004200  0E00               	movlw	0
 10075  004202  6E34               	movwf	(_setLED$283+2)^0,c
 10076  004204  0E00               	movlw	0
 10077  004206  6E35               	movwf	(_setLED$283+3)^0,c
 10078  004208  D00C               	goto	l194
 10079  00420A                     l192:
 10080  00420A  0060  F0F8  F032   	movff	setLED@sr,_setLED$283
 10081  004210  0060  F0FC  F033   	movff	setLED@sr+1,_setLED$283+1
 10082  004216  0060  F100  F034   	movff	setLED@sr+2,_setLED$283+2
 10083  00421C  0060  F104  F035   	movff	setLED@sr+3,_setLED$283+3
 10084  004222                     l194:
 10085  004222  0060  F0CF  FF75   	movff	_setLED$283+1,16245	;volatile
 10086                           
 10087                           ;main.c: 99:     CCPR3L = (sr < 4095 ? sr : 4095) & 0xff;
 10088  004228  5041               	movf	(setLED@sr+3)^0,w,c
 10089  00422A  1040               	iorwf	(setLED@sr+2)^0,w,c
 10090  00422C  E105               	bnz	u5630
 10091  00422E  283E               	incf	setLED@sr^0,w,c
 10092  004230  0E0F               	movlw	15
 10093  004232  583F               	subwfb	(setLED@sr+1)^0,w,c
 10094  004234  A0D8               	btfss	status,0,c
 10095  004236  D009               	goto	l196
 10096  004238                     u5630:
 10097  004238  0EFF               	movlw	255
 10098  00423A  6E26               	movwf	_setLED$284^0,c
 10099  00423C  0E0F               	movlw	15
 10100  00423E  6E27               	movwf	(_setLED$284+1)^0,c
 10101  004240  0E00               	movlw	0
 10102  004242  6E28               	movwf	(_setLED$284+2)^0,c
 10103  004244  0E00               	movlw	0
 10104  004246  6E29               	movwf	(_setLED$284+3)^0,c
 10105  004248  D00C               	goto	l198
 10106  00424A                     l196:
 10107  00424A  0060  F0F8  F026   	movff	setLED@sr,_setLED$284
 10108  004250  0060  F0FC  F027   	movff	setLED@sr+1,_setLED$284+1
 10109  004256  0060  F100  F028   	movff	setLED@sr+2,_setLED$284+2
 10110  00425C  0060  F104  F029   	movff	setLED@sr+3,_setLED$284+3
 10111  004262                     l198:
 10112  004262  0060  F09B  FF74   	movff	_setLED$284,16244	;volatile
 10113                           
 10114                           ;main.c: 100:     CCPR2H = (sg < 4095 ? sg : 4095) >> 8;
 10115  004268  5045               	movf	(setLED@sg+3)^0,w,c
 10116  00426A  1044               	iorwf	(setLED@sg+2)^0,w,c
 10117  00426C  E105               	bnz	u5640
 10118  00426E  2842               	incf	setLED@sg^0,w,c
 10119  004270  0E0F               	movlw	15
 10120  004272  5843               	subwfb	(setLED@sg+1)^0,w,c
 10121  004274  A0D8               	btfss	status,0,c
 10122  004276  D009               	goto	l200
 10123  004278                     u5640:
 10124  004278  0EFF               	movlw	255
 10125  00427A  6E36               	movwf	_setLED$285^0,c
 10126  00427C  0E0F               	movlw	15
 10127  00427E  6E37               	movwf	(_setLED$285+1)^0,c
 10128  004280  0E00               	movlw	0
 10129  004282  6E38               	movwf	(_setLED$285+2)^0,c
 10130  004284  0E00               	movlw	0
 10131  004286  6E39               	movwf	(_setLED$285+3)^0,c
 10132  004288  D00C               	goto	l202
 10133  00428A                     l200:
 10134  00428A  0060  F108  F036   	movff	setLED@sg,_setLED$285
 10135  004290  0060  F10C  F037   	movff	setLED@sg+1,_setLED$285+1
 10136  004296  0060  F110  F038   	movff	setLED@sg+2,_setLED$285+2
 10137  00429C  0060  F114  F039   	movff	setLED@sg+3,_setLED$285+3
 10138  0042A2                     l202:
 10139  0042A2  0060  F0DF  FF79   	movff	_setLED$285+1,16249	;volatile
 10140                           
 10141                           ;main.c: 101:     CCPR2L = (sg < 4095 ? sg : 4095) & 0xff;
 10142  0042A8  5045               	movf	(setLED@sg+3)^0,w,c
 10143  0042AA  1044               	iorwf	(setLED@sg+2)^0,w,c
 10144  0042AC  E105               	bnz	u5650
 10145  0042AE  2842               	incf	setLED@sg^0,w,c
 10146  0042B0  0E0F               	movlw	15
 10147  0042B2  5843               	subwfb	(setLED@sg+1)^0,w,c
 10148  0042B4  A0D8               	btfss	status,0,c
 10149  0042B6  D009               	goto	l204
 10150  0042B8                     u5650:
 10151  0042B8  0EFF               	movlw	255
 10152  0042BA  6E2A               	movwf	_setLED$286^0,c
 10153  0042BC  0E0F               	movlw	15
 10154  0042BE  6E2B               	movwf	(_setLED$286+1)^0,c
 10155  0042C0  0E00               	movlw	0
 10156  0042C2  6E2C               	movwf	(_setLED$286+2)^0,c
 10157  0042C4  0E00               	movlw	0
 10158  0042C6  6E2D               	movwf	(_setLED$286+3)^0,c
 10159  0042C8  D00C               	goto	l206
 10160  0042CA                     l204:
 10161  0042CA  0060  F108  F02A   	movff	setLED@sg,_setLED$286
 10162  0042D0  0060  F10C  F02B   	movff	setLED@sg+1,_setLED$286+1
 10163  0042D6  0060  F110  F02C   	movff	setLED@sg+2,_setLED$286+2
 10164  0042DC  0060  F114  F02D   	movff	setLED@sg+3,_setLED$286+3
 10165  0042E2                     l206:
 10166  0042E2  0060  F0AB  FF78   	movff	_setLED$286,16248	;volatile
 10167                           
 10168                           ;main.c: 102:     CCPR4H = (sb < 4095 ? sb : 4095) >> 8;
 10169  0042E8  5049               	movf	(setLED@sb+3)^0,w,c
 10170  0042EA  1048               	iorwf	(setLED@sb+2)^0,w,c
 10171  0042EC  E105               	bnz	u5660
 10172  0042EE  2846               	incf	setLED@sb^0,w,c
 10173  0042F0  0E0F               	movlw	15
 10174  0042F2  5847               	subwfb	(setLED@sb+1)^0,w,c
 10175  0042F4  A0D8               	btfss	status,0,c
 10176  0042F6  D009               	goto	l208
 10177  0042F8                     u5660:
 10178  0042F8  0EFF               	movlw	255
 10179  0042FA  6E3A               	movwf	_setLED$287^0,c
 10180  0042FC  0E0F               	movlw	15
 10181  0042FE  6E3B               	movwf	(_setLED$287+1)^0,c
 10182  004300  0E00               	movlw	0
 10183  004302  6E3C               	movwf	(_setLED$287+2)^0,c
 10184  004304  0E00               	movlw	0
 10185  004306  6E3D               	movwf	(_setLED$287+3)^0,c
 10186  004308  D00C               	goto	l210
 10187  00430A                     l208:
 10188  00430A  0060  F118  F03A   	movff	setLED@sb,_setLED$287
 10189  004310  0060  F11C  F03B   	movff	setLED@sb+1,_setLED$287+1
 10190  004316  0060  F120  F03C   	movff	setLED@sb+2,_setLED$287+2
 10191  00431C  0060  F124  F03D   	movff	setLED@sb+3,_setLED$287+3
 10192  004322                     l210:
 10193  004322  0060  F0EF  FF71   	movff	_setLED$287+1,16241	;volatile
 10194                           
 10195                           ;main.c: 103:     CCPR4L = (sb < 4095 ? sb : 4095) & 0xff;
 10196  004328  5049               	movf	(setLED@sb+3)^0,w,c
 10197  00432A  1048               	iorwf	(setLED@sb+2)^0,w,c
 10198  00432C  E105               	bnz	u5670
 10199  00432E  2846               	incf	setLED@sb^0,w,c
 10200  004330  0E0F               	movlw	15
 10201  004332  5847               	subwfb	(setLED@sb+1)^0,w,c
 10202  004334  A0D8               	btfss	status,0,c
 10203  004336  D009               	goto	l212
 10204  004338                     u5670:
 10205  004338  0EFF               	movlw	255
 10206  00433A  6E2E               	movwf	_setLED$288^0,c
 10207  00433C  0E0F               	movlw	15
 10208  00433E  6E2F               	movwf	(_setLED$288+1)^0,c
 10209  004340  0E00               	movlw	0
 10210  004342  6E30               	movwf	(_setLED$288+2)^0,c
 10211  004344  0E00               	movlw	0
 10212  004346  6E31               	movwf	(_setLED$288+3)^0,c
 10213  004348  D00C               	goto	l214
 10214  00434A                     l212:
 10215  00434A  0060  F118  F02E   	movff	setLED@sb,_setLED$288
 10216  004350  0060  F11C  F02F   	movff	setLED@sb+1,_setLED$288+1
 10217  004356  0060  F120  F030   	movff	setLED@sb+2,_setLED$288+2
 10218  00435C  0060  F124  F031   	movff	setLED@sb+3,_setLED$288+3
 10219  004362                     l214:
 10220  004362  0060  F0BB  FF70   	movff	_setLED$288,16240	;volatile
 10221  004368  0012               	return		;funcret
 10222  00436A                     __end_of_setLED:
 10223                           	opt callstack 0
 10224                           
 10225 ;; *************** function ___lmul *****************
 10226 ;; Defined at:
 10227 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 10228 ;; Parameters:    Size  Location     Type
 10229 ;;  multiplier      4    0[COMRAM] unsigned long 
 10230 ;;  multiplicand    4    4[COMRAM] unsigned long 
 10231 ;; Auto vars:     Size  Location     Type
 10232 ;;  product         4    8[COMRAM] unsigned long 
 10233 ;; Return value:  Size  Location     Type
 10234 ;;                  4    0[COMRAM] unsigned long 
 10235 ;; Registers used:
 10236 ;;		wreg, status,2, status,0
 10237 ;; Tracked objects:
 10238 ;;		On entry : 0/0
 10239 ;;		On exit  : 0/0
 10240 ;;		Unchanged: 0/0
 10241 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10242 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10243 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10245 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10246 ;;Total ram usage:       12 bytes
 10247 ;; Hardware stack levels used:    1
 10248 ;; This function calls:
 10249 ;;		Nothing
 10250 ;; This function is called by:
 10251 ;;		_setLED
 10252 ;;		_main_loop
 10253 ;; This function uses a non-reentrant model
 10254 ;;
 10255                           
 10256                           	psect	text38
 10257  00589E                     __ptext38:
 10258                           	opt callstack 0
 10259  00589E                     ___lmul:
 10260                           	opt callstack 28
 10261                           
 10262                           ;incstack = 0
 10263  00589E  0E00               	movlw	0
 10264  0058A0  6E09               	movwf	___lmul@product^0,c
 10265  0058A2  0E00               	movlw	0
 10266  0058A4  6E0A               	movwf	(___lmul@product+1)^0,c
 10267  0058A6  0E00               	movlw	0
 10268  0058A8  6E0B               	movwf	(___lmul@product+2)^0,c
 10269  0058AA  0E00               	movlw	0
 10270  0058AC  6E0C               	movwf	(___lmul@product+3)^0,c
 10271  0058AE                     l4624:
 10272  0058AE  A001               	btfss	___lmul@multiplier^0,0,c
 10273  0058B0  D008               	goto	l4628
 10274  0058B2  5005               	movf	___lmul@multiplicand^0,w,c
 10275  0058B4  2609               	addwf	___lmul@product^0,f,c
 10276  0058B6  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 10277  0058B8  220A               	addwfc	(___lmul@product+1)^0,f,c
 10278  0058BA  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 10279  0058BC  220B               	addwfc	(___lmul@product+2)^0,f,c
 10280  0058BE  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 10281  0058C0  220C               	addwfc	(___lmul@product+3)^0,f,c
 10282  0058C2                     l4628:
 10283  0058C2  90D8               	bcf	status,0,c
 10284  0058C4  3605               	rlcf	___lmul@multiplicand^0,f,c
 10285  0058C6  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 10286  0058C8  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 10287  0058CA  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 10288  0058CC  90D8               	bcf	status,0,c
 10289  0058CE  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 10290  0058D0  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 10291  0058D2  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 10292  0058D4  3201               	rrcf	___lmul@multiplier^0,f,c
 10293  0058D6  5001               	movf	___lmul@multiplier^0,w,c
 10294  0058D8  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 10295  0058DA  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 10296  0058DC  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 10297  0058DE  A4D8               	btfss	status,2,c
 10298  0058E0  D7E6               	goto	l4624
 10299  0058E2  0060  F024  F001   	movff	___lmul@product,?___lmul
 10300  0058E8  0060  F028  F002   	movff	___lmul@product+1,?___lmul+1
 10301  0058EE  0060  F02C  F003   	movff	___lmul@product+2,?___lmul+2
 10302  0058F4  0060  F030  F004   	movff	___lmul@product+3,?___lmul+3
 10303  0058FA  0012               	return		;funcret
 10304  0058FC                     __end_of___lmul:
 10305                           	opt callstack 0
 10306                           
 10307 ;; *************** function ___lldiv *****************
 10308 ;; Defined at:
 10309 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 10310 ;; Parameters:    Size  Location     Type
 10311 ;;  dividend        4   12[COMRAM] unsigned long 
 10312 ;;  divisor         4   16[COMRAM] unsigned long 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  quotient        4   20[COMRAM] unsigned long 
 10315 ;;  counter         1   24[COMRAM] unsigned char 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  4   12[COMRAM] unsigned long 
 10318 ;; Registers used:
 10319 ;;		wreg, status,2, status,0
 10320 ;; Tracked objects:
 10321 ;;		On entry : 0/4
 10322 ;;		On exit  : 0/0
 10323 ;;		Unchanged: 0/0
 10324 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10325 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10326 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10328 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10329 ;;Total ram usage:       13 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		_setLED
 10335 ;;		_main_loop
 10336 ;; This function uses a non-reentrant model
 10337 ;;
 10338                           
 10339                           	psect	text39
 10340  005480                     __ptext39:
 10341                           	opt callstack 0
 10342  005480                     ___lldiv:
 10343                           	opt callstack 28
 10344                           
 10345                           ;incstack = 0
 10346  005480  0E00               	movlw	0
 10347  005482  6E15               	movwf	___lldiv@quotient^0,c
 10348  005484  0E00               	movlw	0
 10349  005486  6E16               	movwf	(___lldiv@quotient+1)^0,c
 10350  005488  0E00               	movlw	0
 10351  00548A  6E17               	movwf	(___lldiv@quotient+2)^0,c
 10352  00548C  0E00               	movlw	0
 10353  00548E  6E18               	movwf	(___lldiv@quotient+3)^0,c
 10354  005490  5011               	movf	___lldiv@divisor^0,w,c
 10355  005492  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
 10356  005494  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
 10357  005496  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
 10358  005498  B4D8               	btfsc	status,2,c
 10359  00549A  D02A               	goto	l685
 10360  00549C  0E01               	movlw	1
 10361  00549E  6E19               	movwf	___lldiv@counter^0,c
 10362  0054A0  D006               	goto	l4640
 10363  0054A2                     l4638:
 10364  0054A2  90D8               	bcf	status,0,c
 10365  0054A4  3611               	rlcf	___lldiv@divisor^0,f,c
 10366  0054A6  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
 10367  0054A8  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
 10368  0054AA  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
 10369  0054AC  2A19               	incf	___lldiv@counter^0,f,c
 10370  0054AE                     l4640:
 10371  0054AE  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
 10372  0054B0  D7F8               	goto	l4638
 10373  0054B2                     u5600:
 10374  0054B2  90D8               	bcf	status,0,c
 10375  0054B4  3615               	rlcf	___lldiv@quotient^0,f,c
 10376  0054B6  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
 10377  0054B8  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
 10378  0054BA  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
 10379  0054BC  5011               	movf	___lldiv@divisor^0,w,c
 10380  0054BE  5C0D               	subwf	___lldiv@dividend^0,w,c
 10381  0054C0  5012               	movf	(___lldiv@divisor+1)^0,w,c
 10382  0054C2  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
 10383  0054C4  5013               	movf	(___lldiv@divisor+2)^0,w,c
 10384  0054C6  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
 10385  0054C8  5014               	movf	(___lldiv@divisor+3)^0,w,c
 10386  0054CA  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
 10387  0054CC  A0D8               	btfss	status,0,c
 10388  0054CE  D009               	goto	l4650
 10389  0054D0  5011               	movf	___lldiv@divisor^0,w,c
 10390  0054D2  5E0D               	subwf	___lldiv@dividend^0,f,c
 10391  0054D4  5012               	movf	(___lldiv@divisor+1)^0,w,c
 10392  0054D6  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
 10393  0054D8  5013               	movf	(___lldiv@divisor+2)^0,w,c
 10394  0054DA  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
 10395  0054DC  5014               	movf	(___lldiv@divisor+3)^0,w,c
 10396  0054DE  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
 10397  0054E0  8015               	bsf	___lldiv@quotient^0,0,c
 10398  0054E2                     l4650:
 10399  0054E2  90D8               	bcf	status,0,c
 10400  0054E4  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
 10401  0054E6  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
 10402  0054E8  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
 10403  0054EA  3211               	rrcf	___lldiv@divisor^0,f,c
 10404  0054EC  2E19               	decfsz	___lldiv@counter^0,f,c
 10405  0054EE  D7E1               	goto	u5600
 10406  0054F0                     l685:
 10407  0054F0  0060  F054  F00D   	movff	___lldiv@quotient,?___lldiv
 10408  0054F6  0060  F058  F00E   	movff	___lldiv@quotient+1,?___lldiv+1
 10409  0054FC  0060  F05C  F00F   	movff	___lldiv@quotient+2,?___lldiv+2
 10410  005502  0060  F060  F010   	movff	___lldiv@quotient+3,?___lldiv+3
 10411  005508  0012               	return		;funcret
 10412  00550A                     __end_of___lldiv:
 10413                           	opt callstack 0
 10414                           
 10415 ;; *************** function _lcd_set_data_addr *****************
 10416 ;; Defined at:
 10417 ;;		line 39 in file "char_lcd.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;  addr            1    wreg     unsigned char 
 10420 ;; Auto vars:     Size  Location     Type
 10421 ;;  addr            1    4[COMRAM] unsigned char 
 10422 ;; Return value:  Size  Location     Type
 10423 ;;                  1    wreg      void 
 10424 ;; Registers used:
 10425 ;;		wreg, status,2, status,0, cstack
 10426 ;; Tracked objects:
 10427 ;;		On entry : 3F/0
 10428 ;;		On exit  : 0/0
 10429 ;;		Unchanged: 0/0
 10430 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10432 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10434 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10435 ;;Total ram usage:        1 bytes
 10436 ;; Hardware stack levels used:    1
 10437 ;; Hardware stack levels required when called:    1
 10438 ;; This function calls:
 10439 ;;		_lcd_write
 10440 ;; This function is called by:
 10441 ;;		_main_loop
 10442 ;; This function uses a non-reentrant model
 10443 ;;
 10444                           
 10445                           	psect	text40
 10446  005BEE                     __ptext40:
 10447                           	opt callstack 0
 10448  005BEE                     _lcd_set_data_addr:
 10449                           	opt callstack 28
 10450                           
 10451                           ;incstack = 0
 10452                           ;lcd_set_data_addr@addr stored from wreg
 10453  005BEE  6E05               	movwf	lcd_set_data_addr@addr^0,c
 10454                           
 10455                           ;char_lcd.c: 40:     lcd_write(0, 0b10000000 | (addr & 0b01111111), 0);
 10456  005BF0  5005               	movf	lcd_set_data_addr@addr^0,w,c
 10457  005BF2  0B7F               	andlw	127
 10458  005BF4  0980               	iorlw	128
 10459  005BF6  6E01               	movwf	lcd_write@data^0,c
 10460  005BF8  0E00               	movlw	0
 10461  005BFA  6E02               	movwf	lcd_write@longdelay^0,c
 10462  005BFC  0E00               	movlw	0
 10463  005BFE  ECD2  F02C         	call	_lcd_write
 10464  005C02  0012               	return		;funcret
 10465  005C04                     __end_of_lcd_set_data_addr:
 10466                           	opt callstack 0
 10467                           
 10468 ;; *************** function _lcd_print *****************
 10469 ;; Defined at:
 10470 ;;		line 54 in file "char_lcd.c"
 10471 ;; Parameters:    Size  Location     Type
 10472 ;;  string          2    4[COMRAM] PTR unsigned char 
 10473 ;;		 -> STR_6(13), main_loop@batmsg(16), 
 10474 ;; Auto vars:     Size  Location     Type
 10475 ;;  i               1    8[COMRAM] unsigned char 
 10476 ;; Return value:  Size  Location     Type
 10477 ;;                  1    wreg      void 
 10478 ;; Registers used:
 10479 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10480 ;; Tracked objects:
 10481 ;;		On entry : 0/3F
 10482 ;;		On exit  : 0/0
 10483 ;;		Unchanged: 0/0
 10484 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10485 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10486 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10487 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10488 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10489 ;;Total ram usage:        5 bytes
 10490 ;; Hardware stack levels used:    1
 10491 ;; Hardware stack levels required when called:    1
 10492 ;; This function calls:
 10493 ;;		_lcd_write
 10494 ;; This function is called by:
 10495 ;;		_main_loop
 10496 ;;		_main
 10497 ;; This function uses a non-reentrant model
 10498 ;;
 10499                           
 10500                           	psect	text41
 10501  005368                     __ptext41:
 10502                           	opt callstack 0
 10503  005368                     _lcd_print:
 10504                           	opt callstack 28
 10505                           
 10506                           ;char_lcd.c: 55:     uint8_t i = 0;
 10507                           
 10508                           ;incstack = 0
 10509  005368  0E00               	movlw	0
 10510  00536A  6E09               	movwf	lcd_print@i^0,c
 10511                           
 10512                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 10513  00536C  D022               	goto	l4700
 10514  00536E                     l4696:
 10515                           
 10516                           ;char_lcd.c: 57:         lcd_write(1, string[i++], 0);
 10517  00536E  5009               	movf	lcd_print@i^0,w,c
 10518  005370  2405               	addwf	lcd_print@string^0,w,c
 10519  005372  6E07               	movwf	??_lcd_print^0,c
 10520  005374  0E00               	movlw	0
 10521  005376  2006               	addwfc	(lcd_print@string+1)^0,w,c
 10522  005378  6E08               	movwf	(??_lcd_print+1)^0,c
 10523  00537A  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 10524  005380  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 10525  005386  0E00               	movlw	low (__smallconst shr (0+16))
 10526  005388  6EF8               	movwf	tblptru,c
 10527  00538A  0E1F               	movlw	(high __ramtop+-1)
 10528  00538C  64F7               	cpfsgt	tblptrh,c
 10529  00538E  D003               	bra	u5687
 10530  005390  0008               	tblrd		*
 10531  005392  50F5               	movf	tablat,w,c
 10532  005394  D007               	bra	u5680
 10533  005396                     u5687:
 10534  005396  006F FFDB FFE1     	movff	tblptrl,fsr1l
 10535  00539C  006F FFDF FFE2     	movff	tblptrh,fsr1h
 10536  0053A2  50E7               	movf	indf1,w,c
 10537  0053A4                     u5680:
 10538  0053A4  6E01               	movwf	lcd_write@data^0,c
 10539  0053A6  0E00               	movlw	0
 10540  0053A8  6E02               	movwf	lcd_write@longdelay^0,c
 10541  0053AA  0E01               	movlw	1
 10542  0053AC  ECD2  F02C         	call	_lcd_write
 10543  0053B0  2A09               	incf	lcd_print@i^0,f,c
 10544  0053B2                     l4700:
 10545                           
 10546                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 10547  0053B2  5009               	movf	lcd_print@i^0,w,c
 10548  0053B4  2405               	addwf	lcd_print@string^0,w,c
 10549  0053B6  6E07               	movwf	??_lcd_print^0,c
 10550  0053B8  0E00               	movlw	0
 10551  0053BA  2006               	addwfc	(lcd_print@string+1)^0,w,c
 10552  0053BC  6E08               	movwf	(??_lcd_print+1)^0,c
 10553  0053BE  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 10554  0053C4  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 10555  0053CA  0E00               	movlw	low (__smallconst shr (0+16))
 10556  0053CC  6EF8               	movwf	tblptru,c
 10557  0053CE  0E1F               	movlw	(high __ramtop+-1)
 10558  0053D0  64F7               	cpfsgt	tblptrh,c
 10559  0053D2  D003               	bra	u5697
 10560  0053D4  0008               	tblrd		*
 10561  0053D6  50F5               	movf	tablat,w,c
 10562  0053D8  D007               	bra	u5690
 10563  0053DA                     u5697:
 10564  0053DA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 10565  0053E0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 10566  0053E6  50E7               	movf	indf1,w,c
 10567  0053E8                     u5690:
 10568  0053E8  0900               	iorlw	0
 10569  0053EA  B4D8               	btfsc	status,2,c
 10570  0053EC  0012               	return	
 10571  0053EE  2809               	incf	lcd_print@i^0,w,c
 10572  0053F0  B4D8               	btfsc	status,2,c
 10573  0053F2  0012               	return	
 10574  0053F4  D7BC               	goto	l4696
 10575  0053F6                     __end_of_lcd_print:
 10576                           	opt callstack 0
 10577                           
 10578 ;; *************** function ___xxtofl *****************
 10579 ;; Defined at:
 10580 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 10581 ;; Parameters:    Size  Location     Type
 10582 ;;  sign            1    wreg     unsigned char 
 10583 ;;  val             4    0[COMRAM] long 
 10584 ;; Auto vars:     Size  Location     Type
 10585 ;;  sign            1    8[COMRAM] unsigned char 
 10586 ;;  arg             4   10[COMRAM] unsigned long 
 10587 ;;  exp             1    9[COMRAM] unsigned char 
 10588 ;; Return value:  Size  Location     Type
 10589 ;;                  4    0[COMRAM] unsigned char 
 10590 ;; Registers used:
 10591 ;;		wreg, status,2, status,0
 10592 ;; Tracked objects:
 10593 ;;		On entry : 0/4
 10594 ;;		On exit  : 0/0
 10595 ;;		Unchanged: 0/0
 10596 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10597 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10598 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10599 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10600 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10601 ;;Total ram usage:       14 bytes
 10602 ;; Hardware stack levels used:    1
 10603 ;; This function calls:
 10604 ;;		Nothing
 10605 ;; This function is called by:
 10606 ;;		_main_loop
 10607 ;; This function uses a non-reentrant model
 10608 ;;
 10609                           
 10610                           	psect	text42
 10611  004C44                     __ptext42:
 10612                           	opt callstack 0
 10613  004C44                     ___xxtofl:
 10614                           	opt callstack 29
 10615                           
 10616                           ;incstack = 0
 10617                           ;___xxtofl@sign stored from wreg
 10618  004C44  6E09               	movwf	___xxtofl@sign^0,c
 10619  004C46  5009               	movf	___xxtofl@sign^0,w,c
 10620  004C48  A4D8               	btfss	status,2,c
 10621  004C4A  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 10622  004C4C  D022               	goto	l1313
 10623  004C4E  0060  F004  F005   	movff	___xxtofl@val,??___xxtofl
 10624  004C54  0060  F008  F006   	movff	___xxtofl@val+1,??___xxtofl+1
 10625  004C5A  0060  F00C  F007   	movff	___xxtofl@val+2,??___xxtofl+2
 10626  004C60  0060  F010  F008   	movff	___xxtofl@val+3,??___xxtofl+3
 10627  004C66  1E05               	comf	??___xxtofl^0,f,c
 10628  004C68  1E06               	comf	(??___xxtofl+1)^0,f,c
 10629  004C6A  1E07               	comf	(??___xxtofl+2)^0,f,c
 10630  004C6C  1E08               	comf	(??___xxtofl+3)^0,f,c
 10631  004C6E  2A05               	incf	??___xxtofl^0,f,c
 10632  004C70  0E00               	movlw	0
 10633  004C72  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10634  004C74  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10635  004C76  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10636  004C78  0060  F014  F00B   	movff	??___xxtofl,___xxtofl@arg
 10637  004C7E  0060  F018  F00C   	movff	??___xxtofl+1,___xxtofl@arg+1
 10638  004C84  0060  F01C  F00D   	movff	??___xxtofl+2,___xxtofl@arg+2
 10639  004C8A  0060  F020  F00E   	movff	??___xxtofl+3,___xxtofl@arg+3
 10640  004C90  D00C               	goto	l4812
 10641  004C92                     l1313:
 10642  004C92  0060  F004  F00B   	movff	___xxtofl@val,___xxtofl@arg
 10643  004C98  0060  F008  F00C   	movff	___xxtofl@val+1,___xxtofl@arg+1
 10644  004C9E  0060  F00C  F00D   	movff	___xxtofl@val+2,___xxtofl@arg+2
 10645  004CA4  0060  F010  F00E   	movff	___xxtofl@val+3,___xxtofl@arg+3
 10646  004CAA                     l4812:
 10647  004CAA  5001               	movf	___xxtofl@val^0,w,c
 10648  004CAC  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10649  004CAE  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10650  004CB0  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10651  004CB2  A4D8               	btfss	status,2,c
 10652  004CB4  D009               	goto	l4818
 10653  004CB6  0E00               	movlw	0
 10654  004CB8  6E01               	movwf	?___xxtofl^0,c
 10655  004CBA  0E00               	movlw	0
 10656  004CBC  6E02               	movwf	(?___xxtofl+1)^0,c
 10657  004CBE  0E00               	movlw	0
 10658  004CC0  6E03               	movwf	(?___xxtofl+2)^0,c
 10659  004CC2  0E00               	movlw	0
 10660  004CC4  6E04               	movwf	(?___xxtofl+3)^0,c
 10661  004CC6  0012               	return	
 10662  004CC8                     l4818:
 10663  004CC8  0E96               	movlw	150
 10664  004CCA  6E0A               	movwf	___xxtofl@exp^0,c
 10665  004CCC  D006               	goto	l4822
 10666  004CCE                     l4820:
 10667  004CCE  2A0A               	incf	___xxtofl@exp^0,f,c
 10668  004CD0  90D8               	bcf	status,0,c
 10669  004CD2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10670  004CD4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10671  004CD6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10672  004CD8  320B               	rrcf	___xxtofl@arg^0,f,c
 10673  004CDA                     l4822:
 10674  004CDA  0E00               	movlw	0
 10675  004CDC  140B               	andwf	___xxtofl@arg^0,w,c
 10676  004CDE  6E05               	movwf	??___xxtofl^0,c
 10677  004CE0  0E00               	movlw	0
 10678  004CE2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10679  004CE4  6E06               	movwf	(??___xxtofl+1)^0,c
 10680  004CE6  0E00               	movlw	0
 10681  004CE8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10682  004CEA  6E07               	movwf	(??___xxtofl+2)^0,c
 10683  004CEC  0EFE               	movlw	254
 10684  004CEE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10685  004CF0  6E08               	movwf	(??___xxtofl+3)^0,c
 10686  004CF2  5005               	movf	??___xxtofl^0,w,c
 10687  004CF4  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10688  004CF6  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10689  004CF8  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10690  004CFA  B4D8               	btfsc	status,2,c
 10691  004CFC  D00D               	goto	l1320
 10692  004CFE  D7E7               	goto	l4820
 10693  004D00                     l4824:
 10694  004D00  2A0A               	incf	___xxtofl@exp^0,f,c
 10695  004D02  0E01               	movlw	1
 10696  004D04  260B               	addwf	___xxtofl@arg^0,f,c
 10697  004D06  0E00               	movlw	0
 10698  004D08  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10699  004D0A  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10700  004D0C  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10701  004D0E  90D8               	bcf	status,0,c
 10702  004D10  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10703  004D12  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10704  004D14  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10705  004D16  320B               	rrcf	___xxtofl@arg^0,f,c
 10706  004D18                     l1320:
 10707  004D18  0E00               	movlw	0
 10708  004D1A  140B               	andwf	___xxtofl@arg^0,w,c
 10709  004D1C  6E05               	movwf	??___xxtofl^0,c
 10710  004D1E  0E00               	movlw	0
 10711  004D20  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10712  004D22  6E06               	movwf	(??___xxtofl+1)^0,c
 10713  004D24  0E00               	movlw	0
 10714  004D26  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10715  004D28  6E07               	movwf	(??___xxtofl+2)^0,c
 10716  004D2A  0EFF               	movlw	255
 10717  004D2C  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10718  004D2E  6E08               	movwf	(??___xxtofl+3)^0,c
 10719  004D30  5005               	movf	??___xxtofl^0,w,c
 10720  004D32  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10721  004D34  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10722  004D36  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10723  004D38  B4D8               	btfsc	status,2,c
 10724  004D3A  D007               	goto	l4832
 10725  004D3C  D7E1               	goto	l4824
 10726  004D3E                     l4830:
 10727  004D3E  060A               	decf	___xxtofl@exp^0,f,c
 10728  004D40  90D8               	bcf	status,0,c
 10729  004D42  360B               	rlcf	___xxtofl@arg^0,f,c
 10730  004D44  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10731  004D46  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10732  004D48  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10733  004D4A                     l4832:
 10734  004D4A  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10735  004D4C  D003               	goto	u5940
 10736  004D4E  0E02               	movlw	2
 10737  004D50  600A               	cpfslt	___xxtofl@exp^0,c
 10738  004D52  D7F5               	goto	l4830
 10739  004D54                     u5940:
 10740  004D54  A00A               	btfss	___xxtofl@exp^0,0,c
 10741  004D56  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10742  004D58  90D8               	bcf	status,0,c
 10743  004D5A  320A               	rrcf	___xxtofl@exp^0,f,c
 10744  004D5C  0060  F028  F005   	movff	___xxtofl@exp,??___xxtofl
 10745  004D62  6A06               	clrf	(??___xxtofl+1)^0,c
 10746  004D64  6A07               	clrf	(??___xxtofl+2)^0,c
 10747  004D66  6A08               	clrf	(??___xxtofl+3)^0,c
 10748  004D68  0060  F014  F008   	movff	??___xxtofl,??___xxtofl+3
 10749  004D6E  6A07               	clrf	(??___xxtofl+2)^0,c
 10750  004D70  6A06               	clrf	(??___xxtofl+1)^0,c
 10751  004D72  6A05               	clrf	??___xxtofl^0,c
 10752  004D74  5005               	movf	??___xxtofl^0,w,c
 10753  004D76  120B               	iorwf	___xxtofl@arg^0,f,c
 10754  004D78  5006               	movf	(??___xxtofl+1)^0,w,c
 10755  004D7A  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10756  004D7C  5007               	movf	(??___xxtofl+2)^0,w,c
 10757  004D7E  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10758  004D80  5008               	movf	(??___xxtofl+3)^0,w,c
 10759  004D82  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10760  004D84  5009               	movf	___xxtofl@sign^0,w,c
 10761  004D86  A4D8               	btfss	status,2,c
 10762  004D88  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 10763  004D8A  D001               	goto	l4848
 10764  004D8C  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10765  004D8E                     l4848:
 10766  004D8E  0060  F02C  F001   	movff	___xxtofl@arg,?___xxtofl
 10767  004D94  0060  F030  F002   	movff	___xxtofl@arg+1,?___xxtofl+1
 10768  004D9A  0060  F034  F003   	movff	___xxtofl@arg+2,?___xxtofl+2
 10769  004DA0  0060  F038  F004   	movff	___xxtofl@arg+3,?___xxtofl+3
 10770  004DA6  0012               	return		;funcret
 10771  004DA8                     __end_of___xxtofl:
 10772                           	opt callstack 0
 10773                           
 10774 ;; *************** function ___llmod *****************
 10775 ;; Defined at:
 10776 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 10777 ;; Parameters:    Size  Location     Type
 10778 ;;  dividend        4   25[COMRAM] unsigned long 
 10779 ;;  divisor         4   29[COMRAM] unsigned long 
 10780 ;; Auto vars:     Size  Location     Type
 10781 ;;  counter         1   33[COMRAM] unsigned char 
 10782 ;; Return value:  Size  Location     Type
 10783 ;;                  4   25[COMRAM] unsigned long 
 10784 ;; Registers used:
 10785 ;;		wreg, status,2, status,0
 10786 ;; Tracked objects:
 10787 ;;		On entry : 0/4
 10788 ;;		On exit  : 0/0
 10789 ;;		Unchanged: 0/0
 10790 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10791 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10792 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10793 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10794 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10795 ;;Total ram usage:        9 bytes
 10796 ;; Hardware stack levels used:    1
 10797 ;; This function calls:
 10798 ;;		Nothing
 10799 ;; This function is called by:
 10800 ;;		_main_loop
 10801 ;; This function uses a non-reentrant model
 10802 ;;
 10803                           
 10804                           	psect	text43
 10805  00576A                     __ptext43:
 10806                           	opt callstack 0
 10807  00576A                     ___llmod:
 10808                           	opt callstack 29
 10809                           
 10810                           ;incstack = 0
 10811  00576A  501E               	movf	___llmod@divisor^0,w,c
 10812  00576C  101F               	iorwf	(___llmod@divisor+1)^0,w,c
 10813  00576E  1020               	iorwf	(___llmod@divisor+2)^0,w,c
 10814  005770  1021               	iorwf	(___llmod@divisor+3)^0,w,c
 10815  005772  B4D8               	btfsc	status,2,c
 10816  005774  D024               	goto	l1078
 10817  005776  0E01               	movlw	1
 10818  005778  6E22               	movwf	___llmod@counter^0,c
 10819  00577A  D006               	goto	l4796
 10820  00577C                     l4794:
 10821  00577C  90D8               	bcf	status,0,c
 10822  00577E  361E               	rlcf	___llmod@divisor^0,f,c
 10823  005780  361F               	rlcf	(___llmod@divisor+1)^0,f,c
 10824  005782  3620               	rlcf	(___llmod@divisor+2)^0,f,c
 10825  005784  3621               	rlcf	(___llmod@divisor+3)^0,f,c
 10826  005786  2A22               	incf	___llmod@counter^0,f,c
 10827  005788                     l4796:
 10828  005788  AE21               	btfss	(___llmod@divisor+3)^0,7,c
 10829  00578A  D7F8               	goto	l4794
 10830  00578C                     u5860:
 10831  00578C  501E               	movf	___llmod@divisor^0,w,c
 10832  00578E  5C1A               	subwf	___llmod@dividend^0,w,c
 10833  005790  501F               	movf	(___llmod@divisor+1)^0,w,c
 10834  005792  581B               	subwfb	(___llmod@dividend+1)^0,w,c
 10835  005794  5020               	movf	(___llmod@divisor+2)^0,w,c
 10836  005796  581C               	subwfb	(___llmod@dividend+2)^0,w,c
 10837  005798  5021               	movf	(___llmod@divisor+3)^0,w,c
 10838  00579A  581D               	subwfb	(___llmod@dividend+3)^0,w,c
 10839  00579C  A0D8               	btfss	status,0,c
 10840  00579E  D008               	goto	l4802
 10841  0057A0  501E               	movf	___llmod@divisor^0,w,c
 10842  0057A2  5E1A               	subwf	___llmod@dividend^0,f,c
 10843  0057A4  501F               	movf	(___llmod@divisor+1)^0,w,c
 10844  0057A6  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
 10845  0057A8  5020               	movf	(___llmod@divisor+2)^0,w,c
 10846  0057AA  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
 10847  0057AC  5021               	movf	(___llmod@divisor+3)^0,w,c
 10848  0057AE  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
 10849  0057B0                     l4802:
 10850  0057B0  90D8               	bcf	status,0,c
 10851  0057B2  3221               	rrcf	(___llmod@divisor+3)^0,f,c
 10852  0057B4  3220               	rrcf	(___llmod@divisor+2)^0,f,c
 10853  0057B6  321F               	rrcf	(___llmod@divisor+1)^0,f,c
 10854  0057B8  321E               	rrcf	___llmod@divisor^0,f,c
 10855  0057BA  2E22               	decfsz	___llmod@counter^0,f,c
 10856  0057BC  D7E7               	goto	u5860
 10857  0057BE                     l1078:
 10858  0057BE  0060  F068  F01A   	movff	___llmod@dividend,?___llmod
 10859  0057C4  0060  F06C  F01B   	movff	___llmod@dividend+1,?___llmod+1
 10860  0057CA  0060  F070  F01C   	movff	___llmod@dividend+2,?___llmod+2
 10861  0057D0  0060  F074  F01D   	movff	___llmod@dividend+3,?___llmod+3
 10862  0057D6  0012               	return		;funcret
 10863  0057D8                     __end_of___llmod:
 10864                           	opt callstack 0
 10865                           
 10866 ;; *************** function _lcd_init *****************
 10867 ;; Defined at:
 10868 ;;		line 17 in file "char_lcd.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  inc             1    wreg     _Bool 
 10871 ;;  shift           1    4[COMRAM] _Bool 
 10872 ;;  cursor          1    5[COMRAM] _Bool 
 10873 ;;  cursorblink     1    6[COMRAM] _Bool 
 10874 ;;  on              1    7[COMRAM] _Bool 
 10875 ;; Auto vars:     Size  Location     Type
 10876 ;;  inc             1    9[COMRAM] _Bool 
 10877 ;; Return value:  Size  Location     Type
 10878 ;;                  1    wreg      void 
 10879 ;; Registers used:
 10880 ;;		wreg, status,2, status,0, cstack
 10881 ;; Tracked objects:
 10882 ;;		On entry : 0/3F
 10883 ;;		On exit  : 0/0
 10884 ;;		Unchanged: 0/0
 10885 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10887 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10889 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10890 ;;Total ram usage:        6 bytes
 10891 ;; Hardware stack levels used:    1
 10892 ;; Hardware stack levels required when called:    1
 10893 ;; This function calls:
 10894 ;;		_lcd_write
 10895 ;; This function is called by:
 10896 ;;		_main
 10897 ;; This function uses a non-reentrant model
 10898 ;;
 10899                           
 10900                           	psect	text44
 10901  005592                     __ptext44:
 10902                           	opt callstack 0
 10903  005592                     _lcd_init:
 10904                           	opt callstack 29
 10905                           
 10906                           ;incstack = 0
 10907                           ;lcd_init@inc stored from wreg
 10908  005592  6E0A               	movwf	lcd_init@inc^0,c
 10909                           
 10910                           ;char_lcd.c: 18:     lcd_write(0, 0b00110011, 0);
 10911  005594  0E33               	movlw	51
 10912  005596  6E01               	movwf	lcd_write@data^0,c
 10913  005598  0E00               	movlw	0
 10914  00559A  6E02               	movwf	lcd_write@longdelay^0,c
 10915  00559C  0E00               	movlw	0
 10916  00559E  ECD2  F02C         	call	_lcd_write
 10917                           
 10918                           ;char_lcd.c: 19:     lcd_write(0, 0b00110011, 0);
 10919  0055A2  0E33               	movlw	51
 10920  0055A4  6E01               	movwf	lcd_write@data^0,c
 10921  0055A6  0E00               	movlw	0
 10922  0055A8  6E02               	movwf	lcd_write@longdelay^0,c
 10923  0055AA  0E00               	movlw	0
 10924  0055AC  ECD2  F02C         	call	_lcd_write
 10925                           
 10926                           ;char_lcd.c: 20:     lcd_write(0, 0b00110011, 0);
 10927  0055B0  0E33               	movlw	51
 10928  0055B2  6E01               	movwf	lcd_write@data^0,c
 10929  0055B4  0E00               	movlw	0
 10930  0055B6  6E02               	movwf	lcd_write@longdelay^0,c
 10931  0055B8  0E00               	movlw	0
 10932  0055BA  ECD2  F02C         	call	_lcd_write
 10933                           
 10934                           ;char_lcd.c: 21:     lcd_write(0, 0b00111011, 0);
 10935  0055BE  0E3B               	movlw	59
 10936  0055C0  6E01               	movwf	lcd_write@data^0,c
 10937  0055C2  0E00               	movlw	0
 10938  0055C4  6E02               	movwf	lcd_write@longdelay^0,c
 10939  0055C6  0E00               	movlw	0
 10940  0055C8  ECD2  F02C         	call	_lcd_write
 10941                           
 10942                           ;char_lcd.c: 22:     lcd_write(0, 0b00000100 | (inc << 1) | shift, 0);
 10943  0055CC  500A               	movf	lcd_init@inc^0,w,c
 10944  0055CE  240A               	addwf	lcd_init@inc^0,w,c
 10945  0055D0  1005               	iorwf	lcd_init@shift^0,w,c
 10946  0055D2  0904               	iorlw	4
 10947  0055D4  6E01               	movwf	lcd_write@data^0,c
 10948  0055D6  0E00               	movlw	0
 10949  0055D8  6E02               	movwf	lcd_write@longdelay^0,c
 10950  0055DA  0E00               	movlw	0
 10951  0055DC  ECD2  F02C         	call	_lcd_write
 10952                           
 10953                           ;char_lcd.c: 23:     lcd_write(0, 0b00001000 | (on << 2) | (cursor << 1) | cursorblink ,
      +                           0);
 10954  0055E0  90D8               	bcf	status,0,c
 10955  0055E2  3406               	rlcf	lcd_init@cursor^0,w,c
 10956  0055E4  6E09               	movwf	??_lcd_init^0,c
 10957  0055E6  4408               	rlncf	lcd_init@on^0,w,c
 10958  0055E8  46E8               	rlncf	wreg,f,c
 10959  0055EA  0BFC               	andlw	252
 10960  0055EC  1009               	iorwf	??_lcd_init^0,w,c
 10961  0055EE  1007               	iorwf	lcd_init@cursorblink^0,w,c
 10962  0055F0  0908               	iorlw	8
 10963  0055F2  6E01               	movwf	lcd_write@data^0,c
 10964  0055F4  0E00               	movlw	0
 10965  0055F6  6E02               	movwf	lcd_write@longdelay^0,c
 10966  0055F8  0E00               	movlw	0
 10967  0055FA  ECD2  F02C         	call	_lcd_write
 10968                           
 10969                           ;char_lcd.c: 24:     lcd_write(0, 0b00000001, 1);
 10970  0055FE  0E01               	movlw	1
 10971  005600  6E01               	movwf	lcd_write@data^0,c
 10972  005602  0E01               	movlw	1
 10973  005604  6E02               	movwf	lcd_write@longdelay^0,c
 10974  005606  0E00               	movlw	0
 10975  005608  ECD2  F02C         	call	_lcd_write
 10976  00560C  0012               	return		;funcret
 10977  00560E                     __end_of_lcd_init:
 10978                           	opt callstack 0
 10979                           
 10980 ;; *************** function _lcd_write *****************
 10981 ;; Defined at:
 10982 ;;		line 3 in file "char_lcd.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  rs              1    wreg     _Bool 
 10985 ;;  data            1    0[COMRAM] unsigned char 
 10986 ;;  longdelay       1    1[COMRAM] _Bool 
 10987 ;; Auto vars:     Size  Location     Type
 10988 ;;  rs              1    3[COMRAM] _Bool 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  1    wreg      void 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10998 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10999 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11000 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11001 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11002 ;;Total ram usage:        4 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; This function calls:
 11005 ;;		Nothing
 11006 ;; This function is called by:
 11007 ;;		_lcd_init
 11008 ;;		_lcd_set_data_addr
 11009 ;;		_lcd_print
 11010 ;; This function uses a non-reentrant model
 11011 ;;
 11012                           
 11013                           	psect	text45
 11014  0059A4                     __ptext45:
 11015                           	opt callstack 0
 11016  0059A4                     _lcd_write:
 11017                           	opt callstack 28
 11018                           
 11019                           ;incstack = 0
 11020                           ;lcd_write@rs stored from wreg
 11021  0059A4  6E04               	movwf	lcd_write@rs^0,c
 11022                           
 11023                           ;char_lcd.c: 4:     LATE2 = 1;
 11024  0059A6  84BE               	bsf	16318,2,c	;volatile
 11025                           
 11026                           ;char_lcd.c: 5:     LATE1 = 0;
 11027  0059A8  92BE               	bcf	16318,1,c	;volatile
 11028                           
 11029                           ;char_lcd.c: 6:     LATE0 = rs;
 11030  0059AA  B004               	btfsc	lcd_write@rs^0,0,c
 11031  0059AC  D002               	bra	u5455
 11032  0059AE  90BE               	bcf	16318,0,c	;volatile
 11033  0059B0  D001               	bra	u5456
 11034  0059B2                     u5455:
 11035  0059B2  80BE               	bsf	16318,0,c	;volatile
 11036  0059B4                     u5456:
 11037                           
 11038                           ;char_lcd.c: 7:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 11039  0059B4  0E35               	movlw	53
 11040  0059B6                     u7297:
 11041  0059B6  2EE8               	decfsz	wreg,f,c
 11042  0059B8  D7FE               	bra	u7297
 11043  0059BA  F000               	nop	
 11044                           
 11045                           ;char_lcd.c: 8:     PORTA = data;
 11046  0059BC  0060  F007  FFCA   	movff	lcd_write@data,16330	;volatile
 11047                           
 11048                           ;char_lcd.c: 9:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 11049  0059C2  0E35               	movlw	53
 11050  0059C4                     u7307:
 11051  0059C4  2EE8               	decfsz	wreg,f,c
 11052  0059C6  D7FE               	bra	u7307
 11053  0059C8  F000               	nop	
 11054                           
 11055                           ;char_lcd.c: 10:     LATE2 = 0;
 11056  0059CA  94BE               	bcf	16318,2,c	;volatile
 11057                           
 11058                           ;char_lcd.c: 11:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 11059  0059CC  0E35               	movlw	53
 11060  0059CE                     u7317:
 11061  0059CE  2EE8               	decfsz	wreg,f,c
 11062  0059D0  D7FE               	bra	u7317
 11063  0059D2  F000               	nop	
 11064                           
 11065                           ;char_lcd.c: 12:     LATE2 = 1;
 11066  0059D4  84BE               	bsf	16318,2,c	;volatile
 11067                           
 11068                           ;char_lcd.c: 13:     if (longdelay) _delay((unsigned long)((2)*(64000000/4000.0)));
 11069  0059D6  5002               	movf	lcd_write@longdelay^0,w,c
 11070  0059D8  B4D8               	btfsc	status,2,c
 11071  0059DA  D008               	goto	l4594
 11072  0059DC  0E2A               	movlw	42
 11073  0059DE  6E03               	movwf	??_lcd_write^0,c
 11074  0059E0  0E8E               	movlw	142
 11075  0059E2                     u7327:
 11076  0059E2  2EE8               	decfsz	wreg,f,c
 11077  0059E4  D7FE               	bra	u7327
 11078  0059E6  2E03               	decfsz	??_lcd_write^0,f,c
 11079  0059E8  D7FC               	bra	u7327
 11080  0059EA  0012               	return	
 11081  0059EC                     l4594:
 11082  0059EC  0EA0               	movlw	160
 11083  0059EE                     u7337:
 11084  0059EE  D000               	nop2	
 11085  0059F0  2EE8               	decfsz	wreg,f,c
 11086  0059F2  D7FD               	bra	u7337
 11087  0059F4  0012               	return		;funcret
 11088  0059F6                     __end_of_lcd_write:
 11089                           	opt callstack 0
 11090                           
 11091                           	psect	rparam
 11092  0000                     tosu	equ	0x3FFF
 11093                           tosh	equ	0x3FFE
 11094                           tosl	equ	0x3FFD
 11095                           stkptr	equ	0x3FFC
 11096                           pclatu	equ	0x3FFB
 11097                           pclath	equ	0x3FFA
 11098                           pcl	equ	0x3FF9
 11099                           tblptru	equ	0x3FF8
 11100                           tblptrh	equ	0x3FF7
 11101                           tblptrl	equ	0x3FF6
 11102                           tablat	equ	0x3FF5
 11103                           prodh	equ	0x3FF4
 11104                           prodl	equ	0x3FF3
 11105                           indf0	equ	0x3FEF
 11106                           postinc0	equ	0x3FEE
 11107                           postdec0	equ	0x3FED
 11108                           preinc0	equ	0x3FEC
 11109                           plusw0	equ	0x3FEB
 11110                           fsr0h	equ	0x3FEA
 11111                           fsr0l	equ	0x3FE9
 11112                           wreg	equ	0x3FE8
 11113                           indf1	equ	0x3FE7
 11114                           postinc1	equ	0x3FE6
 11115                           postdec1	equ	0x3FE5
 11116                           preinc1	equ	0x3FE4
 11117                           plusw1	equ	0x3FE3
 11118                           fsr1h	equ	0x3FE2
 11119                           fsr1l	equ	0x3FE1
 11120                           bsr	equ	0x3FE0
 11121                           indf2	equ	0x3FDF
 11122                           postinc2	equ	0x3FDE
 11123                           postdec2	equ	0x3FDD
 11124                           preinc2	equ	0x3FDC
 11125                           plusw2	equ	0x3FDB
 11126                           fsr2h	equ	0x3FDA
 11127                           fsr2l	equ	0x3FD9
 11128                           status	equ	0x3FD8


Data Sizes:
    Strings     115
    Constant    37
    Data        2
    BSS         154
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    113     133
    BANK3           256    256     256
    BANK4           256     54     190
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_5(CODE[17]), STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[19]), 
		 -> STR_1(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK4[16]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK4[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1156_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK4[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK4[16]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_5(CODE[17]), STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[19]), 
		 -> STR_1(CODE[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_5(CODE[17]), STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[19]), 
		 -> STR_1(CODE[11]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 19
		 -> STR_5(CODE[17]), STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[19]), 
		 -> STR_1(CODE[11]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    uart_send@buf	PTR unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    handle_message@message	PTR unsigned char  size(2) Largest target is 256
		 -> uart_tasks@message(BANK3[256]), 

    lcd_print@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[13]), main_loop@batmsg(BANK4[16]), 


Critical Paths under _main in COMRAM

    _uart_tasks->_handle_message
    _handle_message->_uart_send
    _uart_send->_memcpy
    _vfprintf->_vfpfcnvrt
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___fladd
    _atoi->_isspace
    _setLED->___lldiv
    ___lldiv->___lmul
    _lcd_set_data_addr->_lcd_write
    _lcd_print->_lcd_write
    ___llmod->___lldiv
    _lcd_init->_lcd_write

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    _main_loop->_uart_tasks

Critical Paths under _main in BANK4

    _main->_main_loop

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   61974
                                            111 BANK0      2     2      0
                           _lcd_init
                          _lcd_print
                          _main_loop
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           60    60      0   57168
                                            105 BANK0      6     6      0
                                              0 BANK4     54    54      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___lldiv
                            ___llmod
                             ___lmul
                           ___xxtofl
                          _lcd_print
                  _lcd_set_data_addr
                             _setLED
                            _sprintf
                          _uart_send
                         _uart_tasks
 ---------------------------------------------------------------------------------
 (2) _uart_tasks                                         271   271      0    2203
                                             20 COMRAM    15    15      0
                                              0 BANK3    256   256      0
                     _handle_message
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _handle_message                                       4     1      3    1287
                                             16 COMRAM     4     1      3
                          _uart_send
 ---------------------------------------------------------------------------------
 (4) _uart_send                                            5     2      3     937
                                             11 COMRAM     5     2      3
                             _memcpy
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _transmitChecksum                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16     9      7   32924
                                             89 BANK0     16     9      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   31694
                                             85 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    44      3   31143
                                             92 COMRAM     3     0      3
                                             67 BANK0     18    18      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              7     3      4     453
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              67    61      6   24888
                                              0 BANK0     67    61      6
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 10     5      5    3551
                                             14 COMRAM    10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1334
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             55 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2505
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     942
                                             80 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                              48    36     12    2760
                                             25 COMRAM    48    36     12
                            ___awdiv (ARG)
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     826
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1226
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_set_data_addr                                    1     1      0    2086
                                              4 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2328
                                              4 COMRAM     5     3      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                             25 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     2      4    2478
                                              4 COMRAM     6     2      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            4     2      2    2064
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_write
   _lcd_print
     _lcd_write
   _main_loop
     ___awdiv
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lldiv (ARG)
         ___lmul (ARG)
     ___lmul
     ___xxtofl
     _lcd_print
       _lcd_write
     _lcd_set_data_addr
       _lcd_write
     _setLED
       ___awdiv (ARG)
       ___lldiv (ARG)
         ___lmul (ARG)
       ___lmul (ARG)
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _uart_send
       _memcpy
       _transmitChecksum
     _uart_tasks
       _handle_message
         _uart_send
           _memcpy
           _transmitChecksum
       _transmitChecksum
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh           1D00      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      62        0.0%
BANK31             100      0       0      63        0.0%
BITBANK30          100      0       0      60        0.0%
BANK30             100      0       0      61        0.0%
BITBANK29          100      0       0      58        0.0%
BANK29             100      0       0      59        0.0%
BITBANK28          100      0       0      56        0.0%
BANK28             100      0       0      57        0.0%
BITBANK27          100      0       0      54        0.0%
BANK27             100      0       0      55        0.0%
BITBANK26          100      0       0      52        0.0%
BANK26             100      0       0      53        0.0%
BITBANK25          100      0       0      50        0.0%
BANK25             100      0       0      51        0.0%
BITBANK24          100      0       0      48        0.0%
BANK24             100      0       0      49        0.0%
BITBANK23          100      0       0      46        0.0%
BANK23             100      0       0      47        0.0%
BITBANK22          100      0       0      44        0.0%
BANK22             100      0       0      45        0.0%
BITBANK21          100      0       0      42        0.0%
BANK21             100      0       0      43        0.0%
BITBANK20          100      0       0      40        0.0%
BANK20             100      0       0      41        0.0%
BITBANK19          100      0       0      38        0.0%
BANK19             100      0       0      39        0.0%
BITBANK18          100      0       0      36        0.0%
BANK18             100      0       0      37        0.0%
BITBANK17          100      0       0      34        0.0%
BANK17             100      0       0      35        0.0%
BITBANK16          100      0       0      32        0.0%
BANK16             100      0       0      33        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK6           100      0       0      12        0.0%
BANK6              100      0       0      13        0.0%
BITBANK5           100      0       0      10        0.0%
BANK5              100      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100     36      BE       9       74.2%
BITBANK3           100      0       0       6        0.0%
BANK3              100    100     100       7      100.0%
BIGRAMl             FF      0       0      66        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     71      85       5       83.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A2      64        0.0%
DATA                 0      0     2A2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Oct 04 17:38:24 2019

     lcd_set_data_addr@addr 0005                ___fldiv@aexp 0037                ___fldiv@bexp 0036  
              ___fldiv@sign 002F                 __CFG_CP$OFF 000000                ___awdiv@sign 0006  
       ___wmul@multiplicand 0003                 __CFG_LVP$ON 000000                         l200 428A  
                       l210 4322                         l202 42A2                         l212 434A  
                       l204 42CA                         l214 4362                         l206 42E2  
                       l208 430A                         l232 2C4A                         l192 420A  
                       l272 34CE                         l194 4222                         l274 34FE  
                       l196 424A                         l198 4262                         l518 51C4  
                       l559 246A                         l585 2820                         l923 4F28  
                       l685 54F0                         _pad 518E                 lcd_init@inc 000A  
              ___awmod@sign 0006                         wreg 003FE8                ___flmul@aexp 0045  
              ___flmul@bexp 004A                ___flmul@sign 0044                ___flmul@temp 004F  
              ___flmul@prod 004B               __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000  
              ___fltol@exp1 000A                        l1203 3F86                        l1212 3FEE  
                      l1213 3FEA                        l1320 4D18                        l1313 4C92  
                      l1242 44EE                        l1253 455C                        l1078 57BE  
                      l1254 4558                        l1272 3A4C                        l1281 3C7C  
                      l1282 3C78                        l1187 3EB4                        l1188 3E92  
                      l1380 4758                        l1368 4AD2                        l3320 3D80  
                      l4024 4FD4                        l4008 4F82                        l1289 3D12  
                      l3410 3ED8                        l4042 5014                        l4034 4FEC  
                      l1466 5996                        l3420 3EFE                        l3340 3DC4  
                      l3316 3D7C                        l4036 4FF8                        l4028 4FE4  
                      l4054 5A74                        l5102 5214                        l3352 3DE8  
                      l3344 3DC8                        l5120 20FA                        l4402 4A64  
                      l3418 3EFA                        l3274 52E2                        l4066 5712  
                      l4074 5758                        l3428 3F10                        l3540 4E42  
                      l5108 57F0                        l5204 2452                        l5132 212A  
                      l5140 2142                        l3614 4396                        l3446 3FAA  
                      l3462 3FCA                        l3438 3F76                        l3382 3E42  
                      l5222 24CA                        l5214 247E                        l5150 21BA  
                      l4422 510E                        l3720 45D4                        l3456 3FC0  
                      l3536 4E38                        l5072 5AD8                        l5240 2514  
                      l5224 24CE                        l5208 2478                        l5152 21D6  
                      l4424 5118                        l3730 460C                        l3634 43D6  
                      l3618 439A                        l3490 406A                        l3482 4044  
                      l3394 3EA0                        l3546 4E8A                        l3570 46AE  
                      l5306 2916                        l5314 2936                        l5322 295A  
                      l5330 2A2A                        l5250 255E                        l5234 24F0  
                      l5154 21E0                        l4610 50C6                        l4700 53B2  
                      l3732 460E                        l3724 45FE                        l3716 45B0  
                      l3660 4444                        l3652 442C                        l3396 3EA4  
                      l3580 477A                        l5068 5AC2                        l5076 5B9C  
                      l5092 51BC                        l5244 2524                        l4604 5074  
                      l3670 449E                        l3646 440E                        l3638 43DA  
                      l3822 3C24                        l3494 4072                        l5078 5BA0  
                      l5094 51CE                        l5342 2A6C                        l5182 22EE  
                      l5158 220C                        l5502 3980                        l5430 363C  
                      ?_pad 000F                        l4640 54AE                        l4624 58AE  
                      l4392 49EC                        l4376 4986                        l3912 5576  
                      l3752 39F8                        l3496 4074                        l3584 47B8  
                      l5088 51AA                        l5360 2AC4                        l5280 2818  
                      l5272 279C                        l5192 23EA                        l5168 2284  
                      l5176 22A2                        l5512 399C                        l5600 3074  
                      l4802 57B0                        l4650 54E2                        l4394 49F4  
                      l4386 49DA                        l4378 4988                        l3690 4504  
                      l3770 3A38                        l3754 39FC                        l5098 51E4  
                      l5370 2B26                        l5282 283A                        l5266 274E  
                      l5258 26B8                        l5186 2338                        l5506 398A  
                      l5450 3716                        l5426 3618                        l4820 4CCE  
                      l4812 4CAA                        l4628 58C2                        l4396 49F8  
                      l3916 5584                        l3908 556C                        l3932 56A4  
                      l3684 44EC                        l3852 3CEE                        l3828 3C42  
                      l3780 3A6A                        l3772 3A3C                        l3756 3A0C  
                      l3588 47E6                        l5380 2B52                        l5188 239E  
                      l5452 371E                        l5428 3634                        l5524 590C  
                      l4740 4B56                        l5620 32AA                        l5612 3204  
                      l4830 4D3E                        l4822 4CDA                        l4638 54A2  
                      l4398 4A26                        l3678 44C6                        l5358 2ABA  
                      l5294 28E8                        l5526 592A                        l4750 4B90  
                      l4726 4B18                        l4832 4D4A                        l4824 4D00  
                      l3952 56EA                        l3944 56D2                        l3936 56B2  
                      l3928 5698                        l3696 4522                        l3960 542A  
                      l3864 3D32                        l3848 3CD0                        l5480 3888  
                      l5448 36FA                        l5616 3258                        l5608 31AC  
                      l5552 2C6C                        l5544 2BFE                        l4594 59EC  
                      l4818 4CC8                        l3890 552E                        l3938 56BA  
                      l4770 4BFC                        l4762 4BCA                        l4746 4B68  
                      l5650 349E                        l5626 32D6                        l5546 2C06  
                      l3884 551E                        l3948 56DC                        l3964 545E  
                      l3980 4EFC                        l5396 2BB4                        l5476 3852  
                      l5468 37F8                        l4764 4BD0                        l5644 3462  
                      l5660 3558                        l5636 3360                        l5628 32DE  
                      l5564 2D42                        l5716 496E                        l3990 4F60  
                      l5646 3474                        l5590 2F34                        l4848 4D8E  
                      l4696 536E                        l3896 5544                        l3968 547C  
                      l3984 4F12                        l3976 4EC8                        l5496 3948  
                      l5648 348E                        l5584 2EF2                        l5576 2E6C  
                      l5592 2F40                        l4794 577C                        l3898 554C  
                      l4778 4C24                        l4786 4C32                        l5658 352E  
                      l5666 357C                        l5586 2F0A                        l5578 2E84  
                      l4796 5788                        l4788 4C34                        l5588 2F24  
                      l3998 5B0C                        l5598 3034                        STR_1 207B  
                      STR_2 2026                        STR_3 2039                        STR_4 204B  
                      STR_5 205D                        STR_6 206E                        STR_7 2086  
                      STR_8 208E                        u3120 52DA                        u4020 4552  
                      u3300 3E78                        u3140 531C                        u4200 3C72  
                      u3330 3EBC                        u3170 5B52                        _T2PR 003FAB  
                      u4300 5550                        u4060 45BE                        u3180 5B54  
                      u4070 45E2                        u4240 3CDE                        u4160 3A58  
                      u3280 3E66                        u5130 49D6                        u4410 5478  
                      u4250 3CFC                        u3290 3E76                        u3540 4050  
                      u3460 3FCE                        u3620 4DFE                        u5150 4A9A  
                      u3710 597C                        u5230 5166                        u5160 4A9C  
                      u4360 56BE                        u3480 3FE4                        u3720 597E  
                      u3625 4DF4                        u4530 4FFE                        u3810 47A0  
                      u3740 4674                        u7100 3028                        _PMD0 0039C0  
                      _PMD1 0039C1                        u3670 4E82                        u3750 4694  
                      u6310 211A                        _PMD2 0039C2                        u3815 4796  
                      _PMD3 0039C3                        u5600 54B2                        u3840 5B86  
                      u4560 5A70                        u4480 4F70                        u3680 4E84  
                      u5520 50A6                        u7120 31F6                        _PMD4 0039C4  
                      u3665 4E64                        u3745 466A                        _PMD5 0039C5  
                      u3850 5B88                        u4490 4FA8                        u5530 50A8  
                      _PMD6 0039C6                        _PMD7 0039C7                        u5620 41F8  
                      u6340 218E                        u4580 573C                        u5540 50C0  
                      u7060 2E12                        u5630 4238                        u3790 473E  
                      u6270 5836                        u6430 2422                        u6350 2190  
                      u5550 50C2                        u5455 59B2                        u4495 4F9E  
                      u3775 46C8                        u5456 59B4                        u5640 4278  
                      u3776 46CE                        u7160 32CC                        u7080 2E98  
                      u3777 46DC                        u5650 42B8                        u6530 24EC  
                      u7138 31FA                        u7307 59C4                        u3795 4734  
                      u4587 572E                        u5660 42F8                        u6700 2A4E  
                      u6460 2460                        u6380 2258                        u7317 59CE  
                      u6277 5828                        u5670 4338                        u6390 225A  
                      u7327 59E2                        u7247 491E                        u5680 53A4  
                      u7337 59EE                        u7257 4938                        u5690 53E8  
                      u6490 2496                        u7267 2C00                        u5860 578C  
                      u5940 4D54                        u6900 375E                        u5780 4B8A  
                      u7277 32D8                        u6910 376A                        u5687 5396  
                      u7287 3584                        u6760 2B3C                        u6840 367A  
                      u7297 59B6                        u5697 53DA                        u6850 367C  
                      u6780 2B9E                        u6860 3688                        u6790 2BA0  
                      u6960 3904                        u6970 3906                        u6890 375C  
                      _WPUA 003A41                        _WPUB 003A51                        _WPUC 003A61  
                      _WPUD 003A71                        _WPUE 003A81               __CFG_FCMEN$ON 000000  
                      _dbuf 0438                        _atoi 4974                        _main 4800  
                      _prec 00DD                        _nout 00D9                        pad@i 0015  
                      pad@p 0012                        fsr1h 003FE2                        fsr2h 003FDA  
                      indf1 003FE7                        indf2 003FDF                        fsr1l 003FE1  
                      pad@w 0017                        fsr2l 003FD9                _soundAmplify 2001  
             ___fpclassifyf 4DA8                        prodh 003FF4                        prodl 003FF3  
                      start FFFC             ___fldiv@new_exp 0030                 lcd_write@rs 0004  
              _tolower$1228 000D               __CFG_CSWEN$ON 000000                ___param_bank 000000  
                     ??_pad 0014               ___fltol@sign1 0009                       ?_atoi 0008  
           __end_of___fladd 4098                       ?_main 0001                       _ADCLK 003EFF  
             _main_loop$323 04A8               _main_loop$307 049C               _main_loop$308 04A0  
             _main_loop$309 04A4                       _ADPCH 003EF1             __end_of___fldiv 4616  
                     _ADREF 003EFD             __end_of___awdiv 5592             __end_of___flneg 5B26  
                     STR_11 208A                       STR_12 2092                       STR_15 2096  
                     STR_17 2096               __CFG_WDTE$OFF 000000             __end_of___awmod 56F8  
           __end_of___flmul 3D50             __end_of___flsub 589E             __end_of___fltol 502E  
           __end_of___lldiv 550A             ___awdiv@divisor 0003                       _T2CLK 003FAE  
           __end_of___llmod 57D8                       _T2CON 003FAC                       _LATB4 01FDDC  
                     _LATE0 01FDF0                       _LATE1 01FDF1                       _LATE2 01FDF2  
            __CFG_DEBUG$OFF 000000                       _U1TXB 003DEA             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 005E                       _PORTA 003FCA                       _PORTB 003FCB  
                     _PORTC 003FCC                       _PORTD 003FCD                       _PORTE 003FCE  
                     _TRISA 003FC2                       _TRISB 003FC3                       _TRISC 003FC4  
                     _TRISD 003FC5                       _TRISE 003FC6         ___lmul@multiplicand 0005  
      main_loop@bat_percent 04BA               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000                       _flags 00DF                _DMA2CON0bits 003BDC  
                     _fputc 52CE                       _fputs 5AB8             __end_of_isdigit 5B8E  
                     _rxBuf 000100                       _txBuf 000200          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0015                       pad@fp 000F                       atoi@s 0008  
                     _width 00DB                       _putch 5C1A             __end_of_isspace 5A7E  
           __end_of_isupper 5B5A               lcd_init@shift 0005                       tablat 003FF5  
                     status 003FD8             __end_of_sprintf 5A3A              ?___fpclassifyf 0001  
           __end_of_tolower 59A4             __end_of_strncmp 518E             __initialization 5A7E  
              __end_of_atoi 4AE0                __end_of_main 4974              __CFG_SAFEN$OFF 000000  
                    ??_atoi 000A                      ??_main 00CF               __activetblptr 000003  
              _volume_level 0437              __CFG_MVECEN$ON 000000         lcd_init@cursorblink 0007  
                    _ADCON0 003EF8                      _ADCON1 003EF9                      _ADCON2 003EFA  
                    _ADCON3 003EFB                      ?_fputc 0001            ___llmod@dividend 001A  
                    ?_fputs 0009                      _ADRESH 003EF0                      _ADRESL 003EEF  
                    _CCPR2H 003F79                      _CCPR3H 003F75                      _CCPR2L 003F78  
                    _CCPR4H 003F71                      _CCPR3L 003F74                      _CCPR4L 003F70  
          ___awdiv@dividend 0001                      _ANSELA 003A40                      ?_putch 0001  
                    _ANSELB 003A50                      _ANSELC 003A60                      _ANSELD 003A70  
                    _ANSELE 003A80                      _U1CON0 003DF2                      _U1CON1 003DF3  
                    _U1CON2 003DF4                      _U1BRGH 003DF6                      _U1BRGL 003DF5  
                    _RB0PPS 003A08                      _ODCONA 003A42                      _ODCONB 003A52  
                    _ODCONC 003A62                      _RD4PPS 003A1C                      _ODCOND 003A72  
                    _ODCONE 003A82                      _RC7PPS 003A17                      _RD5PPS 003A1D  
                    _RD6PPS 003A1E                      _RD7PPS 003A1F              __CFG_WDTCCS$SC 000000  
                    _U1TXIF 01CD1C                      _INLVLA 003A44                      _INLVLB 003A54  
                    _INLVLC 003A64                      _INLVLD 003A74                      _INLVLE 003A84  
                    _PRLOCK 0039EF            __end_of___xxtofl 4DA8          lcd_write@longdelay 0002  
         ?_transmitChecksum 0001              __CFG_XINST$OFF 000000                vfprintf@cfmt 00B8  
          __end_of_lcd_init 560E                      ___flge 4E94                      ___fleq 53F6  
                    _ackCmd 00E3                      ___lmul 589E          ??_transmitChecksum 0001  
                 ??___fladd 0017                      ___wmul 5BC0                   ??___fldiv 0027  
                 ??___awdiv 0005                   ??___flneg 0005              __CFG_STVREN$ON 000000  
                 ??___awmod 0005                   ??___flmul 0040                   ??___flsub 0059  
                 ??___fltol 0005                   ??___lldiv 0015                   ??___llmod 0022  
                    _efgtoa 209A                      _floorf 4616                      _memcpy 56F8  
                    _setLED 4098                      clear_0 5AA0                      clear_1 5AAC  
          ___awdiv@quotient 0007             ___awmod@divisor 0003             ___awmod@counter 0005  
                    pad@buf 0010                      _strcpy 57D8                      _strlen 5B8E  
            lcd_init@cursor 0006                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009                   ??_isdigit 0003  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 0000                   ??_isspace 0003                main_loop@rel 04B6  
              main_loop@res 04B0                main_loop@pos 0434                main_loop@sum 042C  
                    tblptrh 003FF7                   ??_isupper 0003                      tblptrl 003FF6  
                    tblptru 003FF8                      putch@c 0001            __end_of_vfprintf 5950  
                 ??_sprintf 0060                   ??_tolower 0009                   ??_strncmp 0005  
         _lcd_set_data_addr 5BEE                  ___flge@ff1 0051                  ___flge@ff2 0055  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 5AB2                  ___flneg@f1 0001  
             lcd_write@data 0001          ?_lcd_set_data_addr 0001               ___rparam_used 000001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001         ??_lcd_set_data_addr 0005  
              __pidataBANK0 5C18               __end_of_fputc 5368               __end_of_fputs 5AF0  
             __end_of_putch 5C1C          __size_of_lcd_print 008E   __end_of_lcd_set_data_addr 5C04  
        __size_of_lcd_write 0052                     ??_fputc 0004                     ??_fputs 000C  
           __CFG_PR1WAY$OFF 000000                     ??_putch 0001                  __pbssBANK0 00D1  
                __pbssBANK4 0400          __size_of_main_loop 0998                  _efgtoa$603 006F  
                _efgtoa$604 0071                  _efgtoa$613 0075                  _efgtoa$614 0077  
                _efgtoa$615 0079                  _efgtoa$609 0073                     ?___flge 0051  
                   ?___fleq 0001                     ?___lmul 0001                     ?___wmul 0001  
                   ?_efgtoa 0060                     _CCP2CON 003F7A                     _CCP3CON 003F76  
                   _CCP4CON 003F72                     ?_floorf 0038                     ?_memcpy 0001  
                   ?_setLED 001A              ___lmul@product 0009                     ?_strcpy 0001  
                   ?_strlen 0001          __size_of_uart_init 009C         __CFG_PWRTS$PWRT_OFF 000000  
        __size_of_uart_send 0076                     _U1TXCHK 003DEB                     _U1RXPPS 003AE5  
                 ?___xxtofl 0001          __size_of_vfpfcnvrt 0440                     _PWM6DCH 003F69  
                   _PWM6DCL 003F68                     _PWM8DCH 003F61                     _PWM8DCL 003F60  
                   _PWM6CON 003F6A                     _PWM8CON 003F62                     _SLRCONA 003A43  
                   _SLRCONB 003A53                     _SLRCONC 003A63                     _SLRCOND 003A73  
                   _SLRCONE 003A83     __size_of_handle_message 00BA                   ?_lcd_init 0005  
                 _DMA1DPTRL 003BEC                     __Hparam 0000                     __Lparam 0000  
__CFG_RSTOSC$HFINTOSC_64MHZ 000000                  _setLED$283 0032                  _setLED$284 0026  
                _setLED$285 0036                  _setLED$286 002A                  _setLED$287 003A  
                _setLED$288 002E             __size_of___flge 00D0             __size_of___fleq 008A  
         __end_of_lcd_print 53F6                     ___fladd 3D50                     ___fldiv 436A  
                   ___awdiv 550A                     ___flneg 5AF0             __size_of___lmul 005E  
                   ___awmod 5684                     ___flmul 39CC                     ___flsub 5840  
                   ___fltol 4F64           __end_of_lcd_write 59F6                     ___lldiv 5480  
           __size_of___wmul 002E                     ___llmod 576A                   ?_vfprintf 00B5  
              __psmallconst 2000             __size_of_efgtoa 0B5A           handle_message@len 0013  
         __end_of_main_loop 358C             __size_of_floorf 01EA                     __pcinit 5A7E  
           __size_of_memcpy 0072             __size_of_setLED 02D2                     __ramtop 2000  
                   __ptext0 4800                     __ptext1 5232                     __ptext2 2BF4  
                   __ptext3 4AE0                     __ptext4 502E                     __ptext5 560E  
                   __ptext6 5C04                     __ptext7 56F8                     __ptext8 59F6  
                   __ptext9 58FC             __CFG_WRTAPP$OFF 000000             __size_of_strcpy 0068  
           __size_of_strlen 0032                __size_of_pad 00A4                     _isdigit 5B5A  
                   _pairing 00E2                  ??___xxtofl 0005            ___awmod@dividend 0001  
                   _isspace 5A3A             __CFG_WRTSAF$OFF 000000                     _isupper 5B26  
                   efgtoa@c 0065                     efgtoa@d 0083                     efgtoa@e 009B  
                   efgtoa@f 0061                     efgtoa@g 0097                     efgtoa@h 008D  
                   efgtoa@i 0095                     efgtoa@l 0091                     efgtoa@m 007F  
                   efgtoa@n 009D                     efgtoa@p 0087                     efgtoa@t 007B  
                   efgtoa@u 009F                     efgtoa@w 008A                     atoi@neg 000E  
__size_of_lcd_set_data_addr 0016                     _sprintf 59F6                     _tolower 5950  
                ??_lcd_init 0009                     _strncmp 50E8        end_of_initialization 5AB2  
                   floorf@e 0046                     floorf@m 0042                     floorf@u 0048  
                   floorf@x 0038                     memcpy@d 0007                     memcpy@n 0005  
                   memcpy@s 0009                     setLED@b 0022                     setLED@g 001E  
                   setLED@r 001A                     fputc@fp 0003                     fputs@fp 000B  
         __end_of_uart_init 52CE           __end_of_uart_send 5684             ___lldiv@divisor 0011  
             main_loop@last 0400             ___lldiv@counter 0019           uart_tasks@bytePos 001F  
         __end_of_vfpfcnvrt 39CC                  efgtoa@mode 008C           uart_tasks@message 0300  
                efgtoa@sign 0085                     postdec2 003FDD                     postinc0 003FEE  
                   postinc1 003FE6                     postinc2 003FDE                  ??_vfprintf 0060  
     __CFG_WDTCPS$WDTCPS_31 000000                     strcpy@d 0009                     strlen@a 0003  
                   strcpy@s 0007                     strlen@s 0001                  _uart_tasks 4AE0  
                 _PORTCbits 003FCC                   _PORTDbits 003FCD                 uart_tasks@i 001E  
               ___fladd@grs 001E   __size_of_transmitChecksum 0014               ___xxtofl@sign 0009  
               ___fldiv@grs 0032                 ___fldiv@rem 002B            __CFG_FEXTOSC$OFF 000000  
                lcd_init@on 0008       __end_of_stateCheckCmd 2026                 ___flmul@grs 0046  
                lcd_print@i 0009              __end_of___flge 4F64              __end_of___fleq 5480  
     uart_tasks@posInRawMsg 001D              __end_of___lmul 58FC                 vfpfcnvrt@ap 005F  
               vfpfcnvrt@ct 00AD                 vfpfcnvrt@fp 005D              __end_of___wmul 5BEE  
            __end_of_efgtoa 2BF4              __end_of_floorf 4800              __end_of_memcpy 576A  
            __end_of_setLED 436A                  floorf@F524 00D1              __end_of_strcpy 5840  
            __end_of_strlen 5BC0         start_initialization 5A7E              _handle_message 502E  
               __end_of_pad 5232       __end_of___fpclassifyf 4E94             ___llmod@divisor 001E  
           ___llmod@counter 0022            __CFG_LPBOREN$OFF 000000       handle_message@message 0011  
               vfprintf@fmt 00B6                    ??___flge 0059                    ??___fleq 0009  
                  ??___lmul 0009                    ??___wmul 0005                    ??_efgtoa 0066  
               __pdataBANK0 00E3                    ??_floorf 003C                    ??_memcpy 0007  
                  ??_setLED 0026                 ?_uart_tasks 0001            __CFG_IVT1WAY$OFF 000000  
                  ??_strcpy 0005                    ??_strlen 0003                   ___fladd@a 0013  
                 ___fladd@b 000F                   ___fldiv@a 0023                   ___fldiv@b 001F  
    __end_of_handle_message 50E8                   ___flmul@a 003C                   ___flmul@b 0038  
                 ___flsub@a 0055                   ___flsub@b 0051               __pcstackBANK0 0060  
             __pcstackBANK3 0300               __pcstackBANK4 0488           __size_of___xxtofl 0164  
         __size_of_lcd_init 007C                   _atoi$1105 0010                   _atoi$1106 0014  
                 _atoi$1107 0012                    ?___fladd 000F                    ?___fldiv 001F  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 0038                    ?___flsub 0051                    ?___fltol 0001  
                  ?___lldiv 000D                    ?___llmod 001A            __CFG_PPS1WAY$OFF 000000  
                 _lcd_print 5368           __size_of_vfprintf 0054                   _lcd_write 59A4  
    __CFG_BBSIZE$BBSIZE_512 000000                 __smallconst 2000            _transmitChecksum 5C04  
                  ?_isdigit 0001                   _main_loop 2BF4                    _DMA1CON0 003BFC  
                  _DMA1CON1 003BFD                    _DMA1AIRQ 003BFE                    _DMA2CON0 003BDC  
                  _DMA2CON1 003BDD                    _DMA2AIRQ 003BDE                    _DMA1DSAH 003BF1  
                  _DMA1DSAL 003BF0             ?_handle_message 0011                    _DMA2DSAH 003BD1  
                  _DMA2DSAL 003BD0                    _DMA1DSZH 003BEF                    _DMA1DSZL 003BEE  
                  _DMA2DSZH 003BCF                    _DMA2DSZL 003BCE                    _DMA1SSAH 003BFA  
                  _DMA1SIRQ 003BFF                    _DMA1SSAL 003BF9                    _DMA1SSAU 003BFB  
                  _DMA2SSAH 003BDA                    _DMA2SIRQ 003BDF                    _DMA2SSAL 003BD9  
                  _DMA2SSAU 003BDB                    _DMA1SSZH 003BF8                    _DMA1SSZL 003BF7  
                  _DMA2SSZH 003BD8                    _DMA2SSZL 003BD7                    ?_isspace 0001  
                  ?_isupper 0001                    _CCPTMRS0 003F5E            main_loop@lastAvg 0498  
          main_loop@counter 0430            main_loop@lastSum 0428                    ?_sprintf 00B9  
                  ?_tolower 0007              __size_of_fputc 009A              __size_of_fputs 0038  
                  ?_strncmp 0001              __size_of_putch 0002         __size_of_uart_tasks 0164  
            ___wmul@product 0005            uart_tasks@intPos 0020            uart_tasks@msgLen 0021  
                 _uart_init 5232                   _uart_send 560E                   _vfpfcnvrt 358C  
                ?_lcd_print 0005                  _ADCON0bits 003EF8                  ?_lcd_write 0001  
         ___wmul@multiplier 0001                  ?_main_loop 0001                   _streaming 0436  
              _isspace$1136 0007                  vfpfcnvrt@c 00B4                  vfpfcnvrt@f 00B0  
         ___lmul@multiplier 0001                  _DMA2SCNTIF 01CD2A                    __Hrparam 0000  
           lcd_print@string 0005                   memcpy@tmp 000B                  vfprintf@ap 00B7  
                  __Lrparam 0000                  vfprintf@fp 00B5          __CFG_BOREN$SBORDIS 000000  
                ?_uart_init 0001                  ?_uart_send 000C            __size_of___fladd 0348  
          __size_of___fldiv 02AC            __size_of___awdiv 0088            __size_of___flneg 0036  
          __size_of___awmod 0074            __size_of___flmul 0384            __size_of___flsub 005E  
          __size_of___fltol 00CA            __size_of___lldiv 008A            __size_of___llmod 006E  
                ?_vfpfcnvrt 005D        __end_of_soundAmplify 2021          ___fpclassifyf@F463 00D5  
                sprintf@fmt 00BB                    ___xxtofl 4C44            __size_of_isdigit 0034  
          __size_of_isspace 0044                    __ptext10 358C                    __ptext11 50E8  
                  __ptext20 5C1A                    __ptext12 209A                    __ptext21 4616  
                  __ptext13 5950                    __ptext30 436A                    __ptext22 4DA8  
                  __ptext14 5B26                    __ptext31 5684                    __ptext23 4F64  
                  __ptext15 57D8                    __ptext40 5BEE                    __ptext32 550A  
                  __ptext24 5840                    __ptext16 518E                    __ptext41 5368  
                  __ptext33 4974                    __ptext25 3D50                    __ptext17 5B8E  
                  __ptext42 4C44                    __ptext34 5A3A                    __ptext26 5AF0  
                  __ptext18 5AB8                    __ptext43 576A                    __ptext35 5B5A  
                  __ptext27 39CC                    __ptext19 52CE                    __ptext44 5592  
                  __ptext36 5BC0                    __ptext28 4E94                    __ptext45 59A4  
                  __ptext37 4098                    __ptext29 53F6                    __ptext38 589E  
                  __ptext39 5480            __size_of_isupper 0034                    _lcd_init 5592  
          __size_of_sprintf 0044            __size_of_tolower 0054             main_loop@absRes 04AC  
                strcpy@dest 0001            __size_of_strncmp 00A6             main_loop@batmsg 0488  
           main_loop@batlvl 04AE         __end_of_volCheckCmd 2024               __size_of_atoi 016C  
             __size_of_main 0174             main_loop@sample 04B2        __CFG_WDTCWS$WDTCWS_7 000000  
        __CFG_BORV$VBOR_190 000000                    efgtoa@fp 0060                    efgtoa@ne 0081  
                  efgtoa@pp 007D                    efgtoa@ou 006B             uart_tasks@rxLen 0019  
           uart_tasks@rxPos 00E1         uart_tasks@msgOffset 001C                    _vfprintf 58FC  
              ??_uart_tasks 0015                 ??_lcd_print 0007                 ??_lcd_write 0003  
               ??_main_loop 00C9                    memcpy@d1 0001                    memcpy@s1 0003  
                  setLED@sb 0046                    setLED@sg 0042                    setLED@sr 003E  
                  isdigit@c 0001          uart_tasks@checksum 001B                   sprintf@ap 00C2  
                  isspace@c 0001            ___lldiv@dividend 000D          __end_of_uart_tasks 4C44  
         __CFG_CLKOUTEN$OFF 000000                   strcpy@src 0003                    isupper@c 0001  
  __end_of_transmitChecksum 5C18                   strncmp@_l 0001                   strncmp@_r 0002  
               efgtoa@nmode 0089                 ??_uart_init 0001                 ??_uart_send 000F  
          ??_handle_message 0014                 ??_vfpfcnvrt 00A3               _vfpfcnvrt$630 00A9  
             _vfpfcnvrt$634 00AB               _vfpfcnvrt$629 00A7                    sprintf@f 00C3  
                  tolower@c 0007                    sprintf@s 00B9      __size_of___fpclassifyf 00EC  
                _PRLOCKbits 0039EF            ___lldiv@quotient 0015          uart_tasks@zeroByte 0022  
                  strncmp@l 0006                    strncmp@n 0003                    strncmp@r 0007  
             uart_tasks@val 0023                 _volCheckCmd 2021               ___fladd@signs 001B  
              uart_send@buf 000C                uart_send@len 000E                ___fladd@aexp 001C  
              ___fladd@bexp 001D               _stateCheckCmd 2024      uart_tasks@rawMsgOffset 001A  
