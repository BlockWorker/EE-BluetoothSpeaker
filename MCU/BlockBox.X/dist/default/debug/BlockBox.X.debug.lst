

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 16 19:39:08 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18LF47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	dabs	1,0x100,256,_rxBuf
    66                           	dabs	1,0x200,256,_txBuf
    67  0000                     
    68                           ; Version 2.10
    69                           ; Generated 31/07/2019 GMT
    70                           ; 
    71                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18LF47K42 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataBANK4
   104  0063BC                     __pidataBANK4:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _ledBrightness
   108  0063BC  0040               	dw	64
   109  0063BE  0000               	dw	0
   110                           
   111                           ;initializer for _bat_percent
   112  0063C0  0000               	dw	0
   113  0063C2  42C8               	dw	17096
   114                           
   115                           ;initializer for _ackCmd
   116  0063C4  14                 	db	20
   117  0063C5  00                 	db	0
   118                           
   119                           	psect	smallconst
   120  002000                     __psmallconst:
   121                           	opt callstack 0
   122  002000  00                 	db	0
   123  002001                     _soundAmplify:
   124                           	opt callstack 0
   125  002001  0000               	dw	0
   126  002003  0000               	dw	0
   127  002005  0000               	dw	0
   128  002007  0276               	dw	630
   129  002009  01E0               	dw	480
   130  00200B  0186               	dw	390
   131  00200D  0104               	dw	260
   132  00200F  00B4               	dw	180
   133  002011  0064               	dw	100
   134  002013  0041               	dw	65
   135  002015  0032               	dw	50
   136  002017  0023               	dw	35
   137  002019  0016               	dw	22
   138  00201B  000F               	dw	15
   139  00201D  0009               	dw	9
   140  00201F  0007               	dw	7
   141  002021                     __end_of_soundAmplify:
   142                           	opt callstack 0
   143  002021                     _volCheckCmd:
   144                           	opt callstack 0
   145  002021  16                 	db	22
   146  002022  00                 	db	0
   147  002023  04                 	db	4
   148  002024                     __end_of_volCheckCmd:
   149                           	opt callstack 0
   150  002024                     _stateCheckCmd:
   151                           	opt callstack 0
   152  002024  0D                 	db	13
   153  002025  00                 	db	0
   154  002026                     __end_of_stateCheckCmd:
   155                           	opt callstack 0
   156  0000                     _PRLOCKbits	set	14831
   157  0000                     _PRLOCK	set	14831
   158  0000                     _PMD7	set	14791
   159  0000                     _PMD6	set	14790
   160  0000                     _PMD5	set	14789
   161  0000                     _PMD4	set	14788
   162  0000                     _PMD3	set	14787
   163  0000                     _PMD2	set	14786
   164  0000                     _PMD1	set	14785
   165  0000                     _PMD0	set	14784
   166  0000                     _DMA2SCNTIF	set	118058
   167  0000                     _U1TXIF	set	118044
   168  0000                     _RB0PPS	set	14856
   169  0000                     _U1RXPPS	set	15077
   170  0000                     _RD7PPS	set	14879
   171  0000                     _RD6PPS	set	14878
   172  0000                     _RD5PPS	set	14877
   173  0000                     _RD4PPS	set	14876
   174  0000                     _RC7PPS	set	14871
   175  0000                     _ODCONE	set	14978
   176  0000                     _SLRCONE	set	14979
   177  0000                     _INLVLE	set	14980
   178  0000                     _WPUE	set	14977
   179  0000                     _ANSELE	set	14976
   180  0000                     _ODCOND	set	14962
   181  0000                     _SLRCOND	set	14963
   182  0000                     _INLVLD	set	14964
   183  0000                     _WPUD	set	14961
   184  0000                     _ANSELD	set	14960
   185  0000                     _ODCONC	set	14946
   186  0000                     _SLRCONC	set	14947
   187  0000                     _INLVLC	set	14948
   188  0000                     _WPUC	set	14945
   189  0000                     _ANSELC	set	14944
   190  0000                     _ODCONB	set	14930
   191  0000                     _SLRCONB	set	14931
   192  0000                     _INLVLB	set	14932
   193  0000                     _WPUB	set	14929
   194  0000                     _ANSELB	set	14928
   195  0000                     _ODCONA	set	14914
   196  0000                     _SLRCONA	set	14915
   197  0000                     _INLVLA	set	14916
   198  0000                     _WPUA	set	14913
   199  0000                     _ANSELA	set	14912
   200  0000                     _DMA2CON0bits	set	15324
   201  0000                     _DMA1DPTRL	set	15340
   202  0000                     _DMA2CON0	set	15324
   203  0000                     _DMA2AIRQ	set	15326
   204  0000                     _DMA2SIRQ	set	15327
   205  0000                     _DMA2DSAL	set	15312
   206  0000                     _DMA2DSAH	set	15313
   207  0000                     _DMA2DSZL	set	15310
   208  0000                     _DMA2DSZH	set	15311
   209  0000                     _DMA2SSAL	set	15321
   210  0000                     _DMA2SSAH	set	15322
   211  0000                     _DMA2SSAU	set	15323
   212  0000                     _DMA2SSZL	set	15319
   213  0000                     _DMA2SSZH	set	15320
   214  0000                     _DMA2CON1	set	15325
   215  0000                     _DMA1CON0	set	15356
   216  0000                     _DMA1AIRQ	set	15358
   217  0000                     _DMA1SIRQ	set	15359
   218  0000                     _DMA1DSAL	set	15344
   219  0000                     _DMA1DSAH	set	15345
   220  0000                     _DMA1DSZL	set	15342
   221  0000                     _DMA1DSZH	set	15343
   222  0000                     _DMA1SSAL	set	15353
   223  0000                     _DMA1SSAH	set	15354
   224  0000                     _DMA1SSAU	set	15355
   225  0000                     _DMA1SSZL	set	15351
   226  0000                     _DMA1SSZH	set	15352
   227  0000                     _DMA1CON1	set	15357
   228  0000                     _U1TXCHK	set	15851
   229  0000                     _U1TXB	set	15850
   230  0000                     _U1CON2	set	15860
   231  0000                     _U1CON1	set	15859
   232  0000                     _U1CON0	set	15858
   233  0000                     _U1BRGL	set	15861
   234  0000                     _U1BRGH	set	15862
   235  0000                     _ADREF	set	16125
   236  0000                     _ADCLK	set	16127
   237  0000                     _ADCON3	set	16123
   238  0000                     _ADCON2	set	16122
   239  0000                     _ADCON1	set	16121
   240  0000                     _ADCON0	set	16120
   241  0000                     _ADRESL	set	16111
   242  0000                     _ADRESH	set	16112
   243  0000                     _ADCON0bits	set	16120
   244  0000                     _ADPCH	set	16113
   245  0000                     _CCPTMRS0	set	16222
   246  0000                     _T2CON	set	16300
   247  0000                     _T2CLK	set	16302
   248  0000                     _T2PR	set	16299
   249  0000                     _PWM8CON	set	16226
   250  0000                     _PWM6CON	set	16234
   251  0000                     _CCP4CON	set	16242
   252  0000                     _CCP3CON	set	16246
   253  0000                     _CCP2CON	set	16250
   254  0000                     _PORTE	set	16334
   255  0000                     _TRISE	set	16326
   256  0000                     _PORTD	set	16333
   257  0000                     _TRISD	set	16325
   258  0000                     _PORTC	set	16332
   259  0000                     _TRISC	set	16324
   260  0000                     _PORTB	set	16331
   261  0000                     _TRISB	set	16323
   262  0000                     _PORTA	set	16330
   263  0000                     _TRISA	set	16322
   264  0000                     _PORTDbits	set	16333
   265  0000                     _PORTCbits	set	16332
   266  0000                     _CCPR4L	set	16240
   267  0000                     _CCPR4H	set	16241
   268  0000                     _CCPR2L	set	16248
   269  0000                     _CCPR2H	set	16249
   270  0000                     _CCPR3L	set	16244
   271  0000                     _CCPR3H	set	16245
   272  0000                     _PWM8DCL	set	16224
   273  0000                     _PWM8DCH	set	16225
   274  0000                     _PWM6DCL	set	16232
   275  0000                     _PWM6DCH	set	16233
   276  0000                     _LATE0	set	130544
   277  0000                     _LATE1	set	130545
   278  0000                     _LATE2	set	130546
   279  0000                     _LATB4	set	130524
   280  002026                     STR_9:
   281  002026  42                 	db	66	;'B'
   282  002027  61                 	db	97	;'a'
   283  002028  74                 	db	116	;'t'
   284  002029  74                 	db	116	;'t'
   285  00202A  65                 	db	101	;'e'
   286  00202B  72                 	db	114	;'r'
   287  00202C  79                 	db	121	;'y'
   288  00202D  3A                 	db	58	;':'
   289  00202E  20                 	db	32
   290  00202F  25                 	db	37
   291  002030  33                 	db	51	;'3'
   292  002031  2E                 	db	46
   293  002032  30                 	db	48	;'0'
   294  002033  66                 	db	102	;'f'
   295  002034  25                 	db	37
   296  002035  25                 	db	37
   297  002036  20                 	db	32
   298  002037  20                 	db	32
   299  002038  20                 	db	32
   300  002039  00                 	db	0
   301  00203A                     STR_7:
   302  00203A  46                 	db	70	;'F'
   303  00203B  75                 	db	117	;'u'
   304  00203C  6C                 	db	108	;'l'
   305  00203D  6C                 	db	108	;'l'
   306  00203E  20                 	db	32
   307  00203F  43                 	db	67	;'C'
   308  002040  68                 	db	104	;'h'
   309  002041  67                 	db	103	;'g'
   310  002042  3A                 	db	58	;':'
   311  002043  20                 	db	32
   312  002044  25                 	db	37
   313  002045  33                 	db	51	;'3'
   314  002046  2E                 	db	46
   315  002047  30                 	db	48	;'0'
   316  002048  66                 	db	102	;'f'
   317  002049  25                 	db	37
   318  00204A  25                 	db	37
   319  00204B  20                 	db	32
   320  00204C  20                 	db	32
   321  00204D  00                 	db	0
   322  00204E                     STR_8:
   323  00204E  46                 	db	70	;'F'
   324  00204F  61                 	db	97	;'a'
   325  002050  73                 	db	115	;'s'
   326  002051  74                 	db	116	;'t'
   327  002052  20                 	db	32
   328  002053  43                 	db	67	;'C'
   329  002054  68                 	db	104	;'h'
   330  002055  67                 	db	103	;'g'
   331  002056  3A                 	db	58	;':'
   332  002057  20                 	db	32
   333  002058  25                 	db	37
   334  002059  33                 	db	51	;'3'
   335  00205A  2E                 	db	46
   336  00205B  30                 	db	48	;'0'
   337  00205C  66                 	db	102	;'f'
   338  00205D  25                 	db	37
   339  00205E  25                 	db	37
   340  00205F  20                 	db	32
   341  002060  20                 	db	32
   342  002061  00                 	db	0
   343  002062                     STR_6:
   344  002062  43                 	db	67	;'C'
   345  002063  68                 	db	104	;'h'
   346  002064  67                 	db	103	;'g'
   347  002065  20                 	db	32
   348  002066  66                 	db	102	;'f'
   349  002067  61                 	db	97	;'a'
   350  002068  75                 	db	117	;'u'
   351  002069  6C                 	db	108	;'l'
   352  00206A  74                 	db	116	;'t'
   353  00206B  3A                 	db	58	;':'
   354  00206C  20                 	db	32
   355  00206D  25                 	db	37
   356  00206E  33                 	db	51	;'3'
   357  00206F  2E                 	db	46
   358  002070  30                 	db	48	;'0'
   359  002071  66                 	db	102	;'f'
   360  002072  25                 	db	37
   361  002073  25                 	db	37
   362  002074  20                 	db	32
   363  002075  00                 	db	0
   364  002076                     STR_4:
   365  002076  4F                 	db	79	;'O'
   366  002077  66                 	db	102	;'f'
   367  002078  66                 	db	102	;'f'
   368  002079  20                 	db	32
   369  00207A  20                 	db	32
   370  00207B  20                 	db	32
   371  00207C  20                 	db	32
   372  00207D  20                 	db	32
   373  00207E  20                 	db	32
   374  00207F  20                 	db	32
   375  002080  20                 	db	32
   376  002081  20                 	db	32
   377  002082  20                 	db	32
   378  002083  20                 	db	32
   379  002084  20                 	db	32
   380  002085  20                 	db	32
   381  002086  00                 	db	0
   382  002087                     STR_1:
   383  002087  50                 	db	80	;'P'
   384  002088  61                 	db	97	;'a'
   385  002089  69                 	db	105	;'i'
   386  00208A  72                 	db	114	;'r'
   387  00208B  69                 	db	105	;'i'
   388  00208C  6E                 	db	110	;'n'
   389  00208D  67                 	db	103	;'g'
   390  00208E  20                 	db	32
   391  00208F  20                 	db	32
   392  002090  20                 	db	32
   393  002091  20                 	db	32
   394  002092  20                 	db	32
   395  002093  20                 	db	32
   396  002094  20                 	db	32
   397  002095  20                 	db	32
   398  002096  20                 	db	32
   399  002097  00                 	db	0
   400  002098                     STR_2:
   401  002098  43                 	db	67	;'C'
   402  002099  6F                 	db	111	;'o'
   403  00209A  6E                 	db	110	;'n'
   404  00209B  6E                 	db	110	;'n'
   405  00209C  65                 	db	101	;'e'
   406  00209D  63                 	db	99	;'c'
   407  00209E  74                 	db	116	;'t'
   408  00209F  65                 	db	101	;'e'
   409  0020A0  64                 	db	100	;'d'
   410  0020A1  20                 	db	32
   411  0020A2  20                 	db	32
   412  0020A3  20                 	db	32
   413  0020A4  20                 	db	32
   414  0020A5  20                 	db	32
   415  0020A6  20                 	db	32
   416  0020A7  20                 	db	32
   417  0020A8  00                 	db	0
   418  0020A9                     STR_5:
   419  0020A9  4E                 	db	78	;'N'
   420  0020AA  6F                 	db	111	;'o'
   421  0020AB  20                 	db	32
   422  0020AC  42                 	db	66	;'B'
   423  0020AD  61                 	db	97	;'a'
   424  0020AE  74                 	db	116	;'t'
   425  0020AF  74                 	db	116	;'t'
   426  0020B0  65                 	db	101	;'e'
   427  0020B1  72                 	db	114	;'r'
   428  0020B2  79                 	db	121	;'y'
   429  0020B3  20                 	db	32
   430  0020B4  20                 	db	32
   431  0020B5  20                 	db	32
   432  0020B6  20                 	db	32
   433  0020B7  20                 	db	32
   434  0020B8  20                 	db	32
   435  0020B9  00                 	db	0
   436  0020BA                     STR_3:
   437  0020BA  4E                 	db	78	;'N'
   438  0020BB  6F                 	db	111	;'o'
   439  0020BC  74                 	db	116	;'t'
   440  0020BD  20                 	db	32
   441  0020BE  63                 	db	99	;'c'
   442  0020BF  6F                 	db	111	;'o'
   443  0020C0  6E                 	db	110	;'n'
   444  0020C1  6E                 	db	110	;'n'
   445  0020C2  65                 	db	101	;'e'
   446  0020C3  63                 	db	99	;'c'
   447  0020C4  74                 	db	116	;'t'
   448  0020C5  65                 	db	101	;'e'
   449  0020C6  64                 	db	100	;'d'
   450  0020C7  20                 	db	32
   451  0020C8  20                 	db	32
   452  0020C9  20                 	db	32
   453  0020CA  00                 	db	0
   454  0020CB                     STR_10:
   455  0020CB  48                 	db	72	;'H'
   456  0020CC  65                 	db	101	;'e'
   457  0020CD  6C                 	db	108	;'l'
   458  0020CE  6C                 	db	108	;'l'
   459  0020CF  6F                 	db	111	;'o'
   460  0020D0  20                 	db	32
   461  0020D1  57                 	db	87	;'W'
   462  0020D2  6F                 	db	111	;'o'
   463  0020D3  72                 	db	114	;'r'
   464  0020D4  6C                 	db	108	;'l'
   465  0020D5  64                 	db	100	;'d'
   466  0020D6  21                 	db	33
   467  0020D7  00                 	db	0
   468  0020D8                     STR_11:
   469  0020D8  49                 	db	73	;'I'
   470  0020D9  4E                 	db	78	;'N'
   471  0020DA  46                 	db	70	;'F'
   472  0020DB  00                 	db	0
   473  0020DC                     STR_15:
   474  0020DC  4E                 	db	78	;'N'
   475  0020DD  41                 	db	65	;'A'
   476  0020DE  4E                 	db	78	;'N'
   477  0020DF  00                 	db	0
   478  0020E0                     STR_12:
   479  0020E0  69                 	db	105	;'i'
   480  0020E1  6E                 	db	110	;'n'
   481  0020E2  66                 	db	102	;'f'
   482  0020E3  00                 	db	0
   483  0020E4                     STR_16:
   484  0020E4  6E                 	db	110	;'n'
   485  0020E5  61                 	db	97	;'a'
   486  0020E6  6E                 	db	110	;'n'
   487  0020E7  00                 	db	0
   488  0020E8                     STR_19:
   489  0020E8  6C                 	db	108	;'l'
   490  0020E9  66                 	db	102	;'f'
   491  0020EA  00                 	db	0
   492  0000                     
   493                           ; #config settings
   494  0020EB  00                 	db	0	; dummy byte at the end
   495  0000                     
   496                           	psect	cinit
   497  006296                     __pcinit:
   498                           	opt callstack 0
   499  006296                     start_initialization:
   500                           	opt callstack 0
   501  006296                     __initialization:
   502                           	opt callstack 0
   503                           
   504                           ; Initialize objects allocated to BANK4 (10 bytes)
   505                           ; load TBLPTR registers with __pidataBANK4
   506  006296  0EBC               	movlw	low __pidataBANK4
   507  006298  6EF6               	movwf	tblptrl,c
   508  00629A  0E63               	movlw	high __pidataBANK4
   509  00629C  6EF7               	movwf	tblptrh,c
   510  00629E  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   511  0062A0  6EF8               	movwf	tblptru,c
   512  0062A2  EE01  F09C         	lfsr	0,__pdataBANK4
   513  0062A6  EE10 F00A          	lfsr	1,10
   514  0062AA                     copy_data0:
   515  0062AA  0009               	tblrd		*+
   516  0062AC  006F FFD7 FFEE     	movff	tablat,postinc0
   517  0062B2  50E5               	movf	postdec1,w,c
   518  0062B4  50E1               	movf	fsr1l,w,c
   519  0062B6  E1F9               	bnz	copy_data0
   520                           
   521                           ; Clear objects allocated to BANK4 (156 bytes)
   522  0062B8  EE01  F000         	lfsr	0,__pbssBANK4
   523  0062BC  0E9C               	movlw	156
   524  0062BE                     clear_0:
   525  0062BE  6AEE               	clrf	postinc0,c
   526  0062C0  06E8               	decf	wreg,f,c
   527  0062C2  E1FD               	bnz	clear_0
   528  0062C4                     end_of_initialization:
   529                           	opt callstack 0
   530  0062C4                     __end_of__initialization:
   531                           	opt callstack 0
   532  0062C4  0100               	movlb	0
   533  0062C6  EF85  F026         	goto	_main	;jump to C main() function
   534                           
   535                           	psect	bssBANK4
   536  000400                     __pbssBANK4:
   537                           	opt callstack 0
   538  000400                     main_loop@last:
   539                           	opt callstack 0
   540  000400                     	ds	40
   541  000428                     floorf@F524:
   542                           	opt callstack 0
   543  000428                     	ds	4
   544  00042C                     ___fpclassifyf@F463:
   545                           	opt callstack 0
   546  00042C                     	ds	4
   547  000430                     main_loop@lastSum:
   548                           	opt callstack 0
   549  000430                     	ds	4
   550  000434                     main_loop@sum:
   551                           	opt callstack 0
   552  000434                     	ds	4
   553  000438                     main_loop@counter:
   554                           	opt callstack 0
   555  000438                     	ds	4
   556  00043C                     _nout:
   557                           	opt callstack 0
   558  00043C                     	ds	2
   559  00043E                     _width:
   560                           	opt callstack 0
   561  00043E                     	ds	2
   562  000440                     _prec:
   563                           	opt callstack 0
   564  000440                     	ds	2
   565  000442                     _flags:
   566                           	opt callstack 0
   567  000442                     	ds	2
   568  000444                     main_loop@pos:
   569                           	opt callstack 0
   570  000444                     	ds	2
   571  000446                     uart_tasks@rxPos:
   572                           	opt callstack 0
   573  000446                     	ds	1
   574  000447                     _on:
   575                           	opt callstack 0
   576  000447                     	ds	1
   577  000448                     _connected:
   578                           	opt callstack 0
   579  000448                     	ds	1
   580  000449                     _streaming:
   581                           	opt callstack 0
   582  000449                     	ds	1
   583  00044A                     _pairing:
   584                           	opt callstack 0
   585  00044A                     	ds	1
   586  00044B                     _volume_level:
   587                           	opt callstack 0
   588  00044B                     	ds	1
   589  00044C                     _dbuf:
   590                           	opt callstack 0
   591  00044C                     	ds	80
   592                           
   593                           	psect	dataBANK4
   594  00049C                     __pdataBANK4:
   595                           	opt callstack 0
   596  00049C                     _ledBrightness:
   597                           	opt callstack 0
   598  00049C                     	ds	4
   599  0004A0                     _bat_percent:
   600                           	opt callstack 0
   601  0004A0                     	ds	4
   602  0004A4                     _ackCmd:
   603                           	opt callstack 0
   604  0004A4                     	ds	2
   605                           
   606                           	psect	cstackBANK4
   607  0004A6                     __pcstackBANK4:
   608                           	opt callstack 0
   609  0004A6                     ??_main:
   610                           
   611                           ; 1 bytes @ 0x0
   612  0004A6                     	ds	2
   613                           
   614                           	psect	cstackBANK3
   615  000300                     __pcstackBANK3:
   616                           	opt callstack 0
   617  000300                     uart_tasks@message:
   618                           	opt callstack 0
   619                           
   620                           ; 256 bytes @ 0x0
   621  000300                     	ds	256
   622                           
   623                           	psect	cstackBANK0
   624  000060                     __pcstackBANK0:
   625                           	opt callstack 0
   626  000060                     ?_efgtoa:
   627                           	opt callstack 0
   628  000060                     efgtoa@fp:
   629                           	opt callstack 0
   630  000060                     setLED@mod:
   631                           	opt callstack 0
   632                           
   633                           ; 4 bytes @ 0x0
   634  000060                     	ds	1
   635  000061                     efgtoa@f:
   636                           	opt callstack 0
   637                           
   638                           ; 4 bytes @ 0x1
   639  000061                     	ds	3
   640  000064                     setLED@step:
   641                           	opt callstack 0
   642                           
   643                           ; 4 bytes @ 0x4
   644  000064                     	ds	1
   645  000065                     efgtoa@c:
   646                           	opt callstack 0
   647                           
   648                           ; 1 bytes @ 0x5
   649  000065                     	ds	1
   650  000066                     ??_efgtoa:
   651                           
   652                           ; 1 bytes @ 0x6
   653  000066                     	ds	2
   654  000068                     ??_setLED:
   655                           
   656                           ; 1 bytes @ 0x8
   657  000068                     	ds	3
   658  00006B                     efgtoa@ou:
   659                           	opt callstack 0
   660                           
   661                           ; 4 bytes @ 0xB
   662  00006B                     	ds	4
   663  00006F                     _efgtoa$618:
   664                           	opt callstack 0
   665                           
   666                           ; 2 bytes @ 0xF
   667  00006F                     	ds	1
   668  000070                     setLED@r:
   669                           	opt callstack 0
   670                           
   671                           ; 4 bytes @ 0x10
   672  000070                     	ds	1
   673  000071                     _efgtoa$619:
   674                           	opt callstack 0
   675                           
   676                           ; 2 bytes @ 0x11
   677  000071                     	ds	2
   678  000073                     _efgtoa$624:
   679                           	opt callstack 0
   680                           
   681                           ; 2 bytes @ 0x13
   682  000073                     	ds	1
   683  000074                     _setLED$287:
   684                           	opt callstack 0
   685                           
   686                           ; 4 bytes @ 0x14
   687  000074                     	ds	1
   688  000075                     _efgtoa$628:
   689                           	opt callstack 0
   690                           
   691                           ; 2 bytes @ 0x15
   692  000075                     	ds	2
   693  000077                     _efgtoa$629:
   694                           	opt callstack 0
   695                           
   696                           ; 2 bytes @ 0x17
   697  000077                     	ds	1
   698  000078                     _setLED$288:
   699                           	opt callstack 0
   700                           
   701                           ; 4 bytes @ 0x18
   702  000078                     	ds	1
   703  000079                     _efgtoa$630:
   704                           	opt callstack 0
   705                           
   706                           ; 2 bytes @ 0x19
   707  000079                     	ds	2
   708  00007B                     efgtoa@t:
   709                           	opt callstack 0
   710                           
   711                           ; 2 bytes @ 0x1B
   712  00007B                     	ds	1
   713  00007C                     _setLED$293:
   714                           	opt callstack 0
   715                           
   716                           ; 4 bytes @ 0x1C
   717  00007C                     	ds	1
   718  00007D                     efgtoa@pp:
   719                           	opt callstack 0
   720                           
   721                           ; 2 bytes @ 0x1D
   722  00007D                     	ds	2
   723  00007F                     efgtoa@m:
   724                           	opt callstack 0
   725                           
   726                           ; 2 bytes @ 0x1F
   727  00007F                     	ds	1
   728  000080                     _setLED$294:
   729                           	opt callstack 0
   730                           
   731                           ; 4 bytes @ 0x20
   732  000080                     	ds	1
   733  000081                     efgtoa@ne:
   734                           	opt callstack 0
   735                           
   736                           ; 2 bytes @ 0x21
   737  000081                     	ds	2
   738  000083                     efgtoa@d:
   739                           	opt callstack 0
   740                           
   741                           ; 2 bytes @ 0x23
   742  000083                     	ds	1
   743  000084                     setLED@trueMod:
   744                           	opt callstack 0
   745                           
   746                           ; 2 bytes @ 0x24
   747  000084                     	ds	1
   748  000085                     efgtoa@sign:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x25
   752  000085                     	ds	1
   753  000086                     setLED@g:
   754                           	opt callstack 0
   755                           
   756                           ; 4 bytes @ 0x26
   757  000086                     	ds	1
   758  000087                     efgtoa@p:
   759                           	opt callstack 0
   760                           
   761                           ; 2 bytes @ 0x27
   762  000087                     	ds	2
   763  000089                     efgtoa@nmode:
   764                           	opt callstack 0
   765                           
   766                           ; 1 bytes @ 0x29
   767  000089                     	ds	1
   768  00008A                     efgtoa@w:
   769                           	opt callstack 0
   770  00008A                     setLED@b:
   771                           	opt callstack 0
   772                           
   773                           ; 4 bytes @ 0x2A
   774  00008A                     	ds	2
   775  00008C                     efgtoa@mode:
   776                           	opt callstack 0
   777                           
   778                           ; 1 bytes @ 0x2C
   779  00008C                     	ds	1
   780  00008D                     efgtoa@h:
   781                           	opt callstack 0
   782                           
   783                           ; 4 bytes @ 0x2D
   784  00008D                     	ds	1
   785  00008E                     setLED@sg:
   786                           	opt callstack 0
   787                           
   788                           ; 4 bytes @ 0x2E
   789  00008E                     	ds	3
   790  000091                     efgtoa@l:
   791                           	opt callstack 0
   792                           
   793                           ; 4 bytes @ 0x31
   794  000091                     	ds	1
   795  000092                     setLED@sb:
   796                           	opt callstack 0
   797                           
   798                           ; 4 bytes @ 0x32
   799  000092                     	ds	3
   800  000095                     efgtoa@i:
   801                           	opt callstack 0
   802                           
   803                           ; 2 bytes @ 0x35
   804  000095                     	ds	1
   805  000096                     setLED@sr:
   806                           	opt callstack 0
   807                           
   808                           ; 4 bytes @ 0x36
   809  000096                     	ds	1
   810  000097                     efgtoa@g:
   811                           	opt callstack 0
   812                           
   813                           ; 4 bytes @ 0x37
   814  000097                     	ds	3
   815  00009A                     setLED@shift:
   816                           	opt callstack 0
   817                           
   818                           ; 4 bytes @ 0x3A
   819  00009A                     	ds	1
   820  00009B                     efgtoa@e:
   821                           	opt callstack 0
   822                           
   823                           ; 2 bytes @ 0x3B
   824  00009B                     	ds	2
   825  00009D                     efgtoa@n:
   826                           	opt callstack 0
   827                           
   828                           ; 2 bytes @ 0x3D
   829  00009D                     	ds	2
   830  00009F                     efgtoa@u:
   831                           	opt callstack 0
   832                           
   833                           ; 4 bytes @ 0x3F
   834  00009F                     	ds	4
   835  0000A3                     ??_vfpfcnvrt:
   836                           
   837                           ; 1 bytes @ 0x43
   838  0000A3                     	ds	4
   839  0000A7                     _vfpfcnvrt$644:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x47
   843  0000A7                     	ds	2
   844  0000A9                     _vfpfcnvrt$645:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x49
   848  0000A9                     	ds	2
   849  0000AB                     _vfpfcnvrt$649:
   850                           	opt callstack 0
   851                           
   852                           ; 2 bytes @ 0x4B
   853  0000AB                     	ds	2
   854  0000AD                     vfpfcnvrt@ct:
   855                           	opt callstack 0
   856                           
   857                           ; 3 bytes @ 0x4D
   858  0000AD                     	ds	3
   859  0000B0                     vfpfcnvrt@f:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x50
   863  0000B0                     	ds	4
   864  0000B4                     vfpfcnvrt@c:
   865                           	opt callstack 0
   866                           
   867                           ; 1 bytes @ 0x54
   868  0000B4                     	ds	1
   869  0000B5                     ?_vfprintf:
   870                           	opt callstack 0
   871  0000B5                     vfprintf@fp:
   872                           	opt callstack 0
   873                           
   874                           ; 1 bytes @ 0x55
   875  0000B5                     	ds	1
   876  0000B6                     vfprintf@fmt:
   877                           	opt callstack 0
   878                           
   879                           ; 1 bytes @ 0x56
   880  0000B6                     	ds	1
   881  0000B7                     vfprintf@ap:
   882                           	opt callstack 0
   883                           
   884                           ; 1 bytes @ 0x57
   885  0000B7                     	ds	1
   886  0000B8                     vfprintf@cfmt:
   887                           	opt callstack 0
   888                           
   889                           ; 1 bytes @ 0x58
   890  0000B8                     	ds	1
   891  0000B9                     ?_sprintf:
   892                           	opt callstack 0
   893  0000B9                     sprintf@s:
   894                           	opt callstack 0
   895                           
   896                           ; 1 bytes @ 0x59
   897  0000B9                     	ds	1
   898  0000BA                     sprintf@fmt:
   899                           	opt callstack 0
   900                           
   901                           ; 1 bytes @ 0x5A
   902  0000BA                     	ds	7
   903  0000C1                     sprintf@ap:
   904                           	opt callstack 0
   905                           
   906                           ; 1 bytes @ 0x61
   907  0000C1                     	ds	1
   908  0000C2                     sprintf@f:
   909                           	opt callstack 0
   910                           
   911                           ; 5 bytes @ 0x62
   912  0000C2                     	ds	5
   913  0000C7                     ??_main_loop:
   914                           
   915                           ; 1 bytes @ 0x67
   916  0000C7                     	ds	6
   917  0000CD                     main_loop@batmsg:
   918                           	opt callstack 0
   919                           
   920                           ; 17 bytes @ 0x6D
   921  0000CD                     	ds	17
   922  0000DE                     main_loop@lastAvg:
   923                           	opt callstack 0
   924                           
   925                           ; 4 bytes @ 0x7E
   926  0000DE                     	ds	4
   927  0000E2                     _main_loop$316:
   928                           	opt callstack 0
   929                           
   930                           ; 4 bytes @ 0x82
   931  0000E2                     	ds	4
   932  0000E6                     _main_loop$317:
   933                           	opt callstack 0
   934                           
   935                           ; 4 bytes @ 0x86
   936  0000E6                     	ds	4
   937  0000EA                     _main_loop$318:
   938                           	opt callstack 0
   939                           
   940                           ; 4 bytes @ 0x8A
   941  0000EA                     	ds	4
   942  0000EE                     _main_loop$336:
   943                           	opt callstack 0
   944                           
   945                           ; 4 bytes @ 0x8E
   946  0000EE                     	ds	4
   947  0000F2                     main_loop@absRes:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x92
   951  0000F2                     	ds	2
   952  0000F4                     main_loop@batlvl:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x94
   956  0000F4                     	ds	2
   957  0000F6                     main_loop@res:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x96
   961  0000F6                     	ds	2
   962  0000F8                     main_loop@sample:
   963                           	opt callstack 0
   964                           
   965                           ; 4 bytes @ 0x98
   966  0000F8                     	ds	4
   967  0000FC                     main_loop@rel:
   968                           	opt callstack 0
   969                           
   970                           ; 4 bytes @ 0x9C
   971  0000FC                     	ds	4
   972                           
   973                           	psect	cstackCOMRAM
   974  000001                     __pcstackCOMRAM:
   975                           	opt callstack 0
   976  000001                     ?_strlen:
   977                           	opt callstack 0
   978  000001                     ?___fpclassifyf:
   979                           	opt callstack 0
   980  000001                     ?_isupper:
   981                           	opt callstack 0
   982  000001                     ?_isdigit:
   983                           	opt callstack 0
   984  000001                     ?_strncmp:
   985                           	opt callstack 0
   986  000001                     ?_isspace:
   987                           	opt callstack 0
   988  000001                     ?___wmul:
   989                           	opt callstack 0
   990  000001                     ?___awdiv:
   991                           	opt callstack 0
   992  000001                     ?___awmod:
   993                           	opt callstack 0
   994  000001                     ?___lmul:
   995                           	opt callstack 0
   996  000001                     ?___lldiv:
   997                           	opt callstack 0
   998  000001                     ?___almod:
   999                           	opt callstack 0
  1000  000001                     ?___flneg:
  1001                           	opt callstack 0
  1002  000001                     ?___fltol:
  1003                           	opt callstack 0
  1004  000001                     ?___xxtofl:
  1005                           	opt callstack 0
  1006  000001                     lcd_write@data:
  1007                           	opt callstack 0
  1008  000001                     strncmp@_l:
  1009                           	opt callstack 0
  1010  000001                     ___wmul@multiplier:
  1011                           	opt callstack 0
  1012  000001                     ___awdiv@dividend:
  1013                           	opt callstack 0
  1014  000001                     ___awmod@dividend:
  1015                           	opt callstack 0
  1016  000001                     isdigit@c:
  1017                           	opt callstack 0
  1018  000001                     isspace@c:
  1019                           	opt callstack 0
  1020  000001                     isupper@c:
  1021                           	opt callstack 0
  1022  000001                     memcpy@d1:
  1023                           	opt callstack 0
  1024  000001                     fputc@c:
  1025                           	opt callstack 0
  1026  000001                     strcpy@dest:
  1027                           	opt callstack 0
  1028  000001                     strlen@s:
  1029                           	opt callstack 0
  1030  000001                     ___lmul@multiplier:
  1031                           	opt callstack 0
  1032  000001                     ___lldiv@dividend:
  1033                           	opt callstack 0
  1034  000001                     ___almod@dividend:
  1035                           	opt callstack 0
  1036  000001                     ___fleq@ff1:
  1037                           	opt callstack 0
  1038  000001                     ___flneg@f1:
  1039                           	opt callstack 0
  1040  000001                     ___fltol@f1:
  1041                           	opt callstack 0
  1042  000001                     ___xxtofl@val:
  1043                           	opt callstack 0
  1044  000001                     ___fpclassifyf@x:
  1045                           	opt callstack 0
  1046                           
  1047                           ; 4 bytes @ 0x0
  1048  000001                     	ds	1
  1049  000002                     lcd_write@longdelay:
  1050                           	opt callstack 0
  1051  000002                     strncmp@_r:
  1052                           	opt callstack 0
  1053                           
  1054                           ; 1 bytes @ 0x1
  1055  000002                     	ds	1
  1056  000003                     ??_isupper:
  1057  000003                     ??_isdigit:
  1058  000003                     ??_isspace:
  1059  000003                     ??_lcd_write:
  1060  000003                     fputc@fp:
  1061                           	opt callstack 0
  1062  000003                     ___wmul@multiplicand:
  1063                           	opt callstack 0
  1064  000003                     ___awdiv@divisor:
  1065                           	opt callstack 0
  1066  000003                     ___awmod@divisor:
  1067                           	opt callstack 0
  1068  000003                     memcpy@s1:
  1069                           	opt callstack 0
  1070  000003                     strcpy@src:
  1071                           	opt callstack 0
  1072  000003                     strlen@a:
  1073                           	opt callstack 0
  1074  000003                     strncmp@n:
  1075                           	opt callstack 0
  1076                           
  1077                           ; 2 bytes @ 0x2
  1078  000003                     	ds	1
  1079  000004                     ??_fputc:
  1080  000004                     lcd_write@rs:
  1081                           	opt callstack 0
  1082                           
  1083                           ; 1 bytes @ 0x3
  1084  000004                     	ds	1
  1085  000005                     ??___fpclassifyf:
  1086  000005                     ??_strcpy:
  1087  000005                     ??_strncmp:
  1088  000005                     ??___fltol:
  1089  000005                     ??___xxtofl:
  1090  000005                     lcd_init@shift:
  1091                           	opt callstack 0
  1092  000005                     lcd_set_data_addr@addr:
  1093                           	opt callstack 0
  1094  000005                     ___awdiv@counter:
  1095                           	opt callstack 0
  1096  000005                     ___awmod@counter:
  1097                           	opt callstack 0
  1098  000005                     lcd_print@string:
  1099                           	opt callstack 0
  1100  000005                     ___wmul@product:
  1101                           	opt callstack 0
  1102  000005                     memcpy@n:
  1103                           	opt callstack 0
  1104  000005                     ___lmul@multiplicand:
  1105                           	opt callstack 0
  1106  000005                     ___lldiv@divisor:
  1107                           	opt callstack 0
  1108  000005                     ___almod@divisor:
  1109                           	opt callstack 0
  1110  000005                     ___fleq@ff2:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x4
  1114  000005                     	ds	1
  1115  000006                     lcd_init@cursor:
  1116                           	opt callstack 0
  1117  000006                     ___awdiv@sign:
  1118                           	opt callstack 0
  1119  000006                     ___awmod@sign:
  1120                           	opt callstack 0
  1121  000006                     strncmp@l:
  1122                           	opt callstack 0
  1123                           
  1124                           ; 1 bytes @ 0x5
  1125  000006                     	ds	1
  1126  000007                     ??_lcd_print:
  1127  000007                     ?_tolower:
  1128                           	opt callstack 0
  1129  000007                     lcd_init@cursorblink:
  1130                           	opt callstack 0
  1131  000007                     _isspace$1151:
  1132                           	opt callstack 0
  1133  000007                     strncmp@r:
  1134                           	opt callstack 0
  1135  000007                     ___awdiv@quotient:
  1136                           	opt callstack 0
  1137  000007                     memcpy@d:
  1138                           	opt callstack 0
  1139  000007                     strcpy@s:
  1140                           	opt callstack 0
  1141  000007                     tolower@c:
  1142                           	opt callstack 0
  1143                           
  1144                           ; 2 bytes @ 0x6
  1145  000007                     	ds	1
  1146  000008                     ?_atoi:
  1147                           	opt callstack 0
  1148  000008                     lcd_init@on:
  1149                           	opt callstack 0
  1150  000008                     atoi@s:
  1151                           	opt callstack 0
  1152                           
  1153                           ; 1 bytes @ 0x7
  1154  000008                     	ds	1
  1155  000009                     ??_lcd_init:
  1156  000009                     ??_tolower:
  1157  000009                     ??___fleq:
  1158  000009                     lcd_print@i:
  1159                           	opt callstack 0
  1160  000009                     ___almod@counter:
  1161                           	opt callstack 0
  1162  000009                     ___fltol@sign1:
  1163                           	opt callstack 0
  1164  000009                     ___xxtofl@sign:
  1165                           	opt callstack 0
  1166  000009                     ___fpclassifyf@e:
  1167                           	opt callstack 0
  1168  000009                     memcpy@s:
  1169                           	opt callstack 0
  1170  000009                     fputs@s:
  1171                           	opt callstack 0
  1172  000009                     strcpy@d:
  1173                           	opt callstack 0
  1174  000009                     ___lmul@product:
  1175                           	opt callstack 0
  1176  000009                     ___lldiv@quotient:
  1177                           	opt callstack 0
  1178                           
  1179                           ; 4 bytes @ 0x8
  1180  000009                     	ds	1
  1181  00000A                     ??_atoi:
  1182  00000A                     lcd_init@inc:
  1183                           	opt callstack 0
  1184  00000A                     ___almod@sign:
  1185                           	opt callstack 0
  1186  00000A                     ___fltol@exp1:
  1187                           	opt callstack 0
  1188  00000A                     ___xxtofl@exp:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x9
  1192  00000A                     	ds	1
  1193  00000B                     memcpy@tmp:
  1194                           	opt callstack 0
  1195  00000B                     fputs@fp:
  1196                           	opt callstack 0
  1197  00000B                     ___xxtofl@arg:
  1198                           	opt callstack 0
  1199  00000B                     ___fpclassifyf@u:
  1200                           	opt callstack 0
  1201                           
  1202                           ; 4 bytes @ 0xA
  1203  00000B                     	ds	1
  1204  00000C                     fputs@c:
  1205                           	opt callstack 0
  1206  00000C                     uart_send@buf:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 2 bytes @ 0xB
  1210  00000C                     	ds	1
  1211  00000D                     ?___aldiv:
  1212                           	opt callstack 0
  1213  00000D                     ___lldiv@counter:
  1214                           	opt callstack 0
  1215  00000D                     fputs@i:
  1216                           	opt callstack 0
  1217  00000D                     _tolower$1243:
  1218                           	opt callstack 0
  1219  00000D                     ___aldiv@dividend:
  1220                           	opt callstack 0
  1221                           
  1222                           ; 4 bytes @ 0xC
  1223  00000D                     	ds	1
  1224  00000E                     ?___llmod:
  1225                           	opt callstack 0
  1226  00000E                     uart_send@len:
  1227                           	opt callstack 0
  1228  00000E                     atoi@neg:
  1229                           	opt callstack 0
  1230  00000E                     ___llmod@dividend:
  1231                           	opt callstack 0
  1232                           
  1233                           ; 4 bytes @ 0xD
  1234  00000E                     	ds	1
  1235  00000F                     ??_uart_send:
  1236  00000F                     ?_pad:
  1237                           	opt callstack 0
  1238  00000F                     ?___fladd:
  1239                           	opt callstack 0
  1240  00000F                     pad@fp:
  1241                           	opt callstack 0
  1242  00000F                     ___fladd@b:
  1243                           	opt callstack 0
  1244                           
  1245                           ; 4 bytes @ 0xE
  1246  00000F                     	ds	1
  1247  000010                     pad@buf:
  1248                           	opt callstack 0
  1249  000010                     _atoi$1120:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 2 bytes @ 0xF
  1253  000010                     	ds	1
  1254  000011                     handle_message@message:
  1255                           	opt callstack 0
  1256  000011                     ___aldiv@divisor:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 4 bytes @ 0x10
  1260  000011                     	ds	1
  1261  000012                     pad@p:
  1262                           	opt callstack 0
  1263  000012                     _atoi$1122:
  1264                           	opt callstack 0
  1265  000012                     ___llmod@divisor:
  1266                           	opt callstack 0
  1267                           
  1268                           ; 4 bytes @ 0x11
  1269  000012                     	ds	1
  1270  000013                     handle_message@len:
  1271                           	opt callstack 0
  1272  000013                     ___fladd@a:
  1273                           	opt callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x12
  1276  000013                     	ds	1
  1277  000014                     ??_pad:
  1278  000014                     _atoi$1121:
  1279                           	opt callstack 0
  1280                           
  1281                           ; 1 bytes @ 0x13
  1282  000014                     	ds	1
  1283  000015                     ??_uart_tasks:
  1284  000015                     ___aldiv@counter:
  1285                           	opt callstack 0
  1286  000015                     pad@i:
  1287                           	opt callstack 0
  1288  000015                     atoi@n:
  1289                           	opt callstack 0
  1290                           
  1291                           ; 2 bytes @ 0x14
  1292  000015                     	ds	1
  1293  000016                     ___aldiv@sign:
  1294                           	opt callstack 0
  1295  000016                     ___llmod@counter:
  1296                           	opt callstack 0
  1297                           
  1298                           ; 1 bytes @ 0x15
  1299  000016                     	ds	1
  1300  000017                     ??___fladd:
  1301  000017                     pad@w:
  1302                           	opt callstack 0
  1303  000017                     ___aldiv@quotient:
  1304                           	opt callstack 0
  1305                           
  1306                           ; 4 bytes @ 0x16
  1307  000017                     	ds	2
  1308  000019                     uart_tasks@rxLen:
  1309                           	opt callstack 0
  1310                           
  1311                           ; 1 bytes @ 0x18
  1312  000019                     	ds	1
  1313  00001A                     uart_tasks@rawMsgOffset:
  1314                           	opt callstack 0
  1315                           
  1316                           ; 1 bytes @ 0x19
  1317  00001A                     	ds	1
  1318  00001B                     uart_tasks@checksum:
  1319                           	opt callstack 0
  1320  00001B                     ___fladd@signs:
  1321                           	opt callstack 0
  1322  00001B                     updateButtonLight@step:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x1A
  1326  00001B                     	ds	1
  1327  00001C                     uart_tasks@msgOffset:
  1328                           	opt callstack 0
  1329  00001C                     ___fladd@aexp:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x1B
  1333  00001C                     	ds	1
  1334  00001D                     uart_tasks@posInRawMsg:
  1335                           	opt callstack 0
  1336  00001D                     ___fladd@bexp:
  1337                           	opt callstack 0
  1338                           
  1339                           ; 1 bytes @ 0x1C
  1340  00001D                     	ds	1
  1341  00001E                     uart_tasks@i:
  1342                           	opt callstack 0
  1343  00001E                     ___fladd@grs:
  1344                           	opt callstack 0
  1345                           
  1346                           ; 1 bytes @ 0x1D
  1347  00001E                     	ds	1
  1348  00001F                     ??_updateButtonLight:
  1349  00001F                     ?___fldiv:
  1350                           	opt callstack 0
  1351  00001F                     uart_tasks@bytePos:
  1352                           	opt callstack 0
  1353  00001F                     ___fldiv@b:
  1354                           	opt callstack 0
  1355                           
  1356                           ; 4 bytes @ 0x1E
  1357  00001F                     	ds	1
  1358  000020                     uart_tasks@intPos:
  1359                           	opt callstack 0
  1360                           
  1361                           ; 1 bytes @ 0x1F
  1362  000020                     	ds	1
  1363  000021                     uart_tasks@msgLen:
  1364                           	opt callstack 0
  1365                           
  1366                           ; 1 bytes @ 0x20
  1367  000021                     	ds	1
  1368  000022                     uart_tasks@zeroByte:
  1369                           	opt callstack 0
  1370                           
  1371                           ; 1 bytes @ 0x21
  1372  000022                     	ds	1
  1373  000023                     uart_tasks@val:
  1374                           	opt callstack 0
  1375  000023                     updateButtonLight@dch:
  1376                           	opt callstack 0
  1377  000023                     ___fldiv@a:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 4 bytes @ 0x22
  1381  000023                     	ds	4
  1382  000027                     ??___fldiv:
  1383                           
  1384                           ; 1 bytes @ 0x26
  1385  000027                     	ds	4
  1386  00002B                     ___fldiv@rem:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 4 bytes @ 0x2A
  1390  00002B                     	ds	4
  1391  00002F                     ___fldiv@sign:
  1392                           	opt callstack 0
  1393                           
  1394                           ; 1 bytes @ 0x2E
  1395  00002F                     	ds	1
  1396  000030                     ___fldiv@new_exp:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x2F
  1400  000030                     	ds	2
  1401  000032                     ___fldiv@grs:
  1402                           	opt callstack 0
  1403                           
  1404                           ; 4 bytes @ 0x31
  1405  000032                     	ds	4
  1406  000036                     ___fldiv@bexp:
  1407                           	opt callstack 0
  1408                           
  1409                           ; 1 bytes @ 0x35
  1410  000036                     	ds	1
  1411  000037                     ___fldiv@aexp:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x36
  1415  000037                     	ds	1
  1416  000038                     ?_floorf:
  1417                           	opt callstack 0
  1418  000038                     ?___flmul:
  1419                           	opt callstack 0
  1420  000038                     ___flmul@b:
  1421                           	opt callstack 0
  1422  000038                     floorf@x:
  1423                           	opt callstack 0
  1424                           
  1425                           ; 4 bytes @ 0x37
  1426  000038                     	ds	4
  1427  00003C                     ??_floorf:
  1428  00003C                     ___flmul@a:
  1429                           	opt callstack 0
  1430                           
  1431                           ; 4 bytes @ 0x3B
  1432  00003C                     	ds	4
  1433  000040                     ??___flmul:
  1434                           
  1435                           ; 1 bytes @ 0x3F
  1436  000040                     	ds	2
  1437  000042                     floorf@m:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 4 bytes @ 0x41
  1441  000042                     	ds	2
  1442  000044                     ___flmul@sign:
  1443                           	opt callstack 0
  1444                           
  1445                           ; 1 bytes @ 0x43
  1446  000044                     	ds	1
  1447  000045                     ___flmul@aexp:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 1 bytes @ 0x44
  1451  000045                     	ds	1
  1452  000046                     floorf@e:
  1453                           	opt callstack 0
  1454  000046                     ___flmul@grs:
  1455                           	opt callstack 0
  1456                           
  1457                           ; 4 bytes @ 0x45
  1458  000046                     	ds	2
  1459  000048                     floorf@u:
  1460                           	opt callstack 0
  1461                           
  1462                           ; 4 bytes @ 0x47
  1463  000048                     	ds	2
  1464  00004A                     ___flmul@bexp:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 1 bytes @ 0x49
  1468  00004A                     	ds	1
  1469  00004B                     ___flmul@prod:
  1470                           	opt callstack 0
  1471                           
  1472                           ; 4 bytes @ 0x4A
  1473  00004B                     	ds	4
  1474  00004F                     ___flmul@temp:
  1475                           	opt callstack 0
  1476                           
  1477                           ; 2 bytes @ 0x4E
  1478  00004F                     	ds	2
  1479  000051                     ?___flsub:
  1480                           	opt callstack 0
  1481  000051                     ___flge@ff1:
  1482                           	opt callstack 0
  1483  000051                     ___flsub@b:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 4 bytes @ 0x50
  1487  000051                     	ds	4
  1488  000055                     ___flge@ff2:
  1489                           	opt callstack 0
  1490  000055                     ___flsub@a:
  1491                           	opt callstack 0
  1492                           
  1493                           ; 4 bytes @ 0x54
  1494  000055                     	ds	4
  1495  000059                     ??___flge:
  1496                           
  1497                           ; 1 bytes @ 0x58
  1498  000059                     	ds	4
  1499  00005D                     ?_vfpfcnvrt:
  1500                           	opt callstack 0
  1501  00005D                     vfpfcnvrt@fp:
  1502                           	opt callstack 0
  1503                           
  1504                           ; 1 bytes @ 0x5C
  1505  00005D                     	ds	1
  1506  00005E                     vfpfcnvrt@fmt:
  1507                           	opt callstack 0
  1508                           
  1509                           ; 1 bytes @ 0x5D
  1510  00005E                     	ds	1
  1511  00005F                     vfpfcnvrt@ap:
  1512                           	opt callstack 0
  1513                           
  1514                           ; 1 bytes @ 0x5E
  1515  00005F                     	ds	1
  1516  000060                     
  1517                           ; 1 bytes @ 0x5F
  1518 ;;
  1519 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1520 ;;
  1521 ;; *************** function _main *****************
  1522 ;; Defined at:
  1523 ;;		line 258 in file "main.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1539 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1540 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1541 ;;Total ram usage:        2 bytes
  1542 ;; Hardware stack levels required when called:    9
  1543 ;; This function calls:
  1544 ;;		_lcd_init
  1545 ;;		_lcd_print
  1546 ;;		_main_loop
  1547 ;;		_uart_init
  1548 ;; This function is called by:
  1549 ;;		Startup code after reset
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text0
  1554  004D0A                     __ptext0:
  1555                           	opt callstack 0
  1556  004D0A                     _main:
  1557                           	opt callstack 22
  1558                           
  1559                           ;main.c: 259:     TRISA = 0b00000000;
  1560                           
  1561                           ;incstack = 0
  1562  004D0A  0E00               	movlw	0
  1563  004D0C  6EC2               	movwf	194,c	;volatile
  1564                           
  1565                           ;main.c: 260:     PORTA = 0b00000000;
  1566  004D0E  0E00               	movlw	0
  1567  004D10  6ECA               	movwf	202,c	;volatile
  1568                           
  1569                           ;main.c: 261:     ANSELA = 0b00000000;
  1570  004D12  0E00               	movlw	0
  1571  004D14  013A               	movlb	58	; () banked
  1572  004D16  6F40               	movwf	64,b	;volatile
  1573                           
  1574                           ;main.c: 262:     WPUA = 0b00000000;
  1575  004D18  0E00               	movlw	0
  1576  004D1A  6F41               	movwf	65,b	;volatile
  1577                           
  1578                           ; BSR set to: 58
  1579                           ;main.c: 263:     INLVLA = 0b11111111;
  1580  004D1C  6944               	setf	68,b	;volatile
  1581                           
  1582                           ; BSR set to: 58
  1583                           ;main.c: 264:     SLRCONA = 0b11111111;
  1584  004D1E  6943               	setf	67,b	;volatile
  1585                           
  1586                           ;main.c: 265:     ODCONA = 0b00000000;
  1587  004D20  0E00               	movlw	0
  1588  004D22  6F42               	movwf	66,b	;volatile
  1589                           
  1590                           ;main.c: 267:     TRISB = 0b11001110;
  1591  004D24  0ECE               	movlw	206
  1592  004D26  6EC3               	movwf	195,c	;volatile
  1593                           
  1594                           ;main.c: 268:     PORTB = 0b00010000;
  1595  004D28  0E10               	movlw	16
  1596  004D2A  6ECB               	movwf	203,c	;volatile
  1597                           
  1598                           ;main.c: 269:     ANSELB = 0b00000000;
  1599  004D2C  0E00               	movlw	0
  1600  004D2E  6F50               	movwf	80,b	;volatile
  1601                           
  1602                           ;main.c: 270:     WPUB = 0b11000000;
  1603  004D30  0EC0               	movlw	192
  1604  004D32  6F51               	movwf	81,b	;volatile
  1605                           
  1606                           ; BSR set to: 58
  1607                           ;main.c: 271:     INLVLB = 0b11111111;
  1608  004D34  6954               	setf	84,b	;volatile
  1609                           
  1610                           ; BSR set to: 58
  1611                           ;main.c: 272:     SLRCONB = 0b11111111;
  1612  004D36  6953               	setf	83,b	;volatile
  1613                           
  1614                           ;main.c: 273:     ODCONB = 0b00000000;
  1615  004D38  0E00               	movlw	0
  1616  004D3A  6F52               	movwf	82,b	;volatile
  1617                           
  1618                           ;main.c: 275:     TRISC = 0b01101110;
  1619  004D3C  0E6E               	movlw	110
  1620  004D3E  6EC4               	movwf	196,c	;volatile
  1621                           
  1622                           ;main.c: 276:     PORTC = 0b00000000;
  1623  004D40  0E00               	movlw	0
  1624  004D42  6ECC               	movwf	204,c	;volatile
  1625                           
  1626                           ;main.c: 277:     ANSELC = 0b01100000;
  1627  004D44  0E60               	movlw	96
  1628  004D46  6F60               	movwf	96,b	;volatile
  1629                           
  1630                           ;main.c: 278:     WPUC = 0b00001110;
  1631  004D48  0E0E               	movlw	14
  1632  004D4A  6F61               	movwf	97,b	;volatile
  1633                           
  1634                           ; BSR set to: 58
  1635                           ;main.c: 279:     INLVLC = 0b11111111;
  1636  004D4C  6964               	setf	100,b	;volatile
  1637                           
  1638                           ; BSR set to: 58
  1639                           ;main.c: 280:     SLRCONC = 0b11111111;
  1640  004D4E  6963               	setf	99,b	;volatile
  1641                           
  1642                           ;main.c: 281:     ODCONC = 0b00000000;
  1643  004D50  0E00               	movlw	0
  1644  004D52  6F62               	movwf	98,b	;volatile
  1645                           
  1646                           ;main.c: 283:     TRISD = 0b00001111;
  1647  004D54  0E0F               	movlw	15
  1648  004D56  6EC5               	movwf	197,c	;volatile
  1649                           
  1650                           ;main.c: 284:     PORTD = 0b00000000;
  1651  004D58  0E00               	movlw	0
  1652  004D5A  6ECD               	movwf	205,c	;volatile
  1653                           
  1654                           ;main.c: 285:     ANSELD = 0b00001000;
  1655  004D5C  0E08               	movlw	8
  1656  004D5E  6F70               	movwf	112,b	;volatile
  1657                           
  1658                           ;main.c: 286:     WPUD = 0b00000111;
  1659  004D60  0E07               	movlw	7
  1660  004D62  6F71               	movwf	113,b	;volatile
  1661                           
  1662                           ; BSR set to: 58
  1663                           ;main.c: 287:     INLVLD = 0b11111111;
  1664  004D64  6974               	setf	116,b	;volatile
  1665                           
  1666                           ; BSR set to: 58
  1667                           ;main.c: 288:     SLRCOND = 0b11111111;
  1668  004D66  6973               	setf	115,b	;volatile
  1669                           
  1670                           ;main.c: 289:     ODCOND = 0b00000000;
  1671  004D68  0E00               	movlw	0
  1672  004D6A  6F72               	movwf	114,b	;volatile
  1673                           
  1674                           ;main.c: 291:     TRISE = 0b11111000;
  1675  004D6C  0EF8               	movlw	248
  1676  004D6E  6EC6               	movwf	198,c	;volatile
  1677                           
  1678                           ;main.c: 292:     PORTE = 0b00000100;
  1679  004D70  0E04               	movlw	4
  1680  004D72  6ECE               	movwf	206,c	;volatile
  1681                           
  1682                           ;main.c: 293:     ANSELE = 0b11110000;
  1683  004D74  0EF0               	movlw	240
  1684  004D76  6F80               	movwf	128,b	;volatile
  1685                           
  1686                           ;main.c: 294:     WPUE = 0b00001000;
  1687  004D78  0E08               	movlw	8
  1688  004D7A  6F81               	movwf	129,b	;volatile
  1689                           
  1690                           ; BSR set to: 58
  1691                           ;main.c: 295:     INLVLE = 0b11111111;
  1692  004D7C  6984               	setf	132,b	;volatile
  1693                           
  1694                           ; BSR set to: 58
  1695                           ;main.c: 296:     SLRCONE = 0b11111111;
  1696  004D7E  6983               	setf	131,b	;volatile
  1697                           
  1698                           ;main.c: 297:     ODCONE = 0b00000000;
  1699  004D80  0E00               	movlw	0
  1700  004D82  6F82               	movwf	130,b	;volatile
  1701                           
  1702                           ;main.c: 299:     PMD0 = 0b01111111;
  1703  004D84  0E7F               	movlw	127
  1704  004D86  0139               	movlb	57	; () banked
  1705  004D88  6FC0               	movwf	192,b	;volatile
  1706                           
  1707                           ;main.c: 300:     PMD1 = 0b11111011;
  1708  004D8A  0EFB               	movlw	251
  1709  004D8C  6FC1               	movwf	193,b	;volatile
  1710                           
  1711                           ;main.c: 301:     PMD2 = 0b01000111;
  1712  004D8E  0E47               	movlw	71
  1713  004D90  6FC2               	movwf	194,b	;volatile
  1714                           
  1715                           ;main.c: 302:     PMD3 = 0b01010001;
  1716  004D92  0E51               	movlw	81
  1717  004D94  6FC3               	movwf	195,b	;volatile
  1718                           
  1719                           ;main.c: 303:     PMD4 = 0b11100000;
  1720  004D96  0EE0               	movlw	224
  1721  004D98  6FC4               	movwf	196,b	;volatile
  1722                           
  1723                           ;main.c: 304:     PMD5 = 0b00100111;
  1724  004D9A  0E27               	movlw	39
  1725  004D9C  6FC5               	movwf	197,b	;volatile
  1726                           
  1727                           ;main.c: 305:     PMD6 = 0b00111111;
  1728  004D9E  0E3F               	movlw	63
  1729  004DA0  6FC6               	movwf	198,b	;volatile
  1730                           
  1731                           ;main.c: 306:     PMD7 = 0b00000000;
  1732  004DA2  0E00               	movlw	0
  1733  004DA4  6FC7               	movwf	199,b	;volatile
  1734                           
  1735                           ;main.c: 308:     ADCON0 = 0b10000100;
  1736  004DA6  0E84               	movlw	132
  1737  004DA8  013E               	movlb	62	; () banked
  1738  004DAA  6FF8               	movwf	248,b	;volatile
  1739                           
  1740                           ;main.c: 309:     ADCON1 = 0b00000000;
  1741  004DAC  0E00               	movlw	0
  1742  004DAE  6FF9               	movwf	249,b	;volatile
  1743                           
  1744                           ;main.c: 310:     ADCON2 = 0b00000000;
  1745  004DB0  0E00               	movlw	0
  1746  004DB2  6FFA               	movwf	250,b	;volatile
  1747                           
  1748                           ;main.c: 311:     ADCON3 = 0b00000000;
  1749  004DB4  0E00               	movlw	0
  1750  004DB6  6FFB               	movwf	251,b	;volatile
  1751                           
  1752                           ;main.c: 312:     ADCLK = 0b00011111;
  1753  004DB8  0E1F               	movlw	31
  1754  004DBA  6FFF               	movwf	255,b	;volatile
  1755                           
  1756                           ;main.c: 313:     ADREF = 0b00000000;
  1757  004DBC  0E00               	movlw	0
  1758  004DBE  6FFD               	movwf	253,b	;volatile
  1759                           
  1760                           ;main.c: 315:     RC7PPS = 0b001010;
  1761  004DC0  0E0A               	movlw	10
  1762  004DC2  013A               	movlb	58	; () banked
  1763  004DC4  6F17               	movwf	23,b	;volatile
  1764                           
  1765                           ;main.c: 316:     RD4PPS = 0b001011;
  1766  004DC6  0E0B               	movlw	11
  1767  004DC8  6F1C               	movwf	28,b	;volatile
  1768                           
  1769                           ;main.c: 317:     RD5PPS = 0b001100;
  1770  004DCA  0E0C               	movlw	12
  1771  004DCC  6F1D               	movwf	29,b	;volatile
  1772                           
  1773                           ;main.c: 318:     RD6PPS = 0b001110;
  1774  004DCE  0E0E               	movlw	14
  1775  004DD0  6F1E               	movwf	30,b	;volatile
  1776                           
  1777                           ;main.c: 319:     RD7PPS = 0b010000;
  1778  004DD2  0E10               	movlw	16
  1779  004DD4  6F1F               	movwf	31,b	;volatile
  1780                           
  1781                           ;main.c: 321:     CCPTMRS0 = 0b01010101;
  1782  004DD6  0E55               	movlw	85
  1783  004DD8  013F               	movlb	63	; () banked
  1784  004DDA  6F5E               	movwf	94,b	;volatile
  1785                           
  1786                           ;main.c: 322:     CCP2CON = 0b10001111;
  1787  004DDC  0E8F               	movlw	143
  1788  004DDE  6E7A               	movwf	122,c	;volatile
  1789                           
  1790                           ;main.c: 323:     CCP3CON = 0b10001111;
  1791  004DE0  0E8F               	movlw	143
  1792  004DE2  6E76               	movwf	118,c	;volatile
  1793                           
  1794                           ;main.c: 324:     CCP4CON = 0b10001111;
  1795  004DE4  0E8F               	movlw	143
  1796  004DE6  6E72               	movwf	114,c	;volatile
  1797                           
  1798                           ;main.c: 325:     PWM6CON = 0b10000000;
  1799  004DE8  0E80               	movlw	128
  1800  004DEA  6E6A               	movwf	106,c	;volatile
  1801                           
  1802                           ;main.c: 326:     PWM8CON = 0b10000000;
  1803  004DEC  0E80               	movlw	128
  1804  004DEE  6E62               	movwf	98,c	;volatile
  1805                           
  1806                           ; BSR set to: 63
  1807                           ;main.c: 328:     T2PR = 255;
  1808  004DF0  68AB               	setf	171,c	;volatile
  1809                           
  1810                           ;main.c: 329:     T2CLK = 0b0001;
  1811  004DF2  0E01               	movlw	1
  1812  004DF4  6EAE               	movwf	174,c	;volatile
  1813                           
  1814                           ;main.c: 330:     T2CON = 0b10010000;
  1815  004DF6  0E90               	movlw	144
  1816  004DF8  6EAC               	movwf	172,c	;volatile
  1817                           
  1818                           ;main.c: 332:     CCPR2L = 0;
  1819  004DFA  0E00               	movlw	0
  1820  004DFC  6E78               	movwf	120,c	;volatile
  1821                           
  1822                           ;main.c: 333:     CCPR2H = 0;
  1823  004DFE  0E00               	movlw	0
  1824  004E00  6E79               	movwf	121,c	;volatile
  1825                           
  1826                           ;main.c: 334:     CCPR3L = 0;
  1827  004E02  0E00               	movlw	0
  1828  004E04  6E74               	movwf	116,c	;volatile
  1829                           
  1830                           ;main.c: 335:     CCPR3H = 0;
  1831  004E06  0E00               	movlw	0
  1832  004E08  6E75               	movwf	117,c	;volatile
  1833                           
  1834                           ;main.c: 336:     CCPR4L = 0;
  1835  004E0A  0E00               	movlw	0
  1836  004E0C  6E70               	movwf	112,c	;volatile
  1837                           
  1838                           ;main.c: 337:     CCPR4H = 0;
  1839  004E0E  0E00               	movlw	0
  1840  004E10  6E71               	movwf	113,c	;volatile
  1841                           
  1842                           ;main.c: 338:     PWM6DCH = 0;
  1843  004E12  0E00               	movlw	0
  1844  004E14  6E69               	movwf	105,c	;volatile
  1845                           
  1846                           ;main.c: 339:     PWM6DCL = 0;
  1847  004E16  0E00               	movlw	0
  1848  004E18  6E68               	movwf	104,c	;volatile
  1849                           
  1850                           ; BSR set to: 63
  1851                           ;main.c: 340:     PWM8DCH = 255;
  1852  004E1A  6861               	setf	97,c	;volatile
  1853                           
  1854                           ; BSR set to: 63
  1855                           ;main.c: 341:     PWM8DCL = 255;
  1856  004E1C  6860               	setf	96,c	;volatile
  1857                           
  1858                           ; BSR set to: 63
  1859                           ;main.c: 343:     LATB4 = 0;
  1860  004E1E  98BB               	bcf	16315,4,c	;volatile
  1861                           
  1862                           ; BSR set to: 63
  1863                           ;main.c: 344:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1864  004E20  0E05               	movlw	5
  1865  004E22  0104               	movlb	4	; () banked
  1866  004E24  6FA7               	movwf	(??_main+1)& (0+255),b
  1867  004E26  0E0F               	movlw	15
  1868  004E28  6FA6               	movwf	??_main& (0+255),b
  1869  004E2A  0EF1               	movlw	241
  1870  004E2C                     u8127:
  1871  004E2C  2EE8               	decfsz	wreg,f,c
  1872  004E2E  D7FE               	bra	u8127
  1873  004E30  2FA6               	decfsz	??_main& (0+255),f,b
  1874  004E32  D7FC               	bra	u8127
  1875  004E34  2FA7               	decfsz	(??_main+1)& (0+255),f,b
  1876  004E36  D7FA               	bra	u8127
  1877                           
  1878                           ;main.c: 345:     LATB4 = 1;
  1879  004E38  88BB               	bsf	16315,4,c	;volatile
  1880                           
  1881                           ;main.c: 347:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1882  004E3A  0E05               	movlw	5
  1883  004E3C  0104               	movlb	4	; () banked
  1884  004E3E  6FA7               	movwf	(??_main+1)& (0+255),b
  1885  004E40  0E0F               	movlw	15
  1886  004E42  6FA6               	movwf	??_main& (0+255),b
  1887  004E44  0EF1               	movlw	241
  1888  004E46                     u8137:
  1889  004E46  2EE8               	decfsz	wreg,f,c
  1890  004E48  D7FE               	bra	u8137
  1891  004E4A  2FA6               	decfsz	??_main& (0+255),f,b
  1892  004E4C  D7FC               	bra	u8137
  1893  004E4E  2FA7               	decfsz	(??_main+1)& (0+255),f,b
  1894  004E50  D7FA               	bra	u8137
  1895                           
  1896                           ;main.c: 348:     lcd_init(1, 0, 0, 0, 1);
  1897  004E52  0E00               	movlw	0
  1898  004E54  6E05               	movwf	lcd_init@shift^0,c
  1899  004E56  0E00               	movlw	0
  1900  004E58  6E06               	movwf	lcd_init@cursor^0,c
  1901  004E5A  0E00               	movlw	0
  1902  004E5C  6E07               	movwf	lcd_init@cursorblink^0,c
  1903  004E5E  0E01               	movlw	1
  1904  004E60  6E08               	movwf	lcd_init@on^0,c
  1905  004E62  0E01               	movlw	1
  1906  004E64  ECA1  F02E         	call	_lcd_init
  1907                           
  1908                           ;main.c: 349:     lcd_print("Hello World!");
  1909  004E68  0ECB               	movlw	low STR_10
  1910  004E6A  6E05               	movwf	lcd_print@string^0,c
  1911  004E6C  5005               	movf	lcd_print@string^0,w,c
  1912  004E6E  A4D8               	btfss	status,2,c
  1913  004E70  0E20               	movlw	high __smallconst
  1914  004E72  6E06               	movwf	(lcd_print@string+1)^0,c
  1915  004E74  EC4B  F02D         	call	_lcd_print	;wreg free
  1916                           
  1917                           ;main.c: 351:     uart_init();
  1918  004E78  ECFD  F02C         	call	_uart_init	;wreg free
  1919  004E7C                     l6259:
  1920  004E7C  EC2F  F016         	call	_main_loop	;wreg free
  1921  004E80  D7FD               	goto	l6259
  1922  004E82                     __end_of_main:
  1923                           	opt callstack 0
  1924                           
  1925 ;; *************** function _uart_init *****************
  1926 ;; Defined at:
  1927 ;;		line 16 in file "uart.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;		None
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;		None
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg, status,2
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/3F
  1938 ;;		On exit  : 3F/3A
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1945 ;;Total ram usage:        0 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; This function calls:
  1948 ;;		Nothing
  1949 ;; This function is called by:
  1950 ;;		_main
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text1
  1955  0059FA                     __ptext1:
  1956                           	opt callstack 0
  1957  0059FA                     _uart_init:
  1958                           	opt callstack 30
  1959                           
  1960                           ;uart.c: 17:     DMA1CON1 = 0b01000000;
  1961                           
  1962                           ;incstack = 0
  1963  0059FA  0E40               	movlw	64
  1964  0059FC  013B               	movlb	59	; () banked
  1965  0059FE  6FFD               	movwf	253,b	;volatile
  1966                           
  1967                           ;uart.c: 18:     DMA1SSZH = 0x00;
  1968  005A00  0E00               	movlw	0
  1969  005A02  6FF8               	movwf	248,b	;volatile
  1970                           
  1971                           ;uart.c: 19:     DMA1SSZL = 0x01;
  1972  005A04  0E01               	movlw	1
  1973  005A06  6FF7               	movwf	247,b	;volatile
  1974                           
  1975                           ;uart.c: 20:     DMA1SSAU = 0x00;
  1976  005A08  0E00               	movlw	0
  1977  005A0A  6FFB               	movwf	251,b	;volatile
  1978                           
  1979                           ;uart.c: 21:     DMA1SSAH = 0x3d;
  1980  005A0C  0E3D               	movlw	61
  1981  005A0E  6FFA               	movwf	250,b	;volatile
  1982                           
  1983                           ;uart.c: 22:     DMA1SSAL = 0xe8;
  1984  005A10  0EE8               	movlw	232
  1985  005A12  6FF9               	movwf	249,b	;volatile
  1986                           
  1987                           ;uart.c: 23:     DMA1DSZH = 0x01;
  1988  005A14  0E01               	movlw	1
  1989  005A16  6FEF               	movwf	239,b	;volatile
  1990                           
  1991                           ;uart.c: 24:     DMA1DSZL = 0x00;
  1992  005A18  0E00               	movlw	0
  1993  005A1A  6FEE               	movwf	238,b	;volatile
  1994                           
  1995                           ;uart.c: 25:     DMA1DSAH = 0x01;
  1996  005A1C  0E01               	movlw	1
  1997  005A1E  6FF1               	movwf	241,b	;volatile
  1998                           
  1999                           ;uart.c: 26:     DMA1DSAL = 0x00;
  2000  005A20  0E00               	movlw	0
  2001  005A22  6FF0               	movwf	240,b	;volatile
  2002                           
  2003                           ;uart.c: 27:     DMA1SIRQ = 0x1b;
  2004  005A24  0E1B               	movlw	27
  2005  005A26  6FFF               	movwf	255,b	;volatile
  2006                           
  2007                           ;uart.c: 28:     DMA1AIRQ = 0x1d;
  2008  005A28  0E1D               	movlw	29
  2009  005A2A  6FFE               	movwf	254,b	;volatile
  2010                           
  2011                           ;uart.c: 29:     DMA1CON0 = 0b11000100;
  2012  005A2C  0EC4               	movlw	196
  2013  005A2E  6FFC               	movwf	252,b	;volatile
  2014                           
  2015                           ;uart.c: 31:     DMA2CON1 = 0b00000011;
  2016  005A30  0E03               	movlw	3
  2017  005A32  6FDD               	movwf	221,b	;volatile
  2018                           
  2019                           ;uart.c: 32:     DMA2SSZH = 0x00;
  2020  005A34  0E00               	movlw	0
  2021  005A36  6FD8               	movwf	216,b	;volatile
  2022                           
  2023                           ;uart.c: 33:     DMA2SSZL = 0x01;
  2024  005A38  0E01               	movlw	1
  2025  005A3A  6FD7               	movwf	215,b	;volatile
  2026                           
  2027                           ;uart.c: 34:     DMA2SSAU = 0x00;
  2028  005A3C  0E00               	movlw	0
  2029  005A3E  6FDB               	movwf	219,b	;volatile
  2030                           
  2031                           ;uart.c: 35:     DMA2SSAH = 0x02;
  2032  005A40  0E02               	movlw	2
  2033  005A42  6FDA               	movwf	218,b	;volatile
  2034                           
  2035                           ;uart.c: 36:     DMA2SSAL = 0x00;
  2036  005A44  0E00               	movlw	0
  2037  005A46  6FD9               	movwf	217,b	;volatile
  2038                           
  2039                           ;uart.c: 37:     DMA2DSZH = 0x00;
  2040  005A48  0E00               	movlw	0
  2041  005A4A  6FCF               	movwf	207,b	;volatile
  2042                           
  2043                           ;uart.c: 38:     DMA2DSZL = 0x01;
  2044  005A4C  0E01               	movlw	1
  2045  005A4E  6FCE               	movwf	206,b	;volatile
  2046                           
  2047                           ;uart.c: 39:     DMA2DSAH = 0x3d;
  2048  005A50  0E3D               	movlw	61
  2049  005A52  6FD1               	movwf	209,b	;volatile
  2050                           
  2051                           ;uart.c: 40:     DMA2DSAL = 0xea;
  2052  005A54  0EEA               	movlw	234
  2053  005A56  6FD0               	movwf	208,b	;volatile
  2054                           
  2055                           ;uart.c: 41:     DMA2SIRQ = 0x1c;
  2056  005A58  0E1C               	movlw	28
  2057  005A5A  6FDF               	movwf	223,b	;volatile
  2058                           
  2059                           ;uart.c: 42:     DMA2AIRQ = 0x1d;
  2060  005A5C  0E1D               	movlw	29
  2061  005A5E  6FDE               	movwf	222,b	;volatile
  2062                           
  2063                           ;uart.c: 43:     DMA2CON0 = 0b00000100;
  2064  005A60  0E04               	movlw	4
  2065  005A62  6FDC               	movwf	220,b	;volatile
  2066                           
  2067                           ;uart.c: 45:     PRLOCK = 0x55;
  2068  005A64  0E55               	movlw	85
  2069  005A66  0139               	movlb	57	; () banked
  2070  005A68  6FEF               	movwf	239,b	;volatile
  2071                           
  2072                           ;uart.c: 46:     PRLOCK = 0xAA;
  2073  005A6A  0EAA               	movlw	170
  2074  005A6C  6FEF               	movwf	239,b	;volatile
  2075                           
  2076                           ; BSR set to: 57
  2077                           ;uart.c: 47:     PRLOCKbits.PRLOCKED = 1;
  2078  005A6E  81EF               	bsf	239,0,b	;volatile
  2079                           
  2080                           ;uart.c: 49:     U1BRGH = 0;
  2081  005A70  0E00               	movlw	0
  2082  005A72  013D               	movlb	61	; () banked
  2083  005A74  6FF6               	movwf	246,b	;volatile
  2084                           
  2085                           ;uart.c: 50:     U1BRGL = 34;
  2086  005A76  0E22               	movlw	34
  2087  005A78  6FF5               	movwf	245,b	;volatile
  2088                           
  2089                           ;uart.c: 51:     U1RXPPS = 0b001001;
  2090  005A7A  0E09               	movlw	9
  2091  005A7C  013A               	movlb	58	; () banked
  2092  005A7E  6FE5               	movwf	229,b	;volatile
  2093                           
  2094                           ;uart.c: 52:     U1CON0 = 0b00110000;
  2095  005A80  0E30               	movlw	48
  2096  005A82  013D               	movlb	61	; () banked
  2097  005A84  6FF2               	movwf	242,b	;volatile
  2098                           
  2099                           ;uart.c: 53:     U1CON1 = 0b10000000;
  2100  005A86  0E80               	movlw	128
  2101  005A88  6FF3               	movwf	243,b	;volatile
  2102                           
  2103                           ;uart.c: 54:     U1CON2 = 0b00001000;
  2104  005A8A  0E08               	movlw	8
  2105  005A8C  6FF4               	movwf	244,b	;volatile
  2106                           
  2107                           ;uart.c: 55:     RB0PPS = 0b010011;
  2108  005A8E  0E13               	movlw	19
  2109  005A90  013A               	movlb	58	; () banked
  2110  005A92  6F08               	movwf	8,b	;volatile
  2111                           
  2112                           ; BSR set to: 58
  2113  005A94  0012               	return		;funcret
  2114  005A96                     __end_of_uart_init:
  2115                           	opt callstack 0
  2116                           
  2117 ;; *************** function _main_loop *****************
  2118 ;; Defined at:
  2119 ;;		line 163 in file "main.c"
  2120 ;; Parameters:    Size  Location     Type
  2121 ;;		None
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  batmsg         17  109[BANK0 ] unsigned char [17]
  2124 ;;  batlvl          2  148[BANK0 ] unsigned short 
  2125 ;;  rel             4  156[BANK0 ] long 
  2126 ;;  sample          4  152[BANK0 ] long 
  2127 ;;  lastAvg         4  126[BANK0 ] unsigned long 
  2128 ;;  res             2  150[BANK0 ] short 
  2129 ;;  absRes          2  146[BANK0 ] short 
  2130 ;; Return value:  Size  Location     Type
  2131 ;;                  1    wreg      void 
  2132 ;; Registers used:
  2133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2134 ;; Tracked objects:
  2135 ;;		On entry : 0/3A
  2136 ;;		On exit  : 0/0
  2137 ;;		Unchanged: 0/0
  2138 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  2139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;      Totals:         0      57       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;Total ram usage:       57 bytes
  2144 ;; Hardware stack levels used:    1
  2145 ;; Hardware stack levels required when called:    8
  2146 ;; This function calls:
  2147 ;;		___awdiv
  2148 ;;		___fladd
  2149 ;;		___fldiv
  2150 ;;		___flge
  2151 ;;		___flmul
  2152 ;;		___lldiv
  2153 ;;		___llmod
  2154 ;;		___lmul
  2155 ;;		___xxtofl
  2156 ;;		_lcd_print
  2157 ;;		_lcd_set_data_addr
  2158 ;;		_setLED
  2159 ;;		_sprintf
  2160 ;;		_uart_send
  2161 ;;		_uart_tasks
  2162 ;;		_updateButtonLight
  2163 ;; This function is called by:
  2164 ;;		_main
  2165 ;; This function uses a non-reentrant model
  2166 ;;
  2167                           
  2168                           	psect	text2
  2169  002C5E                     __ptext2:
  2170                           	opt callstack 0
  2171  002C5E                     _main_loop:
  2172                           	opt callstack 22
  2173                           
  2174                           ;main.c: 164:     static uint32_t counter = 0;;main.c: 165:     static uint32_t sum = 0;
      +                          ;main.c: 166:     static uint16_t last[20];;main.c: 167:     static uint32_t lastSum = 0
      +                          ;;main.c: 168:     static int16_t pos = 0;;main.c: 170:     ADPCH = 0b010101;
  2175                           
  2176                           ; BSR set to: 58
  2177                           ;incstack = 0
  2178  002C5E  0E15               	movlw	21
  2179  002C60  013E               	movlb	62	; () banked
  2180  002C62  6FF1               	movwf	241,b	;volatile
  2181                           
  2182                           ; BSR set to: 62
  2183                           ;main.c: 171:     ADCON0bits.GO = 1;
  2184  002C64  81F8               	bsf	248,0,b	;volatile
  2185                           
  2186                           ;main.c: 172:     while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000.0))
      +                          );
  2187  002C66  D004               	goto	l6055
  2188  002C68                     l6053:
  2189                           
  2190                           ; BSR set to: 62
  2191  002C68  0E05               	movlw	5
  2192  002C6A                     u8147:
  2193  002C6A  2EE8               	decfsz	wreg,f,c
  2194  002C6C  D7FE               	bra	u8147
  2195  002C6E  F000               	nop	
  2196  002C70                     l6055:
  2197  002C70  013E               	movlb	62	; () banked
  2198  002C72  B1F8               	btfsc	248,0,b	;volatile
  2199  002C74  D7F9               	goto	l6053
  2200                           
  2201                           ; BSR set to: 62
  2202                           ;main.c: 173:     int16_t res = ((ADRESH << 8) | ADRESL) - 1545;
  2203  002C76  51EF               	movf	239,w,b	;volatile
  2204  002C78  006F FBC0  F0C7    	movff	16112,??_main_loop	;volatile
  2205  002C7E  0100               	movlb	0	; () banked
  2206  002C80  6BC8               	clrf	(??_main_loop+1)& (0+255),b
  2207  002C82  0060  F31C  F0C8   	movff	??_main_loop,??_main_loop+1
  2208  002C88  6BC7               	clrf	??_main_loop& (0+255),b
  2209  002C8A  13C7               	iorwf	??_main_loop& (0+255),f,b
  2210  002C8C  0E00               	movlw	0
  2211  002C8E  13C8               	iorwf	(??_main_loop+1)& (0+255),f,b
  2212  002C90  0EF7               	movlw	247
  2213  002C92  25C7               	addwf	??_main_loop& (0+255),w,b
  2214  002C94  6FF6               	movwf	main_loop@res& (0+255),b
  2215  002C96  0EF9               	movlw	249
  2216  002C98  21C8               	addwfc	(??_main_loop+1)& (0+255),w,b
  2217  002C9A  6FF7               	movwf	(main_loop@res+1)& (0+255),b
  2218                           
  2219                           ;main.c: 174:     int16_t absRes = res < 0 ? -res : res;
  2220  002C9C  BFF7               	btfsc	(main_loop@res+1)& (0+255),7,b
  2221  002C9E  D007               	goto	l267
  2222                           
  2223                           ; BSR set to: 0
  2224  002CA0  0060  F3D8  F0F2   	movff	main_loop@res,main_loop@absRes
  2225  002CA6  0060  F3DC  F0F3   	movff	main_loop@res+1,main_loop@absRes+1
  2226  002CAC  D010               	goto	l6061
  2227  002CAE                     l267:
  2228                           
  2229                           ; BSR set to: 0
  2230  002CAE  0060  F3D8  F0C7   	movff	main_loop@res,??_main_loop
  2231  002CB4  0060  F3DC  F0C8   	movff	main_loop@res+1,??_main_loop+1
  2232  002CBA  1FC7               	comf	??_main_loop& (0+255),f,b
  2233  002CBC  1FC8               	comf	(??_main_loop+1)& (0+255),f,b
  2234  002CBE  4BC7               	infsnz	??_main_loop& (0+255),f,b
  2235  002CC0  2BC8               	incf	(??_main_loop+1)& (0+255),f,b
  2236  002CC2  0060  F31C  F0F2   	movff	??_main_loop,main_loop@absRes
  2237  002CC8  0060  F320  F0F3   	movff	??_main_loop+1,main_loop@absRes+1
  2238  002CCE                     l6061:
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;main.c: 175:     sum += absRes;
  2242  002CCE  0060  F3C8  F0C7   	movff	main_loop@absRes,??_main_loop
  2243  002CD4  0060  F3CC  F0C8   	movff	main_loop@absRes+1,??_main_loop+1
  2244  002CDA  0E00               	movlw	0
  2245  002CDC  BFC8               	btfsc	(??_main_loop+1)& (0+255),7,b
  2246  002CDE  0EFF               	movlw	255
  2247  002CE0  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2248  002CE2  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2249  002CE4  51C7               	movf	??_main_loop& (0+255),w,b
  2250  002CE6  0104               	movlb	4	; () banked
  2251  002CE8  2734               	addwf	main_loop@sum& (0+255),f,b
  2252  002CEA  0100               	movlb	0	; () banked
  2253  002CEC  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2254  002CEE  0104               	movlb	4	; () banked
  2255  002CF0  2335               	addwfc	(main_loop@sum+1)& (0+255),f,b
  2256  002CF2  0100               	movlb	0	; () banked
  2257  002CF4  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2258  002CF6  0104               	movlb	4	; () banked
  2259  002CF8  2336               	addwfc	(main_loop@sum+2)& (0+255),f,b
  2260  002CFA  0100               	movlb	0	; () banked
  2261  002CFC  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2262  002CFE  0104               	movlb	4	; () banked
  2263  002D00  2337               	addwfc	(main_loop@sum+3)& (0+255),f,b
  2264                           
  2265                           ; BSR set to: 4
  2266                           ;main.c: 177:     if (counter % 50 == 50 - 1) {
  2267  002D02  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  2268  002D08  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2269  002D0E  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2270  002D14  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2271  002D1A  0E32               	movlw	50
  2272  002D1C  6E12               	movwf	___llmod@divisor^0,c
  2273  002D1E  0E00               	movlw	0
  2274  002D20  6E13               	movwf	(___llmod@divisor+1)^0,c
  2275  002D22  0E00               	movlw	0
  2276  002D24  6E14               	movwf	(___llmod@divisor+2)^0,c
  2277  002D26  0E00               	movlw	0
  2278  002D28  6E15               	movwf	(___llmod@divisor+3)^0,c
  2279  002D2A  EC8D  F02F         	call	___llmod	;wreg free
  2280  002D2E  0E31               	movlw	49
  2281  002D30  180E               	xorwf	?___llmod^0,w,c
  2282  002D32  100F               	iorwf	(?___llmod+1)^0,w,c
  2283  002D34  1010               	iorwf	(?___llmod+2)^0,w,c
  2284  002D36  1011               	iorwf	(?___llmod+3)^0,w,c
  2285  002D38  A4D8               	btfss	status,2,c
  2286  002D3A  D248               	goto	l6123
  2287                           
  2288                           ;main.c: 178:         int32_t sample = sum * 2 / 50;
  2289  002D3C  90D8               	bcf	status,0,c
  2290  002D3E  0104               	movlb	4	; () banked
  2291  002D40  3534               	rlcf	main_loop@sum& (0+255),w,b
  2292  002D42  6E01               	movwf	___lldiv@dividend^0,c
  2293  002D44  3535               	rlcf	(main_loop@sum+1)& (0+255),w,b
  2294  002D46  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2295  002D48  3536               	rlcf	(main_loop@sum+2)& (0+255),w,b
  2296  002D4A  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2297  002D4C  3537               	rlcf	(main_loop@sum+3)& (0+255),w,b
  2298  002D4E  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2299  002D50  0E32               	movlw	50
  2300  002D52  6E05               	movwf	___lldiv@divisor^0,c
  2301  002D54  0E00               	movlw	0
  2302  002D56  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2303  002D58  0E00               	movlw	0
  2304  002D5A  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2305  002D5C  0E00               	movlw	0
  2306  002D5E  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2307  002D60  ECD7  F02D         	call	___lldiv	;wreg free
  2308  002D64  0060  F004  F0F8   	movff	?___lldiv,main_loop@sample
  2309  002D6A  0060  F008  F0F9   	movff	?___lldiv+1,main_loop@sample+1
  2310  002D70  0060  F00C  F0FA   	movff	?___lldiv+2,main_loop@sample+2
  2311  002D76  0060  F010  F0FB   	movff	?___lldiv+3,main_loop@sample+3
  2312                           
  2313                           ;main.c: 179:         sample -= 9;
  2314  002D7C  0EF7               	movlw	247
  2315  002D7E  0100               	movlb	0	; () banked
  2316  002D80  27F8               	addwf	main_loop@sample& (0+255),f,b
  2317  002D82  0EFF               	movlw	255
  2318  002D84  23F9               	addwfc	(main_loop@sample+1)& (0+255),f,b
  2319  002D86  0EFF               	movlw	255
  2320  002D88  23FA               	addwfc	(main_loop@sample+2)& (0+255),f,b
  2321  002D8A  0EFF               	movlw	255
  2322  002D8C  23FB               	addwfc	(main_loop@sample+3)& (0+255),f,b
  2323                           
  2324                           ; BSR set to: 0
  2325                           ;main.c: 180:         if (sample < 0) sample = 0;
  2326  002D8E  AFFB               	btfss	(main_loop@sample+3)& (0+255),7,b
  2327  002D90  D008               	goto	l6073
  2328                           
  2329                           ; BSR set to: 0
  2330  002D92  0E00               	movlw	0
  2331  002D94  6FF8               	movwf	main_loop@sample& (0+255),b
  2332  002D96  0E00               	movlw	0
  2333  002D98  6FF9               	movwf	(main_loop@sample+1)& (0+255),b
  2334  002D9A  0E00               	movlw	0
  2335  002D9C  6FFA               	movwf	(main_loop@sample+2)& (0+255),b
  2336  002D9E  0E00               	movlw	0
  2337  002DA0  6FFB               	movwf	(main_loop@sample+3)& (0+255),b
  2338  002DA2                     l6073:
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;main.c: 182:         uint32_t lastAvg = lastSum / 20;
  2342  002DA2  0061  F0C0  F001   	movff	main_loop@lastSum,___lldiv@dividend
  2343  002DA8  0061  F0C4  F002   	movff	main_loop@lastSum+1,___lldiv@dividend+1
  2344  002DAE  0061  F0C8  F003   	movff	main_loop@lastSum+2,___lldiv@dividend+2
  2345  002DB4  0061  F0CC  F004   	movff	main_loop@lastSum+3,___lldiv@dividend+3
  2346  002DBA  0E14               	movlw	20
  2347  002DBC  6E05               	movwf	___lldiv@divisor^0,c
  2348  002DBE  0E00               	movlw	0
  2349  002DC0  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2350  002DC2  0E00               	movlw	0
  2351  002DC4  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2352  002DC6  0E00               	movlw	0
  2353  002DC8  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2354  002DCA  ECD7  F02D         	call	___lldiv	;wreg free
  2355  002DCE  0060  F004  F0DE   	movff	?___lldiv,main_loop@lastAvg
  2356  002DD4  0060  F008  F0DF   	movff	?___lldiv+1,main_loop@lastAvg+1
  2357  002DDA  0060  F00C  F0E0   	movff	?___lldiv+2,main_loop@lastAvg+2
  2358  002DE0  0060  F010  F0E1   	movff	?___lldiv+3,main_loop@lastAvg+3
  2359                           
  2360                           ;main.c: 183:         int32_t rel = (sample - lastAvg) * soundAmplify[volume_level];
  2361  002DE6  0100               	movlb	0	; () banked
  2362  002DE8  51DE               	movf	main_loop@lastAvg& (0+255),w,b
  2363  002DEA  5DF8               	subwf	main_loop@sample& (0+255),w,b
  2364  002DEC  6E01               	movwf	___lmul@multiplier^0,c
  2365  002DEE  51DF               	movf	(main_loop@lastAvg+1)& (0+255),w,b
  2366  002DF0  59F9               	subwfb	(main_loop@sample+1)& (0+255),w,b
  2367  002DF2  6E02               	movwf	(___lmul@multiplier+1)^0,c
  2368  002DF4  51E0               	movf	(main_loop@lastAvg+2)& (0+255),w,b
  2369  002DF6  59FA               	subwfb	(main_loop@sample+2)& (0+255),w,b
  2370  002DF8  6E03               	movwf	(___lmul@multiplier+2)^0,c
  2371  002DFA  51E1               	movf	(main_loop@lastAvg+3)& (0+255),w,b
  2372  002DFC  59FB               	subwfb	(main_loop@sample+3)& (0+255),w,b
  2373  002DFE  6E04               	movwf	(___lmul@multiplier+3)^0,c
  2374  002E00  0104               	movlb	4	; () banked
  2375  002E02  514B               	movf	_volume_level& (0+255),w,b
  2376  002E04  0D02               	mullw	2
  2377  002E06  50F3               	movf	243,w,c
  2378  002E08  0F01               	addlw	low _soundAmplify
  2379  002E0A  0100               	movlb	0	; () banked
  2380  002E0C  6FC7               	movwf	??_main_loop& (0+255),b
  2381  002E0E  0060  F31F  FFF6   	movff	??_main_loop,tblptrl
  2382  002E14                     	if	1	;There is more than 1 active tblptr byte
  2383  002E14  0E20               	movlw	high __smallconst
  2384  002E16  6EF7               	movwf	tblptrh,c
  2385  002E18                     	endif
  2386  002E18                     	if	0	;tblptru may be non-zero
  2387  002E18                     	endif
  2388  002E18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2389  002E18  0E00               	movlw	low (__smallconst shr (0+16))
  2390  002E1A  6EF8               	movwf	tblptru,c
  2391  002E1C                     	endif
  2392  002E1C  0009               	tblrd		*+
  2393  002E1E  006F FFD4  F0C8    	movff	tablat,??_main_loop+1
  2394  002E24  0009               	tblrd		*+
  2395  002E26  006F FFD4  F0C9    	movff	tablat,??_main_loop+2
  2396  002E2C  0060  F320  F005   	movff	??_main_loop+1,___lmul@multiplicand
  2397  002E32  0060  F324  F006   	movff	??_main_loop+2,___lmul@multiplicand+1
  2398  002E38  6A07               	clrf	(___lmul@multiplicand+2)^0,c
  2399  002E3A  6A08               	clrf	(___lmul@multiplicand+3)^0,c
  2400  002E3C  EC27  F030         	call	___lmul	;wreg free
  2401  002E40  0060  F004  F0FC   	movff	?___lmul,main_loop@rel
  2402  002E46  0060  F008  F0FD   	movff	?___lmul+1,main_loop@rel+1
  2403  002E4C  0060  F00C  F0FE   	movff	?___lmul+2,main_loop@rel+2
  2404  002E52  0060  F010  F0FF   	movff	?___lmul+3,main_loop@rel+3
  2405                           
  2406                           ;main.c: 186:         if (streaming && (volume_level >= 4 || ledBrightness <= 24) && rel
      +                           > 1800) pos = (4095 < (pos > rel ? pos : rel) ? 4095 : (pos > rel ? pos : rel));
  2407  002E58  0104               	movlb	4	; () banked
  2408  002E5A  5149               	movf	_streaming& (0+255),w,b
  2409  002E5C  B4D8               	btfsc	status,2,c
  2410  002E5E  D09F               	goto	l6105
  2411                           
  2412                           ; BSR set to: 4
  2413  002E60  0E04               	movlw	4
  2414  002E62  614B               	cpfslt	_volume_level& (0+255),b
  2415  002E64  D00A               	goto	u7890
  2416                           
  2417                           ; BSR set to: 4
  2418  002E66  BF9F               	btfsc	(_ledBrightness+3)& (0+255),7,b
  2419  002E68  D008               	goto	u7890
  2420  002E6A  519F               	movf	(_ledBrightness+3)& (0+255),w,b
  2421  002E6C  119E               	iorwf	(_ledBrightness+2)& (0+255),w,b
  2422  002E6E  119D               	iorwf	(_ledBrightness+1)& (0+255),w,b
  2423  002E70  E103               	bnz	u7891
  2424  002E72  0E19               	movlw	25
  2425  002E74  5D9C               	subwf	_ledBrightness& (0+255),w,b
  2426  002E76  B0D8               	btfsc	status,0,c
  2427  002E78                     u7891:
  2428  002E78  D092               	goto	l6105
  2429  002E7A                     u7890:
  2430                           
  2431                           ; BSR set to: 4
  2432  002E7A  0100               	movlb	0	; () banked
  2433  002E7C  BFFF               	btfsc	(main_loop@rel+3)& (0+255),7,b
  2434  002E7E  D08F               	goto	l6105
  2435  002E80  51FF               	movf	(main_loop@rel+3)& (0+255),w,b
  2436  002E82  11FE               	iorwf	(main_loop@rel+2)& (0+255),w,b
  2437  002E84  E106               	bnz	u7900
  2438  002E86  0E09               	movlw	9
  2439  002E88  5DFC               	subwf	main_loop@rel& (0+255),w,b
  2440  002E8A  0E07               	movlw	7
  2441  002E8C  59FD               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2442  002E8E  A0D8               	btfss	status,0,c
  2443  002E90  D086               	goto	l6105
  2444  002E92                     u7900:
  2445                           
  2446                           ; BSR set to: 0
  2447  002E92  0061  F110  F0C7   	movff	main_loop@pos,??_main_loop
  2448  002E98  0061  F114  F0C8   	movff	main_loop@pos+1,??_main_loop+1
  2449  002E9E  0E00               	movlw	0
  2450  002EA0  BFC8               	btfsc	(??_main_loop+1)& (0+255),7,b
  2451  002EA2  0EFF               	movlw	255
  2452  002EA4  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2453  002EA6  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2454  002EA8  51C7               	movf	??_main_loop& (0+255),w,b
  2455  002EAA  5DFC               	subwf	main_loop@rel& (0+255),w,b
  2456  002EAC  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2457  002EAE  59FD               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2458  002EB0  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2459  002EB2  59FE               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2460  002EB4  51FF               	movf	(main_loop@rel+3)& (0+255),w,b
  2461  002EB6  0A80               	xorlw	128
  2462  002EB8  6FCB               	movwf	(??_main_loop+4)& (0+255),b
  2463  002EBA  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2464  002EBC  0A80               	xorlw	128
  2465  002EBE  59CB               	subwfb	(??_main_loop+4)& (0+255),w,b
  2466  002EC0  A0D8               	btfss	status,0,c
  2467  002EC2  D00D               	goto	l6089
  2468                           
  2469                           ; BSR set to: 0
  2470  002EC4  0060  F3F0  F0E6   	movff	main_loop@rel,_main_loop$317
  2471  002ECA  0060  F3F4  F0E7   	movff	main_loop@rel+1,_main_loop$317+1
  2472  002ED0  0060  F3F8  F0E8   	movff	main_loop@rel+2,_main_loop$317+2
  2473  002ED6  0060  F3FC  F0E9   	movff	main_loop@rel+3,_main_loop$317+3
  2474  002EDC  D00B               	goto	l6091
  2475  002EDE                     l6089:
  2476                           
  2477                           ; BSR set to: 0
  2478  002EDE  0061  F110  F0E6   	movff	main_loop@pos,_main_loop$317
  2479  002EE4  0061  F114  F0E7   	movff	main_loop@pos+1,_main_loop$317+1
  2480  002EEA  0E00               	movlw	0
  2481  002EEC  BFE7               	btfsc	(_main_loop$317+1)& (0+255),7,b
  2482  002EEE  0EFF               	movlw	-1
  2483  002EF0  6FE8               	movwf	(_main_loop$317+2)& (0+255),b
  2484  002EF2  6FE9               	movwf	(_main_loop$317+3)& (0+255),b
  2485  002EF4                     l6091:
  2486                           
  2487                           ; BSR set to: 0
  2488  002EF4  BFE9               	btfsc	(_main_loop$317+3)& (0+255),7,b
  2489  002EF6  D007               	goto	u7920
  2490  002EF8  51E9               	movf	(_main_loop$317+3)& (0+255),w,b
  2491  002EFA  11E8               	iorwf	(_main_loop$317+2)& (0+255),w,b
  2492  002EFC  E142               	bnz	l6101
  2493  002EFE  0E10               	movlw	16
  2494  002F00  5DE7               	subwf	(_main_loop$317+1)& (0+255),w,b
  2495  002F02  B0D8               	btfsc	status,0,c
  2496  002F04  D03E               	goto	l6101
  2497  002F06                     u7920:
  2498                           
  2499                           ; BSR set to: 0
  2500  002F06  0061  F110  F0C7   	movff	main_loop@pos,??_main_loop
  2501  002F0C  0061  F114  F0C8   	movff	main_loop@pos+1,??_main_loop+1
  2502  002F12  0E00               	movlw	0
  2503  002F14  BFC8               	btfsc	(??_main_loop+1)& (0+255),7,b
  2504  002F16  0EFF               	movlw	255
  2505  002F18  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2506  002F1A  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2507  002F1C  51C7               	movf	??_main_loop& (0+255),w,b
  2508  002F1E  5DFC               	subwf	main_loop@rel& (0+255),w,b
  2509  002F20  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2510  002F22  59FD               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2511  002F24  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2512  002F26  59FE               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2513  002F28  51FF               	movf	(main_loop@rel+3)& (0+255),w,b
  2514  002F2A  0A80               	xorlw	128
  2515  002F2C  6FCB               	movwf	(??_main_loop+4)& (0+255),b
  2516  002F2E  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2517  002F30  0A80               	xorlw	128
  2518  002F32  59CB               	subwfb	(??_main_loop+4)& (0+255),w,b
  2519  002F34  A0D8               	btfss	status,0,c
  2520  002F36  D00D               	goto	l6097
  2521                           
  2522                           ; BSR set to: 0
  2523  002F38  0060  F3F0  F0EA   	movff	main_loop@rel,_main_loop$318
  2524  002F3E  0060  F3F4  F0EB   	movff	main_loop@rel+1,_main_loop$318+1
  2525  002F44  0060  F3F8  F0EC   	movff	main_loop@rel+2,_main_loop$318+2
  2526  002F4A  0060  F3FC  F0ED   	movff	main_loop@rel+3,_main_loop$318+3
  2527  002F50  D00B               	goto	l6099
  2528  002F52                     l6097:
  2529                           
  2530                           ; BSR set to: 0
  2531  002F52  0061  F110  F0EA   	movff	main_loop@pos,_main_loop$318
  2532  002F58  0061  F114  F0EB   	movff	main_loop@pos+1,_main_loop$318+1
  2533  002F5E  0E00               	movlw	0
  2534  002F60  BFEB               	btfsc	(_main_loop$318+1)& (0+255),7,b
  2535  002F62  0EFF               	movlw	-1
  2536  002F64  6FEC               	movwf	(_main_loop$318+2)& (0+255),b
  2537  002F66  6FED               	movwf	(_main_loop$318+3)& (0+255),b
  2538  002F68                     l6099:
  2539                           
  2540                           ; BSR set to: 0
  2541  002F68  0060  F3A8  F0E2   	movff	_main_loop$318,_main_loop$316
  2542  002F6E  0060  F3AC  F0E3   	movff	_main_loop$318+1,_main_loop$316+1
  2543  002F74  0060  F3B0  F0E4   	movff	_main_loop$318+2,_main_loop$316+2
  2544  002F7A  0060  F3B4  F0E5   	movff	_main_loop$318+3,_main_loop$316+3
  2545  002F80  D008               	goto	l6103
  2546  002F82                     l6101:
  2547                           
  2548                           ; BSR set to: 0
  2549  002F82  0EFF               	movlw	255
  2550  002F84  6FE2               	movwf	_main_loop$316& (0+255),b
  2551  002F86  0E0F               	movlw	15
  2552  002F88  6FE3               	movwf	(_main_loop$316+1)& (0+255),b
  2553  002F8A  0E00               	movlw	0
  2554  002F8C  6FE4               	movwf	(_main_loop$316+2)& (0+255),b
  2555  002F8E  0E00               	movlw	0
  2556  002F90  6FE5               	movwf	(_main_loop$316+3)& (0+255),b
  2557  002F92                     l6103:
  2558                           
  2559                           ; BSR set to: 0
  2560  002F92  0060  F388  F444   	movff	_main_loop$316,main_loop@pos
  2561  002F98  0060  F38C  F445   	movff	_main_loop$316+1,main_loop@pos+1
  2562  002F9E                     l6105:
  2563                           
  2564                           ;main.c: 188:         setLED(pos, counter);
  2565  002F9E  0061  F110  F060   	movff	main_loop@pos,setLED@mod
  2566  002FA4  0061  F114  F061   	movff	main_loop@pos+1,setLED@mod+1
  2567  002FAA  0100               	movlb	0	; () banked
  2568  002FAC  0E00               	movlw	0
  2569  002FAE  BF61               	btfsc	(setLED@mod+1)& (0+255),7,b
  2570  002FB0  0EFF               	movlw	-1
  2571  002FB2  6F62               	movwf	(setLED@mod+2)& (0+255),b
  2572  002FB4  6F63               	movwf	(setLED@mod+3)& (0+255),b
  2573  002FB6  0061  F0E0  F064   	movff	main_loop@counter,setLED@step
  2574  002FBC  0061  F0E4  F065   	movff	main_loop@counter+1,setLED@step+1
  2575  002FC2  0061  F0E8  F066   	movff	main_loop@counter+2,setLED@step+2
  2576  002FC8  0061  F0EC  F067   	movff	main_loop@counter+3,setLED@step+3
  2577  002FCE  EC22  F01B         	call	_setLED	;wreg free
  2578                           
  2579                           ;main.c: 190:         pos = (pos - (pos / 70 + 1) > 0 ? pos - (pos / 70 + 1) : 0);
  2580  002FD2  0EFF               	movlw	255
  2581  002FD4  0100               	movlb	0	; () banked
  2582  002FD6  6FC7               	movwf	??_main_loop& (0+255),b
  2583  002FD8  0EFF               	movlw	255
  2584  002FDA  6FC8               	movwf	(??_main_loop+1)& (0+255),b
  2585  002FDC  0061  F110  F001   	movff	main_loop@pos,___awdiv@dividend
  2586  002FE2  0061  F114  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2587  002FE8  0E00               	movlw	0
  2588  002FEA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2589  002FEC  0E46               	movlw	70
  2590  002FEE  6E03               	movwf	___awdiv@divisor^0,c
  2591  002FF0  EC1C  F02E         	call	___awdiv	;wreg free
  2592  002FF4  0061  F110  F0C9   	movff	main_loop@pos,??_main_loop+2
  2593  002FFA  0061  F114  F0CA   	movff	main_loop@pos+1,??_main_loop+3
  2594  003000  5001               	movf	?___awdiv^0,w,c
  2595  003002  5FC9               	subwf	(??_main_loop+2)& (0+255),f,b
  2596  003004  5002               	movf	(?___awdiv+1)^0,w,c
  2597  003006  5BCA               	subwfb	(??_main_loop+3)& (0+255),f,b
  2598  003008  51C7               	movf	??_main_loop& (0+255),w,b
  2599  00300A  27C9               	addwf	(??_main_loop+2)& (0+255),f,b
  2600  00300C  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2601  00300E  23CA               	addwfc	(??_main_loop+3)& (0+255),f,b
  2602  003010  BFCA               	btfsc	(??_main_loop+3)& (0+255),7,b
  2603  003012  D005               	goto	u7940
  2604  003014  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2605  003016  E109               	bnz	l6111
  2606  003018  05C9               	decf	(??_main_loop+2)& (0+255),w,b
  2607  00301A  B0D8               	btfsc	status,0,c
  2608  00301C  D006               	goto	l6111
  2609  00301E                     u7940:
  2610                           
  2611                           ; BSR set to: 0
  2612  00301E  0E00               	movlw	0
  2613  003020  0104               	movlb	4	; () banked
  2614  003022  6F45               	movwf	(main_loop@pos+1)& (0+255),b
  2615  003024  0E00               	movlw	0
  2616  003026  6F44               	movwf	main_loop@pos& (0+255),b
  2617  003028  D01F               	goto	l6113
  2618  00302A                     l6111:
  2619                           
  2620                           ; BSR set to: 0
  2621  00302A  0061  F110  F001   	movff	main_loop@pos,___awdiv@dividend
  2622  003030  0061  F114  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2623  003036  0E00               	movlw	0
  2624  003038  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2625  00303A  0E46               	movlw	70
  2626  00303C  6E03               	movwf	___awdiv@divisor^0,c
  2627  00303E  EC1C  F02E         	call	___awdiv	;wreg free
  2628  003042  0061  F110  F0C7   	movff	main_loop@pos,??_main_loop
  2629  003048  0061  F114  F0C8   	movff	main_loop@pos+1,??_main_loop+1
  2630  00304E  5001               	movf	?___awdiv^0,w,c
  2631  003050  5FC7               	subwf	??_main_loop& (0+255),f,b
  2632  003052  5002               	movf	(?___awdiv+1)^0,w,c
  2633  003054  5BC8               	subwfb	(??_main_loop+1)& (0+255),f,b
  2634  003056  0EFF               	movlw	255
  2635  003058  25C7               	addwf	??_main_loop& (0+255),w,b
  2636  00305A  0104               	movlb	4	; () banked
  2637  00305C  6F44               	movwf	main_loop@pos& (0+255),b
  2638  00305E  0EFF               	movlw	255
  2639  003060  0100               	movlb	0	; () banked
  2640  003062  21C8               	addwfc	(??_main_loop+1)& (0+255),w,b
  2641  003064  0104               	movlb	4	; () banked
  2642  003066  6F45               	movwf	(main_loop@pos+1)& (0+255),b
  2643  003068                     l6113:
  2644                           
  2645                           ; BSR set to: 4
  2646                           ;main.c: 192:         sum = 0;
  2647  003068  0E00               	movlw	0
  2648  00306A  6F34               	movwf	main_loop@sum& (0+255),b
  2649  00306C  0E00               	movlw	0
  2650  00306E  6F35               	movwf	(main_loop@sum+1)& (0+255),b
  2651  003070  0E00               	movlw	0
  2652  003072  6F36               	movwf	(main_loop@sum+2)& (0+255),b
  2653  003074  0E00               	movlw	0
  2654  003076  6F37               	movwf	(main_loop@sum+3)& (0+255),b
  2655                           
  2656                           ; BSR set to: 4
  2657                           ;main.c: 194:         lastSum -= last[(counter / 50) % 20];
  2658  003078  0E32               	movlw	50
  2659  00307A  6E05               	movwf	___lldiv@divisor^0,c
  2660  00307C  0E00               	movlw	0
  2661  00307E  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2662  003080  0E00               	movlw	0
  2663  003082  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2664  003084  0E00               	movlw	0
  2665  003086  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2666  003088  0061  F0E0  F001   	movff	main_loop@counter,___lldiv@dividend
  2667  00308E  0061  F0E4  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2668  003094  0061  F0E8  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2669  00309A  0061  F0EC  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2670  0030A0  ECD7  F02D         	call	___lldiv	;wreg free
  2671  0030A4  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2672  0030AA  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2673  0030B0  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2674  0030B6  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2675  0030BC  0E14               	movlw	20
  2676  0030BE  6E12               	movwf	___llmod@divisor^0,c
  2677  0030C0  0E00               	movlw	0
  2678  0030C2  6E13               	movwf	(___llmod@divisor+1)^0,c
  2679  0030C4  0E00               	movlw	0
  2680  0030C6  6E14               	movwf	(___llmod@divisor+2)^0,c
  2681  0030C8  0E00               	movlw	0
  2682  0030CA  6E15               	movwf	(___llmod@divisor+3)^0,c
  2683  0030CC  EC8D  F02F         	call	___llmod	;wreg free
  2684  0030D0  90D8               	bcf	status,0,c
  2685  0030D2  360E               	rlcf	?___llmod^0,f,c
  2686  0030D4  360F               	rlcf	(?___llmod+1)^0,f,c
  2687  0030D6  0E00               	movlw	low main_loop@last
  2688  0030D8  240E               	addwf	?___llmod^0,w,c
  2689  0030DA  6ED9               	movwf	fsr2l,c
  2690  0030DC  0E04               	movlw	high main_loop@last
  2691  0030DE  200F               	addwfc	(?___llmod+1)^0,w,c
  2692  0030E0  6EDA               	movwf	fsr2h,c
  2693  0030E2  006F FF78  F0C7    	movff	postinc2,??_main_loop
  2694  0030E8  006F FF74  F0C8    	movff	postdec2,??_main_loop+1
  2695  0030EE  0100               	movlb	0	; () banked
  2696  0030F0  51C7               	movf	??_main_loop& (0+255),w,b
  2697  0030F2  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2698  0030F4  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2699  0030F6  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2700  0030F8  6BCB               	clrf	(??_main_loop+4)& (0+255),b
  2701  0030FA  6BCC               	clrf	(??_main_loop+5)& (0+255),b
  2702  0030FC  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2703  0030FE  0104               	movlb	4	; () banked
  2704  003100  5F30               	subwf	main_loop@lastSum& (0+255),f,b
  2705  003102  0100               	movlb	0	; () banked
  2706  003104  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2707  003106  0104               	movlb	4	; () banked
  2708  003108  5B31               	subwfb	(main_loop@lastSum+1)& (0+255),f,b
  2709  00310A  0100               	movlb	0	; () banked
  2710  00310C  51CB               	movf	(??_main_loop+4)& (0+255),w,b
  2711  00310E  0104               	movlb	4	; () banked
  2712  003110  5B32               	subwfb	(main_loop@lastSum+2)& (0+255),f,b
  2713  003112  0100               	movlb	0	; () banked
  2714  003114  51CC               	movf	(??_main_loop+5)& (0+255),w,b
  2715  003116  0104               	movlb	4	; () banked
  2716  003118  5B33               	subwfb	(main_loop@lastSum+3)& (0+255),f,b
  2717                           
  2718                           ; BSR set to: 4
  2719                           ;main.c: 195:         lastSum += sample;
  2720  00311A  0100               	movlb	0	; () banked
  2721  00311C  51F8               	movf	main_loop@sample& (0+255),w,b
  2722  00311E  0104               	movlb	4	; () banked
  2723  003120  2730               	addwf	main_loop@lastSum& (0+255),f,b
  2724  003122  0100               	movlb	0	; () banked
  2725  003124  51F9               	movf	(main_loop@sample+1)& (0+255),w,b
  2726  003126  0104               	movlb	4	; () banked
  2727  003128  2331               	addwfc	(main_loop@lastSum+1)& (0+255),f,b
  2728  00312A  0100               	movlb	0	; () banked
  2729  00312C  51FA               	movf	(main_loop@sample+2)& (0+255),w,b
  2730  00312E  0104               	movlb	4	; () banked
  2731  003130  2332               	addwfc	(main_loop@lastSum+2)& (0+255),f,b
  2732  003132  0100               	movlb	0	; () banked
  2733  003134  51FB               	movf	(main_loop@sample+3)& (0+255),w,b
  2734  003136  0104               	movlb	4	; () banked
  2735  003138  2333               	addwfc	(main_loop@lastSum+3)& (0+255),f,b
  2736                           
  2737                           ; BSR set to: 4
  2738                           ;main.c: 196:         last[(counter / 50) % 20] = sample;
  2739  00313A  0E32               	movlw	50
  2740  00313C  6E05               	movwf	___lldiv@divisor^0,c
  2741  00313E  0E00               	movlw	0
  2742  003140  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2743  003142  0E00               	movlw	0
  2744  003144  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2745  003146  0E00               	movlw	0
  2746  003148  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2747  00314A  0061  F0E0  F001   	movff	main_loop@counter,___lldiv@dividend
  2748  003150  0061  F0E4  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2749  003156  0061  F0E8  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2750  00315C  0061  F0EC  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2751  003162  ECD7  F02D         	call	___lldiv	;wreg free
  2752  003166  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2753  00316C  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2754  003172  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2755  003178  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2756  00317E  0E14               	movlw	20
  2757  003180  6E12               	movwf	___llmod@divisor^0,c
  2758  003182  0E00               	movlw	0
  2759  003184  6E13               	movwf	(___llmod@divisor+1)^0,c
  2760  003186  0E00               	movlw	0
  2761  003188  6E14               	movwf	(___llmod@divisor+2)^0,c
  2762  00318A  0E00               	movlw	0
  2763  00318C  6E15               	movwf	(___llmod@divisor+3)^0,c
  2764  00318E  EC8D  F02F         	call	___llmod	;wreg free
  2765  003192  90D8               	bcf	status,0,c
  2766  003194  360E               	rlcf	?___llmod^0,f,c
  2767  003196  360F               	rlcf	(?___llmod+1)^0,f,c
  2768  003198  0E00               	movlw	low main_loop@last
  2769  00319A  240E               	addwf	?___llmod^0,w,c
  2770  00319C  6ED9               	movwf	fsr2l,c
  2771  00319E  0E04               	movlw	high main_loop@last
  2772  0031A0  200F               	addwfc	(?___llmod+1)^0,w,c
  2773  0031A2  6EDA               	movwf	fsr2h,c
  2774  0031A4  0060  F3E3  FFDE   	movff	main_loop@sample,postinc2
  2775  0031AA  0060  F3E7  FFDD   	movff	main_loop@sample+1,postdec2
  2776                           
  2777                           ;main.c: 198:         updateButtonLight(counter);
  2778  0031B0  0061  F0E0  F01B   	movff	main_loop@counter,updateButtonLight@step
  2779  0031B6  0061  F0E4  F01C   	movff	main_loop@counter+1,updateButtonLight@step+1
  2780  0031BC  0061  F0E8  F01D   	movff	main_loop@counter+2,updateButtonLight@step+2
  2781  0031C2  0061  F0EC  F01E   	movff	main_loop@counter+3,updateButtonLight@step+3
  2782  0031C8  EC54  F02A         	call	_updateButtonLight	;wreg free
  2783  0031CC                     l6123:
  2784                           
  2785                           ;main.c: 201:     if (counter % 1000 == 999) {
  2786  0031CC  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  2787  0031D2  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2788  0031D8  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2789  0031DE  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2790  0031E4  0EE8               	movlw	232
  2791  0031E6  6E12               	movwf	___llmod@divisor^0,c
  2792  0031E8  0E03               	movlw	3
  2793  0031EA  6E13               	movwf	(___llmod@divisor+1)^0,c
  2794  0031EC  0E00               	movlw	0
  2795  0031EE  6E14               	movwf	(___llmod@divisor+2)^0,c
  2796  0031F0  0E00               	movlw	0
  2797  0031F2  6E15               	movwf	(___llmod@divisor+3)^0,c
  2798  0031F4  EC8D  F02F         	call	___llmod	;wreg free
  2799  0031F8  0EE7               	movlw	231
  2800  0031FA  180E               	xorwf	?___llmod^0,w,c
  2801  0031FC  E134               	bnz	l6141
  2802  0031FE  0E03               	movlw	3
  2803  003200  180F               	xorwf	(?___llmod+1)^0,w,c
  2804  003202  1010               	iorwf	(?___llmod+2)^0,w,c
  2805  003204  1011               	iorwf	(?___llmod+3)^0,w,c
  2806  003206  A4D8               	btfss	status,2,c
  2807  003208  D02E               	goto	l6141
  2808                           
  2809                           ;main.c: 202:         PORTCbits.RC0 = !PORTCbits.RC1;
  2810  00320A  B2CC               	btfsc	204,1,c	;volatile
  2811  00320C  D004               	goto	u7960
  2812  00320E  0100               	movlb	0	; () banked
  2813  003210  6BC7               	clrf	??_main_loop& (0+255),b
  2814  003212  2BC7               	incf	??_main_loop& (0+255),f,b
  2815  003214  D002               	goto	u7978
  2816  003216                     u7960:
  2817  003216  0100               	movlb	0	; () banked
  2818  003218  6BC7               	clrf	??_main_loop& (0+255),b
  2819  00321A                     u7978:
  2820  00321A  50CC               	movf	204,w,c	;volatile
  2821  00321C  19C7               	xorwf	??_main_loop& (0+255),w,b
  2822  00321E  0BFE               	andlw	-2
  2823  003220  19C7               	xorwf	??_main_loop& (0+255),w,b
  2824  003222  6ECC               	movwf	204,c	;volatile
  2825                           
  2826                           ; BSR set to: 0
  2827                           ;main.c: 204:         ADPCH = 0b010110;
  2828  003224  0E16               	movlw	22
  2829  003226  013E               	movlb	62	; () banked
  2830  003228  6FF1               	movwf	241,b	;volatile
  2831                           
  2832                           ; BSR set to: 62
  2833                           ;main.c: 205:         ADCON0bits.FM = 0;
  2834  00322A  0EF3               	movlw	-13
  2835  00322C  17F8               	andwf	248,f,b	;volatile
  2836                           
  2837                           ; BSR set to: 62
  2838                           ;main.c: 206:         ADCON0bits.GO = 1;
  2839  00322E  81F8               	bsf	248,0,b	;volatile
  2840                           
  2841                           ;main.c: 207:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  2842  003230  D004               	goto	l6135
  2843  003232                     l6133:
  2844                           
  2845                           ; BSR set to: 62
  2846  003232  0E05               	movlw	5
  2847  003234                     u8157:
  2848  003234  2EE8               	decfsz	wreg,f,c
  2849  003236  D7FE               	bra	u8157
  2850  003238  F000               	nop	
  2851  00323A                     l6135:
  2852  00323A  013E               	movlb	62	; () banked
  2853  00323C  B1F8               	btfsc	248,0,b	;volatile
  2854  00323E  D7F9               	goto	l6133
  2855                           
  2856                           ; BSR set to: 62
  2857                           ;main.c: 208:         ledBrightness = ADRESH / 4;
  2858  003240  006F FBC0  F0C7    	movff	16112,??_main_loop	;volatile
  2859  003246  0100               	movlb	0	; () banked
  2860  003248  90D8               	bcf	status,0,c
  2861  00324A  33C7               	rrcf	??_main_loop& (0+255),f,b
  2862  00324C  90D8               	bcf	status,0,c
  2863  00324E  33C7               	rrcf	??_main_loop& (0+255),f,b
  2864  003250  51C7               	movf	??_main_loop& (0+255),w,b
  2865  003252  0104               	movlb	4	; () banked
  2866  003254  6F9C               	movwf	_ledBrightness& (0+255),b
  2867  003256  6B9D               	clrf	(_ledBrightness+1)& (0+255),b
  2868  003258  6B9E               	clrf	(_ledBrightness+2)& (0+255),b
  2869  00325A  6B9F               	clrf	(_ledBrightness+3)& (0+255),b
  2870                           
  2871                           ; BSR set to: 4
  2872                           ;main.c: 209:         ADCON0bits.FM = 1;
  2873  00325C  013E               	movlb	62	; () banked
  2874  00325E  51F8               	movf	248,w,b	;volatile
  2875  003260  0BF3               	andlw	-13
  2876  003262  0904               	iorlw	4
  2877  003264  6FF8               	movwf	248,b	;volatile
  2878  003266                     l6141:
  2879                           
  2880                           ;main.c: 217:     if (counter % 10000 == 9999) {
  2881  003266  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  2882  00326C  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2883  003272  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2884  003278  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2885  00327E  0E10               	movlw	16
  2886  003280  6E12               	movwf	___llmod@divisor^0,c
  2887  003282  0E27               	movlw	39
  2888  003284  6E13               	movwf	(___llmod@divisor+1)^0,c
  2889  003286  0E00               	movlw	0
  2890  003288  6E14               	movwf	(___llmod@divisor+2)^0,c
  2891  00328A  0E00               	movlw	0
  2892  00328C  6E15               	movwf	(___llmod@divisor+3)^0,c
  2893  00328E  EC8D  F02F         	call	___llmod	;wreg free
  2894  003292  0E0F               	movlw	15
  2895  003294  180E               	xorwf	?___llmod^0,w,c
  2896  003296  E141               	bnz	l6161
  2897  003298  0E27               	movlw	39
  2898  00329A  180F               	xorwf	(?___llmod+1)^0,w,c
  2899  00329C  1010               	iorwf	(?___llmod+2)^0,w,c
  2900  00329E  1011               	iorwf	(?___llmod+3)^0,w,c
  2901  0032A0  A4D8               	btfss	status,2,c
  2902  0032A2  D03B               	goto	l6161
  2903                           
  2904                           ;main.c: 218:         uart_send(volCheckCmd, 3);
  2905  0032A4  0E21               	movlw	low _volCheckCmd
  2906  0032A6  6E0C               	movwf	uart_send@buf^0,c
  2907  0032A8  500C               	movf	uart_send@buf^0,w,c
  2908  0032AA  A4D8               	btfss	status,2,c
  2909  0032AC  0E20               	movlw	high __smallconst
  2910  0032AE  6E0D               	movwf	(uart_send@buf+1)^0,c
  2911  0032B0  0E03               	movlw	3
  2912  0032B2  6E0E               	movwf	uart_send@len^0,c
  2913  0032B4  ECDF  F02E         	call	_uart_send	;wreg free
  2914                           
  2915                           ; BSR set to: 59
  2916                           ;main.c: 220:         lcd_set_data_addr(0x40);
  2917  0032B8  0E40               	movlw	64
  2918  0032BA  ECC9  F031         	call	_lcd_set_data_addr
  2919                           
  2920                           ;main.c: 221:         if (pairing) lcd_print("Pairing         ");
  2921  0032BE  0104               	movlb	4	; () banked
  2922  0032C0  514A               	movf	_pairing& (0+255),w,b
  2923  0032C2  B4D8               	btfsc	status,2,c
  2924  0032C4  D009               	goto	l6151
  2925                           
  2926                           ; BSR set to: 4
  2927  0032C6  0E87               	movlw	low STR_1
  2928  0032C8  6E05               	movwf	lcd_print@string^0,c
  2929  0032CA  5005               	movf	lcd_print@string^0,w,c
  2930  0032CC  A4D8               	btfss	status,2,c
  2931  0032CE  0E20               	movlw	high __smallconst
  2932  0032D0  6E06               	movwf	(lcd_print@string+1)^0,c
  2933  0032D2  EC4B  F02D         	call	_lcd_print	;wreg free
  2934  0032D6  D04A               	goto	l6165
  2935  0032D8                     l6151:
  2936                           
  2937                           ; BSR set to: 4
  2938  0032D8  5148               	movf	_connected& (0+255),w,b
  2939  0032DA  B4D8               	btfsc	status,2,c
  2940  0032DC  D009               	goto	l6155
  2941                           
  2942                           ; BSR set to: 4
  2943  0032DE  0E98               	movlw	low STR_2
  2944  0032E0  6E05               	movwf	lcd_print@string^0,c
  2945  0032E2  5005               	movf	lcd_print@string^0,w,c
  2946  0032E4  A4D8               	btfss	status,2,c
  2947  0032E6  0E20               	movlw	high __smallconst
  2948  0032E8  6E06               	movwf	(lcd_print@string+1)^0,c
  2949  0032EA  EC4B  F02D         	call	_lcd_print	;wreg free
  2950  0032EE  D03E               	goto	l6165
  2951  0032F0                     l6155:
  2952                           
  2953                           ; BSR set to: 4
  2954  0032F0  5147               	movf	_on& (0+255),w,b
  2955  0032F2  B4D8               	btfsc	status,2,c
  2956  0032F4  D009               	goto	l6159
  2957                           
  2958                           ; BSR set to: 4
  2959  0032F6  0EBA               	movlw	low STR_3
  2960  0032F8  6E05               	movwf	lcd_print@string^0,c
  2961  0032FA  5005               	movf	lcd_print@string^0,w,c
  2962  0032FC  A4D8               	btfss	status,2,c
  2963  0032FE  0E20               	movlw	high __smallconst
  2964  003300  6E06               	movwf	(lcd_print@string+1)^0,c
  2965  003302  EC4B  F02D         	call	_lcd_print	;wreg free
  2966  003306  D032               	goto	l6165
  2967  003308                     l6159:
  2968                           
  2969                           ; BSR set to: 4
  2970  003308  0E76               	movlw	low STR_4
  2971  00330A  6E05               	movwf	lcd_print@string^0,c
  2972  00330C  5005               	movf	lcd_print@string^0,w,c
  2973  00330E  A4D8               	btfss	status,2,c
  2974  003310  0E20               	movlw	high __smallconst
  2975  003312  6E06               	movwf	(lcd_print@string+1)^0,c
  2976  003314  EC4B  F02D         	call	_lcd_print	;wreg free
  2977  003318  D029               	goto	l6165
  2978  00331A                     l6161:
  2979  00331A  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  2980  003320  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2981  003326  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2982  00332C  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2983  003332  0E10               	movlw	16
  2984  003334  6E12               	movwf	___llmod@divisor^0,c
  2985  003336  0E27               	movlw	39
  2986  003338  6E13               	movwf	(___llmod@divisor+1)^0,c
  2987  00333A  0E00               	movlw	0
  2988  00333C  6E14               	movwf	(___llmod@divisor+2)^0,c
  2989  00333E  0E00               	movlw	0
  2990  003340  6E15               	movwf	(___llmod@divisor+3)^0,c
  2991  003342  EC8D  F02F         	call	___llmod	;wreg free
  2992  003346  0E87               	movlw	135
  2993  003348  180E               	xorwf	?___llmod^0,w,c
  2994  00334A  E110               	bnz	l6165
  2995  00334C  0E13               	movlw	19
  2996  00334E  180F               	xorwf	(?___llmod+1)^0,w,c
  2997  003350  1010               	iorwf	(?___llmod+2)^0,w,c
  2998  003352  1011               	iorwf	(?___llmod+3)^0,w,c
  2999  003354  A4D8               	btfss	status,2,c
  3000  003356  D00A               	goto	l6165
  3001                           
  3002                           ;main.c: 226:         uart_send(stateCheckCmd, 2);
  3003  003358  0E24               	movlw	low _stateCheckCmd
  3004  00335A  6E0C               	movwf	uart_send@buf^0,c
  3005  00335C  500C               	movf	uart_send@buf^0,w,c
  3006  00335E  A4D8               	btfss	status,2,c
  3007  003360  0E20               	movlw	high __smallconst
  3008  003362  6E0D               	movwf	(uart_send@buf+1)^0,c
  3009  003364  0E02               	movlw	2
  3010  003366  6E0E               	movwf	uart_send@len^0,c
  3011  003368  ECDF  F02E         	call	_uart_send	;wreg free
  3012  00336C                     l6165:
  3013                           
  3014                           ;main.c: 229:     if (++counter >= 100000) {
  3015  00336C  0E01               	movlw	1
  3016  00336E  0104               	movlb	4	; () banked
  3017  003370  2738               	addwf	main_loop@counter& (0+255),f,b
  3018  003372  0E00               	movlw	0
  3019  003374  2339               	addwfc	(main_loop@counter+1)& (0+255),f,b
  3020  003376  233A               	addwfc	(main_loop@counter+2)& (0+255),f,b
  3021  003378  233B               	addwfc	(main_loop@counter+3)& (0+255),f,b
  3022  00337A  513B               	movf	(main_loop@counter+3)& (0+255),w,b
  3023  00337C  E108               	bnz	u8040
  3024  00337E  0EA0               	movlw	160
  3025  003380  5D38               	subwf	main_loop@counter& (0+255),w,b
  3026  003382  0E86               	movlw	134
  3027  003384  5939               	subwfb	(main_loop@counter+1)& (0+255),w,b
  3028  003386  0E01               	movlw	1
  3029  003388  593A               	subwfb	(main_loop@counter+2)& (0+255),w,b
  3030  00338A  A0D8               	btfss	status,0,c
  3031  00338C  D153               	goto	l6213
  3032  00338E                     u8040:
  3033                           
  3034                           ; BSR set to: 4
  3035                           ;main.c: 230:         ADPCH = 0b011011;
  3036  00338E  0E1B               	movlw	27
  3037  003390  013E               	movlb	62	; () banked
  3038  003392  6FF1               	movwf	241,b	;volatile
  3039                           
  3040                           ; BSR set to: 62
  3041                           ;main.c: 231:         ADCON0bits.GO = 1;
  3042  003394  81F8               	bsf	248,0,b	;volatile
  3043                           
  3044                           ;main.c: 232:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  3045  003396  D004               	goto	l6173
  3046  003398                     l6171:
  3047                           
  3048                           ; BSR set to: 62
  3049  003398  0E05               	movlw	5
  3050  00339A                     u8167:
  3051  00339A  2EE8               	decfsz	wreg,f,c
  3052  00339C  D7FE               	bra	u8167
  3053  00339E  F000               	nop	
  3054  0033A0                     l6173:
  3055  0033A0  013E               	movlb	62	; () banked
  3056  0033A2  B1F8               	btfsc	248,0,b	;volatile
  3057  0033A4  D7F9               	goto	l6171
  3058                           
  3059                           ; BSR set to: 62
  3060                           ;main.c: 233:         uint16_t batlvl = ((ADRESH << 8) | ADRESL);
  3061  0033A6  51EF               	movf	239,w,b	;volatile
  3062  0033A8  006F FBC0  F0C7    	movff	16112,??_main_loop	;volatile
  3063  0033AE  0100               	movlb	0	; () banked
  3064  0033B0  6BC8               	clrf	(??_main_loop+1)& (0+255),b
  3065  0033B2  0060  F31C  F0C8   	movff	??_main_loop,??_main_loop+1
  3066  0033B8  6BC7               	clrf	??_main_loop& (0+255),b
  3067  0033BA  11C7               	iorwf	??_main_loop& (0+255),w,b
  3068  0033BC  6FF4               	movwf	main_loop@batlvl& (0+255),b
  3069  0033BE  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  3070  0033C0  6FF5               	movwf	(main_loop@batlvl+1)& (0+255),b
  3071                           
  3072                           ; BSR set to: 0
  3073                           ;main.c: 234:         char batmsg[17];;main.c: 235:         if (batlvl < 2090.0f - 100) 
      +                          {
  3074  0033C2  0060  F3D0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3075  0033C8  0060  F3D4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3076  0033CE  6A03               	clrf	(___xxtofl@val+2)^0,c
  3077  0033D0  6A04               	clrf	(___xxtofl@val+3)^0,c
  3078  0033D2  0E00               	movlw	0
  3079  0033D4  ECA9  F028         	call	___xxtofl
  3080  0033D8  0060  F004  F051   	movff	?___xxtofl,___flge@ff1
  3081  0033DE  0060  F008  F052   	movff	?___xxtofl+1,___flge@ff1+1
  3082  0033E4  0060  F00C  F053   	movff	?___xxtofl+2,___flge@ff1+2
  3083  0033EA  0060  F010  F054   	movff	?___xxtofl+3,___flge@ff1+3
  3084  0033F0  0E00               	movlw	0
  3085  0033F2  6E55               	movwf	___flge@ff2^0,c
  3086  0033F4  0EC0               	movlw	192
  3087  0033F6  6E56               	movwf	(___flge@ff2+1)^0,c
  3088  0033F8  0EF8               	movlw	248
  3089  0033FA  6E57               	movwf	(___flge@ff2+2)^0,c
  3090  0033FC  0E44               	movlw	68
  3091  0033FE  6E58               	movwf	(___flge@ff2+3)^0,c
  3092  003400  EC31  F02B         	call	___flge	;wreg free
  3093  003404  B0D8               	btfsc	status,0,c
  3094  003406  D011               	goto	l6183
  3095                           
  3096                           ;main.c: 236:             bat_percent = 100.0f;
  3097  003408  0E00               	movlw	0
  3098  00340A  0104               	movlb	4	; () banked
  3099  00340C  6FA0               	movwf	_bat_percent& (0+255),b
  3100  00340E  0E00               	movlw	0
  3101  003410  6FA1               	movwf	(_bat_percent+1)& (0+255),b
  3102  003412  0EC8               	movlw	200
  3103  003414  6FA2               	movwf	(_bat_percent+2)& (0+255),b
  3104  003416  0E42               	movlw	66
  3105  003418  6FA3               	movwf	(_bat_percent+3)& (0+255),b
  3106                           
  3107                           ; BSR set to: 4
  3108                           ;main.c: 237:             sprintf(batmsg, "No Battery      ");
  3109  00341A  0ECD               	movlw	low main_loop@batmsg
  3110  00341C  0100               	movlb	0	; () banked
  3111  00341E  6FB9               	movwf	sprintf@s& (0+255),b
  3112  003420  0EA9               	movlw	low STR_5
  3113  003422  6FBA               	movwf	sprintf@fmt& (0+255),b
  3114  003424  ECF6  F030         	call	_sprintf	;wreg free
  3115                           
  3116                           ;main.c: 238:         } else {
  3117  003428  D0F4               	goto	l6207
  3118  00342A                     l6183:
  3119                           
  3120                           ;main.c: 239:             bat_percent = (batlvl - 2090.0f) / (2996.0f - 2090.0f) * 100.0
      +                          f;
  3121  00342A  0E00               	movlw	0
  3122  00342C  6E23               	movwf	___fldiv@a^0,c
  3123  00342E  0E80               	movlw	128
  3124  003430  6E24               	movwf	(___fldiv@a+1)^0,c
  3125  003432  0E62               	movlw	98
  3126  003434  6E25               	movwf	(___fldiv@a+2)^0,c
  3127  003436  0E44               	movlw	68
  3128  003438  6E26               	movwf	(___fldiv@a+3)^0,c
  3129  00343A  0E00               	movlw	0
  3130  00343C  6E13               	movwf	___fladd@a^0,c
  3131  00343E  0EA0               	movlw	160
  3132  003440  6E14               	movwf	(___fladd@a+1)^0,c
  3133  003442  0E02               	movlw	2
  3134  003444  6E15               	movwf	(___fladd@a+2)^0,c
  3135  003446  0EC5               	movlw	197
  3136  003448  6E16               	movwf	(___fladd@a+3)^0,c
  3137  00344A  0060  F3D0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3138  003450  0060  F3D4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3139  003456  6A03               	clrf	(___xxtofl@val+2)^0,c
  3140  003458  6A04               	clrf	(___xxtofl@val+3)^0,c
  3141  00345A  0E00               	movlw	0
  3142  00345C  ECA9  F028         	call	___xxtofl
  3143  003460  0060  F004  F00F   	movff	?___xxtofl,___fladd@b
  3144  003466  0060  F008  F010   	movff	?___xxtofl+1,___fladd@b+1
  3145  00346C  0060  F00C  F011   	movff	?___xxtofl+2,___fladd@b+2
  3146  003472  0060  F010  F012   	movff	?___xxtofl+3,___fladd@b+3
  3147  003478  EC96  F022         	call	___fladd	;wreg free
  3148  00347C  0060  F03C  F01F   	movff	?___fladd,___fldiv@b
  3149  003482  0060  F040  F020   	movff	?___fladd+1,___fldiv@b+1
  3150  003488  0060  F044  F021   	movff	?___fladd+2,___fldiv@b+2
  3151  00348E  0060  F048  F022   	movff	?___fladd+3,___fldiv@b+3
  3152  003494  EC3A  F024         	call	___fldiv	;wreg free
  3153  003498  0060  F07C  F038   	movff	?___fldiv,___flmul@b
  3154  00349E  0060  F080  F039   	movff	?___fldiv+1,___flmul@b+1
  3155  0034A4  0060  F084  F03A   	movff	?___fldiv+2,___flmul@b+2
  3156  0034AA  0060  F088  F03B   	movff	?___fldiv+3,___flmul@b+3
  3157  0034B0  0E00               	movlw	0
  3158  0034B2  6E3C               	movwf	___flmul@a^0,c
  3159  0034B4  0E00               	movlw	0
  3160  0034B6  6E3D               	movwf	(___flmul@a+1)^0,c
  3161  0034B8  0EC8               	movlw	200
  3162  0034BA  6E3E               	movwf	(___flmul@a+2)^0,c
  3163  0034BC  0E42               	movlw	66
  3164  0034BE  6E3F               	movwf	(___flmul@a+3)^0,c
  3165  0034C0  ECD4  F020         	call	___flmul	;wreg free
  3166  0034C4  0060  F0E0  F4A0   	movff	?___flmul,_bat_percent
  3167  0034CA  0060  F0E4  F4A1   	movff	?___flmul+1,_bat_percent+1
  3168  0034D0  0060  F0E8  F4A2   	movff	?___flmul+2,_bat_percent+2
  3169  0034D6  0060  F0EC  F4A3   	movff	?___flmul+3,_bat_percent+3
  3170                           
  3171                           ;main.c: 240:             bat_percent = (bat_percent < 0.0f ? 0.0f : (bat_percent > 100.
      +                          0f ? 100.0f : bat_percent));
  3172  0034DC  0104               	movlb	4	; () banked
  3173  0034DE  BFA3               	btfsc	(_bat_percent+3)& (0+255),7,b
  3174  0034E0  D03B               	goto	l6195
  3175                           
  3176                           ; BSR set to: 4
  3177  0034E2  0E00               	movlw	0
  3178  0034E4  6E51               	movwf	___flge@ff1^0,c
  3179  0034E6  0E00               	movlw	0
  3180  0034E8  6E52               	movwf	(___flge@ff1+1)^0,c
  3181  0034EA  0EC8               	movlw	200
  3182  0034EC  6E53               	movwf	(___flge@ff1+2)^0,c
  3183  0034EE  0E42               	movlw	66
  3184  0034F0  6E54               	movwf	(___flge@ff1+3)^0,c
  3185  0034F2  0061  F280  F055   	movff	_bat_percent,___flge@ff2
  3186  0034F8  0061  F284  F056   	movff	_bat_percent+1,___flge@ff2+1
  3187  0034FE  0061  F288  F057   	movff	_bat_percent+2,___flge@ff2+2
  3188  003504  0061  F28C  F058   	movff	_bat_percent+3,___flge@ff2+3
  3189  00350A  EC31  F02B         	call	___flge	;wreg free
  3190  00350E  A0D8               	btfss	status,0,c
  3191  003510  D00D               	goto	l6191
  3192  003512  0061  F280  F0EE   	movff	_bat_percent,_main_loop$336
  3193  003518  0061  F284  F0EF   	movff	_bat_percent+1,_main_loop$336+1
  3194  00351E  0061  F288  F0F0   	movff	_bat_percent+2,_main_loop$336+2
  3195  003524  0061  F28C  F0F1   	movff	_bat_percent+3,_main_loop$336+3
  3196  00352A  D009               	goto	l6193
  3197  00352C                     l6191:
  3198  00352C  0E00               	movlw	0
  3199  00352E  0100               	movlb	0	; () banked
  3200  003530  6FEE               	movwf	_main_loop$336& (0+255),b
  3201  003532  0E00               	movlw	0
  3202  003534  6FEF               	movwf	(_main_loop$336+1)& (0+255),b
  3203  003536  0EC8               	movlw	200
  3204  003538  6FF0               	movwf	(_main_loop$336+2)& (0+255),b
  3205  00353A  0E42               	movlw	66
  3206  00353C  6FF1               	movwf	(_main_loop$336+3)& (0+255),b
  3207  00353E                     l6193:
  3208  00353E  0060  F3B8  F4A0   	movff	_main_loop$336,_bat_percent
  3209  003544  0060  F3BC  F4A1   	movff	_main_loop$336+1,_bat_percent+1
  3210  00354A  0060  F3C0  F4A2   	movff	_main_loop$336+2,_bat_percent+2
  3211  003550  0060  F3C4  F4A3   	movff	_main_loop$336+3,_bat_percent+3
  3212  003556  D008               	goto	l6197
  3213  003558                     l6195:
  3214                           
  3215                           ; BSR set to: 4
  3216  003558  0E00               	movlw	0
  3217  00355A  6FA0               	movwf	_bat_percent& (0+255),b
  3218  00355C  0E00               	movlw	0
  3219  00355E  6FA1               	movwf	(_bat_percent+1)& (0+255),b
  3220  003560  0E00               	movlw	0
  3221  003562  6FA2               	movwf	(_bat_percent+2)& (0+255),b
  3222  003564  0E00               	movlw	0
  3223  003566  6FA3               	movwf	(_bat_percent+3)& (0+255),b
  3224  003568                     l6197:
  3225                           
  3226                           ;main.c: 241:             if (!PORTDbits.RD2) sprintf(batmsg, "Chg fault: %3.0f%% ", bat
      +                          _percent);
  3227  003568  B4CD               	btfsc	205,2,c	;volatile
  3228  00356A  D014               	goto	l318
  3229  00356C  0ECD               	movlw	low main_loop@batmsg
  3230  00356E  0100               	movlb	0	; () banked
  3231  003570  6FB9               	movwf	sprintf@s& (0+255),b
  3232  003572  0E62               	movlw	low STR_6
  3233  003574  6FBA               	movwf	sprintf@fmt& (0+255),b
  3234  003576  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3235  00357C  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3236  003582  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3237  003588  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3238  00358E  ECF6  F030         	call	_sprintf	;wreg free
  3239  003592  D03F               	goto	l6207
  3240  003594                     l318:
  3241  003594  B2CD               	btfsc	205,1,c	;volatile
  3242  003596  D014               	goto	l320
  3243  003598  0ECD               	movlw	low main_loop@batmsg
  3244  00359A  0100               	movlb	0	; () banked
  3245  00359C  6FB9               	movwf	sprintf@s& (0+255),b
  3246  00359E  0E3A               	movlw	low STR_7
  3247  0035A0  6FBA               	movwf	sprintf@fmt& (0+255),b
  3248  0035A2  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3249  0035A8  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3250  0035AE  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3251  0035B4  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3252  0035BA  ECF6  F030         	call	_sprintf	;wreg free
  3253  0035BE  D029               	goto	l6207
  3254  0035C0                     l320:
  3255  0035C0  B0CD               	btfsc	205,0,c	;volatile
  3256  0035C2  D014               	goto	l6205
  3257  0035C4  0ECD               	movlw	low main_loop@batmsg
  3258  0035C6  0100               	movlb	0	; () banked
  3259  0035C8  6FB9               	movwf	sprintf@s& (0+255),b
  3260  0035CA  0E4E               	movlw	low STR_8
  3261  0035CC  6FBA               	movwf	sprintf@fmt& (0+255),b
  3262  0035CE  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3263  0035D4  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3264  0035DA  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3265  0035E0  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3266  0035E6  ECF6  F030         	call	_sprintf	;wreg free
  3267  0035EA  D013               	goto	l6207
  3268  0035EC                     l6205:
  3269  0035EC  0ECD               	movlw	low main_loop@batmsg
  3270  0035EE  0100               	movlb	0	; () banked
  3271  0035F0  6FB9               	movwf	sprintf@s& (0+255),b
  3272  0035F2  0E26               	movlw	low STR_9
  3273  0035F4  6FBA               	movwf	sprintf@fmt& (0+255),b
  3274  0035F6  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3275  0035FC  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3276  003602  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3277  003608  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3278  00360E  ECF6  F030         	call	_sprintf	;wreg free
  3279  003612                     l6207:
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;main.c: 246:         lcd_set_data_addr(0);
  3283  003612  0E00               	movlw	0
  3284  003614  ECC9  F031         	call	_lcd_set_data_addr
  3285                           
  3286                           ;main.c: 247:         lcd_print(batmsg);
  3287  003618  0ECD               	movlw	low main_loop@batmsg
  3288  00361A  6E05               	movwf	lcd_print@string^0,c
  3289  00361C  6A06               	clrf	(lcd_print@string+1)^0,c
  3290  00361E  EC4B  F02D         	call	_lcd_print	;wreg free
  3291                           
  3292                           ;main.c: 249:         counter = 0;
  3293  003622  0E00               	movlw	0
  3294  003624  0104               	movlb	4	; () banked
  3295  003626  6F38               	movwf	main_loop@counter& (0+255),b
  3296  003628  0E00               	movlw	0
  3297  00362A  6F39               	movwf	(main_loop@counter+1)& (0+255),b
  3298  00362C  0E00               	movlw	0
  3299  00362E  6F3A               	movwf	(main_loop@counter+2)& (0+255),b
  3300  003630  0E00               	movlw	0
  3301  003632  6F3B               	movwf	(main_loop@counter+3)& (0+255),b
  3302  003634                     l6213:
  3303                           
  3304                           ; BSR set to: 4
  3305                           ;main.c: 252:     uart_tasks();
  3306  003634  ECF7  F027         	call	_uart_tasks	;wreg free
  3307  003638  0004               	clrwdt		;# 
  3308                           
  3309                           ;main.c: 255:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  3310  00363A  0E35               	movlw	53
  3311  00363C                     u8177:
  3312  00363C  2EE8               	decfsz	wreg,f,c
  3313  00363E  D7FE               	bra	u8177
  3314  003640  F000               	nop	
  3315  003642  0012               	return		;funcret
  3316  003644                     __end_of_main_loop:
  3317                           	opt callstack 0
  3318                           
  3319 ;; *************** function _updateButtonLight *****************
  3320 ;; Defined at:
  3321 ;;		line 93 in file "main.c"
  3322 ;; Parameters:    Size  Location     Type
  3323 ;;  step            4   26[COMRAM] long 
  3324 ;; Auto vars:     Size  Location     Type
  3325 ;;  dch             4   34[COMRAM] long 
  3326 ;; Return value:  Size  Location     Type
  3327 ;;                  1    wreg      void 
  3328 ;; Registers used:
  3329 ;;		wreg, status,2, status,0, cstack
  3330 ;; Tracked objects:
  3331 ;;		On entry : 0/4
  3332 ;;		On exit  : 3B/0
  3333 ;;		Unchanged: 0/0
  3334 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3336 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3338 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3339 ;;Total ram usage:       12 bytes
  3340 ;; Hardware stack levels used:    1
  3341 ;; Hardware stack levels required when called:    1
  3342 ;; This function calls:
  3343 ;;		___aldiv
  3344 ;; This function is called by:
  3345 ;;		_main_loop
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text3
  3350  0054A8                     __ptext3:
  3351                           	opt callstack 0
  3352  0054A8                     _updateButtonLight:
  3353                           	opt callstack 28
  3354                           
  3355                           ;main.c: 94:     if (!on) {
  3356                           
  3357                           ;incstack = 0
  3358  0054A8  0104               	movlb	4	; () banked
  3359  0054AA  5147               	movf	_on& (0+255),w,b
  3360  0054AC  A4D8               	btfss	status,2,c
  3361  0054AE  D007               	goto	l5007
  3362                           
  3363                           ; BSR set to: 4
  3364                           ;main.c: 95:         PWM6DCH = 0;
  3365  0054B0  0E00               	movlw	0
  3366  0054B2  6E69               	movwf	105,c	;volatile
  3367                           
  3368                           ;main.c: 96:         PWM6DCL = 0;
  3369  0054B4  0E00               	movlw	0
  3370  0054B6  6E68               	movwf	104,c	;volatile
  3371                           
  3372                           ; BSR set to: 4
  3373                           ;main.c: 97:         PWM8DCH = 255;
  3374  0054B8  6861               	setf	97,c	;volatile
  3375  0054BA                     l5005:
  3376                           
  3377                           ;main.c: 98:         PWM8DCL = 255;
  3378  0054BA  6860               	setf	96,c	;volatile
  3379                           
  3380                           ;main.c: 99:     } else if (pairing) {
  3381  0054BC  0012               	return	
  3382  0054BE                     l5007:
  3383                           
  3384                           ; BSR set to: 4
  3385  0054BE  514A               	movf	_pairing& (0+255),w,b
  3386  0054C0  B4D8               	btfsc	status,2,c
  3387  0054C2  D060               	goto	l201
  3388                           
  3389                           ; BSR set to: 4
  3390                           ;main.c: 100:         PWM6DCH = 255;
  3391  0054C4  6869               	setf	105,c	;volatile
  3392                           
  3393                           ;main.c: 101:         PWM6DCL = 255;
  3394  0054C6  6868               	setf	104,c	;volatile
  3395                           
  3396                           ; BSR set to: 4
  3397                           ;main.c: 103:         if (step % 4096 < 2048) dch = (step % 2048) / 8;
  3398                           
  3399                           ; BSR set to: 4
  3400  0054C8  0EFF               	movlw	255
  3401  0054CA  141B               	andwf	updateButtonLight@step^0,w,c
  3402  0054CC  6E1F               	movwf	??_updateButtonLight^0,c
  3403  0054CE  0E0F               	movlw	15
  3404  0054D0  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3405  0054D2  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3406  0054D4  0E00               	movlw	0
  3407  0054D6  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3408  0054D8  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3409  0054DA  0E00               	movlw	0
  3410  0054DC  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3411  0054DE  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3412  0054E0  BE22               	btfsc	(??_updateButtonLight+3)^0,7,c
  3413  0054E2  D007               	goto	u6200
  3414  0054E4  5022               	movf	(??_updateButtonLight+3)^0,w,c
  3415  0054E6  1021               	iorwf	(??_updateButtonLight+2)^0,w,c
  3416  0054E8  E11B               	bnz	l5017
  3417  0054EA  0E08               	movlw	8
  3418  0054EC  5C20               	subwf	(??_updateButtonLight+1)^0,w,c
  3419  0054EE  B0D8               	btfsc	status,0,c
  3420  0054F0  D017               	goto	l5017
  3421  0054F2                     u6200:
  3422                           
  3423                           ; BSR set to: 4
  3424  0054F2  0EFF               	movlw	255
  3425  0054F4  141B               	andwf	updateButtonLight@step^0,w,c
  3426  0054F6  6E0D               	movwf	___aldiv@dividend^0,c
  3427  0054F8  0E07               	movlw	7
  3428  0054FA  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3429  0054FC  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3430  0054FE  0E00               	movlw	0
  3431  005500  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3432  005502  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3433  005504  0E00               	movlw	0
  3434  005506  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3435  005508  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3436  00550A  0E08               	movlw	8
  3437  00550C  6E11               	movwf	___aldiv@divisor^0,c
  3438  00550E  0E00               	movlw	0
  3439  005510  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3440  005512  0E00               	movlw	0
  3441  005514  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3442  005516  0E00               	movlw	0
  3443  005518  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3444  00551A  ECC7  F02A         	call	___aldiv	;wreg free
  3445  00551E  D022               	goto	L1
  3446  005520                     l5017:
  3447                           
  3448                           ; BSR set to: 4
  3449  005520  0EFF               	movlw	255
  3450  005522  141B               	andwf	updateButtonLight@step^0,w,c
  3451  005524  6E1F               	movwf	??_updateButtonLight^0,c
  3452  005526  0E07               	movlw	7
  3453  005528  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3454  00552A  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3455  00552C  0E00               	movlw	0
  3456  00552E  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3457  005530  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3458  005532  0E00               	movlw	0
  3459  005534  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3460  005536  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3461  005538  501F               	movf	??_updateButtonLight^0,w,c
  3462  00553A  0800               	sublw	0
  3463  00553C  6E0D               	movwf	___aldiv@dividend^0,c
  3464  00553E  0E08               	movlw	8
  3465  005540  5420               	subfwb	(??_updateButtonLight+1)^0,w,c
  3466  005542  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3467  005544  0E00               	movlw	0
  3468  005546  5421               	subfwb	(??_updateButtonLight+2)^0,w,c
  3469  005548  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3470  00554A  0E00               	movlw	0
  3471  00554C  5422               	subfwb	(??_updateButtonLight+3)^0,w,c
  3472  00554E  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3473  005550  0E08               	movlw	8
  3474  005552  6E11               	movwf	___aldiv@divisor^0,c
  3475  005554  0E00               	movlw	0
  3476  005556  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3477  005558  0E00               	movlw	0
  3478  00555A  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3479  00555C  0E00               	movlw	0
  3480  00555E  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3481  005560  ECC7  F02A         	call	___aldiv	;wreg free
  3482  005564                     L1:
  3483  005564  0060  F034  F023   	movff	?___aldiv,updateButtonLight@dch
  3484  00556A  0060  F038  F024   	movff	?___aldiv+1,updateButtonLight@dch+1
  3485  005570  0060  F03C  F025   	movff	?___aldiv+2,updateButtonLight@dch+2
  3486  005576  0060  F040  F026   	movff	?___aldiv+3,updateButtonLight@dch+3
  3487                           
  3488                           ;main.c: 105:         PWM8DCH = dch;
  3489  00557C  0060  F08F  FF61   	movff	updateButtonLight@dch,16225	;volatile
  3490  005582  D79B               	goto	l5005
  3491  005584                     l201:
  3492                           
  3493                           ; BSR set to: 4
  3494                           ;main.c: 108:         PWM6DCH = 255;
  3495  005584  6869               	setf	105,c	;volatile
  3496                           
  3497                           ;main.c: 109:         PWM6DCL = 255;
  3498  005586  6868               	setf	104,c	;volatile
  3499                           
  3500                           ;main.c: 110:         PWM8DCH = 255;
  3501  005588  6861               	setf	97,c	;volatile
  3502                           
  3503                           ;main.c: 111:         PWM8DCL = 255;
  3504  00558A  6860               	setf	96,c	;volatile
  3505  00558C  0012               	return		;funcret
  3506  00558E                     __end_of_updateButtonLight:
  3507                           	opt callstack 0
  3508                           
  3509 ;; *************** function _uart_tasks *****************
  3510 ;; Defined at:
  3511 ;;		line 80 in file "uart.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;		None
  3514 ;; Auto vars:     Size  Location     Type
  3515 ;;  val             1   34[COMRAM] unsigned char 
  3516 ;;  intPos          1   31[COMRAM] unsigned char 
  3517 ;;  bytePos         1   30[COMRAM] unsigned char 
  3518 ;;  posInRawMsg     1   28[COMRAM] unsigned char 
  3519 ;;  message       256    0[BANK3 ] unsigned char [256]
  3520 ;;  zeroByte        1   33[COMRAM] _Bool 
  3521 ;;  msgLen          1   32[COMRAM] unsigned char 
  3522 ;;  i               1   29[COMRAM] unsigned char 
  3523 ;;  msgOffset       1   27[COMRAM] unsigned char 
  3524 ;;  checksum        1   26[COMRAM] unsigned char 
  3525 ;;  rawMsgOffset    1   25[COMRAM] unsigned char 
  3526 ;;  rxLen           1   24[COMRAM] unsigned char 
  3527 ;; Return value:  Size  Location     Type
  3528 ;;                  1    wreg      void 
  3529 ;; Registers used:
  3530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3531 ;; Tracked objects:
  3532 ;;		On entry : 3F/4
  3533 ;;		On exit  : 0/0
  3534 ;;		Unchanged: 0/0
  3535 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3537 ;;      Locals:        11       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3538 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3539 ;;      Totals:        15       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3540 ;;Total ram usage:      271 bytes
  3541 ;; Hardware stack levels used:    1
  3542 ;; Hardware stack levels required when called:    3
  3543 ;; This function calls:
  3544 ;;		_handle_message
  3545 ;;		_transmitChecksum
  3546 ;; This function is called by:
  3547 ;;		_main_loop
  3548 ;; This function uses a non-reentrant model
  3549 ;;
  3550                           
  3551                           	psect	text4
  3552  004FEE                     __ptext4:
  3553                           	opt callstack 0
  3554  004FEE                     _uart_tasks:
  3555                           	opt callstack 26
  3556                           
  3557                           ; BSR set to: 4
  3558                           ;uart.c: 81:     static uint8_t rxPos = 0;;uart.c: 83:     if (DMA2SCNTIF) transmitCheck
      +                          sum();
  3559                           
  3560                           ;incstack = 0
  3561  004FEE  0139               	movlb	57	; () banked
  3562  004FF0  B5A5               	btfsc	165,2,b	;volatile
  3563                           
  3564                           ; BSR set to: 57
  3565  004FF2  ECD4  F031         	call	_transmitChecksum	;wreg free
  3566                           
  3567                           ; BSR set to: 57
  3568                           ;uart.c: 85:     if (DMA1DPTRL == rxPos) return;
  3569  004FF6  0104               	movlb	4	; () banked
  3570  004FF8  5146               	movf	uart_tasks@rxPos& (0+255),w,b
  3571  004FFA  013B               	movlb	59	; () banked
  3572  004FFC  19EC               	xorwf	236,w,b	;volatile
  3573  004FFE  B4D8               	btfsc	status,2,c
  3574  005000  0012               	return	
  3575                           
  3576                           ; BSR set to: 59
  3577                           ;uart.c: 86:     uint8_t rxLen = DMA1DPTRL - rxPos;
  3578  005002  0104               	movlb	4	; () banked
  3579  005004  5146               	movf	uart_tasks@rxPos& (0+255),w,b
  3580  005006  013B               	movlb	59	; () banked
  3581  005008  5DEC               	subwf	236,w,b	;volatile
  3582  00500A  6E19               	movwf	uart_tasks@rxLen^0,c
  3583                           
  3584                           ; BSR set to: 59
  3585                           ;uart.c: 87:     uint8_t i;;uart.c: 88:     _Bool zeroByte = 0;
  3586  00500C  0E00               	movlw	0
  3587  00500E  6E22               	movwf	uart_tasks@zeroByte^0,c
  3588                           
  3589                           ; BSR set to: 59
  3590                           ;uart.c: 89:     uint8_t msgLen = 0;
  3591  005010  0E00               	movlw	0
  3592  005012  6E21               	movwf	uart_tasks@msgLen^0,c
  3593                           
  3594                           ; BSR set to: 59
  3595                           ;uart.c: 90:     uint8_t checksum = 0;
  3596  005014  0E00               	movlw	0
  3597  005016  6E1B               	movwf	uart_tasks@checksum^0,c
  3598                           
  3599                           ; BSR set to: 59
  3600                           ;uart.c: 91:     uint8_t message[256];;uart.c: 92:     uint8_t msgOffset = 0;
  3601  005018  0E00               	movlw	0
  3602  00501A  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3603                           
  3604                           ; BSR set to: 59
  3605                           ;uart.c: 93:     uint8_t rawMsgOffset = 0;
  3606  00501C  0E00               	movlw	0
  3607  00501E  6E1A               	movwf	uart_tasks@rawMsgOffset^0,c
  3608                           
  3609                           ; BSR set to: 59
  3610                           ;uart.c: 94:     for (i = 0; i < rxLen; i++) {
  3611  005020  0E00               	movlw	0
  3612  005022  6E1E               	movwf	uart_tasks@i^0,c
  3613  005024  D08E               	goto	l5241
  3614  005026                     l5179:
  3615                           
  3616                           ;uart.c: 95:         uint8_t bytePos = i - msgOffset;
  3617  005026  501C               	movf	uart_tasks@msgOffset^0,w,c
  3618  005028  5C1E               	subwf	uart_tasks@i^0,w,c
  3619  00502A  6E1F               	movwf	uart_tasks@bytePos^0,c
  3620                           
  3621                           ;uart.c: 96:         uint8_t intPos = rxPos + i;
  3622  00502C  0104               	movlb	4	; () banked
  3623  00502E  5146               	movf	uart_tasks@rxPos& (0+255),w,b
  3624  005030  241E               	addwf	uart_tasks@i^0,w,c
  3625  005032  6E20               	movwf	uart_tasks@intPos^0,c
  3626                           
  3627                           ; BSR set to: 4
  3628                           ;uart.c: 97:         uint8_t val = rxBuf[intPos];
  3629  005034  0E00               	movlw	0
  3630  005036  2420               	addwf	uart_tasks@intPos^0,w,c
  3631  005038  6ED9               	movwf	fsr2l,c
  3632  00503A  6ADA               	clrf	fsr2h,c
  3633  00503C  0E01               	movlw	1
  3634  00503E  22DA               	addwfc	fsr2h,f,c
  3635  005040  50DF               	movf	indf2,w,c
  3636  005042  6E23               	movwf	uart_tasks@val^0,c
  3637                           
  3638                           ; BSR set to: 4
  3639                           ;uart.c: 98:         uint8_t posInRawMsg = bytePos - (3 + zeroByte);
  3640  005044  5022               	movf	uart_tasks@zeroByte^0,w,c
  3641  005046  5C1F               	subwf	uart_tasks@bytePos^0,w,c
  3642  005048  0FFD               	addlw	253
  3643  00504A  6E1D               	movwf	uart_tasks@posInRawMsg^0,c
  3644                           
  3645                           ; BSR set to: 4
  3646                           ;uart.c: 99:         if (bytePos == zeroByte) {
  3647  00504C  5022               	movf	uart_tasks@zeroByte^0,w,c
  3648  00504E  181F               	xorwf	uart_tasks@bytePos^0,w,c
  3649  005050  A4D8               	btfss	status,2,c
  3650  005052  D011               	goto	l5199
  3651                           
  3652                           ; BSR set to: 4
  3653                           ;uart.c: 100:             if (val == 0x00 && !zeroByte) {
  3654  005054  5023               	movf	uart_tasks@val^0,w,c
  3655  005056  A4D8               	btfss	status,2,c
  3656  005058  D005               	goto	l5193
  3657                           
  3658                           ; BSR set to: 4
  3659  00505A  5022               	movf	uart_tasks@zeroByte^0,w,c
  3660  00505C  A4D8               	btfss	status,2,c
  3661  00505E  D002               	goto	l5193
  3662                           
  3663                           ; BSR set to: 4
  3664                           ;uart.c: 101:                 zeroByte = 1;
  3665  005060  0E01               	movlw	1
  3666  005062  D007               	goto	L2
  3667  005064                     l5193:
  3668                           
  3669                           ; BSR set to: 4
  3670  005064  0EAA               	movlw	170
  3671  005066  1823               	xorwf	uart_tasks@val^0,w,c
  3672  005068  B4D8               	btfsc	status,2,c
  3673  00506A  D06A               	goto	l5239
  3674                           
  3675                           ; BSR set to: 4
  3676                           ;uart.c: 103:                 msgOffset = intPos + 1;
  3677  00506C  2820               	incf	uart_tasks@intPos^0,w,c
  3678  00506E  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3679                           
  3680                           ; BSR set to: 4
  3681                           ;uart.c: 104:                 zeroByte = 0;
  3682  005070  0E00               	movlw	0
  3683  005072                     L2:
  3684  005072  6E22               	movwf	uart_tasks@zeroByte^0,c
  3685                           
  3686                           ; BSR set to: 4
  3687                           ;uart.c: 106:         } else if (bytePos == 1 + zeroByte) {
  3688  005074  D065               	goto	l5239
  3689  005076                     l5199:
  3690                           
  3691                           ; BSR set to: 4
  3692  005076  501F               	movf	uart_tasks@bytePos^0,w,c
  3693  005078  6E15               	movwf	??_uart_tasks^0,c
  3694  00507A  6A16               	clrf	(??_uart_tasks+1)^0,c
  3695  00507C  5022               	movf	uart_tasks@zeroByte^0,w,c
  3696  00507E  6E17               	movwf	(??_uart_tasks+2)^0,c
  3697  005080  6A18               	clrf	(??_uart_tasks+3)^0,c
  3698  005082  0E01               	movlw	1
  3699  005084  2617               	addwf	(??_uart_tasks+2)^0,f,c
  3700  005086  0E00               	movlw	0
  3701  005088  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  3702  00508A  5015               	movf	??_uart_tasks^0,w,c
  3703  00508C  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  3704  00508E  E107               	bnz	l5203
  3705  005090  5016               	movf	(??_uart_tasks+1)^0,w,c
  3706  005092  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  3707  005094  A4D8               	btfss	status,2,c
  3708  005096  D003               	goto	l5203
  3709  005098                     u6510:
  3710                           
  3711                           ; BSR set to: 4
  3712                           ;uart.c: 107:             checksum += val;
  3713  005098  5023               	movf	uart_tasks@val^0,w,c
  3714  00509A  261B               	addwf	uart_tasks@checksum^0,f,c
  3715                           
  3716                           ;uart.c: 108:         } else if (bytePos == 2 + zeroByte) {
  3717  00509C  D051               	goto	l5239
  3718  00509E                     l5203:
  3719                           
  3720                           ; BSR set to: 4
  3721  00509E  501F               	movf	uart_tasks@bytePos^0,w,c
  3722  0050A0  6E15               	movwf	??_uart_tasks^0,c
  3723  0050A2  6A16               	clrf	(??_uart_tasks+1)^0,c
  3724  0050A4  5022               	movf	uart_tasks@zeroByte^0,w,c
  3725  0050A6  6E17               	movwf	(??_uart_tasks+2)^0,c
  3726  0050A8  6A18               	clrf	(??_uart_tasks+3)^0,c
  3727  0050AA  0E02               	movlw	2
  3728  0050AC  2617               	addwf	(??_uart_tasks+2)^0,f,c
  3729  0050AE  0E00               	movlw	0
  3730  0050B0  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  3731  0050B2  5015               	movf	??_uart_tasks^0,w,c
  3732  0050B4  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  3733  0050B6  E113               	bnz	l5217
  3734  0050B8  5016               	movf	(??_uart_tasks+1)^0,w,c
  3735  0050BA  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  3736  0050BC  A4D8               	btfss	status,2,c
  3737  0050BE  D00F               	goto	l5217
  3738                           
  3739                           ; BSR set to: 4
  3740                           ;uart.c: 109:             msgLen = val;
  3741  0050C0  0060  F08C  F021   	movff	uart_tasks@val,uart_tasks@msgLen
  3742                           
  3743                           ; BSR set to: 4
  3744                           ;uart.c: 110:             checksum += val;
  3745  0050C6  5023               	movf	uart_tasks@val^0,w,c
  3746  0050C8  261B               	addwf	uart_tasks@checksum^0,f,c
  3747                           
  3748                           ; BSR set to: 4
  3749                           ;uart.c: 111:             if (msgLen == 0) {
  3750  0050CA  5021               	movf	uart_tasks@msgLen^0,w,c
  3751  0050CC  A4D8               	btfss	status,2,c
  3752  0050CE  D038               	goto	l5239
  3753                           
  3754                           ; BSR set to: 4
  3755                           ;uart.c: 112:                 msgOffset = intPos + 1;
  3756  0050D0  2820               	incf	uart_tasks@intPos^0,w,c
  3757  0050D2  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3758                           
  3759                           ; BSR set to: 4
  3760                           ;uart.c: 113:                 zeroByte = 0;
  3761  0050D4  0E00               	movlw	0
  3762  0050D6  6E22               	movwf	uart_tasks@zeroByte^0,c
  3763  0050D8                     l5215:
  3764                           
  3765                           ;uart.c: 114:                 checksum = 0;
  3766  0050D8  0E00               	movlw	0
  3767  0050DA  6E1B               	movwf	uart_tasks@checksum^0,c
  3768  0050DC  D031               	goto	l5239
  3769  0050DE                     l5217:
  3770                           
  3771                           ; BSR set to: 4
  3772  0050DE  5021               	movf	uart_tasks@msgLen^0,w,c
  3773  0050E0  5C1D               	subwf	uart_tasks@posInRawMsg^0,w,c
  3774  0050E2  B0D8               	btfsc	status,0,c
  3775  0050E4  D012               	goto	l5223
  3776                           
  3777                           ; BSR set to: 4
  3778                           ;uart.c: 117:             message[rawMsgOffset + posInRawMsg] = val;
  3779  0050E6  0E00               	movlw	low uart_tasks@message
  3780  0050E8  6E15               	movwf	??_uart_tasks^0,c
  3781  0050EA  0E03               	movlw	high uart_tasks@message
  3782  0050EC  6E16               	movwf	(??_uart_tasks+1)^0,c
  3783  0050EE  501A               	movf	uart_tasks@rawMsgOffset^0,w,c
  3784  0050F0  2615               	addwf	??_uart_tasks^0,f,c
  3785  0050F2  0E00               	movlw	0
  3786  0050F4  2216               	addwfc	(??_uart_tasks+1)^0,f,c
  3787  0050F6  501D               	movf	uart_tasks@posInRawMsg^0,w,c
  3788  0050F8  2415               	addwf	??_uart_tasks^0,w,c
  3789  0050FA  6ED9               	movwf	fsr2l,c
  3790  0050FC  0E00               	movlw	0
  3791  0050FE  2016               	addwfc	(??_uart_tasks+1)^0,w,c
  3792  005100  6EDA               	movwf	fsr2h,c
  3793  005102  0060  F08F  FFDF   	movff	uart_tasks@val,indf2
  3794  005108  D7C7               	goto	u6510
  3795  00510A                     l5223:
  3796                           
  3797                           ; BSR set to: 4
  3798  00510A  5021               	movf	uart_tasks@msgLen^0,w,c
  3799  00510C  181D               	xorwf	uart_tasks@posInRawMsg^0,w,c
  3800  00510E  A4D8               	btfss	status,2,c
  3801  005110  D017               	goto	l5239
  3802                           
  3803                           ; BSR set to: 4
  3804                           ;uart.c: 120:             checksum += val;
  3805  005112  5023               	movf	uart_tasks@val^0,w,c
  3806  005114  261B               	addwf	uart_tasks@checksum^0,f,c
  3807                           
  3808                           ; BSR set to: 4
  3809                           ;uart.c: 121:             if (checksum == 0x00) {
  3810  005116  501B               	movf	uart_tasks@checksum^0,w,c
  3811  005118  A4D8               	btfss	status,2,c
  3812  00511A  D00B               	goto	l5231
  3813                           
  3814                           ; BSR set to: 4
  3815                           ;uart.c: 122:                 handle_message(message + rawMsgOffset, msgLen);
  3816  00511C  0E00               	movlw	low uart_tasks@message
  3817  00511E  241A               	addwf	uart_tasks@rawMsgOffset^0,w,c
  3818  005120  6E11               	movwf	handle_message@message^0,c
  3819  005122  6A12               	clrf	(handle_message@message+1)^0,c
  3820  005124  0E03               	movlw	high uart_tasks@message
  3821  005126  2212               	addwfc	(handle_message@message+1)^0,f,c
  3822  005128  0060  F084  F013   	movff	uart_tasks@msgLen,handle_message@len
  3823  00512E  EC5B  F029         	call	_handle_message	;wreg free
  3824  005132                     l5231:
  3825                           
  3826                           ;uart.c: 124:             msgOffset = intPos + 1;
  3827  005132  2820               	incf	uart_tasks@intPos^0,w,c
  3828  005134  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3829                           
  3830                           ;uart.c: 125:             zeroByte = 0;
  3831  005136  0E00               	movlw	0
  3832  005138  6E22               	movwf	uart_tasks@zeroByte^0,c
  3833                           
  3834                           ;uart.c: 126:             rawMsgOffset += msgLen;
  3835  00513A  5021               	movf	uart_tasks@msgLen^0,w,c
  3836  00513C  261A               	addwf	uart_tasks@rawMsgOffset^0,f,c
  3837  00513E  D7CC               	goto	l5215
  3838  005140                     l5239:
  3839                           
  3840                           ;uart.c: 129:     }
  3841  005140  2A1E               	incf	uart_tasks@i^0,f,c
  3842  005142                     l5241:
  3843  005142  5019               	movf	uart_tasks@rxLen^0,w,c
  3844  005144  5C1E               	subwf	uart_tasks@i^0,w,c
  3845  005146  A0D8               	btfss	status,0,c
  3846  005148  D76E               	goto	l5179
  3847                           
  3848                           ;uart.c: 130:     rxPos = msgOffset;
  3849  00514A  0060  F070  F446   	movff	uart_tasks@msgOffset,uart_tasks@rxPos
  3850  005150  0012               	return		;funcret
  3851  005152                     __end_of_uart_tasks:
  3852                           	opt callstack 0
  3853                           
  3854 ;; *************** function _handle_message *****************
  3855 ;; Defined at:
  3856 ;;		line 58 in file "uart.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;  message         2   16[COMRAM] PTR unsigned char 
  3859 ;;		 -> uart_tasks@message(256), 
  3860 ;;  len             1   18[COMRAM] unsigned char 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      void 
  3865 ;; Registers used:
  3866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 3F/4
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3872 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3874 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3875 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3876 ;;Total ram usage:        4 bytes
  3877 ;; Hardware stack levels used:    1
  3878 ;; Hardware stack levels required when called:    2
  3879 ;; This function calls:
  3880 ;;		_uart_send
  3881 ;; This function is called by:
  3882 ;;		_uart_tasks
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text5
  3887  0052B6                     __ptext5:
  3888                           	opt callstack 0
  3889  0052B6                     _handle_message:
  3890                           	opt callstack 26
  3891                           
  3892                           ; BSR set to: 4
  3893                           ;uart.c: 59:     if (message[0] == 0x17 && message[2] == 0x04 && len == 4) {
  3894                           
  3895                           ;incstack = 0
  3896  0052B6  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  3897  0052BC  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  3898  0052C2  0E17               	movlw	23
  3899  0052C4  18DE               	xorwf	postinc2,w,c
  3900  0052C6  A4D8               	btfss	status,2,c
  3901  0052C8  D018               	goto	l4885
  3902                           
  3903                           ; BSR set to: 4
  3904  0052CA  EE20 F002          	lfsr	2,2
  3905  0052CE  5011               	movf	handle_message@message^0,w,c
  3906  0052D0  26D9               	addwf	fsr2l,f,c
  3907  0052D2  5012               	movf	(handle_message@message+1)^0,w,c
  3908  0052D4  22DA               	addwfc	fsr2h,f,c
  3909  0052D6  0E04               	movlw	4
  3910  0052D8  18DE               	xorwf	postinc2,w,c
  3911  0052DA  A4D8               	btfss	status,2,c
  3912  0052DC  D00E               	goto	l4885
  3913                           
  3914                           ; BSR set to: 4
  3915  0052DE  0E04               	movlw	4
  3916  0052E0  1813               	xorwf	handle_message@len^0,w,c
  3917  0052E2  A4D8               	btfss	status,2,c
  3918  0052E4  D00A               	goto	l4885
  3919                           
  3920                           ; BSR set to: 4
  3921                           ;uart.c: 60:         volume_level = message[3] & 0x0f;
  3922  0052E6  EE20 F003          	lfsr	2,3
  3923  0052EA  5011               	movf	handle_message@message^0,w,c
  3924  0052EC  26D9               	addwf	fsr2l,f,c
  3925  0052EE  5012               	movf	(handle_message@message+1)^0,w,c
  3926  0052F0  22DA               	addwfc	fsr2h,f,c
  3927  0052F2  50DF               	movf	indf2,w,c
  3928  0052F4  0B0F               	andlw	15
  3929  0052F6  6F4B               	movwf	_volume_level& (0+255),b
  3930                           
  3931                           ;uart.c: 61:     } else if (message[0] == 0x1E && len == 8) {
  3932  0052F8  D050               	goto	u6020
  3933  0052FA                     l4885:
  3934                           
  3935                           ; BSR set to: 4
  3936  0052FA  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  3937  005300  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  3938  005306  0E1E               	movlw	30
  3939  005308  18DE               	xorwf	postinc2,w,c
  3940  00530A  A4D8               	btfss	status,2,c
  3941  00530C  D039               	goto	l4891
  3942                           
  3943                           ; BSR set to: 4
  3944  00530E  0E08               	movlw	8
  3945  005310  1813               	xorwf	handle_message@len^0,w,c
  3946  005312  A4D8               	btfss	status,2,c
  3947  005314  D035               	goto	l4891
  3948                           
  3949                           ; BSR set to: 4
  3950                           ;uart.c: 62:         on = message[1] != 0x00;
  3951  005316  EE20 F001          	lfsr	2,1
  3952  00531A  5011               	movf	handle_message@message^0,w,c
  3953  00531C  26D9               	addwf	fsr2l,f,c
  3954  00531E  5012               	movf	(handle_message@message+1)^0,w,c
  3955  005320  22DA               	addwfc	fsr2h,f,c
  3956  005322  50DF               	movf	indf2,w,c
  3957  005324  B4D8               	btfsc	status,2,c
  3958  005326  D002               	goto	u5930
  3959  005328  0E01               	movlw	1
  3960  00532A  D001               	goto	u5940
  3961  00532C                     u5930:
  3962  00532C  0E00               	movlw	0
  3963  00532E                     u5940:
  3964  00532E  6F47               	movwf	_on& (0+255),b
  3965                           
  3966                           ;uart.c: 63:         connected = message[2] != 0x00;
  3967  005330  EE20 F002          	lfsr	2,2
  3968  005334  5011               	movf	handle_message@message^0,w,c
  3969  005336  26D9               	addwf	fsr2l,f,c
  3970  005338  5012               	movf	(handle_message@message+1)^0,w,c
  3971  00533A  22DA               	addwfc	fsr2h,f,c
  3972  00533C  50DF               	movf	indf2,w,c
  3973  00533E  B4D8               	btfsc	status,2,c
  3974  005340  D002               	goto	u5950
  3975  005342  0E01               	movlw	1
  3976  005344  D001               	goto	u5960
  3977  005346                     u5950:
  3978  005346  0E00               	movlw	0
  3979  005348                     u5960:
  3980  005348  6F48               	movwf	_connected& (0+255),b
  3981                           
  3982                           ;uart.c: 64:         pairing = message[1] == 0x01;
  3983  00534A  EE20 F001          	lfsr	2,1
  3984  00534E  5011               	movf	handle_message@message^0,w,c
  3985  005350  26D9               	addwf	fsr2l,f,c
  3986  005352  5012               	movf	(handle_message@message+1)^0,w,c
  3987  005354  22DA               	addwfc	fsr2h,f,c
  3988  005356  04DE               	decf	postinc2,w,c
  3989  005358  A4D8               	btfss	status,2,c
  3990  00535A  D002               	goto	u5970
  3991  00535C  0E01               	movlw	1
  3992  00535E  D001               	goto	u5980
  3993  005360                     u5970:
  3994  005360  0E00               	movlw	0
  3995  005362                     u5980:
  3996  005362  6F4A               	movwf	_pairing& (0+255),b
  3997                           
  3998                           ;uart.c: 65:         streaming = message[6];
  3999  005364  EE20 F006          	lfsr	2,6
  4000  005368  5011               	movf	handle_message@message^0,w,c
  4001  00536A  26D9               	addwf	fsr2l,f,c
  4002  00536C  5012               	movf	(handle_message@message+1)^0,w,c
  4003  00536E  22DA               	addwfc	fsr2h,f,c
  4004  005370  50DF               	movf	indf2,w,c
  4005  005372  B4D8               	btfsc	status,2,c
  4006  005374  D002               	goto	u5990
  4007  005376  0E01               	movlw	1
  4008  005378  D001               	goto	u6000
  4009  00537A                     u5990:
  4010  00537A  0E00               	movlw	0
  4011  00537C                     u6000:
  4012  00537C  6F49               	movwf	_streaming& (0+255),b
  4013                           
  4014                           ;uart.c: 66:     } else if (message[0] == 0x00 && len == 3) {
  4015  00537E  D00D               	goto	u6020
  4016  005380                     l4891:
  4017                           
  4018                           ; BSR set to: 4
  4019  005380  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4020  005386  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4021  00538C  50DF               	movf	indf2,w,c
  4022  00538E  A4D8               	btfss	status,2,c
  4023  005390  0012               	return	
  4024                           
  4025                           ; BSR set to: 4
  4026  005392  0E03               	movlw	3
  4027  005394  1813               	xorwf	handle_message@len^0,w,c
  4028  005396  A4D8               	btfss	status,2,c
  4029  005398  0012               	return	
  4030  00539A                     u6020:
  4031                           
  4032                           ; BSR set to: 4
  4033                           ;uart.c: 70:     ackCmd[1] = message[0];
  4034  00539A  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4035  0053A0  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4036  0053A6  50DF               	movf	indf2,w,c
  4037  0053A8  6FA5               	movwf	(_ackCmd+1)& (0+255),b
  4038                           
  4039                           ; BSR set to: 4
  4040                           ;uart.c: 71:     uart_send(ackCmd, 2);
  4041  0053AA  0EA4               	movlw	low _ackCmd
  4042  0053AC  6E0C               	movwf	uart_send@buf^0,c
  4043  0053AE  0E04               	movlw	high _ackCmd
  4044  0053B0  6E0D               	movwf	(uart_send@buf+1)^0,c
  4045  0053B2  0E02               	movlw	2
  4046  0053B4  6E0E               	movwf	uart_send@len^0,c
  4047  0053B6  ECDF  F02E         	call	_uart_send	;wreg free
  4048  0053BA  0012               	return		;funcret
  4049  0053BC                     __end_of_handle_message:
  4050                           	opt callstack 0
  4051                           
  4052 ;; *************** function _uart_send *****************
  4053 ;; Defined at:
  4054 ;;		line 133 in file "uart.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  buf             2   11[COMRAM] PTR unsigned char 
  4057 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4058 ;;  len             1   13[COMRAM] unsigned char 
  4059 ;; Auto vars:     Size  Location     Type
  4060 ;;		None
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  1    wreg      void 
  4063 ;; Registers used:
  4064 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/4
  4067 ;;		On exit  : 3F/3B
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4070 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4072 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4073 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4074 ;;Total ram usage:        5 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; Hardware stack levels required when called:    1
  4077 ;; This function calls:
  4078 ;;		_memcpy
  4079 ;;		_transmitChecksum
  4080 ;; This function is called by:
  4081 ;;		_main_loop
  4082 ;;		_handle_message
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text6
  4087  005DBE                     __ptext6:
  4088                           	opt callstack 0
  4089  005DBE                     _uart_send:
  4090                           	opt callstack 26
  4091                           
  4092                           ;uart.c: 134:     while (DMA2CON0bits.SIRQEN);
  4093                           
  4094                           ;incstack = 0
  4095  005DBE  013B               	movlb	59	; () banked
  4096  005DC0  BDDC               	btfsc	220,6,b	;volatile
  4097  005DC2  D7FD               	goto	_uart_send
  4098                           
  4099                           ; BSR set to: 59
  4100                           ;uart.c: 135:     if (DMA2SCNTIF) transmitChecksum();
  4101  005DC4  0139               	movlb	57	; () banked
  4102  005DC6  B5A5               	btfsc	165,2,b	;volatile
  4103                           
  4104                           ; BSR set to: 57
  4105  005DC8  ECD4  F031         	call	_transmitChecksum	;wreg free
  4106                           
  4107                           ; BSR set to: 57
  4108                           ;uart.c: 136:     DMA2CON0bits.EN = 0;
  4109  005DCC  013B               	movlb	59	; () banked
  4110  005DCE  9FDC               	bcf	220,7,b	;volatile
  4111                           
  4112                           ; BSR set to: 59
  4113                           ;uart.c: 137:     txBuf[0] = 0xAA;
  4114  005DD0  0EAA               	movlw	170
  4115  005DD2  0102               	movlb	2	; () banked
  4116  005DD4  6F00               	movwf	0,b
  4117                           
  4118                           ; BSR set to: 2
  4119                           ;uart.c: 138:     txBuf[1] = 0x00;
  4120  005DD6  0E00               	movlw	0
  4121  005DD8  6F01               	movwf	1,b
  4122                           
  4123                           ; BSR set to: 2
  4124                           ;uart.c: 139:     txBuf[2] = len;
  4125  005DDA  0060  F038  F202   	movff	uart_send@len,514
  4126                           
  4127                           ; BSR set to: 2
  4128                           ;uart.c: 140:     memcpy(txBuf + 3, buf, len);
  4129  005DE0  0E03               	movlw	3
  4130  005DE2  6E01               	movwf	memcpy@d1^0,c
  4131  005DE4  0E02               	movlw	2
  4132  005DE6  6E02               	movwf	(memcpy@d1+1)^0,c
  4133  005DE8  0060  F030  F003   	movff	uart_send@buf,memcpy@s1
  4134  005DEE  0060  F034  F004   	movff	uart_send@buf+1,memcpy@s1+1
  4135  005DF4  0060  F038  F005   	movff	uart_send@len,memcpy@n
  4136  005DFA  6A06               	clrf	(memcpy@n+1)^0,c
  4137  005DFC  EC54  F02F         	call	_memcpy	;wreg free
  4138                           
  4139                           ;uart.c: 141:     DMA2SSZH = ((uint16_t)len + 3) >> 8;
  4140  005E00  500E               	movf	uart_send@len^0,w,c
  4141  005E02  6E0F               	movwf	??_uart_send^0,c
  4142  005E04  6A10               	clrf	(??_uart_send+1)^0,c
  4143  005E06  0E03               	movlw	3
  4144  005E08  260F               	addwf	??_uart_send^0,f,c
  4145  005E0A  0E00               	movlw	0
  4146  005E0C  2210               	addwfc	(??_uart_send+1)^0,f,c
  4147  005E0E  0060  F040  F00F   	movff	??_uart_send+1,??_uart_send
  4148  005E14  6A10               	clrf	(??_uart_send+1)^0,c
  4149  005E16  500F               	movf	??_uart_send^0,w,c
  4150  005E18  013B               	movlb	59	; () banked
  4151  005E1A  6FD8               	movwf	216,b	;volatile
  4152                           
  4153                           ; BSR set to: 59
  4154                           ;uart.c: 142:     DMA2SSZL = (len + 3) & 0xff;
  4155  005E1C  500E               	movf	uart_send@len^0,w,c
  4156  005E1E  0F03               	addlw	3
  4157  005E20  6FD7               	movwf	215,b	;volatile
  4158                           
  4159                           ; BSR set to: 59
  4160                           ;uart.c: 143:     U1TXCHK = 0;
  4161  005E22  0E00               	movlw	0
  4162  005E24  013D               	movlb	61	; () banked
  4163  005E26  6FEB               	movwf	235,b	;volatile
  4164                           
  4165                           ; BSR set to: 61
  4166                           ;uart.c: 144:     DMA2SCNTIF = 0;
  4167  005E28  0139               	movlb	57	; () banked
  4168  005E2A  95A5               	bcf	165,2,b	;volatile
  4169                           
  4170                           ; BSR set to: 57
  4171                           ;uart.c: 145:     DMA2CON0bits.EN = 1;
  4172  005E2C  013B               	movlb	59	; () banked
  4173  005E2E  8FDC               	bsf	220,7,b	;volatile
  4174                           
  4175                           ; BSR set to: 59
  4176                           ;uart.c: 146:     DMA2CON0bits.SIRQEN = 1;
  4177  005E30  8DDC               	bsf	220,6,b	;volatile
  4178                           
  4179                           ; BSR set to: 59
  4180  005E32  0012               	return		;funcret
  4181  005E34                     __end_of_uart_send:
  4182                           	opt callstack 0
  4183                           
  4184 ;; *************** function _transmitChecksum *****************
  4185 ;; Defined at:
  4186 ;;		line 74 in file "uart.c"
  4187 ;; Parameters:    Size  Location     Type
  4188 ;;		None
  4189 ;; Auto vars:     Size  Location     Type
  4190 ;;		None
  4191 ;; Return value:  Size  Location     Type
  4192 ;;                  1    wreg      void 
  4193 ;; Registers used:
  4194 ;;		wreg, status,2, status,0
  4195 ;; Tracked objects:
  4196 ;;		On entry : 3F/39
  4197 ;;		On exit  : 3F/39
  4198 ;;		Unchanged: 0/0
  4199 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4204 ;;Total ram usage:        0 bytes
  4205 ;; Hardware stack levels used:    1
  4206 ;; This function calls:
  4207 ;;		Nothing
  4208 ;; This function is called by:
  4209 ;;		_uart_tasks
  4210 ;;		_uart_send
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           	psect	text7
  4215  0063A8                     __ptext7:
  4216                           	opt callstack 0
  4217  0063A8                     _transmitChecksum:
  4218                           	opt callstack 28
  4219                           
  4220                           ; BSR set to: 57
  4221                           
  4222                           ; BSR set to: 57
  4223                           ;uart.c: 75:     while (!U1TXIF);
  4224                           
  4225                           ; BSR set to: 59
  4226                           ;incstack = 0
  4227  0063A8  A9A3               	btfss	163,4,b	;volatile
  4228  0063AA  D7FE               	goto	_transmitChecksum
  4229                           
  4230                           ; BSR set to: 57
  4231                           ;uart.c: 76:     U1TXB = -(U1TXCHK - 0xaa);
  4232  0063AC  013D               	movlb	61	; () banked
  4233  0063AE  51EB               	movf	235,w,b	;volatile
  4234  0063B0  0F56               	addlw	86
  4235  0063B2  0800               	sublw	0
  4236  0063B4  6FEA               	movwf	234,b	;volatile
  4237                           
  4238                           ; BSR set to: 61
  4239                           ;uart.c: 77:     DMA2SCNTIF = 0;
  4240  0063B6  0139               	movlb	57	; () banked
  4241  0063B8  95A5               	bcf	165,2,b	;volatile
  4242                           
  4243                           ; BSR set to: 57
  4244  0063BA  0012               	return		;funcret
  4245  0063BC                     __end_of_transmitChecksum:
  4246                           	opt callstack 0
  4247                           
  4248 ;; *************** function _memcpy *****************
  4249 ;; Defined at:
  4250 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  4251 ;; Parameters:    Size  Location     Type
  4252 ;;  d1              2    0[COMRAM] PTR void 
  4253 ;;		 -> txBuf(256), 
  4254 ;;  s1              2    2[COMRAM] PTR const void 
  4255 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4256 ;;  n               2    4[COMRAM] unsigned int 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4259 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4260 ;;  d               2    6[COMRAM] PTR unsigned char 
  4261 ;;		 -> txBuf(256), 
  4262 ;;  tmp             1   10[COMRAM] unsigned char 
  4263 ;; Return value:  Size  Location     Type
  4264 ;;                  2    0[COMRAM] PTR void 
  4265 ;; Registers used:
  4266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4267 ;; Tracked objects:
  4268 ;;		On entry : 3F/2
  4269 ;;		On exit  : 0/0
  4270 ;;		Unchanged: 0/0
  4271 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4272 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4273 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4275 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4276 ;;Total ram usage:       11 bytes
  4277 ;; Hardware stack levels used:    1
  4278 ;; This function calls:
  4279 ;;		Nothing
  4280 ;; This function is called by:
  4281 ;;		_uart_send
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text8
  4286  005EA8                     __ptext8:
  4287                           	opt callstack 0
  4288  005EA8                     _memcpy:
  4289                           	opt callstack 26
  4290                           
  4291                           ; BSR set to: 2
  4292                           
  4293                           ; BSR set to: 57
  4294                           ;incstack = 0
  4295  005EA8  0060  F00C  F009   	movff	memcpy@s1,memcpy@s
  4296  005EAE  0060  F010  F00A   	movff	memcpy@s1+1,memcpy@s+1
  4297  005EB4  0060  F004  F007   	movff	memcpy@d1,memcpy@d
  4298  005EBA  0060  F008  F008   	movff	memcpy@d1+1,memcpy@d+1
  4299  005EC0  D023               	goto	l4355
  4300  005EC2                     l4347:
  4301  005EC2  0060  F027  FFF6   	movff	memcpy@s,tblptrl
  4302  005EC8  0060  F02B  FFF7   	movff	memcpy@s+1,tblptrh
  4303  005ECE  0E00               	movlw	low (__smallconst shr (0+16))
  4304  005ED0  6EF8               	movwf	tblptru,c
  4305  005ED2  0E1F               	movlw	(high __ramtop+-1)
  4306  005ED4  64F7               	cpfsgt	tblptrh,c
  4307  005ED6  D003               	bra	u4997
  4308  005ED8  0008               	tblrd		*
  4309  005EDA  50F5               	movf	tablat,w,c
  4310  005EDC  D007               	bra	u4990
  4311  005EDE                     u4997:
  4312  005EDE  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4313  005EE4  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4314  005EEA  50E7               	movf	indf1,w,c
  4315  005EEC                     u4990:
  4316  005EEC  6E0B               	movwf	memcpy@tmp^0,c
  4317  005EEE  4A09               	infsnz	memcpy@s^0,f,c
  4318  005EF0  2A0A               	incf	(memcpy@s+1)^0,f,c
  4319  005EF2  0060  F01F  FFD9   	movff	memcpy@d,fsr2l
  4320  005EF8  0060  F023  FFDA   	movff	memcpy@d+1,fsr2h
  4321  005EFE  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
  4322  005F04  4A07               	infsnz	memcpy@d^0,f,c
  4323  005F06  2A08               	incf	(memcpy@d+1)^0,f,c
  4324  005F08                     l4355:
  4325  005F08  0605               	decf	memcpy@n^0,f,c
  4326  005F0A  A0D8               	btfss	status,0,c
  4327  005F0C  0606               	decf	(memcpy@n+1)^0,f,c
  4328  005F0E  2805               	incf	memcpy@n^0,w,c
  4329  005F10  E1D8               	bnz	l4347
  4330  005F12  2806               	incf	(memcpy@n+1)^0,w,c
  4331  005F14  B4D8               	btfsc	status,2,c
  4332  005F16  0012               	return	
  4333  005F18  D7D4               	goto	l4347
  4334  005F1A                     __end_of_memcpy:
  4335                           	opt callstack 0
  4336                           
  4337 ;; *************** function _sprintf *****************
  4338 ;; Defined at:
  4339 ;;		line 9 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  4340 ;; Parameters:    Size  Location     Type
  4341 ;;  s               1   89[BANK0 ] PTR unsigned char 
  4342 ;;		 -> main_loop@batmsg(17), 
  4343 ;;  fmt             1   90[BANK0 ] PTR const unsigned char 
  4344 ;;		 -> STR_9(20), STR_8(20), STR_7(20), STR_6(20), 
  4345 ;;		 -> STR_5(17), 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  f               5   98[BANK0 ] struct _IO_FILE
  4348 ;;  ret             2    0        int 
  4349 ;;  ap              1   97[BANK0 ] PTR void [1]
  4350 ;;		 -> ?_sprintf(2), 
  4351 ;; Return value:  Size  Location     Type
  4352 ;;                  2   89[BANK0 ] int 
  4353 ;; Registers used:
  4354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4355 ;; Tracked objects:
  4356 ;;		On entry : 3F/0
  4357 ;;		On exit  : 3F/0
  4358 ;;		Unchanged: 0/0
  4359 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4360 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4361 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4363 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4364 ;;Total ram usage:       14 bytes
  4365 ;; Hardware stack levels used:    1
  4366 ;; Hardware stack levels required when called:    7
  4367 ;; This function calls:
  4368 ;;		_vfprintf
  4369 ;; This function is called by:
  4370 ;;		_main_loop
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text9
  4375  0061EC                     __ptext9:
  4376                           	opt callstack 0
  4377  0061EC                     _sprintf:
  4378                           	opt callstack 22
  4379                           
  4380                           ; BSR set to: 0
  4381                           
  4382                           ;incstack = 0
  4383  0061EC  0EBB               	movlw	low (?_sprintf+2)
  4384  0061EE  6FC1               	movwf	sprintf@ap& (0+255),b
  4385  0061F0  0060  F2E4  F0C2   	movff	sprintf@s,sprintf@f
  4386                           
  4387                           ; BSR set to: 0
  4388  0061F6  0E00               	movlw	0
  4389  0061F8  6FC4               	movwf	(sprintf@f+2)& (0+255),b
  4390  0061FA  0E00               	movlw	0
  4391  0061FC  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  4392                           
  4393                           ; BSR set to: 0
  4394  0061FE  0E00               	movlw	0
  4395  006200  6FC6               	movwf	(sprintf@f+4)& (0+255),b
  4396  006202  0E00               	movlw	0
  4397  006204  6FC5               	movwf	(sprintf@f+3)& (0+255),b
  4398                           
  4399                           ; BSR set to: 0
  4400  006206  0EC2               	movlw	low sprintf@f
  4401  006208  6FB5               	movwf	vfprintf@fp& (0+255),b
  4402  00620A  0060  F2E8  F0B6   	movff	sprintf@fmt,vfprintf@fmt
  4403  006210  0EC1               	movlw	low sprintf@ap
  4404  006212  6FB7               	movwf	vfprintf@ap& (0+255),b
  4405  006214  EC56  F030         	call	_vfprintf	;wreg free
  4406                           
  4407                           ; BSR set to: 4
  4408  006218  0100               	movlb	0	; () banked
  4409  00621A  51B9               	movf	sprintf@s& (0+255),w,b
  4410  00621C  25C3               	addwf	(sprintf@f+1)& (0+255),w,b
  4411  00621E  6ED9               	movwf	fsr2l,c
  4412  006220  6ADA               	clrf	fsr2h,c
  4413  006222  0E00               	movlw	0
  4414  006224  6EDF               	movwf	indf2,c
  4415                           
  4416                           ; BSR set to: 0
  4417  006226  0012               	return		;funcret
  4418  006228                     __end_of_sprintf:
  4419                           	opt callstack 0
  4420                           
  4421 ;; *************** function _vfprintf *****************
  4422 ;; Defined at:
  4423 ;;		line 1368 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;  fp              1   85[BANK0 ] PTR struct _IO_FILE
  4426 ;;		 -> sprintf@f(5), 
  4427 ;;  fmt             1   86[BANK0 ] PTR const unsigned char 
  4428 ;;		 -> STR_9(20), STR_8(20), STR_7(20), STR_6(20), 
  4429 ;;		 -> STR_5(17), 
  4430 ;;  ap              1   87[BANK0 ] PTR PTR void 
  4431 ;;		 -> sprintf@ap(1), 
  4432 ;; Auto vars:     Size  Location     Type
  4433 ;;  cfmt            1   88[BANK0 ] PTR unsigned char 
  4434 ;;		 -> STR_9(20), STR_8(20), STR_7(20), STR_6(20), 
  4435 ;;		 -> STR_5(17), 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  2   85[BANK0 ] int 
  4438 ;; Registers used:
  4439 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4440 ;; Tracked objects:
  4441 ;;		On entry : 3F/0
  4442 ;;		On exit  : 3F/4
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4445 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4446 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4448 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4449 ;;Total ram usage:        4 bytes
  4450 ;; Hardware stack levels used:    1
  4451 ;; Hardware stack levels required when called:    6
  4452 ;; This function calls:
  4453 ;;		_vfpfcnvrt
  4454 ;; This function is called by:
  4455 ;;		_sprintf
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text10
  4460  0060AC                     __ptext10:
  4461                           	opt callstack 0
  4462  0060AC                     _vfprintf:
  4463                           	opt callstack 22
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FI
      +                          LE *fp, const char *fmt, va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1369: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1371:     char *cfmt;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1373:     cfmt = (char *)fmt;
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;incstack = 0
  4470  0060AC  0060  F2D8  F0B8   	movff	vfprintf@fmt,vfprintf@cfmt
  4471                           
  4472                           ; BSR set to: 0
  4473                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  4474  0060B2  0E00               	movlw	0
  4475  0060B4  0104               	movlb	4	; () banked
  4476  0060B6  6F3D               	movwf	(_nout+1)& (0+255),b
  4477  0060B8  0E00               	movlw	0
  4478  0060BA  6F3C               	movwf	_nout& (0+255),b
  4479                           
  4480                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4481  0060BC  D00F               	goto	l6035
  4482  0060BE                     l6033:
  4483                           
  4484                           ; BSR set to: 4
  4485                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:         nout +=
      +                           vfpfcnvrt(fp, &cfmt, ap);
  4486  0060BE  0060  F2D4  F05D   	movff	vfprintf@fp,vfpfcnvrt@fp
  4487  0060C4  0EB8               	movlw	low vfprintf@cfmt
  4488  0060C6  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  4489  0060C8  0060  F2DC  F05F   	movff	vfprintf@ap,vfpfcnvrt@ap
  4490  0060CE  ECB2  F01E         	call	_vfpfcnvrt	;wreg free
  4491  0060D2  505D               	movf	?_vfpfcnvrt^0,w,c
  4492  0060D4  0104               	movlb	4	; () banked
  4493  0060D6  273C               	addwf	_nout& (0+255),f,b
  4494  0060D8  505E               	movf	(?_vfpfcnvrt+1)^0,w,c
  4495  0060DA  233D               	addwfc	(_nout+1)& (0+255),f,b
  4496  0060DC                     l6035:
  4497                           
  4498                           ; BSR set to: 4
  4499                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4500  0060DC  0060  F2E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  4501  0060E2                     	if	1	;There is more than 1 active tblptr byte
  4502  0060E2  0E20               	movlw	high __smallconst
  4503  0060E4  6EF7               	movwf	tblptrh,c
  4504  0060E6                     	endif
  4505  0060E6                     	if	0	;tblptru may be non-zero
  4506  0060E6                     	endif
  4507  0060E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4508  0060E6  0E00               	movlw	low (__smallconst shr (0+16))
  4509  0060E8  6EF8               	movwf	tblptru,c
  4510  0060EA                     	endif
  4511  0060EA  0008               	tblrd		*
  4512  0060EC  50F5               	movf	tablat,w,c
  4513  0060EE  0900               	iorlw	0
  4514  0060F0  A4D8               	btfss	status,2,c
  4515  0060F2  D7E5               	goto	l6033
  4516                           
  4517                           ; BSR set to: 4
  4518                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     return nout
      +                          ;
  4519  0060F4  0061  F0F0  F0B5   	movff	_nout,?_vfprintf
  4520  0060FA  0061  F0F4  F0B6   	movff	_nout+1,?_vfprintf+1
  4521                           
  4522                           ; BSR set to: 4
  4523  006100  0012               	return		;funcret
  4524  006102                     __end_of_vfprintf:
  4525                           	opt callstack 0
  4526                           
  4527 ;; *************** function _vfpfcnvrt *****************
  4528 ;; Defined at:
  4529 ;;		line 670 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  4532 ;;		 -> sprintf@f(5), 
  4533 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  4534 ;;		 -> vfprintf@cfmt(1), 
  4535 ;;  ap              1   94[COMRAM] PTR PTR void 
  4536 ;;		 -> sprintf@ap(1), 
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;  llu             8    0        unsigned long long 
  4539 ;;  ll              8    0        long long 
  4540 ;;  f               4   80[BANK0 ] long long 
  4541 ;;  ct              3   77[BANK0 ] unsigned char [3]
  4542 ;;  vp              3    0        PTR void 
  4543 ;;  cp              3    0        PTR unsigned char 
  4544 ;;  i               2    0        int 
  4545 ;;  done            2    0        int 
  4546 ;;  c               1   84[BANK0 ] unsigned char 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  2   92[COMRAM] int 
  4549 ;; Registers used:
  4550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 3B/4
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4556 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4557 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4558 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4559 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4560 ;;Total ram usage:       21 bytes
  4561 ;; Hardware stack levels used:    1
  4562 ;; Hardware stack levels required when called:    5
  4563 ;; This function calls:
  4564 ;;		_atoi
  4565 ;;		_efgtoa
  4566 ;;		_fputc
  4567 ;;		_isdigit
  4568 ;;		_isupper
  4569 ;;		_strncmp
  4570 ;;		_tolower
  4571 ;; This function is called by:
  4572 ;;		_vfprintf
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           	psect	text11
  4577  003D64                     __ptext11:
  4578                           	opt callstack 0
  4579  003D64                     _vfpfcnvrt:
  4580                           	opt callstack 22
  4581                           
  4582                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static int vfpfc
      +                          nvrt(FILE *fp, char *fmt[], va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 671: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 672:     char c, *cp, ct[3];;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 673:     int done, i;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 674:     long long ll;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 675:     unsigned long long llu;
  4583                           
  4584                           ; BSR set to: 4
  4585                           ;incstack = 0
  4586  003D64  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4587  003D66  6ED9               	movwf	fsr2l,c
  4588  003D68  6ADA               	clrf	fsr2h,c
  4589  003D6A  006F FF7F FFF6     	movff	indf2,tblptrl
  4590  003D70                     	if	1	;There is more than 1 active tblptr byte
  4591  003D70  0E20               	movlw	high __smallconst
  4592  003D72  6EF7               	movwf	tblptrh,c
  4593  003D74                     	endif
  4594  003D74                     	if	0	;tblptru may be non-zero
  4595  003D74                     	endif
  4596  003D74                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4597  003D74  0E00               	movlw	low (__smallconst shr (0+16))
  4598  003D76  6EF8               	movwf	tblptru,c
  4599  003D78                     	endif
  4600  003D78  0008               	tblrd		*
  4601  003D7A  50F5               	movf	tablat,w,c
  4602  003D7C  0A25               	xorlw	37
  4603  003D7E  A4D8               	btfss	status,2,c
  4604  003D80  D1FB               	goto	l6021
  4605                           
  4606                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  4607  003D82  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4608  003D84  6ED9               	movwf	fsr2l,c
  4609  003D86  6ADA               	clrf	fsr2h,c
  4610  003D88  2ADF               	incf	indf2,f,c
  4611                           
  4612                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:         flags = 
      +                          width = 0;
  4613  003D8A  0E00               	movlw	0
  4614  003D8C  0104               	movlb	4	; () banked
  4615  003D8E  6F3F               	movwf	(_width+1)& (0+255),b
  4616  003D90  0E00               	movlw	0
  4617  003D92  6F3E               	movwf	_width& (0+255),b
  4618  003D94  C43E  F442         	movff	_width,_flags
  4619  003D98  C43F  F443         	movff	_width+1,_flags+1
  4620                           
  4621                           ; BSR set to: 4
  4622                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:         prec = -
      +                          1;
  4623  003D9C  6940               	setf	_prec& (0+255),b
  4624  003D9E  6941               	setf	(_prec+1)& (0+255),b
  4625                           
  4626                           ; BSR set to: 4
  4627                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:         if ((*fm
      +                          t)[0] == '*') {
  4628  003DA0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4629  003DA2  6ED9               	movwf	fsr2l,c
  4630  003DA4  6ADA               	clrf	fsr2h,c
  4631  003DA6  006F FF7F FFF6     	movff	indf2,tblptrl
  4632  003DAC                     	if	1	;There is more than 1 active tblptr byte
  4633  003DAC  0E20               	movlw	high __smallconst
  4634  003DAE  6EF7               	movwf	tblptrh,c
  4635  003DB0                     	endif
  4636  003DB0                     	if	0	;tblptru may be non-zero
  4637  003DB0                     	endif
  4638  003DB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4639  003DB0  0E00               	movlw	low (__smallconst shr (0+16))
  4640  003DB2  6EF8               	movwf	tblptru,c
  4641  003DB4                     	endif
  4642  003DB4  0008               	tblrd		*
  4643  003DB6  50F5               	movf	tablat,w,c
  4644  003DB8  0A2A               	xorlw	42
  4645  003DBA  A4D8               	btfss	status,2,c
  4646  003DBC  D01A               	goto	l5935
  4647                           
  4648                           ; BSR set to: 4
  4649                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:             ++*f
      +                          mt;
  4650  003DBE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4651  003DC0  6ED9               	movwf	fsr2l,c
  4652  003DC2  6ADA               	clrf	fsr2h,c
  4653  003DC4  2ADF               	incf	indf2,f,c
  4654                           
  4655                           ; BSR set to: 4
  4656                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:             widt
      +                          h = (*(int *)__va_arg(*(int **)ap, (int)0));
  4657  003DC6  505F               	movf	vfpfcnvrt@ap^0,w,c
  4658  003DC8  6ED9               	movwf	fsr2l,c
  4659  003DCA  6ADA               	clrf	fsr2h,c
  4660  003DCC  0E02               	movlw	2
  4661  003DCE  26DF               	addwf	indf2,f,c
  4662  003DD0  5CDF               	subwf	indf2,w,c
  4663  003DD2  6ED9               	movwf	fsr2l,c
  4664  003DD4  6ADA               	clrf	fsr2h,c
  4665  003DD6  006F FF78  F43E    	movff	postinc2,_width
  4666  003DDC  006F FF78  F43F    	movff	postinc2,_width+1
  4667                           
  4668                           ; BSR set to: 4
  4669                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:             if (
      +                          width < 0) {
  4670  003DE2  AF3F               	btfss	(_width+1)& (0+255),7,b
  4671  003DE4  D03E               	goto	u7680
  4672                           
  4673                           ; BSR set to: 4
  4674                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:                 
      +                          flags |= (1 << 0);
  4675  003DE6  8142               	bsf	_flags& (0+255),0,b
  4676                           
  4677                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:                 
      +                          width = -width;
  4678  003DE8  6D3E               	negf	_width& (0+255),b
  4679  003DEA  1F3F               	comf	(_width+1)& (0+255),f,b
  4680  003DEC  B0D8               	btfsc	status,0,c
  4681  003DEE  2B3F               	incf	(_width+1)& (0+255),f,b
  4682  003DF0  D038               	goto	u7680
  4683  003DF2                     l5935:
  4684                           
  4685                           ; BSR set to: 4
  4686                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:             widt
      +                          h = atoi(*fmt);
  4687  003DF2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4688  003DF4  6ED9               	movwf	fsr2l,c
  4689  003DF6  6ADA               	clrf	fsr2h,c
  4690  003DF8  50DF               	movf	indf2,w,c
  4691  003DFA  6E08               	movwf	atoi@s^0,c
  4692  003DFC  EC41  F027         	call	_atoi	;wreg free
  4693  003E00  0060  F020  F43E   	movff	?_atoi,_width
  4694  003E06  0060  F024  F43F   	movff	?_atoi+1,_width+1
  4695                           
  4696                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:             whil
      +                          e ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4697  003E0C  D004               	goto	l5939
  4698  003E0E                     l5937:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:                 
      +                          ++*fmt;
  4702  003E0E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4703  003E10  6ED9               	movwf	fsr2l,c
  4704  003E12  6ADA               	clrf	fsr2h,c
  4705  003E14  2ADF               	incf	indf2,f,c
  4706  003E16                     l5939:
  4707  003E16  0ED0               	movlw	208
  4708  003E18  0100               	movlb	0	; () banked
  4709  003E1A  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4710  003E1C  0EFF               	movlw	255
  4711  003E1E  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4712  003E20  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4713  003E22  6ED9               	movwf	fsr2l,c
  4714  003E24  6ADA               	clrf	fsr2h,c
  4715  003E26  006F FF7F FFF6     	movff	indf2,tblptrl
  4716  003E2C                     	if	1	;There is more than 1 active tblptr byte
  4717  003E2C  0E20               	movlw	high __smallconst
  4718  003E2E  6EF7               	movwf	tblptrh,c
  4719  003E30                     	endif
  4720  003E30                     	if	0	;tblptru may be non-zero
  4721  003E30                     	endif
  4722  003E30                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4723  003E30  0E00               	movlw	low (__smallconst shr (0+16))
  4724  003E32  6EF8               	movwf	tblptru,c
  4725  003E34                     	endif
  4726  003E34  0008               	tblrd		*
  4727  003E36  50F5               	movf	tablat,w,c
  4728  003E38  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4729  003E3A  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4730  003E3C  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4731  003E3E  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4732  003E40  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4733  003E42  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4734  003E44  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4735  003E46  E106               	bnz	u7660
  4736  003E48  0E0A               	movlw	10
  4737  003E4A  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4738  003E4C  B0D8               	btfsc	status,0,c
  4739  003E4E  D002               	goto	u7660
  4740  003E50  0E01               	movlw	1
  4741  003E52  D001               	goto	u7670
  4742  003E54                     u7660:
  4743  003E54  0E00               	movlw	0
  4744  003E56                     u7670:
  4745  003E56  6FA7               	movwf	_vfpfcnvrt$644& (0+255),b
  4746  003E58  6BA8               	clrf	(_vfpfcnvrt$644+1)& (0+255),b
  4747                           
  4748                           ; BSR set to: 0
  4749  003E5A  51A7               	movf	_vfpfcnvrt$644& (0+255),w,b
  4750  003E5C  11A8               	iorwf	(_vfpfcnvrt$644+1)& (0+255),w,b
  4751  003E5E  A4D8               	btfss	status,2,c
  4752  003E60  D7D6               	goto	l5937
  4753  003E62                     u7680:
  4754                           
  4755                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:         if ((*fm
      +                          t)[0] == '.') {
  4756  003E62  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4757  003E64  6ED9               	movwf	fsr2l,c
  4758  003E66  6ADA               	clrf	fsr2h,c
  4759  003E68  006F FF7F FFF6     	movff	indf2,tblptrl
  4760  003E6E                     	if	1	;There is more than 1 active tblptr byte
  4761  003E6E  0E20               	movlw	high __smallconst
  4762  003E70  6EF7               	movwf	tblptrh,c
  4763  003E72                     	endif
  4764  003E72                     	if	0	;tblptru may be non-zero
  4765  003E72                     	endif
  4766  003E72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4767  003E72  0E00               	movlw	low (__smallconst shr (0+16))
  4768  003E74  6EF8               	movwf	tblptru,c
  4769  003E76                     	endif
  4770  003E76  0008               	tblrd		*
  4771  003E78  50F5               	movf	tablat,w,c
  4772  003E7A  0A2E               	xorlw	46
  4773  003E7C  A4D8               	btfss	status,2,c
  4774  003E7E  D063               	goto	u7730
  4775                           
  4776                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:             prec
      +                           = 0;
  4777  003E80  0E00               	movlw	0
  4778  003E82  0104               	movlb	4	; () banked
  4779  003E84  6F41               	movwf	(_prec+1)& (0+255),b
  4780  003E86  0E00               	movlw	0
  4781  003E88  6F40               	movwf	_prec& (0+255),b
  4782                           
  4783                           ; BSR set to: 4
  4784                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:             ++*f
      +                          mt;
  4785  003E8A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4786  003E8C  6ED9               	movwf	fsr2l,c
  4787  003E8E  6ADA               	clrf	fsr2h,c
  4788  003E90  2ADF               	incf	indf2,f,c
  4789                           
  4790                           ; BSR set to: 4
  4791                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:             if (
      +                          (*fmt)[0] == '*') {
  4792  003E92  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4793  003E94  6ED9               	movwf	fsr2l,c
  4794  003E96  6ADA               	clrf	fsr2h,c
  4795  003E98  006F FF7F FFF6     	movff	indf2,tblptrl
  4796  003E9E                     	if	1	;There is more than 1 active tblptr byte
  4797  003E9E  0E20               	movlw	high __smallconst
  4798  003EA0  6EF7               	movwf	tblptrh,c
  4799  003EA2                     	endif
  4800  003EA2                     	if	0	;tblptru may be non-zero
  4801  003EA2                     	endif
  4802  003EA2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4803  003EA2  0E00               	movlw	low (__smallconst shr (0+16))
  4804  003EA4  6EF8               	movwf	tblptru,c
  4805  003EA6                     	endif
  4806  003EA6  0008               	tblrd		*
  4807  003EA8  50F5               	movf	tablat,w,c
  4808  003EAA  0A2A               	xorlw	42
  4809  003EAC  A4D8               	btfss	status,2,c
  4810  003EAE  D013               	goto	l5957
  4811                           
  4812                           ; BSR set to: 4
  4813                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:                 
      +                          ++*fmt;
  4814  003EB0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4815  003EB2  6ED9               	movwf	fsr2l,c
  4816  003EB4  6ADA               	clrf	fsr2h,c
  4817  003EB6  2ADF               	incf	indf2,f,c
  4818                           
  4819                           ; BSR set to: 4
  4820                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:                 
      +                          prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4821  003EB8  505F               	movf	vfpfcnvrt@ap^0,w,c
  4822  003EBA  6ED9               	movwf	fsr2l,c
  4823  003EBC  6ADA               	clrf	fsr2h,c
  4824  003EBE  0E02               	movlw	2
  4825  003EC0  26DF               	addwf	indf2,f,c
  4826  003EC2  5CDF               	subwf	indf2,w,c
  4827  003EC4  6ED9               	movwf	fsr2l,c
  4828  003EC6  6ADA               	clrf	fsr2h,c
  4829  003EC8  006F FF78  F440    	movff	postinc2,_prec
  4830  003ECE  006F FF78  F441    	movff	postinc2,_prec+1
  4831                           
  4832                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:             } el
      +                          se {
  4833  003ED4  D038               	goto	u7730
  4834  003ED6                     l5957:
  4835                           
  4836                           ; BSR set to: 4
  4837                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:                 
      +                          prec = atoi(*fmt);
  4838  003ED6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4839  003ED8  6ED9               	movwf	fsr2l,c
  4840  003EDA  6ADA               	clrf	fsr2h,c
  4841  003EDC  50DF               	movf	indf2,w,c
  4842  003EDE  6E08               	movwf	atoi@s^0,c
  4843  003EE0  EC41  F027         	call	_atoi	;wreg free
  4844  003EE4  0060  F020  F440   	movff	?_atoi,_prec
  4845  003EEA  0060  F024  F441   	movff	?_atoi+1,_prec+1
  4846                           
  4847                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:                 
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4848  003EF0  D004               	goto	l5961
  4849  003EF2                     l5959:
  4850                           
  4851                           ; BSR set to: 0
  4852                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:                 
      +                              ++*fmt;
  4853  003EF2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4854  003EF4  6ED9               	movwf	fsr2l,c
  4855  003EF6  6ADA               	clrf	fsr2h,c
  4856  003EF8  2ADF               	incf	indf2,f,c
  4857  003EFA                     l5961:
  4858  003EFA  0ED0               	movlw	208
  4859  003EFC  0100               	movlb	0	; () banked
  4860  003EFE  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4861  003F00  0EFF               	movlw	255
  4862  003F02  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4863  003F04  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4864  003F06  6ED9               	movwf	fsr2l,c
  4865  003F08  6ADA               	clrf	fsr2h,c
  4866  003F0A  006F FF7F FFF6     	movff	indf2,tblptrl
  4867  003F10                     	if	1	;There is more than 1 active tblptr byte
  4868  003F10  0E20               	movlw	high __smallconst
  4869  003F12  6EF7               	movwf	tblptrh,c
  4870  003F14                     	endif
  4871  003F14                     	if	0	;tblptru may be non-zero
  4872  003F14                     	endif
  4873  003F14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4874  003F14  0E00               	movlw	low (__smallconst shr (0+16))
  4875  003F16  6EF8               	movwf	tblptru,c
  4876  003F18                     	endif
  4877  003F18  0008               	tblrd		*
  4878  003F1A  50F5               	movf	tablat,w,c
  4879  003F1C  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4880  003F1E  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4881  003F20  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4882  003F22  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4883  003F24  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4884  003F26  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4885  003F28  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4886  003F2A  E106               	bnz	u7710
  4887  003F2C  0E0A               	movlw	10
  4888  003F2E  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4889  003F30  B0D8               	btfsc	status,0,c
  4890  003F32  D002               	goto	u7710
  4891  003F34  0E01               	movlw	1
  4892  003F36  D001               	goto	u7720
  4893  003F38                     u7710:
  4894  003F38  0E00               	movlw	0
  4895  003F3A                     u7720:
  4896  003F3A  6FA9               	movwf	_vfpfcnvrt$645& (0+255),b
  4897  003F3C  6BAA               	clrf	(_vfpfcnvrt$645+1)& (0+255),b
  4898                           
  4899                           ; BSR set to: 0
  4900  003F3E  51A9               	movf	_vfpfcnvrt$645& (0+255),w,b
  4901  003F40  11AA               	iorwf	(_vfpfcnvrt$645+1)& (0+255),w,b
  4902  003F42  A4D8               	btfss	status,2,c
  4903  003F44  D7D6               	goto	l5959
  4904  003F46                     u7730:
  4905                           
  4906                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:         ct[0] = 
      +                          tolower((int)(*fmt)[0]);
  4907  003F46  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4908  003F48  6ED9               	movwf	fsr2l,c
  4909  003F4A  6ADA               	clrf	fsr2h,c
  4910  003F4C  006F FF7F FFF6     	movff	indf2,tblptrl
  4911  003F52                     	if	1	;There is more than 1 active tblptr byte
  4912  003F52  0E20               	movlw	high __smallconst
  4913  003F54  6EF7               	movwf	tblptrh,c
  4914  003F56                     	endif
  4915  003F56                     	if	0	;tblptru may be non-zero
  4916  003F56                     	endif
  4917  003F56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4918  003F56  0E00               	movlw	low (__smallconst shr (0+16))
  4919  003F58  6EF8               	movwf	tblptru,c
  4920  003F5A                     	endif
  4921  003F5A  0008               	tblrd		*
  4922  003F5C  50F5               	movf	tablat,w,c
  4923  003F5E  6E07               	movwf	tolower@c^0,c
  4924  003F60  6A08               	clrf	(tolower@c+1)^0,c
  4925  003F62  EC81  F030         	call	_tolower	;wreg free
  4926  003F66  5007               	movf	?_tolower^0,w,c
  4927  003F68  0100               	movlb	0	; () banked
  4928  003F6A  6FAD               	movwf	vfpfcnvrt@ct& (0+255),b
  4929                           
  4930                           ; BSR set to: 0
  4931                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:         if (ct[0
      +                          ]) {
  4932  003F6C  51AD               	movf	vfpfcnvrt@ct& (0+255),w,b
  4933  003F6E  B4D8               	btfsc	status,2,c
  4934  003F70  D031               	goto	l5977
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:             ct[1
      +                          ] = tolower((int)(*fmt)[1]);
  4938  003F72  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4939  003F74  6ED9               	movwf	fsr2l,c
  4940  003F76  6ADA               	clrf	fsr2h,c
  4941  003F78  50DF               	movf	indf2,w,c
  4942  003F7A  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4943  003F7C  0E01               	movlw	1
  4944  003F7E  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  4945  003F80  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4946  003F86                     	if	1	;There is more than 1 active tblptr byte
  4947  003F86  0E20               	movlw	high __smallconst
  4948  003F88  6EF7               	movwf	tblptrh,c
  4949  003F8A                     	endif
  4950  003F8A                     	if	0	;tblptru may be non-zero
  4951  003F8A                     	endif
  4952  003F8A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4953  003F8A  0E00               	movlw	low (__smallconst shr (0+16))
  4954  003F8C  6EF8               	movwf	tblptru,c
  4955  003F8E                     	endif
  4956  003F8E  0008               	tblrd		*
  4957  003F90  50F5               	movf	tablat,w,c
  4958  003F92  6E07               	movwf	tolower@c^0,c
  4959  003F94  6A08               	clrf	(tolower@c+1)^0,c
  4960  003F96  EC81  F030         	call	_tolower	;wreg free
  4961  003F9A  5007               	movf	?_tolower^0,w,c
  4962  003F9C  0100               	movlb	0	; () banked
  4963  003F9E  6FAE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  4964                           
  4965                           ; BSR set to: 0
  4966                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:             if (
      +                          ct[1]) {
  4967  003FA0  51AE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  4968  003FA2  B4D8               	btfsc	status,2,c
  4969  003FA4  D017               	goto	l5977
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:                 
      +                          ct[2] = tolower((int)(*fmt)[2]);
  4973  003FA6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4974  003FA8  6ED9               	movwf	fsr2l,c
  4975  003FAA  6ADA               	clrf	fsr2h,c
  4976  003FAC  50DF               	movf	indf2,w,c
  4977  003FAE  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4978  003FB0  0E02               	movlw	2
  4979  003FB2  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  4980  003FB4  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4981  003FBA                     	if	1	;There is more than 1 active tblptr byte
  4982  003FBA  0E20               	movlw	high __smallconst
  4983  003FBC  6EF7               	movwf	tblptrh,c
  4984  003FBE                     	endif
  4985  003FBE                     	if	0	;tblptru may be non-zero
  4986  003FBE                     	endif
  4987  003FBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4988  003FBE  0E00               	movlw	low (__smallconst shr (0+16))
  4989  003FC0  6EF8               	movwf	tblptru,c
  4990  003FC2                     	endif
  4991  003FC2  0008               	tblrd		*
  4992  003FC4  50F5               	movf	tablat,w,c
  4993  003FC6  6E07               	movwf	tolower@c^0,c
  4994  003FC8  6A08               	clrf	(tolower@c+1)^0,c
  4995  003FCA  EC81  F030         	call	_tolower	;wreg free
  4996  003FCE  5007               	movf	?_tolower^0,w,c
  4997  003FD0  0100               	movlb	0	; () banked
  4998  003FD2  6FAF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4999  003FD4                     l5977:
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:         if (ct[0
      +                          ] == 'f') {
  5003  003FD4  0E66               	movlw	102
  5004  003FD6  19AD               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5005  003FD8  A4D8               	btfss	status,2,c
  5006  003FDA  D044               	goto	l5989
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:             c = 
      +                          (*fmt)[0];
  5010  003FDC  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5011  003FDE  6ED9               	movwf	fsr2l,c
  5012  003FE0  6ADA               	clrf	fsr2h,c
  5013  003FE2  006F FF7F FFF6     	movff	indf2,tblptrl
  5014  003FE8                     	if	1	;There is more than 1 active tblptr byte
  5015  003FE8  0E20               	movlw	high __smallconst
  5016  003FEA  6EF7               	movwf	tblptrh,c
  5017  003FEC                     	endif
  5018  003FEC                     	if	0	;tblptru may be non-zero
  5019  003FEC                     	endif
  5020  003FEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5021  003FEC  0E00               	movlw	low (__smallconst shr (0+16))
  5022  003FEE  6EF8               	movwf	tblptru,c
  5023  003FF0                     	endif
  5024  003FF0  0008               	tblrd		*
  5025  003FF2  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:             ++*f
      +                          mt;
  5029  003FF8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5030  003FFA  6ED9               	movwf	fsr2l,c
  5031  003FFC  6ADA               	clrf	fsr2h,c
  5032  003FFE  2ADF               	incf	indf2,f,c
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:             f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5036  004000  505F               	movf	vfpfcnvrt@ap^0,w,c
  5037  004002  6ED9               	movwf	fsr2l,c
  5038  004004  6ADA               	clrf	fsr2h,c
  5039  004006  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5040  00400C  0E04               	movlw	4
  5041  00400E  26DF               	addwf	indf2,f,c
  5042  004010  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5043  004012  6ED9               	movwf	fsr2l,c
  5044  004014  6ADA               	clrf	fsr2h,c
  5045  004016  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5046  00401C  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5047  004022  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5048  004028  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5049  00402E                     l5985:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:             retu
      +                          rn efgtoa(fp, f, c);
  5053  00402E  0060  F174  F060   	movff	vfpfcnvrt@fp,efgtoa@fp
  5054  004034  0060  F2C0  F061   	movff	vfpfcnvrt@f,efgtoa@f
  5055  00403A  0060  F2C4  F062   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5056  004040  0060  F2C8  F063   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5057  004046  0060  F2CC  F064   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5058  00404C  0060  F2D0  F065   	movff	vfpfcnvrt@c,efgtoa@c
  5059  004052  EC76  F010         	call	_efgtoa	;wreg free
  5060  004056  0060  F180  F05D   	movff	?_efgtoa,?_vfpfcnvrt
  5061  00405C  0060  F184  F05E   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5062  004062  0012               	return	
  5063  004064                     l5989:
  5064                           
  5065                           ; BSR set to: 0
  5066                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:         if (!str
      +                          ncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5067  004064  0EAD               	movlw	low vfpfcnvrt@ct
  5068  004066  6E01               	movwf	strncmp@_l^0,c
  5069  004068  0EE8               	movlw	low STR_19
  5070  00406A  6E02               	movwf	strncmp@_r^0,c
  5071  00406C  0E00               	movlw	0
  5072  00406E  6E04               	movwf	(strncmp@n+1)^0,c
  5073  004070  0E02               	movlw	2
  5074  004072  6E03               	movwf	strncmp@n^0,c
  5075  004074  EC58  F02C         	call	_strncmp	;wreg free
  5076  004078  5001               	movf	?_strncmp^0,w,c
  5077  00407A  1002               	iorwf	(?_strncmp+1)^0,w,c
  5078  00407C  A4D8               	btfss	status,2,c
  5079  00407E  D052               	goto	l6005
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:             if (
      +                          (0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5083  004080  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5084  004082  6ED9               	movwf	fsr2l,c
  5085  004084  6ADA               	clrf	fsr2h,c
  5086  004086  50DF               	movf	indf2,w,c
  5087  004088  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5088  00408A  0E01               	movlw	1
  5089  00408C  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5090  00408E  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5091  004094                     	if	1	;There is more than 1 active tblptr byte
  5092  004094  0E20               	movlw	high __smallconst
  5093  004096  6EF7               	movwf	tblptrh,c
  5094  004098                     	endif
  5095  004098                     	if	0	;tblptru may be non-zero
  5096  004098                     	endif
  5097  004098                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5098  004098  0E00               	movlw	low (__smallconst shr (0+16))
  5099  00409A  6EF8               	movwf	tblptru,c
  5100  00409C                     	endif
  5101  00409C  0008               	tblrd		*
  5102  00409E  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5103  0040A4  0EBF               	movlw	191
  5104  0040A6  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5105  0040A8  0EFF               	movlw	255
  5106  0040AA  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5107  0040AC  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5108  0040AE  6ED9               	movwf	fsr2l,c
  5109  0040B0  6ADA               	clrf	fsr2h,c
  5110  0040B2  006F FF7F FFF6     	movff	indf2,tblptrl
  5111  0040B8                     	if	1	;There is more than 1 active tblptr byte
  5112  0040B8  0E20               	movlw	high __smallconst
  5113  0040BA  6EF7               	movwf	tblptrh,c
  5114  0040BC                     	endif
  5115  0040BC                     	if	0	;tblptru may be non-zero
  5116  0040BC                     	endif
  5117  0040BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5118  0040BC  0E00               	movlw	low (__smallconst shr (0+16))
  5119  0040BE  6EF8               	movwf	tblptru,c
  5120  0040C0                     	endif
  5121  0040C0  0008               	tblrd		*
  5122  0040C2  50F5               	movf	tablat,w,c
  5123  0040C4  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5124  0040C6  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5125  0040C8  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5126  0040CA  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5127  0040CC  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5128  0040CE  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5129  0040D0  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5130  0040D2  E106               	bnz	u7780
  5131  0040D4  0E1A               	movlw	26
  5132  0040D6  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5133  0040D8  B0D8               	btfsc	status,0,c
  5134  0040DA  D002               	goto	u7780
  5135  0040DC  0E01               	movlw	1
  5136  0040DE  D001               	goto	u7790
  5137  0040E0                     u7780:
  5138  0040E0  0E00               	movlw	0
  5139  0040E2                     u7790:
  5140  0040E2  6FAB               	movwf	_vfpfcnvrt$649& (0+255),b
  5141  0040E4  6BAC               	clrf	(_vfpfcnvrt$649+1)& (0+255),b
  5142                           
  5143                           ; BSR set to: 0
  5144  0040E6  51AB               	movf	_vfpfcnvrt$649& (0+255),w,b
  5145  0040E8  11AC               	iorwf	(_vfpfcnvrt$649+1)& (0+255),w,b
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:                 
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5149                           
  5150                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:             } el
      +                          se {
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:                 
      +                          f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5154  0040EA  505F               	movf	vfpfcnvrt@ap^0,w,c
  5155  0040EC  6ED9               	movwf	fsr2l,c
  5156  0040EE  6ADA               	clrf	fsr2h,c
  5157  0040F0  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5158  0040F6  0E04               	movlw	4
  5159  0040F8  26DF               	addwf	indf2,f,c
  5160  0040FA  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5161  0040FC  6ED9               	movwf	fsr2l,c
  5162  0040FE  6ADA               	clrf	fsr2h,c
  5163  004100  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5164  004106  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5165  00410C  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5166  004112  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5167                           
  5168                           ; BSR set to: 0
  5169                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:             *fmt
      +                           += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5170                           
  5171                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 935:             }
  5172  004118  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5173  00411A  6ED9               	movwf	fsr2l,c
  5174  00411C  6ADA               	clrf	fsr2h,c
  5175  00411E  0E02               	movlw	2
  5176  004120  26DF               	addwf	indf2,f,c
  5177  004122  D785               	goto	l5985
  5178  004124                     l6005:
  5179                           
  5180                           ; BSR set to: 0
  5181                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:         if ((*f
      +                          mt)[0] == '%') {
  5182  004124  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5183  004126  6ED9               	movwf	fsr2l,c
  5184  004128  6ADA               	clrf	fsr2h,c
  5185  00412A  006F FF7F FFF6     	movff	indf2,tblptrl
  5186  004130                     	if	1	;There is more than 1 active tblptr byte
  5187  004130  0E20               	movlw	high __smallconst
  5188  004132  6EF7               	movwf	tblptrh,c
  5189  004134                     	endif
  5190  004134                     	if	0	;tblptru may be non-zero
  5191  004134                     	endif
  5192  004134                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5193  004134  0E00               	movlw	low (__smallconst shr (0+16))
  5194  004136  6EF8               	movwf	tblptru,c
  5195  004138                     	endif
  5196  004138  0008               	tblrd		*
  5197  00413A  50F5               	movf	tablat,w,c
  5198  00413C  0A25               	xorlw	37
  5199  00413E  A4D8               	btfss	status,2,c
  5200  004140  D012               	goto	l6015
  5201                           
  5202                           ; BSR set to: 0
  5203                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:             ++*
      +                          fmt;
  5204  004142  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5205  004144  6ED9               	movwf	fsr2l,c
  5206  004146  6ADA               	clrf	fsr2h,c
  5207  004148  2ADF               	incf	indf2,f,c
  5208                           
  5209                           ; BSR set to: 0
  5210                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:             fpu
      +                          tc((int)'%', fp);
  5211  00414A  0E00               	movlw	0
  5212  00414C  6E02               	movwf	(fputc@c+1)^0,c
  5213  00414E  0E25               	movlw	37
  5214  004150  6E01               	movwf	fputc@c^0,c
  5215  004152  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5216  004158  EC60  F02E         	call	_fputc	;wreg free
  5217  00415C                     l6011:
  5218                           
  5219                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:             ret
      +                          urn 1;
  5220  00415C  0E00               	movlw	0
  5221  00415E  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5222  004160  0E01               	movlw	1
  5223  004162  6E5D               	movwf	?_vfpfcnvrt^0,c
  5224  004164  0012               	return	
  5225  004166                     l6015:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5229  004166  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5230  004168  6ED9               	movwf	fsr2l,c
  5231  00416A  6ADA               	clrf	fsr2h,c
  5232  00416C  2ADF               	incf	indf2,f,c
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:         return 
      +                          0;
  5236  00416E  0E00               	movlw	0
  5237  004170  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5238  004172  0E00               	movlw	0
  5239  004174  6E5D               	movwf	?_vfpfcnvrt^0,c
  5240  004176  0012               	return	
  5241  004178                     l6021:
  5242                           
  5243                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)
      +                          (*fmt)[0], fp);
  5244  004178  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5245  00417A  6ED9               	movwf	fsr2l,c
  5246  00417C  6ADA               	clrf	fsr2h,c
  5247  00417E  006F FF7F FFF6     	movff	indf2,tblptrl
  5248  004184                     	if	1	;There is more than 1 active tblptr byte
  5249  004184  0E20               	movlw	high __smallconst
  5250  004186  6EF7               	movwf	tblptrh,c
  5251  004188                     	endif
  5252  004188                     	if	0	;tblptru may be non-zero
  5253  004188                     	endif
  5254  004188                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5255  004188  0E00               	movlw	low (__smallconst shr (0+16))
  5256  00418A  6EF8               	movwf	tblptru,c
  5257  00418C                     	endif
  5258  00418C  0008               	tblrd		*
  5259  00418E  50F5               	movf	tablat,w,c
  5260  004190  6E01               	movwf	fputc@c^0,c
  5261  004192  6A02               	clrf	(fputc@c+1)^0,c
  5262  004194  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5263  00419A  EC60  F02E         	call	_fputc	;wreg free
  5264                           
  5265                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5266  00419E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5267  0041A0  6ED9               	movwf	fsr2l,c
  5268  0041A2  6ADA               	clrf	fsr2h,c
  5269  0041A4  2ADF               	incf	indf2,f,c
  5270  0041A6  D7DA               	goto	l6011
  5271  0041A8                     __end_of_vfpfcnvrt:
  5272                           	opt callstack 0
  5273                           
  5274 ;; *************** function _strncmp *****************
  5275 ;; Defined at:
  5276 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;  _l              1    0[COMRAM] PTR const unsigned char 
  5279 ;;		 -> vfpfcnvrt@ct(3), 
  5280 ;;  _r              1    1[COMRAM] PTR const unsigned char 
  5281 ;;		 -> STR_21(3), 
  5282 ;;  n               2    2[COMRAM] unsigned int 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  r               1    6[COMRAM] PTR const unsigned char 
  5285 ;;		 -> STR_21(3), 
  5286 ;;  l               1    5[COMRAM] PTR const unsigned char 
  5287 ;;		 -> vfpfcnvrt@ct(3), 
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  2    0[COMRAM] int 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5292 ;; Tracked objects:
  5293 ;;		On entry : 3F/0
  5294 ;;		On exit  : 3F/0
  5295 ;;		Unchanged: 3F/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5298 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5299 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5300 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5301 ;;Total ram usage:        7 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_vfpfcnvrt
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text12
  5311  0058B0                     __ptext12:
  5312                           	opt callstack 0
  5313  0058B0                     _strncmp:
  5314                           	opt callstack 26
  5315                           
  5316                           ; BSR set to: 0
  5317                           
  5318                           ;incstack = 0
  5319  0058B0  0060  F004  F006   	movff	strncmp@_l,strncmp@l
  5320  0058B6  0060  F008  F007   	movff	strncmp@_r,strncmp@r
  5321  0058BC  0603               	decf	strncmp@n^0,f,c
  5322  0058BE  A0D8               	btfss	status,0,c
  5323  0058C0  0604               	decf	(strncmp@n+1)^0,f,c
  5324  0058C2  2803               	incf	strncmp@n^0,w,c
  5325  0058C4  E10D               	bnz	l4705
  5326  0058C6  2804               	incf	(strncmp@n+1)^0,w,c
  5327  0058C8  A4D8               	btfss	status,2,c
  5328  0058CA  D00A               	goto	l4705
  5329                           
  5330                           ; BSR set to: 0
  5331  0058CC  0E00               	movlw	0
  5332  0058CE  6E02               	movwf	(?_strncmp+1)^0,c
  5333  0058D0  0E00               	movlw	0
  5334  0058D2  6E01               	movwf	?_strncmp^0,c
  5335  0058D4  0012               	return	
  5336  0058D6                     l4703:
  5337                           
  5338                           ; BSR set to: 0
  5339  0058D6  2A06               	incf	strncmp@l^0,f,c
  5340  0058D8  2A07               	incf	strncmp@r^0,f,c
  5341  0058DA  0603               	decf	strncmp@n^0,f,c
  5342  0058DC  A0D8               	btfss	status,0,c
  5343  0058DE  0604               	decf	(strncmp@n+1)^0,f,c
  5344  0058E0                     l4705:
  5345                           
  5346                           ; BSR set to: 0
  5347  0058E0  5006               	movf	strncmp@l^0,w,c
  5348  0058E2  6ED9               	movwf	fsr2l,c
  5349  0058E4  6ADA               	clrf	fsr2h,c
  5350  0058E6  50DF               	movf	indf2,w,c
  5351  0058E8  B4D8               	btfsc	status,2,c
  5352  0058EA  D021               	goto	u5640
  5353                           
  5354                           ; BSR set to: 0
  5355  0058EC  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5356  0058F2                     	if	1	;There is more than 1 active tblptr byte
  5357  0058F2  0E20               	movlw	high __smallconst
  5358  0058F4  6EF7               	movwf	tblptrh,c
  5359  0058F6                     	endif
  5360  0058F6                     	if	0	;tblptru may be non-zero
  5361  0058F6                     	endif
  5362  0058F6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5363  0058F6  0E00               	movlw	low (__smallconst shr (0+16))
  5364  0058F8  6EF8               	movwf	tblptru,c
  5365  0058FA                     	endif
  5366  0058FA  0008               	tblrd		*
  5367  0058FC  50F5               	movf	tablat,w,c
  5368  0058FE  0900               	iorlw	0
  5369  005900  B4D8               	btfsc	status,2,c
  5370  005902  D015               	goto	u5640
  5371                           
  5372                           ; BSR set to: 0
  5373  005904  5003               	movf	strncmp@n^0,w,c
  5374  005906  1004               	iorwf	(strncmp@n+1)^0,w,c
  5375  005908  B4D8               	btfsc	status,2,c
  5376  00590A  D011               	goto	u5640
  5377                           
  5378                           ; BSR set to: 0
  5379  00590C  5006               	movf	strncmp@l^0,w,c
  5380  00590E  6ED9               	movwf	fsr2l,c
  5381  005910  6ADA               	clrf	fsr2h,c
  5382  005912  50DF               	movf	indf2,w,c
  5383  005914  6E05               	movwf	??_strncmp^0,c
  5384  005916  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5385  00591C                     	if	1	;There is more than 1 active tblptr byte
  5386  00591C  0E20               	movlw	high __smallconst
  5387  00591E  6EF7               	movwf	tblptrh,c
  5388  005920                     	endif
  5389  005920                     	if	0	;tblptru may be non-zero
  5390  005920                     	endif
  5391  005920                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5392  005920  0E00               	movlw	low (__smallconst shr (0+16))
  5393  005922  6EF8               	movwf	tblptru,c
  5394  005924                     	endif
  5395  005924  0008               	tblrd		*
  5396  005926  50F5               	movf	tablat,w,c
  5397  005928  1805               	xorwf	??_strncmp^0,w,c
  5398  00592A  B4D8               	btfsc	status,2,c
  5399  00592C  D7D4               	goto	l4703
  5400  00592E                     u5640:
  5401                           
  5402                           ; BSR set to: 0
  5403  00592E  5006               	movf	strncmp@l^0,w,c
  5404  005930  6ED9               	movwf	fsr2l,c
  5405  005932  6ADA               	clrf	fsr2h,c
  5406  005934  50DF               	movf	indf2,w,c
  5407  005936  6E05               	movwf	??_strncmp^0,c
  5408  005938  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5409  00593E                     	if	1	;There is more than 1 active tblptr byte
  5410  00593E  0E20               	movlw	high __smallconst
  5411  005940  6EF7               	movwf	tblptrh,c
  5412  005942                     	endif
  5413  005942                     	if	0	;tblptru may be non-zero
  5414  005942                     	endif
  5415  005942                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5416  005942  0E00               	movlw	low (__smallconst shr (0+16))
  5417  005944  6EF8               	movwf	tblptru,c
  5418  005946                     	endif
  5419  005946  0008               	tblrd		*
  5420  005948  50F5               	movf	tablat,w,c
  5421  00594A  5C05               	subwf	??_strncmp^0,w,c
  5422  00594C  6E01               	movwf	?_strncmp^0,c
  5423  00594E  6A02               	clrf	(?_strncmp+1)^0,c
  5424  005950  A0D8               	btfss	status,0,c
  5425  005952  0602               	decf	(?_strncmp+1)^0,f,c
  5426                           
  5427                           ; BSR set to: 0
  5428  005954  0012               	return		;funcret
  5429  005956                     __end_of_strncmp:
  5430                           	opt callstack 0
  5431                           
  5432 ;; *************** function _efgtoa *****************
  5433 ;; Defined at:
  5434 ;;		line 319 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  5437 ;;		 -> sprintf@f(5), 
  5438 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  5439 ;;  c               1    5[BANK0 ] unsigned char 
  5440 ;; Auto vars:     Size  Location     Type
  5441 ;;  u               4   63[BANK0 ] unsigned char 
  5442 ;;  g               4   55[BANK0 ] unsigned char 
  5443 ;;  l               4   49[BANK0 ] unsigned char 
  5444 ;;  h               4   45[BANK0 ] unsigned char 
  5445 ;;  ou              4   11[BANK0 ] unsigned char 
  5446 ;;  n               2   61[BANK0 ] int 
  5447 ;;  e               2   59[BANK0 ] int 
  5448 ;;  i               2   53[BANK0 ] int 
  5449 ;;  w               2   42[BANK0 ] int 
  5450 ;;  p               2   39[BANK0 ] int 
  5451 ;;  sign            2   37[BANK0 ] int 
  5452 ;;  d               2   35[BANK0 ] int 
  5453 ;;  ne              2   33[BANK0 ] int 
  5454 ;;  m               2   31[BANK0 ] int 
  5455 ;;  pp              2   29[BANK0 ] int 
  5456 ;;  t               2   27[BANK0 ] int 
  5457 ;;  mode            1   44[BANK0 ] unsigned char 
  5458 ;;  nmode           1   41[BANK0 ] unsigned char 
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  2    0[BANK0 ] int 
  5461 ;; Registers used:
  5462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 3B/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5468 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5469 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5470 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5471 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5472 ;;Total ram usage:       67 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    4
  5475 ;; This function calls:
  5476 ;;		___awdiv
  5477 ;;		___awmod
  5478 ;;		___fladd
  5479 ;;		___fldiv
  5480 ;;		___fleq
  5481 ;;		___flge
  5482 ;;		___flmul
  5483 ;;		___flneg
  5484 ;;		___flsub
  5485 ;;		___fltol
  5486 ;;		___fpclassifyf
  5487 ;;		_floorf
  5488 ;;		_isupper
  5489 ;;		_pad
  5490 ;;		_strcpy
  5491 ;;		_tolower
  5492 ;; This function is called by:
  5493 ;;		_vfpfcnvrt
  5494 ;; This function uses a non-reentrant model
  5495 ;;
  5496                           
  5497                           	psect	text13
  5498  0020EC                     __ptext13:
  5499                           	opt callstack 0
  5500  0020EC                     _efgtoa:
  5501                           	opt callstack 22
  5502                           
  5503                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static int efgto
      +                          a(FILE *fp, long double f, char c);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\comm
      +                          on\doprnt.c: 320: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 32
      +                          1:     char mode, nmode;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;F:\Programme\Microchip\xc8\v2.10\p
      +                          ic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;F:\Programme\Microc
      +                          hip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;incstack = 0
  5507  0020EC  0E00               	movlw	0
  5508  0020EE  0100               	movlb	0	; () banked
  5509  0020F0  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5510  0020F2  0E00               	movlw	0
  5511  0020F4  6F85               	movwf	efgtoa@sign& (0+255),b
  5512                           
  5513                           ; BSR set to: 0
  5514                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g = f;
  5515  0020F6  0060  F184  F097   	movff	efgtoa@f,efgtoa@g
  5516  0020FC  0060  F188  F098   	movff	efgtoa@f+1,efgtoa@g+1
  5517  002102  0060  F18C  F099   	movff	efgtoa@f+2,efgtoa@g+2
  5518  002108  0060  F190  F09A   	movff	efgtoa@f+3,efgtoa@g+3
  5519                           
  5520                           ; BSR set to: 0
  5521                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0)
      +                           {
  5522  00210E  AF9A               	btfss	(efgtoa@g+3)& (0+255),7,b
  5523  002110  D01E               	goto	l5629
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:         sign = 1
      +                          ;
  5527  002112  0E00               	movlw	0
  5528  002114  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5529  002116  0E01               	movlw	1
  5530  002118  6F85               	movwf	efgtoa@sign& (0+255),b
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  5534  00211A  0060  F25C  F001   	movff	efgtoa@g,___flneg@f1
  5535  002120  0060  F260  F002   	movff	efgtoa@g+1,___flneg@f1+1
  5536  002126  0060  F264  F003   	movff	efgtoa@g+2,___flneg@f1+2
  5537  00212C  0060  F268  F004   	movff	efgtoa@g+3,___flneg@f1+3
  5538  002132  EC30  F031         	call	___flneg	;wreg free
  5539  002136  0060  F004  F097   	movff	?___flneg,efgtoa@g
  5540  00213C  0060  F008  F098   	movff	?___flneg+1,efgtoa@g+1
  5541  002142  0060  F00C  F099   	movff	?___flneg+2,efgtoa@g+2
  5542  002148  0060  F010  F09A   	movff	?___flneg+3,efgtoa@g+3
  5543  00214E                     l5629:
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  5547  00214E  0E00               	movlw	0
  5548  002150  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  5549  002152  0E00               	movlw	0
  5550  002154  6F9D               	movwf	efgtoa@n& (0+255),b
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w = width;
  5554  002156  0061  F0F8  F08A   	movff	_width,efgtoa@w
  5555  00215C  0061  F0FC  F08B   	movff	_width+1,efgtoa@w+1
  5556                           
  5557                           ; BSR set to: 0
  5558                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if (sign || 
      +                          (flags & (1 << 2))) {
  5559  002162  5185               	movf	efgtoa@sign& (0+255),w,b
  5560  002164  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5561  002166  A4D8               	btfss	status,2,c
  5562  002168  D003               	goto	u7130
  5563                           
  5564                           ; BSR set to: 0
  5565  00216A  0104               	movlb	4	; () banked
  5566  00216C  A542               	btfss	_flags& (0+255),2,b
  5567  00216E  D015               	goto	l5649
  5568  002170                     u7130:
  5569                           
  5570                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] 
      +                          = sign ? '-' : '+';
  5571  002170  0100               	movlb	0	; () banked
  5572  002172  5185               	movf	efgtoa@sign& (0+255),w,b
  5573  002174  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5574  002176  A4D8               	btfss	status,2,c
  5575  002178  D004               	goto	l5641
  5576                           
  5577                           ; BSR set to: 0
  5578  00217A  0E00               	movlw	0
  5579  00217C  6F70               	movwf	(_efgtoa$618+1)& (0+255),b
  5580  00217E  0E2B               	movlw	43
  5581  002180  D003               	goto	L3
  5582  002182                     l5641:
  5583                           
  5584                           ; BSR set to: 0
  5585  002182  0E00               	movlw	0
  5586  002184  6F70               	movwf	(_efgtoa$618+1)& (0+255),b
  5587  002186  0E2D               	movlw	45
  5588  002188                     L3:
  5589  002188  6F6F               	movwf	_efgtoa$618& (0+255),b
  5590                           
  5591                           ; BSR set to: 0
  5592  00218A  0060  F1BC  F44C   	movff	_efgtoa$618,_dbuf
  5593                           
  5594                           ; BSR set to: 0
  5595                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:         ++n;
  5596  002190  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  5597  002192  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:         --w;
  5601  002194  078A               	decf	efgtoa@w& (0+255),f,b
  5602  002196  A0D8               	btfss	status,0,c
  5603  002198  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5604  00219A                     l5649:
  5605                           
  5606                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5607  00219A  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5608  0021A0  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5609  0021A6  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5610  0021AC  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5611  0021B2  ECDE  F029         	call	___fpclassifyf	;wreg free
  5612  0021B6  0401               	decf	?___fpclassifyf^0,w,c
  5613  0021B8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5614  0021BA  A4D8               	btfss	status,2,c
  5615  0021BC  D053               	goto	l5667
  5616  0021BE  0EBF               	movlw	191
  5617  0021C0  0100               	movlb	0	; () banked
  5618  0021C2  6F66               	movwf	??_efgtoa& (0+255),b
  5619  0021C4  0EFF               	movlw	255
  5620  0021C6  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5621  0021C8  5165               	movf	efgtoa@c& (0+255),w,b
  5622  0021CA  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5623  0021CC  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5624  0021CE  5166               	movf	??_efgtoa& (0+255),w,b
  5625  0021D0  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5626  0021D2  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5627  0021D4  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5628  0021D6  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5629  0021D8  E106               	bnz	u7160
  5630  0021DA  0E1A               	movlw	26
  5631  0021DC  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5632  0021DE  B0D8               	btfsc	status,0,c
  5633  0021E0  D002               	goto	u7160
  5634  0021E2  0E01               	movlw	1
  5635  0021E4  D001               	goto	u7170
  5636  0021E6                     u7160:
  5637  0021E6  0E00               	movlw	0
  5638  0021E8                     u7170:
  5639  0021E8  6F71               	movwf	_efgtoa$619& (0+255),b
  5640  0021EA  6B72               	clrf	(_efgtoa$619+1)& (0+255),b
  5641                           
  5642                           ; BSR set to: 0
  5643  0021EC  5171               	movf	_efgtoa$619& (0+255),w,b
  5644  0021EE  1172               	iorwf	(_efgtoa$619+1)& (0+255),w,b
  5645  0021F0  B4D8               	btfsc	status,2,c
  5646  0021F2  D00F               	goto	l5659
  5647                           
  5648                           ; BSR set to: 0
  5649                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:             strc
      +                          py(&dbuf[n], "INF");
  5650  0021F4  0E4C               	movlw	low _dbuf
  5651  0021F6  259D               	addwf	efgtoa@n& (0+255),w,b
  5652  0021F8  6E01               	movwf	strcpy@dest^0,c
  5653  0021FA  0E04               	movlw	high _dbuf
  5654  0021FC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5655  0021FE  6E02               	movwf	(strcpy@dest+1)^0,c
  5656  002200  0ED8               	movlw	low STR_11
  5657  002202  6E03               	movwf	strcpy@src^0,c
  5658  002204  5003               	movf	strcpy@src^0,w,c
  5659  002206  A4D8               	btfss	status,2,c
  5660  002208  0E20               	movlw	high __smallconst
  5661  00220A  6E04               	movwf	(strcpy@src+1)^0,c
  5662  00220C  ECC4  F02F         	call	_strcpy	;wreg free
  5663                           
  5664                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:         } else {
  5665  002210  D00E               	goto	l5661
  5666  002212                     l5659:
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:             strc
      +                          py(&dbuf[n], "inf");
  5670  002212  0E4C               	movlw	low _dbuf
  5671  002214  259D               	addwf	efgtoa@n& (0+255),w,b
  5672  002216  6E01               	movwf	strcpy@dest^0,c
  5673  002218  0E04               	movlw	high _dbuf
  5674  00221A  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5675  00221C  6E02               	movwf	(strcpy@dest+1)^0,c
  5676  00221E  0EE0               	movlw	low STR_12
  5677  002220  6E03               	movwf	strcpy@src^0,c
  5678  002222  5003               	movf	strcpy@src^0,w,c
  5679  002224  A4D8               	btfss	status,2,c
  5680  002226  0E20               	movlw	high __smallconst
  5681  002228  6E04               	movwf	(strcpy@src+1)^0,c
  5682  00222A  ECC4  F02F         	call	_strcpy	;wreg free
  5683  00222E                     l5661:
  5684                           
  5685                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:         w -= ((s
      +                          izeof("inf")/sizeof("inf"[0]))-1);
  5686  00222E  0100               	movlb	0	; () banked
  5687  002230  0EFD               	movlw	253
  5688  002232  278A               	addwf	efgtoa@w& (0+255),f,b
  5689  002234  0EFF               	movlw	255
  5690  002236  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5691  002238                     l5663:
  5692                           
  5693                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:         return p
      +                          ad(fp, &dbuf[0], w);
  5694  002238  0060  F180  F00F   	movff	efgtoa@fp,pad@fp
  5695  00223E  0E4C               	movlw	low _dbuf
  5696  002240  6E10               	movwf	pad@buf^0,c
  5697  002242  0E04               	movlw	high _dbuf
  5698  002244  6E11               	movwf	(pad@buf+1)^0,c
  5699  002246  0060  F228  F012   	movff	efgtoa@w,pad@p
  5700  00224C  0060  F22C  F013   	movff	efgtoa@w+1,pad@p+1
  5701  002252  ECAB  F02C         	call	_pad	;wreg free
  5702  002256  0060  F03C  F060   	movff	?_pad,?_efgtoa
  5703  00225C  0060  F040  F061   	movff	?_pad+1,?_efgtoa+1
  5704  002262  0012               	return	
  5705  002264                     l5667:
  5706                           
  5707                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5708  002264  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5709  00226A  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5710  002270  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5711  002276  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5712  00227C  ECDE  F029         	call	___fpclassifyf	;wreg free
  5713  002280  5001               	movf	?___fpclassifyf^0,w,c
  5714  002282  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5715  002284  A4D8               	btfss	status,2,c
  5716  002286  D039               	goto	l5685
  5717  002288  0EBF               	movlw	191
  5718  00228A  0100               	movlb	0	; () banked
  5719  00228C  6F66               	movwf	??_efgtoa& (0+255),b
  5720  00228E  0EFF               	movlw	255
  5721  002290  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5722  002292  5165               	movf	efgtoa@c& (0+255),w,b
  5723  002294  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5724  002296  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5725  002298  5166               	movf	??_efgtoa& (0+255),w,b
  5726  00229A  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5727  00229C  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5728  00229E  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5729  0022A0  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5730  0022A2  E106               	bnz	u7200
  5731  0022A4  0E1A               	movlw	26
  5732  0022A6  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5733  0022A8  B0D8               	btfsc	status,0,c
  5734  0022AA  D002               	goto	u7200
  5735  0022AC  0E01               	movlw	1
  5736  0022AE  D001               	goto	u7210
  5737  0022B0                     u7200:
  5738  0022B0  0E00               	movlw	0
  5739  0022B2                     u7210:
  5740  0022B2  6F73               	movwf	_efgtoa$624& (0+255),b
  5741  0022B4  6B74               	clrf	(_efgtoa$624+1)& (0+255),b
  5742                           
  5743                           ; BSR set to: 0
  5744  0022B6  5173               	movf	_efgtoa$624& (0+255),w,b
  5745  0022B8  1174               	iorwf	(_efgtoa$624+1)& (0+255),w,b
  5746  0022BA  B4D8               	btfsc	status,2,c
  5747  0022BC  D00F               	goto	l5677
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:             strc
      +                          py(&dbuf[n], "NAN");
  5751  0022BE  0E4C               	movlw	low _dbuf
  5752  0022C0  259D               	addwf	efgtoa@n& (0+255),w,b
  5753  0022C2  6E01               	movwf	strcpy@dest^0,c
  5754  0022C4  0E04               	movlw	high _dbuf
  5755  0022C6  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5756  0022C8  6E02               	movwf	(strcpy@dest+1)^0,c
  5757  0022CA  0EDC               	movlw	low STR_15
  5758  0022CC  6E03               	movwf	strcpy@src^0,c
  5759  0022CE  5003               	movf	strcpy@src^0,w,c
  5760  0022D0  A4D8               	btfss	status,2,c
  5761  0022D2  0E20               	movlw	high __smallconst
  5762  0022D4  6E04               	movwf	(strcpy@src+1)^0,c
  5763  0022D6  ECC4  F02F         	call	_strcpy	;wreg free
  5764                           
  5765                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:         } else {
  5766  0022DA  D7A9               	goto	l5661
  5767  0022DC                     l5677:
  5768                           
  5769                           ; BSR set to: 0
  5770                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:             strc
      +                          py(&dbuf[n], "nan");
  5771  0022DC  0E4C               	movlw	low _dbuf
  5772  0022DE  259D               	addwf	efgtoa@n& (0+255),w,b
  5773  0022E0  6E01               	movwf	strcpy@dest^0,c
  5774  0022E2  0E04               	movlw	high _dbuf
  5775  0022E4  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5776  0022E6  6E02               	movwf	(strcpy@dest+1)^0,c
  5777  0022E8  0EE4               	movlw	low STR_16
  5778  0022EA  6E03               	movwf	strcpy@src^0,c
  5779  0022EC  5003               	movf	strcpy@src^0,w,c
  5780  0022EE  A4D8               	btfss	status,2,c
  5781  0022F0  0E20               	movlw	high __smallconst
  5782  0022F2  6E04               	movwf	(strcpy@src+1)^0,c
  5783  0022F4  ECC4  F02F         	call	_strcpy	;wreg free
  5784  0022F8  D79A               	goto	l5661
  5785  0022FA                     l5685:
  5786                           
  5787                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  5788  0022FA  0E00               	movlw	0
  5789  0022FC  0100               	movlb	0	; () banked
  5790  0022FE  6F9F               	movwf	efgtoa@u& (0+255),b
  5791  002300  0E00               	movlw	0
  5792  002302  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  5793  002304  0E80               	movlw	128
  5794  002306  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  5795  002308  0E3F               	movlw	63
  5796  00230A  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  5797                           
  5798                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  5799  00230C  0E00               	movlw	0
  5800  00230E  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  5801  002310  0E00               	movlw	0
  5802  002312  6F9B               	movwf	efgtoa@e& (0+255),b
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0
      +                          .0)) {
  5806  002314  0060  F25C  F001   	movff	efgtoa@g,___fleq@ff1
  5807  00231A  0060  F260  F002   	movff	efgtoa@g+1,___fleq@ff1+1
  5808  002320  0060  F264  F003   	movff	efgtoa@g+2,___fleq@ff1+2
  5809  002326  0060  F268  F004   	movff	efgtoa@g+3,___fleq@ff1+3
  5810  00232C  0E00               	movlw	0
  5811  00232E  6E05               	movwf	___fleq@ff2^0,c
  5812  002330  0E00               	movlw	0
  5813  002332  6E06               	movwf	(___fleq@ff2+1)^0,c
  5814  002334  0E00               	movlw	0
  5815  002336  6E07               	movwf	(___fleq@ff2+2)^0,c
  5816  002338  0E00               	movlw	0
  5817  00233A  6E08               	movwf	(___fleq@ff2+3)^0,c
  5818  00233C  EC92  F02D         	call	___fleq	;wreg free
  5819  002340  A0D8               	btfss	status,0,c
  5820  002342  D026               	goto	l5695
  5821  002344  D09A               	goto	u7250
  5822  002346                     l5691:
  5823                           
  5824                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:             u = 
      +                          u*10.0;
  5825  002346  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  5826  00234C  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  5827  002352  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  5828  002358  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  5829  00235E  0E00               	movlw	0
  5830  002360  6E3C               	movwf	___flmul@a^0,c
  5831  002362  0E00               	movlw	0
  5832  002364  6E3D               	movwf	(___flmul@a+1)^0,c
  5833  002366  0E20               	movlw	32
  5834  002368  6E3E               	movwf	(___flmul@a+2)^0,c
  5835  00236A  0E41               	movlw	65
  5836  00236C  6E3F               	movwf	(___flmul@a+3)^0,c
  5837  00236E  ECD4  F020         	call	___flmul	;wreg free
  5838  002372  0060  F0E0  F09F   	movff	?___flmul,efgtoa@u
  5839  002378  0060  F0E4  F0A0   	movff	?___flmul+1,efgtoa@u+1
  5840  00237E  0060  F0E8  F0A1   	movff	?___flmul+2,efgtoa@u+2
  5841  002384  0060  F0EC  F0A2   	movff	?___flmul+3,efgtoa@u+3
  5842                           
  5843                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:             ++e;
  5844  00238A  0100               	movlb	0	; () banked
  5845  00238C  4B9B               	infsnz	efgtoa@e& (0+255),f,b
  5846  00238E  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  5847  002390                     l5695:
  5848                           
  5849                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:         while (!
      +                          (g < (u*10.0))) {
  5850  002390  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  5851  002396  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  5852  00239C  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  5853  0023A2  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  5854  0023A8  0E00               	movlw	0
  5855  0023AA  6E3C               	movwf	___flmul@a^0,c
  5856  0023AC  0E00               	movlw	0
  5857  0023AE  6E3D               	movwf	(___flmul@a+1)^0,c
  5858  0023B0  0E20               	movlw	32
  5859  0023B2  6E3E               	movwf	(___flmul@a+2)^0,c
  5860  0023B4  0E41               	movlw	65
  5861  0023B6  6E3F               	movwf	(___flmul@a+3)^0,c
  5862  0023B8  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  5863  0023BE  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  5864  0023C4  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  5865  0023CA  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  5866  0023D0  ECD4  F020         	call	___flmul	;wreg free
  5867  0023D4  0060  F0E0  F055   	movff	?___flmul,___flge@ff2
  5868  0023DA  0060  F0E4  F056   	movff	?___flmul+1,___flge@ff2+1
  5869  0023E0  0060  F0E8  F057   	movff	?___flmul+2,___flge@ff2+2
  5870  0023E6  0060  F0EC  F058   	movff	?___flmul+3,___flge@ff2+3
  5871  0023EC  EC31  F02B         	call	___flge	;wreg free
  5872  0023F0  A0D8               	btfss	status,0,c
  5873  0023F2  D027               	goto	l5701
  5874  0023F4  D7A8               	goto	l5691
  5875  0023F6                     l5697:
  5876                           
  5877                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:             u = 
      +                          u/10.0;
  5878  0023F6  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  5879  0023FC  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  5880  002402  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  5881  002408  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  5882  00240E  0E00               	movlw	0
  5883  002410  6E23               	movwf	___fldiv@a^0,c
  5884  002412  0E00               	movlw	0
  5885  002414  6E24               	movwf	(___fldiv@a+1)^0,c
  5886  002416  0E20               	movlw	32
  5887  002418  6E25               	movwf	(___fldiv@a+2)^0,c
  5888  00241A  0E41               	movlw	65
  5889  00241C  6E26               	movwf	(___fldiv@a+3)^0,c
  5890  00241E  EC3A  F024         	call	___fldiv	;wreg free
  5891  002422  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  5892  002428  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  5893  00242E  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  5894  002434  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  5895                           
  5896                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:             --e;
  5897  00243A  0100               	movlb	0	; () banked
  5898  00243C  079B               	decf	efgtoa@e& (0+255),f,b
  5899  00243E  A0D8               	btfss	status,0,c
  5900  002440  079C               	decf	(efgtoa@e+1)& (0+255),f,b
  5901  002442                     l5701:
  5902                           
  5903                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:         while (g
      +                           < u) {
  5904  002442  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  5905  002448  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  5906  00244E  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  5907  002454  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  5908  00245A  0060  F27C  F055   	movff	efgtoa@u,___flge@ff2
  5909  002460  0060  F280  F056   	movff	efgtoa@u+1,___flge@ff2+1
  5910  002466  0060  F284  F057   	movff	efgtoa@u+2,___flge@ff2+2
  5911  00246C  0060  F288  F058   	movff	efgtoa@u+3,___flge@ff2+3
  5912  002472  EC31  F02B         	call	___flge	;wreg free
  5913  002476  A0D8               	btfss	status,0,c
  5914  002478  D7BE               	goto	l5697
  5915  00247A                     u7250:
  5916                           
  5917                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mode = tolow
      +                          er((int)c);
  5918  00247A  0060  F194  F007   	movff	efgtoa@c,tolower@c
  5919  002480  6A08               	clrf	(tolower@c+1)^0,c
  5920  002482  EC81  F030         	call	_tolower	;wreg free
  5921  002486  5007               	movf	?_tolower^0,w,c
  5922  002488  0100               	movlb	0	; () banked
  5923  00248A  6F8C               	movwf	efgtoa@mode& (0+255),b
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nmode = mode
      +                          ;
  5927  00248C  0060  F230  F089   	movff	efgtoa@mode,efgtoa@nmode
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if (mode == 
      +                          'g') {
  5931  002492  0E67               	movlw	103
  5932  002494  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5933  002496  A4D8               	btfss	status,2,c
  5934  002498  D01D               	goto	l5717
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0)
      +                           {
  5938  00249A  0104               	movlb	4	; () banked
  5939  00249C  5140               	movf	_prec& (0+255),w,b
  5940  00249E  1141               	iorwf	(_prec+1)& (0+255),w,b
  5941  0024A0  A4D8               	btfss	status,2,c
  5942  0024A2  D004               	goto	l5713
  5943                           
  5944                           ; BSR set to: 4
  5945                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5946  0024A4  0E00               	movlw	0
  5947  0024A6  6F41               	movwf	(_prec+1)& (0+255),b
  5948  0024A8  0E01               	movlw	1
  5949  0024AA  6F40               	movwf	_prec& (0+255),b
  5950  0024AC                     l5713:
  5951                           
  5952                           ; BSR set to: 4
  5953                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:         p = (0 <
      +                           prec) ? prec : 6;
  5954  0024AC  BF41               	btfsc	(_prec+1)& (0+255),7,b
  5955  0024AE  D005               	goto	u7280
  5956  0024B0  5141               	movf	(_prec+1)& (0+255),w,b
  5957  0024B2  E109               	bnz	l612
  5958  0024B4  0540               	decf	_prec& (0+255),w,b
  5959  0024B6  B0D8               	btfsc	status,0,c
  5960  0024B8  D006               	goto	l612
  5961  0024BA                     u7280:
  5962                           
  5963                           ; BSR set to: 4
  5964  0024BA  0E00               	movlw	0
  5965  0024BC  0100               	movlb	0	; () banked
  5966  0024BE  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  5967  0024C0  0E06               	movlw	6
  5968  0024C2  6F87               	movwf	efgtoa@p& (0+255),b
  5969  0024C4  D00B               	goto	l5723
  5970  0024C6                     l612:
  5971                           
  5972                           ; BSR set to: 4
  5973  0024C6  0061  F100  F087   	movff	_prec,efgtoa@p
  5974  0024CC  0061  F104  F088   	movff	_prec+1,efgtoa@p+1
  5975  0024D2  D004               	goto	l5723
  5976  0024D4                     l5717:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:         p = (pre
      +                          c < 0) ? 6 : prec;
  5980  0024D4  0104               	movlb	4	; () banked
  5981  0024D6  AF41               	btfss	(_prec+1)& (0+255),7,b
  5982  0024D8  D7F6               	goto	l612
  5983  0024DA  D7EF               	goto	u7280
  5984  0024DC                     l5723:
  5985                           
  5986                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if (mode == 
      +                          'g') {
  5987  0024DC  0E67               	movlw	103
  5988  0024DE  0100               	movlb	0	; () banked
  5989  0024E0  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5990  0024E2  A4D8               	btfss	status,2,c
  5991  0024E4  D024               	goto	l5733
  5992                           
  5993                           ; BSR set to: 0
  5994                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:         if (!(e 
      +                          < -4) && !((p - 1) < e)) {
  5995  0024E6  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  5996  0024E8  D006               	goto	u7310
  5997  0024EA  0EFC               	movlw	252
  5998  0024EC  5D9B               	subwf	efgtoa@e& (0+255),w,b
  5999  0024EE  0EFF               	movlw	255
  6000  0024F0  599C               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6001  0024F2  A0D8               	btfss	status,0,c
  6002  0024F4  D01A               	goto	l5731
  6003  0024F6                     u7310:
  6004                           
  6005                           ; BSR set to: 0
  6006  0024F6  0EFF               	movlw	255
  6007  0024F8  6F66               	movwf	??_efgtoa& (0+255),b
  6008  0024FA  0EFF               	movlw	255
  6009  0024FC  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6010  0024FE  0060  F21C  F068   	movff	efgtoa@p,??_efgtoa+2
  6011  002504  0060  F220  F069   	movff	efgtoa@p+1,??_efgtoa+3
  6012  00250A  5166               	movf	??_efgtoa& (0+255),w,b
  6013  00250C  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6014  00250E  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6015  002510  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6016  002512  519B               	movf	efgtoa@e& (0+255),w,b
  6017  002514  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6018  002516  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6019  002518  0A80               	xorlw	128
  6020  00251A  6F6A               	movwf	(??_efgtoa+4)& (0+255),b
  6021  00251C  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6022  00251E  0A80               	xorlw	128
  6023  002520  596A               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6024  002522  A0D8               	btfss	status,0,c
  6025  002524  D002               	goto	l5731
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:             nmod
      +                          e = 'f';
  6029  002526  0E66               	movlw	102
  6030  002528  D001               	goto	L4
  6031  00252A                     l5731:
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:             nmod
      +                          e = 'e';
  6035  00252A  0E65               	movlw	101
  6036  00252C                     L4:
  6037  00252C  6F89               	movwf	efgtoa@nmode& (0+255),b
  6038  00252E                     l5733:
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m = p;
  6042  00252E  0060  F21C  F07F   	movff	efgtoa@p,efgtoa@m
  6043  002534  0060  F220  F080   	movff	efgtoa@p+1,efgtoa@m+1
  6044                           
  6045                           ; BSR set to: 0
  6046                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if (!(mode =
      +                          = 'g') || ((nmode == 'f') && (e < 0))) {
  6047  00253A  0E67               	movlw	103
  6048  00253C  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6049  00253E  A4D8               	btfss	status,2,c
  6050  002540  D005               	goto	u7350
  6051                           
  6052                           ; BSR set to: 0
  6053  002542  0E66               	movlw	102
  6054  002544  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6055  002546  B4D8               	btfsc	status,2,c
  6056                           
  6057                           ; BSR set to: 0
  6058  002548  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6059  00254A  D002               	goto	l5743
  6060  00254C                     u7350:
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:         ++m;
  6064  00254C  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  6065  00254E  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  6066  002550                     l5743:
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if (nmode ==
      +                           'f') {
  6070  002550  0E66               	movlw	102
  6071  002552  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6072  002554  A4D8               	btfss	status,2,c
  6073  002556  D016               	goto	l5753
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:         if (e < 
      +                          0) {
  6077  002558  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6078  00255A  D00C               	goto	l5749
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:             u = 
      +                          1.0;
  6082  00255C  0E00               	movlw	0
  6083  00255E  6F9F               	movwf	efgtoa@u& (0+255),b
  6084  002560  0E00               	movlw	0
  6085  002562  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6086  002564  0E80               	movlw	128
  6087  002566  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6088  002568  0E3F               	movlw	63
  6089  00256A  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6090                           
  6091                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:             e = 
      +                          0;
  6092  00256C  0E00               	movlw	0
  6093  00256E  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  6094  002570  0E00               	movlw	0
  6095  002572  6F9B               	movwf	efgtoa@e& (0+255),b
  6096  002574                     l5749:
  6097                           
  6098                           ; BSR set to: 0
  6099                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:         if (!(mo
      +                          de == 'g')) {
  6100  002574  0E67               	movlw	103
  6101  002576  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6102  002578  B4D8               	btfsc	status,2,c
  6103  00257A  D004               	goto	l5753
  6104                           
  6105                           ; BSR set to: 0
  6106                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:             m +=
      +                           e;
  6107  00257C  519B               	movf	efgtoa@e& (0+255),w,b
  6108  00257E  277F               	addwf	efgtoa@m& (0+255),f,b
  6109  002580  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6110  002582  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6111  002584                     l5753:
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  6115  002584  0E00               	movlw	0
  6116  002586  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6117  002588  0E00               	movlw	0
  6118  00258A  6F95               	movwf	efgtoa@i& (0+255),b
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h = g;
  6122  00258C  0060  F25C  F08D   	movff	efgtoa@g,efgtoa@h
  6123  002592  0060  F260  F08E   	movff	efgtoa@g+1,efgtoa@h+1
  6124  002598  0060  F264  F08F   	movff	efgtoa@g+2,efgtoa@h+2
  6125  00259E  0060  F268  F090   	movff	efgtoa@g+3,efgtoa@h+3
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  6129  0025A4  0060  F27C  F06B   	movff	efgtoa@u,efgtoa@ou
  6130  0025AA  0060  F280  F06C   	movff	efgtoa@u+1,efgtoa@ou+1
  6131  0025B0  0060  F284  F06D   	movff	efgtoa@u+2,efgtoa@ou+2
  6132  0025B6  0060  F288  F06E   	movff	efgtoa@u+3,efgtoa@ou+3
  6133                           
  6134                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6135  0025BC  D0AD               	goto	l5767
  6136  0025BE                     l5759:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:         l = floo
      +                          rf(h/u);
  6140  0025BE  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6141  0025C4  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6142  0025CA  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6143  0025D0  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6144  0025D6  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6145  0025DC  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6146  0025E2  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6147  0025E8  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6148  0025EE  EC3A  F024         	call	___fldiv	;wreg free
  6149  0025F2  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6150  0025F8  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6151  0025FE  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6152  002604  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6153  00260A  EC90  F025         	call	_floorf	;wreg free
  6154  00260E  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6155  002614  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6156  00261A  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6157  002620  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6158                           
  6159                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:         d = (int
      +                          )l;
  6160  002626  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6161  00262C  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6162  002632  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6163  002638  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6164  00263E  EC99  F02B         	call	___fltol	;wreg free
  6165  002642  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6166  002648  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6167                           
  6168                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:         h -= l*u
      +                          ;
  6169  00264E  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6170  002654  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6171  00265A  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6172  002660  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6173  002666  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6174  00266C  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6175  002672  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6176  002678  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6177  00267E  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6178  002684  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6179  00268A  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6180  002690  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6181  002696  ECD4  F020         	call	___flmul	;wreg free
  6182  00269A  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6183  0026A0  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6184  0026A6  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6185  0026AC  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6186  0026B2  ECF8  F02F         	call	___flsub	;wreg free
  6187  0026B6  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6188  0026BC  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6189  0026C2  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6190  0026C8  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6191                           
  6192                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:         u = u/10
      +                          .0;
  6193  0026CE  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6194  0026D4  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6195  0026DA  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6196  0026E0  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6197  0026E6  0E00               	movlw	0
  6198  0026E8  6E23               	movwf	___fldiv@a^0,c
  6199  0026EA  0E00               	movlw	0
  6200  0026EC  6E24               	movwf	(___fldiv@a+1)^0,c
  6201  0026EE  0E20               	movlw	32
  6202  0026F0  6E25               	movwf	(___fldiv@a+2)^0,c
  6203  0026F2  0E41               	movlw	65
  6204  0026F4  6E26               	movwf	(___fldiv@a+3)^0,c
  6205  0026F6  EC3A  F024         	call	___fldiv	;wreg free
  6206  0026FA  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6207  002700  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6208  002706  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6209  00270C  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6210                           
  6211                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:         ++i;
  6212  002712  0100               	movlb	0	; () banked
  6213  002714  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6214  002716  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6215  002718                     l5767:
  6216                           
  6217                           ; BSR set to: 0
  6218                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6219  002718  517F               	movf	efgtoa@m& (0+255),w,b
  6220  00271A  5D95               	subwf	efgtoa@i& (0+255),w,b
  6221  00271C  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6222  00271E  0A80               	xorlw	128
  6223  002720  6F66               	movwf	??_efgtoa& (0+255),b
  6224  002722  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6225  002724  0A80               	xorlw	128
  6226  002726  5966               	subwfb	??_efgtoa& (0+255),w,b
  6227  002728  A0D8               	btfss	status,0,c
  6228  00272A  D749               	goto	l5759
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  6232  00272C  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6233  002732  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6234  002738  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6235  00273E  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6236  002744  0E00               	movlw	0
  6237  002746  6E3C               	movwf	___flmul@a^0,c
  6238  002748  0E00               	movlw	0
  6239  00274A  6E3D               	movwf	(___flmul@a+1)^0,c
  6240  00274C  0EA0               	movlw	160
  6241  00274E  6E3E               	movwf	(___flmul@a+2)^0,c
  6242  002750  0E40               	movlw	64
  6243  002752  6E3F               	movwf	(___flmul@a+3)^0,c
  6244  002754  ECD4  F020         	call	___flmul	;wreg free
  6245  002758  0060  F0E0  F091   	movff	?___flmul,efgtoa@l
  6246  00275E  0060  F0E4  F092   	movff	?___flmul+1,efgtoa@l+1
  6247  002764  0060  F0E8  F093   	movff	?___flmul+2,efgtoa@l+2
  6248  00276A  0060  F0EC  F094   	movff	?___flmul+3,efgtoa@l+3
  6249                           
  6250                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  6251  002770  0060  F234  F051   	movff	efgtoa@h,___flge@ff1
  6252  002776  0060  F238  F052   	movff	efgtoa@h+1,___flge@ff1+1
  6253  00277C  0060  F23C  F053   	movff	efgtoa@h+2,___flge@ff1+2
  6254  002782  0060  F240  F054   	movff	efgtoa@h+3,___flge@ff1+3
  6255  002788  0060  F244  F055   	movff	efgtoa@l,___flge@ff2
  6256  00278E  0060  F248  F056   	movff	efgtoa@l+1,___flge@ff2+1
  6257  002794  0060  F24C  F057   	movff	efgtoa@l+2,___flge@ff2+2
  6258  00279A  0060  F250  F058   	movff	efgtoa@l+3,___flge@ff2+3
  6259  0027A0  EC31  F02B         	call	___flge	;wreg free
  6260  0027A4  B0D8               	btfsc	status,0,c
  6261  0027A6  D003               	goto	l5775
  6262                           
  6263                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  6264  0027A8  0E00               	movlw	0
  6265  0027AA  0100               	movlb	0	; () banked
  6266  0027AC  D020               	goto	L5
  6267  0027AE                     l5775:
  6268                           
  6269                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:         if ((h =
      +                          = l) && !(d % 2)) {
  6270  0027AE  0060  F234  F001   	movff	efgtoa@h,___fleq@ff1
  6271  0027B4  0060  F238  F002   	movff	efgtoa@h+1,___fleq@ff1+1
  6272  0027BA  0060  F23C  F003   	movff	efgtoa@h+2,___fleq@ff1+2
  6273  0027C0  0060  F240  F004   	movff	efgtoa@h+3,___fleq@ff1+3
  6274  0027C6  0060  F244  F005   	movff	efgtoa@l,___fleq@ff2
  6275  0027CC  0060  F248  F006   	movff	efgtoa@l+1,___fleq@ff2+1
  6276  0027D2  0060  F24C  F007   	movff	efgtoa@l+2,___fleq@ff2+2
  6277  0027D8  0060  F250  F008   	movff	efgtoa@l+3,___fleq@ff2+3
  6278  0027DE  EC92  F02D         	call	___fleq	;wreg free
  6279  0027E2  A0D8               	btfss	status,0,c
  6280  0027E4  D00B               	goto	l5781
  6281  0027E6  0100               	movlb	0	; () banked
  6282  0027E8  B183               	btfsc	efgtoa@d& (0+255),0,b
  6283  0027EA  D008               	goto	l5781
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:             l = 
      +                          0.0;
  6287  0027EC  0E00               	movlw	0
  6288  0027EE                     L5:
  6289  0027EE  6F91               	movwf	efgtoa@l& (0+255),b
  6290  0027F0  0E00               	movlw	0
  6291  0027F2  6F92               	movwf	(efgtoa@l+1)& (0+255),b
  6292  0027F4  0E00               	movlw	0
  6293  0027F6  6F93               	movwf	(efgtoa@l+2)& (0+255),b
  6294  0027F8  0E00               	movlw	0
  6295  0027FA  6F94               	movwf	(efgtoa@l+3)& (0+255),b
  6296  0027FC                     l5781:
  6297                           
  6298                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  6299  0027FC  0060  F25C  F00F   	movff	efgtoa@g,___fladd@b
  6300  002802  0060  F260  F010   	movff	efgtoa@g+1,___fladd@b+1
  6301  002808  0060  F264  F011   	movff	efgtoa@g+2,___fladd@b+2
  6302  00280E  0060  F268  F012   	movff	efgtoa@g+3,___fladd@b+3
  6303  002814  0060  F244  F013   	movff	efgtoa@l,___fladd@a
  6304  00281A  0060  F248  F014   	movff	efgtoa@l+1,___fladd@a+1
  6305  002820  0060  F24C  F015   	movff	efgtoa@l+2,___fladd@a+2
  6306  002826  0060  F250  F016   	movff	efgtoa@l+3,___fladd@a+3
  6307  00282C  EC96  F022         	call	___fladd	;wreg free
  6308  002830  0060  F03C  F08D   	movff	?___fladd,efgtoa@h
  6309  002836  0060  F040  F08E   	movff	?___fladd+1,efgtoa@h+1
  6310  00283C  0060  F044  F08F   	movff	?___fladd+2,efgtoa@h+2
  6311  002842  0060  F048  F090   	movff	?___fladd+3,efgtoa@h+3
  6312                           
  6313                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  6314  002848  0060  F1AC  F09F   	movff	efgtoa@ou,efgtoa@u
  6315  00284E  0060  F1B0  F0A0   	movff	efgtoa@ou+1,efgtoa@u+1
  6316  002854  0060  F1B4  F0A1   	movff	efgtoa@ou+2,efgtoa@u+2
  6317  00285A  0060  F1B8  F0A2   	movff	efgtoa@ou+3,efgtoa@u+3
  6318                           
  6319                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode 
      +                          == 'e') ? 0 : e;
  6320  002860  0E65               	movlw	101
  6321  002862  0100               	movlb	0	; () banked
  6322  002864  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6323  002866  B4D8               	btfsc	status,2,c
  6324  002868  D007               	goto	l5789
  6325                           
  6326                           ; BSR set to: 0
  6327  00286A  0060  F26C  F081   	movff	efgtoa@e,efgtoa@ne
  6328  002870  0060  F270  F082   	movff	efgtoa@e+1,efgtoa@ne+1
  6329  002876  D004               	goto	l638
  6330  002878                     l5789:
  6331                           
  6332                           ; BSR set to: 0
  6333  002878  0E00               	movlw	0
  6334  00287A  6F82               	movwf	(efgtoa@ne+1)& (0+255),b
  6335  00287C  0E00               	movlw	0
  6336  00287E  6F81               	movwf	efgtoa@ne& (0+255),b
  6337  002880                     l638:
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  6341  002880  0E00               	movlw	0
  6342  002882  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6343  002884  0E00               	movlw	0
  6344  002886  6F7D               	movwf	efgtoa@pp& (0+255),b
  6345                           
  6346                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  6347  002888  0E00               	movlw	0
  6348  00288A  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  6349  00288C  0E00               	movlw	0
  6350  00288E  6F7B               	movwf	efgtoa@t& (0+255),b
  6351                           
  6352                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  6353  002890  0E00               	movlw	0
  6354  002892  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6355  002894  0E00               	movlw	0
  6356  002896  6F95               	movwf	efgtoa@i& (0+255),b
  6357                           
  6358                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6359  002898  D0FA               	goto	l5839
  6360  00289A                     l5791:
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:         l = floo
      +                          rf(h/u);
  6364  00289A  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6365  0028A0  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6366  0028A6  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6367  0028AC  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6368  0028B2  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6369  0028B8  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6370  0028BE  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6371  0028C4  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6372  0028CA  EC3A  F024         	call	___fldiv	;wreg free
  6373  0028CE  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6374  0028D4  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6375  0028DA  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6376  0028E0  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6377  0028E6  EC90  F025         	call	_floorf	;wreg free
  6378  0028EA  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6379  0028F0  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6380  0028F6  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6381  0028FC  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6382                           
  6383                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:         d = (int
      +                          )l;
  6384  002902  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6385  002908  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6386  00290E  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6387  002914  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6388  00291A  EC99  F02B         	call	___fltol	;wreg free
  6389  00291E  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6390  002924  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6391                           
  6392                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:         if (!(fl
      +                          ags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6393  00292A  0104               	movlb	4	; () banked
  6394  00292C  B942               	btfsc	_flags& (0+255),4,b
  6395  00292E  D00D               	goto	l5803
  6396                           
  6397                           ; BSR set to: 4
  6398  002930  0100               	movlb	0	; () banked
  6399  002932  5183               	movf	efgtoa@d& (0+255),w,b
  6400  002934  1184               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6401  002936  A4D8               	btfss	status,2,c
  6402  002938  D008               	goto	l5803
  6403                           
  6404                           ; BSR set to: 0
  6405  00293A  0E67               	movlw	103
  6406  00293C  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6407  00293E  B4D8               	btfsc	status,2,c
  6408                           
  6409                           ; BSR set to: 0
  6410  002940  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6411  002942  D003               	goto	l5803
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:             ++t;
  6415  002944  4B7B               	infsnz	efgtoa@t& (0+255),f,b
  6416  002946  2B7C               	incf	(efgtoa@t+1)& (0+255),f,b
  6417                           
  6418                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:         } else {
  6419  002948  D03A               	goto	l5831
  6420  00294A                     l5803:
  6421                           
  6422                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:             if (
      +                          !pp && (ne < 0)) {
  6423  00294A  0100               	movlb	0	; () banked
  6424  00294C  517D               	movf	efgtoa@pp& (0+255),w,b
  6425  00294E  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6426  002950  B4D8               	btfsc	status,2,c
  6427                           
  6428                           ; BSR set to: 0
  6429  002952  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6430  002954  D022               	goto	l5823
  6431                           
  6432                           ; BSR set to: 0
  6433                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:                 
      +                          dbuf[n++] = '.';
  6434  002956  0E4C               	movlw	low _dbuf
  6435  002958  259D               	addwf	efgtoa@n& (0+255),w,b
  6436  00295A  6ED9               	movwf	fsr2l,c
  6437  00295C  0E04               	movlw	high _dbuf
  6438  00295E  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6439  002960  6EDA               	movwf	fsr2h,c
  6440  002962  0E2E               	movlw	46
  6441  002964  6EDF               	movwf	indf2,c
  6442                           
  6443                           ; BSR set to: 0
  6444  002966  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6445  002968  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6446                           
  6447                           ; BSR set to: 0
  6448                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:                 
      +                          --w;
  6449  00296A  078A               	decf	efgtoa@w& (0+255),f,b
  6450  00296C  A0D8               	btfss	status,0,c
  6451  00296E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:                 
      +                          pp = 1;
  6455  002970  0E00               	movlw	0
  6456  002972  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6457  002974  0E01               	movlw	1
  6458  002976  6F7D               	movwf	efgtoa@pp& (0+255),b
  6459  002978  D010               	goto	l5823
  6460  00297A                     l5815:
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:                 
      +                          dbuf[n++] = '0';
  6464  00297A  0E4C               	movlw	low _dbuf
  6465  00297C  259D               	addwf	efgtoa@n& (0+255),w,b
  6466  00297E  6ED9               	movwf	fsr2l,c
  6467  002980  0E04               	movlw	high _dbuf
  6468  002982  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6469  002984  6EDA               	movwf	fsr2h,c
  6470  002986  0E30               	movlw	48
  6471  002988  6EDF               	movwf	indf2,c
  6472                           
  6473                           ; BSR set to: 0
  6474  00298A  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6475  00298C  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6476                           
  6477                           ; BSR set to: 0
  6478                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:                 
      +                          --w;
  6479  00298E  078A               	decf	efgtoa@w& (0+255),f,b
  6480  002990  A0D8               	btfss	status,0,c
  6481  002992  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6482                           
  6483                           ; BSR set to: 0
  6484                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:                 
      +                          --t;
  6485  002994  077B               	decf	efgtoa@t& (0+255),f,b
  6486  002996  A0D8               	btfss	status,0,c
  6487  002998  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  6488  00299A                     l5823:
  6489                           
  6490                           ; BSR set to: 0
  6491                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:             whil
      +                          e (t) {
  6492  00299A  517B               	movf	efgtoa@t& (0+255),w,b
  6493  00299C  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6494  00299E  A4D8               	btfss	status,2,c
  6495  0029A0  D7EC               	goto	l5815
  6496                           
  6497                           ; BSR set to: 0
  6498                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:             dbuf
      +                          [n++] = '0' + d;
  6499  0029A2  0E4C               	movlw	low _dbuf
  6500  0029A4  259D               	addwf	efgtoa@n& (0+255),w,b
  6501  0029A6  6ED9               	movwf	fsr2l,c
  6502  0029A8  0E04               	movlw	high _dbuf
  6503  0029AA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6504  0029AC  6EDA               	movwf	fsr2h,c
  6505  0029AE  5183               	movf	efgtoa@d& (0+255),w,b
  6506  0029B0  0F30               	addlw	48
  6507  0029B2  6EDF               	movwf	indf2,c
  6508                           
  6509                           ; BSR set to: 0
  6510  0029B4  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6511  0029B6  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6512                           
  6513                           ; BSR set to: 0
  6514                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:             --w;
  6515  0029B8  078A               	decf	efgtoa@w& (0+255),f,b
  6516  0029BA  A0D8               	btfss	status,0,c
  6517  0029BC  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6518  0029BE                     l5831:
  6519                           
  6520                           ; BSR set to: 0
  6521                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:         h -= l*u
      +                          ;
  6522  0029BE  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6523  0029C4  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6524  0029CA  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6525  0029D0  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6526  0029D6  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6527  0029DC  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6528  0029E2  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6529  0029E8  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6530  0029EE  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6531  0029F4  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6532  0029FA  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6533  002A00  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6534  002A06  ECD4  F020         	call	___flmul	;wreg free
  6535  002A0A  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6536  002A10  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6537  002A16  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6538  002A1C  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6539  002A22  ECF8  F02F         	call	___flsub	;wreg free
  6540  002A26  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6541  002A2C  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6542  002A32  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6543  002A38  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6544                           
  6545                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:         u = u/10
      +                          .0;
  6546  002A3E  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6547  002A44  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6548  002A4A  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6549  002A50  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6550  002A56  0E00               	movlw	0
  6551  002A58  6E23               	movwf	___fldiv@a^0,c
  6552  002A5A  0E00               	movlw	0
  6553  002A5C  6E24               	movwf	(___fldiv@a+1)^0,c
  6554  002A5E  0E20               	movlw	32
  6555  002A60  6E25               	movwf	(___fldiv@a+2)^0,c
  6556  002A62  0E41               	movlw	65
  6557  002A64  6E26               	movwf	(___fldiv@a+3)^0,c
  6558  002A66  EC3A  F024         	call	___fldiv	;wreg free
  6559  002A6A  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6560  002A70  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6561  002A76  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6562  002A7C  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6563                           
  6564                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:         --ne;
  6565  002A82  0100               	movlb	0	; () banked
  6566  002A84  0781               	decf	efgtoa@ne& (0+255),f,b
  6567  002A86  A0D8               	btfss	status,0,c
  6568  002A88  0782               	decf	(efgtoa@ne+1)& (0+255),f,b
  6569                           
  6570                           ; BSR set to: 0
  6571                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6572  002A8A  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6573  002A8C  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6574  002A8E                     l5839:
  6575                           
  6576                           ; BSR set to: 0
  6577                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6578  002A8E  517F               	movf	efgtoa@m& (0+255),w,b
  6579  002A90  5D95               	subwf	efgtoa@i& (0+255),w,b
  6580  002A92  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6581  002A94  0A80               	xorlw	128
  6582  002A96  6F66               	movwf	??_efgtoa& (0+255),b
  6583  002A98  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6584  002A9A  0A80               	xorlw	128
  6585  002A9C  5966               	subwfb	??_efgtoa& (0+255),w,b
  6586  002A9E  B0D8               	btfsc	status,0,c
  6587  002AA0  D008               	goto	u7520
  6588                           
  6589                           ; BSR set to: 0
  6590  002AA2  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6591  002AA4  D6FA               	goto	l5791
  6592  002AA6  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  6593  002AA8  E104               	bnz	u7520
  6594  002AAA  0E4B               	movlw	75
  6595  002AAC  5D9D               	subwf	efgtoa@n& (0+255),w,b
  6596  002AAE  A0D8               	btfss	status,0,c
  6597  002AB0  D6F4               	goto	l5791
  6598  002AB2                     u7520:
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (
      +                          flags & (1 << 4))) {
  6602  002AB2  517D               	movf	efgtoa@pp& (0+255),w,b
  6603  002AB4  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6604  002AB6  A4D8               	btfss	status,2,c
  6605  002AB8  D00E               	goto	l5851
  6606                           
  6607                           ; BSR set to: 0
  6608  002ABA  0104               	movlb	4	; () banked
  6609  002ABC  A942               	btfss	_flags& (0+255),4,b
  6610  002ABE  D00B               	goto	l5851
  6611                           
  6612                           ; BSR set to: 4
  6613                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++
      +                          ] = '.';
  6614  002AC0  0E4C               	movlw	low _dbuf
  6615  002AC2  0100               	movlb	0	; () banked
  6616  002AC4  259D               	addwf	efgtoa@n& (0+255),w,b
  6617  002AC6  6ED9               	movwf	fsr2l,c
  6618  002AC8  0E04               	movlw	high _dbuf
  6619  002ACA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6620  002ACC  6EDA               	movwf	fsr2h,c
  6621  002ACE  0E2E               	movlw	46
  6622  002AD0  6EDF               	movwf	indf2,c
  6623                           
  6624                           ; BSR set to: 0
  6625  002AD2  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6626  002AD4  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6627  002AD6                     l5851:
  6628                           
  6629                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\
      +                          0';
  6630  002AD6  0E4C               	movlw	low _dbuf
  6631  002AD8  0100               	movlb	0	; () banked
  6632  002ADA  259D               	addwf	efgtoa@n& (0+255),w,b
  6633  002ADC  6ED9               	movwf	fsr2l,c
  6634  002ADE  0E04               	movlw	high _dbuf
  6635  002AE0  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6636  002AE2  6EDA               	movwf	fsr2h,c
  6637  002AE4  0E00               	movlw	0
  6638  002AE6  6EDF               	movwf	indf2,c
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if (nmode ==
      +                           'e') {
  6642  002AE8  0E65               	movlw	101
  6643  002AEA  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6644  002AEC  A4D8               	btfss	status,2,c
  6645  002AEE  EF1C  F011         	goto	l5663
  6646                           
  6647                           ; BSR set to: 0
  6648                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:         i = size
      +                          of(dbuf) - 1;
  6649  002AF2  0E00               	movlw	0
  6650  002AF4  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6651  002AF6  0E4F               	movlw	79
  6652  002AF8  6F95               	movwf	efgtoa@i& (0+255),b
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] 
      +                          = '\0';
  6656  002AFA  0E4C               	movlw	low _dbuf
  6657  002AFC  2595               	addwf	efgtoa@i& (0+255),w,b
  6658  002AFE  6ED9               	movwf	fsr2l,c
  6659  002B00  0E04               	movlw	high _dbuf
  6660  002B02  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6661  002B04  6EDA               	movwf	fsr2h,c
  6662  002B06  0E00               	movlw	0
  6663  002B08  6EDF               	movwf	indf2,c
  6664                           
  6665                           ; BSR set to: 0
  6666                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:         sign = 0
      +                          ;
  6667  002B0A  0E00               	movlw	0
  6668  002B0C  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6669  002B0E  0E00               	movlw	0
  6670  002B10  6F85               	movwf	efgtoa@sign& (0+255),b
  6671                           
  6672                           ; BSR set to: 0
  6673                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:         if (e < 
      +                          0) {
  6674  002B12  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6675  002B14  D008               	goto	l5867
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:             sign
      +                           = 1;
  6679  002B16  0E00               	movlw	0
  6680  002B18  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6681  002B1A  0E01               	movlw	1
  6682  002B1C  6F85               	movwf	efgtoa@sign& (0+255),b
  6683                           
  6684                           ; BSR set to: 0
  6685                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:             e = 
      +                          -e;
  6686  002B1E  6D9B               	negf	efgtoa@e& (0+255),b
  6687  002B20  1F9C               	comf	(efgtoa@e+1)& (0+255),f,b
  6688  002B22  B0D8               	btfsc	status,0,c
  6689  002B24  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  6690  002B26                     l5867:
  6691                           
  6692                           ; BSR set to: 0
  6693                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  6694  002B26  0E00               	movlw	0
  6695  002B28  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  6696  002B2A  0E02               	movlw	2
  6697  002B2C  6F87               	movwf	efgtoa@p& (0+255),b
  6698                           
  6699                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  6700  002B2E  D030               	goto	l5879
  6701  002B30                     l5869:
  6702                           
  6703                           ; BSR set to: 0
  6704                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:             --i;
  6705  002B30  0795               	decf	efgtoa@i& (0+255),f,b
  6706  002B32  A0D8               	btfss	status,0,c
  6707  002B34  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6708                           
  6709                           ; BSR set to: 0
  6710                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:             dbuf
      +                          [i] = '0' + (e % 10);
  6711  002B36  0E4C               	movlw	low _dbuf
  6712  002B38  2595               	addwf	efgtoa@i& (0+255),w,b
  6713  002B3A  6ED9               	movwf	fsr2l,c
  6714  002B3C  0E04               	movlw	high _dbuf
  6715  002B3E  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6716  002B40  6EDA               	movwf	fsr2h,c
  6717  002B42  0060  F26C  F001   	movff	efgtoa@e,___awmod@dividend
  6718  002B48  0060  F270  F002   	movff	efgtoa@e+1,___awmod@dividend+1
  6719  002B4E  0E00               	movlw	0
  6720  002B50  6E04               	movwf	(___awmod@divisor+1)^0,c
  6721  002B52  0E0A               	movlw	10
  6722  002B54  6E03               	movwf	___awmod@divisor^0,c
  6723  002B56  EC1A  F02F         	call	___awmod	;wreg free
  6724  002B5A  5001               	movf	?___awmod^0,w,c
  6725  002B5C  0F30               	addlw	48
  6726  002B5E  6EDF               	movwf	indf2,c
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:             e = 
      +                          e / 10;
  6730  002B60  0060  F26C  F001   	movff	efgtoa@e,___awdiv@dividend
  6731  002B66  0060  F270  F002   	movff	efgtoa@e+1,___awdiv@dividend+1
  6732  002B6C  0E00               	movlw	0
  6733  002B6E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6734  002B70  0E0A               	movlw	10
  6735  002B72  6E03               	movwf	___awdiv@divisor^0,c
  6736  002B74  EC1C  F02E         	call	___awdiv	;wreg free
  6737  002B78  0060  F004  F09B   	movff	?___awdiv,efgtoa@e
  6738  002B7E  0060  F008  F09C   	movff	?___awdiv+1,efgtoa@e+1
  6739                           
  6740                           ; BSR set to: 0
  6741                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:             --p;
  6742  002B84  0787               	decf	efgtoa@p& (0+255),f,b
  6743  002B86  A0D8               	btfss	status,0,c
  6744  002B88  0788               	decf	(efgtoa@p+1)& (0+255),f,b
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:             --w;
  6748  002B8A  078A               	decf	efgtoa@w& (0+255),f,b
  6749  002B8C  A0D8               	btfss	status,0,c
  6750  002B8E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6751  002B90                     l5879:
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  6755  002B90  519B               	movf	efgtoa@e& (0+255),w,b
  6756  002B92  119C               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6757  002B94  A4D8               	btfss	status,2,c
  6758  002B96  D7CC               	goto	l5869
  6759                           
  6760                           ; BSR set to: 0
  6761  002B98  BF88               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6762  002B9A  D005               	goto	u7580
  6763  002B9C  5188               	movf	(efgtoa@p+1)& (0+255),w,b
  6764  002B9E  E1C8               	bnz	l5869
  6765  002BA0  0587               	decf	efgtoa@p& (0+255),w,b
  6766  002BA2  B0D8               	btfsc	status,0,c
  6767  002BA4  D7C5               	goto	l5869
  6768  002BA6                     u7580:
  6769                           
  6770                           ; BSR set to: 0
  6771                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:         --i;
  6772  002BA6  0795               	decf	efgtoa@i& (0+255),f,b
  6773  002BA8  A0D8               	btfss	status,0,c
  6774  002BAA  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] 
      +                          = sign ? '-' : '+';
  6778  002BAC  5185               	movf	efgtoa@sign& (0+255),w,b
  6779  002BAE  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6780  002BB0  A4D8               	btfss	status,2,c
  6781  002BB2  D004               	goto	l5889
  6782                           
  6783                           ; BSR set to: 0
  6784  002BB4  0E00               	movlw	0
  6785  002BB6  6F76               	movwf	(_efgtoa$628+1)& (0+255),b
  6786  002BB8  0E2B               	movlw	43
  6787  002BBA  D003               	goto	L6
  6788  002BBC                     l5889:
  6789                           
  6790                           ; BSR set to: 0
  6791  002BBC  0E00               	movlw	0
  6792  002BBE  6F76               	movwf	(_efgtoa$628+1)& (0+255),b
  6793  002BC0  0E2D               	movlw	45
  6794  002BC2                     L6:
  6795  002BC2  6F75               	movwf	_efgtoa$628& (0+255),b
  6796                           
  6797                           ; BSR set to: 0
  6798  002BC4  0E4C               	movlw	low _dbuf
  6799  002BC6  2595               	addwf	efgtoa@i& (0+255),w,b
  6800  002BC8  6ED9               	movwf	fsr2l,c
  6801  002BCA  0E04               	movlw	high _dbuf
  6802  002BCC  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6803  002BCE  6EDA               	movwf	fsr2h,c
  6804  002BD0  0060  F1D7  FFDF   	movff	_efgtoa$628,indf2
  6805                           
  6806                           ; BSR set to: 0
  6807                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:         --w;
  6808  002BD6  078A               	decf	efgtoa@w& (0+255),f,b
  6809  002BD8  A0D8               	btfss	status,0,c
  6810  002BDA  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6811                           
  6812                           ; BSR set to: 0
  6813                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] 
      +                          = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6814  002BDC  0795               	decf	efgtoa@i& (0+255),f,b
  6815  002BDE  A0D8               	btfss	status,0,c
  6816  002BE0  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6817                           
  6818                           ; BSR set to: 0
  6819  002BE2  0EBF               	movlw	191
  6820  002BE4  6F66               	movwf	??_efgtoa& (0+255),b
  6821  002BE6  0EFF               	movlw	255
  6822  002BE8  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6823  002BEA  5165               	movf	efgtoa@c& (0+255),w,b
  6824  002BEC  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  6825  002BEE  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  6826  002BF0  5166               	movf	??_efgtoa& (0+255),w,b
  6827  002BF2  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6828  002BF4  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6829  002BF6  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6830  002BF8  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6831  002BFA  E106               	bnz	u7600
  6832  002BFC  0E1A               	movlw	26
  6833  002BFE  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6834  002C00  B0D8               	btfsc	status,0,c
  6835  002C02  D002               	goto	u7600
  6836  002C04  0E01               	movlw	1
  6837  002C06  D001               	goto	u7610
  6838  002C08                     u7600:
  6839  002C08  0E00               	movlw	0
  6840  002C0A                     u7610:
  6841  002C0A  6F79               	movwf	_efgtoa$630& (0+255),b
  6842  002C0C  6B7A               	clrf	(_efgtoa$630+1)& (0+255),b
  6843                           
  6844                           ; BSR set to: 0
  6845  002C0E  5179               	movf	_efgtoa$630& (0+255),w,b
  6846  002C10  117A               	iorwf	(_efgtoa$630+1)& (0+255),w,b
  6847  002C12  A4D8               	btfss	status,2,c
  6848  002C14  D004               	goto	l5905
  6849                           
  6850                           ; BSR set to: 0
  6851  002C16  0E00               	movlw	0
  6852  002C18  6F78               	movwf	(_efgtoa$629+1)& (0+255),b
  6853  002C1A  0E65               	movlw	101
  6854  002C1C  D003               	goto	L7
  6855  002C1E                     l5905:
  6856                           
  6857                           ; BSR set to: 0
  6858  002C1E  0E00               	movlw	0
  6859  002C20  6F78               	movwf	(_efgtoa$629+1)& (0+255),b
  6860  002C22  0E45               	movlw	69
  6861  002C24                     L7:
  6862  002C24  6F77               	movwf	_efgtoa$629& (0+255),b
  6863                           
  6864                           ; BSR set to: 0
  6865  002C26  0E4C               	movlw	low _dbuf
  6866  002C28  2595               	addwf	efgtoa@i& (0+255),w,b
  6867  002C2A  6ED9               	movwf	fsr2l,c
  6868  002C2C  0E04               	movlw	high _dbuf
  6869  002C2E  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6870  002C30  6EDA               	movwf	fsr2h,c
  6871  002C32  0060  F1DF  FFDF   	movff	_efgtoa$629,indf2
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:         --w;
  6875  002C38  078A               	decf	efgtoa@w& (0+255),f,b
  6876  002C3A  A0D8               	btfss	status,0,c
  6877  002C3C  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:         strcpy(&
      +                          dbuf[n], &dbuf[i]);
  6881  002C3E  0E4C               	movlw	low _dbuf
  6882  002C40  259D               	addwf	efgtoa@n& (0+255),w,b
  6883  002C42  6E01               	movwf	strcpy@dest^0,c
  6884  002C44  0E04               	movlw	high _dbuf
  6885  002C46  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6886  002C48  6E02               	movwf	(strcpy@dest+1)^0,c
  6887  002C4A  0E4C               	movlw	low _dbuf
  6888  002C4C  2595               	addwf	efgtoa@i& (0+255),w,b
  6889  002C4E  6E03               	movwf	strcpy@src^0,c
  6890  002C50  0E04               	movlw	high _dbuf
  6891  002C52  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6892  002C54  6E04               	movwf	(strcpy@src+1)^0,c
  6893  002C56  ECC4  F02F         	call	_strcpy	;wreg free
  6894  002C5A  EF1C  F011         	goto	l5663
  6895  002C5E                     __end_of_efgtoa:
  6896                           	opt callstack 0
  6897                           
  6898 ;; *************** function _tolower *****************
  6899 ;; Defined at:
  6900 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6901 ;; Parameters:    Size  Location     Type
  6902 ;;  c               2    6[COMRAM] int 
  6903 ;; Auto vars:     Size  Location     Type
  6904 ;;		None
  6905 ;; Return value:  Size  Location     Type
  6906 ;;                  2    6[COMRAM] int 
  6907 ;; Registers used:
  6908 ;;		wreg, status,2, status,0
  6909 ;; Tracked objects:
  6910 ;;		On entry : 0/4
  6911 ;;		On exit  : 0/0
  6912 ;;		Unchanged: 0/0
  6913 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6914 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6915 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6916 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6917 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6918 ;;Total ram usage:        8 bytes
  6919 ;; Hardware stack levels used:    1
  6920 ;; Hardware stack levels required when called:    1
  6921 ;; This function calls:
  6922 ;;		_isupper
  6923 ;; This function is called by:
  6924 ;;		_efgtoa
  6925 ;;		_vfpfcnvrt
  6926 ;; This function uses a non-reentrant model
  6927 ;;
  6928                           
  6929                           	psect	text14
  6930  006102                     __ptext14:
  6931                           	opt callstack 0
  6932  006102                     _tolower:
  6933                           	opt callstack 25
  6934                           
  6935                           ;incstack = 0
  6936  006102  0EBF               	movlw	191
  6937  006104  6E09               	movwf	??_tolower^0,c
  6938  006106  0EFF               	movlw	255
  6939  006108  6E0A               	movwf	(??_tolower+1)^0,c
  6940  00610A  0060  F01C  F00B   	movff	tolower@c,??_tolower+2
  6941  006110  0060  F020  F00C   	movff	tolower@c+1,??_tolower+3
  6942  006116  5009               	movf	??_tolower^0,w,c
  6943  006118  260B               	addwf	(??_tolower+2)^0,f,c
  6944  00611A  500A               	movf	(??_tolower+1)^0,w,c
  6945  00611C  220C               	addwfc	(??_tolower+3)^0,f,c
  6946  00611E  500C               	movf	(??_tolower+3)^0,w,c
  6947  006120  E106               	bnz	u4120
  6948  006122  0E1A               	movlw	26
  6949  006124  5C0B               	subwf	(??_tolower+2)^0,w,c
  6950  006126  B0D8               	btfsc	status,0,c
  6951  006128  D002               	goto	u4120
  6952  00612A  0E01               	movlw	1
  6953  00612C  D001               	goto	u4130
  6954  00612E                     u4120:
  6955  00612E  0E00               	movlw	0
  6956  006130                     u4130:
  6957  006130  6E0D               	movwf	_tolower$1243^0,c
  6958  006132  6A0E               	clrf	(_tolower$1243+1)^0,c
  6959  006134  500D               	movf	_tolower$1243^0,w,c
  6960  006136  100E               	iorwf	(_tolower$1243+1)^0,w,c
  6961  006138  B4D8               	btfsc	status,2,c
  6962  00613A  D006               	goto	l1519
  6963  00613C  0E20               	movlw	32
  6964  00613E  1007               	iorwf	tolower@c^0,w,c
  6965  006140  6E07               	movwf	?_tolower^0,c
  6966  006142  5008               	movf	(tolower@c+1)^0,w,c
  6967  006144  6E08               	movwf	(?_tolower+1)^0,c
  6968  006146  0012               	return	
  6969  006148                     l1519:
  6970  006148  0060  F01C  F007   	movff	tolower@c,?_tolower
  6971  00614E  0060  F020  F008   	movff	tolower@c+1,?_tolower+1
  6972  006154  0012               	return		;funcret
  6973  006156                     __end_of_tolower:
  6974                           	opt callstack 0
  6975                           
  6976 ;; *************** function _isupper *****************
  6977 ;; Defined at:
  6978 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  6979 ;; Parameters:    Size  Location     Type
  6980 ;;  c               2    0[COMRAM] int 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;		None
  6983 ;; Return value:  Size  Location     Type
  6984 ;;                  2    0[COMRAM] int 
  6985 ;; Registers used:
  6986 ;;		wreg, status,2, status,0
  6987 ;; Tracked objects:
  6988 ;;		On entry : 0/0
  6989 ;;		On exit  : 0/0
  6990 ;;		Unchanged: 0/0
  6991 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6992 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6994 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6995 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6996 ;;Total ram usage:        6 bytes
  6997 ;; Hardware stack levels used:    1
  6998 ;; This function calls:
  6999 ;;		Nothing
  7000 ;; This function is called by:
  7001 ;;		_efgtoa
  7002 ;;		_vfpfcnvrt
  7003 ;;		_tolower
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text15
  7008  0062CA                     __ptext15:
  7009                           	opt callstack 0
  7010  0062CA                     _isupper:
  7011                           	opt callstack 25
  7012                           
  7013                           ;incstack = 0
  7014  0062CA  0EBF               	movlw	191
  7015  0062CC  6E03               	movwf	??_isupper^0,c
  7016  0062CE  0EFF               	movlw	255
  7017  0062D0  6E04               	movwf	(??_isupper+1)^0,c
  7018  0062D2  0060  F004  F005   	movff	isupper@c,??_isupper+2
  7019  0062D8  0060  F008  F006   	movff	isupper@c+1,??_isupper+3
  7020  0062DE  5003               	movf	??_isupper^0,w,c
  7021  0062E0  2605               	addwf	(??_isupper+2)^0,f,c
  7022  0062E2  5004               	movf	(??_isupper+1)^0,w,c
  7023  0062E4  2206               	addwfc	(??_isupper+3)^0,f,c
  7024  0062E6  5006               	movf	(??_isupper+3)^0,w,c
  7025  0062E8  E106               	bnz	u3580
  7026  0062EA  0E1A               	movlw	26
  7027  0062EC  5C05               	subwf	(??_isupper+2)^0,w,c
  7028  0062EE  B0D8               	btfsc	status,0,c
  7029  0062F0  D002               	goto	u3580
  7030  0062F2  0E01               	movlw	1
  7031  0062F4  D001               	goto	u3590
  7032  0062F6                     u3580:
  7033  0062F6  0E00               	movlw	0
  7034  0062F8                     u3590:
  7035  0062F8  6E01               	movwf	?_isupper^0,c
  7036  0062FA  6A02               	clrf	(?_isupper+1)^0,c
  7037  0062FC  0012               	return		;funcret
  7038  0062FE                     __end_of_isupper:
  7039                           	opt callstack 0
  7040                           
  7041 ;; *************** function _strcpy *****************
  7042 ;; Defined at:
  7043 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7046 ;;		 -> dbuf(80), 
  7047 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7048 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7049 ;;		 -> dbuf(80), 
  7050 ;; Auto vars:     Size  Location     Type
  7051 ;;  d               2    8[COMRAM] PTR unsigned char 
  7052 ;;		 -> dbuf(80), 
  7053 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7054 ;;		 -> STR_16(4), STR_15(4), STR_12(4), STR_11(4), 
  7055 ;;		 -> dbuf(80), 
  7056 ;; Return value:  Size  Location     Type
  7057 ;;                  2    0[COMRAM] PTR unsigned char 
  7058 ;; Registers used:
  7059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7060 ;; Tracked objects:
  7061 ;;		On entry : 3F/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7066 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7068 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7069 ;;Total ram usage:       10 bytes
  7070 ;; Hardware stack levels used:    1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_efgtoa
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text16
  7079  005F88                     __ptext16:
  7080                           	opt callstack 0
  7081  005F88                     _strcpy:
  7082                           	opt callstack 25
  7083                           
  7084                           ; BSR set to: 0
  7085                           
  7086                           ;incstack = 0
  7087  005F88  0060  F00C  F007   	movff	strcpy@src,strcpy@s
  7088  005F8E  0060  F010  F008   	movff	strcpy@src+1,strcpy@s+1
  7089  005F94  0060  F004  F009   	movff	strcpy@dest,strcpy@d
  7090  005F9A  0060  F008  F00A   	movff	strcpy@dest+1,strcpy@d+1
  7091  005FA0                     l5617:
  7092  005FA0  5007               	movf	strcpy@s^0,w,c
  7093  005FA2  6E05               	movwf	??_strcpy^0,c
  7094  005FA4  5008               	movf	(strcpy@s+1)^0,w,c
  7095  005FA6  6E06               	movwf	(??_strcpy+1)^0,c
  7096  005FA8  4A07               	infsnz	strcpy@s^0,f,c
  7097  005FAA  2A08               	incf	(strcpy@s+1)^0,f,c
  7098  005FAC  0060  F017  FFF6   	movff	??_strcpy,tblptrl
  7099  005FB2  0060  F01B  FFF7   	movff	??_strcpy+1,tblptrh
  7100  005FB8  0E00               	movlw	low (__smallconst shr (0+16))
  7101  005FBA  6EF8               	movwf	tblptru,c
  7102  005FBC  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  7103  005FC2  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  7104  005FC8  4A09               	infsnz	strcpy@d^0,f,c
  7105  005FCA  2A0A               	incf	(strcpy@d+1)^0,f,c
  7106  005FCC  0E1F               	movlw	(high __ramtop+-1)
  7107  005FCE  64F7               	cpfsgt	tblptrh,c
  7108  005FD0  D003               	bra	u7097
  7109  005FD2  0008               	tblrd		*
  7110  005FD4  50F5               	movf	tablat,w,c
  7111  005FD6  D007               	bra	u7090
  7112  005FD8                     u7097:
  7113  005FD8  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7114  005FDE  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7115  005FE4  50E7               	movf	indf1,w,c
  7116  005FE6                     u7090:
  7117  005FE6  6EDF               	movwf	indf2,c
  7118  005FE8  50DF               	movf	indf2,w,c
  7119  005FEA  B4D8               	btfsc	status,2,c
  7120  005FEC  0012               	return	
  7121  005FEE  D7D8               	goto	l5617
  7122  005FF0                     __end_of_strcpy:
  7123                           	opt callstack 0
  7124                           
  7125 ;; *************** function _pad *****************
  7126 ;; Defined at:
  7127 ;;		line 72 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7128 ;; Parameters:    Size  Location     Type
  7129 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  7130 ;;		 -> sprintf@f(5), 
  7131 ;;  buf             2   15[COMRAM] PTR unsigned char 
  7132 ;;		 -> dbuf(80), 
  7133 ;;  p               2   17[COMRAM] int 
  7134 ;; Auto vars:     Size  Location     Type
  7135 ;;  w               2   22[COMRAM] int 
  7136 ;;  i               2   20[COMRAM] int 
  7137 ;; Return value:  Size  Location     Type
  7138 ;;                  2   14[COMRAM] int 
  7139 ;; Registers used:
  7140 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7141 ;; Tracked objects:
  7142 ;;		On entry : 0/0
  7143 ;;		On exit  : 0/0
  7144 ;;		Unchanged: 0/0
  7145 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7146 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7147 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7148 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7149 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7150 ;;Total ram usage:       10 bytes
  7151 ;; Hardware stack levels used:    1
  7152 ;; Hardware stack levels required when called:    3
  7153 ;; This function calls:
  7154 ;;		_fputc
  7155 ;;		_fputs
  7156 ;;		_strlen
  7157 ;; This function is called by:
  7158 ;;		_efgtoa
  7159 ;; This function uses a non-reentrant model
  7160 ;;
  7161                           
  7162                           	psect	text17
  7163  005956                     __ptext17:
  7164                           	opt callstack 0
  7165  005956                     _pad:
  7166                           	opt callstack 22
  7167                           
  7168                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static int pad(FI
      +                          LE *fp, char *buf, int p);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt
      +                          .c: 73: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 74:     int 
      +                          i, w;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 77:     if (flag
      +                          s & (1 << 0)) {
  7169                           
  7170                           ;incstack = 0
  7171  005956  0104               	movlb	4	; () banked
  7172  005958  A142               	btfss	_flags& (0+255),0,b
  7173  00595A  D00B               	goto	l5597
  7174                           
  7175                           ; BSR set to: 4
  7176                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:         fputs((co
      +                          nst char *)buf, fp);
  7177  00595C  0060  F040  F009   	movff	pad@buf,fputs@s
  7178  005962  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7179  005968  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7180  00596E  EC14  F031         	call	_fputs	;wreg free
  7181  005972                     l5597:
  7182                           
  7183                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ?
      +                           0 : p;
  7184  005972  BE13               	btfsc	(pad@p+1)^0,7,c
  7185  005974  D007               	goto	l5601
  7186  005976  0060  F048  F017   	movff	pad@p,pad@w
  7187  00597C  0060  F04C  F018   	movff	pad@p+1,pad@w+1
  7188  005982  D004               	goto	l571
  7189  005984                     l5601:
  7190  005984  0E00               	movlw	0
  7191  005986  6E18               	movwf	(pad@w+1)^0,c
  7192  005988  0E00               	movlw	0
  7193  00598A  6E17               	movwf	pad@w^0,c
  7194  00598C                     l571:
  7195                           
  7196                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7197  00598C  0E00               	movlw	0
  7198  00598E  6E16               	movwf	(pad@i+1)^0,c
  7199  005990  0E00               	movlw	0
  7200  005992  6E15               	movwf	pad@i^0,c
  7201                           
  7202                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7203  005994  D00B               	goto	l5607
  7204  005996                     l5603:
  7205                           
  7206                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:         fputc(' '
      +                          , fp);
  7207  005996  0E00               	movlw	0
  7208  005998  6E02               	movwf	(fputc@c+1)^0,c
  7209  00599A  0E20               	movlw	32
  7210  00599C  6E01               	movwf	fputc@c^0,c
  7211  00599E  0060  F03C  F003   	movff	pad@fp,fputc@fp
  7212  0059A4  EC60  F02E         	call	_fputc	;wreg free
  7213                           
  7214                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7215  0059A8  4A15               	infsnz	pad@i^0,f,c
  7216  0059AA  2A16               	incf	(pad@i+1)^0,f,c
  7217  0059AC                     l5607:
  7218                           
  7219                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7220  0059AC  5017               	movf	pad@w^0,w,c
  7221  0059AE  5C15               	subwf	pad@i^0,w,c
  7222  0059B0  5016               	movf	(pad@i+1)^0,w,c
  7223  0059B2  0A80               	xorlw	128
  7224  0059B4  6E14               	movwf	??_pad^0,c
  7225  0059B6  5018               	movf	(pad@w+1)^0,w,c
  7226  0059B8  0A80               	xorlw	128
  7227  0059BA  5814               	subwfb	??_pad^0,w,c
  7228  0059BC  A0D8               	btfss	status,0,c
  7229  0059BE  D7EB               	goto	l5603
  7230                           
  7231                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if (!(flags &
      +                           (1 << 0))) {
  7232  0059C0  0104               	movlb	4	; () banked
  7233  0059C2  B142               	btfsc	_flags& (0+255),0,b
  7234  0059C4  D00B               	goto	l5611
  7235                           
  7236                           ; BSR set to: 4
  7237                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:         fputs((co
      +                          nst char *)buf, fp);
  7238  0059C6  0060  F040  F009   	movff	pad@buf,fputs@s
  7239  0059CC  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7240  0059D2  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7241  0059D8  EC14  F031         	call	_fputs	;wreg free
  7242  0059DC                     l5611:
  7243                           
  7244                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     return strlen
      +                          (buf) + w;
  7245  0059DC  0060  F040  F001   	movff	pad@buf,strlen@s
  7246  0059E2  0060  F044  F002   	movff	pad@buf+1,strlen@s+1
  7247  0059E8  EC99  F031         	call	_strlen	;wreg free
  7248  0059EC  5017               	movf	pad@w^0,w,c
  7249  0059EE  2401               	addwf	?_strlen^0,w,c
  7250  0059F0  6E0F               	movwf	?_pad^0,c
  7251  0059F2  5018               	movf	(pad@w+1)^0,w,c
  7252  0059F4  2002               	addwfc	(?_strlen+1)^0,w,c
  7253  0059F6  6E10               	movwf	(?_pad+1)^0,c
  7254  0059F8  0012               	return		;funcret
  7255  0059FA                     __end_of_pad:
  7256                           	opt callstack 0
  7257                           
  7258 ;; *************** function _strlen *****************
  7259 ;; Defined at:
  7260 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7261 ;; Parameters:    Size  Location     Type
  7262 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7263 ;;		 -> dbuf(80), 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7266 ;;		 -> dbuf(80), 
  7267 ;; Return value:  Size  Location     Type
  7268 ;;                  2    0[COMRAM] unsigned int 
  7269 ;; Registers used:
  7270 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7271 ;; Tracked objects:
  7272 ;;		On entry : 0/4
  7273 ;;		On exit  : 0/0
  7274 ;;		Unchanged: 0/0
  7275 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7279 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7280 ;;Total ram usage:        4 bytes
  7281 ;; Hardware stack levels used:    1
  7282 ;; This function calls:
  7283 ;;		Nothing
  7284 ;; This function is called by:
  7285 ;;		_pad
  7286 ;; This function uses a non-reentrant model
  7287 ;;
  7288                           
  7289                           	psect	text18
  7290  006332                     __ptext18:
  7291                           	opt callstack 0
  7292  006332                     _strlen:
  7293                           	opt callstack 24
  7294                           
  7295                           ;incstack = 0
  7296  006332  0060  F004  F003   	movff	strlen@s,strlen@a
  7297  006338  0060  F008  F004   	movff	strlen@s+1,strlen@a+1
  7298  00633E  D002               	goto	l5587
  7299  006340                     l5585:
  7300  006340  4A01               	infsnz	strlen@s^0,f,c
  7301  006342  2A02               	incf	(strlen@s+1)^0,f,c
  7302  006344                     l5587:
  7303  006344  0060  F007  FFD9   	movff	strlen@s,fsr2l
  7304  00634A  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  7305  006350  50DF               	movf	indf2,w,c
  7306  006352  A4D8               	btfss	status,2,c
  7307  006354  D7F5               	goto	l5585
  7308  006356  5003               	movf	strlen@a^0,w,c
  7309  006358  5C01               	subwf	strlen@s^0,w,c
  7310  00635A  6E01               	movwf	?_strlen^0,c
  7311  00635C  5004               	movf	(strlen@a+1)^0,w,c
  7312  00635E  5802               	subwfb	(strlen@s+1)^0,w,c
  7313  006360  6E02               	movwf	(?_strlen+1)^0,c
  7314  006362  0012               	return		;funcret
  7315  006364                     __end_of_strlen:
  7316                           	opt callstack 0
  7317                           
  7318 ;; *************** function _fputs *****************
  7319 ;; Defined at:
  7320 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7321 ;; Parameters:    Size  Location     Type
  7322 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7323 ;;		 -> dbuf(80), 
  7324 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  7325 ;;		 -> sprintf@f(5), 
  7326 ;; Auto vars:     Size  Location     Type
  7327 ;;  i               2   12[COMRAM] int 
  7328 ;;  c               1   11[COMRAM] unsigned char 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    8[COMRAM] int 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7333 ;; Tracked objects:
  7334 ;;		On entry : 3F/4
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7338 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7339 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7342 ;;Total ram usage:        6 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    2
  7345 ;; This function calls:
  7346 ;;		_fputc
  7347 ;; This function is called by:
  7348 ;;		_pad
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text19
  7353  006228                     __ptext19:
  7354                           	opt callstack 0
  7355  006228                     _fputs:
  7356                           	opt callstack 22
  7357                           
  7358                           ; BSR set to: 4
  7359                           
  7360                           ;incstack = 0
  7361  006228  0E00               	movlw	0
  7362  00622A  6E0E               	movwf	(fputs@i+1)^0,c
  7363  00622C  0E00               	movlw	0
  7364  00622E  6E0D               	movwf	fputs@i^0,c
  7365  006230  D00B               	goto	l5581
  7366  006232                     l5577:
  7367  006232  0060  F030  F001   	movff	fputs@c,fputc@c
  7368  006238  6A02               	clrf	(fputc@c+1)^0,c
  7369  00623A  0060  F02C  F003   	movff	fputs@fp,fputc@fp
  7370  006240  EC60  F02E         	call	_fputc	;wreg free
  7371  006244  4A0D               	infsnz	fputs@i^0,f,c
  7372  006246  2A0E               	incf	(fputs@i+1)^0,f,c
  7373  006248                     l5581:
  7374  006248  500D               	movf	fputs@i^0,w,c
  7375  00624A  2409               	addwf	fputs@s^0,w,c
  7376  00624C  6ED9               	movwf	fsr2l,c
  7377  00624E  500E               	movf	(fputs@i+1)^0,w,c
  7378  006250  200A               	addwfc	(fputs@s+1)^0,w,c
  7379  006252  6EDA               	movwf	fsr2h,c
  7380  006254  50DF               	movf	indf2,w,c
  7381  006256  6E0C               	movwf	fputs@c^0,c
  7382  006258  500C               	movf	fputs@c^0,w,c
  7383  00625A  B4D8               	btfsc	status,2,c
  7384  00625C  0012               	return	
  7385  00625E  D7E9               	goto	l5577
  7386  006260                     __end_of_fputs:
  7387                           	opt callstack 0
  7388                           
  7389 ;; *************** function _fputc *****************
  7390 ;; Defined at:
  7391 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  c               2    0[COMRAM] int 
  7394 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7395 ;;		 -> sprintf@f(5), 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;		None
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  2    0[COMRAM] int 
  7400 ;; Registers used:
  7401 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7407 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7411 ;;Total ram usage:        8 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    1
  7414 ;; This function calls:
  7415 ;;		_putch
  7416 ;; This function is called by:
  7417 ;;		_pad
  7418 ;;		_vfpfcnvrt
  7419 ;;		_fputs
  7420 ;; This function uses a non-reentrant model
  7421 ;;
  7422                           
  7423                           	psect	text20
  7424  005CC0                     __ptext20:
  7425                           	opt callstack 0
  7426  005CC0                     _fputc:
  7427                           	opt callstack 25
  7428                           
  7429                           ;incstack = 0
  7430  005CC0  5003               	movf	fputc@fp^0,w,c
  7431  005CC2  B4D8               	btfsc	status,2,c
  7432  005CC4  D003               	goto	u3530
  7433  005CC6  5003               	movf	fputc@fp^0,w,c
  7434  005CC8  A4D8               	btfss	status,2,c
  7435  005CCA  D004               	goto	l3555
  7436  005CCC                     u3530:
  7437  005CCC  5001               	movf	fputc@c^0,w,c
  7438  005CCE  ECE3  F031         	call	_putch
  7439  005CD2  0012               	return	
  7440  005CD4                     l3555:
  7441  005CD4  5003               	movf	fputc@fp^0,w,c
  7442  005CD6  6ED9               	movwf	fsr2l,c
  7443  005CD8  6ADA               	clrf	fsr2h,c
  7444  005CDA  0E03               	movlw	3
  7445  005CDC  26D9               	addwf	fsr2l,f,c
  7446  005CDE  50DE               	movf	postinc2,w,c
  7447  005CE0  10DE               	iorwf	postinc2,w,c
  7448  005CE2  B4D8               	btfsc	status,2,c
  7449  005CE4  D014               	goto	u3550
  7450  005CE6  5003               	movf	fputc@fp^0,w,c
  7451  005CE8  6ED9               	movwf	fsr2l,c
  7452  005CEA  6ADA               	clrf	fsr2h,c
  7453  005CEC  0E03               	movlw	3
  7454  005CEE  26D9               	addwf	fsr2l,f,c
  7455  005CF0  5003               	movf	fputc@fp^0,w,c
  7456  005CF2  6EE1               	movwf	fsr1l,c
  7457  005CF4  6AE2               	clrf	fsr1h,c
  7458  005CF6  0E01               	movlw	1
  7459  005CF8  26E1               	addwf	fsr1l,f,c
  7460  005CFA  50DE               	movf	postinc2,w,c
  7461  005CFC  5CE6               	subwf	postinc1,w,c
  7462  005CFE  50E6               	movf	postinc1,w,c
  7463  005D00  0A80               	xorlw	128
  7464  005D02  6E08               	movwf	(??_fputc+4)^0,c
  7465  005D04  50DE               	movf	postinc2,w,c
  7466  005D06  0A80               	xorlw	128
  7467  005D08  5808               	subwfb	(??_fputc+4)^0,w,c
  7468  005D0A  B0D8               	btfsc	status,0,c
  7469  005D0C  0012               	return	
  7470  005D0E                     u3550:
  7471  005D0E  5003               	movf	fputc@fp^0,w,c
  7472  005D10  6ED9               	movwf	fsr2l,c
  7473  005D12  6ADA               	clrf	fsr2h,c
  7474  005D14  0E01               	movlw	1
  7475  005D16  26D9               	addwf	fsr2l,f,c
  7476  005D18  50DF               	movf	indf2,w,c
  7477  005D1A  6E04               	movwf	??_fputc^0,c
  7478  005D1C  5003               	movf	fputc@fp^0,w,c
  7479  005D1E  6ED9               	movwf	fsr2l,c
  7480  005D20  6ADA               	clrf	fsr2h,c
  7481  005D22  50DF               	movf	indf2,w,c
  7482  005D24  2404               	addwf	??_fputc^0,w,c
  7483  005D26  6ED9               	movwf	fsr2l,c
  7484  005D28  6ADA               	clrf	fsr2h,c
  7485  005D2A  0060  F007  FFDF   	movff	fputc@c,indf2
  7486  005D30  5003               	movf	fputc@fp^0,w,c
  7487  005D32  6ED9               	movwf	fsr2l,c
  7488  005D34  6ADA               	clrf	fsr2h,c
  7489  005D36  0E01               	movlw	1
  7490  005D38  26D9               	addwf	fsr2l,f,c
  7491  005D3A  2ADE               	incf	postinc2,f,c
  7492  005D3C  0E00               	movlw	0
  7493  005D3E  22DD               	addwfc	postdec2,f,c
  7494  005D40  0012               	return		;funcret
  7495  005D42                     __end_of_fputc:
  7496                           	opt callstack 0
  7497                           
  7498 ;; *************** function _putch *****************
  7499 ;; Defined at:
  7500 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  c               1    wreg     unsigned char 
  7503 ;; Auto vars:     Size  Location     Type
  7504 ;;  c               1    0[COMRAM] unsigned char 
  7505 ;; Return value:  Size  Location     Type
  7506 ;;                  1    wreg      void 
  7507 ;; Registers used:
  7508 ;;		wreg
  7509 ;; Tracked objects:
  7510 ;;		On entry : 0/0
  7511 ;;		On exit  : 0/0
  7512 ;;		Unchanged: 0/0
  7513 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7518 ;;Total ram usage:        0 bytes
  7519 ;; Hardware stack levels used:    1
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_fputc
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text21
  7528  0063C6                     __ptext21:
  7529                           	opt callstack 0
  7530  0063C6                     _putch:
  7531                           	opt callstack 25
  7532                           
  7533                           ;incstack = 0
  7534  0063C6  0012               	return		;funcret
  7535  0063C8                     __end_of_putch:
  7536                           	opt callstack 0
  7537                           
  7538 ;; *************** function _floorf *****************
  7539 ;; Defined at:
  7540 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  x               4   55[COMRAM] float 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  u               4   71[COMRAM] struct .
  7545 ;;  m               4   65[COMRAM] unsigned long 
  7546 ;;  e               2   69[COMRAM] int 
  7547 ;; Return value:  Size  Location     Type
  7548 ;;                  4   55[COMRAM] float 
  7549 ;; Registers used:
  7550 ;;		wreg, status,2, status,0
  7551 ;; Tracked objects:
  7552 ;;		On entry : 0/0
  7553 ;;		On exit  : 0/0
  7554 ;;		Unchanged: 0/0
  7555 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7556 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7559 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7560 ;;Total ram usage:       20 bytes
  7561 ;; Hardware stack levels used:    1
  7562 ;; This function calls:
  7563 ;;		Nothing
  7564 ;; This function is called by:
  7565 ;;		_efgtoa
  7566 ;; This function uses a non-reentrant model
  7567 ;;
  7568                           
  7569                           	psect	text22
  7570  004B20                     __ptext22:
  7571                           	opt callstack 0
  7572  004B20                     _floorf:
  7573                           	opt callstack 25
  7574                           
  7575                           ;incstack = 0
  7576  004B20  0061  F0A0  F048   	movff	floorf@F524,floorf@u
  7577  004B26  0061  F0A4  F049   	movff	floorf@F524+1,floorf@u+1
  7578  004B2C  0061  F0A8  F04A   	movff	floorf@F524+2,floorf@u+2
  7579  004B32  0061  F0AC  F04B   	movff	floorf@F524+3,floorf@u+3
  7580  004B38  0060  F0E0  F048   	movff	floorf@x,floorf@u
  7581  004B3E  0060  F0E4  F049   	movff	floorf@x+1,floorf@u+1
  7582  004B44  0060  F0E8  F04A   	movff	floorf@x+2,floorf@u+2
  7583  004B4A  0060  F0EC  F04B   	movff	floorf@x+3,floorf@u+3
  7584  004B50  0E81               	movlw	129
  7585  004B52  6E3C               	movwf	??_floorf^0,c
  7586  004B54  0EFF               	movlw	255
  7587  004B56  6E3D               	movwf	(??_floorf+1)^0,c
  7588  004B58  0060  F120  F03E   	movff	floorf@u,??_floorf+2
  7589  004B5E  0060  F124  F03F   	movff	floorf@u+1,??_floorf+3
  7590  004B64  0060  F128  F040   	movff	floorf@u+2,??_floorf+4
  7591  004B6A  0060  F12C  F041   	movff	floorf@u+3,??_floorf+5
  7592  004B70  0E18               	movlw	24
  7593  004B72  D005               	goto	u4150
  7594  004B74                     u4155:
  7595  004B74  90D8               	bcf	status,0,c
  7596  004B76  3241               	rrcf	(??_floorf+5)^0,f,c
  7597  004B78  3240               	rrcf	(??_floorf+4)^0,f,c
  7598  004B7A  323F               	rrcf	(??_floorf+3)^0,f,c
  7599  004B7C  323E               	rrcf	(??_floorf+2)^0,f,c
  7600  004B7E                     u4150:
  7601  004B7E  2EE8               	decfsz	wreg,f,c
  7602  004B80  D7F9               	goto	u4155
  7603  004B82  503E               	movf	(??_floorf+2)^0,w,c
  7604  004B84  243C               	addwf	??_floorf^0,w,c
  7605  004B86  6E46               	movwf	floorf@e^0,c
  7606  004B88  0E00               	movlw	0
  7607  004B8A  203D               	addwfc	(??_floorf+1)^0,w,c
  7608  004B8C  6E47               	movwf	(floorf@e+1)^0,c
  7609  004B8E  BE47               	btfsc	(floorf@e+1)^0,7,c
  7610  004B90  D013               	goto	l3851
  7611  004B92  5047               	movf	(floorf@e+1)^0,w,c
  7612  004B94  E104               	bnz	u4160
  7613  004B96  0E17               	movlw	23
  7614  004B98  5C46               	subwf	floorf@e^0,w,c
  7615  004B9A  A0D8               	btfss	status,0,c
  7616  004B9C  D00D               	goto	l3851
  7617  004B9E                     u4160:
  7618  004B9E  0060  F0E0  F038   	movff	floorf@x,?_floorf
  7619  004BA4  0060  F0E4  F039   	movff	floorf@x+1,?_floorf+1
  7620  004BAA  0060  F0E8  F03A   	movff	floorf@x+2,?_floorf+2
  7621  004BB0  0060  F0EC  F03B   	movff	floorf@x+3,?_floorf+3
  7622  004BB6  0012               	return	
  7623  004BB8                     l3851:
  7624  004BB8  BE47               	btfsc	(floorf@e+1)^0,7,c
  7625  004BBA  D064               	goto	l3861
  7626  004BBC  0060  F118  F03C   	movff	floorf@e,??_floorf
  7627  004BC2  0EFF               	movlw	255
  7628  004BC4  6E3D               	movwf	(??_floorf+1)^0,c
  7629  004BC6  0EFF               	movlw	255
  7630  004BC8  6E3E               	movwf	(??_floorf+2)^0,c
  7631  004BCA  0E7F               	movlw	127
  7632  004BCC  6E3F               	movwf	(??_floorf+3)^0,c
  7633  004BCE  0E00               	movlw	0
  7634  004BD0  6E40               	movwf	(??_floorf+4)^0,c
  7635  004BD2                     u4185:
  7636  004BD2  663C               	tstfsz	??_floorf^0,c
  7637  004BD4  D001               	goto	u4186
  7638  004BD6  D007               	goto	u4187
  7639  004BD8                     u4186:
  7640  004BD8  3440               	rlcf	(??_floorf+4)^0,w,c
  7641  004BDA  3240               	rrcf	(??_floorf+4)^0,f,c
  7642  004BDC  323F               	rrcf	(??_floorf+3)^0,f,c
  7643  004BDE  323E               	rrcf	(??_floorf+2)^0,f,c
  7644  004BE0  323D               	rrcf	(??_floorf+1)^0,f,c
  7645  004BE2  2E3C               	decfsz	??_floorf^0,f,c
  7646  004BE4  D7F6               	goto	u4185
  7647  004BE6                     u4187:
  7648  004BE6  0060  F0F4  F042   	movff	??_floorf+1,floorf@m
  7649  004BEC  0060  F0F8  F043   	movff	??_floorf+2,floorf@m+1
  7650  004BF2  0060  F0FC  F044   	movff	??_floorf+3,floorf@m+2
  7651  004BF8  0060  F100  F045   	movff	??_floorf+4,floorf@m+3
  7652  004BFE  5042               	movf	floorf@m^0,w,c
  7653  004C00  1448               	andwf	floorf@u^0,w,c
  7654  004C02  6E3C               	movwf	??_floorf^0,c
  7655  004C04  5043               	movf	(floorf@m+1)^0,w,c
  7656  004C06  1449               	andwf	(floorf@u+1)^0,w,c
  7657  004C08  6E3D               	movwf	(??_floorf+1)^0,c
  7658  004C0A  5044               	movf	(floorf@m+2)^0,w,c
  7659  004C0C  144A               	andwf	(floorf@u+2)^0,w,c
  7660  004C0E  6E3E               	movwf	(??_floorf+2)^0,c
  7661  004C10  5045               	movf	(floorf@m+3)^0,w,c
  7662  004C12  144B               	andwf	(floorf@u+3)^0,w,c
  7663  004C14  6E3F               	movwf	(??_floorf+3)^0,c
  7664  004C16  503C               	movf	??_floorf^0,w,c
  7665  004C18  103D               	iorwf	(??_floorf+1)^0,w,c
  7666  004C1A  103E               	iorwf	(??_floorf+2)^0,w,c
  7667  004C1C  103F               	iorwf	(??_floorf+3)^0,w,c
  7668  004C1E  B4D8               	btfsc	status,2,c
  7669  004C20  D7BE               	goto	u4160
  7670  004C22  0060  F120  F03C   	movff	floorf@u,??_floorf
  7671  004C28  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7672  004C2E  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7673  004C34  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7674  004C3A  0E20               	movlw	32
  7675  004C3C  D005               	goto	u4200
  7676  004C3E                     u4205:
  7677  004C3E  90D8               	bcf	status,0,c
  7678  004C40  323F               	rrcf	(??_floorf+3)^0,f,c
  7679  004C42  323E               	rrcf	(??_floorf+2)^0,f,c
  7680  004C44  323D               	rrcf	(??_floorf+1)^0,f,c
  7681  004C46  323C               	rrcf	??_floorf^0,f,c
  7682  004C48                     u4200:
  7683  004C48  2EE8               	decfsz	wreg,f,c
  7684  004C4A  D7F9               	goto	u4205
  7685  004C4C  503C               	movf	??_floorf^0,w,c
  7686  004C4E  B4D8               	btfsc	status,2,c
  7687  004C50  D008               	goto	l1433
  7688  004C52  5042               	movf	floorf@m^0,w,c
  7689  004C54  2648               	addwf	floorf@u^0,f,c
  7690  004C56  5043               	movf	(floorf@m+1)^0,w,c
  7691  004C58  2249               	addwfc	(floorf@u+1)^0,f,c
  7692  004C5A  5044               	movf	(floorf@m+2)^0,w,c
  7693  004C5C  224A               	addwfc	(floorf@u+2)^0,f,c
  7694  004C5E  5045               	movf	(floorf@m+3)^0,w,c
  7695  004C60  224B               	addwfc	(floorf@u+3)^0,f,c
  7696  004C62                     l1433:
  7697  004C62  1C42               	comf	floorf@m^0,w,c
  7698  004C64  6E3C               	movwf	??_floorf^0,c
  7699  004C66  1C43               	comf	(floorf@m+1)^0,w,c
  7700  004C68  6E3D               	movwf	(??_floorf+1)^0,c
  7701  004C6A  1C44               	comf	(floorf@m+2)^0,w,c
  7702  004C6C  6E3E               	movwf	(??_floorf+2)^0,c
  7703  004C6E  1C45               	comf	(floorf@m+3)^0,w,c
  7704  004C70  6E3F               	movwf	(??_floorf+3)^0,c
  7705  004C72  503C               	movf	??_floorf^0,w,c
  7706  004C74  1648               	andwf	floorf@u^0,f,c
  7707  004C76  503D               	movf	(??_floorf+1)^0,w,c
  7708  004C78  1649               	andwf	(floorf@u+1)^0,f,c
  7709  004C7A  503E               	movf	(??_floorf+2)^0,w,c
  7710  004C7C  164A               	andwf	(floorf@u+2)^0,f,c
  7711  004C7E  503F               	movf	(??_floorf+3)^0,w,c
  7712  004C80  164B               	andwf	(floorf@u+3)^0,f,c
  7713  004C82  D036               	goto	l3869
  7714  004C84                     l3861:
  7715  004C84  0060  F120  F03C   	movff	floorf@u,??_floorf
  7716  004C8A  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7717  004C90  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7718  004C96  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7719  004C9C  0E20               	movlw	32
  7720  004C9E  D005               	goto	u4220
  7721  004CA0                     u4225:
  7722  004CA0  90D8               	bcf	status,0,c
  7723  004CA2  323F               	rrcf	(??_floorf+3)^0,f,c
  7724  004CA4  323E               	rrcf	(??_floorf+2)^0,f,c
  7725  004CA6  323D               	rrcf	(??_floorf+1)^0,f,c
  7726  004CA8  323C               	rrcf	??_floorf^0,f,c
  7727  004CAA                     u4220:
  7728  004CAA  2EE8               	decfsz	wreg,f,c
  7729  004CAC  D7F9               	goto	u4225
  7730  004CAE  663C               	tstfsz	??_floorf^0,c
  7731  004CB0  D008               	goto	l3865
  7732  004CB2  0E00               	movlw	0
  7733  004CB4  6E48               	movwf	floorf@u^0,c
  7734  004CB6  0E00               	movlw	0
  7735  004CB8  6E49               	movwf	(floorf@u+1)^0,c
  7736  004CBA  0E00               	movlw	0
  7737  004CBC  6E4A               	movwf	(floorf@u+2)^0,c
  7738  004CBE  0E00               	movlw	0
  7739  004CC0  D016               	goto	L8
  7740  004CC2                     l3865:
  7741  004CC2  90D8               	bcf	status,0,c
  7742  004CC4  3448               	rlcf	floorf@u^0,w,c
  7743  004CC6  6E3C               	movwf	??_floorf^0,c
  7744  004CC8  3449               	rlcf	(floorf@u+1)^0,w,c
  7745  004CCA  6E3D               	movwf	(??_floorf+1)^0,c
  7746  004CCC  344A               	rlcf	(floorf@u+2)^0,w,c
  7747  004CCE  6E3E               	movwf	(??_floorf+2)^0,c
  7748  004CD0  344B               	rlcf	(floorf@u+3)^0,w,c
  7749  004CD2  6E3F               	movwf	(??_floorf+3)^0,c
  7750  004CD4  503C               	movf	??_floorf^0,w,c
  7751  004CD6  103D               	iorwf	(??_floorf+1)^0,w,c
  7752  004CD8  103E               	iorwf	(??_floorf+2)^0,w,c
  7753  004CDA  103F               	iorwf	(??_floorf+3)^0,w,c
  7754  004CDC  B4D8               	btfsc	status,2,c
  7755  004CDE  D008               	goto	l3869
  7756  004CE0  0E00               	movlw	0
  7757  004CE2  6E48               	movwf	floorf@u^0,c
  7758  004CE4  0E00               	movlw	0
  7759  004CE6  6E49               	movwf	(floorf@u+1)^0,c
  7760  004CE8  0E80               	movlw	128
  7761  004CEA  6E4A               	movwf	(floorf@u+2)^0,c
  7762  004CEC  0EBF               	movlw	191
  7763  004CEE                     L8:
  7764  004CEE  6E4B               	movwf	(floorf@u+3)^0,c
  7765  004CF0                     l3869:
  7766  004CF0  0060  F120  F038   	movff	floorf@u,?_floorf
  7767  004CF6  0060  F124  F039   	movff	floorf@u+1,?_floorf+1
  7768  004CFC  0060  F128  F03A   	movff	floorf@u+2,?_floorf+2
  7769  004D02  0060  F12C  F03B   	movff	floorf@u+3,?_floorf+3
  7770  004D08  0012               	return		;funcret
  7771  004D0A                     __end_of_floorf:
  7772                           	opt callstack 0
  7773                           
  7774 ;; *************** function ___fpclassifyf *****************
  7775 ;; Defined at:
  7776 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  7777 ;; Parameters:    Size  Location     Type
  7778 ;;  x               4    0[COMRAM] float 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  u               4   10[COMRAM] struct .
  7781 ;;  e               2    8[COMRAM] int 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  2    0[COMRAM] int 
  7784 ;; Registers used:
  7785 ;;		wreg, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/4
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7791 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7792 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7793 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7794 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7795 ;;Total ram usage:       14 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; This function calls:
  7798 ;;		Nothing
  7799 ;; This function is called by:
  7800 ;;		_efgtoa
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text23
  7805  0053BC                     __ptext23:
  7806                           	opt callstack 0
  7807  0053BC                     ___fpclassifyf:
  7808                           	opt callstack 25
  7809                           
  7810                           ;incstack = 0
  7811  0053BC  0061  F0B0  F00B   	movff	___fpclassifyf@F463,___fpclassifyf@u
  7812  0053C2  0061  F0B4  F00C   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  7813  0053C8  0061  F0B8  F00D   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  7814  0053CE  0061  F0BC  F00E   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  7815  0053D4  0060  F004  F00B   	movff	___fpclassifyf@x,___fpclassifyf@u
  7816  0053DA  0060  F008  F00C   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7817  0053E0  0060  F00C  F00D   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7818  0053E6  0060  F010  F00E   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7819  0053EC  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  7820  0053F2  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7821  0053F8  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7822  0053FE  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7823  005404  0E18               	movlw	24
  7824  005406  D005               	goto	u4030
  7825  005408                     u4035:
  7826  005408  90D8               	bcf	status,0,c
  7827  00540A  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7828  00540C  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7829  00540E  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7830  005410  3205               	rrcf	??___fpclassifyf^0,f,c
  7831  005412                     u4030:
  7832  005412  2EE8               	decfsz	wreg,f,c
  7833  005414  D7F9               	goto	u4035
  7834  005416  5005               	movf	??___fpclassifyf^0,w,c
  7835  005418  6E09               	movwf	___fpclassifyf@e^0,c
  7836  00541A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7837  00541C  5009               	movf	___fpclassifyf@e^0,w,c
  7838  00541E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7839  005420  A4D8               	btfss	status,2,c
  7840  005422  D019               	goto	l3821
  7841  005424  90D8               	bcf	status,0,c
  7842  005426  340B               	rlcf	___fpclassifyf@u^0,w,c
  7843  005428  6E05               	movwf	??___fpclassifyf^0,c
  7844  00542A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7845  00542C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7846  00542E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7847  005430  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7848  005432  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7849  005434  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7850  005436  5005               	movf	??___fpclassifyf^0,w,c
  7851  005438  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7852  00543A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7853  00543C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7854  00543E  A4D8               	btfss	status,2,c
  7855  005440  D005               	goto	l3817
  7856  005442  0E00               	movlw	0
  7857  005444  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7858  005446  0E02               	movlw	2
  7859  005448  6E01               	movwf	?___fpclassifyf^0,c
  7860  00544A  0012               	return	
  7861  00544C                     l3817:
  7862  00544C  0E00               	movlw	0
  7863  00544E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7864  005450  0E03               	movlw	3
  7865  005452  6E01               	movwf	?___fpclassifyf^0,c
  7866  005454  0012               	return	
  7867  005456                     l3821:
  7868  005456  2809               	incf	___fpclassifyf@e^0,w,c
  7869  005458  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7870  00545A  A4D8               	btfss	status,2,c
  7871  00545C  D020               	goto	l3827
  7872  00545E  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  7873  005464  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7874  00546A  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7875  005470  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7876  005476  0E09               	movlw	9
  7877  005478                     u4075:
  7878  005478  90D8               	bcf	status,0,c
  7879  00547A  3605               	rlcf	??___fpclassifyf^0,f,c
  7880  00547C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7881  00547E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7882  005480  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7883  005482  2EE8               	decfsz	wreg,f,c
  7884  005484  D7F9               	goto	u4075
  7885  005486  5005               	movf	??___fpclassifyf^0,w,c
  7886  005488  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7887  00548A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7888  00548C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7889  00548E  A4D8               	btfss	status,2,c
  7890  005490  D002               	goto	u4080
  7891  005492  0E01               	movlw	1
  7892  005494  D001               	goto	u4090
  7893  005496                     u4080:
  7894  005496  0E00               	movlw	0
  7895  005498                     u4090:
  7896  005498  6E01               	movwf	?___fpclassifyf^0,c
  7897  00549A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7898  00549C  0012               	return	
  7899  00549E                     l3827:
  7900  00549E  0E00               	movlw	0
  7901  0054A0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7902  0054A2  0E04               	movlw	4
  7903  0054A4  6E01               	movwf	?___fpclassifyf^0,c
  7904  0054A6  0012               	return		;funcret
  7905  0054A8                     __end_of___fpclassifyf:
  7906                           	opt callstack 0
  7907                           
  7908 ;; *************** function ___fltol *****************
  7909 ;; Defined at:
  7910 ;;		line 43 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7911 ;; Parameters:    Size  Location     Type
  7912 ;;  f1              4    0[COMRAM] int 
  7913 ;; Auto vars:     Size  Location     Type
  7914 ;;  exp1            1    9[COMRAM] unsigned char 
  7915 ;;  sign1           1    8[COMRAM] unsigned char 
  7916 ;; Return value:  Size  Location     Type
  7917 ;;                  4    0[COMRAM] long 
  7918 ;; Registers used:
  7919 ;;		wreg, status,2, status,0
  7920 ;; Tracked objects:
  7921 ;;		On entry : 0/0
  7922 ;;		On exit  : 0/0
  7923 ;;		Unchanged: 0/0
  7924 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7927 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7928 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7929 ;;Total ram usage:       10 bytes
  7930 ;; Hardware stack levels used:    1
  7931 ;; This function calls:
  7932 ;;		Nothing
  7933 ;; This function is called by:
  7934 ;;		_efgtoa
  7935 ;; This function uses a non-reentrant model
  7936 ;;
  7937                           
  7938                           	psect	text24
  7939  005732                     __ptext24:
  7940                           	opt callstack 0
  7941  005732                     ___fltol:
  7942                           	opt callstack 25
  7943                           
  7944                           ;incstack = 0
  7945  005732  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7946  005734  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7947  005736  6E0A               	movwf	___fltol@exp1^0,c
  7948  005738  500A               	movf	___fltol@exp1^0,w,c
  7949  00573A  A4D8               	btfss	status,2,c
  7950  00573C  D009               	goto	l4289
  7951  00573E                     u4890:
  7952  00573E  0E00               	movlw	0
  7953  005740  6E01               	movwf	?___fltol^0,c
  7954  005742  0E00               	movlw	0
  7955  005744  6E02               	movwf	(?___fltol+1)^0,c
  7956  005746  0E00               	movlw	0
  7957  005748  6E03               	movwf	(?___fltol+2)^0,c
  7958  00574A  0E00               	movlw	0
  7959  00574C  6E04               	movwf	(?___fltol+3)^0,c
  7960  00574E  0012               	return	
  7961  005750                     l4289:
  7962  005750  0060  F004  F005   	movff	___fltol@f1,??___fltol
  7963  005756  0060  F008  F006   	movff	___fltol@f1+1,??___fltol+1
  7964  00575C  0060  F00C  F007   	movff	___fltol@f1+2,??___fltol+2
  7965  005762  0060  F010  F008   	movff	___fltol@f1+3,??___fltol+3
  7966  005768  0E20               	movlw	32
  7967  00576A  D005               	goto	u4900
  7968  00576C                     u4905:
  7969  00576C  90D8               	bcf	status,0,c
  7970  00576E  3208               	rrcf	(??___fltol+3)^0,f,c
  7971  005770  3207               	rrcf	(??___fltol+2)^0,f,c
  7972  005772  3206               	rrcf	(??___fltol+1)^0,f,c
  7973  005774  3205               	rrcf	??___fltol^0,f,c
  7974  005776                     u4900:
  7975  005776  2EE8               	decfsz	wreg,f,c
  7976  005778  D7F9               	goto	u4905
  7977  00577A  5005               	movf	??___fltol^0,w,c
  7978  00577C  6E09               	movwf	___fltol@sign1^0,c
  7979  00577E  8E03               	bsf	(___fltol@f1+2)^0,7,c
  7980  005780  0EFF               	movlw	255
  7981  005782  1601               	andwf	___fltol@f1^0,f,c
  7982  005784  0EFF               	movlw	255
  7983  005786  1602               	andwf	(___fltol@f1+1)^0,f,c
  7984  005788  0EFF               	movlw	255
  7985  00578A  1603               	andwf	(___fltol@f1+2)^0,f,c
  7986  00578C  0E00               	movlw	0
  7987  00578E  1604               	andwf	(___fltol@f1+3)^0,f,c
  7988  005790  0E96               	movlw	150
  7989  005792  5E0A               	subwf	___fltol@exp1^0,f,c
  7990  005794  AE0A               	btfss	___fltol@exp1^0,7,c
  7991  005796  D00D               	goto	l4309
  7992  005798  500A               	movf	___fltol@exp1^0,w,c
  7993  00579A  0A80               	xorlw	128
  7994  00579C  0F97               	addlw	151
  7995  00579E  A0D8               	btfss	status,0,c
  7996  0057A0  D7CE               	goto	u4890
  7997  0057A2                     l4305:
  7998  0057A2  90D8               	bcf	status,0,c
  7999  0057A4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8000  0057A6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8001  0057A8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8002  0057AA  3201               	rrcf	___fltol@f1^0,f,c
  8003  0057AC  3E0A               	incfsz	___fltol@exp1^0,f,c
  8004  0057AE  D7F9               	goto	l4305
  8005  0057B0  D00D               	goto	u4940
  8006  0057B2                     l4309:
  8007  0057B2  0E1F               	movlw	31
  8008  0057B4  640A               	cpfsgt	___fltol@exp1^0,c
  8009  0057B6  D007               	goto	l4317
  8010  0057B8  D7C2               	goto	u4890
  8011  0057BA                     l4315:
  8012  0057BA  90D8               	bcf	status,0,c
  8013  0057BC  3601               	rlcf	___fltol@f1^0,f,c
  8014  0057BE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8015  0057C0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8016  0057C2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8017  0057C4  060A               	decf	___fltol@exp1^0,f,c
  8018  0057C6                     l4317:
  8019  0057C6  500A               	movf	___fltol@exp1^0,w,c
  8020  0057C8  A4D8               	btfss	status,2,c
  8021  0057CA  D7F7               	goto	l4315
  8022  0057CC                     u4940:
  8023  0057CC  5009               	movf	___fltol@sign1^0,w,c
  8024  0057CE  B4D8               	btfsc	status,2,c
  8025  0057D0  D008               	goto	l4323
  8026  0057D2  1E04               	comf	(___fltol@f1+3)^0,f,c
  8027  0057D4  1E03               	comf	(___fltol@f1+2)^0,f,c
  8028  0057D6  1E02               	comf	(___fltol@f1+1)^0,f,c
  8029  0057D8  6C01               	negf	___fltol@f1^0,c
  8030  0057DA  0E00               	movlw	0
  8031  0057DC  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8032  0057DE  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8033  0057E0  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8034  0057E2                     l4323:
  8035  0057E2  0060  F004  F001   	movff	___fltol@f1,?___fltol
  8036  0057E8  0060  F008  F002   	movff	___fltol@f1+1,?___fltol+1
  8037  0057EE  0060  F00C  F003   	movff	___fltol@f1+2,?___fltol+2
  8038  0057F4  0060  F010  F004   	movff	___fltol@f1+3,?___fltol+3
  8039  0057FA  0012               	return		;funcret
  8040  0057FC                     __end_of___fltol:
  8041                           	opt callstack 0
  8042                           
  8043 ;; *************** function ___flsub *****************
  8044 ;; Defined at:
  8045 ;;		line 245 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  b               4   80[COMRAM] long 
  8048 ;;  a               4   84[COMRAM] long 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  4   80[COMRAM] long 
  8053 ;; Registers used:
  8054 ;;		wreg, status,2, status,0, cstack
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8060 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8063 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8064 ;;Total ram usage:        8 bytes
  8065 ;; Hardware stack levels used:    1
  8066 ;; Hardware stack levels required when called:    1
  8067 ;; This function calls:
  8068 ;;		___fladd
  8069 ;; This function is called by:
  8070 ;;		_efgtoa
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074                           	psect	text25
  8075  005FF0                     __ptext25:
  8076                           	opt callstack 0
  8077  005FF0                     ___flsub:
  8078                           	opt callstack 24
  8079                           
  8080                           ;incstack = 0
  8081  005FF0  0E00               	movlw	0
  8082  005FF2  1A55               	xorwf	___flsub@a^0,f,c
  8083  005FF4  0E00               	movlw	0
  8084  005FF6  1A56               	xorwf	(___flsub@a+1)^0,f,c
  8085  005FF8  0E00               	movlw	0
  8086  005FFA  1A57               	xorwf	(___flsub@a+2)^0,f,c
  8087  005FFC  0E80               	movlw	128
  8088  005FFE  1A58               	xorwf	(___flsub@a+3)^0,f,c
  8089  006000  0060  F144  F00F   	movff	___flsub@b,___fladd@b
  8090  006006  0060  F148  F010   	movff	___flsub@b+1,___fladd@b+1
  8091  00600C  0060  F14C  F011   	movff	___flsub@b+2,___fladd@b+2
  8092  006012  0060  F150  F012   	movff	___flsub@b+3,___fladd@b+3
  8093  006018  0060  F154  F013   	movff	___flsub@a,___fladd@a
  8094  00601E  0060  F158  F014   	movff	___flsub@a+1,___fladd@a+1
  8095  006024  0060  F15C  F015   	movff	___flsub@a+2,___fladd@a+2
  8096  00602A  0060  F160  F016   	movff	___flsub@a+3,___fladd@a+3
  8097  006030  EC96  F022         	call	___fladd	;wreg free
  8098  006034  0060  F03C  F051   	movff	?___fladd,?___flsub
  8099  00603A  0060  F040  F052   	movff	?___fladd+1,?___flsub+1
  8100  006040  0060  F044  F053   	movff	?___fladd+2,?___flsub+2
  8101  006046  0060  F048  F054   	movff	?___fladd+3,?___flsub+3
  8102  00604C  0012               	return		;funcret
  8103  00604E                     __end_of___flsub:
  8104                           	opt callstack 0
  8105                           
  8106 ;; *************** function ___fladd *****************
  8107 ;; Defined at:
  8108 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  b               4   14[COMRAM] long 
  8111 ;;  a               4   18[COMRAM] long 
  8112 ;; Auto vars:     Size  Location     Type
  8113 ;;  grs             1   29[COMRAM] unsigned char 
  8114 ;;  bexp            1   28[COMRAM] unsigned char 
  8115 ;;  aexp            1   27[COMRAM] unsigned char 
  8116 ;;  signs           1   26[COMRAM] unsigned char 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  4   14[COMRAM] unsigned char 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8126 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8130 ;;Total ram usage:       16 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_main_loop
  8136 ;;		_efgtoa
  8137 ;;		___flsub
  8138 ;; This function uses a non-reentrant model
  8139 ;;
  8140                           
  8141                           	psect	text26
  8142  00452C                     __ptext26:
  8143                           	opt callstack 0
  8144  00452C                     ___fladd:
  8145                           	opt callstack 24
  8146                           
  8147                           ;incstack = 0
  8148  00452C  5012               	movf	(___fladd@b+3)^0,w,c
  8149  00452E  0B80               	andlw	128
  8150  004530  6E1B               	movwf	___fladd@signs^0,c
  8151  004532  5012               	movf	(___fladd@b+3)^0,w,c
  8152  004534  2412               	addwf	(___fladd@b+3)^0,w,c
  8153  004536  6E1D               	movwf	___fladd@bexp^0,c
  8154  004538  BE11               	btfsc	(___fladd@b+2)^0,7,c
  8155  00453A  801D               	bsf	___fladd@bexp^0,0,c
  8156  00453C  501D               	movf	___fladd@bexp^0,w,c
  8157  00453E  B4D8               	btfsc	status,2,c
  8158  004540  D00D               	goto	l3601
  8159  004542  281D               	incf	___fladd@bexp^0,w,c
  8160  004544  A4D8               	btfss	status,2,c
  8161  004546  D008               	goto	l3597
  8162  004548  0E00               	movlw	0
  8163  00454A  6E0F               	movwf	___fladd@b^0,c
  8164  00454C  0E00               	movlw	0
  8165  00454E  6E10               	movwf	(___fladd@b+1)^0,c
  8166  004550  0E00               	movlw	0
  8167  004552  6E11               	movwf	(___fladd@b+2)^0,c
  8168  004554  0E00               	movlw	0
  8169  004556  6E12               	movwf	(___fladd@b+3)^0,c
  8170  004558                     l3597:
  8171  004558  8E11               	bsf	(___fladd@b+2)^0,7,c
  8172  00455A  D006               	goto	L9
  8173  00455C                     l3601:
  8174  00455C  0E00               	movlw	0
  8175  00455E  6E0F               	movwf	___fladd@b^0,c
  8176  004560  0E00               	movlw	0
  8177  004562  6E10               	movwf	(___fladd@b+1)^0,c
  8178  004564  0E00               	movlw	0
  8179  004566  6E11               	movwf	(___fladd@b+2)^0,c
  8180  004568                     L9:
  8181  004568  0E00               	movlw	0
  8182  00456A  6E12               	movwf	(___fladd@b+3)^0,c
  8183  00456C  5016               	movf	(___fladd@a+3)^0,w,c
  8184  00456E  0B80               	andlw	128
  8185  004570  6E1C               	movwf	___fladd@aexp^0,c
  8186  004572  501B               	movf	___fladd@signs^0,w,c
  8187  004574  181C               	xorwf	___fladd@aexp^0,w,c
  8188  004576  A4D8               	btfss	status,2,c
  8189  004578  8C1B               	bsf	___fladd@signs^0,6,c
  8190  00457A  5016               	movf	(___fladd@a+3)^0,w,c
  8191  00457C  2416               	addwf	(___fladd@a+3)^0,w,c
  8192  00457E  6E1C               	movwf	___fladd@aexp^0,c
  8193  004580  BE15               	btfsc	(___fladd@a+2)^0,7,c
  8194  004582  801C               	bsf	___fladd@aexp^0,0,c
  8195  004584  501C               	movf	___fladd@aexp^0,w,c
  8196  004586  B4D8               	btfsc	status,2,c
  8197  004588  D00D               	goto	l3625
  8198  00458A  281C               	incf	___fladd@aexp^0,w,c
  8199  00458C  A4D8               	btfss	status,2,c
  8200  00458E  D008               	goto	l3621
  8201  004590  0E00               	movlw	0
  8202  004592  6E13               	movwf	___fladd@a^0,c
  8203  004594  0E00               	movlw	0
  8204  004596  6E14               	movwf	(___fladd@a+1)^0,c
  8205  004598  0E00               	movlw	0
  8206  00459A  6E15               	movwf	(___fladd@a+2)^0,c
  8207  00459C  0E00               	movlw	0
  8208  00459E  6E16               	movwf	(___fladd@a+3)^0,c
  8209  0045A0                     l3621:
  8210  0045A0  8E15               	bsf	(___fladd@a+2)^0,7,c
  8211  0045A2  D006               	goto	L10
  8212  0045A4                     l3625:
  8213  0045A4  0E00               	movlw	0
  8214  0045A6  6E13               	movwf	___fladd@a^0,c
  8215  0045A8  0E00               	movlw	0
  8216  0045AA  6E14               	movwf	(___fladd@a+1)^0,c
  8217  0045AC  0E00               	movlw	0
  8218  0045AE  6E15               	movwf	(___fladd@a+2)^0,c
  8219  0045B0                     L10:
  8220  0045B0  0E00               	movlw	0
  8221  0045B2  6E16               	movwf	(___fladd@a+3)^0,c
  8222  0045B4  501D               	movf	___fladd@bexp^0,w,c
  8223  0045B6  5C1C               	subwf	___fladd@aexp^0,w,c
  8224  0045B8  B0D8               	btfsc	status,0,c
  8225  0045BA  D031               	goto	l3663
  8226  0045BC  AC1B               	btfss	___fladd@signs^0,6,c
  8227  0045BE  D002               	goto	l3633
  8228  0045C0  0E80               	movlw	128
  8229  0045C2  1A1B               	xorwf	___fladd@signs^0,f,c
  8230  0045C4                     l3633:
  8231  0045C4  0060  F074  F01E   	movff	___fladd@bexp,___fladd@grs
  8232  0045CA  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8233  0045D0  0060  F078  F01C   	movff	___fladd@grs,___fladd@aexp
  8234  0045D6  0060  F03C  F01E   	movff	___fladd@b,___fladd@grs
  8235  0045DC  0060  F04C  F00F   	movff	___fladd@a,___fladd@b
  8236  0045E2  0060  F078  F013   	movff	___fladd@grs,___fladd@a
  8237  0045E8  0060  F040  F01E   	movff	___fladd@b+1,___fladd@grs
  8238  0045EE  0060  F050  F010   	movff	___fladd@a+1,___fladd@b+1
  8239  0045F4  0060  F078  F014   	movff	___fladd@grs,___fladd@a+1
  8240  0045FA  0060  F044  F01E   	movff	___fladd@b+2,___fladd@grs
  8241  004600  0060  F054  F011   	movff	___fladd@a+2,___fladd@b+2
  8242  004606  0060  F078  F015   	movff	___fladd@grs,___fladd@a+2
  8243  00460C  0060  F048  F01E   	movff	___fladd@b+3,___fladd@grs
  8244  004612  0060  F058  F012   	movff	___fladd@a+3,___fladd@b+3
  8245  004618  0060  F078  F016   	movff	___fladd@grs,___fladd@a+3
  8246  00461E                     l3663:
  8247  00461E  0E00               	movlw	0
  8248  004620  6E1E               	movwf	___fladd@grs^0,c
  8249  004622  501D               	movf	___fladd@bexp^0,w,c
  8250  004624  0060  F070  F017   	movff	___fladd@aexp,??___fladd
  8251  00462A  6A18               	clrf	(??___fladd+1)^0,c
  8252  00462C  5E17               	subwf	??___fladd^0,f,c
  8253  00462E  0E00               	movlw	0
  8254  004630  5A18               	subwfb	(??___fladd+1)^0,f,c
  8255  004632  BE18               	btfsc	(??___fladd+1)^0,7,c
  8256  004634  D02D               	goto	l1240
  8257  004636  5018               	movf	(??___fladd+1)^0,w,c
  8258  004638  E104               	bnz	u3690
  8259  00463A  0E1A               	movlw	26
  8260  00463C  5C17               	subwf	??___fladd^0,w,c
  8261  00463E  A0D8               	btfss	status,0,c
  8262  004640  D027               	goto	l1240
  8263  004642                     u3690:
  8264  004642  500F               	movf	___fladd@b^0,w,c
  8265  004644  1010               	iorwf	(___fladd@b+1)^0,w,c
  8266  004646  1011               	iorwf	(___fladd@b+2)^0,w,c
  8267  004648  1012               	iorwf	(___fladd@b+3)^0,w,c
  8268  00464A  B4D8               	btfsc	status,2,c
  8269  00464C  D002               	goto	u3700
  8270  00464E  0E01               	movlw	1
  8271  004650  D001               	goto	u3710
  8272  004652                     u3700:
  8273  004652  0E00               	movlw	0
  8274  004654                     u3710:
  8275  004654  6E1E               	movwf	___fladd@grs^0,c
  8276  004656  0E00               	movlw	0
  8277  004658  6E0F               	movwf	___fladd@b^0,c
  8278  00465A  0E00               	movlw	0
  8279  00465C  6E10               	movwf	(___fladd@b+1)^0,c
  8280  00465E  0E00               	movlw	0
  8281  004660  6E11               	movwf	(___fladd@b+2)^0,c
  8282  004662  0E00               	movlw	0
  8283  004664  6E12               	movwf	(___fladd@b+3)^0,c
  8284  004666  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8285  00466C  D015               	goto	u3740
  8286  00466E                     l1241:
  8287  00466E  A01E               	btfss	___fladd@grs^0,0,c
  8288  004670  D005               	goto	l3675
  8289  004672  90D8               	bcf	status,0,c
  8290  004674  301E               	rrcf	___fladd@grs^0,w,c
  8291  004676  0901               	iorlw	1
  8292  004678  6E1E               	movwf	___fladd@grs^0,c
  8293  00467A  D002               	goto	l3677
  8294  00467C                     l3675:
  8295  00467C  90D8               	bcf	status,0,c
  8296  00467E  321E               	rrcf	___fladd@grs^0,f,c
  8297  004680                     l3677:
  8298  004680  B00F               	btfsc	___fladd@b^0,0,c
  8299  004682  8E1E               	bsf	___fladd@grs^0,7,c
  8300  004684  3412               	rlcf	(___fladd@b+3)^0,w,c
  8301  004686  3212               	rrcf	(___fladd@b+3)^0,f,c
  8302  004688  3211               	rrcf	(___fladd@b+2)^0,f,c
  8303  00468A  3210               	rrcf	(___fladd@b+1)^0,f,c
  8304  00468C  320F               	rrcf	___fladd@b^0,f,c
  8305  00468E  2A1D               	incf	___fladd@bexp^0,f,c
  8306  004690                     l1240:
  8307  004690  501C               	movf	___fladd@aexp^0,w,c
  8308  004692  5C1D               	subwf	___fladd@bexp^0,w,c
  8309  004694  A0D8               	btfss	status,0,c
  8310  004696  D7EB               	goto	l1241
  8311  004698                     u3740:
  8312  004698  BC1B               	btfsc	___fladd@signs^0,6,c
  8313  00469A  D028               	goto	l3709
  8314  00469C  501D               	movf	___fladd@bexp^0,w,c
  8315  00469E  A4D8               	btfss	status,2,c
  8316  0046A0  D009               	goto	l3691
  8317  0046A2  0E00               	movlw	0
  8318  0046A4  6E0F               	movwf	?___fladd^0,c
  8319  0046A6  0E00               	movlw	0
  8320  0046A8  6E10               	movwf	(?___fladd+1)^0,c
  8321  0046AA  0E00               	movlw	0
  8322  0046AC  6E11               	movwf	(?___fladd+2)^0,c
  8323  0046AE  0E00               	movlw	0
  8324  0046B0  6E12               	movwf	(?___fladd+3)^0,c
  8325  0046B2  0012               	return	
  8326  0046B4                     l3691:
  8327  0046B4  5013               	movf	___fladd@a^0,w,c
  8328  0046B6  260F               	addwf	___fladd@b^0,f,c
  8329  0046B8  5014               	movf	(___fladd@a+1)^0,w,c
  8330  0046BA  2210               	addwfc	(___fladd@b+1)^0,f,c
  8331  0046BC  5015               	movf	(___fladd@a+2)^0,w,c
  8332  0046BE  2211               	addwfc	(___fladd@b+2)^0,f,c
  8333  0046C0  5016               	movf	(___fladd@a+3)^0,w,c
  8334  0046C2  2212               	addwfc	(___fladd@b+3)^0,f,c
  8335  0046C4  A012               	btfss	(___fladd@b+3)^0,0,c
  8336  0046C6  D071               	goto	u3870
  8337  0046C8  A01E               	btfss	___fladd@grs^0,0,c
  8338  0046CA  D005               	goto	l3699
  8339  0046CC  90D8               	bcf	status,0,c
  8340  0046CE  301E               	rrcf	___fladd@grs^0,w,c
  8341  0046D0  0901               	iorlw	1
  8342  0046D2  6E1E               	movwf	___fladd@grs^0,c
  8343  0046D4  D002               	goto	l3701
  8344  0046D6                     l3699:
  8345  0046D6  90D8               	bcf	status,0,c
  8346  0046D8  321E               	rrcf	___fladd@grs^0,f,c
  8347  0046DA                     l3701:
  8348  0046DA  B00F               	btfsc	___fladd@b^0,0,c
  8349  0046DC  8E1E               	bsf	___fladd@grs^0,7,c
  8350  0046DE  3412               	rlcf	(___fladd@b+3)^0,w,c
  8351  0046E0  3212               	rrcf	(___fladd@b+3)^0,f,c
  8352  0046E2  3211               	rrcf	(___fladd@b+2)^0,f,c
  8353  0046E4  3210               	rrcf	(___fladd@b+1)^0,f,c
  8354  0046E6  320F               	rrcf	___fladd@b^0,f,c
  8355  0046E8  2A1D               	incf	___fladd@bexp^0,f,c
  8356  0046EA  D05F               	goto	u3870
  8357  0046EC                     l3709:
  8358  0046EC  5013               	movf	___fladd@a^0,w,c
  8359  0046EE  5C0F               	subwf	___fladd@b^0,w,c
  8360  0046F0  5014               	movf	(___fladd@a+1)^0,w,c
  8361  0046F2  5810               	subwfb	(___fladd@b+1)^0,w,c
  8362  0046F4  5015               	movf	(___fladd@a+2)^0,w,c
  8363  0046F6  5811               	subwfb	(___fladd@b+2)^0,w,c
  8364  0046F8  5012               	movf	(___fladd@b+3)^0,w,c
  8365  0046FA  0A80               	xorlw	128
  8366  0046FC  6E17               	movwf	??___fladd^0,c
  8367  0046FE  5016               	movf	(___fladd@a+3)^0,w,c
  8368  004700  0A80               	xorlw	128
  8369  004702  5817               	subwfb	??___fladd^0,w,c
  8370  004704  B0D8               	btfsc	status,0,c
  8371  004706  D025               	goto	l3719
  8372  004708  500F               	movf	___fladd@b^0,w,c
  8373  00470A  5C13               	subwf	___fladd@a^0,w,c
  8374  00470C  6E17               	movwf	??___fladd^0,c
  8375  00470E  5010               	movf	(___fladd@b+1)^0,w,c
  8376  004710  5814               	subwfb	(___fladd@a+1)^0,w,c
  8377  004712  6E18               	movwf	(??___fladd+1)^0,c
  8378  004714  5011               	movf	(___fladd@b+2)^0,w,c
  8379  004716  5815               	subwfb	(___fladd@a+2)^0,w,c
  8380  004718  6E19               	movwf	(??___fladd+2)^0,c
  8381  00471A  5012               	movf	(___fladd@b+3)^0,w,c
  8382  00471C  5816               	subwfb	(___fladd@a+3)^0,w,c
  8383  00471E  6E1A               	movwf	(??___fladd+3)^0,c
  8384  004720  0EFF               	movlw	255
  8385  004722  2417               	addwf	??___fladd^0,w,c
  8386  004724  6E0F               	movwf	___fladd@b^0,c
  8387  004726  0EFF               	movlw	255
  8388  004728  2018               	addwfc	(??___fladd+1)^0,w,c
  8389  00472A  6E10               	movwf	(___fladd@b+1)^0,c
  8390  00472C  0EFF               	movlw	255
  8391  00472E  2019               	addwfc	(??___fladd+2)^0,w,c
  8392  004730  6E11               	movwf	(___fladd@b+2)^0,c
  8393  004732  0EFF               	movlw	255
  8394  004734  201A               	addwfc	(??___fladd+3)^0,w,c
  8395  004736  6E12               	movwf	(___fladd@b+3)^0,c
  8396  004738  0E80               	movlw	128
  8397  00473A  1A1B               	xorwf	___fladd@signs^0,f,c
  8398  00473C  6C1E               	negf	___fladd@grs^0,c
  8399  00473E  501E               	movf	___fladd@grs^0,w,c
  8400  004740  A4D8               	btfss	status,2,c
  8401  004742  D00F               	goto	l1256
  8402  004744  0E01               	movlw	1
  8403  004746  260F               	addwf	___fladd@b^0,f,c
  8404  004748  0E00               	movlw	0
  8405  00474A  2210               	addwfc	(___fladd@b+1)^0,f,c
  8406  00474C  2211               	addwfc	(___fladd@b+2)^0,f,c
  8407  00474E  2212               	addwfc	(___fladd@b+3)^0,f,c
  8408  004750  D008               	goto	l1256
  8409  004752                     l3719:
  8410  004752  5013               	movf	___fladd@a^0,w,c
  8411  004754  5E0F               	subwf	___fladd@b^0,f,c
  8412  004756  5014               	movf	(___fladd@a+1)^0,w,c
  8413  004758  5A10               	subwfb	(___fladd@b+1)^0,f,c
  8414  00475A  5015               	movf	(___fladd@a+2)^0,w,c
  8415  00475C  5A11               	subwfb	(___fladd@b+2)^0,f,c
  8416  00475E  5016               	movf	(___fladd@a+3)^0,w,c
  8417  004760  5A12               	subwfb	(___fladd@b+3)^0,f,c
  8418  004762                     l1256:
  8419  004762  500F               	movf	___fladd@b^0,w,c
  8420  004764  1010               	iorwf	(___fladd@b+1)^0,w,c
  8421  004766  1011               	iorwf	(___fladd@b+2)^0,w,c
  8422  004768  1012               	iorwf	(___fladd@b+3)^0,w,c
  8423  00476A  A4D8               	btfss	status,2,c
  8424  00476C  D01C               	goto	l3743
  8425  00476E  501E               	movf	___fladd@grs^0,w,c
  8426  004770  A4D8               	btfss	status,2,c
  8427  004772  D019               	goto	l3743
  8428  004774  0E00               	movlw	0
  8429  004776  6E0F               	movwf	?___fladd^0,c
  8430  004778  0E00               	movlw	0
  8431  00477A  6E10               	movwf	(?___fladd+1)^0,c
  8432  00477C  0E00               	movlw	0
  8433  00477E  6E11               	movwf	(?___fladd+2)^0,c
  8434  004780  0E00               	movlw	0
  8435  004782  6E12               	movwf	(?___fladd+3)^0,c
  8436  004784  0012               	return	
  8437  004786                     l3727:
  8438  004786  90D8               	bcf	status,0,c
  8439  004788  360F               	rlcf	___fladd@b^0,f,c
  8440  00478A  3610               	rlcf	(___fladd@b+1)^0,f,c
  8441  00478C  3611               	rlcf	(___fladd@b+2)^0,f,c
  8442  00478E  3612               	rlcf	(___fladd@b+3)^0,f,c
  8443  004790  BE1E               	btfsc	___fladd@grs^0,7,c
  8444  004792  800F               	bsf	___fladd@b^0,0,c
  8445  004794  A01E               	btfss	___fladd@grs^0,0,c
  8446  004796  D002               	goto	l3737
  8447  004798  80D8               	bsf	status,0,c
  8448  00479A  D001               	goto	L11
  8449  00479C                     l3737:
  8450  00479C  90D8               	bcf	status,0,c
  8451  00479E                     L11:
  8452  00479E  361E               	rlcf	___fladd@grs^0,f,c
  8453  0047A0  501D               	movf	___fladd@bexp^0,w,c
  8454  0047A2  A4D8               	btfss	status,2,c
  8455  0047A4  061D               	decf	___fladd@bexp^0,f,c
  8456  0047A6                     l3743:
  8457  0047A6  AE11               	btfss	(___fladd@b+2)^0,7,c
  8458  0047A8  D7EE               	goto	l3727
  8459  0047AA                     u3870:
  8460  0047AA  0E00               	movlw	0
  8461  0047AC  6E1C               	movwf	___fladd@aexp^0,c
  8462  0047AE  AE1E               	btfss	___fladd@grs^0,7,c
  8463  0047B0  D00C               	goto	l1265
  8464  0047B2  0060  F078  F017   	movff	___fladd@grs,??___fladd
  8465  0047B8  0E7F               	movlw	127
  8466  0047BA  1617               	andwf	??___fladd^0,f,c
  8467  0047BC  B4D8               	btfsc	status,2,c
  8468  0047BE  D003               	goto	l1266
  8469  0047C0                     u3890:
  8470  0047C0  0E01               	movlw	1
  8471  0047C2  6E1C               	movwf	___fladd@aexp^0,c
  8472  0047C4  D002               	goto	l1265
  8473  0047C6                     l1266:
  8474  0047C6  B00F               	btfsc	___fladd@b^0,0,c
  8475  0047C8  D7FB               	goto	u3890
  8476  0047CA                     l1265:
  8477  0047CA  501C               	movf	___fladd@aexp^0,w,c
  8478  0047CC  B4D8               	btfsc	status,2,c
  8479  0047CE  D028               	goto	l3763
  8480  0047D0  0E01               	movlw	1
  8481  0047D2  260F               	addwf	___fladd@b^0,f,c
  8482  0047D4  0E00               	movlw	0
  8483  0047D6  2210               	addwfc	(___fladd@b+1)^0,f,c
  8484  0047D8  2211               	addwfc	(___fladd@b+2)^0,f,c
  8485  0047DA  2212               	addwfc	(___fladd@b+3)^0,f,c
  8486  0047DC  A012               	btfss	(___fladd@b+3)^0,0,c
  8487  0047DE  D020               	goto	l3763
  8488  0047E0  0060  F03C  F017   	movff	___fladd@b,??___fladd
  8489  0047E6  0060  F040  F018   	movff	___fladd@b+1,??___fladd+1
  8490  0047EC  0060  F044  F019   	movff	___fladd@b+2,??___fladd+2
  8491  0047F2  0060  F048  F01A   	movff	___fladd@b+3,??___fladd+3
  8492  0047F8  341A               	rlcf	(??___fladd+3)^0,w,c
  8493  0047FA  321A               	rrcf	(??___fladd+3)^0,f,c
  8494  0047FC  3219               	rrcf	(??___fladd+2)^0,f,c
  8495  0047FE  3218               	rrcf	(??___fladd+1)^0,f,c
  8496  004800  3217               	rrcf	??___fladd^0,f,c
  8497  004802  0060  F05C  F00F   	movff	??___fladd,___fladd@b
  8498  004808  0060  F060  F010   	movff	??___fladd+1,___fladd@b+1
  8499  00480E  0060  F064  F011   	movff	??___fladd+2,___fladd@b+2
  8500  004814  0060  F068  F012   	movff	??___fladd+3,___fladd@b+3
  8501  00481A  281D               	incf	___fladd@bexp^0,w,c
  8502  00481C  A4D8               	btfss	status,2,c
  8503  00481E  2A1D               	incf	___fladd@bexp^0,f,c
  8504  004820                     l3763:
  8505  004820  281D               	incf	___fladd@bexp^0,w,c
  8506  004822  B4D8               	btfsc	status,2,c
  8507  004824  D003               	goto	u3950
  8508  004826  501D               	movf	___fladd@bexp^0,w,c
  8509  004828  A4D8               	btfss	status,2,c
  8510  00482A  D00D               	goto	l3771
  8511  00482C                     u3950:
  8512  00482C  0E00               	movlw	0
  8513  00482E  6E0F               	movwf	___fladd@b^0,c
  8514  004830  0E00               	movlw	0
  8515  004832  6E10               	movwf	(___fladd@b+1)^0,c
  8516  004834  0E00               	movlw	0
  8517  004836  6E11               	movwf	(___fladd@b+2)^0,c
  8518  004838  0E00               	movlw	0
  8519  00483A  6E12               	movwf	(___fladd@b+3)^0,c
  8520  00483C  501D               	movf	___fladd@bexp^0,w,c
  8521  00483E  A4D8               	btfss	status,2,c
  8522  004840  D002               	goto	l3771
  8523  004842  0E00               	movlw	0
  8524  004844  6E1B               	movwf	___fladd@signs^0,c
  8525  004846                     l3771:
  8526  004846  A01D               	btfss	___fladd@bexp^0,0,c
  8527  004848  D002               	goto	l3775
  8528  00484A  8E11               	bsf	(___fladd@b+2)^0,7,c
  8529  00484C  D001               	goto	l3777
  8530  00484E                     l3775:
  8531  00484E  9E11               	bcf	(___fladd@b+2)^0,7,c
  8532  004850                     l3777:
  8533  004850  90D8               	bcf	status,0,c
  8534  004852  301D               	rrcf	___fladd@bexp^0,w,c
  8535  004854  6E12               	movwf	(___fladd@b+3)^0,c
  8536  004856  BE1B               	btfsc	___fladd@signs^0,7,c
  8537  004858  8E12               	bsf	(___fladd@b+3)^0,7,c
  8538  00485A  0060  F03C  F00F   	movff	___fladd@b,?___fladd
  8539  004860  0060  F040  F010   	movff	___fladd@b+1,?___fladd+1
  8540  004866  0060  F044  F011   	movff	___fladd@b+2,?___fladd+2
  8541  00486C  0060  F048  F012   	movff	___fladd@b+3,?___fladd+3
  8542  004872  0012               	return		;funcret
  8543  004874                     __end_of___fladd:
  8544                           	opt callstack 0
  8545                           
  8546 ;; *************** function ___flneg *****************
  8547 ;; Defined at:
  8548 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;  f1              4    0[COMRAM] unsigned char 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  4    0[COMRAM] unsigned char 
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0
  8557 ;; Tracked objects:
  8558 ;;		On entry : 3F/0
  8559 ;;		On exit  : 3F/0
  8560 ;;		Unchanged: 3F/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;Total ram usage:        4 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_efgtoa
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text27
  8576  006260                     __ptext27:
  8577                           	opt callstack 0
  8578  006260                     ___flneg:
  8579                           	opt callstack 25
  8580                           
  8581                           ; BSR set to: 0
  8582                           
  8583                           ;incstack = 0
  8584  006260  5001               	movf	___flneg@f1^0,w,c
  8585  006262  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8586  006264  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8587  006266  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8588  006268  B4D8               	btfsc	status,2,c
  8589  00626A  D008               	goto	l4279
  8590                           
  8591                           ; BSR set to: 0
  8592  00626C  0E00               	movlw	0
  8593  00626E  1A01               	xorwf	___flneg@f1^0,f,c
  8594  006270  0E00               	movlw	0
  8595  006272  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8596  006274  0E00               	movlw	0
  8597  006276  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8598  006278  0E80               	movlw	128
  8599  00627A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8600  00627C                     l4279:
  8601                           
  8602                           ; BSR set to: 0
  8603  00627C  0060  F004  F001   	movff	___flneg@f1,?___flneg
  8604  006282  0060  F008  F002   	movff	___flneg@f1+1,?___flneg+1
  8605  006288  0060  F00C  F003   	movff	___flneg@f1+2,?___flneg+2
  8606  00628E  0060  F010  F004   	movff	___flneg@f1+3,?___flneg+3
  8607                           
  8608                           ; BSR set to: 0
  8609  006294  0012               	return		;funcret
  8610  006296                     __end_of___flneg:
  8611                           	opt callstack 0
  8612                           
  8613 ;; *************** function ___flmul *****************
  8614 ;; Defined at:
  8615 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;  b               4   55[COMRAM] unsigned char 
  8618 ;;  a               4   59[COMRAM] unsigned char 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  prod            4   74[COMRAM] struct .
  8621 ;;  grs             4   69[COMRAM] unsigned long 
  8622 ;;  temp            2   78[COMRAM] struct .
  8623 ;;  bexp            1   73[COMRAM] unsigned char 
  8624 ;;  aexp            1   68[COMRAM] unsigned char 
  8625 ;;  sign            1   67[COMRAM] unsigned char 
  8626 ;; Return value:  Size  Location     Type
  8627 ;;                  4   55[COMRAM] unsigned char 
  8628 ;; Registers used:
  8629 ;;		wreg, status,2, status,0, prodl, prodh
  8630 ;; Tracked objects:
  8631 ;;		On entry : 0/0
  8632 ;;		On exit  : 0/0
  8633 ;;		Unchanged: 0/0
  8634 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8635 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8636 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8637 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8638 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8639 ;;Total ram usage:       25 bytes
  8640 ;; Hardware stack levels used:    1
  8641 ;; This function calls:
  8642 ;;		Nothing
  8643 ;; This function is called by:
  8644 ;;		_main_loop
  8645 ;;		_efgtoa
  8646 ;; This function uses a non-reentrant model
  8647 ;;
  8648                           
  8649                           	psect	text28
  8650  0041A8                     __ptext28:
  8651                           	opt callstack 0
  8652  0041A8                     ___flmul:
  8653                           	opt callstack 25
  8654                           
  8655                           ; BSR set to: 0
  8656                           ;incstack = 0
  8657  0041A8  503B               	movf	(___flmul@b+3)^0,w,c
  8658  0041AA  0B80               	andlw	128
  8659  0041AC  6E44               	movwf	___flmul@sign^0,c
  8660  0041AE  503B               	movf	(___flmul@b+3)^0,w,c
  8661  0041B0  243B               	addwf	(___flmul@b+3)^0,w,c
  8662  0041B2  6E4A               	movwf	___flmul@bexp^0,c
  8663  0041B4  BE3A               	btfsc	(___flmul@b+2)^0,7,c
  8664  0041B6  804A               	bsf	___flmul@bexp^0,0,c
  8665  0041B8  504A               	movf	___flmul@bexp^0,w,c
  8666  0041BA  B4D8               	btfsc	status,2,c
  8667  0041BC  D00D               	goto	l4035
  8668  0041BE  284A               	incf	___flmul@bexp^0,w,c
  8669  0041C0  A4D8               	btfss	status,2,c
  8670  0041C2  D008               	goto	l4033
  8671  0041C4  0E00               	movlw	0
  8672  0041C6  6E38               	movwf	___flmul@b^0,c
  8673  0041C8  0E00               	movlw	0
  8674  0041CA  6E39               	movwf	(___flmul@b+1)^0,c
  8675  0041CC  0E00               	movlw	0
  8676  0041CE  6E3A               	movwf	(___flmul@b+2)^0,c
  8677  0041D0  0E00               	movlw	0
  8678  0041D2  6E3B               	movwf	(___flmul@b+3)^0,c
  8679  0041D4                     l4033:
  8680  0041D4  8E3A               	bsf	(___flmul@b+2)^0,7,c
  8681  0041D6  D008               	goto	l4037
  8682  0041D8                     l4035:
  8683  0041D8  0E00               	movlw	0
  8684  0041DA  6E38               	movwf	___flmul@b^0,c
  8685  0041DC  0E00               	movlw	0
  8686  0041DE  6E39               	movwf	(___flmul@b+1)^0,c
  8687  0041E0  0E00               	movlw	0
  8688  0041E2  6E3A               	movwf	(___flmul@b+2)^0,c
  8689  0041E4  0E00               	movlw	0
  8690  0041E6  6E3B               	movwf	(___flmul@b+3)^0,c
  8691  0041E8                     l4037:
  8692  0041E8  503F               	movf	(___flmul@a+3)^0,w,c
  8693  0041EA  0B80               	andlw	128
  8694  0041EC  1A44               	xorwf	___flmul@sign^0,f,c
  8695  0041EE  503F               	movf	(___flmul@a+3)^0,w,c
  8696  0041F0  243F               	addwf	(___flmul@a+3)^0,w,c
  8697  0041F2  6E45               	movwf	___flmul@aexp^0,c
  8698  0041F4  BE3E               	btfsc	(___flmul@a+2)^0,7,c
  8699  0041F6  8045               	bsf	___flmul@aexp^0,0,c
  8700  0041F8  5045               	movf	___flmul@aexp^0,w,c
  8701  0041FA  B4D8               	btfsc	status,2,c
  8702  0041FC  D00D               	goto	l4053
  8703  0041FE  2845               	incf	___flmul@aexp^0,w,c
  8704  004200  A4D8               	btfss	status,2,c
  8705  004202  D008               	goto	l4051
  8706  004204  0E00               	movlw	0
  8707  004206  6E3C               	movwf	___flmul@a^0,c
  8708  004208  0E00               	movlw	0
  8709  00420A  6E3D               	movwf	(___flmul@a+1)^0,c
  8710  00420C  0E00               	movlw	0
  8711  00420E  6E3E               	movwf	(___flmul@a+2)^0,c
  8712  004210  0E00               	movlw	0
  8713  004212  6E3F               	movwf	(___flmul@a+3)^0,c
  8714  004214                     l4051:
  8715  004214  8E3E               	bsf	(___flmul@a+2)^0,7,c
  8716  004216  D008               	goto	l1325
  8717  004218                     l4053:
  8718  004218  0E00               	movlw	0
  8719  00421A  6E3C               	movwf	___flmul@a^0,c
  8720  00421C  0E00               	movlw	0
  8721  00421E  6E3D               	movwf	(___flmul@a+1)^0,c
  8722  004220  0E00               	movlw	0
  8723  004222  6E3E               	movwf	(___flmul@a+2)^0,c
  8724  004224  0E00               	movlw	0
  8725  004226  6E3F               	movwf	(___flmul@a+3)^0,c
  8726  004228                     l1325:
  8727  004228  5045               	movf	___flmul@aexp^0,w,c
  8728  00422A  B4D8               	btfsc	status,2,c
  8729  00422C  D003               	goto	u4570
  8730  00422E  504A               	movf	___flmul@bexp^0,w,c
  8731  004230  A4D8               	btfss	status,2,c
  8732  004232  D009               	goto	l4061
  8733  004234                     u4570:
  8734  004234  0E00               	movlw	0
  8735  004236  6E38               	movwf	?___flmul^0,c
  8736  004238  0E00               	movlw	0
  8737  00423A  6E39               	movwf	(?___flmul+1)^0,c
  8738  00423C  0E00               	movlw	0
  8739  00423E  6E3A               	movwf	(?___flmul+2)^0,c
  8740  004240  0E00               	movlw	0
  8741  004242  6E3B               	movwf	(?___flmul+3)^0,c
  8742  004244  0012               	return	
  8743  004246                     l4061:
  8744  004246  503E               	movf	(___flmul@a+2)^0,w,c
  8745  004248  0238               	mulwf	___flmul@b^0,c
  8746  00424A  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8747  004250  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8748  004256  504F               	movf	___flmul@temp^0,w,c
  8749  004258  6E46               	movwf	___flmul@grs^0,c
  8750  00425A  6A47               	clrf	(___flmul@grs+1)^0,c
  8751  00425C  6A48               	clrf	(___flmul@grs+2)^0,c
  8752  00425E  6A49               	clrf	(___flmul@grs+3)^0,c
  8753  004260  5050               	movf	(___flmul@temp+1)^0,w,c
  8754  004262  6E4B               	movwf	___flmul@prod^0,c
  8755  004264  6A4C               	clrf	(___flmul@prod+1)^0,c
  8756  004266  6A4D               	clrf	(___flmul@prod+2)^0,c
  8757  004268  6A4E               	clrf	(___flmul@prod+3)^0,c
  8758  00426A  503D               	movf	(___flmul@a+1)^0,w,c
  8759  00426C  0239               	mulwf	(___flmul@b+1)^0,c
  8760  00426E  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8761  004274  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8762  00427A  504F               	movf	___flmul@temp^0,w,c
  8763  00427C  2646               	addwf	___flmul@grs^0,f,c
  8764  00427E  0E00               	movlw	0
  8765  004280  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8766  004282  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8767  004284  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8768  004286  5050               	movf	(___flmul@temp+1)^0,w,c
  8769  004288  264B               	addwf	___flmul@prod^0,f,c
  8770  00428A  0E00               	movlw	0
  8771  00428C  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8772  00428E  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8773  004290  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8774  004292  503C               	movf	___flmul@a^0,w,c
  8775  004294  023A               	mulwf	(___flmul@b+2)^0,c
  8776  004296  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8777  00429C  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8778  0042A2  504F               	movf	___flmul@temp^0,w,c
  8779  0042A4  2646               	addwf	___flmul@grs^0,f,c
  8780  0042A6  0E00               	movlw	0
  8781  0042A8  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8782  0042AA  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8783  0042AC  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8784  0042AE  5050               	movf	(___flmul@temp+1)^0,w,c
  8785  0042B0  264B               	addwf	___flmul@prod^0,f,c
  8786  0042B2  0E00               	movlw	0
  8787  0042B4  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8788  0042B6  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8789  0042B8  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8790  0042BA  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8791  0042C0  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8792  0042C6  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8793  0042CC  6A46               	clrf	___flmul@grs^0,c
  8794  0042CE  503C               	movf	___flmul@a^0,w,c
  8795  0042D0  0239               	mulwf	(___flmul@b+1)^0,c
  8796  0042D2  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8797  0042D8  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8798  0042DE  504F               	movf	___flmul@temp^0,w,c
  8799  0042E0  2646               	addwf	___flmul@grs^0,f,c
  8800  0042E2  5050               	movf	(___flmul@temp+1)^0,w,c
  8801  0042E4  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8802  0042E6  0E00               	movlw	0
  8803  0042E8  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8804  0042EA  0E00               	movlw	0
  8805  0042EC  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8806  0042EE  503D               	movf	(___flmul@a+1)^0,w,c
  8807  0042F0  0238               	mulwf	___flmul@b^0,c
  8808  0042F2  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8809  0042F8  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8810  0042FE  504F               	movf	___flmul@temp^0,w,c
  8811  004300  2646               	addwf	___flmul@grs^0,f,c
  8812  004302  5050               	movf	(___flmul@temp+1)^0,w,c
  8813  004304  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8814  004306  0E00               	movlw	0
  8815  004308  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8816  00430A  0E00               	movlw	0
  8817  00430C  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8818  00430E  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8819  004314  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8820  00431A  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8821  004320  6A46               	clrf	___flmul@grs^0,c
  8822  004322  503C               	movf	___flmul@a^0,w,c
  8823  004324  0238               	mulwf	___flmul@b^0,c
  8824  004326  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8825  00432C  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8826  004332  504F               	movf	___flmul@temp^0,w,c
  8827  004334  2646               	addwf	___flmul@grs^0,f,c
  8828  004336  5050               	movf	(___flmul@temp+1)^0,w,c
  8829  004338  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8830  00433A  0E00               	movlw	0
  8831  00433C  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8832  00433E  0E00               	movlw	0
  8833  004340  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8834  004342  503E               	movf	(___flmul@a+2)^0,w,c
  8835  004344  0239               	mulwf	(___flmul@b+1)^0,c
  8836  004346  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8837  00434C  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8838  004352  504F               	movf	___flmul@temp^0,w,c
  8839  004354  264B               	addwf	___flmul@prod^0,f,c
  8840  004356  5050               	movf	(___flmul@temp+1)^0,w,c
  8841  004358  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8842  00435A  0E00               	movlw	0
  8843  00435C  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8844  00435E  0E00               	movlw	0
  8845  004360  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8846  004362  503D               	movf	(___flmul@a+1)^0,w,c
  8847  004364  023A               	mulwf	(___flmul@b+2)^0,c
  8848  004366  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8849  00436C  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8850  004372  504F               	movf	___flmul@temp^0,w,c
  8851  004374  264B               	addwf	___flmul@prod^0,f,c
  8852  004376  5050               	movf	(___flmul@temp+1)^0,w,c
  8853  004378  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8854  00437A  0E00               	movlw	0
  8855  00437C  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8856  00437E  0E00               	movlw	0
  8857  004380  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8858  004382  503E               	movf	(___flmul@a+2)^0,w,c
  8859  004384  023A               	mulwf	(___flmul@b+2)^0,c
  8860  004386  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8861  00438C  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8862  004392  504F               	movf	___flmul@temp^0,w,c
  8863  004394  6E40               	movwf	??___flmul^0,c
  8864  004396  5050               	movf	(___flmul@temp+1)^0,w,c
  8865  004398  6E41               	movwf	(??___flmul+1)^0,c
  8866  00439A  6A42               	clrf	(??___flmul+2)^0,c
  8867  00439C  6A43               	clrf	(??___flmul+3)^0,c
  8868  00439E  0060  F108  F043   	movff	??___flmul+2,??___flmul+3
  8869  0043A4  0060  F104  F042   	movff	??___flmul+1,??___flmul+2
  8870  0043AA  0060  F100  F041   	movff	??___flmul,??___flmul+1
  8871  0043B0  6A40               	clrf	??___flmul^0,c
  8872  0043B2  5040               	movf	??___flmul^0,w,c
  8873  0043B4  264B               	addwf	___flmul@prod^0,f,c
  8874  0043B6  5041               	movf	(??___flmul+1)^0,w,c
  8875  0043B8  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8876  0043BA  5042               	movf	(??___flmul+2)^0,w,c
  8877  0043BC  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8878  0043BE  5043               	movf	(??___flmul+3)^0,w,c
  8879  0043C0  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8880  0043C2  5049               	movf	(___flmul@grs+3)^0,w,c
  8881  0043C4  264B               	addwf	___flmul@prod^0,f,c
  8882  0043C6  0E00               	movlw	0
  8883  0043C8  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8884  0043CA  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8885  0043CC  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8886  0043CE  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8887  0043D4  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8888  0043DA  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8889  0043E0  6A46               	clrf	___flmul@grs^0,c
  8890  0043E2  5045               	movf	___flmul@aexp^0,w,c
  8891  0043E4  0060  F128  F040   	movff	___flmul@bexp,??___flmul
  8892  0043EA  6A41               	clrf	(??___flmul+1)^0,c
  8893  0043EC  2640               	addwf	??___flmul^0,f,c
  8894  0043EE  0E00               	movlw	0
  8895  0043F0  2241               	addwfc	(??___flmul+1)^0,f,c
  8896  0043F2  0E82               	movlw	130
  8897  0043F4  2440               	addwf	??___flmul^0,w,c
  8898  0043F6  6E4F               	movwf	___flmul@temp^0,c
  8899  0043F8  0EFF               	movlw	255
  8900  0043FA  2041               	addwfc	(??___flmul+1)^0,w,c
  8901  0043FC  6E50               	movwf	(___flmul@temp+1)^0,c
  8902  0043FE  D00F               	goto	l4109
  8903  004400                     l4103:
  8904  004400  90D8               	bcf	status,0,c
  8905  004402  364B               	rlcf	___flmul@prod^0,f,c
  8906  004404  364C               	rlcf	(___flmul@prod+1)^0,f,c
  8907  004406  364D               	rlcf	(___flmul@prod+2)^0,f,c
  8908  004408  364E               	rlcf	(___flmul@prod+3)^0,f,c
  8909  00440A  BE49               	btfsc	(___flmul@grs+3)^0,7,c
  8910  00440C  804B               	bsf	___flmul@prod^0,0,c
  8911  00440E  90D8               	bcf	status,0,c
  8912  004410  3646               	rlcf	___flmul@grs^0,f,c
  8913  004412  3647               	rlcf	(___flmul@grs+1)^0,f,c
  8914  004414  3648               	rlcf	(___flmul@grs+2)^0,f,c
  8915  004416  3649               	rlcf	(___flmul@grs+3)^0,f,c
  8916  004418  064F               	decf	___flmul@temp^0,f,c
  8917  00441A  A0D8               	btfss	status,0,c
  8918  00441C  0650               	decf	(___flmul@temp+1)^0,f,c
  8919  00441E                     l4109:
  8920  00441E  AE4D               	btfss	(___flmul@prod+2)^0,7,c
  8921  004420  D7EF               	goto	l4103
  8922  004422  0E00               	movlw	0
  8923  004424  6E45               	movwf	___flmul@aexp^0,c
  8924  004426  AE49               	btfss	(___flmul@grs+3)^0,7,c
  8925  004428  D017               	goto	l1334
  8926  00442A  0EFF               	movlw	255
  8927  00442C  1446               	andwf	___flmul@grs^0,w,c
  8928  00442E  6E40               	movwf	??___flmul^0,c
  8929  004430  0EFF               	movlw	255
  8930  004432  1447               	andwf	(___flmul@grs+1)^0,w,c
  8931  004434  6E41               	movwf	(??___flmul+1)^0,c
  8932  004436  0EFF               	movlw	255
  8933  004438  1448               	andwf	(___flmul@grs+2)^0,w,c
  8934  00443A  6E42               	movwf	(??___flmul+2)^0,c
  8935  00443C  0E7F               	movlw	127
  8936  00443E  1449               	andwf	(___flmul@grs+3)^0,w,c
  8937  004440  6E43               	movwf	(??___flmul+3)^0,c
  8938  004442  5040               	movf	??___flmul^0,w,c
  8939  004444  1041               	iorwf	(??___flmul+1)^0,w,c
  8940  004446  1042               	iorwf	(??___flmul+2)^0,w,c
  8941  004448  1043               	iorwf	(??___flmul+3)^0,w,c
  8942  00444A  B4D8               	btfsc	status,2,c
  8943  00444C  D003               	goto	l1335
  8944  00444E                     u4610:
  8945  00444E  0E01               	movlw	1
  8946  004450  6E45               	movwf	___flmul@aexp^0,c
  8947  004452  D002               	goto	l1334
  8948  004454                     l1335:
  8949  004454  B04B               	btfsc	___flmul@prod^0,0,c
  8950  004456  D7FB               	goto	u4610
  8951  004458                     l1334:
  8952  004458  5045               	movf	___flmul@aexp^0,w,c
  8953  00445A  B4D8               	btfsc	status,2,c
  8954  00445C  D027               	goto	l4129
  8955  00445E  0E01               	movlw	1
  8956  004460  264B               	addwf	___flmul@prod^0,f,c
  8957  004462  0E00               	movlw	0
  8958  004464  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8959  004466  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8960  004468  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8961  00446A  A04E               	btfss	(___flmul@prod+3)^0,0,c
  8962  00446C  D01F               	goto	l4129
  8963  00446E  0060  F12C  F040   	movff	___flmul@prod,??___flmul
  8964  004474  0060  F130  F041   	movff	___flmul@prod+1,??___flmul+1
  8965  00447A  0060  F134  F042   	movff	___flmul@prod+2,??___flmul+2
  8966  004480  0060  F138  F043   	movff	___flmul@prod+3,??___flmul+3
  8967  004486  3443               	rlcf	(??___flmul+3)^0,w,c
  8968  004488  3243               	rrcf	(??___flmul+3)^0,f,c
  8969  00448A  3242               	rrcf	(??___flmul+2)^0,f,c
  8970  00448C  3241               	rrcf	(??___flmul+1)^0,f,c
  8971  00448E  3240               	rrcf	??___flmul^0,f,c
  8972  004490  0060  F100  F04B   	movff	??___flmul,___flmul@prod
  8973  004496  0060  F104  F04C   	movff	??___flmul+1,___flmul@prod+1
  8974  00449C  0060  F108  F04D   	movff	??___flmul+2,___flmul@prod+2
  8975  0044A2  0060  F10C  F04E   	movff	??___flmul+3,___flmul@prod+3
  8976  0044A8  4A4F               	infsnz	___flmul@temp^0,f,c
  8977  0044AA  2A50               	incf	(___flmul@temp+1)^0,f,c
  8978  0044AC                     l4129:
  8979  0044AC  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  8980  0044AE  D00D               	goto	l4133
  8981  0044B0  5050               	movf	(___flmul@temp+1)^0,w,c
  8982  0044B2  E103               	bnz	u4650
  8983  0044B4  284F               	incf	___flmul@temp^0,w,c
  8984  0044B6  A0D8               	btfss	status,0,c
  8985  0044B8  D008               	goto	l4133
  8986  0044BA                     u4650:
  8987  0044BA  0E00               	movlw	0
  8988  0044BC  6E4B               	movwf	___flmul@prod^0,c
  8989  0044BE  0E00               	movlw	0
  8990  0044C0  6E4C               	movwf	(___flmul@prod+1)^0,c
  8991  0044C2  0E80               	movlw	128
  8992  0044C4  6E4D               	movwf	(___flmul@prod+2)^0,c
  8993  0044C6  0E7F               	movlw	127
  8994  0044C8  D021               	goto	L12
  8995  0044CA                     l4133:
  8996  0044CA  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  8997  0044CC  D005               	goto	u4660
  8998  0044CE  5050               	movf	(___flmul@temp+1)^0,w,c
  8999  0044D0  E10E               	bnz	l1342
  9000  0044D2  044F               	decf	___flmul@temp^0,w,c
  9001  0044D4  B0D8               	btfsc	status,0,c
  9002  0044D6  D00B               	goto	l1342
  9003  0044D8                     u4660:
  9004  0044D8  0E00               	movlw	0
  9005  0044DA  6E4B               	movwf	___flmul@prod^0,c
  9006  0044DC  0E00               	movlw	0
  9007  0044DE  6E4C               	movwf	(___flmul@prod+1)^0,c
  9008  0044E0  0E00               	movlw	0
  9009  0044E2  6E4D               	movwf	(___flmul@prod+2)^0,c
  9010  0044E4  0E00               	movlw	0
  9011  0044E6  6E4E               	movwf	(___flmul@prod+3)^0,c
  9012  0044E8  0E00               	movlw	0
  9013  0044EA  6E44               	movwf	___flmul@sign^0,c
  9014  0044EC  D010               	goto	l4145
  9015  0044EE                     l1342:
  9016  0044EE  0060  F13C  F04A   	movff	___flmul@temp,___flmul@bexp
  9017  0044F4  0EFF               	movlw	255
  9018  0044F6  164B               	andwf	___flmul@prod^0,f,c
  9019  0044F8  0EFF               	movlw	255
  9020  0044FA  164C               	andwf	(___flmul@prod+1)^0,f,c
  9021  0044FC  0E7F               	movlw	127
  9022  0044FE  164D               	andwf	(___flmul@prod+2)^0,f,c
  9023  004500  0E00               	movlw	0
  9024  004502  164E               	andwf	(___flmul@prod+3)^0,f,c
  9025  004504  B04A               	btfsc	___flmul@bexp^0,0,c
  9026  004506  8E4D               	bsf	(___flmul@prod+2)^0,7,c
  9027  004508  90D8               	bcf	status,0,c
  9028  00450A  304A               	rrcf	___flmul@bexp^0,w,c
  9029  00450C                     L12:
  9030  00450C  6E4E               	movwf	(___flmul@prod+3)^0,c
  9031  00450E                     l4145:
  9032  00450E  5044               	movf	___flmul@sign^0,w,c
  9033  004510  124E               	iorwf	(___flmul@prod+3)^0,f,c
  9034  004512  0060  F12C  F038   	movff	___flmul@prod,?___flmul
  9035  004518  0060  F130  F039   	movff	___flmul@prod+1,?___flmul+1
  9036  00451E  0060  F134  F03A   	movff	___flmul@prod+2,?___flmul+2
  9037  004524  0060  F138  F03B   	movff	___flmul@prod+3,?___flmul+3
  9038  00452A  0012               	return		;funcret
  9039  00452C                     __end_of___flmul:
  9040                           	opt callstack 0
  9041                           
  9042 ;; *************** function ___fleq *****************
  9043 ;; Defined at:
  9044 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9045 ;; Parameters:    Size  Location     Type
  9046 ;;  ff1             4    0[COMRAM] unsigned char 
  9047 ;;  ff2             4    4[COMRAM] unsigned char 
  9048 ;; Auto vars:     Size  Location     Type
  9049 ;;		None
  9050 ;; Return value:  Size  Location     Type
  9051 ;;		None               void
  9052 ;; Registers used:
  9053 ;;		wreg, status,2, status,0
  9054 ;; Tracked objects:
  9055 ;;		On entry : 0/0
  9056 ;;		On exit  : 0/0
  9057 ;;		Unchanged: 0/0
  9058 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9059 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9062 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9063 ;;Total ram usage:       12 bytes
  9064 ;; Hardware stack levels used:    1
  9065 ;; This function calls:
  9066 ;;		Nothing
  9067 ;; This function is called by:
  9068 ;;		_efgtoa
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text29
  9073  005B24                     __ptext29:
  9074                           	opt callstack 0
  9075  005B24                     ___fleq:
  9076                           	opt callstack 25
  9077                           
  9078                           ;incstack = 0
  9079  005B24  0E00               	movlw	0
  9080  005B26  1401               	andwf	___fleq@ff1^0,w,c
  9081  005B28  6E09               	movwf	??___fleq^0,c
  9082  005B2A  0E00               	movlw	0
  9083  005B2C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9084  005B2E  6E0A               	movwf	(??___fleq+1)^0,c
  9085  005B30  0E80               	movlw	128
  9086  005B32  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9087  005B34  6E0B               	movwf	(??___fleq+2)^0,c
  9088  005B36  0E7F               	movlw	127
  9089  005B38  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9090  005B3A  6E0C               	movwf	(??___fleq+3)^0,c
  9091  005B3C  5009               	movf	??___fleq^0,w,c
  9092  005B3E  100A               	iorwf	(??___fleq+1)^0,w,c
  9093  005B40  100B               	iorwf	(??___fleq+2)^0,w,c
  9094  005B42  100C               	iorwf	(??___fleq+3)^0,w,c
  9095  005B44  A4D8               	btfss	status,2,c
  9096  005B46  D008               	goto	l4241
  9097  005B48  0E00               	movlw	0
  9098  005B4A  6E01               	movwf	___fleq@ff1^0,c
  9099  005B4C  0E00               	movlw	0
  9100  005B4E  6E02               	movwf	(___fleq@ff1+1)^0,c
  9101  005B50  0E00               	movlw	0
  9102  005B52  6E03               	movwf	(___fleq@ff1+2)^0,c
  9103  005B54  0E00               	movlw	0
  9104  005B56  6E04               	movwf	(___fleq@ff1+3)^0,c
  9105  005B58                     l4241:
  9106  005B58  0E00               	movlw	0
  9107  005B5A  1405               	andwf	___fleq@ff2^0,w,c
  9108  005B5C  6E09               	movwf	??___fleq^0,c
  9109  005B5E  0E00               	movlw	0
  9110  005B60  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9111  005B62  6E0A               	movwf	(??___fleq+1)^0,c
  9112  005B64  0E80               	movlw	128
  9113  005B66  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9114  005B68  6E0B               	movwf	(??___fleq+2)^0,c
  9115  005B6A  0E7F               	movlw	127
  9116  005B6C  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9117  005B6E  6E0C               	movwf	(??___fleq+3)^0,c
  9118  005B70  5009               	movf	??___fleq^0,w,c
  9119  005B72  100A               	iorwf	(??___fleq+1)^0,w,c
  9120  005B74  100B               	iorwf	(??___fleq+2)^0,w,c
  9121  005B76  100C               	iorwf	(??___fleq+3)^0,w,c
  9122  005B78  A4D8               	btfss	status,2,c
  9123  005B7A  D008               	goto	l4245
  9124  005B7C  0E00               	movlw	0
  9125  005B7E  6E05               	movwf	___fleq@ff2^0,c
  9126  005B80  0E00               	movlw	0
  9127  005B82  6E06               	movwf	(___fleq@ff2+1)^0,c
  9128  005B84  0E00               	movlw	0
  9129  005B86  6E07               	movwf	(___fleq@ff2+2)^0,c
  9130  005B88  0E00               	movlw	0
  9131  005B8A  6E08               	movwf	(___fleq@ff2+3)^0,c
  9132  005B8C                     l4245:
  9133  005B8C  5005               	movf	___fleq@ff2^0,w,c
  9134  005B8E  1801               	xorwf	___fleq@ff1^0,w,c
  9135  005B90  E10A               	bnz	u4820
  9136  005B92  5006               	movf	(___fleq@ff2+1)^0,w,c
  9137  005B94  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9138  005B96  E107               	bnz	u4820
  9139  005B98  5007               	movf	(___fleq@ff2+2)^0,w,c
  9140  005B9A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9141  005B9C  E104               	bnz	u4820
  9142  005B9E  5008               	movf	(___fleq@ff2+3)^0,w,c
  9143  005BA0  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9144  005BA2  B4D8               	btfsc	status,2,c
  9145  005BA4  D002               	goto	l4249
  9146  005BA6                     u4820:
  9147  005BA6  90D8               	bcf	status,0,c
  9148  005BA8  0012               	return	
  9149  005BAA                     l4249:
  9150  005BAA  80D8               	bsf	status,0,c
  9151  005BAC  0012               	return		;funcret
  9152  005BAE                     __end_of___fleq:
  9153                           	opt callstack 0
  9154                           
  9155 ;; *************** function ___fldiv *****************
  9156 ;; Defined at:
  9157 ;;		line 11 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;  b               4   30[COMRAM] unsigned char 
  9160 ;;  a               4   34[COMRAM] unsigned char 
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;  grs             4   49[COMRAM] unsigned long 
  9163 ;;  rem             4   42[COMRAM] unsigned long 
  9164 ;;  new_exp         2   47[COMRAM] short 
  9165 ;;  aexp            1   54[COMRAM] unsigned char 
  9166 ;;  bexp            1   53[COMRAM] unsigned char 
  9167 ;;  sign            1   46[COMRAM] unsigned char 
  9168 ;; Return value:  Size  Location     Type
  9169 ;;                  4   30[COMRAM] unsigned char 
  9170 ;; Registers used:
  9171 ;;		wreg, status,2, status,0
  9172 ;; Tracked objects:
  9173 ;;		On entry : 0/0
  9174 ;;		On exit  : 0/0
  9175 ;;		Unchanged: 0/0
  9176 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9177 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9178 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9179 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9180 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9181 ;;Total ram usage:       25 bytes
  9182 ;; Hardware stack levels used:    1
  9183 ;; This function calls:
  9184 ;;		Nothing
  9185 ;; This function is called by:
  9186 ;;		_main_loop
  9187 ;;		_efgtoa
  9188 ;; This function uses a non-reentrant model
  9189 ;;
  9190                           
  9191                           	psect	text30
  9192  004874                     __ptext30:
  9193                           	opt callstack 0
  9194  004874                     ___fldiv:
  9195                           	opt callstack 25
  9196                           
  9197                           ;incstack = 0
  9198  004874  5022               	movf	(___fldiv@b+3)^0,w,c
  9199  004876  0B80               	andlw	128
  9200  004878  6E2F               	movwf	___fldiv@sign^0,c
  9201  00487A  5022               	movf	(___fldiv@b+3)^0,w,c
  9202  00487C  2422               	addwf	(___fldiv@b+3)^0,w,c
  9203  00487E  6E36               	movwf	___fldiv@bexp^0,c
  9204  004880  BE21               	btfsc	(___fldiv@b+2)^0,7,c
  9205  004882  8036               	bsf	___fldiv@bexp^0,0,c
  9206  004884  5036               	movf	___fldiv@bexp^0,w,c
  9207  004886  B4D8               	btfsc	status,2,c
  9208  004888  D00D               	goto	l3899
  9209  00488A  2836               	incf	___fldiv@bexp^0,w,c
  9210  00488C  A4D8               	btfss	status,2,c
  9211  00488E  D008               	goto	l3895
  9212  004890  0E00               	movlw	0
  9213  004892  6E1F               	movwf	___fldiv@b^0,c
  9214  004894  0E00               	movlw	0
  9215  004896  6E20               	movwf	(___fldiv@b+1)^0,c
  9216  004898  0E00               	movlw	0
  9217  00489A  6E21               	movwf	(___fldiv@b+2)^0,c
  9218  00489C  0E00               	movlw	0
  9219  00489E  6E22               	movwf	(___fldiv@b+3)^0,c
  9220  0048A0                     l3895:
  9221  0048A0  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9222  0048A2  D006               	goto	L13
  9223  0048A4                     l3899:
  9224  0048A4  0E00               	movlw	0
  9225  0048A6  6E1F               	movwf	___fldiv@b^0,c
  9226  0048A8  0E00               	movlw	0
  9227  0048AA  6E20               	movwf	(___fldiv@b+1)^0,c
  9228  0048AC  0E00               	movlw	0
  9229  0048AE  6E21               	movwf	(___fldiv@b+2)^0,c
  9230  0048B0                     L13:
  9231  0048B0  0E00               	movlw	0
  9232  0048B2  6E22               	movwf	(___fldiv@b+3)^0,c
  9233  0048B4  5026               	movf	(___fldiv@a+3)^0,w,c
  9234  0048B6  0B80               	andlw	128
  9235  0048B8  1A2F               	xorwf	___fldiv@sign^0,f,c
  9236  0048BA  5026               	movf	(___fldiv@a+3)^0,w,c
  9237  0048BC  2426               	addwf	(___fldiv@a+3)^0,w,c
  9238  0048BE  6E37               	movwf	___fldiv@aexp^0,c
  9239  0048C0  BE25               	btfsc	(___fldiv@a+2)^0,7,c
  9240  0048C2  8037               	bsf	___fldiv@aexp^0,0,c
  9241  0048C4  5037               	movf	___fldiv@aexp^0,w,c
  9242  0048C6  B4D8               	btfsc	status,2,c
  9243  0048C8  D00D               	goto	l3919
  9244  0048CA  2837               	incf	___fldiv@aexp^0,w,c
  9245  0048CC  A4D8               	btfss	status,2,c
  9246  0048CE  D008               	goto	l3915
  9247  0048D0  0E00               	movlw	0
  9248  0048D2  6E23               	movwf	___fldiv@a^0,c
  9249  0048D4  0E00               	movlw	0
  9250  0048D6  6E24               	movwf	(___fldiv@a+1)^0,c
  9251  0048D8  0E00               	movlw	0
  9252  0048DA  6E25               	movwf	(___fldiv@a+2)^0,c
  9253  0048DC  0E00               	movlw	0
  9254  0048DE  6E26               	movwf	(___fldiv@a+3)^0,c
  9255  0048E0                     l3915:
  9256  0048E0  8E25               	bsf	(___fldiv@a+2)^0,7,c
  9257  0048E2  D006               	goto	L14
  9258  0048E4                     l3919:
  9259  0048E4  0E00               	movlw	0
  9260  0048E6  6E23               	movwf	___fldiv@a^0,c
  9261  0048E8  0E00               	movlw	0
  9262  0048EA  6E24               	movwf	(___fldiv@a+1)^0,c
  9263  0048EC  0E00               	movlw	0
  9264  0048EE  6E25               	movwf	(___fldiv@a+2)^0,c
  9265  0048F0                     L14:
  9266  0048F0  0E00               	movlw	0
  9267  0048F2  6E26               	movwf	(___fldiv@a+3)^0,c
  9268  0048F4  5023               	movf	___fldiv@a^0,w,c
  9269  0048F6  1024               	iorwf	(___fldiv@a+1)^0,w,c
  9270  0048F8  1025               	iorwf	(___fldiv@a+2)^0,w,c
  9271  0048FA  1026               	iorwf	(___fldiv@a+3)^0,w,c
  9272  0048FC  A4D8               	btfss	status,2,c
  9273  0048FE  D01B               	goto	l3933
  9274  004900  0E00               	movlw	0
  9275  004902  6E1F               	movwf	___fldiv@b^0,c
  9276  004904  0E00               	movlw	0
  9277  004906  6E20               	movwf	(___fldiv@b+1)^0,c
  9278  004908  0E00               	movlw	0
  9279  00490A  6E21               	movwf	(___fldiv@b+2)^0,c
  9280  00490C  0E00               	movlw	0
  9281  00490E  6E22               	movwf	(___fldiv@b+3)^0,c
  9282  004910  0E80               	movlw	128
  9283  004912  1221               	iorwf	(___fldiv@b+2)^0,f,c
  9284  004914  0E7F               	movlw	127
  9285  004916  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9286  004918                     l3927:
  9287  004918  502F               	movf	___fldiv@sign^0,w,c
  9288  00491A  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9289  00491C  0060  F07C  F01F   	movff	___fldiv@b,?___fldiv
  9290  004922  0060  F080  F020   	movff	___fldiv@b+1,?___fldiv+1
  9291  004928  0060  F084  F021   	movff	___fldiv@b+2,?___fldiv+2
  9292  00492E  0060  F088  F022   	movff	___fldiv@b+3,?___fldiv+3
  9293  004934  0012               	return	
  9294  004936                     l3933:
  9295  004936  5036               	movf	___fldiv@bexp^0,w,c
  9296  004938  A4D8               	btfss	status,2,c
  9297  00493A  D009               	goto	l3941
  9298  00493C  0E00               	movlw	0
  9299  00493E  6E1F               	movwf	?___fldiv^0,c
  9300  004940  0E00               	movlw	0
  9301  004942  6E20               	movwf	(?___fldiv+1)^0,c
  9302  004944  0E00               	movlw	0
  9303  004946  6E21               	movwf	(?___fldiv+2)^0,c
  9304  004948  0E00               	movlw	0
  9305  00494A  6E22               	movwf	(?___fldiv+3)^0,c
  9306  00494C  0012               	return	
  9307  00494E                     l3941:
  9308  00494E  5037               	movf	___fldiv@aexp^0,w,c
  9309  004950  0060  F0D8  F027   	movff	___fldiv@bexp,??___fldiv
  9310  004956  6A28               	clrf	(??___fldiv+1)^0,c
  9311  004958  5E27               	subwf	??___fldiv^0,f,c
  9312  00495A  0E00               	movlw	0
  9313  00495C  5A28               	subwfb	(??___fldiv+1)^0,f,c
  9314  00495E  0E7F               	movlw	127
  9315  004960  2427               	addwf	??___fldiv^0,w,c
  9316  004962  6E30               	movwf	___fldiv@new_exp^0,c
  9317  004964  0E00               	movlw	0
  9318  004966  2028               	addwfc	(??___fldiv+1)^0,w,c
  9319  004968  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9320  00496A  0060  F07C  F02B   	movff	___fldiv@b,___fldiv@rem
  9321  004970  0060  F080  F02C   	movff	___fldiv@b+1,___fldiv@rem+1
  9322  004976  0060  F084  F02D   	movff	___fldiv@b+2,___fldiv@rem+2
  9323  00497C  0060  F088  F02E   	movff	___fldiv@b+3,___fldiv@rem+3
  9324  004982  0E00               	movlw	0
  9325  004984  6E1F               	movwf	___fldiv@b^0,c
  9326  004986  0E00               	movlw	0
  9327  004988  6E20               	movwf	(___fldiv@b+1)^0,c
  9328  00498A  0E00               	movlw	0
  9329  00498C  6E21               	movwf	(___fldiv@b+2)^0,c
  9330  00498E  0E00               	movlw	0
  9331  004990  6E22               	movwf	(___fldiv@b+3)^0,c
  9332  004992  0E00               	movlw	0
  9333  004994  6E32               	movwf	___fldiv@grs^0,c
  9334  004996  0E00               	movlw	0
  9335  004998  6E33               	movwf	(___fldiv@grs+1)^0,c
  9336  00499A  0E00               	movlw	0
  9337  00499C  6E34               	movwf	(___fldiv@grs+2)^0,c
  9338  00499E  0E00               	movlw	0
  9339  0049A0  6E35               	movwf	(___fldiv@grs+3)^0,c
  9340  0049A2  0E00               	movlw	0
  9341  0049A4  6E37               	movwf	___fldiv@aexp^0,c
  9342  0049A6  D028               	goto	l1295
  9343  0049A8                     l3951:
  9344  0049A8  5037               	movf	___fldiv@aexp^0,w,c
  9345  0049AA  B4D8               	btfsc	status,2,c
  9346  0049AC  D011               	goto	l3959
  9347  0049AE  90D8               	bcf	status,0,c
  9348  0049B0  362B               	rlcf	___fldiv@rem^0,f,c
  9349  0049B2  362C               	rlcf	(___fldiv@rem+1)^0,f,c
  9350  0049B4  362D               	rlcf	(___fldiv@rem+2)^0,f,c
  9351  0049B6  362E               	rlcf	(___fldiv@rem+3)^0,f,c
  9352  0049B8  90D8               	bcf	status,0,c
  9353  0049BA  361F               	rlcf	___fldiv@b^0,f,c
  9354  0049BC  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9355  0049BE  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9356  0049C0  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9357  0049C2  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9358  0049C4  801F               	bsf	___fldiv@b^0,0,c
  9359  0049C6  90D8               	bcf	status,0,c
  9360  0049C8  3632               	rlcf	___fldiv@grs^0,f,c
  9361  0049CA  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9362  0049CC  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9363  0049CE  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9364  0049D0                     l3959:
  9365  0049D0  5023               	movf	___fldiv@a^0,w,c
  9366  0049D2  5C2B               	subwf	___fldiv@rem^0,w,c
  9367  0049D4  5024               	movf	(___fldiv@a+1)^0,w,c
  9368  0049D6  582C               	subwfb	(___fldiv@rem+1)^0,w,c
  9369  0049D8  5025               	movf	(___fldiv@a+2)^0,w,c
  9370  0049DA  582D               	subwfb	(___fldiv@rem+2)^0,w,c
  9371  0049DC  5026               	movf	(___fldiv@a+3)^0,w,c
  9372  0049DE  582E               	subwfb	(___fldiv@rem+3)^0,w,c
  9373  0049E0  A0D8               	btfss	status,0,c
  9374  0049E2  D009               	goto	l3965
  9375  0049E4  8C35               	bsf	(___fldiv@grs+3)^0,6,c
  9376  0049E6  5023               	movf	___fldiv@a^0,w,c
  9377  0049E8  5E2B               	subwf	___fldiv@rem^0,f,c
  9378  0049EA  5024               	movf	(___fldiv@a+1)^0,w,c
  9379  0049EC  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
  9380  0049EE  5025               	movf	(___fldiv@a+2)^0,w,c
  9381  0049F0  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
  9382  0049F2  5026               	movf	(___fldiv@a+3)^0,w,c
  9383  0049F4  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
  9384  0049F6                     l3965:
  9385  0049F6  2A37               	incf	___fldiv@aexp^0,f,c
  9386  0049F8                     l1295:
  9387  0049F8  0E19               	movlw	25
  9388  0049FA  6437               	cpfsgt	___fldiv@aexp^0,c
  9389  0049FC  D7D5               	goto	l3951
  9390  0049FE  502B               	movf	___fldiv@rem^0,w,c
  9391  004A00  102C               	iorwf	(___fldiv@rem+1)^0,w,c
  9392  004A02  102D               	iorwf	(___fldiv@rem+2)^0,w,c
  9393  004A04  102E               	iorwf	(___fldiv@rem+3)^0,w,c
  9394  004A06  B4D8               	btfsc	status,2,c
  9395  004A08  D011               	goto	l3977
  9396  004A0A  8032               	bsf	___fldiv@grs^0,0,c
  9397  004A0C  D00F               	goto	l3977
  9398  004A0E                     l3971:
  9399  004A0E  90D8               	bcf	status,0,c
  9400  004A10  361F               	rlcf	___fldiv@b^0,f,c
  9401  004A12  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9402  004A14  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9403  004A16  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9404  004A18  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9405  004A1A  801F               	bsf	___fldiv@b^0,0,c
  9406  004A1C  90D8               	bcf	status,0,c
  9407  004A1E  3632               	rlcf	___fldiv@grs^0,f,c
  9408  004A20  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9409  004A22  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9410  004A24  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9411  004A26  0630               	decf	___fldiv@new_exp^0,f,c
  9412  004A28  A0D8               	btfss	status,0,c
  9413  004A2A  0631               	decf	(___fldiv@new_exp+1)^0,f,c
  9414  004A2C                     l3977:
  9415  004A2C  AE21               	btfss	(___fldiv@b+2)^0,7,c
  9416  004A2E  D7EF               	goto	l3971
  9417  004A30  0E00               	movlw	0
  9418  004A32  6E37               	movwf	___fldiv@aexp^0,c
  9419  004A34  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  9420  004A36  D017               	goto	l1306
  9421  004A38  0EFF               	movlw	255
  9422  004A3A  1432               	andwf	___fldiv@grs^0,w,c
  9423  004A3C  6E27               	movwf	??___fldiv^0,c
  9424  004A3E  0EFF               	movlw	255
  9425  004A40  1433               	andwf	(___fldiv@grs+1)^0,w,c
  9426  004A42  6E28               	movwf	(??___fldiv+1)^0,c
  9427  004A44  0EFF               	movlw	255
  9428  004A46  1434               	andwf	(___fldiv@grs+2)^0,w,c
  9429  004A48  6E29               	movwf	(??___fldiv+2)^0,c
  9430  004A4A  0E7F               	movlw	127
  9431  004A4C  1435               	andwf	(___fldiv@grs+3)^0,w,c
  9432  004A4E  6E2A               	movwf	(??___fldiv+3)^0,c
  9433  004A50  5027               	movf	??___fldiv^0,w,c
  9434  004A52  1028               	iorwf	(??___fldiv+1)^0,w,c
  9435  004A54  1029               	iorwf	(??___fldiv+2)^0,w,c
  9436  004A56  102A               	iorwf	(??___fldiv+3)^0,w,c
  9437  004A58  B4D8               	btfsc	status,2,c
  9438  004A5A  D003               	goto	l1307
  9439  004A5C                     u4430:
  9440  004A5C  0E01               	movlw	1
  9441  004A5E  6E37               	movwf	___fldiv@aexp^0,c
  9442  004A60  D002               	goto	l1306
  9443  004A62                     l1307:
  9444  004A62  B01F               	btfsc	___fldiv@b^0,0,c
  9445  004A64  D7FB               	goto	u4430
  9446  004A66                     l1306:
  9447  004A66  5037               	movf	___fldiv@aexp^0,w,c
  9448  004A68  B4D8               	btfsc	status,2,c
  9449  004A6A  D027               	goto	l3997
  9450  004A6C  0E01               	movlw	1
  9451  004A6E  261F               	addwf	___fldiv@b^0,f,c
  9452  004A70  0E00               	movlw	0
  9453  004A72  2220               	addwfc	(___fldiv@b+1)^0,f,c
  9454  004A74  2221               	addwfc	(___fldiv@b+2)^0,f,c
  9455  004A76  2222               	addwfc	(___fldiv@b+3)^0,f,c
  9456  004A78  A022               	btfss	(___fldiv@b+3)^0,0,c
  9457  004A7A  D01F               	goto	l3997
  9458  004A7C  0060  F07C  F027   	movff	___fldiv@b,??___fldiv
  9459  004A82  0060  F080  F028   	movff	___fldiv@b+1,??___fldiv+1
  9460  004A88  0060  F084  F029   	movff	___fldiv@b+2,??___fldiv+2
  9461  004A8E  0060  F088  F02A   	movff	___fldiv@b+3,??___fldiv+3
  9462  004A94  342A               	rlcf	(??___fldiv+3)^0,w,c
  9463  004A96  322A               	rrcf	(??___fldiv+3)^0,f,c
  9464  004A98  3229               	rrcf	(??___fldiv+2)^0,f,c
  9465  004A9A  3228               	rrcf	(??___fldiv+1)^0,f,c
  9466  004A9C  3227               	rrcf	??___fldiv^0,f,c
  9467  004A9E  0060  F09C  F01F   	movff	??___fldiv,___fldiv@b
  9468  004AA4  0060  F0A0  F020   	movff	??___fldiv+1,___fldiv@b+1
  9469  004AAA  0060  F0A4  F021   	movff	??___fldiv+2,___fldiv@b+2
  9470  004AB0  0060  F0A8  F022   	movff	??___fldiv+3,___fldiv@b+3
  9471  004AB6  4A30               	infsnz	___fldiv@new_exp^0,f,c
  9472  004AB8  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
  9473  004ABA                     l3997:
  9474  004ABA  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9475  004ABC  D010               	goto	l4001
  9476  004ABE  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9477  004AC0  E103               	bnz	u4470
  9478  004AC2  2830               	incf	___fldiv@new_exp^0,w,c
  9479  004AC4  A0D8               	btfss	status,0,c
  9480  004AC6  D00B               	goto	l4001
  9481  004AC8                     u4470:
  9482  004AC8  0E00               	movlw	0
  9483  004ACA  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9484  004ACC  6830               	setf	___fldiv@new_exp^0,c
  9485  004ACE  0E00               	movlw	0
  9486  004AD0  6E1F               	movwf	___fldiv@b^0,c
  9487  004AD2  0E00               	movlw	0
  9488  004AD4  6E20               	movwf	(___fldiv@b+1)^0,c
  9489  004AD6  0E00               	movlw	0
  9490  004AD8  6E21               	movwf	(___fldiv@b+2)^0,c
  9491  004ADA  0E00               	movlw	0
  9492  004ADC  6E22               	movwf	(___fldiv@b+3)^0,c
  9493  004ADE                     l4001:
  9494  004ADE  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9495  004AE0  D005               	goto	u4480
  9496  004AE2  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9497  004AE4  E111               	bnz	l4005
  9498  004AE6  0430               	decf	___fldiv@new_exp^0,w,c
  9499  004AE8  B0D8               	btfsc	status,0,c
  9500  004AEA  D00E               	goto	l4005
  9501  004AEC                     u4480:
  9502  004AEC  0E00               	movlw	0
  9503  004AEE  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9504  004AF0  0E00               	movlw	0
  9505  004AF2  6E30               	movwf	___fldiv@new_exp^0,c
  9506  004AF4  0E00               	movlw	0
  9507  004AF6  6E1F               	movwf	___fldiv@b^0,c
  9508  004AF8  0E00               	movlw	0
  9509  004AFA  6E20               	movwf	(___fldiv@b+1)^0,c
  9510  004AFC  0E00               	movlw	0
  9511  004AFE  6E21               	movwf	(___fldiv@b+2)^0,c
  9512  004B00  0E00               	movlw	0
  9513  004B02  6E22               	movwf	(___fldiv@b+3)^0,c
  9514  004B04  0E00               	movlw	0
  9515  004B06  6E2F               	movwf	___fldiv@sign^0,c
  9516  004B08                     l4005:
  9517  004B08  0060  F0C0  F036   	movff	___fldiv@new_exp,___fldiv@bexp
  9518  004B0E  A036               	btfss	___fldiv@bexp^0,0,c
  9519  004B10  D002               	goto	l4011
  9520  004B12  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9521  004B14  D001               	goto	l4013
  9522  004B16                     l4011:
  9523  004B16  9E21               	bcf	(___fldiv@b+2)^0,7,c
  9524  004B18                     l4013:
  9525  004B18  90D8               	bcf	status,0,c
  9526  004B1A  3036               	rrcf	___fldiv@bexp^0,w,c
  9527  004B1C  6E22               	movwf	(___fldiv@b+3)^0,c
  9528  004B1E  D6FC               	goto	l3927
  9529  004B20                     __end_of___fldiv:
  9530                           	opt callstack 0
  9531                           
  9532 ;; *************** function ___awmod *****************
  9533 ;; Defined at:
  9534 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  dividend        2    0[COMRAM] int 
  9537 ;;  divisor         2    2[COMRAM] int 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  sign            1    5[COMRAM] unsigned char 
  9540 ;;  counter         1    4[COMRAM] unsigned char 
  9541 ;; Return value:  Size  Location     Type
  9542 ;;                  2    0[COMRAM] int 
  9543 ;; Registers used:
  9544 ;;		wreg, status,2, status,0
  9545 ;; Tracked objects:
  9546 ;;		On entry : 3F/0
  9547 ;;		On exit  : 3F/0
  9548 ;;		Unchanged: 3F/0
  9549 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9550 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9551 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9553 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9554 ;;Total ram usage:        6 bytes
  9555 ;; Hardware stack levels used:    1
  9556 ;; This function calls:
  9557 ;;		Nothing
  9558 ;; This function is called by:
  9559 ;;		_efgtoa
  9560 ;; This function uses a non-reentrant model
  9561 ;;
  9562                           
  9563                           	psect	text31
  9564  005E34                     __ptext31:
  9565                           	opt callstack 0
  9566  005E34                     ___awmod:
  9567                           	opt callstack 25
  9568                           
  9569                           ; BSR set to: 0
  9570                           
  9571                           ;incstack = 0
  9572  005E34  0E00               	movlw	0
  9573  005E36  6E06               	movwf	___awmod@sign^0,c
  9574                           
  9575                           ; BSR set to: 0
  9576  005E38  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  9577  005E3A  D006               	goto	l4209
  9578                           
  9579                           ; BSR set to: 0
  9580  005E3C  6C01               	negf	___awmod@dividend^0,c
  9581  005E3E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9582  005E40  B0D8               	btfsc	status,0,c
  9583  005E42  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9584                           
  9585                           ; BSR set to: 0
  9586  005E44  0E01               	movlw	1
  9587  005E46  6E06               	movwf	___awmod@sign^0,c
  9588  005E48                     l4209:
  9589                           
  9590                           ; BSR set to: 0
  9591  005E48  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9592  005E4A  D004               	goto	l4213
  9593                           
  9594                           ; BSR set to: 0
  9595  005E4C  6C03               	negf	___awmod@divisor^0,c
  9596  005E4E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9597  005E50  B0D8               	btfsc	status,0,c
  9598  005E52  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9599  005E54                     l4213:
  9600                           
  9601                           ; BSR set to: 0
  9602  005E54  5003               	movf	___awmod@divisor^0,w,c
  9603  005E56  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9604  005E58  B4D8               	btfsc	status,2,c
  9605  005E5A  D018               	goto	l4229
  9606                           
  9607                           ; BSR set to: 0
  9608  005E5C  0E01               	movlw	1
  9609  005E5E  6E05               	movwf	___awmod@counter^0,c
  9610  005E60  D004               	goto	l4219
  9611  005E62                     l4217:
  9612                           
  9613                           ; BSR set to: 0
  9614  005E62  90D8               	bcf	status,0,c
  9615  005E64  3603               	rlcf	___awmod@divisor^0,f,c
  9616  005E66  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9617  005E68  2A05               	incf	___awmod@counter^0,f,c
  9618  005E6A                     l4219:
  9619                           
  9620                           ; BSR set to: 0
  9621  005E6A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9622  005E6C  D7FA               	goto	l4217
  9623  005E6E                     u4770:
  9624                           
  9625                           ; BSR set to: 0
  9626  005E6E  5003               	movf	___awmod@divisor^0,w,c
  9627  005E70  5C01               	subwf	___awmod@dividend^0,w,c
  9628  005E72  5004               	movf	(___awmod@divisor+1)^0,w,c
  9629  005E74  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9630  005E76  A0D8               	btfss	status,0,c
  9631  005E78  D004               	goto	l4225
  9632                           
  9633                           ; BSR set to: 0
  9634  005E7A  5003               	movf	___awmod@divisor^0,w,c
  9635  005E7C  5E01               	subwf	___awmod@dividend^0,f,c
  9636  005E7E  5004               	movf	(___awmod@divisor+1)^0,w,c
  9637  005E80  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9638  005E82                     l4225:
  9639                           
  9640                           ; BSR set to: 0
  9641  005E82  90D8               	bcf	status,0,c
  9642  005E84  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9643  005E86  3203               	rrcf	___awmod@divisor^0,f,c
  9644                           
  9645                           ; BSR set to: 0
  9646  005E88  2E05               	decfsz	___awmod@counter^0,f,c
  9647  005E8A  D7F1               	goto	u4770
  9648  005E8C                     l4229:
  9649                           
  9650                           ; BSR set to: 0
  9651  005E8C  5006               	movf	___awmod@sign^0,w,c
  9652  005E8E  B4D8               	btfsc	status,2,c
  9653  005E90  D004               	goto	l4233
  9654                           
  9655                           ; BSR set to: 0
  9656  005E92  6C01               	negf	___awmod@dividend^0,c
  9657  005E94  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9658  005E96  B0D8               	btfsc	status,0,c
  9659  005E98  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9660  005E9A                     l4233:
  9661                           
  9662                           ; BSR set to: 0
  9663  005E9A  0060  F004  F001   	movff	___awmod@dividend,?___awmod
  9664  005EA0  0060  F008  F002   	movff	___awmod@dividend+1,?___awmod+1
  9665                           
  9666                           ; BSR set to: 0
  9667  005EA6  0012               	return		;funcret
  9668  005EA8                     __end_of___awmod:
  9669                           	opt callstack 0
  9670                           
  9671 ;; *************** function ___awdiv *****************
  9672 ;; Defined at:
  9673 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;  dividend        2    0[COMRAM] int 
  9676 ;;  divisor         2    2[COMRAM] int 
  9677 ;; Auto vars:     Size  Location     Type
  9678 ;;  quotient        2    6[COMRAM] int 
  9679 ;;  sign            1    5[COMRAM] unsigned char 
  9680 ;;  counter         1    4[COMRAM] unsigned char 
  9681 ;; Return value:  Size  Location     Type
  9682 ;;                  2    0[COMRAM] int 
  9683 ;; Registers used:
  9684 ;;		wreg, status,2, status,0
  9685 ;; Tracked objects:
  9686 ;;		On entry : 3F/0
  9687 ;;		On exit  : 3F/0
  9688 ;;		Unchanged: 3F/0
  9689 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9691 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9693 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9694 ;;Total ram usage:        8 bytes
  9695 ;; Hardware stack levels used:    1
  9696 ;; This function calls:
  9697 ;;		Nothing
  9698 ;; This function is called by:
  9699 ;;		_main_loop
  9700 ;;		_efgtoa
  9701 ;; This function uses a non-reentrant model
  9702 ;;
  9703                           
  9704                           	psect	text32
  9705  005C38                     __ptext32:
  9706                           	opt callstack 0
  9707  005C38                     ___awdiv:
  9708                           	opt callstack 25
  9709                           
  9710                           ; BSR set to: 0
  9711                           
  9712                           ; BSR set to: 0
  9713                           ;incstack = 0
  9714  005C38  0E00               	movlw	0
  9715  005C3A  6E06               	movwf	___awdiv@sign^0,c
  9716                           
  9717                           ; BSR set to: 0
  9718  005C3C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9719  005C3E  D006               	goto	l4165
  9720                           
  9721                           ; BSR set to: 0
  9722  005C40  6C03               	negf	___awdiv@divisor^0,c
  9723  005C42  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9724  005C44  B0D8               	btfsc	status,0,c
  9725  005C46  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9726                           
  9727                           ; BSR set to: 0
  9728  005C48  0E01               	movlw	1
  9729  005C4A  6E06               	movwf	___awdiv@sign^0,c
  9730  005C4C                     l4165:
  9731                           
  9732                           ; BSR set to: 0
  9733  005C4C  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  9734  005C4E  D006               	goto	l4171
  9735                           
  9736                           ; BSR set to: 0
  9737  005C50  6C01               	negf	___awdiv@dividend^0,c
  9738  005C52  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9739  005C54  B0D8               	btfsc	status,0,c
  9740  005C56  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9741                           
  9742                           ; BSR set to: 0
  9743  005C58  0E01               	movlw	1
  9744  005C5A  1A06               	xorwf	___awdiv@sign^0,f,c
  9745  005C5C                     l4171:
  9746                           
  9747                           ; BSR set to: 0
  9748  005C5C  0E00               	movlw	0
  9749  005C5E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9750  005C60  0E00               	movlw	0
  9751  005C62  6E07               	movwf	___awdiv@quotient^0,c
  9752                           
  9753                           ; BSR set to: 0
  9754  005C64  5003               	movf	___awdiv@divisor^0,w,c
  9755  005C66  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9756  005C68  B4D8               	btfsc	status,2,c
  9757  005C6A  D01C               	goto	l4193
  9758                           
  9759                           ; BSR set to: 0
  9760  005C6C  0E01               	movlw	1
  9761  005C6E  6E05               	movwf	___awdiv@counter^0,c
  9762  005C70  D004               	goto	l4179
  9763  005C72                     l4177:
  9764                           
  9765                           ; BSR set to: 0
  9766  005C72  90D8               	bcf	status,0,c
  9767  005C74  3603               	rlcf	___awdiv@divisor^0,f,c
  9768  005C76  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9769  005C78  2A05               	incf	___awdiv@counter^0,f,c
  9770  005C7A                     l4179:
  9771                           
  9772                           ; BSR set to: 0
  9773  005C7A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9774  005C7C  D7FA               	goto	l4177
  9775  005C7E                     u4710:
  9776                           
  9777                           ; BSR set to: 0
  9778  005C7E  90D8               	bcf	status,0,c
  9779  005C80  3607               	rlcf	___awdiv@quotient^0,f,c
  9780  005C82  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9781                           
  9782                           ; BSR set to: 0
  9783  005C84  5003               	movf	___awdiv@divisor^0,w,c
  9784  005C86  5C01               	subwf	___awdiv@dividend^0,w,c
  9785  005C88  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9786  005C8A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9787  005C8C  A0D8               	btfss	status,0,c
  9788  005C8E  D005               	goto	l4189
  9789                           
  9790                           ; BSR set to: 0
  9791  005C90  5003               	movf	___awdiv@divisor^0,w,c
  9792  005C92  5E01               	subwf	___awdiv@dividend^0,f,c
  9793  005C94  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9794  005C96  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9795                           
  9796                           ; BSR set to: 0
  9797  005C98  8007               	bsf	___awdiv@quotient^0,0,c
  9798  005C9A                     l4189:
  9799                           
  9800                           ; BSR set to: 0
  9801  005C9A  90D8               	bcf	status,0,c
  9802  005C9C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9803  005C9E  3203               	rrcf	___awdiv@divisor^0,f,c
  9804                           
  9805                           ; BSR set to: 0
  9806  005CA0  2E05               	decfsz	___awdiv@counter^0,f,c
  9807  005CA2  D7ED               	goto	u4710
  9808  005CA4                     l4193:
  9809                           
  9810                           ; BSR set to: 0
  9811  005CA4  5006               	movf	___awdiv@sign^0,w,c
  9812  005CA6  B4D8               	btfsc	status,2,c
  9813  005CA8  D004               	goto	l4197
  9814                           
  9815                           ; BSR set to: 0
  9816  005CAA  6C07               	negf	___awdiv@quotient^0,c
  9817  005CAC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9818  005CAE  B0D8               	btfsc	status,0,c
  9819  005CB0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9820  005CB2                     l4197:
  9821                           
  9822                           ; BSR set to: 0
  9823  005CB2  0060  F01C  F001   	movff	___awdiv@quotient,?___awdiv
  9824  005CB8  0060  F020  F002   	movff	___awdiv@quotient+1,?___awdiv+1
  9825                           
  9826                           ; BSR set to: 0
  9827  005CBE  0012               	return		;funcret
  9828  005CC0                     __end_of___awdiv:
  9829                           	opt callstack 0
  9830                           
  9831 ;; *************** function _atoi *****************
  9832 ;; Defined at:
  9833 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9834 ;; Parameters:    Size  Location     Type
  9835 ;;  s               1    7[COMRAM] PTR const unsigned char 
  9836 ;;		 -> STR_9(20), STR_8(20), STR_7(20), STR_6(20), 
  9837 ;;		 -> STR_5(17), 
  9838 ;; Auto vars:     Size  Location     Type
  9839 ;;  n               2   20[COMRAM] int 
  9840 ;;  neg             2   13[COMRAM] int 
  9841 ;; Return value:  Size  Location     Type
  9842 ;;                  2    7[COMRAM] int 
  9843 ;; Registers used:
  9844 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9845 ;; Tracked objects:
  9846 ;;		On entry : 3F/4
  9847 ;;		On exit  : 0/0
  9848 ;;		Unchanged: 0/0
  9849 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9851 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;Total ram usage:       15 bytes
  9855 ;; Hardware stack levels used:    1
  9856 ;; Hardware stack levels required when called:    1
  9857 ;; This function calls:
  9858 ;;		___wmul
  9859 ;;		_isdigit
  9860 ;;		_isspace
  9861 ;; This function is called by:
  9862 ;;		_vfpfcnvrt
  9863 ;; This function uses a non-reentrant model
  9864 ;;
  9865                           
  9866                           	psect	text33
  9867  004E82                     __ptext33:
  9868                           	opt callstack 0
  9869  004E82                     _atoi:
  9870                           	opt callstack 25
  9871                           
  9872                           ; BSR set to: 4
  9873                           
  9874                           ; BSR set to: 0
  9875                           ;incstack = 0
  9876  004E82  0E00               	movlw	0
  9877  004E84  6E16               	movwf	(atoi@n+1)^0,c
  9878  004E86  0E00               	movlw	0
  9879  004E88  6E15               	movwf	atoi@n^0,c
  9880  004E8A  0E00               	movlw	0
  9881  004E8C  6E0F               	movwf	(atoi@neg+1)^0,c
  9882  004E8E  0E00               	movlw	0
  9883  004E90  6E0E               	movwf	atoi@neg^0,c
  9884  004E92  D001               	goto	l4659
  9885  004E94                     l4657:
  9886                           
  9887                           ; BSR set to: 4
  9888  004E94  2A08               	incf	atoi@s^0,f,c
  9889  004E96                     l4659:
  9890                           
  9891                           ; BSR set to: 4
  9892  004E96  0E01               	movlw	1
  9893  004E98  6E14               	movwf	_atoi$1121^0,c
  9894                           
  9895                           ; BSR set to: 4
  9896  004E9A  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9897  004EA0                     	if	1	;There is more than 1 active tblptr byte
  9898  004EA0  0E20               	movlw	high __smallconst
  9899  004EA2  6EF7               	movwf	tblptrh,c
  9900  004EA4                     	endif
  9901  004EA4                     	if	0	;tblptru may be non-zero
  9902  004EA4                     	endif
  9903  004EA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9904  004EA4  0E00               	movlw	low (__smallconst shr (0+16))
  9905  004EA6  6EF8               	movwf	tblptru,c
  9906  004EA8                     	endif
  9907  004EA8  0008               	tblrd		*
  9908  004EAA  50F5               	movf	tablat,w,c
  9909  004EAC  0A20               	xorlw	32
  9910  004EAE  B4D8               	btfsc	status,2,c
  9911  004EB0  D01B               	goto	l4667
  9912                           
  9913                           ; BSR set to: 4
  9914  004EB2  0EF7               	movlw	247
  9915  004EB4  6E0A               	movwf	??_atoi^0,c
  9916  004EB6  0EFF               	movlw	255
  9917  004EB8  6E0B               	movwf	(??_atoi+1)^0,c
  9918  004EBA  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9919  004EC0                     	if	1	;There is more than 1 active tblptr byte
  9920  004EC0  0E20               	movlw	high __smallconst
  9921  004EC2  6EF7               	movwf	tblptrh,c
  9922  004EC4                     	endif
  9923  004EC4                     	if	0	;tblptru may be non-zero
  9924  004EC4                     	endif
  9925  004EC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9926  004EC4  0E00               	movlw	low (__smallconst shr (0+16))
  9927  004EC6  6EF8               	movwf	tblptru,c
  9928  004EC8                     	endif
  9929  004EC8  0008               	tblrd		*
  9930  004ECA  50F5               	movf	tablat,w,c
  9931  004ECC  6E0C               	movwf	(??_atoi+2)^0,c
  9932  004ECE  6A0D               	clrf	(??_atoi+3)^0,c
  9933  004ED0  500A               	movf	??_atoi^0,w,c
  9934  004ED2  260C               	addwf	(??_atoi+2)^0,f,c
  9935  004ED4  500B               	movf	(??_atoi+1)^0,w,c
  9936  004ED6  220D               	addwfc	(??_atoi+3)^0,f,c
  9937  004ED8  500D               	movf	(??_atoi+3)^0,w,c
  9938  004EDA  E104               	bnz	u5540
  9939  004EDC  0E05               	movlw	5
  9940  004EDE  5C0C               	subwf	(??_atoi+2)^0,w,c
  9941  004EE0  A0D8               	btfss	status,0,c
  9942  004EE2  D002               	goto	l4667
  9943  004EE4                     u5540:
  9944                           
  9945                           ; BSR set to: 4
  9946  004EE4  0E00               	movlw	0
  9947  004EE6  6E14               	movwf	_atoi$1121^0,c
  9948  004EE8                     l4667:
  9949                           
  9950                           ; BSR set to: 4
  9951  004EE8  0060  F050  F010   	movff	_atoi$1121,_atoi$1120
  9952  004EEE  6A11               	clrf	(_atoi$1120+1)^0,c
  9953                           
  9954                           ; BSR set to: 4
  9955  004EF0  5010               	movf	_atoi$1120^0,w,c
  9956  004EF2  1011               	iorwf	(_atoi$1120+1)^0,w,c
  9957  004EF4  B4D8               	btfsc	status,2,c
  9958  004EF6  D007               	goto	l4677
  9959  004EF8  D7CD               	goto	l4657
  9960  004EFA                     l4673:
  9961                           
  9962                           ; BSR set to: 4
  9963  004EFA  0E00               	movlw	0
  9964  004EFC  6E0F               	movwf	(atoi@neg+1)^0,c
  9965  004EFE  0E01               	movlw	1
  9966  004F00  6E0E               	movwf	atoi@neg^0,c
  9967  004F02                     l4675:
  9968  004F02  2A08               	incf	atoi@s^0,f,c
  9969  004F04  D036               	goto	l4683
  9970  004F06                     l4677:
  9971                           
  9972                           ; BSR set to: 4
  9973  004F06  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9974  004F0C                     	if	1	;There is more than 1 active tblptr byte
  9975  004F0C  0E20               	movlw	high __smallconst
  9976  004F0E  6EF7               	movwf	tblptrh,c
  9977  004F10                     	endif
  9978  004F10                     	if	0	;tblptru may be non-zero
  9979  004F10                     	endif
  9980  004F10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9981  004F10  0E00               	movlw	low (__smallconst shr (0+16))
  9982  004F12  6EF8               	movwf	tblptru,c
  9983  004F14                     	endif
  9984  004F14  0008               	tblrd		*
  9985  004F16  50F5               	movf	tablat,w,c
  9986  004F18  6E0A               	movwf	??_atoi^0,c
  9987  004F1A  6A0B               	clrf	(??_atoi+1)^0,c
  9988                           
  9989                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9990                           ; Switch size 1, requested type "simple"
  9991                           ; Number of cases is 1, Range of values is 0 to 0
  9992                           ; switch strategies available:
  9993                           ; Name         Instructions Cycles
  9994                           ; simple_byte            4     3 (average)
  9995                           ;	Chosen strategy is simple_byte
  9996  004F1C  500B               	movf	(??_atoi+1)^0,w,c
  9997  004F1E  0A00               	xorlw	0	; case 0
  9998  004F20  A4D8               	btfss	status,2,c
  9999  004F22  D027               	goto	l4683
 10000                           
 10001                           ; BSR set to: 4
 10002                           ; Switch size 1, requested type "simple"
 10003                           ; Number of cases is 2, Range of values is 43 to 45
 10004                           ; switch strategies available:
 10005                           ; Name         Instructions Cycles
 10006                           ; simple_byte            7     4 (average)
 10007                           ;	Chosen strategy is simple_byte
 10008  004F24  500A               	movf	??_atoi^0,w,c
 10009  004F26  0A2B               	xorlw	43	; case 43
 10010  004F28  B4D8               	btfsc	status,2,c
 10011  004F2A  D7EB               	goto	l4675
 10012  004F2C  0A06               	xorlw	6	; case 45
 10013  004F2E  B4D8               	btfsc	status,2,c
 10014  004F30  D7E4               	goto	l4673
 10015  004F32  D01F               	goto	l4683
 10016  004F34                     l4679:
 10017  004F34  0060  F054  F001   	movff	atoi@n,___wmul@multiplier
 10018  004F3A  0060  F058  F002   	movff	atoi@n+1,___wmul@multiplier+1
 10019  004F40  0E00               	movlw	0
 10020  004F42  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10021  004F44  0E0A               	movlw	10
 10022  004F46  6E03               	movwf	___wmul@multiplicand^0,c
 10023  004F48  ECB2  F031         	call	___wmul	;wreg free
 10024  004F4C  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10025  004F52                     	if	1	;There is more than 1 active tblptr byte
 10026  004F52  0E20               	movlw	high __smallconst
 10027  004F54  6EF7               	movwf	tblptrh,c
 10028  004F56                     	endif
 10029  004F56                     	if	0	;tblptru may be non-zero
 10030  004F56                     	endif
 10031  004F56                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10032  004F56  0E00               	movlw	low (__smallconst shr (0+16))
 10033  004F58  6EF8               	movwf	tblptru,c
 10034  004F5A                     	endif
 10035  004F5A  0008               	tblrd		*
 10036  004F5C  50F5               	movf	tablat,w,c
 10037  004F5E  5E01               	subwf	?___wmul^0,f,c
 10038  004F60  0E00               	movlw	0
 10039  004F62  5A02               	subwfb	(?___wmul+1)^0,f,c
 10040  004F64  0E30               	movlw	48
 10041  004F66  2401               	addwf	?___wmul^0,w,c
 10042  004F68  6E15               	movwf	atoi@n^0,c
 10043  004F6A  0E00               	movlw	0
 10044  004F6C  2002               	addwfc	(?___wmul+1)^0,w,c
 10045  004F6E  6E16               	movwf	(atoi@n+1)^0,c
 10046  004F70  D7C8               	goto	l4675
 10047  004F72                     l4683:
 10048  004F72  0ED0               	movlw	208
 10049  004F74  6E0A               	movwf	??_atoi^0,c
 10050  004F76  0EFF               	movlw	255
 10051  004F78  6E0B               	movwf	(??_atoi+1)^0,c
 10052  004F7A  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10053  004F80                     	if	1	;There is more than 1 active tblptr byte
 10054  004F80  0E20               	movlw	high __smallconst
 10055  004F82  6EF7               	movwf	tblptrh,c
 10056  004F84                     	endif
 10057  004F84                     	if	0	;tblptru may be non-zero
 10058  004F84                     	endif
 10059  004F84                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10060  004F84  0E00               	movlw	low (__smallconst shr (0+16))
 10061  004F86  6EF8               	movwf	tblptru,c
 10062  004F88                     	endif
 10063  004F88  0008               	tblrd		*
 10064  004F8A  50F5               	movf	tablat,w,c
 10065  004F8C  6E0C               	movwf	(??_atoi+2)^0,c
 10066  004F8E  6A0D               	clrf	(??_atoi+3)^0,c
 10067  004F90  500A               	movf	??_atoi^0,w,c
 10068  004F92  260C               	addwf	(??_atoi+2)^0,f,c
 10069  004F94  500B               	movf	(??_atoi+1)^0,w,c
 10070  004F96  220D               	addwfc	(??_atoi+3)^0,f,c
 10071  004F98  500D               	movf	(??_atoi+3)^0,w,c
 10072  004F9A  E106               	bnz	u5560
 10073  004F9C  0E0A               	movlw	10
 10074  004F9E  5C0C               	subwf	(??_atoi+2)^0,w,c
 10075  004FA0  B0D8               	btfsc	status,0,c
 10076  004FA2  D002               	goto	u5560
 10077  004FA4  0E01               	movlw	1
 10078  004FA6  D001               	goto	u5570
 10079  004FA8                     u5560:
 10080  004FA8  0E00               	movlw	0
 10081  004FAA                     u5570:
 10082  004FAA  6E12               	movwf	_atoi$1122^0,c
 10083  004FAC  6A13               	clrf	(_atoi$1122+1)^0,c
 10084  004FAE  5012               	movf	_atoi$1122^0,w,c
 10085  004FB0  1013               	iorwf	(_atoi$1122+1)^0,w,c
 10086  004FB2  A4D8               	btfss	status,2,c
 10087  004FB4  D7BF               	goto	l4679
 10088  004FB6  500E               	movf	atoi@neg^0,w,c
 10089  004FB8  100F               	iorwf	(atoi@neg+1)^0,w,c
 10090  004FBA  A4D8               	btfss	status,2,c
 10091  004FBC  D011               	goto	l1421
 10092  004FBE  0060  F054  F00A   	movff	atoi@n,??_atoi
 10093  004FC4  0060  F058  F00B   	movff	atoi@n+1,??_atoi+1
 10094  004FCA  1E0A               	comf	??_atoi^0,f,c
 10095  004FCC  1E0B               	comf	(??_atoi+1)^0,f,c
 10096  004FCE  4A0A               	infsnz	??_atoi^0,f,c
 10097  004FD0  2A0B               	incf	(??_atoi+1)^0,f,c
 10098  004FD2  0060  F028  F008   	movff	??_atoi,?_atoi
 10099  004FD8  0060  F02C  F009   	movff	??_atoi+1,?_atoi+1
 10100  004FDE  0012               	return	
 10101  004FE0                     l1421:
 10102  004FE0  0060  F054  F008   	movff	atoi@n,?_atoi
 10103  004FE6  0060  F058  F009   	movff	atoi@n+1,?_atoi+1
 10104  004FEC  0012               	return		;funcret
 10105  004FEE                     __end_of_atoi:
 10106                           	opt callstack 0
 10107                           
 10108 ;; *************** function _isspace *****************
 10109 ;; Defined at:
 10110 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  c               2    0[COMRAM] int 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;		None
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  2    0[COMRAM] int 
 10117 ;; Registers used:
 10118 ;;		wreg, status,2, status,0
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10124 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10126 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10127 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10128 ;;Total ram usage:        7 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; This function calls:
 10131 ;;		Nothing
 10132 ;; This function is called by:
 10133 ;;		_atoi
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text34
 10138  0061A8                     __ptext34:
 10139                           	opt callstack 0
 10140  0061A8                     _isspace:
 10141                           	opt callstack 25
 10142                           
 10143                           ;incstack = 0
 10144  0061A8  0E01               	movlw	1
 10145  0061AA  6E07               	movwf	_isspace$1151^0,c
 10146  0061AC  0E20               	movlw	32
 10147  0061AE  1801               	xorwf	isspace@c^0,w,c
 10148  0061B0  1002               	iorwf	(isspace@c+1)^0,w,c
 10149  0061B2  B4D8               	btfsc	status,2,c
 10150  0061B4  D016               	goto	l4335
 10151  0061B6  0EF7               	movlw	247
 10152  0061B8  6E03               	movwf	??_isspace^0,c
 10153  0061BA  0EFF               	movlw	255
 10154  0061BC  6E04               	movwf	(??_isspace+1)^0,c
 10155  0061BE  0060  F004  F005   	movff	isspace@c,??_isspace+2
 10156  0061C4  0060  F008  F006   	movff	isspace@c+1,??_isspace+3
 10157  0061CA  5003               	movf	??_isspace^0,w,c
 10158  0061CC  2605               	addwf	(??_isspace+2)^0,f,c
 10159  0061CE  5004               	movf	(??_isspace+1)^0,w,c
 10160  0061D0  2206               	addwfc	(??_isspace+3)^0,f,c
 10161  0061D2  5006               	movf	(??_isspace+3)^0,w,c
 10162  0061D4  E104               	bnz	u4970
 10163  0061D6  0E05               	movlw	5
 10164  0061D8  5C05               	subwf	(??_isspace+2)^0,w,c
 10165  0061DA  A0D8               	btfss	status,0,c
 10166  0061DC  D002               	goto	l4335
 10167  0061DE                     u4970:
 10168  0061DE  0E00               	movlw	0
 10169  0061E0  6E07               	movwf	_isspace$1151^0,c
 10170  0061E2                     l4335:
 10171  0061E2  0060  F01C  F001   	movff	_isspace$1151,?_isspace
 10172  0061E8  6A02               	clrf	(?_isspace+1)^0,c
 10173  0061EA  0012               	return		;funcret
 10174  0061EC                     __end_of_isspace:
 10175                           	opt callstack 0
 10176                           
 10177 ;; *************** function _isdigit *****************
 10178 ;; Defined at:
 10179 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10180 ;; Parameters:    Size  Location     Type
 10181 ;;  c               2    0[COMRAM] int 
 10182 ;; Auto vars:     Size  Location     Type
 10183 ;;		None
 10184 ;; Return value:  Size  Location     Type
 10185 ;;                  2    0[COMRAM] int 
 10186 ;; Registers used:
 10187 ;;		wreg, status,2, status,0
 10188 ;; Tracked objects:
 10189 ;;		On entry : 0/0
 10190 ;;		On exit  : 0/0
 10191 ;;		Unchanged: 0/0
 10192 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10193 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10196 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10197 ;;Total ram usage:        6 bytes
 10198 ;; Hardware stack levels used:    1
 10199 ;; This function calls:
 10200 ;;		Nothing
 10201 ;; This function is called by:
 10202 ;;		_vfpfcnvrt
 10203 ;;		_atoi
 10204 ;; This function uses a non-reentrant model
 10205 ;;
 10206                           
 10207                           	psect	text35
 10208  0062FE                     __ptext35:
 10209                           	opt callstack 0
 10210  0062FE                     _isdigit:
 10211                           	opt callstack 26
 10212                           
 10213                           ;incstack = 0
 10214  0062FE  0ED0               	movlw	208
 10215  006300  6E03               	movwf	??_isdigit^0,c
 10216  006302  0EFF               	movlw	255
 10217  006304  6E04               	movwf	(??_isdigit+1)^0,c
 10218  006306  0060  F004  F005   	movff	isdigit@c,??_isdigit+2
 10219  00630C  0060  F008  F006   	movff	isdigit@c+1,??_isdigit+3
 10220  006312  5003               	movf	??_isdigit^0,w,c
 10221  006314  2605               	addwf	(??_isdigit+2)^0,f,c
 10222  006316  5004               	movf	(??_isdigit+1)^0,w,c
 10223  006318  2206               	addwfc	(??_isdigit+3)^0,f,c
 10224  00631A  5006               	movf	(??_isdigit+3)^0,w,c
 10225  00631C  E106               	bnz	u4250
 10226  00631E  0E0A               	movlw	10
 10227  006320  5C05               	subwf	(??_isdigit+2)^0,w,c
 10228  006322  B0D8               	btfsc	status,0,c
 10229  006324  D002               	goto	u4250
 10230  006326  0E01               	movlw	1
 10231  006328  D001               	goto	u4260
 10232  00632A                     u4250:
 10233  00632A  0E00               	movlw	0
 10234  00632C                     u4260:
 10235  00632C  6E01               	movwf	?_isdigit^0,c
 10236  00632E  6A02               	clrf	(?_isdigit+1)^0,c
 10237  006330  0012               	return		;funcret
 10238  006332                     __end_of_isdigit:
 10239                           	opt callstack 0
 10240                           
 10241 ;; *************** function ___wmul *****************
 10242 ;; Defined at:
 10243 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10244 ;; Parameters:    Size  Location     Type
 10245 ;;  multiplier      2    0[COMRAM] unsigned int 
 10246 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10247 ;; Auto vars:     Size  Location     Type
 10248 ;;  product         2    4[COMRAM] unsigned int 
 10249 ;; Return value:  Size  Location     Type
 10250 ;;                  2    0[COMRAM] unsigned int 
 10251 ;; Registers used:
 10252 ;;		wreg, status,2, status,0, prodl, prodh
 10253 ;; Tracked objects:
 10254 ;;		On entry : 0/4
 10255 ;;		On exit  : 0/0
 10256 ;;		Unchanged: 0/0
 10257 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10259 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10262 ;;Total ram usage:        6 bytes
 10263 ;; Hardware stack levels used:    1
 10264 ;; This function calls:
 10265 ;;		Nothing
 10266 ;; This function is called by:
 10267 ;;		_atoi
 10268 ;; This function uses a non-reentrant model
 10269 ;;
 10270                           
 10271                           	psect	text36
 10272  006364                     __ptext36:
 10273                           	opt callstack 0
 10274  006364                     ___wmul:
 10275                           	opt callstack 25
 10276                           
 10277                           ;incstack = 0
 10278  006364  5001               	movf	___wmul@multiplier^0,w,c
 10279  006366  0203               	mulwf	___wmul@multiplicand^0,c
 10280  006368  006F FFCC  F005    	movff	prodl,___wmul@product
 10281  00636E  006F FFD0  F006    	movff	prodh,___wmul@product+1
 10282  006374  5001               	movf	___wmul@multiplier^0,w,c
 10283  006376  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10284  006378  50F3               	movf	243,w,c
 10285  00637A  2606               	addwf	(___wmul@product+1)^0,f,c
 10286  00637C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10287  00637E  0203               	mulwf	___wmul@multiplicand^0,c
 10288  006380  50F3               	movf	243,w,c
 10289  006382  2606               	addwf	(___wmul@product+1)^0,f,c
 10290  006384  0060  F014  F001   	movff	___wmul@product,?___wmul
 10291  00638A  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
 10292  006390  0012               	return		;funcret
 10293  006392                     __end_of___wmul:
 10294                           	opt callstack 0
 10295                           
 10296 ;; *************** function _setLED *****************
 10297 ;; Defined at:
 10298 ;;		line 115 in file "main.c"
 10299 ;; Parameters:    Size  Location     Type
 10300 ;;  mod             4    0[BANK0 ] long 
 10301 ;;  step            4    4[BANK0 ] long 
 10302 ;; Auto vars:     Size  Location     Type
 10303 ;;  shift           4   58[BANK0 ] long 
 10304 ;;  sr              4   54[BANK0 ] long 
 10305 ;;  sb              4   50[BANK0 ] long 
 10306 ;;  sg              4   46[BANK0 ] long 
 10307 ;;  b               4   42[BANK0 ] long 
 10308 ;;  g               4   38[BANK0 ] long 
 10309 ;;  r               4   16[BANK0 ] long 
 10310 ;;  trueMod         2   36[BANK0 ] unsigned short 
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      void 
 10313 ;; Registers used:
 10314 ;;		wreg, status,2, status,0, cstack
 10315 ;; Tracked objects:
 10316 ;;		On entry : 3F/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10320 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10321 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10322 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10323 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10324 ;;Total ram usage:       62 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    1
 10327 ;; This function calls:
 10328 ;;		___aldiv
 10329 ;;		___almod
 10330 ;;		___flge
 10331 ;;		___lmul
 10332 ;; This function is called by:
 10333 ;;		_main_loop
 10334 ;; This function uses a non-reentrant model
 10335 ;;
 10336                           
 10337                           	psect	text37
 10338  003644                     __ptext37:
 10339                           	opt callstack 0
 10340  003644                     _setLED:
 10341                           	opt callstack 28
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;main.c: 116:     uint16_t trueMod = (mod < 0 ? 0 : (mod > 4095 ? 4095 : mod));
 10345                           
 10346                           ;incstack = 0
 10347  003644  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10348  003646  D02B               	goto	l5033
 10349                           
 10350                           ; BSR set to: 0
 10351  003648  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10352  00364A  D007               	goto	u6220
 10353  00364C  5163               	movf	(setLED@mod+3)& (0+255),w,b
 10354  00364E  1162               	iorwf	(setLED@mod+2)& (0+255),w,b
 10355  003650  E111               	bnz	l5029
 10356  003652  0E10               	movlw	16
 10357  003654  5D61               	subwf	(setLED@mod+1)& (0+255),w,b
 10358  003656  B0D8               	btfsc	status,0,c
 10359  003658  D00D               	goto	l5029
 10360  00365A                     u6220:
 10361                           
 10362                           ; BSR set to: 0
 10363  00365A  0060  F180  F078   	movff	setLED@mod,_setLED$288
 10364  003660  0060  F184  F079   	movff	setLED@mod+1,_setLED$288+1
 10365  003666  0060  F188  F07A   	movff	setLED@mod+2,_setLED$288+2
 10366  00366C  0060  F18C  F07B   	movff	setLED@mod+3,_setLED$288+3
 10367  003672  D008               	goto	l5031
 10368  003674                     l5029:
 10369                           
 10370                           ; BSR set to: 0
 10371  003674  0EFF               	movlw	255
 10372  003676  6F78               	movwf	_setLED$288& (0+255),b
 10373  003678  0E0F               	movlw	15
 10374  00367A  6F79               	movwf	(_setLED$288+1)& (0+255),b
 10375  00367C  0E00               	movlw	0
 10376  00367E  6F7A               	movwf	(_setLED$288+2)& (0+255),b
 10377  003680  0E00               	movlw	0
 10378  003682  6F7B               	movwf	(_setLED$288+3)& (0+255),b
 10379  003684                     l5031:
 10380                           
 10381                           ; BSR set to: 0
 10382  003684  0060  F1E0  F074   	movff	_setLED$288,_setLED$287
 10383  00368A  0060  F1E4  F075   	movff	_setLED$288+1,_setLED$287+1
 10384  003690  0060  F1E8  F076   	movff	_setLED$288+2,_setLED$287+2
 10385  003696  0060  F1EC  F077   	movff	_setLED$288+3,_setLED$287+3
 10386  00369C  D008               	goto	l5035
 10387  00369E                     l5033:
 10388                           
 10389                           ; BSR set to: 0
 10390  00369E  0E00               	movlw	0
 10391  0036A0  6F74               	movwf	_setLED$287& (0+255),b
 10392  0036A2  0E00               	movlw	0
 10393  0036A4  6F75               	movwf	(_setLED$287+1)& (0+255),b
 10394  0036A6  0E00               	movlw	0
 10395  0036A8  6F76               	movwf	(_setLED$287+2)& (0+255),b
 10396  0036AA  0E00               	movlw	0
 10397  0036AC  6F77               	movwf	(_setLED$287+3)& (0+255),b
 10398  0036AE                     l5035:
 10399                           
 10400                           ; BSR set to: 0
 10401  0036AE  0060  F1D0  F084   	movff	_setLED$287,setLED@trueMod
 10402  0036B4  0060  F1D4  F085   	movff	_setLED$287+1,setLED@trueMod+1
 10403                           
 10404                           ; BSR set to: 0
 10405                           ;main.c: 117:     int32_t r = trueMod;
 10406  0036BA  0060  F210  F070   	movff	setLED@trueMod,setLED@r
 10407  0036C0  0060  F214  F071   	movff	setLED@trueMod+1,setLED@r+1
 10408  0036C6  6B72               	clrf	(setLED@r+2)& (0+255),b
 10409  0036C8  6B73               	clrf	(setLED@r+3)& (0+255),b
 10410                           
 10411                           ; BSR set to: 0
 10412                           ;main.c: 118:     int32_t g = 2047 - trueMod / 2;
 10413  0036CA  90D8               	bcf	status,0,c
 10414  0036CC  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10415  0036CE  6F69               	movwf	(??_setLED+1)& (0+255),b
 10416  0036D0  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10417  0036D2  6F68               	movwf	??_setLED& (0+255),b
 10418  0036D4  0EFF               	movlw	255
 10419  0036D6  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10420  0036D8  0E07               	movlw	7
 10421  0036DA  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10422  0036DC  5168               	movf	??_setLED& (0+255),w,b
 10423  0036DE  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10424  0036E0  5169               	movf	(??_setLED+1)& (0+255),w,b
 10425  0036E2  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10426  0036E4  0060  F1A8  F086   	movff	??_setLED+2,setLED@g
 10427  0036EA  0060  F1AC  F087   	movff	??_setLED+3,setLED@g+1
 10428  0036F0  6B88               	clrf	(setLED@g+2)& (0+255),b
 10429  0036F2  6B89               	clrf	(setLED@g+3)& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432                           ;main.c: 119:     int32_t b = 2047 - trueMod / 2;
 10433  0036F4  90D8               	bcf	status,0,c
 10434  0036F6  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10435  0036F8  6F69               	movwf	(??_setLED+1)& (0+255),b
 10436  0036FA  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10437  0036FC  6F68               	movwf	??_setLED& (0+255),b
 10438  0036FE  0EFF               	movlw	255
 10439  003700  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10440  003702  0E07               	movlw	7
 10441  003704  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10442  003706  5168               	movf	??_setLED& (0+255),w,b
 10443  003708  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10444  00370A  5169               	movf	(??_setLED+1)& (0+255),w,b
 10445  00370C  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10446  00370E  0060  F1A8  F08A   	movff	??_setLED+2,setLED@b
 10447  003714  0060  F1AC  F08B   	movff	??_setLED+3,setLED@b+1
 10448  00371A  6B8C               	clrf	(setLED@b+2)& (0+255),b
 10449  00371C  6B8D               	clrf	(setLED@b+3)& (0+255),b
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;main.c: 121:     int32_t shift;;main.c: 122:     if (step < 25000) shift = step / 50;
 10453  00371E  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10454  003720  D009               	goto	u6230
 10455  003722  5167               	movf	(setLED@step+3)& (0+255),w,b
 10456  003724  1166               	iorwf	(setLED@step+2)& (0+255),w,b
 10457  003726  E11D               	bnz	l5047
 10458  003728  0EA8               	movlw	168
 10459  00372A  5D64               	subwf	setLED@step& (0+255),w,b
 10460  00372C  0E61               	movlw	97
 10461  00372E  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10462  003730  B0D8               	btfsc	status,0,c
 10463  003732  D017               	goto	l5047
 10464  003734                     u6230:
 10465                           
 10466                           ; BSR set to: 0
 10467  003734  0060  F190  F00D   	movff	setLED@step,___aldiv@dividend
 10468  00373A  0060  F194  F00E   	movff	setLED@step+1,___aldiv@dividend+1
 10469  003740  0060  F198  F00F   	movff	setLED@step+2,___aldiv@dividend+2
 10470  003746  0060  F19C  F010   	movff	setLED@step+3,___aldiv@dividend+3
 10471  00374C  0E32               	movlw	50
 10472  00374E  6E11               	movwf	___aldiv@divisor^0,c
 10473  003750  0E00               	movlw	0
 10474  003752  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10475  003754  0E00               	movlw	0
 10476  003756  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10477  003758  0E00               	movlw	0
 10478  00375A  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10479  00375C  ECC7  F02A         	call	___aldiv	;wreg free
 10480  003760  D039               	goto	L15
 10481  003762                     l5047:
 10482                           
 10483                           ; BSR set to: 0
 10484  003762  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10485  003764  D00A               	goto	u6240
 10486  003766  5167               	movf	(setLED@step+3)& (0+255),w,b
 10487  003768  E11F               	bnz	l5051
 10488  00376A  0EF8               	movlw	248
 10489  00376C  5D64               	subwf	setLED@step& (0+255),w,b
 10490  00376E  0E24               	movlw	36
 10491  003770  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10492  003772  0E01               	movlw	1
 10493  003774  5966               	subwfb	(setLED@step+2)& (0+255),w,b
 10494  003776  B0D8               	btfsc	status,0,c
 10495  003778  D017               	goto	l5051
 10496  00377A                     u6240:
 10497                           
 10498                           ; BSR set to: 0
 10499  00377A  5164               	movf	setLED@step& (0+255),w,b
 10500  00377C  0850               	sublw	80
 10501  00377E  6E0D               	movwf	___aldiv@dividend^0,c
 10502  003780  0EC3               	movlw	195
 10503  003782  5565               	subfwb	(setLED@step+1)& (0+255),w,b
 10504  003784  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10505  003786  0E00               	movlw	0
 10506  003788  5566               	subfwb	(setLED@step+2)& (0+255),w,b
 10507  00378A  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10508  00378C  0E00               	movlw	0
 10509  00378E  5567               	subfwb	(setLED@step+3)& (0+255),w,b
 10510  003790  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10511  003792  0E32               	movlw	50
 10512  003794  6E11               	movwf	___aldiv@divisor^0,c
 10513  003796  0E00               	movlw	0
 10514  003798  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10515  00379A  0E00               	movlw	0
 10516  00379C  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10517  00379E  0E00               	movlw	0
 10518  0037A0  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10519  0037A2  ECC7  F02A         	call	___aldiv	;wreg free
 10520  0037A6  D016               	goto	L15
 10521  0037A8                     l5051:
 10522                           
 10523                           ; BSR set to: 0
 10524  0037A8  0E60               	movlw	96
 10525  0037AA  2564               	addwf	setLED@step& (0+255),w,b
 10526  0037AC  6E0D               	movwf	___aldiv@dividend^0,c
 10527  0037AE  0E79               	movlw	121
 10528  0037B0  2165               	addwfc	(setLED@step+1)& (0+255),w,b
 10529  0037B2  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10530  0037B4  0EFE               	movlw	254
 10531  0037B6  2166               	addwfc	(setLED@step+2)& (0+255),w,b
 10532  0037B8  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10533  0037BA  0EFF               	movlw	255
 10534  0037BC  2167               	addwfc	(setLED@step+3)& (0+255),w,b
 10535  0037BE  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10536  0037C0  0E32               	movlw	50
 10537  0037C2  6E11               	movwf	___aldiv@divisor^0,c
 10538  0037C4  0E00               	movlw	0
 10539  0037C6  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10540  0037C8  0E00               	movlw	0
 10541  0037CA  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10542  0037CC  0E00               	movlw	0
 10543  0037CE  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10544  0037D0  ECC7  F02A         	call	___aldiv	;wreg free
 10545  0037D4                     L15:
 10546  0037D4  0060  F034  F09A   	movff	?___aldiv,setLED@shift
 10547  0037DA  0060  F038  F09B   	movff	?___aldiv+1,setLED@shift+1
 10548  0037E0  0060  F03C  F09C   	movff	?___aldiv+2,setLED@shift+2
 10549  0037E6  0060  F040  F09D   	movff	?___aldiv+3,setLED@shift+3
 10550                           
 10551                           ;main.c: 125:     g = (g + shift - 500 < 0 ? 0 : (g + shift - 500 > 4095 ? 4095 : g + sh
      +                          ift - 500));
 10552  0037EC  0100               	movlb	0	; () banked
 10553  0037EE  519A               	movf	setLED@shift& (0+255),w,b
 10554  0037F0  2586               	addwf	setLED@g& (0+255),w,b
 10555  0037F2  6F68               	movwf	??_setLED& (0+255),b
 10556  0037F4  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10557  0037F6  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10558  0037F8  6F69               	movwf	(??_setLED+1)& (0+255),b
 10559  0037FA  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10560  0037FC  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10561  0037FE  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10562  003800  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10563  003802  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10564  003804  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10565  003806  0E0C               	movlw	12
 10566  003808  2568               	addwf	??_setLED& (0+255),w,b
 10567  00380A  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10568  00380C  0EFE               	movlw	254
 10569  00380E  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10570  003810  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10571  003812  0EFF               	movlw	255
 10572  003814  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10573  003816  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10574  003818  0EFF               	movlw	255
 10575  00381A  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10576  00381C  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10577  00381E  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10578  003820  D04E               	goto	l5063
 10579                           
 10580                           ; BSR set to: 0
 10581  003822  519A               	movf	setLED@shift& (0+255),w,b
 10582  003824  2586               	addwf	setLED@g& (0+255),w,b
 10583  003826  6F68               	movwf	??_setLED& (0+255),b
 10584  003828  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10585  00382A  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10586  00382C  6F69               	movwf	(??_setLED+1)& (0+255),b
 10587  00382E  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10588  003830  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10589  003832  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10590  003834  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10591  003836  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10592  003838  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10593  00383A  0E0C               	movlw	12
 10594  00383C  2568               	addwf	??_setLED& (0+255),w,b
 10595  00383E  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10596  003840  0EFE               	movlw	254
 10597  003842  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10598  003844  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10599  003846  0EFF               	movlw	255
 10600  003848  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10601  00384A  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10602  00384C  0EFF               	movlw	255
 10603  00384E  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10604  003850  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10605  003852  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10606  003854  D007               	goto	u6260
 10607  003856  516F               	movf	(??_setLED+7)& (0+255),w,b
 10608  003858  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 10609  00385A  E11C               	bnz	l5059
 10610  00385C  0E10               	movlw	16
 10611  00385E  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 10612  003860  B0D8               	btfsc	status,0,c
 10613  003862  D018               	goto	l5059
 10614  003864                     u6260:
 10615                           
 10616                           ; BSR set to: 0
 10617  003864  519A               	movf	setLED@shift& (0+255),w,b
 10618  003866  2586               	addwf	setLED@g& (0+255),w,b
 10619  003868  6F68               	movwf	??_setLED& (0+255),b
 10620  00386A  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10621  00386C  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10622  00386E  6F69               	movwf	(??_setLED+1)& (0+255),b
 10623  003870  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10624  003872  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10625  003874  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10626  003876  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10627  003878  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10628  00387A  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10629  00387C  0E0C               	movlw	12
 10630  00387E  2568               	addwf	??_setLED& (0+255),w,b
 10631  003880  6F7C               	movwf	_setLED$293& (0+255),b
 10632  003882  0EFE               	movlw	254
 10633  003884  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10634  003886  6F7D               	movwf	(_setLED$293+1)& (0+255),b
 10635  003888  0EFF               	movlw	255
 10636  00388A  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10637  00388C  6F7E               	movwf	(_setLED$293+2)& (0+255),b
 10638  00388E  0EFF               	movlw	255
 10639  003890  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10640  003892  D007               	goto	L16
 10641  003894                     l5059:
 10642                           
 10643                           ; BSR set to: 0
 10644  003894  0EFF               	movlw	255
 10645  003896  6F7C               	movwf	_setLED$293& (0+255),b
 10646  003898  0E0F               	movlw	15
 10647  00389A  6F7D               	movwf	(_setLED$293+1)& (0+255),b
 10648  00389C  0E00               	movlw	0
 10649  00389E  6F7E               	movwf	(_setLED$293+2)& (0+255),b
 10650  0038A0  0E00               	movlw	0
 10651  0038A2                     L16:
 10652  0038A2  6F7F               	movwf	(_setLED$293+3)& (0+255),b
 10653                           
 10654                           ; BSR set to: 0
 10655  0038A4  0060  F1F0  F086   	movff	_setLED$293,setLED@g
 10656  0038AA  0060  F1F4  F087   	movff	_setLED$293+1,setLED@g+1
 10657  0038B0  0060  F1F8  F088   	movff	_setLED$293+2,setLED@g+2
 10658  0038B6  0060  F1FC  F089   	movff	_setLED$293+3,setLED@g+3
 10659  0038BC  D008               	goto	l5065
 10660  0038BE                     l5063:
 10661                           
 10662                           ; BSR set to: 0
 10663  0038BE  0E00               	movlw	0
 10664  0038C0  6F86               	movwf	setLED@g& (0+255),b
 10665  0038C2  0E00               	movlw	0
 10666  0038C4  6F87               	movwf	(setLED@g+1)& (0+255),b
 10667  0038C6  0E00               	movlw	0
 10668  0038C8  6F88               	movwf	(setLED@g+2)& (0+255),b
 10669  0038CA  0E00               	movlw	0
 10670  0038CC  6F89               	movwf	(setLED@g+3)& (0+255),b
 10671  0038CE                     l5065:
 10672                           
 10673                           ; BSR set to: 0
 10674                           ;main.c: 126:     b = (b - shift - 500 < 0 ? 0 : (b - shift - 500 > 4095 ? 4095 : b - sh
      +                          ift - 500));
 10675  0038CE  519A               	movf	setLED@shift& (0+255),w,b
 10676  0038D0  5D8A               	subwf	setLED@b& (0+255),w,b
 10677  0038D2  6F68               	movwf	??_setLED& (0+255),b
 10678  0038D4  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10679  0038D6  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10680  0038D8  6F69               	movwf	(??_setLED+1)& (0+255),b
 10681  0038DA  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10682  0038DC  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10683  0038DE  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10684  0038E0  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10685  0038E2  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10686  0038E4  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10687  0038E6  0E0C               	movlw	12
 10688  0038E8  2568               	addwf	??_setLED& (0+255),w,b
 10689  0038EA  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10690  0038EC  0EFE               	movlw	254
 10691  0038EE  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10692  0038F0  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10693  0038F2  0EFF               	movlw	255
 10694  0038F4  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10695  0038F6  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10696  0038F8  0EFF               	movlw	255
 10697  0038FA  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10698  0038FC  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10699  0038FE  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10700  003900  D04E               	goto	l5075
 10701                           
 10702                           ; BSR set to: 0
 10703  003902  519A               	movf	setLED@shift& (0+255),w,b
 10704  003904  5D8A               	subwf	setLED@b& (0+255),w,b
 10705  003906  6F68               	movwf	??_setLED& (0+255),b
 10706  003908  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10707  00390A  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10708  00390C  6F69               	movwf	(??_setLED+1)& (0+255),b
 10709  00390E  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10710  003910  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10711  003912  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10712  003914  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10713  003916  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10714  003918  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10715  00391A  0E0C               	movlw	12
 10716  00391C  2568               	addwf	??_setLED& (0+255),w,b
 10717  00391E  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10718  003920  0EFE               	movlw	254
 10719  003922  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10720  003924  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10721  003926  0EFF               	movlw	255
 10722  003928  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10723  00392A  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10724  00392C  0EFF               	movlw	255
 10725  00392E  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10726  003930  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10727  003932  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10728  003934  D007               	goto	u6280
 10729  003936  516F               	movf	(??_setLED+7)& (0+255),w,b
 10730  003938  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 10731  00393A  E11C               	bnz	l5071
 10732  00393C  0E10               	movlw	16
 10733  00393E  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 10734  003940  B0D8               	btfsc	status,0,c
 10735  003942  D018               	goto	l5071
 10736  003944                     u6280:
 10737                           
 10738                           ; BSR set to: 0
 10739  003944  519A               	movf	setLED@shift& (0+255),w,b
 10740  003946  5D8A               	subwf	setLED@b& (0+255),w,b
 10741  003948  6F68               	movwf	??_setLED& (0+255),b
 10742  00394A  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10743  00394C  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10744  00394E  6F69               	movwf	(??_setLED+1)& (0+255),b
 10745  003950  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10746  003952  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10747  003954  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10748  003956  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10749  003958  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10750  00395A  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10751  00395C  0E0C               	movlw	12
 10752  00395E  2568               	addwf	??_setLED& (0+255),w,b
 10753  003960  6F80               	movwf	_setLED$294& (0+255),b
 10754  003962  0EFE               	movlw	254
 10755  003964  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10756  003966  6F81               	movwf	(_setLED$294+1)& (0+255),b
 10757  003968  0EFF               	movlw	255
 10758  00396A  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10759  00396C  6F82               	movwf	(_setLED$294+2)& (0+255),b
 10760  00396E  0EFF               	movlw	255
 10761  003970  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10762  003972  D007               	goto	L17
 10763  003974                     l5071:
 10764                           
 10765                           ; BSR set to: 0
 10766  003974  0EFF               	movlw	255
 10767  003976  6F80               	movwf	_setLED$294& (0+255),b
 10768  003978  0E0F               	movlw	15
 10769  00397A  6F81               	movwf	(_setLED$294+1)& (0+255),b
 10770  00397C  0E00               	movlw	0
 10771  00397E  6F82               	movwf	(_setLED$294+2)& (0+255),b
 10772  003980  0E00               	movlw	0
 10773  003982                     L17:
 10774  003982  6F83               	movwf	(_setLED$294+3)& (0+255),b
 10775                           
 10776                           ; BSR set to: 0
 10777  003984  0060  F200  F08A   	movff	_setLED$294,setLED@b
 10778  00398A  0060  F204  F08B   	movff	_setLED$294+1,setLED@b+1
 10779  003990  0060  F208  F08C   	movff	_setLED$294+2,setLED@b+2
 10780  003996  0060  F20C  F08D   	movff	_setLED$294+3,setLED@b+3
 10781  00399C  D008               	goto	l231
 10782  00399E                     l5075:
 10783                           
 10784                           ; BSR set to: 0
 10785  00399E  0E00               	movlw	0
 10786  0039A0  6F8A               	movwf	setLED@b& (0+255),b
 10787  0039A2  0E00               	movlw	0
 10788  0039A4  6F8B               	movwf	(setLED@b+1)& (0+255),b
 10789  0039A6  0E00               	movlw	0
 10790  0039A8  6F8C               	movwf	(setLED@b+2)& (0+255),b
 10791  0039AA  0E00               	movlw	0
 10792  0039AC  6F8D               	movwf	(setLED@b+3)& (0+255),b
 10793  0039AE                     l231:
 10794                           
 10795                           ; BSR set to: 0
 10796                           ;main.c: 128:     int32_t sr, sg, sb;;main.c: 129:     if (on) {
 10797  0039AE  0104               	movlb	4	; () banked
 10798  0039B0  5147               	movf	_on& (0+255),w,b
 10799  0039B2  B4D8               	btfsc	status,2,c
 10800  0039B4  D0FE               	goto	l5107
 10801                           
 10802                           ; BSR set to: 4
 10803                           ;main.c: 130:         sr = r * ledBrightness / 300;
 10804  0039B6  0060  F1C0  F001   	movff	setLED@r,___lmul@multiplier
 10805  0039BC  0060  F1C4  F002   	movff	setLED@r+1,___lmul@multiplier+1
 10806  0039C2  0060  F1C8  F003   	movff	setLED@r+2,___lmul@multiplier+2
 10807  0039C8  0060  F1CC  F004   	movff	setLED@r+3,___lmul@multiplier+3
 10808  0039CE  0061  F270  F005   	movff	_ledBrightness,___lmul@multiplicand
 10809  0039D4  0061  F274  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 10810  0039DA  0061  F278  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 10811  0039E0  0061  F27C  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 10812  0039E6  EC27  F030         	call	___lmul	;wreg free
 10813  0039EA  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 10814  0039F0  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 10815  0039F6  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 10816  0039FC  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 10817  003A02  0E2C               	movlw	44
 10818  003A04  6E11               	movwf	___aldiv@divisor^0,c
 10819  003A06  0E01               	movlw	1
 10820  003A08  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10821  003A0A  0E00               	movlw	0
 10822  003A0C  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10823  003A0E  0E00               	movlw	0
 10824  003A10  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10825  003A12  ECC7  F02A         	call	___aldiv	;wreg free
 10826  003A16  0060  F034  F096   	movff	?___aldiv,setLED@sr
 10827  003A1C  0060  F038  F097   	movff	?___aldiv+1,setLED@sr+1
 10828  003A22  0060  F03C  F098   	movff	?___aldiv+2,setLED@sr+2
 10829  003A28  0060  F040  F099   	movff	?___aldiv+3,setLED@sr+3
 10830                           
 10831                           ;main.c: 131:         if (sr < 0) sr = 0;
 10832  003A2E  0100               	movlb	0	; () banked
 10833  003A30  AF99               	btfss	(setLED@sr+3)& (0+255),7,b
 10834  003A32  D004               	goto	l5083
 10835                           
 10836                           ; BSR set to: 0
 10837  003A34  0E00               	movlw	0
 10838  003A36  6F96               	movwf	setLED@sr& (0+255),b
 10839  003A38  0E00               	movlw	0
 10840  003A3A  D00C               	goto	L18
 10841  003A3C                     l5083:
 10842                           
 10843                           ; BSR set to: 0
 10844  003A3C  BF99               	btfsc	(setLED@sr+3)& (0+255),7,b
 10845  003A3E  D00F               	goto	l5087
 10846  003A40  5199               	movf	(setLED@sr+3)& (0+255),w,b
 10847  003A42  1198               	iorwf	(setLED@sr+2)& (0+255),w,b
 10848  003A44  E104               	bnz	u6310
 10849  003A46  0E10               	movlw	16
 10850  003A48  5D97               	subwf	(setLED@sr+1)& (0+255),w,b
 10851  003A4A  A0D8               	btfss	status,0,c
 10852  003A4C  D008               	goto	l5087
 10853  003A4E                     u6310:
 10854                           
 10855                           ; BSR set to: 0
 10856  003A4E  0EFF               	movlw	255
 10857  003A50  6F96               	movwf	setLED@sr& (0+255),b
 10858  003A52  0E0F               	movlw	15
 10859  003A54                     L18:
 10860  003A54  6F97               	movwf	(setLED@sr+1)& (0+255),b
 10861  003A56  0E00               	movlw	0
 10862  003A58  6F98               	movwf	(setLED@sr+2)& (0+255),b
 10863  003A5A  0E00               	movlw	0
 10864  003A5C  6F99               	movwf	(setLED@sr+3)& (0+255),b
 10865  003A5E                     l5087:
 10866                           
 10867                           ; BSR set to: 0
 10868                           ;main.c: 133:         sg = g * ledBrightness / 300;
 10869  003A5E  0060  F218  F001   	movff	setLED@g,___lmul@multiplier
 10870  003A64  0060  F21C  F002   	movff	setLED@g+1,___lmul@multiplier+1
 10871  003A6A  0060  F220  F003   	movff	setLED@g+2,___lmul@multiplier+2
 10872  003A70  0060  F224  F004   	movff	setLED@g+3,___lmul@multiplier+3
 10873  003A76  0061  F270  F005   	movff	_ledBrightness,___lmul@multiplicand
 10874  003A7C  0061  F274  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 10875  003A82  0061  F278  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 10876  003A88  0061  F27C  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 10877  003A8E  EC27  F030         	call	___lmul	;wreg free
 10878  003A92  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 10879  003A98  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 10880  003A9E  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 10881  003AA4  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 10882  003AAA  0E2C               	movlw	44
 10883  003AAC  6E11               	movwf	___aldiv@divisor^0,c
 10884  003AAE  0E01               	movlw	1
 10885  003AB0  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10886  003AB2  0E00               	movlw	0
 10887  003AB4  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10888  003AB6  0E00               	movlw	0
 10889  003AB8  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10890  003ABA  ECC7  F02A         	call	___aldiv	;wreg free
 10891  003ABE  0060  F034  F08E   	movff	?___aldiv,setLED@sg
 10892  003AC4  0060  F038  F08F   	movff	?___aldiv+1,setLED@sg+1
 10893  003ACA  0060  F03C  F090   	movff	?___aldiv+2,setLED@sg+2
 10894  003AD0  0060  F040  F091   	movff	?___aldiv+3,setLED@sg+3
 10895                           
 10896                           ;main.c: 134:         if (sg < 0) sg = 0;
 10897  003AD6  0100               	movlb	0	; () banked
 10898  003AD8  AF91               	btfss	(setLED@sg+3)& (0+255),7,b
 10899  003ADA  D009               	goto	l5093
 10900                           
 10901                           ; BSR set to: 0
 10902  003ADC  0E00               	movlw	0
 10903  003ADE  6F8E               	movwf	setLED@sg& (0+255),b
 10904  003AE0  0E00               	movlw	0
 10905  003AE2  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 10906  003AE4  0E00               	movlw	0
 10907  003AE6  6F90               	movwf	(setLED@sg+2)& (0+255),b
 10908  003AE8  0E00               	movlw	0
 10909  003AEA  6F91               	movwf	(setLED@sg+3)& (0+255),b
 10910  003AEC  D011               	goto	l5097
 10911  003AEE                     l5093:
 10912                           
 10913                           ; BSR set to: 0
 10914  003AEE  BF91               	btfsc	(setLED@sg+3)& (0+255),7,b
 10915  003AF0  D00F               	goto	l5097
 10916  003AF2  5191               	movf	(setLED@sg+3)& (0+255),w,b
 10917  003AF4  1190               	iorwf	(setLED@sg+2)& (0+255),w,b
 10918  003AF6  E104               	bnz	u6330
 10919  003AF8  0E10               	movlw	16
 10920  003AFA  5D8F               	subwf	(setLED@sg+1)& (0+255),w,b
 10921  003AFC  A0D8               	btfss	status,0,c
 10922  003AFE  D008               	goto	l5097
 10923  003B00                     u6330:
 10924                           
 10925                           ; BSR set to: 0
 10926  003B00  0EFF               	movlw	255
 10927  003B02  6F96               	movwf	setLED@sr& (0+255),b
 10928  003B04  0E0F               	movlw	15
 10929  003B06  6F97               	movwf	(setLED@sr+1)& (0+255),b
 10930  003B08  0E00               	movlw	0
 10931  003B0A  6F98               	movwf	(setLED@sr+2)& (0+255),b
 10932  003B0C  0E00               	movlw	0
 10933  003B0E  6F99               	movwf	(setLED@sr+3)& (0+255),b
 10934  003B10                     l5097:
 10935                           
 10936                           ; BSR set to: 0
 10937                           ;main.c: 136:         sb = b * ledBrightness / 300;
 10938  003B10  0060  F228  F001   	movff	setLED@b,___lmul@multiplier
 10939  003B16  0060  F22C  F002   	movff	setLED@b+1,___lmul@multiplier+1
 10940  003B1C  0060  F230  F003   	movff	setLED@b+2,___lmul@multiplier+2
 10941  003B22  0060  F234  F004   	movff	setLED@b+3,___lmul@multiplier+3
 10942  003B28  0061  F270  F005   	movff	_ledBrightness,___lmul@multiplicand
 10943  003B2E  0061  F274  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 10944  003B34  0061  F278  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 10945  003B3A  0061  F27C  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 10946  003B40  EC27  F030         	call	___lmul	;wreg free
 10947  003B44  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 10948  003B4A  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 10949  003B50  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 10950  003B56  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 10951  003B5C  0E2C               	movlw	44
 10952  003B5E  6E11               	movwf	___aldiv@divisor^0,c
 10953  003B60  0E01               	movlw	1
 10954  003B62  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10955  003B64  0E00               	movlw	0
 10956  003B66  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10957  003B68  0E00               	movlw	0
 10958  003B6A  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10959  003B6C  ECC7  F02A         	call	___aldiv	;wreg free
 10960  003B70  0060  F034  F092   	movff	?___aldiv,setLED@sb
 10961  003B76  0060  F038  F093   	movff	?___aldiv+1,setLED@sb+1
 10962  003B7C  0060  F03C  F094   	movff	?___aldiv+2,setLED@sb+2
 10963  003B82  0060  F040  F095   	movff	?___aldiv+3,setLED@sb+3
 10964                           
 10965                           ;main.c: 137:         if (sb < 0) sb = 0;
 10966  003B88  0100               	movlb	0	; () banked
 10967  003B8A  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 10968  003B8C  D023               	goto	L19
 10969                           
 10970                           ; BSR set to: 0
 10971                           
 10972                           ; BSR set to: 0
 10973  003B8E  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 10974  003B90  D029               	goto	l246
 10975  003B92  5195               	movf	(setLED@sb+3)& (0+255),w,b
 10976  003B94  1194               	iorwf	(setLED@sb+2)& (0+255),w,b
 10977  003B96  E104               	bnz	u6350
 10978  003B98  0E10               	movlw	16
 10979  003B9A  5D93               	subwf	(setLED@sb+1)& (0+255),w,b
 10980  003B9C  A0D8               	btfss	status,0,c
 10981  003B9E  D022               	goto	l246
 10982  003BA0                     u6350:
 10983                           
 10984                           ; BSR set to: 0
 10985  003BA0  0EFF               	movlw	255
 10986  003BA2  6F96               	movwf	setLED@sr& (0+255),b
 10987  003BA4  0E0F               	movlw	15
 10988  003BA6  6F97               	movwf	(setLED@sr+1)& (0+255),b
 10989  003BA8  0E00               	movlw	0
 10990  003BAA  6F98               	movwf	(setLED@sr+2)& (0+255),b
 10991  003BAC  0E00               	movlw	0
 10992  003BAE  6F99               	movwf	(setLED@sr+3)& (0+255),b
 10993  003BB0  D019               	goto	l246
 10994  003BB2                     l5107:
 10995                           
 10996                           ; BSR set to: 4
 10997                           ;main.c: 140:         sr = 0;
 10998  003BB2  0E00               	movlw	0
 10999  003BB4  0100               	movlb	0	; () banked
 11000  003BB6  6F96               	movwf	setLED@sr& (0+255),b
 11001  003BB8  0E00               	movlw	0
 11002  003BBA  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11003  003BBC  0E00               	movlw	0
 11004  003BBE  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11005  003BC0  0E00               	movlw	0
 11006  003BC2  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11007                           
 11008                           ;main.c: 141:         sg = 0;
 11009  003BC4  0E00               	movlw	0
 11010  003BC6  6F8E               	movwf	setLED@sg& (0+255),b
 11011  003BC8  0E00               	movlw	0
 11012  003BCA  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11013  003BCC  0E00               	movlw	0
 11014  003BCE  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11015  003BD0  0E00               	movlw	0
 11016  003BD2  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11017  003BD4                     L19:
 11018                           
 11019                           ;main.c: 142:         sb = 0;
 11020  003BD4  0E00               	movlw	0
 11021  003BD6  6F92               	movwf	setLED@sb& (0+255),b
 11022  003BD8  0E00               	movlw	0
 11023  003BDA  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11024  003BDC  0E00               	movlw	0
 11025  003BDE  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11026  003BE0  0E00               	movlw	0
 11027  003BE2  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11028  003BE4                     l246:
 11029                           
 11030                           ; BSR set to: 0
 11031                           ;main.c: 145:     if (pairing && step % 10000 < 1000) {
 11032  003BE4  0104               	movlb	4	; () banked
 11033  003BE6  514A               	movf	_pairing& (0+255),w,b
 11034  003BE8  B4D8               	btfsc	status,2,c
 11035  003BEA  D036               	goto	l5113
 11036                           
 11037                           ; BSR set to: 4
 11038  003BEC  0060  F190  F001   	movff	setLED@step,___almod@dividend
 11039  003BF2  0060  F194  F002   	movff	setLED@step+1,___almod@dividend+1
 11040  003BF8  0060  F198  F003   	movff	setLED@step+2,___almod@dividend+2
 11041  003BFE  0060  F19C  F004   	movff	setLED@step+3,___almod@dividend+3
 11042  003C04  0E10               	movlw	16
 11043  003C06  6E05               	movwf	___almod@divisor^0,c
 11044  003C08  0E27               	movlw	39
 11045  003C0A  6E06               	movwf	(___almod@divisor+1)^0,c
 11046  003C0C  0E00               	movlw	0
 11047  003C0E  6E07               	movwf	(___almod@divisor+2)^0,c
 11048  003C10  0E00               	movlw	0
 11049  003C12  6E08               	movwf	(___almod@divisor+3)^0,c
 11050  003C14  ECFE  F02B         	call	___almod	;wreg free
 11051  003C18  BE04               	btfsc	(?___almod+3)^0,7,c
 11052  003C1A  D009               	goto	u6370
 11053  003C1C  5004               	movf	(?___almod+3)^0,w,c
 11054  003C1E  1003               	iorwf	(?___almod+2)^0,w,c
 11055  003C20  E11B               	bnz	l5113
 11056  003C22  0EE8               	movlw	232
 11057  003C24  5C01               	subwf	?___almod^0,w,c
 11058  003C26  0E03               	movlw	3
 11059  003C28  5802               	subwfb	(?___almod+1)^0,w,c
 11060  003C2A  B0D8               	btfsc	status,0,c
 11061  003C2C  D015               	goto	l5113
 11062  003C2E                     u6370:
 11063                           
 11064                           ;main.c: 146:         sr = 0;
 11065  003C2E  0E00               	movlw	0
 11066  003C30  0100               	movlb	0	; () banked
 11067  003C32  6F96               	movwf	setLED@sr& (0+255),b
 11068  003C34  0E00               	movlw	0
 11069  003C36  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11070  003C38  0E00               	movlw	0
 11071  003C3A  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11072  003C3C  0E00               	movlw	0
 11073  003C3E  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11074                           
 11075                           ;main.c: 147:         sg = 0;
 11076  003C40  0E00               	movlw	0
 11077  003C42  6F8E               	movwf	setLED@sg& (0+255),b
 11078  003C44  0E00               	movlw	0
 11079  003C46  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11080  003C48  0E00               	movlw	0
 11081  003C4A  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11082  003C4C  0E00               	movlw	0
 11083  003C4E  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11084                           
 11085                           ;main.c: 148:         sb = 4095;
 11086  003C50  0EFF               	movlw	255
 11087  003C52  6F92               	movwf	setLED@sb& (0+255),b
 11088  003C54  0E0F               	movlw	15
 11089  003C56  D06E               	goto	L20
 11090  003C58                     l5113:
 11091  003C58  0061  F280  F051   	movff	_bat_percent,___flge@ff1
 11092  003C5E  0061  F284  F052   	movff	_bat_percent+1,___flge@ff1+1
 11093  003C64  0061  F288  F053   	movff	_bat_percent+2,___flge@ff1+2
 11094  003C6A  0061  F28C  F054   	movff	_bat_percent+3,___flge@ff1+3
 11095  003C70  0E00               	movlw	0
 11096  003C72  6E55               	movwf	___flge@ff2^0,c
 11097  003C74  0E00               	movlw	0
 11098  003C76  6E56               	movwf	(___flge@ff2+1)^0,c
 11099  003C78  0EA0               	movlw	160
 11100  003C7A  6E57               	movwf	(___flge@ff2+2)^0,c
 11101  003C7C  0E40               	movlw	64
 11102  003C7E  6E58               	movwf	(___flge@ff2+3)^0,c
 11103  003C80  EC31  F02B         	call	___flge	;wreg free
 11104  003C84  B0D8               	btfsc	status,0,c
 11105  003C86  D05B               	goto	l5121
 11106  003C88  0060  F190  F001   	movff	setLED@step,___almod@dividend
 11107  003C8E  0060  F194  F002   	movff	setLED@step+1,___almod@dividend+1
 11108  003C94  0060  F198  F003   	movff	setLED@step+2,___almod@dividend+2
 11109  003C9A  0060  F19C  F004   	movff	setLED@step+3,___almod@dividend+3
 11110  003CA0  0E10               	movlw	16
 11111  003CA2  6E05               	movwf	___almod@divisor^0,c
 11112  003CA4  0E27               	movlw	39
 11113  003CA6  6E06               	movwf	(___almod@divisor+1)^0,c
 11114  003CA8  0E00               	movlw	0
 11115  003CAA  6E07               	movwf	(___almod@divisor+2)^0,c
 11116  003CAC  0E00               	movlw	0
 11117  003CAE  6E08               	movwf	(___almod@divisor+3)^0,c
 11118  003CB0  ECFE  F02B         	call	___almod	;wreg free
 11119  003CB4  BE04               	btfsc	(?___almod+3)^0,7,c
 11120  003CB6  D043               	goto	l5121
 11121  003CB8  5004               	movf	(?___almod+3)^0,w,c
 11122  003CBA  1003               	iorwf	(?___almod+2)^0,w,c
 11123  003CBC  E106               	bnz	u6390
 11124  003CBE  0E88               	movlw	136
 11125  003CC0  5C01               	subwf	?___almod^0,w,c
 11126  003CC2  0E13               	movlw	19
 11127  003CC4  5802               	subwfb	(?___almod+1)^0,w,c
 11128  003CC6  A0D8               	btfss	status,0,c
 11129  003CC8  D03A               	goto	l5121
 11130  003CCA                     u6390:
 11131  003CCA  0060  F190  F001   	movff	setLED@step,___almod@dividend
 11132  003CD0  0060  F194  F002   	movff	setLED@step+1,___almod@dividend+1
 11133  003CD6  0060  F198  F003   	movff	setLED@step+2,___almod@dividend+2
 11134  003CDC  0060  F19C  F004   	movff	setLED@step+3,___almod@dividend+3
 11135  003CE2  0E10               	movlw	16
 11136  003CE4  6E05               	movwf	___almod@divisor^0,c
 11137  003CE6  0E27               	movlw	39
 11138  003CE8  6E06               	movwf	(___almod@divisor+1)^0,c
 11139  003CEA  0E00               	movlw	0
 11140  003CEC  6E07               	movwf	(___almod@divisor+2)^0,c
 11141  003CEE  0E00               	movlw	0
 11142  003CF0  6E08               	movwf	(___almod@divisor+3)^0,c
 11143  003CF2  ECFE  F02B         	call	___almod	;wreg free
 11144  003CF6  BE04               	btfsc	(?___almod+3)^0,7,c
 11145  003CF8  D009               	goto	u6400
 11146  003CFA  5004               	movf	(?___almod+3)^0,w,c
 11147  003CFC  1003               	iorwf	(?___almod+2)^0,w,c
 11148  003CFE  E11F               	bnz	l5121
 11149  003D00  0E70               	movlw	112
 11150  003D02  5C01               	subwf	?___almod^0,w,c
 11151  003D04  0E17               	movlw	23
 11152  003D06  5802               	subwfb	(?___almod+1)^0,w,c
 11153  003D08  B0D8               	btfsc	status,0,c
 11154  003D0A  D019               	goto	l5121
 11155  003D0C                     u6400:
 11156                           
 11157                           ;main.c: 150:         sr = 4095;
 11158  003D0C  0EFF               	movlw	255
 11159  003D0E  0100               	movlb	0	; () banked
 11160  003D10  6F96               	movwf	setLED@sr& (0+255),b
 11161  003D12  0E0F               	movlw	15
 11162  003D14  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11163  003D16  0E00               	movlw	0
 11164  003D18  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11165  003D1A  0E00               	movlw	0
 11166  003D1C  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11167                           
 11168                           ;main.c: 151:         sg = 0;
 11169  003D1E  0E00               	movlw	0
 11170  003D20  6F8E               	movwf	setLED@sg& (0+255),b
 11171  003D22  0E00               	movlw	0
 11172  003D24  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11173  003D26  0E00               	movlw	0
 11174  003D28  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11175  003D2A  0E00               	movlw	0
 11176  003D2C  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11177                           
 11178                           ;main.c: 152:         sb = 0;
 11179  003D2E  0E00               	movlw	0
 11180  003D30  6F92               	movwf	setLED@sb& (0+255),b
 11181  003D32  0E00               	movlw	0
 11182  003D34                     L20:
 11183  003D34  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11184  003D36  0E00               	movlw	0
 11185  003D38  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11186  003D3A  0E00               	movlw	0
 11187  003D3C  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11188  003D3E                     l5121:
 11189                           
 11190                           ;main.c: 155:     CCPR3H = sr >> 8;
 11191  003D3E  0060  F25F  FF75   	movff	setLED@sr+1,16245	;volatile
 11192                           
 11193                           ;main.c: 156:     CCPR3L = sr & 0xff;
 11194  003D44  0060  F25B  FF74   	movff	setLED@sr,16244	;volatile
 11195                           
 11196                           ;main.c: 157:     CCPR2H = sg >> 8;
 11197  003D4A  0060  F23F  FF79   	movff	setLED@sg+1,16249	;volatile
 11198                           
 11199                           ;main.c: 158:     CCPR2L = sg & 0xff;
 11200  003D50  0060  F23B  FF78   	movff	setLED@sg,16248	;volatile
 11201                           
 11202                           ;main.c: 159:     CCPR4H = sb >> 8;
 11203  003D56  0060  F24F  FF71   	movff	setLED@sb+1,16241	;volatile
 11204                           
 11205                           ;main.c: 160:     CCPR4L = sb & 0xff;
 11206  003D5C  0060  F24B  FF70   	movff	setLED@sb,16240	;volatile
 11207  003D62  0012               	return		;funcret
 11208  003D64                     __end_of_setLED:
 11209                           	opt callstack 0
 11210                           
 11211 ;; *************** function ___lmul *****************
 11212 ;; Defined at:
 11213 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 11214 ;; Parameters:    Size  Location     Type
 11215 ;;  multiplier      4    0[COMRAM] unsigned long 
 11216 ;;  multiplicand    4    4[COMRAM] unsigned long 
 11217 ;; Auto vars:     Size  Location     Type
 11218 ;;  product         4    8[COMRAM] unsigned long 
 11219 ;; Return value:  Size  Location     Type
 11220 ;;                  4    0[COMRAM] unsigned long 
 11221 ;; Registers used:
 11222 ;;		wreg, status,2, status,0
 11223 ;; Tracked objects:
 11224 ;;		On entry : 3B/0
 11225 ;;		On exit  : 3B/0
 11226 ;;		Unchanged: 3B/0
 11227 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11228 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11229 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11231 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11232 ;;Total ram usage:       12 bytes
 11233 ;; Hardware stack levels used:    1
 11234 ;; This function calls:
 11235 ;;		Nothing
 11236 ;; This function is called by:
 11237 ;;		_setLED
 11238 ;;		_main_loop
 11239 ;; This function uses a non-reentrant model
 11240 ;;
 11241                           
 11242                           	psect	text38
 11243  00604E                     __ptext38:
 11244                           	opt callstack 0
 11245  00604E                     ___lmul:
 11246                           	opt callstack 28
 11247                           
 11248                           ;incstack = 0
 11249  00604E  0E00               	movlw	0
 11250  006050  6E09               	movwf	___lmul@product^0,c
 11251  006052  0E00               	movlw	0
 11252  006054  6E0A               	movwf	(___lmul@product+1)^0,c
 11253  006056  0E00               	movlw	0
 11254  006058  6E0B               	movwf	(___lmul@product+2)^0,c
 11255  00605A  0E00               	movlw	0
 11256  00605C  6E0C               	movwf	(___lmul@product+3)^0,c
 11257  00605E                     l4911:
 11258  00605E  A001               	btfss	___lmul@multiplier^0,0,c
 11259  006060  D008               	goto	l4915
 11260  006062  5005               	movf	___lmul@multiplicand^0,w,c
 11261  006064  2609               	addwf	___lmul@product^0,f,c
 11262  006066  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 11263  006068  220A               	addwfc	(___lmul@product+1)^0,f,c
 11264  00606A  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 11265  00606C  220B               	addwfc	(___lmul@product+2)^0,f,c
 11266  00606E  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 11267  006070  220C               	addwfc	(___lmul@product+3)^0,f,c
 11268  006072                     l4915:
 11269  006072  90D8               	bcf	status,0,c
 11270  006074  3605               	rlcf	___lmul@multiplicand^0,f,c
 11271  006076  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11272  006078  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11273  00607A  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11274  00607C  90D8               	bcf	status,0,c
 11275  00607E  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 11276  006080  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 11277  006082  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 11278  006084  3201               	rrcf	___lmul@multiplier^0,f,c
 11279  006086  5001               	movf	___lmul@multiplier^0,w,c
 11280  006088  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 11281  00608A  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 11282  00608C  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 11283  00608E  A4D8               	btfss	status,2,c
 11284  006090  D7E6               	goto	l4911
 11285  006092  0060  F024  F001   	movff	___lmul@product,?___lmul
 11286  006098  0060  F028  F002   	movff	___lmul@product+1,?___lmul+1
 11287  00609E  0060  F02C  F003   	movff	___lmul@product+2,?___lmul+2
 11288  0060A4  0060  F030  F004   	movff	___lmul@product+3,?___lmul+3
 11289  0060AA  0012               	return		;funcret
 11290  0060AC                     __end_of___lmul:
 11291                           	opt callstack 0
 11292                           
 11293 ;; *************** function ___flge *****************
 11294 ;; Defined at:
 11295 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11296 ;; Parameters:    Size  Location     Type
 11297 ;;  ff1             4   80[COMRAM] unsigned long 
 11298 ;;  ff2             4   84[COMRAM] unsigned long 
 11299 ;; Auto vars:     Size  Location     Type
 11300 ;;		None
 11301 ;; Return value:  Size  Location     Type
 11302 ;;		None               void
 11303 ;; Registers used:
 11304 ;;		wreg, status,2, status,0
 11305 ;; Tracked objects:
 11306 ;;		On entry : 0/0
 11307 ;;		On exit  : 0/0
 11308 ;;		Unchanged: 0/0
 11309 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11310 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11312 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11313 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11314 ;;Total ram usage:       12 bytes
 11315 ;; Hardware stack levels used:    1
 11316 ;; This function calls:
 11317 ;;		Nothing
 11318 ;; This function is called by:
 11319 ;;		_setLED
 11320 ;;		_main_loop
 11321 ;;		_efgtoa
 11322 ;; This function uses a non-reentrant model
 11323 ;;
 11324                           
 11325                           	psect	text39
 11326  005662                     __ptext39:
 11327                           	opt callstack 0
 11328  005662                     ___flge:
 11329                           	opt callstack 25
 11330                           
 11331                           ;incstack = 0
 11332  005662  0E00               	movlw	0
 11333  005664  1451               	andwf	___flge@ff1^0,w,c
 11334  005666  6E59               	movwf	??___flge^0,c
 11335  005668  0E00               	movlw	0
 11336  00566A  1452               	andwf	(___flge@ff1+1)^0,w,c
 11337  00566C  6E5A               	movwf	(??___flge+1)^0,c
 11338  00566E  0E80               	movlw	128
 11339  005670  1453               	andwf	(___flge@ff1+2)^0,w,c
 11340  005672  6E5B               	movwf	(??___flge+2)^0,c
 11341  005674  0E7F               	movlw	127
 11342  005676  1454               	andwf	(___flge@ff1+3)^0,w,c
 11343  005678  6E5C               	movwf	(??___flge+3)^0,c
 11344  00567A  5059               	movf	??___flge^0,w,c
 11345  00567C  105A               	iorwf	(??___flge+1)^0,w,c
 11346  00567E  105B               	iorwf	(??___flge+2)^0,w,c
 11347  005680  105C               	iorwf	(??___flge+3)^0,w,c
 11348  005682  A4D8               	btfss	status,2,c
 11349  005684  D008               	goto	l4257
 11350  005686  0E00               	movlw	0
 11351  005688  6E51               	movwf	___flge@ff1^0,c
 11352  00568A  0E00               	movlw	0
 11353  00568C  6E52               	movwf	(___flge@ff1+1)^0,c
 11354  00568E  0E00               	movlw	0
 11355  005690  6E53               	movwf	(___flge@ff1+2)^0,c
 11356  005692  0E00               	movlw	0
 11357  005694  6E54               	movwf	(___flge@ff1+3)^0,c
 11358  005696                     l4257:
 11359  005696  0E00               	movlw	0
 11360  005698  1455               	andwf	___flge@ff2^0,w,c
 11361  00569A  6E59               	movwf	??___flge^0,c
 11362  00569C  0E00               	movlw	0
 11363  00569E  1456               	andwf	(___flge@ff2+1)^0,w,c
 11364  0056A0  6E5A               	movwf	(??___flge+1)^0,c
 11365  0056A2  0E80               	movlw	128
 11366  0056A4  1457               	andwf	(___flge@ff2+2)^0,w,c
 11367  0056A6  6E5B               	movwf	(??___flge+2)^0,c
 11368  0056A8  0E7F               	movlw	127
 11369  0056AA  1458               	andwf	(___flge@ff2+3)^0,w,c
 11370  0056AC  6E5C               	movwf	(??___flge+3)^0,c
 11371  0056AE  5059               	movf	??___flge^0,w,c
 11372  0056B0  105A               	iorwf	(??___flge+1)^0,w,c
 11373  0056B2  105B               	iorwf	(??___flge+2)^0,w,c
 11374  0056B4  105C               	iorwf	(??___flge+3)^0,w,c
 11375  0056B6  A4D8               	btfss	status,2,c
 11376  0056B8  D008               	goto	l4261
 11377  0056BA  0E00               	movlw	0
 11378  0056BC  6E55               	movwf	___flge@ff2^0,c
 11379  0056BE  0E00               	movlw	0
 11380  0056C0  6E56               	movwf	(___flge@ff2+1)^0,c
 11381  0056C2  0E00               	movlw	0
 11382  0056C4  6E57               	movwf	(___flge@ff2+2)^0,c
 11383  0056C6  0E00               	movlw	0
 11384  0056C8  6E58               	movwf	(___flge@ff2+3)^0,c
 11385  0056CA                     l4261:
 11386  0056CA  AE54               	btfss	(___flge@ff1+3)^0,7,c
 11387  0056CC  D009               	goto	l4265
 11388  0056CE  6C51               	negf	___flge@ff1^0,c
 11389  0056D0  1E52               	comf	(___flge@ff1+1)^0,f,c
 11390  0056D2  B0D8               	btfsc	status,0,c
 11391  0056D4  2A52               	incf	(___flge@ff1+1)^0,f,c
 11392  0056D6  1E53               	comf	(___flge@ff1+2)^0,f,c
 11393  0056D8  B0D8               	btfsc	status,0,c
 11394  0056DA  2A53               	incf	(___flge@ff1+2)^0,f,c
 11395  0056DC  0E80               	movlw	128
 11396  0056DE  5654               	subfwb	(___flge@ff1+3)^0,f,c
 11397  0056E0                     l4265:
 11398  0056E0  AE58               	btfss	(___flge@ff2+3)^0,7,c
 11399  0056E2  D009               	goto	l976
 11400  0056E4  6C55               	negf	___flge@ff2^0,c
 11401  0056E6  1E56               	comf	(___flge@ff2+1)^0,f,c
 11402  0056E8  B0D8               	btfsc	status,0,c
 11403  0056EA  2A56               	incf	(___flge@ff2+1)^0,f,c
 11404  0056EC  1E57               	comf	(___flge@ff2+2)^0,f,c
 11405  0056EE  B0D8               	btfsc	status,0,c
 11406  0056F0  2A57               	incf	(___flge@ff2+2)^0,f,c
 11407  0056F2  0E80               	movlw	128
 11408  0056F4  5658               	subfwb	(___flge@ff2+3)^0,f,c
 11409  0056F6                     l976:
 11410  0056F6  0E00               	movlw	0
 11411  0056F8  1A51               	xorwf	___flge@ff1^0,f,c
 11412  0056FA  0E00               	movlw	0
 11413  0056FC  1A52               	xorwf	(___flge@ff1+1)^0,f,c
 11414  0056FE  0E00               	movlw	0
 11415  005700  1A53               	xorwf	(___flge@ff1+2)^0,f,c
 11416  005702  0E80               	movlw	128
 11417  005704  1A54               	xorwf	(___flge@ff1+3)^0,f,c
 11418  005706  0E00               	movlw	0
 11419  005708  1A55               	xorwf	___flge@ff2^0,f,c
 11420  00570A  0E00               	movlw	0
 11421  00570C  1A56               	xorwf	(___flge@ff2+1)^0,f,c
 11422  00570E  0E00               	movlw	0
 11423  005710  1A57               	xorwf	(___flge@ff2+2)^0,f,c
 11424  005712  0E80               	movlw	128
 11425  005714  1A58               	xorwf	(___flge@ff2+3)^0,f,c
 11426  005716  5055               	movf	___flge@ff2^0,w,c
 11427  005718  5C51               	subwf	___flge@ff1^0,w,c
 11428  00571A  5056               	movf	(___flge@ff2+1)^0,w,c
 11429  00571C  5852               	subwfb	(___flge@ff1+1)^0,w,c
 11430  00571E  5057               	movf	(___flge@ff2+2)^0,w,c
 11431  005720  5853               	subwfb	(___flge@ff1+2)^0,w,c
 11432  005722  5058               	movf	(___flge@ff2+3)^0,w,c
 11433  005724  5854               	subwfb	(___flge@ff1+3)^0,w,c
 11434  005726  B0D8               	btfsc	status,0,c
 11435  005728  D002               	goto	l4271
 11436  00572A  90D8               	bcf	status,0,c
 11437  00572C  0012               	return	
 11438  00572E                     l4271:
 11439  00572E  80D8               	bsf	status,0,c
 11440  005730  0012               	return		;funcret
 11441  005732                     __end_of___flge:
 11442                           	opt callstack 0
 11443                           
 11444 ;; *************** function ___almod *****************
 11445 ;; Defined at:
 11446 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
 11447 ;; Parameters:    Size  Location     Type
 11448 ;;  dividend        4    0[COMRAM] long 
 11449 ;;  divisor         4    4[COMRAM] long 
 11450 ;; Auto vars:     Size  Location     Type
 11451 ;;  sign            1    9[COMRAM] unsigned char 
 11452 ;;  counter         1    8[COMRAM] unsigned char 
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  4    0[COMRAM] long 
 11455 ;; Registers used:
 11456 ;;		wreg, status,2, status,0
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/4
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11462 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11463 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11465 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11466 ;;Total ram usage:       10 bytes
 11467 ;; Hardware stack levels used:    1
 11468 ;; This function calls:
 11469 ;;		Nothing
 11470 ;; This function is called by:
 11471 ;;		_setLED
 11472 ;; This function uses a non-reentrant model
 11473 ;;
 11474                           
 11475                           	psect	text40
 11476  0057FC                     __ptext40:
 11477                           	opt callstack 0
 11478  0057FC                     ___almod:
 11479                           	opt callstack 28
 11480                           
 11481                           ;incstack = 0
 11482  0057FC  0E00               	movlw	0
 11483  0057FE  6E0A               	movwf	___almod@sign^0,c
 11484  005800  AE04               	btfss	(___almod@dividend+3)^0,7,c
 11485  005802  D00A               	goto	l4971
 11486  005804  1E04               	comf	(___almod@dividend+3)^0,f,c
 11487  005806  1E03               	comf	(___almod@dividend+2)^0,f,c
 11488  005808  1E02               	comf	(___almod@dividend+1)^0,f,c
 11489  00580A  6C01               	negf	___almod@dividend^0,c
 11490  00580C  0E00               	movlw	0
 11491  00580E  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11492  005810  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11493  005812  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11494  005814  0E01               	movlw	1
 11495  005816  6E0A               	movwf	___almod@sign^0,c
 11496  005818                     l4971:
 11497  005818  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11498  00581A  D008               	goto	l4975
 11499  00581C  1E08               	comf	(___almod@divisor+3)^0,f,c
 11500  00581E  1E07               	comf	(___almod@divisor+2)^0,f,c
 11501  005820  1E06               	comf	(___almod@divisor+1)^0,f,c
 11502  005822  6C05               	negf	___almod@divisor^0,c
 11503  005824  0E00               	movlw	0
 11504  005826  2206               	addwfc	(___almod@divisor+1)^0,f,c
 11505  005828  2207               	addwfc	(___almod@divisor+2)^0,f,c
 11506  00582A  2208               	addwfc	(___almod@divisor+3)^0,f,c
 11507  00582C                     l4975:
 11508  00582C  5005               	movf	___almod@divisor^0,w,c
 11509  00582E  1006               	iorwf	(___almod@divisor+1)^0,w,c
 11510  005830  1007               	iorwf	(___almod@divisor+2)^0,w,c
 11511  005832  1008               	iorwf	(___almod@divisor+3)^0,w,c
 11512  005834  B4D8               	btfsc	status,2,c
 11513  005836  D024               	goto	l4991
 11514  005838  0E01               	movlw	1
 11515  00583A  6E09               	movwf	___almod@counter^0,c
 11516  00583C  D006               	goto	l4981
 11517  00583E                     l4979:
 11518  00583E  90D8               	bcf	status,0,c
 11519  005840  3605               	rlcf	___almod@divisor^0,f,c
 11520  005842  3606               	rlcf	(___almod@divisor+1)^0,f,c
 11521  005844  3607               	rlcf	(___almod@divisor+2)^0,f,c
 11522  005846  3608               	rlcf	(___almod@divisor+3)^0,f,c
 11523  005848  2A09               	incf	___almod@counter^0,f,c
 11524  00584A                     l4981:
 11525  00584A  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11526  00584C  D7F8               	goto	l4979
 11527  00584E                     u6150:
 11528  00584E  5005               	movf	___almod@divisor^0,w,c
 11529  005850  5C01               	subwf	___almod@dividend^0,w,c
 11530  005852  5006               	movf	(___almod@divisor+1)^0,w,c
 11531  005854  5802               	subwfb	(___almod@dividend+1)^0,w,c
 11532  005856  5007               	movf	(___almod@divisor+2)^0,w,c
 11533  005858  5803               	subwfb	(___almod@dividend+2)^0,w,c
 11534  00585A  5008               	movf	(___almod@divisor+3)^0,w,c
 11535  00585C  5804               	subwfb	(___almod@dividend+3)^0,w,c
 11536  00585E  A0D8               	btfss	status,0,c
 11537  005860  D008               	goto	l4987
 11538  005862  5005               	movf	___almod@divisor^0,w,c
 11539  005864  5E01               	subwf	___almod@dividend^0,f,c
 11540  005866  5006               	movf	(___almod@divisor+1)^0,w,c
 11541  005868  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 11542  00586A  5007               	movf	(___almod@divisor+2)^0,w,c
 11543  00586C  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 11544  00586E  5008               	movf	(___almod@divisor+3)^0,w,c
 11545  005870  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 11546  005872                     l4987:
 11547  005872  90D8               	bcf	status,0,c
 11548  005874  3208               	rrcf	(___almod@divisor+3)^0,f,c
 11549  005876  3207               	rrcf	(___almod@divisor+2)^0,f,c
 11550  005878  3206               	rrcf	(___almod@divisor+1)^0,f,c
 11551  00587A  3205               	rrcf	___almod@divisor^0,f,c
 11552  00587C  2E09               	decfsz	___almod@counter^0,f,c
 11553  00587E  D7E7               	goto	u6150
 11554  005880                     l4991:
 11555  005880  500A               	movf	___almod@sign^0,w,c
 11556  005882  B4D8               	btfsc	status,2,c
 11557  005884  D008               	goto	l4995
 11558  005886  1E04               	comf	(___almod@dividend+3)^0,f,c
 11559  005888  1E03               	comf	(___almod@dividend+2)^0,f,c
 11560  00588A  1E02               	comf	(___almod@dividend+1)^0,f,c
 11561  00588C  6C01               	negf	___almod@dividend^0,c
 11562  00588E  0E00               	movlw	0
 11563  005890  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11564  005892  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11565  005894  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11566  005896                     l4995:
 11567  005896  0060  F004  F001   	movff	___almod@dividend,?___almod
 11568  00589C  0060  F008  F002   	movff	___almod@dividend+1,?___almod+1
 11569  0058A2  0060  F00C  F003   	movff	___almod@dividend+2,?___almod+2
 11570  0058A8  0060  F010  F004   	movff	___almod@dividend+3,?___almod+3
 11571  0058AE  0012               	return		;funcret
 11572  0058B0                     __end_of___almod:
 11573                           	opt callstack 0
 11574                           
 11575 ;; *************** function ___aldiv *****************
 11576 ;; Defined at:
 11577 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11578 ;; Parameters:    Size  Location     Type
 11579 ;;  dividend        4   12[COMRAM] long 
 11580 ;;  divisor         4   16[COMRAM] long 
 11581 ;; Auto vars:     Size  Location     Type
 11582 ;;  quotient        4   22[COMRAM] long 
 11583 ;;  sign            1   21[COMRAM] unsigned char 
 11584 ;;  counter         1   20[COMRAM] unsigned char 
 11585 ;; Return value:  Size  Location     Type
 11586 ;;                  4   12[COMRAM] long 
 11587 ;; Registers used:
 11588 ;;		wreg, status,2, status,0
 11589 ;; Tracked objects:
 11590 ;;		On entry : 3B/4
 11591 ;;		On exit  : 3B/0
 11592 ;;		Unchanged: 3B/0
 11593 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11594 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11595 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11597 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11598 ;;Total ram usage:       14 bytes
 11599 ;; Hardware stack levels used:    1
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		_updateButtonLight
 11604 ;;		_setLED
 11605 ;; This function uses a non-reentrant model
 11606 ;;
 11607                           
 11608                           	psect	text41
 11609  00558E                     __ptext41:
 11610                           	opt callstack 0
 11611  00558E                     ___aldiv:
 11612                           	opt callstack 28
 11613                           
 11614                           ;incstack = 0
 11615  00558E  0E00               	movlw	0
 11616  005590  6E16               	movwf	___aldiv@sign^0,c
 11617  005592  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11618  005594  D00A               	goto	l4927
 11619  005596  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 11620  005598  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 11621  00559A  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 11622  00559C  6C11               	negf	___aldiv@divisor^0,c
 11623  00559E  0E00               	movlw	0
 11624  0055A0  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 11625  0055A2  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 11626  0055A4  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 11627  0055A6  0E01               	movlw	1
 11628  0055A8  6E16               	movwf	___aldiv@sign^0,c
 11629  0055AA                     l4927:
 11630  0055AA  AE10               	btfss	(___aldiv@dividend+3)^0,7,c
 11631  0055AC  D00A               	goto	l4933
 11632  0055AE  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 11633  0055B0  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 11634  0055B2  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 11635  0055B4  6C0D               	negf	___aldiv@dividend^0,c
 11636  0055B6  0E00               	movlw	0
 11637  0055B8  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 11638  0055BA  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 11639  0055BC  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 11640  0055BE  0E01               	movlw	1
 11641  0055C0  1A16               	xorwf	___aldiv@sign^0,f,c
 11642  0055C2                     l4933:
 11643  0055C2  0E00               	movlw	0
 11644  0055C4  6E17               	movwf	___aldiv@quotient^0,c
 11645  0055C6  0E00               	movlw	0
 11646  0055C8  6E18               	movwf	(___aldiv@quotient+1)^0,c
 11647  0055CA  0E00               	movlw	0
 11648  0055CC  6E19               	movwf	(___aldiv@quotient+2)^0,c
 11649  0055CE  0E00               	movlw	0
 11650  0055D0  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 11651  0055D2  5011               	movf	___aldiv@divisor^0,w,c
 11652  0055D4  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 11653  0055D6  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 11654  0055D8  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 11655  0055DA  B4D8               	btfsc	status,2,c
 11656  0055DC  D02A               	goto	l4955
 11657  0055DE  0E01               	movlw	1
 11658  0055E0  6E15               	movwf	___aldiv@counter^0,c
 11659  0055E2  D006               	goto	l4941
 11660  0055E4                     l4939:
 11661  0055E4  90D8               	bcf	status,0,c
 11662  0055E6  3611               	rlcf	___aldiv@divisor^0,f,c
 11663  0055E8  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 11664  0055EA  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 11665  0055EC  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 11666  0055EE  2A15               	incf	___aldiv@counter^0,f,c
 11667  0055F0                     l4941:
 11668  0055F0  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11669  0055F2  D7F8               	goto	l4939
 11670  0055F4                     u6090:
 11671  0055F4  90D8               	bcf	status,0,c
 11672  0055F6  3617               	rlcf	___aldiv@quotient^0,f,c
 11673  0055F8  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 11674  0055FA  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 11675  0055FC  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 11676  0055FE  5011               	movf	___aldiv@divisor^0,w,c
 11677  005600  5C0D               	subwf	___aldiv@dividend^0,w,c
 11678  005602  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11679  005604  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 11680  005606  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11681  005608  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 11682  00560A  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11683  00560C  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 11684  00560E  A0D8               	btfss	status,0,c
 11685  005610  D009               	goto	l4951
 11686  005612  5011               	movf	___aldiv@divisor^0,w,c
 11687  005614  5E0D               	subwf	___aldiv@dividend^0,f,c
 11688  005616  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11689  005618  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 11690  00561A  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11691  00561C  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 11692  00561E  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11693  005620  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 11694  005622  8017               	bsf	___aldiv@quotient^0,0,c
 11695  005624                     l4951:
 11696  005624  90D8               	bcf	status,0,c
 11697  005626  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 11698  005628  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 11699  00562A  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 11700  00562C  3211               	rrcf	___aldiv@divisor^0,f,c
 11701  00562E  2E15               	decfsz	___aldiv@counter^0,f,c
 11702  005630  D7E1               	goto	u6090
 11703  005632                     l4955:
 11704  005632  5016               	movf	___aldiv@sign^0,w,c
 11705  005634  B4D8               	btfsc	status,2,c
 11706  005636  D008               	goto	l4959
 11707  005638  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 11708  00563A  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 11709  00563C  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 11710  00563E  6C17               	negf	___aldiv@quotient^0,c
 11711  005640  0E00               	movlw	0
 11712  005642  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 11713  005644  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 11714  005646  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 11715  005648                     l4959:
 11716  005648  0060  F05C  F00D   	movff	___aldiv@quotient,?___aldiv
 11717  00564E  0060  F060  F00E   	movff	___aldiv@quotient+1,?___aldiv+1
 11718  005654  0060  F064  F00F   	movff	___aldiv@quotient+2,?___aldiv+2
 11719  00565A  0060  F068  F010   	movff	___aldiv@quotient+3,?___aldiv+3
 11720  005660  0012               	return		;funcret
 11721  005662                     __end_of___aldiv:
 11722                           	opt callstack 0
 11723                           
 11724 ;; *************** function _lcd_set_data_addr *****************
 11725 ;; Defined at:
 11726 ;;		line 39 in file "char_lcd.c"
 11727 ;; Parameters:    Size  Location     Type
 11728 ;;  addr            1    wreg     unsigned char 
 11729 ;; Auto vars:     Size  Location     Type
 11730 ;;  addr            1    4[COMRAM] unsigned char 
 11731 ;; Return value:  Size  Location     Type
 11732 ;;                  1    wreg      void 
 11733 ;; Registers used:
 11734 ;;		wreg, status,2, status,0, cstack
 11735 ;; Tracked objects:
 11736 ;;		On entry : 4/3B
 11737 ;;		On exit  : 0/0
 11738 ;;		Unchanged: 0/0
 11739 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11741 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11744 ;;Total ram usage:        1 bytes
 11745 ;; Hardware stack levels used:    1
 11746 ;; Hardware stack levels required when called:    1
 11747 ;; This function calls:
 11748 ;;		_lcd_write
 11749 ;; This function is called by:
 11750 ;;		_main_loop
 11751 ;; This function uses a non-reentrant model
 11752 ;;
 11753                           
 11754                           	psect	text42
 11755  006392                     __ptext42:
 11756                           	opt callstack 0
 11757  006392                     _lcd_set_data_addr:
 11758                           	opt callstack 28
 11759                           
 11760                           ;incstack = 0
 11761                           ;lcd_set_data_addr@addr stored from wreg
 11762  006392  6E05               	movwf	lcd_set_data_addr@addr^0,c
 11763                           
 11764                           ;char_lcd.c: 40:     lcd_write(0, 0b10000000 | (addr & 0b01111111), 0);
 11765  006394  5005               	movf	lcd_set_data_addr@addr^0,w,c
 11766  006396  0B7F               	andlw	127
 11767  006398  0980               	iorlw	128
 11768  00639A  6E01               	movwf	lcd_write@data^0,c
 11769  00639C  0E00               	movlw	0
 11770  00639E  6E02               	movwf	lcd_write@longdelay^0,c
 11771  0063A0  0E00               	movlw	0
 11772  0063A2  ECAB  F030         	call	_lcd_write
 11773  0063A6  0012               	return		;funcret
 11774  0063A8                     __end_of_lcd_set_data_addr:
 11775                           	opt callstack 0
 11776                           
 11777 ;; *************** function _lcd_print *****************
 11778 ;; Defined at:
 11779 ;;		line 54 in file "char_lcd.c"
 11780 ;; Parameters:    Size  Location     Type
 11781 ;;  string          2    4[COMRAM] PTR unsigned char 
 11782 ;;		 -> STR_10(13), main_loop@batmsg(17), STR_4(17), STR_3(17), 
 11783 ;;		 -> STR_2(17), STR_1(17), 
 11784 ;; Auto vars:     Size  Location     Type
 11785 ;;  i               1    8[COMRAM] unsigned char 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  1    wreg      void 
 11788 ;; Registers used:
 11789 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11790 ;; Tracked objects:
 11791 ;;		On entry : 0/3F
 11792 ;;		On exit  : 0/0
 11793 ;;		Unchanged: 0/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11795 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11798 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11799 ;;Total ram usage:        5 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; Hardware stack levels required when called:    1
 11802 ;; This function calls:
 11803 ;;		_lcd_write
 11804 ;; This function is called by:
 11805 ;;		_main_loop
 11806 ;;		_main
 11807 ;; This function uses a non-reentrant model
 11808 ;;
 11809                           
 11810                           	psect	text43
 11811  005A96                     __ptext43:
 11812                           	opt callstack 0
 11813  005A96                     _lcd_print:
 11814                           	opt callstack 28
 11815                           
 11816                           ;char_lcd.c: 55:     uint8_t i = 0;
 11817                           
 11818                           ;incstack = 0
 11819  005A96  0E00               	movlw	0
 11820  005A98  6E09               	movwf	lcd_print@i^0,c
 11821                           
 11822                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 11823  005A9A  D022               	goto	l5141
 11824  005A9C                     l5137:
 11825                           
 11826                           ;char_lcd.c: 57:         lcd_write(1, string[i++], 0);
 11827  005A9C  5009               	movf	lcd_print@i^0,w,c
 11828  005A9E  2405               	addwf	lcd_print@string^0,w,c
 11829  005AA0  6E07               	movwf	??_lcd_print^0,c
 11830  005AA2  0E00               	movlw	0
 11831  005AA4  2006               	addwfc	(lcd_print@string+1)^0,w,c
 11832  005AA6  6E08               	movwf	(??_lcd_print+1)^0,c
 11833  005AA8  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 11834  005AAE  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 11835  005AB4  0E00               	movlw	low (__smallconst shr (0+16))
 11836  005AB6  6EF8               	movwf	tblptru,c
 11837  005AB8  0E1F               	movlw	(high __ramtop+-1)
 11838  005ABA  64F7               	cpfsgt	tblptrh,c
 11839  005ABC  D003               	bra	u6417
 11840  005ABE  0008               	tblrd		*
 11841  005AC0  50F5               	movf	tablat,w,c
 11842  005AC2  D007               	bra	u6410
 11843  005AC4                     u6417:
 11844  005AC4  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11845  005ACA  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11846  005AD0  50E7               	movf	indf1,w,c
 11847  005AD2                     u6410:
 11848  005AD2  6E01               	movwf	lcd_write@data^0,c
 11849  005AD4  0E00               	movlw	0
 11850  005AD6  6E02               	movwf	lcd_write@longdelay^0,c
 11851  005AD8  0E01               	movlw	1
 11852  005ADA  ECAB  F030         	call	_lcd_write
 11853  005ADE  2A09               	incf	lcd_print@i^0,f,c
 11854  005AE0                     l5141:
 11855                           
 11856                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 11857  005AE0  5009               	movf	lcd_print@i^0,w,c
 11858  005AE2  2405               	addwf	lcd_print@string^0,w,c
 11859  005AE4  6E07               	movwf	??_lcd_print^0,c
 11860  005AE6  0E00               	movlw	0
 11861  005AE8  2006               	addwfc	(lcd_print@string+1)^0,w,c
 11862  005AEA  6E08               	movwf	(??_lcd_print+1)^0,c
 11863  005AEC  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 11864  005AF2  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 11865  005AF8  0E00               	movlw	low (__smallconst shr (0+16))
 11866  005AFA  6EF8               	movwf	tblptru,c
 11867  005AFC  0E1F               	movlw	(high __ramtop+-1)
 11868  005AFE  64F7               	cpfsgt	tblptrh,c
 11869  005B00  D003               	bra	u6427
 11870  005B02  0008               	tblrd		*
 11871  005B04  50F5               	movf	tablat,w,c
 11872  005B06  D007               	bra	u6420
 11873  005B08                     u6427:
 11874  005B08  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11875  005B0E  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11876  005B14  50E7               	movf	indf1,w,c
 11877  005B16                     u6420:
 11878  005B16  0900               	iorlw	0
 11879  005B18  B4D8               	btfsc	status,2,c
 11880  005B1A  0012               	return	
 11881  005B1C  2809               	incf	lcd_print@i^0,w,c
 11882  005B1E  B4D8               	btfsc	status,2,c
 11883  005B20  0012               	return	
 11884  005B22  D7BC               	goto	l5137
 11885  005B24                     __end_of_lcd_print:
 11886                           	opt callstack 0
 11887                           
 11888 ;; *************** function ___xxtofl *****************
 11889 ;; Defined at:
 11890 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11891 ;; Parameters:    Size  Location     Type
 11892 ;;  sign            1    wreg     unsigned char 
 11893 ;;  val             4    0[COMRAM] long 
 11894 ;; Auto vars:     Size  Location     Type
 11895 ;;  sign            1    8[COMRAM] unsigned char 
 11896 ;;  arg             4   10[COMRAM] unsigned long 
 11897 ;;  exp             1    9[COMRAM] unsigned char 
 11898 ;; Return value:  Size  Location     Type
 11899 ;;                  4    0[COMRAM] unsigned char 
 11900 ;; Registers used:
 11901 ;;		wreg, status,2, status,0
 11902 ;; Tracked objects:
 11903 ;;		On entry : 0/0
 11904 ;;		On exit  : 0/0
 11905 ;;		Unchanged: 0/0
 11906 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11907 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11908 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11909 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11910 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11911 ;;Total ram usage:       14 bytes
 11912 ;; Hardware stack levels used:    1
 11913 ;; This function calls:
 11914 ;;		Nothing
 11915 ;; This function is called by:
 11916 ;;		_main_loop
 11917 ;; This function uses a non-reentrant model
 11918 ;;
 11919                           
 11920                           	psect	text44
 11921  005152                     __ptext44:
 11922                           	opt callstack 0
 11923  005152                     ___xxtofl:
 11924                           	opt callstack 29
 11925                           
 11926                           ;incstack = 0
 11927                           ;___xxtofl@sign stored from wreg
 11928  005152  6E09               	movwf	___xxtofl@sign^0,c
 11929  005154  5009               	movf	___xxtofl@sign^0,w,c
 11930  005156  A4D8               	btfss	status,2,c
 11931  005158  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 11932  00515A  D022               	goto	l1366
 11933  00515C  0060  F004  F005   	movff	___xxtofl@val,??___xxtofl
 11934  005162  0060  F008  F006   	movff	___xxtofl@val+1,??___xxtofl+1
 11935  005168  0060  F00C  F007   	movff	___xxtofl@val+2,??___xxtofl+2
 11936  00516E  0060  F010  F008   	movff	___xxtofl@val+3,??___xxtofl+3
 11937  005174  1E05               	comf	??___xxtofl^0,f,c
 11938  005176  1E06               	comf	(??___xxtofl+1)^0,f,c
 11939  005178  1E07               	comf	(??___xxtofl+2)^0,f,c
 11940  00517A  1E08               	comf	(??___xxtofl+3)^0,f,c
 11941  00517C  2A05               	incf	??___xxtofl^0,f,c
 11942  00517E  0E00               	movlw	0
 11943  005180  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11944  005182  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11945  005184  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11946  005186  0060  F014  F00B   	movff	??___xxtofl,___xxtofl@arg
 11947  00518C  0060  F018  F00C   	movff	??___xxtofl+1,___xxtofl@arg+1
 11948  005192  0060  F01C  F00D   	movff	??___xxtofl+2,___xxtofl@arg+2
 11949  005198  0060  F020  F00E   	movff	??___xxtofl+3,___xxtofl@arg+3
 11950  00519E  D00C               	goto	l5287
 11951  0051A0                     l1366:
 11952  0051A0  0060  F004  F00B   	movff	___xxtofl@val,___xxtofl@arg
 11953  0051A6  0060  F008  F00C   	movff	___xxtofl@val+1,___xxtofl@arg+1
 11954  0051AC  0060  F00C  F00D   	movff	___xxtofl@val+2,___xxtofl@arg+2
 11955  0051B2  0060  F010  F00E   	movff	___xxtofl@val+3,___xxtofl@arg+3
 11956  0051B8                     l5287:
 11957  0051B8  5001               	movf	___xxtofl@val^0,w,c
 11958  0051BA  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11959  0051BC  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11960  0051BE  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11961  0051C0  A4D8               	btfss	status,2,c
 11962  0051C2  D009               	goto	l5293
 11963  0051C4  0E00               	movlw	0
 11964  0051C6  6E01               	movwf	?___xxtofl^0,c
 11965  0051C8  0E00               	movlw	0
 11966  0051CA  6E02               	movwf	(?___xxtofl+1)^0,c
 11967  0051CC  0E00               	movlw	0
 11968  0051CE  6E03               	movwf	(?___xxtofl+2)^0,c
 11969  0051D0  0E00               	movlw	0
 11970  0051D2  6E04               	movwf	(?___xxtofl+3)^0,c
 11971  0051D4  0012               	return	
 11972  0051D6                     l5293:
 11973  0051D6  0E96               	movlw	150
 11974  0051D8  6E0A               	movwf	___xxtofl@exp^0,c
 11975  0051DA  D006               	goto	l5297
 11976  0051DC                     l5295:
 11977  0051DC  2A0A               	incf	___xxtofl@exp^0,f,c
 11978  0051DE  90D8               	bcf	status,0,c
 11979  0051E0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11980  0051E2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11981  0051E4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11982  0051E6  320B               	rrcf	___xxtofl@arg^0,f,c
 11983  0051E8                     l5297:
 11984  0051E8  0E00               	movlw	0
 11985  0051EA  140B               	andwf	___xxtofl@arg^0,w,c
 11986  0051EC  6E05               	movwf	??___xxtofl^0,c
 11987  0051EE  0E00               	movlw	0
 11988  0051F0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11989  0051F2  6E06               	movwf	(??___xxtofl+1)^0,c
 11990  0051F4  0E00               	movlw	0
 11991  0051F6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11992  0051F8  6E07               	movwf	(??___xxtofl+2)^0,c
 11993  0051FA  0EFE               	movlw	254
 11994  0051FC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11995  0051FE  6E08               	movwf	(??___xxtofl+3)^0,c
 11996  005200  5005               	movf	??___xxtofl^0,w,c
 11997  005202  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11998  005204  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11999  005206  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12000  005208  B4D8               	btfsc	status,2,c
 12001  00520A  D00D               	goto	l1373
 12002  00520C  D7E7               	goto	l5295
 12003  00520E                     l5299:
 12004  00520E  2A0A               	incf	___xxtofl@exp^0,f,c
 12005  005210  0E01               	movlw	1
 12006  005212  260B               	addwf	___xxtofl@arg^0,f,c
 12007  005214  0E00               	movlw	0
 12008  005216  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12009  005218  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12010  00521A  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12011  00521C  90D8               	bcf	status,0,c
 12012  00521E  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12013  005220  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12014  005222  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12015  005224  320B               	rrcf	___xxtofl@arg^0,f,c
 12016  005226                     l1373:
 12017  005226  0E00               	movlw	0
 12018  005228  140B               	andwf	___xxtofl@arg^0,w,c
 12019  00522A  6E05               	movwf	??___xxtofl^0,c
 12020  00522C  0E00               	movlw	0
 12021  00522E  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12022  005230  6E06               	movwf	(??___xxtofl+1)^0,c
 12023  005232  0E00               	movlw	0
 12024  005234  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12025  005236  6E07               	movwf	(??___xxtofl+2)^0,c
 12026  005238  0EFF               	movlw	255
 12027  00523A  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12028  00523C  6E08               	movwf	(??___xxtofl+3)^0,c
 12029  00523E  5005               	movf	??___xxtofl^0,w,c
 12030  005240  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12031  005242  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12032  005244  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12033  005246  B4D8               	btfsc	status,2,c
 12034  005248  D007               	goto	l5307
 12035  00524A  D7E1               	goto	l5299
 12036  00524C                     l5305:
 12037  00524C  060A               	decf	___xxtofl@exp^0,f,c
 12038  00524E  90D8               	bcf	status,0,c
 12039  005250  360B               	rlcf	___xxtofl@arg^0,f,c
 12040  005252  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12041  005254  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12042  005256  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12043  005258                     l5307:
 12044  005258  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12045  00525A  D003               	goto	u6700
 12046  00525C  0E02               	movlw	2
 12047  00525E  600A               	cpfslt	___xxtofl@exp^0,c
 12048  005260  D7F5               	goto	l5305
 12049  005262                     u6700:
 12050  005262  A00A               	btfss	___xxtofl@exp^0,0,c
 12051  005264  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12052  005266  90D8               	bcf	status,0,c
 12053  005268  320A               	rrcf	___xxtofl@exp^0,f,c
 12054  00526A  0060  F028  F005   	movff	___xxtofl@exp,??___xxtofl
 12055  005270  6A06               	clrf	(??___xxtofl+1)^0,c
 12056  005272  6A07               	clrf	(??___xxtofl+2)^0,c
 12057  005274  6A08               	clrf	(??___xxtofl+3)^0,c
 12058  005276  0060  F014  F008   	movff	??___xxtofl,??___xxtofl+3
 12059  00527C  6A07               	clrf	(??___xxtofl+2)^0,c
 12060  00527E  6A06               	clrf	(??___xxtofl+1)^0,c
 12061  005280  6A05               	clrf	??___xxtofl^0,c
 12062  005282  5005               	movf	??___xxtofl^0,w,c
 12063  005284  120B               	iorwf	___xxtofl@arg^0,f,c
 12064  005286  5006               	movf	(??___xxtofl+1)^0,w,c
 12065  005288  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12066  00528A  5007               	movf	(??___xxtofl+2)^0,w,c
 12067  00528C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12068  00528E  5008               	movf	(??___xxtofl+3)^0,w,c
 12069  005290  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12070  005292  5009               	movf	___xxtofl@sign^0,w,c
 12071  005294  A4D8               	btfss	status,2,c
 12072  005296  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 12073  005298  D001               	goto	l5323
 12074  00529A  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12075  00529C                     l5323:
 12076  00529C  0060  F02C  F001   	movff	___xxtofl@arg,?___xxtofl
 12077  0052A2  0060  F030  F002   	movff	___xxtofl@arg+1,?___xxtofl+1
 12078  0052A8  0060  F034  F003   	movff	___xxtofl@arg+2,?___xxtofl+2
 12079  0052AE  0060  F038  F004   	movff	___xxtofl@arg+3,?___xxtofl+3
 12080  0052B4  0012               	return		;funcret
 12081  0052B6                     __end_of___xxtofl:
 12082                           	opt callstack 0
 12083                           
 12084 ;; *************** function ___llmod *****************
 12085 ;; Defined at:
 12086 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 12087 ;; Parameters:    Size  Location     Type
 12088 ;;  dividend        4   13[COMRAM] unsigned long 
 12089 ;;  divisor         4   17[COMRAM] unsigned long 
 12090 ;; Auto vars:     Size  Location     Type
 12091 ;;  counter         1   21[COMRAM] unsigned char 
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  4   13[COMRAM] unsigned long 
 12094 ;; Registers used:
 12095 ;;		wreg, status,2, status,0
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/4
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12101 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12102 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12104 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12105 ;;Total ram usage:        9 bytes
 12106 ;; Hardware stack levels used:    1
 12107 ;; This function calls:
 12108 ;;		Nothing
 12109 ;; This function is called by:
 12110 ;;		_main_loop
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           	psect	text45
 12115  005F1A                     __ptext45:
 12116                           	opt callstack 0
 12117  005F1A                     ___llmod:
 12118                           	opt callstack 29
 12119                           
 12120                           ;incstack = 0
 12121  005F1A  5012               	movf	___llmod@divisor^0,w,c
 12122  005F1C  1013               	iorwf	(___llmod@divisor+1)^0,w,c
 12123  005F1E  1014               	iorwf	(___llmod@divisor+2)^0,w,c
 12124  005F20  1015               	iorwf	(___llmod@divisor+3)^0,w,c
 12125  005F22  B4D8               	btfsc	status,2,c
 12126  005F24  D024               	goto	l1131
 12127  005F26  0E01               	movlw	1
 12128  005F28  6E16               	movwf	___llmod@counter^0,c
 12129  005F2A  D006               	goto	l5271
 12130  005F2C                     l5269:
 12131  005F2C  90D8               	bcf	status,0,c
 12132  005F2E  3612               	rlcf	___llmod@divisor^0,f,c
 12133  005F30  3613               	rlcf	(___llmod@divisor+1)^0,f,c
 12134  005F32  3614               	rlcf	(___llmod@divisor+2)^0,f,c
 12135  005F34  3615               	rlcf	(___llmod@divisor+3)^0,f,c
 12136  005F36  2A16               	incf	___llmod@counter^0,f,c
 12137  005F38                     l5271:
 12138  005F38  AE15               	btfss	(___llmod@divisor+3)^0,7,c
 12139  005F3A  D7F8               	goto	l5269
 12140  005F3C                     u6620:
 12141  005F3C  5012               	movf	___llmod@divisor^0,w,c
 12142  005F3E  5C0E               	subwf	___llmod@dividend^0,w,c
 12143  005F40  5013               	movf	(___llmod@divisor+1)^0,w,c
 12144  005F42  580F               	subwfb	(___llmod@dividend+1)^0,w,c
 12145  005F44  5014               	movf	(___llmod@divisor+2)^0,w,c
 12146  005F46  5810               	subwfb	(___llmod@dividend+2)^0,w,c
 12147  005F48  5015               	movf	(___llmod@divisor+3)^0,w,c
 12148  005F4A  5811               	subwfb	(___llmod@dividend+3)^0,w,c
 12149  005F4C  A0D8               	btfss	status,0,c
 12150  005F4E  D008               	goto	l5277
 12151  005F50  5012               	movf	___llmod@divisor^0,w,c
 12152  005F52  5E0E               	subwf	___llmod@dividend^0,f,c
 12153  005F54  5013               	movf	(___llmod@divisor+1)^0,w,c
 12154  005F56  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
 12155  005F58  5014               	movf	(___llmod@divisor+2)^0,w,c
 12156  005F5A  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
 12157  005F5C  5015               	movf	(___llmod@divisor+3)^0,w,c
 12158  005F5E  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
 12159  005F60                     l5277:
 12160  005F60  90D8               	bcf	status,0,c
 12161  005F62  3215               	rrcf	(___llmod@divisor+3)^0,f,c
 12162  005F64  3214               	rrcf	(___llmod@divisor+2)^0,f,c
 12163  005F66  3213               	rrcf	(___llmod@divisor+1)^0,f,c
 12164  005F68  3212               	rrcf	___llmod@divisor^0,f,c
 12165  005F6A  2E16               	decfsz	___llmod@counter^0,f,c
 12166  005F6C  D7E7               	goto	u6620
 12167  005F6E                     l1131:
 12168  005F6E  0060  F038  F00E   	movff	___llmod@dividend,?___llmod
 12169  005F74  0060  F03C  F00F   	movff	___llmod@dividend+1,?___llmod+1
 12170  005F7A  0060  F040  F010   	movff	___llmod@dividend+2,?___llmod+2
 12171  005F80  0060  F044  F011   	movff	___llmod@dividend+3,?___llmod+3
 12172  005F86  0012               	return		;funcret
 12173  005F88                     __end_of___llmod:
 12174                           	opt callstack 0
 12175                           
 12176 ;; *************** function ___lldiv *****************
 12177 ;; Defined at:
 12178 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 12179 ;; Parameters:    Size  Location     Type
 12180 ;;  dividend        4    0[COMRAM] unsigned long 
 12181 ;;  divisor         4    4[COMRAM] unsigned long 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;  quotient        4    8[COMRAM] unsigned long 
 12184 ;;  counter         1   12[COMRAM] unsigned char 
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  4    0[COMRAM] unsigned long 
 12187 ;; Registers used:
 12188 ;;		wreg, status,2, status,0
 12189 ;; Tracked objects:
 12190 ;;		On entry : 3B/4
 12191 ;;		On exit  : 3B/0
 12192 ;;		Unchanged: 3B/0
 12193 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12194 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12197 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12198 ;;Total ram usage:       13 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; This function calls:
 12201 ;;		Nothing
 12202 ;; This function is called by:
 12203 ;;		_main_loop
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207                           	psect	text46
 12208  005BAE                     __ptext46:
 12209                           	opt callstack 0
 12210  005BAE                     ___lldiv:
 12211                           	opt callstack 29
 12212                           
 12213                           ;incstack = 0
 12214  005BAE  0E00               	movlw	0
 12215  005BB0  6E09               	movwf	___lldiv@quotient^0,c
 12216  005BB2  0E00               	movlw	0
 12217  005BB4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12218  005BB6  0E00               	movlw	0
 12219  005BB8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12220  005BBA  0E00               	movlw	0
 12221  005BBC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12222  005BBE  5005               	movf	___lldiv@divisor^0,w,c
 12223  005BC0  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12224  005BC2  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12225  005BC4  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12226  005BC6  B4D8               	btfsc	status,2,c
 12227  005BC8  D02A               	goto	l738
 12228  005BCA  0E01               	movlw	1
 12229  005BCC  6E0D               	movwf	___lldiv@counter^0,c
 12230  005BCE  D006               	goto	l5251
 12231  005BD0                     l5249:
 12232  005BD0  90D8               	bcf	status,0,c
 12233  005BD2  3605               	rlcf	___lldiv@divisor^0,f,c
 12234  005BD4  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12235  005BD6  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12236  005BD8  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12237  005BDA  2A0D               	incf	___lldiv@counter^0,f,c
 12238  005BDC                     l5251:
 12239  005BDC  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12240  005BDE  D7F8               	goto	l5249
 12241  005BE0                     u6590:
 12242  005BE0  90D8               	bcf	status,0,c
 12243  005BE2  3609               	rlcf	___lldiv@quotient^0,f,c
 12244  005BE4  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12245  005BE6  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12246  005BE8  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12247  005BEA  5005               	movf	___lldiv@divisor^0,w,c
 12248  005BEC  5C01               	subwf	___lldiv@dividend^0,w,c
 12249  005BEE  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12250  005BF0  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12251  005BF2  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12252  005BF4  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12253  005BF6  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12254  005BF8  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12255  005BFA  A0D8               	btfss	status,0,c
 12256  005BFC  D009               	goto	l5261
 12257  005BFE  5005               	movf	___lldiv@divisor^0,w,c
 12258  005C00  5E01               	subwf	___lldiv@dividend^0,f,c
 12259  005C02  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12260  005C04  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12261  005C06  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12262  005C08  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12263  005C0A  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12264  005C0C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12265  005C0E  8009               	bsf	___lldiv@quotient^0,0,c
 12266  005C10                     l5261:
 12267  005C10  90D8               	bcf	status,0,c
 12268  005C12  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12269  005C14  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12270  005C16  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12271  005C18  3205               	rrcf	___lldiv@divisor^0,f,c
 12272  005C1A  2E0D               	decfsz	___lldiv@counter^0,f,c
 12273  005C1C  D7E1               	goto	u6590
 12274  005C1E                     l738:
 12275  005C1E  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
 12276  005C24  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
 12277  005C2A  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
 12278  005C30  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
 12279  005C36  0012               	return		;funcret
 12280  005C38                     __end_of___lldiv:
 12281                           	opt callstack 0
 12282                           
 12283 ;; *************** function _lcd_init *****************
 12284 ;; Defined at:
 12285 ;;		line 17 in file "char_lcd.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;  inc             1    wreg     _Bool 
 12288 ;;  shift           1    4[COMRAM] _Bool 
 12289 ;;  cursor          1    5[COMRAM] _Bool 
 12290 ;;  cursorblink     1    6[COMRAM] _Bool 
 12291 ;;  on              1    7[COMRAM] _Bool 
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;  inc             1    9[COMRAM] _Bool 
 12294 ;; Return value:  Size  Location     Type
 12295 ;;                  1    wreg      void 
 12296 ;; Registers used:
 12297 ;;		wreg, status,2, status,0, cstack
 12298 ;; Tracked objects:
 12299 ;;		On entry : 0/3F
 12300 ;;		On exit  : 0/0
 12301 ;;		Unchanged: 0/0
 12302 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12303 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12305 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12307 ;;Total ram usage:        6 bytes
 12308 ;; Hardware stack levels used:    1
 12309 ;; Hardware stack levels required when called:    1
 12310 ;; This function calls:
 12311 ;;		_lcd_write
 12312 ;; This function is called by:
 12313 ;;		_main
 12314 ;; This function uses a non-reentrant model
 12315 ;;
 12316                           
 12317                           	psect	text47
 12318  005D42                     __ptext47:
 12319                           	opt callstack 0
 12320  005D42                     _lcd_init:
 12321                           	opt callstack 29
 12322                           
 12323                           ;incstack = 0
 12324                           ;lcd_init@inc stored from wreg
 12325  005D42  6E0A               	movwf	lcd_init@inc^0,c
 12326                           
 12327                           ;char_lcd.c: 18:     lcd_write(0, 0b00110011, 0);
 12328  005D44  0E33               	movlw	51
 12329  005D46  6E01               	movwf	lcd_write@data^0,c
 12330  005D48  0E00               	movlw	0
 12331  005D4A  6E02               	movwf	lcd_write@longdelay^0,c
 12332  005D4C  0E00               	movlw	0
 12333  005D4E  ECAB  F030         	call	_lcd_write
 12334                           
 12335                           ;char_lcd.c: 19:     lcd_write(0, 0b00110011, 0);
 12336  005D52  0E33               	movlw	51
 12337  005D54  6E01               	movwf	lcd_write@data^0,c
 12338  005D56  0E00               	movlw	0
 12339  005D58  6E02               	movwf	lcd_write@longdelay^0,c
 12340  005D5A  0E00               	movlw	0
 12341  005D5C  ECAB  F030         	call	_lcd_write
 12342                           
 12343                           ;char_lcd.c: 20:     lcd_write(0, 0b00110011, 0);
 12344  005D60  0E33               	movlw	51
 12345  005D62  6E01               	movwf	lcd_write@data^0,c
 12346  005D64  0E00               	movlw	0
 12347  005D66  6E02               	movwf	lcd_write@longdelay^0,c
 12348  005D68  0E00               	movlw	0
 12349  005D6A  ECAB  F030         	call	_lcd_write
 12350                           
 12351                           ;char_lcd.c: 21:     lcd_write(0, 0b00111011, 0);
 12352  005D6E  0E3B               	movlw	59
 12353  005D70  6E01               	movwf	lcd_write@data^0,c
 12354  005D72  0E00               	movlw	0
 12355  005D74  6E02               	movwf	lcd_write@longdelay^0,c
 12356  005D76  0E00               	movlw	0
 12357  005D78  ECAB  F030         	call	_lcd_write
 12358                           
 12359                           ;char_lcd.c: 22:     lcd_write(0, 0b00000100 | (inc << 1) | shift, 0);
 12360  005D7C  500A               	movf	lcd_init@inc^0,w,c
 12361  005D7E  240A               	addwf	lcd_init@inc^0,w,c
 12362  005D80  1005               	iorwf	lcd_init@shift^0,w,c
 12363  005D82  0904               	iorlw	4
 12364  005D84  6E01               	movwf	lcd_write@data^0,c
 12365  005D86  0E00               	movlw	0
 12366  005D88  6E02               	movwf	lcd_write@longdelay^0,c
 12367  005D8A  0E00               	movlw	0
 12368  005D8C  ECAB  F030         	call	_lcd_write
 12369                           
 12370                           ;char_lcd.c: 23:     lcd_write(0, 0b00001000 | (on << 2) | (cursor << 1) | cursorblink ,
      +                           0);
 12371  005D90  90D8               	bcf	status,0,c
 12372  005D92  3406               	rlcf	lcd_init@cursor^0,w,c
 12373  005D94  6E09               	movwf	??_lcd_init^0,c
 12374  005D96  4408               	rlncf	lcd_init@on^0,w,c
 12375  005D98  46E8               	rlncf	wreg,f,c
 12376  005D9A  0BFC               	andlw	252
 12377  005D9C  1009               	iorwf	??_lcd_init^0,w,c
 12378  005D9E  1007               	iorwf	lcd_init@cursorblink^0,w,c
 12379  005DA0  0908               	iorlw	8
 12380  005DA2  6E01               	movwf	lcd_write@data^0,c
 12381  005DA4  0E00               	movlw	0
 12382  005DA6  6E02               	movwf	lcd_write@longdelay^0,c
 12383  005DA8  0E00               	movlw	0
 12384  005DAA  ECAB  F030         	call	_lcd_write
 12385                           
 12386                           ;char_lcd.c: 24:     lcd_write(0, 0b00000001, 1);
 12387  005DAE  0E01               	movlw	1
 12388  005DB0  6E01               	movwf	lcd_write@data^0,c
 12389  005DB2  0E01               	movlw	1
 12390  005DB4  6E02               	movwf	lcd_write@longdelay^0,c
 12391  005DB6  0E00               	movlw	0
 12392  005DB8  ECAB  F030         	call	_lcd_write
 12393  005DBC  0012               	return		;funcret
 12394  005DBE                     __end_of_lcd_init:
 12395                           	opt callstack 0
 12396                           
 12397 ;; *************** function _lcd_write *****************
 12398 ;; Defined at:
 12399 ;;		line 3 in file "char_lcd.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;  rs              1    wreg     _Bool 
 12402 ;;  data            1    0[COMRAM] unsigned char 
 12403 ;;  longdelay       1    1[COMRAM] _Bool 
 12404 ;; Auto vars:     Size  Location     Type
 12405 ;;  rs              1    3[COMRAM] _Bool 
 12406 ;; Return value:  Size  Location     Type
 12407 ;;                  1    wreg      void 
 12408 ;; Registers used:
 12409 ;;		wreg, status,2
 12410 ;; Tracked objects:
 12411 ;;		On entry : 0/3B
 12412 ;;		On exit  : 0/0
 12413 ;;		Unchanged: 0/0
 12414 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12417 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12418 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12419 ;;Total ram usage:        4 bytes
 12420 ;; Hardware stack levels used:    1
 12421 ;; This function calls:
 12422 ;;		Nothing
 12423 ;; This function is called by:
 12424 ;;		_lcd_init
 12425 ;;		_lcd_set_data_addr
 12426 ;;		_lcd_print
 12427 ;; This function uses a non-reentrant model
 12428 ;;
 12429                           
 12430                           	psect	text48
 12431  006156                     __ptext48:
 12432                           	opt callstack 0
 12433  006156                     _lcd_write:
 12434                           	opt callstack 28
 12435                           
 12436                           ;incstack = 0
 12437                           ;lcd_write@rs stored from wreg
 12438  006156  6E04               	movwf	lcd_write@rs^0,c
 12439                           
 12440                           ;char_lcd.c: 4:     LATE2 = 1;
 12441  006158  84BE               	bsf	16318,2,c	;volatile
 12442                           
 12443                           ;char_lcd.c: 5:     LATE1 = 0;
 12444  00615A  92BE               	bcf	16318,1,c	;volatile
 12445                           
 12446                           ;char_lcd.c: 6:     LATE0 = rs;
 12447  00615C  B004               	btfsc	lcd_write@rs^0,0,c
 12448  00615E  D002               	bra	u5865
 12449  006160  90BE               	bcf	16318,0,c	;volatile
 12450  006162  D001               	bra	u5866
 12451  006164                     u5865:
 12452  006164  80BE               	bsf	16318,0,c	;volatile
 12453  006166                     u5866:
 12454                           
 12455                           ;char_lcd.c: 7:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12456  006166  0E35               	movlw	53
 12457  006168                     u8187:
 12458  006168  2EE8               	decfsz	wreg,f,c
 12459  00616A  D7FE               	bra	u8187
 12460  00616C  F000               	nop	
 12461                           
 12462                           ;char_lcd.c: 8:     PORTA = data;
 12463  00616E  0060  F007  FFCA   	movff	lcd_write@data,16330	;volatile
 12464                           
 12465                           ;char_lcd.c: 9:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12466  006174  0E35               	movlw	53
 12467  006176                     u8197:
 12468  006176  2EE8               	decfsz	wreg,f,c
 12469  006178  D7FE               	bra	u8197
 12470  00617A  F000               	nop	
 12471                           
 12472                           ;char_lcd.c: 10:     LATE2 = 0;
 12473  00617C  94BE               	bcf	16318,2,c	;volatile
 12474                           
 12475                           ;char_lcd.c: 11:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12476  00617E  0E35               	movlw	53
 12477  006180                     u8207:
 12478  006180  2EE8               	decfsz	wreg,f,c
 12479  006182  D7FE               	bra	u8207
 12480  006184  F000               	nop	
 12481                           
 12482                           ;char_lcd.c: 12:     LATE2 = 1;
 12483  006186  84BE               	bsf	16318,2,c	;volatile
 12484                           
 12485                           ;char_lcd.c: 13:     if (longdelay) _delay((unsigned long)((2)*(64000000/4000.0)));
 12486  006188  5002               	movf	lcd_write@longdelay^0,w,c
 12487  00618A  B4D8               	btfsc	status,2,c
 12488  00618C  D008               	goto	l4875
 12489  00618E  0E2A               	movlw	42
 12490  006190  6E03               	movwf	??_lcd_write^0,c
 12491  006192  0E8E               	movlw	142
 12492  006194                     u8217:
 12493  006194  2EE8               	decfsz	wreg,f,c
 12494  006196  D7FE               	bra	u8217
 12495  006198  2E03               	decfsz	??_lcd_write^0,f,c
 12496  00619A  D7FC               	bra	u8217
 12497  00619C  0012               	return	
 12498  00619E                     l4875:
 12499  00619E  0EA0               	movlw	160
 12500  0061A0                     u8227:
 12501  0061A0  D000               	nop2	
 12502  0061A2  2EE8               	decfsz	wreg,f,c
 12503  0061A4  D7FD               	bra	u8227
 12504  0061A6  0012               	return		;funcret
 12505  0061A8                     __end_of_lcd_write:
 12506                           	opt callstack 0
 12507                           
 12508                           	psect	rparam
 12509  0000                     tosu	equ	0x3FFF
 12510                           tosh	equ	0x3FFE
 12511                           tosl	equ	0x3FFD
 12512                           stkptr	equ	0x3FFC
 12513                           pclatu	equ	0x3FFB
 12514                           pclath	equ	0x3FFA
 12515                           pcl	equ	0x3FF9
 12516                           tblptru	equ	0x3FF8
 12517                           tblptrh	equ	0x3FF7
 12518                           tblptrl	equ	0x3FF6
 12519                           tablat	equ	0x3FF5
 12520                           prodh	equ	0x3FF4
 12521                           prodl	equ	0x3FF3
 12522                           indf0	equ	0x3FEF
 12523                           postinc0	equ	0x3FEE
 12524                           postdec0	equ	0x3FED
 12525                           preinc0	equ	0x3FEC
 12526                           plusw0	equ	0x3FEB
 12527                           fsr0h	equ	0x3FEA
 12528                           fsr0l	equ	0x3FE9
 12529                           wreg	equ	0x3FE8
 12530                           indf1	equ	0x3FE7
 12531                           postinc1	equ	0x3FE6
 12532                           postdec1	equ	0x3FE5
 12533                           preinc1	equ	0x3FE4
 12534                           plusw1	equ	0x3FE3
 12535                           fsr1h	equ	0x3FE2
 12536                           fsr1l	equ	0x3FE1
 12537                           bsr	equ	0x3FE0
 12538                           indf2	equ	0x3FDF
 12539                           postinc2	equ	0x3FDE
 12540                           postdec2	equ	0x3FDD
 12541                           preinc2	equ	0x3FDC
 12542                           plusw2	equ	0x3FDB
 12543                           fsr2h	equ	0x3FDA
 12544                           fsr2l	equ	0x3FD9
 12545                           status	equ	0x3FD8


Data Sizes:
    Strings     197
    Constant    37
    Data        10
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    160     160
    BANK3           256    256     256
    BANK4           256      2     168
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_21(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_12(CODE[4]), STR_11(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), STR_6(CODE[20]), 
		 -> STR_5(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    S1171_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3
		 -> ackCmd(BANK4[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK4[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), STR_6(CODE[20]), 
		 -> STR_5(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), STR_6(CODE[20]), 
		 -> STR_5(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 20
		 -> STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), STR_6(CODE[20]), 
		 -> STR_5(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    uart_send@buf	PTR unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK4[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    handle_message@message	PTR unsigned char  size(2) Largest target is 256
		 -> uart_tasks@message(BANK3[256]), 

    lcd_print@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_10(CODE[13]), main_loop@batmsg(BANK0[17]), STR_4(CODE[17]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _updateButtonLight->___aldiv
    _uart_tasks->_handle_message
    _handle_message->_uart_send
    _uart_send->_memcpy
    _vfprintf->_vfpfcnvrt
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___fladd
    _atoi->_isspace
    _setLED->___flge
    ___flge->___flmul
    ___aldiv->___lmul
    _lcd_set_data_addr->_lcd_write
    _lcd_print->_lcd_write
    ___llmod->___lldiv
    _lcd_init->_lcd_write

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    _main_loop->_uart_tasks

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   65977
                                              0 BANK4      2     2      0
                           _lcd_init
                          _lcd_print
                          _main_loop
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           57    57      0   60867
                                            103 BANK0     57    57      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___lldiv
                            ___llmod
                             ___lmul
                           ___xxtofl
                          _lcd_print
                  _lcd_set_data_addr
                             _setLED
                            _sprintf
                          _uart_send
                         _uart_tasks
                  _updateButtonLight
 ---------------------------------------------------------------------------------
 (2) _updateButtonLight                                   12     8      4    1683
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _uart_tasks                                         271   271      0    2294
                                             20 COMRAM    15    15      0
                                              0 BANK3    256   256      0
                     _handle_message
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _handle_message                                       4     1      3    1375
                                             16 COMRAM     4     1      3
                          _uart_send
 ---------------------------------------------------------------------------------
 (4) _uart_send                                            5     2      3     937
                                             11 COMRAM     5     2      3
                             _memcpy
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _transmitChecksum                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     8      6   32772
                                             89 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   31542
                                             85 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    44      3   30991
                                             92 COMRAM     3     0      3
                                             67 BANK0     18    18      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              7     3      4     453
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              67    61      6   24736
                                              0 BANK0     67    61      6
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 10     5      5    3551
                                             14 COMRAM    10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1334
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             55 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2505
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                              62    54      8    5367
                                              0 BANK0     62    54      8
                            ___aldiv
                            ___almod
                             ___flge
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     826
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1094
                                             80 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     752
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1516
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_set_data_addr                                    1     1      0    2086
                                              4 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2632
                                              4 COMRAM     5     3      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     2      4    2478
                                              4 COMRAM     6     2      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            4     2      2    2064
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_write
   _lcd_print
     _lcd_write
   _main_loop
     ___awdiv
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lmul
     ___xxtofl
     _lcd_print
       _lcd_write
     _lcd_set_data_addr
       _lcd_write
     _setLED
       ___aldiv
         ___lmul (ARG)
       ___almod
       ___flge
         ___flmul (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _uart_send
       _memcpy
       _transmitChecksum
     _uart_tasks
       _handle_message
         _uart_send
           _memcpy
           _transmitChecksum
       _transmitChecksum
     _updateButtonLight
       ___aldiv
         ___lmul (ARG)
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh           1D00      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      62        0.0%
BANK31             100      0       0      63        0.0%
BITBANK30          100      0       0      60        0.0%
BANK30             100      0       0      61        0.0%
BITBANK29          100      0       0      58        0.0%
BANK29             100      0       0      59        0.0%
BITBANK28          100      0       0      56        0.0%
BANK28             100      0       0      57        0.0%
BITBANK27          100      0       0      54        0.0%
BANK27             100      0       0      55        0.0%
BITBANK26          100      0       0      52        0.0%
BANK26             100      0       0      53        0.0%
BITBANK25          100      0       0      50        0.0%
BANK25             100      0       0      51        0.0%
BITBANK24          100      0       0      48        0.0%
BANK24             100      0       0      49        0.0%
BITBANK23          100      0       0      46        0.0%
BANK23             100      0       0      47        0.0%
BITBANK22          100      0       0      44        0.0%
BANK22             100      0       0      45        0.0%
BITBANK21          100      0       0      42        0.0%
BANK21             100      0       0      43        0.0%
BITBANK20          100      0       0      40        0.0%
BANK20             100      0       0      41        0.0%
BITBANK19          100      0       0      38        0.0%
BANK19             100      0       0      39        0.0%
BITBANK18          100      0       0      36        0.0%
BANK18             100      0       0      37        0.0%
BITBANK17          100      0       0      34        0.0%
BANK17             100      0       0      35        0.0%
BITBANK16          100      0       0      32        0.0%
BANK16             100      0       0      33        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK6           100      0       0      12        0.0%
BANK6              100      0       0      13        0.0%
BITBANK5           100      0       0      10        0.0%
BANK5              100      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100      2      A8       9       65.6%
BITBANK3           100      0       0       6        0.0%
BANK3              100    100     100       7      100.0%
BIGRAMl             FF      0       0      66        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A7      64        0.0%
DATA                 0      0     2A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 16 19:39:08 2019

     lcd_set_data_addr@addr 0005                ___fldiv@aexp 0037                ___fldiv@bexp 0036  
              ___fldiv@sign 002F                 __CFG_CP$OFF 000000                ___awdiv@sign 0006  
                        _on 0447  __size_of_updateButtonLight 00E6         ___wmul@multiplicand 0003  
               __CFG_LVP$ON 000000                         l201 5584                         l231 39AE  
                       l320 35C0                         l246 3BE4                         l318 3594  
                       l267 2CAE                         l612 24C6                         l571 598C  
                       l638 2880                         l738 5C1E                         l976 56F6  
                       _pad 5956                 lcd_init@inc 000A                ___awmod@sign 0006  
                       wreg 003FE8                ___flmul@aexp 0045                ___flmul@bexp 004A  
              ___flmul@sign 0044                ___flmul@temp 004F                ___flmul@prod 004B  
             __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000                ___fltol@exp1 000A  
                      l1131 5F6E                        l1240 4690                        l1241 466E  
                      l1306 4A66                        l1307 4A62                        l1421 4FE0  
                      l1325 4228                        l1342 44EE                        l1334 4458  
                      l1335 4454                        l1256 4762                        l4001 4ADE  
                      l1265 47CA                        l1433 4C62                        l1266 47C6  
                      l4011 4B16                        l1373 5226                        l4013 4B18  
                      l4005 4B08                        l1366 51A0                        l1295 49F8  
                      l4103 4400                        l1519 6148                        l4033 41D4  
                      l4051 4214                        l4035 41D8                        l4213 5E54  
                      l4133 44CA                        l4109 441E                        l4061 4246  
                      l4053 4218                        l4037 41E8                        l5005 54BA  
                      l5031 3684                        l5007 54BE                        l5121 3D3E  
                      l5113 3C58                        l5033 369E                        l4233 5E9A  
                      l4225 5E82                        l4217 5E62                        l4209 5E48  
                      l4241 5B58                        l4145 450E                        l4129 44AC  
                      l3601 455C                        l4305 57A2                        l5017 5520  
                      l5107 3BB2                        l5051 37A8                        l5035 36AE  
                      l4171 5C5C                        l4219 5E6A                        l4323 57E2  
                      l4315 57BA                        l6011 415C                        l5203 509E  
                      l5141 5AE0                        l4261 56CA                        l5029 3674  
                      l4165 5C4C                        l4229 5E8C                        l4245 5B8C  
                      l3701 46DA                        l3621 45A0                        l4317 57C6  
                      l4309 57B2                        l6005 4124                        l6021 4178  
                      l6101 2F82                        l4271 572E                        l5071 3974  
                      l5063 38BE                        l5047 3762                        l4335 61E2  
                      l6015 4166                        l5231 5132                        l5223 510A  
                      l5215 50D8                        l6111 302A                        l6103 2F92  
                      l5305 524C                        l5137 5A9C                        l4265 56E0  
                      l4257 5696                        l5065 38CE                        l4177 5C72  
                      l4193 5CA4                        l4249 5BAA                        l3633 45C4  
                      l3625 45A4                        l6033 60BE                        l5217 50DE  
                      l5241 5142                        l6113 3068                        l6105 2F9E  
                      l5251 5BDC                        l5323 529C                        l5307 5258  
                      l5083 3A3C                        l5075 399E                        l5059 3894  
                      l4179 5C7A                        l3555 5CD4                        l6035 60DC  
                      l4347 5EC2                        l4355 5F08                        l6123 31CC  
                      l5261 5C10                        l5093 3AEE                        l4197 5CB2  
                      l4189 5C9A                        l3709 46EC                        l3821 5456  
                      l6205 35EC                        l6213 3634                        l6133 3232  
                      l6141 3266                        l6061 2CCE                        l6053 2C68  
                      ?_pad 000F                        l5271 5F38                        l5087 3A5E  
                      l4279 627C                        l3727 4786                        l3743 47A6  
                      l3719 4752                        l3663 461E                        l4703 58D6  
                      l5239 5140                        l6207 3612                        l6151 32D8  
                      l6135 323A                        l6055 2C70                        l5249 5BD0  
                      l5097 3B10                        l3737 479C                        l4289 5750  
                      l3817 544C                        l5601 5984                        l4705 58E0  
                      l5193 5064                        l6161 331A                        l6073 2DA2  
                      l3915 48E0                        l3771 4846                        l3763 4820  
                      l3691 46B4                        l3675 467C                        l3827 549E  
                      l3851 4BB8                        l5611 59DC                        l5603 5996  
                      l5179 5026                        l6171 3398                        l6155 32F0  
                      l6091 2EF4                        l5277 5F60                        l5269 5F2C  
                      l5293 51D6                        l3941 494E                        l3933 4936  
                      l3677 4680                        l3597 4558                        l3861 4C84  
                      l5701 2442                        l6173 33A0                        l6165 336C  
                      l5295 51DC                        l5287 51B8                        l4911 605E  
                      l3951 49A8                        l3927 4918                        l3919 48E4  
                      l3775 484E                        l5607 59AC                        l5199 5076  
                      l6191 352C                        l6183 342A                        l6159 3308  
                      l5297 51E8                        l4673 4EFA                        l4657 4E94  
                      l3777 4850                        l3865 4CC2                        l5617 5FA0  
                      l5713 24AC                        l5641 2182                        l6193 353E  
                      l6097 2F52                        l6089 2EDE                        l5299 520E  
                      l4915 6072                        l4683 4F72                        l4675 4F02  
                      l4667 4EE8                        l4659 4E96                        l3971 4A0E  
                      l3699 46D6                        l5803 294A                        l5731 252A  
                      l5723 24DC                        l6195 3558                        l6099 2F68  
                      l6259 4E7C                        l4941 55F0                        l4933 55C2  
                      l4677 4F06                        l3965 49F6                        l3869 4CF0  
                      l5581 6248                        l5733 252E                        l5717 24D4  
                      l5661 222E                        l5629 214E                        l6197 3568  
                      l4951 5624                        l4927 55AA                        l4679 4F34  
                      l3959 49D0                        l3895 48A0                        l5815 297A  
                      l5823 299A                        l5831 29BE                        l5743 2550  
                      l5663 2238                        l3977 4A2C                        l5577 6232  
                      l5585 6340                        l5905 2C1E                        l5753 2584  
                      l5649 219A                        l4875 619E                        l4939 55E4  
                      l4955 5632                        l4971 5818                        l3899 48A4  
                      l5587 6344                        l5851 2AD6                        l5691 2346  
                      l5659 2212                        l5667 2264                        l4891 5380  
                      l4981 584A                        l3997 4ABA                        l5597 5972  
                      l5781 27FC                        l5749 2574                        l5677 22DC  
                      l5685 22FA                        l4885 52FA                        l4959 5648  
                      l4991 5880                        l4975 582C                        l5791 289A  
                      l5839 2A8E                        l5775 27AE                        l5759 25BE  
                      l5767 2718                        l5695 2390                        l5935 3DF2  
                      l5697 23F6                        l5961 3EFA                        l5937 3E0E  
                      l4995 5896                        l4987 5872                        l4979 583E  
                      l5867 2B26                        l5939 3E16                        l5869 2B30  
                      l5789 2878                        l5957 3ED6                        l5879 2B90  
                      l5959 3EF2                        l5889 2BBC                        l5985 402E  
                      l5977 3FD4                        l5989 4064                        STR_1 2087  
                      STR_2 2098                        STR_3 20BA                        STR_4 2076  
                      STR_5 20A9                        STR_6 2062                        STR_7 203A  
                      STR_8 204E                        STR_9 2026                        u4030 5412  
                      u4200 4C48                        u4120 612E                        u4130 6130  
                      _T2PR 003FAB                        u4035 5408                        u4220 4CAA  
                      u4205 4C3E                        u4150 4B7E                        u4080 5496  
                      u4160 4B9E                        u6000 537C                        u4225 4CA0  
                      u4250 632A                        u4090 5498                        u3530 5CCC  
                      u4075 5478                        u4155 4B74                        u4260 632C  
                      u3700 4652                        u6020 539A                        u4430 4A5C  
                      u3710 4654                        u3550 5D0E                        u6200 54F2  
                      u4185 4BD2                        u4610 444E                        u4186 4BD8  
                      u4187 4BE6                        u6220 365A                        u3740 4698  
                      u3580 62F6                        _PMD0 0039C0                        _PMD1 0039C1  
                      u6150 584E                        u6310 3A4E                        u6230 3734  
                      u4710 5C7E                        u4470 4AC8                        u3590 62F8  
                      _PMD2 0039C2                        _PMD3 0039C3                        u6400 3D0C  
                      u6240 377A                        u4480 4AEC                        u7200 22B0  
                      _PMD4 0039C4                        _PMD5 0039C5                        u6410 5AD2  
                      u6090 55F4                        u6330 3B00                        u4650 44BA  
                      u4570 4234                        u3690 4642                        u7210 22B2  
                      u7130 2170                        _PMD6 0039C6                        _PMD7 0039C7  
                      u6420 5B16                        u6260 3864                        u5540 4EE4  
                      u4820 5BA6                        u4660 44D8                        u4900 5776  
                      u6350 3BA0                        u3950 482C                        u3870 47AA  
                      u7310 24F6                        u6510 5098                        u6280 3944  
                      u5560 4FA8                        u7160 21E6                        u5640 592E  
                      u8040 338E                        u6417 5AC4                        u4905 576C  
                      u6370 3C2E                        u5570 4FAA                        u4770 5E6E  
                      u3890 47C0                        u7090 5FE6                        u7250 247A  
                      u7170 21E8                        u6427 5B08                        u6620 5F3C  
                      u6700 5262                        u4940 57CC                        u6390 3CCA  
                      u7350 254C                        u8207 6180                        u8127 4E2C  
                      u7600 2C08                        u7520 2AB2                        u7280 24BA  
                      u8217 6194                        u7097 5FD8                        u8137 4E46  
                      u4970 61DE                        u4890 573E                        u7610 2C0A  
                      u5930 532C                        u8227 61A0                        u8147 2C6A  
                      u5940 532E                        u8157 3234                        u6590 5BE0  
                      u7710 3F38                        u4990 5EEC                        u5950 5346  
                      u8167 339A                        u7720 3F3A                        u5960 5348  
                      u5865 6164                        u8177 363C                        u5866 6166  
                      u7730 3F46                        u5970 5360                        u8187 6168  
                      u7580 2BA6                        u7660 3E54                        u5980 5362  
                      u7900 2E92                        u8197 6176                        u4997 5EDE  
                      u7670 3E56                        u5990 537A                        u7680 3E62  
                      u7920 2F06                        u7780 40E0                        u7940 301E  
                      u7790 40E2                        u7960 3216                        u7890 2E7A  
                      u7891 2E78                        u7978 321A                        _WPUA 003A41  
                      _WPUB 003A51                        _WPUC 003A61                        _WPUD 003A71  
                      _WPUE 003A81               __CFG_FCMEN$ON 000000                        _dbuf 044C  
                      _atoi 4E82                        _main 4D0A                        _prec 0440  
                      _nout 043C                        pad@i 0015                        pad@p 0012  
                      fsr1h 003FE2                        fsr2h 003FDA                        indf1 003FE7  
                      indf2 003FDF                        fsr1l 003FE1                        pad@w 0017  
                      fsr2l 003FD9                _soundAmplify 2001               ___fpclassifyf 53BC  
                      prodh 003FF4                        prodl 003FF3                        start FFFC  
           ___fldiv@new_exp 0030                 lcd_write@rs 0004                _tolower$1243 000D  
             __CFG_CSWEN$ON 000000                ___param_bank 000000                       ??_pad 0014  
             ___fltol@sign1 0009             __end_of___aldiv 5662                       ?_atoi 0008  
           __end_of___almod 58B0             __end_of___fladd 4874                       ?_main 0001  
                     _ADCLK 003EFF               _main_loop$316 00E2               _main_loop$317 00E6  
             _main_loop$318 00EA               _main_loop$336 00EE                       _ADPCH 003EF1  
           __end_of___fldiv 4B20                       _ADREF 003EFD             __end_of___awdiv 5CC0  
           __end_of___flneg 6296                       STR_10 20CB                       STR_11 20D8  
                     STR_12 20E0                       STR_21 20E8                       STR_15 20DC  
                     STR_16 20E4               __CFG_WDTE$OFF 000000                       STR_19 20E8  
           __end_of___awmod 5EA8             __end_of___flmul 452C             __end_of___flsub 604E  
           __end_of___fltol 57FC             __end_of___lldiv 5C38             ___awdiv@divisor 0003  
                     _T2CLK 003FAE             __end_of___llmod 5F88                       _T2CON 003FAC  
                     _LATB4 01FDDC                       _LATE0 01FDF0                       _LATE1 01FDF1  
                     _LATE2 01FDF2              __CFG_DEBUG$OFF 000000                       _U1TXB 003DEA  
           ___awdiv@counter 0005                vfpfcnvrt@fmt 005E                       _PORTA 003FCA  
                     _PORTB 003FCB                       _PORTC 003FCC                       _PORTD 003FCD  
                     _PORTE 003FCE                       _TRISA 003FC2                       _TRISB 003FC3  
                     _TRISC 003FC4                       _TRISD 003FC5                       _TRISE 003FC6  
       ___lmul@multiplicand 0005               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000                       _flags 0442                _DMA2CON0bits 003BDC  
                     _fputc 5CC0                       _fputs 6228             __end_of_isdigit 6332  
                     _rxBuf 000100                       _txBuf 000200          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0015                       pad@fp 000F                       atoi@s 0008  
                     _width 043E                       _putch 63C6             __end_of_isspace 61EC  
           __end_of_isupper 62FE               lcd_init@shift 0005                       tablat 003FF5  
                     status 003FD8             __end_of_sprintf 6228              ?___fpclassifyf 0001  
           __end_of_tolower 6156             __end_of_strncmp 5956             __initialization 6296  
              __end_of_atoi 4FEE                __end_of_main 4E82              __CFG_SAFEN$OFF 000000  
                    ??_atoi 000A                      ??_main 04A6               __activetblptr 000003  
              _volume_level 044B              __CFG_MVECEN$ON 000000         lcd_init@cursorblink 0007  
                    _ADCON0 003EF8                      _ADCON1 003EF9                      _ADCON2 003EFA  
                    _ADCON3 003EFB                      ?_fputc 0001            ___llmod@dividend 000E  
                    ?_fputs 0009                      _ADRESH 003EF0                      _ADRESL 003EEF  
                    _CCPR2H 003F79                      _CCPR3H 003F75                      _CCPR2L 003F78  
                    _CCPR4H 003F71                      _CCPR3L 003F74                      _CCPR4L 003F70  
          ___awdiv@dividend 0001                      _ANSELA 003A40                      ?_putch 0001  
                    _ANSELB 003A50                      _ANSELC 003A60                      _ANSELD 003A70  
                    _ANSELE 003A80                      _U1CON0 003DF2                      _U1CON1 003DF3  
                    _U1CON2 003DF4                      _U1BRGH 003DF6                      _U1BRGL 003DF5  
                    _RB0PPS 003A08                      _ODCONA 003A42                      _ODCONB 003A52  
                    _ODCONC 003A62                      _RD4PPS 003A1C                      _ODCOND 003A72  
                    _ODCONE 003A82                      _RC7PPS 003A17                      _RD5PPS 003A1D  
                    _RD6PPS 003A1E                      _RD7PPS 003A1F              __CFG_WDTCCS$SC 000000  
                    _U1TXIF 01CD1C                      _INLVLA 003A44                      _INLVLB 003A54  
                    _INLVLC 003A64                      _INLVLD 003A74                      _INLVLE 003A84  
                    _PRLOCK 0039EF            __end_of___xxtofl 52B6          lcd_write@longdelay 0002  
         ?_transmitChecksum 0001              __CFG_XINST$OFF 000000                vfprintf@cfmt 00B8  
          __end_of_lcd_init 5DBE                      ___flge 5662                      ___fleq 5B24  
                    _ackCmd 04A4                      ___lmul 604E          ??_transmitChecksum 0001  
                 ??___aldiv 0015                   ??___almod 0009                   ??___fladd 0017  
                    ___wmul 6364                   ??___fldiv 0027                   ??___awdiv 0005  
                 ??___flneg 0005              __CFG_STVREN$ON 000000                   ??___awmod 0005  
                 ??___flmul 0040                   ??___flsub 0059                   ??___fltol 0005  
                 ??___lldiv 0009                   ??___llmod 0016                      _efgtoa 20EC  
                    _floorf 4B20                      _memcpy 5EA8                      _setLED 3644  
                    clear_0 62BE            ___awdiv@quotient 0007             ___awmod@divisor 0003  
               setLED@shift 009A             ___awmod@counter 0005                      pad@buf 0010  
                    _strcpy 5F88                      _strlen 6332              lcd_init@cursor 0006  
                    fputc@c 0001                      fputs@c 000C                      fputs@i 000D  
                    fputs@s 0009                   ??_isdigit 0003             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_isspace 0003                main_loop@rel 00FC                main_loop@res 00F6  
              main_loop@pos 0444                main_loop@sum 0434                      tblptrh 003FF7  
                 ??_isupper 0003                      tblptrl 003FF6                      tblptru 003FF8  
                    putch@c 0001            __end_of_vfprintf 6102                   ??_sprintf 0060  
                 ??_tolower 0009                   ??_strncmp 0005           _lcd_set_data_addr 6392  
                ___flge@ff1 0051                  ___flge@ff2 0055             ??___fpclassifyf 0005  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0060  
   __end_of__initialization 62C4                  ___flneg@f1 0001               lcd_write@data 0001  
        ?_lcd_set_data_addr 0001               ___rparam_used 000001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001         ??_lcd_set_data_addr 0005                __pidataBANK4 63BC  
             __end_of_fputc 5D42               __end_of_fputs 6260               __end_of_putch 63C8  
        __size_of_lcd_print 008E   __end_of_lcd_set_data_addr 63A8          __size_of_lcd_write 0052  
                   ??_fputc 0004                     ??_fputs 000C             __CFG_PR1WAY$OFF 000000  
                   ??_putch 0001                  __pbssBANK4 0400          __size_of_main_loop 09E6  
                _efgtoa$630 0079                  _efgtoa$624 0073                  _efgtoa$618 006F  
                _efgtoa$619 0071                  _efgtoa$628 0075                  _efgtoa$629 0077  
                   ?___flge 0051                     ?___fleq 0001                     ?___lmul 0001  
                   ?___wmul 0001                     ?_efgtoa 0060                     _CCP2CON 003F7A  
                   _CCP3CON 003F76                     _CCP4CON 003F72                     ?_floorf 0038  
                   ?_memcpy 0001                     ?_setLED 0060              ___lmul@product 0009  
                   ?_strcpy 0001                     ?_strlen 0001          __size_of_uart_init 009C  
       __CFG_PWRTS$PWRT_OFF 000000          __size_of_uart_send 0076                     _U1TXCHK 003DEB  
                   _U1RXPPS 003AE5                   ?___xxtofl 0001          __size_of_vfpfcnvrt 0444  
                   _PWM6DCH 003F69                     _PWM6DCL 003F68                     _PWM8DCH 003F61  
                   _PWM8DCL 003F60                     _PWM6CON 003F6A                     _PWM8CON 003F62  
                   _SLRCONA 003A43                     _SLRCONB 003A53                     _SLRCONC 003A63  
                   _SLRCOND 003A73                     _SLRCONE 003A83     __size_of_handle_message 0106  
                 ?_lcd_init 0005                   _DMA1DPTRL 003BEC                     __Hparam 0000  
                   __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                  _setLED$293 007C  
                _setLED$294 0080                  _setLED$287 0074                  _setLED$288 0078  
                   ___aldiv 558E             __size_of___flge 00D0             __size_of___fleq 008A  
                   ___almod 57FC           __end_of_lcd_print 5B24                     ___fladd 452C  
                   ___fldiv 4874                     ___awdiv 5C38                     ___flneg 6260  
           __size_of___lmul 005E                     ___awmod 5E34                     ___flmul 41A8  
                   ___flsub 5FF0                     ___fltol 5732           __end_of_lcd_write 61A8  
                   ___lldiv 5BAE             __size_of___wmul 002E                     ___llmod 5F1A  
                 ?_vfprintf 00B5                __psmallconst 2000             __size_of_efgtoa 0B72  
         handle_message@len 0013           __end_of_main_loop 3644             __size_of_floorf 01EA  
                   __pcinit 6296             __size_of_memcpy 0072             __size_of_setLED 0720  
                   __ramtop 2000                     __ptext0 4D0A                     __ptext1 59FA  
                   __ptext2 2C5E                     __ptext3 54A8                     __ptext4 4FEE  
                   __ptext5 52B6                     __ptext6 5DBE                     __ptext7 63A8  
                   __ptext8 5EA8                     __ptext9 61EC             __CFG_WRTAPP$OFF 000000  
           __size_of_strcpy 0068             __size_of_strlen 0032                __size_of_pad 00A4  
                   _isdigit 62FE                     _pairing 044A                  ??___xxtofl 0005  
          ___awmod@dividend 0001            ___aldiv@dividend 000D                     _isspace 61A8  
           __CFG_WRTSAF$OFF 000000                     _isupper 62CA                     efgtoa@c 0065  
                   efgtoa@d 0083                     efgtoa@e 009B                     efgtoa@f 0061  
                   efgtoa@g 0097                     efgtoa@h 008D                     efgtoa@i 0095  
                   efgtoa@l 0091                     efgtoa@m 007F                     efgtoa@n 009D  
                   efgtoa@p 0087                     efgtoa@t 007B                     efgtoa@u 009F  
                   efgtoa@w 008A                     atoi@neg 000E  __size_of_lcd_set_data_addr 0016  
                   _sprintf 61EC                     _tolower 6102                  ??_lcd_init 0009  
                   _strncmp 58B0        end_of_initialization 62C4                     floorf@e 0046  
                   floorf@m 0042                     floorf@u 0048                     floorf@x 0038  
                   memcpy@d 0007                     memcpy@n 0005                     memcpy@s 0009  
                   setLED@b 008A                     setLED@g 0086                     setLED@r 0070  
                   fputc@fp 0003       updateButtonLight@step 001B                     fputs@fp 000B  
         __end_of_uart_init 5A96           __end_of_uart_send 5E34             ___lldiv@divisor 0005  
             main_loop@last 0400             ___lldiv@counter 000D           uart_tasks@bytePos 001F  
         __end_of_vfpfcnvrt 41A8                  efgtoa@mode 008C           uart_tasks@message 0300  
                efgtoa@sign 0085            ___aldiv@quotient 0017                     postdec1 003FE5  
                   postdec2 003FDD                     postinc0 003FEE                     postinc1 003FE6  
                   postinc2 003FDE                  ??_vfprintf 0060       __CFG_WDTCPS$WDTCPS_31 000000  
                   strcpy@d 0009                     strlen@a 0003                     strcpy@s 0007  
                   strlen@s 0001                  _uart_tasks 4FEE                   _PORTCbits 003FCC  
                 _PORTDbits 003FCD                 uart_tasks@i 001E                 ___fladd@grs 001E  
 __size_of_transmitChecksum 0014               ___xxtofl@sign 0009                 ___fldiv@grs 0032  
               ___fldiv@rem 002B            __CFG_FEXTOSC$OFF 000000                  lcd_init@on 0008  
     __end_of_stateCheckCmd 2026                 ___flmul@grs 0046                  lcd_print@i 0009  
            __end_of___flge 5732              __end_of___fleq 5BAE       uart_tasks@posInRawMsg 001D  
            __end_of___lmul 60AC                 vfpfcnvrt@ap 005F                 vfpfcnvrt@ct 00AD  
               vfpfcnvrt@fp 005D              __end_of___wmul 6392              __end_of_efgtoa 2C5E  
            __end_of_floorf 4D0A              __end_of_memcpy 5F1A              __end_of_setLED 3D64  
                floorf@F524 0428              __end_of_strcpy 5FF0              __end_of_strlen 6364  
       start_initialization 6296              _handle_message 52B6                 __end_of_pad 59FA  
     __end_of___fpclassifyf 54A8             ___llmod@divisor 0012             ___llmod@counter 0016  
          __CFG_LPBOREN$OFF 000000       handle_message@message 0011                 vfprintf@fmt 00B6  
                  ??___flge 0059                    ??___fleq 0009                    ??___lmul 0009  
                  ??___wmul 0005                  setLED@step 0064                    ??_efgtoa 0066  
               __pdataBANK4 049C                    ??_floorf 003C                    ??_memcpy 0007  
                  ??_setLED 0068                 ?_uart_tasks 0001            __CFG_IVT1WAY$OFF 000000  
               _bat_percent 04A0                    ??_strcpy 0005                    ??_strlen 0003  
                 ___fladd@a 0013                   ___fladd@b 000F                   ___fldiv@a 0023  
                 ___fldiv@b 001F      __end_of_handle_message 53BC                   ___flmul@a 003C  
                 ___flmul@b 0038                   ___flsub@a 0055                   ___flsub@b 0051  
             __pcstackBANK0 0060               __pcstackBANK3 0300               __pcstackBANK4 04A6  
         __size_of___xxtofl 0164           __size_of_lcd_init 007C                   _atoi$1120 0010  
                 _atoi$1121 0014                   _atoi$1122 0012                    ?___aldiv 000D  
                  ?___almod 0001                    ?___fladd 000F                    ?___fldiv 001F  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 0038                    ?___flsub 0051                    ?___fltol 0001  
                  ?___lldiv 0001                    ?___llmod 000E            __CFG_PPS1WAY$OFF 000000  
          ___almod@dividend 0001                   _lcd_print 5A96                   _connected 0448  
         __size_of_vfprintf 0056                   _lcd_write 6156      __CFG_BBSIZE$BBSIZE_512 000000  
               __smallconst 2000            _transmitChecksum 63A8                    ?_isdigit 0001  
                 _main_loop 2C5E                    _DMA1CON0 003BFC                    _DMA1CON1 003BFD  
                  _DMA1AIRQ 003BFE                    _DMA2CON0 003BDC                    _DMA2CON1 003BDD  
                  _DMA2AIRQ 003BDE                    _DMA1DSAH 003BF1                    _DMA1DSAL 003BF0  
           ?_handle_message 0011                    _DMA2DSAH 003BD1                    _DMA2DSAL 003BD0  
                  _DMA1DSZH 003BEF                    _DMA1DSZL 003BEE                    _DMA2DSZH 003BCF  
                  _DMA2DSZL 003BCE                    _DMA1SSAH 003BFA                    _DMA1SIRQ 003BFF  
                  _DMA1SSAL 003BF9                    _DMA1SSAU 003BFB                    _DMA2SSAH 003BDA  
                  _DMA2SIRQ 003BDF                    _DMA2SSAL 003BD9                    _DMA2SSAU 003BDB  
                  _DMA1SSZH 003BF8                    _DMA1SSZL 003BF7                    _DMA2SSZH 003BD8  
                  _DMA2SSZL 003BD7                    ?_isspace 0001                    ?_isupper 0001  
                  _CCPTMRS0 003F5E            main_loop@lastAvg 00DE            main_loop@counter 0438  
          main_loop@lastSum 0430                    ?_sprintf 00B9                    ?_tolower 0007  
            __size_of_fputc 0082              __size_of_fputs 0038                    ?_strncmp 0001  
            __size_of_putch 0002             ___aldiv@divisor 0011             ___aldiv@counter 0015  
       __size_of_uart_tasks 0164              ___wmul@product 0005        updateButtonLight@dch 0023  
          uart_tasks@intPos 0020            uart_tasks@msgLen 0021                   _uart_init 59FA  
                 _uart_send 5DBE                   _vfpfcnvrt 3D64                  ?_lcd_print 0005  
                _ADCON0bits 003EF8                  ?_lcd_write 0001           ___wmul@multiplier 0001  
                ?_main_loop 0001                   _streaming 0449                _isspace$1151 0007  
                vfpfcnvrt@c 00B4                  vfpfcnvrt@f 00B0           ___lmul@multiplier 0001  
                 copy_data0 62AA               _ledBrightness 049C                  _DMA2SCNTIF 01CD2A  
                  __Hrparam 0000             lcd_print@string 0005                   memcpy@tmp 000B  
                vfprintf@ap 00B7                    __Lrparam 0000                  vfprintf@fp 00B5  
        __CFG_BOREN$SBORDIS 000000                   setLED@mod 0060                  ?_uart_init 0001  
                ?_uart_send 000C            __size_of___aldiv 00D4            __size_of___almod 00B4  
          __size_of___fladd 0348            __size_of___fldiv 02AC            __size_of___awdiv 0088  
          __size_of___flneg 0036            __size_of___awmod 0074            __size_of___flmul 0384  
          __size_of___flsub 005E            __size_of___fltol 00CA            __size_of___lldiv 008A  
          __size_of___llmod 006E                  ?_vfpfcnvrt 005D        __end_of_soundAmplify 2021  
         _updateButtonLight 54A8          ___fpclassifyf@F463 042C                  sprintf@fmt 00BA  
                  ___xxtofl 5152          ?_updateButtonLight 001B            __size_of_isdigit 0034  
          __size_of_isspace 0044                    __ptext10 60AC                    __ptext11 3D64  
                  __ptext20 5CC0                    __ptext12 58B0                    __ptext21 63C6  
                  __ptext13 20EC                    __ptext30 4874                    __ptext22 4B20  
                  __ptext14 6102                    __ptext31 5E34                    __ptext23 53BC  
                  __ptext15 62CA                    __ptext40 57FC                    __ptext32 5C38  
                  __ptext24 5732                    __ptext16 5F88                    __ptext41 558E  
                  __ptext33 4E82                    __ptext25 5FF0                    __ptext17 5956  
                  __ptext42 6392                    __ptext34 61A8                    __ptext26 452C  
                  __ptext18 6332                    __ptext43 5A96                    __ptext35 62FE  
                  __ptext27 6260                    __ptext19 6228                    __ptext44 5152  
                  __ptext36 6364                    __ptext28 41A8                    __ptext45 5F1A  
                  __ptext37 3644                    __ptext29 5B24                    __ptext46 5BAE  
                  __ptext38 604E                    __ptext47 5D42                    __ptext39 5662  
                  __ptext48 6156            __size_of_isupper 0034                    _lcd_init 5D42  
           ___almod@divisor 0005            __size_of_sprintf 003C            __size_of_tolower 0054  
           main_loop@absRes 00F2             ___almod@counter 0009         ??_updateButtonLight 001F  
                strcpy@dest 0001            __size_of_strncmp 00A6             main_loop@batmsg 00CD  
           main_loop@batlvl 00F4         __end_of_volCheckCmd 2024               __size_of_atoi 016C  
             __size_of_main 0178             main_loop@sample 00F8        __CFG_WDTCWS$WDTCWS_7 000000  
        __CFG_BORV$VBOR_190 000000                    efgtoa@fp 0060                    efgtoa@ne 0081  
                  efgtoa@pp 007D                    efgtoa@ou 006B             uart_tasks@rxLen 0019  
           uart_tasks@rxPos 0446               setLED@trueMod 0084         uart_tasks@msgOffset 001C  
                  _vfprintf 60AC                ??_uart_tasks 0015   __end_of_updateButtonLight 558E  
               ??_lcd_print 0007                 ??_lcd_write 0003                 ??_main_loop 00C7  
                  memcpy@d1 0001                    memcpy@s1 0003                    setLED@sb 0092  
                  setLED@sg 008E                    setLED@sr 0096                    isdigit@c 0001  
        uart_tasks@checksum 001B                   sprintf@ap 00C1                    isspace@c 0001  
          ___lldiv@dividend 0001          __end_of_uart_tasks 5152           __CFG_CLKOUTEN$OFF 000000  
                 strcpy@src 0003                    isupper@c 0001    __end_of_transmitChecksum 63BC  
                 strncmp@_l 0001                   strncmp@_r 0002                 efgtoa@nmode 0089  
               ??_uart_init 0001                 ??_uart_send 000F            ??_handle_message 0014  
               ??_vfpfcnvrt 00A3               _vfpfcnvrt$644 00A7               _vfpfcnvrt$645 00A9  
             _vfpfcnvrt$649 00AB                    sprintf@f 00C2                    tolower@c 0007  
                  sprintf@s 00B9      __size_of___fpclassifyf 00EC                  _PRLOCKbits 0039EF  
          ___lldiv@quotient 0009          uart_tasks@zeroByte 0022                    strncmp@l 0006  
                  strncmp@n 0003                    strncmp@r 0007                ___aldiv@sign 0016  
             uart_tasks@val 0023                 _volCheckCmd 2021               ___fladd@signs 001B  
              uart_send@buf 000C                uart_send@len 000E                ___almod@sign 000A  
              ___fladd@aexp 001C                ___fladd@bexp 001D               _stateCheckCmd 2024  
    uart_tasks@rawMsgOffset 001A  
