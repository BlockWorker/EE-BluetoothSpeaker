

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Oct 21 11:42:48 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18LF47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    67                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    68                           	dabs	1,0x100,256,_rxBuf
    69                           	dabs	1,0x200,256,_txBuf
    70  0000                     
    71                           ; Version 2.10
    72                           ; Generated 31/07/2019 GMT
    73                           ; 
    74                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC18LF47K42 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     
   106                           	psect	idataBANK0
   107  014472                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _ledBrightness
   111  014472  0040               	dw	64
   112  014474  0000               	dw	0
   113                           
   114                           ;initializer for _bat_percent
   115  014476  0000               	dw	0
   116  014478  42C8               	dw	17096
   117                           
   118                           ;initializer for _ackCmd
   119  01447A  14                 	db	20
   120  01447B  00                 	db	0
   121                           
   122                           	psect	idataBANK4
   123  01447C                     __pidataBANK4:
   124                           	opt callstack 0
   125                           
   126                           ;initializer for main_loop@counter
   127  01447C  86A0               	dw	34464
   128  01447E  0001               	dw	1
   129                           
   130                           	psect	mediumconst
   131  00FEE0                     __pmediumconst:
   132                           	opt callstack 0
   133  00FEE0  00                 	db	0
   134  00FEE1                     _soundAmplify:
   135                           	opt callstack 0
   136  00FEE1  0000               	dw	0
   137  00FEE3  0000               	dw	0
   138  00FEE5  0000               	dw	0
   139  00FEE7  0276               	dw	630
   140  00FEE9  01E0               	dw	480
   141  00FEEB  0186               	dw	390
   142  00FEED  0104               	dw	260
   143  00FEEF  00B4               	dw	180
   144  00FEF1  0064               	dw	100
   145  00FEF3  0041               	dw	65
   146  00FEF5  0032               	dw	50
   147  00FEF7  0023               	dw	35
   148  00FEF9  0016               	dw	22
   149  00FEFB  000F               	dw	15
   150  00FEFD  0009               	dw	9
   151  00FEFF  0007               	dw	7
   152  00FF01                     __end_of_soundAmplify:
   153                           	opt callstack 0
   154  00FF01                     _volCheckCmd:
   155                           	opt callstack 0
   156  00FF01  16                 	db	22
   157  00FF02  00                 	db	0
   158  00FF03  04                 	db	4
   159  00FF04                     __end_of_volCheckCmd:
   160                           	opt callstack 0
   161  00FF04                     _stateCheckCmd:
   162                           	opt callstack 0
   163  00FF04  0D                 	db	13
   164  00FF05  00                 	db	0
   165  00FF06                     __end_of_stateCheckCmd:
   166                           	opt callstack 0
   167  0000                     _PRLOCKbits	set	14831
   168  0000                     _PRLOCK	set	14831
   169  0000                     _PMD7	set	14791
   170  0000                     _PMD6	set	14790
   171  0000                     _PMD5	set	14789
   172  0000                     _PMD4	set	14788
   173  0000                     _PMD3	set	14787
   174  0000                     _PMD2	set	14786
   175  0000                     _PMD1	set	14785
   176  0000                     _PMD0	set	14784
   177  0000                     _DMA2SCNTIF	set	118058
   178  0000                     _U1TXIF	set	118044
   179  0000                     _RB0PPS	set	14856
   180  0000                     _U1RXPPS	set	15077
   181  0000                     _RD7PPS	set	14879
   182  0000                     _RD6PPS	set	14878
   183  0000                     _RD5PPS	set	14877
   184  0000                     _RD4PPS	set	14876
   185  0000                     _RC7PPS	set	14871
   186  0000                     _ODCONE	set	14978
   187  0000                     _SLRCONE	set	14979
   188  0000                     _INLVLE	set	14980
   189  0000                     _WPUE	set	14977
   190  0000                     _ANSELE	set	14976
   191  0000                     _ODCOND	set	14962
   192  0000                     _SLRCOND	set	14963
   193  0000                     _INLVLD	set	14964
   194  0000                     _WPUD	set	14961
   195  0000                     _ANSELD	set	14960
   196  0000                     _ODCONC	set	14946
   197  0000                     _SLRCONC	set	14947
   198  0000                     _INLVLC	set	14948
   199  0000                     _WPUC	set	14945
   200  0000                     _ANSELC	set	14944
   201  0000                     _ODCONB	set	14930
   202  0000                     _SLRCONB	set	14931
   203  0000                     _INLVLB	set	14932
   204  0000                     _WPUB	set	14929
   205  0000                     _ANSELB	set	14928
   206  0000                     _ODCONA	set	14914
   207  0000                     _SLRCONA	set	14915
   208  0000                     _INLVLA	set	14916
   209  0000                     _WPUA	set	14913
   210  0000                     _ANSELA	set	14912
   211  0000                     _DMA2CON0bits	set	15324
   212  0000                     _DMA1DPTRL	set	15340
   213  0000                     _DMA2CON0	set	15324
   214  0000                     _DMA2AIRQ	set	15326
   215  0000                     _DMA2SIRQ	set	15327
   216  0000                     _DMA2DSAL	set	15312
   217  0000                     _DMA2DSAH	set	15313
   218  0000                     _DMA2DSZL	set	15310
   219  0000                     _DMA2DSZH	set	15311
   220  0000                     _DMA2SSAL	set	15321
   221  0000                     _DMA2SSAH	set	15322
   222  0000                     _DMA2SSAU	set	15323
   223  0000                     _DMA2SSZL	set	15319
   224  0000                     _DMA2SSZH	set	15320
   225  0000                     _DMA2CON1	set	15325
   226  0000                     _DMA1CON0	set	15356
   227  0000                     _DMA1AIRQ	set	15358
   228  0000                     _DMA1SIRQ	set	15359
   229  0000                     _DMA1DSAL	set	15344
   230  0000                     _DMA1DSAH	set	15345
   231  0000                     _DMA1DSZL	set	15342
   232  0000                     _DMA1DSZH	set	15343
   233  0000                     _DMA1SSAL	set	15353
   234  0000                     _DMA1SSAH	set	15354
   235  0000                     _DMA1SSAU	set	15355
   236  0000                     _DMA1SSZL	set	15351
   237  0000                     _DMA1SSZH	set	15352
   238  0000                     _DMA1CON1	set	15357
   239  0000                     _U1TXCHK	set	15851
   240  0000                     _U1TXB	set	15850
   241  0000                     _U1CON2	set	15860
   242  0000                     _U1CON1	set	15859
   243  0000                     _U1CON0	set	15858
   244  0000                     _U1BRGL	set	15861
   245  0000                     _U1BRGH	set	15862
   246  0000                     _ADREF	set	16125
   247  0000                     _ADCLK	set	16127
   248  0000                     _ADCON3	set	16123
   249  0000                     _ADCON2	set	16122
   250  0000                     _ADCON1	set	16121
   251  0000                     _ADCON0	set	16120
   252  0000                     _ADRESL	set	16111
   253  0000                     _ADRESH	set	16112
   254  0000                     _ADCON0bits	set	16120
   255  0000                     _ADPCH	set	16113
   256  0000                     _CCPTMRS0	set	16222
   257  0000                     _T2CON	set	16300
   258  0000                     _T2CLK	set	16302
   259  0000                     _T2PR	set	16299
   260  0000                     _PWM8CON	set	16226
   261  0000                     _PWM6CON	set	16234
   262  0000                     _CCP4CON	set	16242
   263  0000                     _CCP3CON	set	16246
   264  0000                     _CCP2CON	set	16250
   265  0000                     _PORTE	set	16334
   266  0000                     _TRISE	set	16326
   267  0000                     _PORTD	set	16333
   268  0000                     _TRISD	set	16325
   269  0000                     _PORTC	set	16332
   270  0000                     _TRISC	set	16324
   271  0000                     _PORTB	set	16331
   272  0000                     _TRISB	set	16323
   273  0000                     _PORTA	set	16330
   274  0000                     _TRISA	set	16322
   275  0000                     _PORTDbits	set	16333
   276  0000                     _PORTCbits	set	16332
   277  0000                     _CCPR4L	set	16240
   278  0000                     _CCPR4H	set	16241
   279  0000                     _CCPR2L	set	16248
   280  0000                     _CCPR2H	set	16249
   281  0000                     _CCPR3L	set	16244
   282  0000                     _CCPR3H	set	16245
   283  0000                     _PWM8DCL	set	16224
   284  0000                     _PWM8DCH	set	16225
   285  0000                     _PWM6DCL	set	16232
   286  0000                     _PWM6DCH	set	16233
   287  0000                     _LATE0	set	130544
   288  0000                     _LATE1	set	130545
   289  0000                     _LATE2	set	130546
   290  0000                     _LATB4	set	130524
   291  0000                     _LATC4	set	130532
   292  00FF06                     STR_12:
   293  00FF06  42                 	db	66	;'B'
   294  00FF07  61                 	db	97	;'a'
   295  00FF08  74                 	db	116	;'t'
   296  00FF09  74                 	db	116	;'t'
   297  00FF0A  65                 	db	101	;'e'
   298  00FF0B  72                 	db	114	;'r'
   299  00FF0C  79                 	db	121	;'y'
   300  00FF0D  3A                 	db	58	;':'
   301  00FF0E  20                 	db	32
   302  00FF0F  25                 	db	37
   303  00FF10  33                 	db	51	;'3'
   304  00FF11  2E                 	db	46
   305  00FF12  30                 	db	48	;'0'
   306  00FF13  66                 	db	102	;'f'
   307  00FF14  25                 	db	37
   308  00FF15  25                 	db	37
   309  00FF16  20                 	db	32
   310  00FF17  20                 	db	32
   311  00FF18  20                 	db	32
   312  00FF19  00                 	db	0
   313  00FF1A                     STR_10:
   314  00FF1A  46                 	db	70	;'F'
   315  00FF1B  75                 	db	117	;'u'
   316  00FF1C  6C                 	db	108	;'l'
   317  00FF1D  6C                 	db	108	;'l'
   318  00FF1E  20                 	db	32
   319  00FF1F  43                 	db	67	;'C'
   320  00FF20  68                 	db	104	;'h'
   321  00FF21  67                 	db	103	;'g'
   322  00FF22  3A                 	db	58	;':'
   323  00FF23  20                 	db	32
   324  00FF24  25                 	db	37
   325  00FF25  33                 	db	51	;'3'
   326  00FF26  2E                 	db	46
   327  00FF27  30                 	db	48	;'0'
   328  00FF28  66                 	db	102	;'f'
   329  00FF29  25                 	db	37
   330  00FF2A  25                 	db	37
   331  00FF2B  20                 	db	32
   332  00FF2C  20                 	db	32
   333  00FF2D  00                 	db	0
   334  00FF2E                     STR_11:
   335  00FF2E  46                 	db	70	;'F'
   336  00FF2F  61                 	db	97	;'a'
   337  00FF30  73                 	db	115	;'s'
   338  00FF31  74                 	db	116	;'t'
   339  00FF32  20                 	db	32
   340  00FF33  43                 	db	67	;'C'
   341  00FF34  68                 	db	104	;'h'
   342  00FF35  67                 	db	103	;'g'
   343  00FF36  3A                 	db	58	;':'
   344  00FF37  20                 	db	32
   345  00FF38  25                 	db	37
   346  00FF39  33                 	db	51	;'3'
   347  00FF3A  2E                 	db	46
   348  00FF3B  30                 	db	48	;'0'
   349  00FF3C  66                 	db	102	;'f'
   350  00FF3D  25                 	db	37
   351  00FF3E  25                 	db	37
   352  00FF3F  20                 	db	32
   353  00FF40  20                 	db	32
   354  00FF41  00                 	db	0
   355  00FF42                     STR_9:
   356  00FF42  43                 	db	67	;'C'
   357  00FF43  68                 	db	104	;'h'
   358  00FF44  67                 	db	103	;'g'
   359  00FF45  20                 	db	32
   360  00FF46  66                 	db	102	;'f'
   361  00FF47  61                 	db	97	;'a'
   362  00FF48  75                 	db	117	;'u'
   363  00FF49  6C                 	db	108	;'l'
   364  00FF4A  74                 	db	116	;'t'
   365  00FF4B  3A                 	db	58	;':'
   366  00FF4C  20                 	db	32
   367  00FF4D  25                 	db	37
   368  00FF4E  33                 	db	51	;'3'
   369  00FF4F  2E                 	db	46
   370  00FF50  30                 	db	48	;'0'
   371  00FF51  66                 	db	102	;'f'
   372  00FF52  25                 	db	37
   373  00FF53  25                 	db	37
   374  00FF54  20                 	db	32
   375  00FF55  00                 	db	0
   376  00FF56                     STR_6:
   377  00FF56  4F                 	db	79	;'O'
   378  00FF57  66                 	db	102	;'f'
   379  00FF58  66                 	db	102	;'f'
   380  00FF59  20                 	db	32
   381  00FF5A  20                 	db	32
   382  00FF5B  20                 	db	32
   383  00FF5C  20                 	db	32
   384  00FF5D  20                 	db	32
   385  00FF5E  20                 	db	32
   386  00FF5F  20                 	db	32
   387  00FF60  20                 	db	32
   388  00FF61  20                 	db	32
   389  00FF62  20                 	db	32
   390  00FF63  20                 	db	32
   391  00FF64  20                 	db	32
   392  00FF65  20                 	db	32
   393  00FF66  00                 	db	0
   394  00FF67                     STR_3:
   395  00FF67  50                 	db	80	;'P'
   396  00FF68  61                 	db	97	;'a'
   397  00FF69  69                 	db	105	;'i'
   398  00FF6A  72                 	db	114	;'r'
   399  00FF6B  69                 	db	105	;'i'
   400  00FF6C  6E                 	db	110	;'n'
   401  00FF6D  67                 	db	103	;'g'
   402  00FF6E  20                 	db	32
   403  00FF6F  20                 	db	32
   404  00FF70  20                 	db	32
   405  00FF71  20                 	db	32
   406  00FF72  20                 	db	32
   407  00FF73  20                 	db	32
   408  00FF74  20                 	db	32
   409  00FF75  20                 	db	32
   410  00FF76  20                 	db	32
   411  00FF77  00                 	db	0
   412  00FF78                     STR_4:
   413  00FF78  43                 	db	67	;'C'
   414  00FF79  6F                 	db	111	;'o'
   415  00FF7A  6E                 	db	110	;'n'
   416  00FF7B  6E                 	db	110	;'n'
   417  00FF7C  65                 	db	101	;'e'
   418  00FF7D  63                 	db	99	;'c'
   419  00FF7E  74                 	db	116	;'t'
   420  00FF7F  65                 	db	101	;'e'
   421  00FF80  64                 	db	100	;'d'
   422  00FF81  20                 	db	32
   423  00FF82  20                 	db	32
   424  00FF83  20                 	db	32
   425  00FF84  20                 	db	32
   426  00FF85  20                 	db	32
   427  00FF86  20                 	db	32
   428  00FF87  20                 	db	32
   429  00FF88  00                 	db	0
   430  00FF89                     STR_7:
   431  00FF89  4E                 	db	78	;'N'
   432  00FF8A  6F                 	db	111	;'o'
   433  00FF8B  20                 	db	32
   434  00FF8C  42                 	db	66	;'B'
   435  00FF8D  61                 	db	97	;'a'
   436  00FF8E  74                 	db	116	;'t'
   437  00FF8F  74                 	db	116	;'t'
   438  00FF90  65                 	db	101	;'e'
   439  00FF91  72                 	db	114	;'r'
   440  00FF92  79                 	db	121	;'y'
   441  00FF93  20                 	db	32
   442  00FF94  20                 	db	32
   443  00FF95  20                 	db	32
   444  00FF96  20                 	db	32
   445  00FF97  20                 	db	32
   446  00FF98  20                 	db	32
   447  00FF99  00                 	db	0
   448  00FF9A                     STR_5:
   449  00FF9A  4E                 	db	78	;'N'
   450  00FF9B  6F                 	db	111	;'o'
   451  00FF9C  74                 	db	116	;'t'
   452  00FF9D  20                 	db	32
   453  00FF9E  63                 	db	99	;'c'
   454  00FF9F  6F                 	db	111	;'o'
   455  00FFA0  6E                 	db	110	;'n'
   456  00FFA1  6E                 	db	110	;'n'
   457  00FFA2  65                 	db	101	;'e'
   458  00FFA3  63                 	db	99	;'c'
   459  00FFA4  74                 	db	116	;'t'
   460  00FFA5  65                 	db	101	;'e'
   461  00FFA6  64                 	db	100	;'d'
   462  00FFA7  20                 	db	32
   463  00FFA8  20                 	db	32
   464  00FFA9  20                 	db	32
   465  00FFAA  00                 	db	0
   466  00FFAB                     STR_1:
   467  00FFAB  41                 	db	65	;'A'
   468  00FFAC  4D                 	db	77	;'M'
   469  00FFAD  50                 	db	80	;'P'
   470  00FFAE  4C                 	db	76	;'L'
   471  00FFAF  49                 	db	73	;'I'
   472  00FFB0  46                 	db	70	;'F'
   473  00FFB1  49                 	db	73	;'I'
   474  00FFB2  45                 	db	69	;'E'
   475  00FFB3  52                 	db	82	;'R'
   476  00FFB4  20                 	db	32
   477  00FFB5  46                 	db	70	;'F'
   478  00FFB6  41                 	db	65	;'A'
   479  00FFB7  55                 	db	85	;'U'
   480  00FFB8  4C                 	db	76	;'L'
   481  00FFB9  54                 	db	84	;'T'
   482  00FFBA  21                 	db	33
   483  00FFBB  00                 	db	0
   484  00FFBC                     STR_2:
   485  00FFBC  4C                 	db	76	;'L'
   486  00FFBD  6F                 	db	111	;'o'
   487  00FFBE  77                 	db	119	;'w'
   488  00FFBF  20                 	db	32
   489  00FFC0  42                 	db	66	;'B'
   490  00FFC1  61                 	db	97	;'a'
   491  00FFC2  74                 	db	116	;'t'
   492  00FFC3  74                 	db	116	;'t'
   493  00FFC4  65                 	db	101	;'e'
   494  00FFC5  72                 	db	114	;'r'
   495  00FFC6  79                 	db	121	;'y'
   496  00FFC7  3A                 	db	58	;':'
   497  00FFC8  20                 	db	32
   498  00FFC9  4F                 	db	79	;'O'
   499  00FFCA  66                 	db	102	;'f'
   500  00FFCB  66                 	db	102	;'f'
   501  00FFCC  00                 	db	0
   502  00FFCD                     STR_8:
   503  00FFCD  42                 	db	66	;'B'
   504  00FFCE  61                 	db	97	;'a'
   505  00FFCF  74                 	db	116	;'t'
   506  00FFD0  74                 	db	116	;'t'
   507  00FFD1  65                 	db	101	;'e'
   508  00FFD2  72                 	db	114	;'r'
   509  00FFD3  79                 	db	121	;'y'
   510  00FFD4  20                 	db	32
   511  00FFD5  63                 	db	99	;'c'
   512  00FFD6  72                 	db	114	;'r'
   513  00FFD7  69                 	db	105	;'i'
   514  00FFD8  74                 	db	116	;'t'
   515  00FFD9  69                 	db	105	;'i'
   516  00FFDA  63                 	db	99	;'c'
   517  00FFDB  61                 	db	97	;'a'
   518  00FFDC  6C                 	db	108	;'l'
   519  00FFDD  00                 	db	0
   520  00FFDE                     STR_14:
   521  00FFDE  48                 	db	72	;'H'
   522  00FFDF  65                 	db	101	;'e'
   523  00FFE0  6C                 	db	108	;'l'
   524  00FFE1  6C                 	db	108	;'l'
   525  00FFE2  6F                 	db	111	;'o'
   526  00FFE3  20                 	db	32
   527  00FFE4  57                 	db	87	;'W'
   528  00FFE5  6F                 	db	111	;'o'
   529  00FFE6  72                 	db	114	;'r'
   530  00FFE7  6C                 	db	108	;'l'
   531  00FFE8  64                 	db	100	;'d'
   532  00FFE9  21                 	db	33
   533  00FFEA  00                 	db	0
   534  00FFEB                     STR_15:
   535  00FFEB  49                 	db	73	;'I'
   536  00FFEC  4E                 	db	78	;'N'
   537  00FFED  46                 	db	70	;'F'
   538  00FFEE  00                 	db	0
   539  00FFEF                     STR_19:
   540  00FFEF  4E                 	db	78	;'N'
   541  00FFF0  41                 	db	65	;'A'
   542  00FFF1  4E                 	db	78	;'N'
   543  00FFF2  00                 	db	0
   544  00FFF3                     STR_16:
   545  00FFF3  69                 	db	105	;'i'
   546  00FFF4  6E                 	db	110	;'n'
   547  00FFF5  66                 	db	102	;'f'
   548  00FFF6  00                 	db	0
   549  00FFF7                     STR_20:
   550  00FFF7  6E                 	db	110	;'n'
   551  00FFF8  61                 	db	97	;'a'
   552  00FFF9  6E                 	db	110	;'n'
   553  00FFFA  00                 	db	0
   554  00FFFB                     STR_23:
   555  00FFFB  6C                 	db	108	;'l'
   556  00FFFC  66                 	db	102	;'f'
   557  00FFFD  00                 	db	0
   558  0000                     
   559                           ; #config settings
   560  00FFFE  00                 	db	0	; dummy byte at the end
   561  0000                     
   562                           	psect	cinit
   563  014064                     __pcinit:
   564                           	opt callstack 0
   565  014064                     start_initialization:
   566                           	opt callstack 0
   567  014064                     __initialization:
   568                           	opt callstack 0
   569                           
   570                           ; Initialize objects allocated to BANK4 (4 bytes)
   571                           ; load TBLPTR registers with __pidataBANK4
   572  014064  0E7C               	movlw	low __pidataBANK4
   573  014066  6EF6               	movwf	tblptrl,c
   574  014068  0E44               	movlw	high __pidataBANK4
   575  01406A  6EF7               	movwf	tblptrh,c
   576  01406C  0E01               	movlw	low (__pidataBANK4 shr (0+16))
   577  01406E  6EF8               	movwf	tblptru,c
   578  014070  EE01  F0BD         	lfsr	0,__pdataBANK4
   579  014074  EE10 F004          	lfsr	1,4
   580  014078                     copy_data0:
   581  014078  0009               	tblrd		*+
   582  01407A  006F FFD7 FFEE     	movff	tablat,postinc0
   583  014080  50E5               	movf	postdec1,w,c
   584  014082  50E1               	movf	fsr1l,w,c
   585  014084  E1F9               	bnz	copy_data0
   586                           
   587                           ; Initialize objects allocated to BANK0 (10 bytes)
   588                           ; load TBLPTR registers with __pidataBANK0
   589  014086  0E72               	movlw	low __pidataBANK0
   590  014088  6EF6               	movwf	tblptrl,c
   591  01408A  0E44               	movlw	high __pidataBANK0
   592  01408C  6EF7               	movwf	tblptrh,c
   593  01408E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   594  014090  6EF8               	movwf	tblptru,c
   595  014092  EE00  F0E6         	lfsr	0,__pdataBANK0
   596  014096  EE10 F00A          	lfsr	1,10
   597  01409A                     copy_data1:
   598  01409A  0009               	tblrd		*+
   599  01409C  006F FFD7 FFEE     	movff	tablat,postinc0
   600  0140A2  50E5               	movf	postdec1,w,c
   601  0140A4  50E1               	movf	fsr1l,w,c
   602  0140A6  E1F9               	bnz	copy_data1
   603                           
   604                           ; Clear objects allocated to BANK4 (138 bytes)
   605  0140A8  EE01  F000         	lfsr	0,__pbssBANK4
   606  0140AC  0E8A               	movlw	138
   607  0140AE                     clear_0:
   608  0140AE  6AEE               	clrf	postinc0,c
   609  0140B0  06E8               	decf	wreg,f,c
   610  0140B2  E1FD               	bnz	clear_0
   611                           
   612                           ; Clear objects allocated to BANK0 (18 bytes)
   613  0140B4  EE00  F0D4         	lfsr	0,__pbssBANK0
   614  0140B8  0E12               	movlw	18
   615  0140BA                     clear_1:
   616  0140BA  6AEE               	clrf	postinc0,c
   617  0140BC  06E8               	decf	wreg,f,c
   618  0140BE  E1FD               	bnz	clear_1
   619  0140C0                     end_of_initialization:
   620                           	opt callstack 0
   621  0140C0                     __end_of__initialization:
   622                           	opt callstack 0
   623  0140C0  0100               	movlb	0
   624  0140C2  EF61  F097         	goto	_main	;jump to C main() function
   625                           
   626                           	psect	bssBANK0
   627  0000D4                     __pbssBANK0:
   628                           	opt callstack 0
   629  0000D4                     floorf@F524:
   630                           	opt callstack 0
   631  0000D4                     	ds	4
   632  0000D8                     ___fpclassifyf@F463:
   633                           	opt callstack 0
   634  0000D8                     	ds	4
   635  0000DC                     _nout:
   636                           	opt callstack 0
   637  0000DC                     	ds	2
   638  0000DE                     _width:
   639                           	opt callstack 0
   640  0000DE                     	ds	2
   641  0000E0                     _prec:
   642                           	opt callstack 0
   643  0000E0                     	ds	2
   644  0000E2                     _flags:
   645                           	opt callstack 0
   646  0000E2                     	ds	2
   647  0000E4                     uart_tasks@rxPos:
   648                           	opt callstack 0
   649  0000E4                     	ds	1
   650  0000E5                     _on:
   651                           	opt callstack 0
   652  0000E5                     	ds	1
   653                           
   654                           	psect	dataBANK0
   655  0000E6                     __pdataBANK0:
   656                           	opt callstack 0
   657  0000E6                     _ledBrightness:
   658                           	opt callstack 0
   659  0000E6                     	ds	4
   660  0000EA                     _bat_percent:
   661                           	opt callstack 0
   662  0000EA                     	ds	4
   663  0000EE                     _ackCmd:
   664                           	opt callstack 0
   665  0000EE                     	ds	2
   666                           
   667                           	psect	bssBANK4
   668  000400                     __pbssBANK4:
   669                           	opt callstack 0
   670  000400                     main_loop@last:
   671                           	opt callstack 0
   672  000400                     	ds	40
   673  000428                     main_loop@lastSum:
   674                           	opt callstack 0
   675  000428                     	ds	4
   676  00042C                     main_loop@sum:
   677                           	opt callstack 0
   678  00042C                     	ds	4
   679  000430                     main_loop@clipCount:
   680                           	opt callstack 0
   681  000430                     	ds	2
   682  000432                     main_loop@pos:
   683                           	opt callstack 0
   684  000432                     	ds	2
   685  000434                     main_loop@batCutoff:
   686                           	opt callstack 0
   687  000434                     	ds	1
   688  000435                     main_loop@ampFault:
   689                           	opt callstack 0
   690  000435                     	ds	1
   691  000436                     _connected:
   692                           	opt callstack 0
   693  000436                     	ds	1
   694  000437                     _streaming:
   695                           	opt callstack 0
   696  000437                     	ds	1
   697  000438                     _pairing:
   698                           	opt callstack 0
   699  000438                     	ds	1
   700  000439                     _volume_level:
   701                           	opt callstack 0
   702  000439                     	ds	1
   703  00043A                     _dbuf:
   704                           	opt callstack 0
   705  00043A                     	ds	80
   706                           
   707                           	psect	dataBANK4
   708  0004BD                     __pdataBANK4:
   709                           	opt callstack 0
   710  0004BD                     main_loop@counter:
   711                           	opt callstack 0
   712  0004BD                     	ds	4
   713                           
   714                           	psect	cstackBANK4
   715  00048A                     __pcstackBANK4:
   716                           	opt callstack 0
   717  00048A                     main_loop@batmsg:
   718                           	opt callstack 0
   719                           
   720                           ; 17 bytes @ 0x0
   721  00048A                     	ds	17
   722  00049B                     main_loop@lastAvg:
   723                           	opt callstack 0
   724                           
   725                           ; 4 bytes @ 0x11
   726  00049B                     	ds	4
   727  00049F                     _main_loop$320:
   728                           	opt callstack 0
   729                           
   730                           ; 4 bytes @ 0x15
   731  00049F                     	ds	4
   732  0004A3                     _main_loop$321:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x19
   736  0004A3                     	ds	4
   737  0004A7                     _main_loop$322:
   738                           	opt callstack 0
   739                           
   740                           ; 4 bytes @ 0x1D
   741  0004A7                     	ds	4
   742  0004AB                     _main_loop$343:
   743                           	opt callstack 0
   744                           
   745                           ; 4 bytes @ 0x21
   746  0004AB                     	ds	4
   747  0004AF                     main_loop@absRes:
   748                           	opt callstack 0
   749                           
   750                           ; 2 bytes @ 0x25
   751  0004AF                     	ds	2
   752  0004B1                     main_loop@res:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x27
   756  0004B1                     	ds	2
   757  0004B3                     main_loop@batlvl:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x29
   761  0004B3                     	ds	2
   762  0004B5                     main_loop@sample:
   763                           	opt callstack 0
   764                           
   765                           ; 4 bytes @ 0x2B
   766  0004B5                     	ds	4
   767  0004B9                     main_loop@rel:
   768                           	opt callstack 0
   769                           
   770                           ; 4 bytes @ 0x2F
   771  0004B9                     	ds	4
   772                           
   773                           	psect	cstackBANK3
   774  000300                     __pcstackBANK3:
   775                           	opt callstack 0
   776  000300                     uart_tasks@message:
   777                           	opt callstack 0
   778                           
   779                           ; 256 bytes @ 0x0
   780  000300                     	ds	256
   781                           
   782                           	psect	cstackBANK0
   783  000060                     __pcstackBANK0:
   784                           	opt callstack 0
   785  000060                     ?_efgtoa:
   786                           	opt callstack 0
   787  000060                     efgtoa@fp:
   788                           	opt callstack 0
   789  000060                     setLED@mod:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0x0
   793  000060                     	ds	1
   794  000061                     efgtoa@f:
   795                           	opt callstack 0
   796                           
   797                           ; 4 bytes @ 0x1
   798  000061                     	ds	3
   799  000064                     setLED@step:
   800                           	opt callstack 0
   801                           
   802                           ; 4 bytes @ 0x4
   803  000064                     	ds	1
   804  000065                     efgtoa@c:
   805                           	opt callstack 0
   806                           
   807                           ; 1 bytes @ 0x5
   808  000065                     	ds	1
   809  000066                     ??_efgtoa:
   810                           
   811                           ; 1 bytes @ 0x6
   812  000066                     	ds	2
   813  000068                     ??_setLED:
   814                           
   815                           ; 1 bytes @ 0x8
   816  000068                     	ds	3
   817  00006B                     efgtoa@ou:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0xB
   821  00006B                     	ds	4
   822  00006F                     _efgtoa$626:
   823                           	opt callstack 0
   824                           
   825                           ; 2 bytes @ 0xF
   826  00006F                     	ds	1
   827  000070                     setLED@r:
   828                           	opt callstack 0
   829                           
   830                           ; 4 bytes @ 0x10
   831  000070                     	ds	1
   832  000071                     _efgtoa$627:
   833                           	opt callstack 0
   834                           
   835                           ; 2 bytes @ 0x11
   836  000071                     	ds	2
   837  000073                     _efgtoa$632:
   838                           	opt callstack 0
   839                           
   840                           ; 2 bytes @ 0x13
   841  000073                     	ds	1
   842  000074                     _setLED$288:
   843                           	opt callstack 0
   844                           
   845                           ; 4 bytes @ 0x14
   846  000074                     	ds	1
   847  000075                     _efgtoa$636:
   848                           	opt callstack 0
   849                           
   850                           ; 2 bytes @ 0x15
   851  000075                     	ds	2
   852  000077                     _efgtoa$637:
   853                           	opt callstack 0
   854                           
   855                           ; 2 bytes @ 0x17
   856  000077                     	ds	1
   857  000078                     _setLED$289:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x18
   861  000078                     	ds	1
   862  000079                     _efgtoa$638:
   863                           	opt callstack 0
   864                           
   865                           ; 2 bytes @ 0x19
   866  000079                     	ds	2
   867  00007B                     efgtoa@t:
   868                           	opt callstack 0
   869                           
   870                           ; 2 bytes @ 0x1B
   871  00007B                     	ds	1
   872  00007C                     _setLED$294:
   873                           	opt callstack 0
   874                           
   875                           ; 4 bytes @ 0x1C
   876  00007C                     	ds	1
   877  00007D                     efgtoa@pp:
   878                           	opt callstack 0
   879                           
   880                           ; 2 bytes @ 0x1D
   881  00007D                     	ds	2
   882  00007F                     efgtoa@m:
   883                           	opt callstack 0
   884                           
   885                           ; 2 bytes @ 0x1F
   886  00007F                     	ds	1
   887  000080                     _setLED$295:
   888                           	opt callstack 0
   889                           
   890                           ; 4 bytes @ 0x20
   891  000080                     	ds	1
   892  000081                     efgtoa@ne:
   893                           	opt callstack 0
   894                           
   895                           ; 2 bytes @ 0x21
   896  000081                     	ds	2
   897  000083                     efgtoa@d:
   898                           	opt callstack 0
   899                           
   900                           ; 2 bytes @ 0x23
   901  000083                     	ds	1
   902  000084                     setLED@trueMod:
   903                           	opt callstack 0
   904                           
   905                           ; 2 bytes @ 0x24
   906  000084                     	ds	1
   907  000085                     efgtoa@sign:
   908                           	opt callstack 0
   909                           
   910                           ; 2 bytes @ 0x25
   911  000085                     	ds	1
   912  000086                     setLED@g:
   913                           	opt callstack 0
   914                           
   915                           ; 4 bytes @ 0x26
   916  000086                     	ds	1
   917  000087                     efgtoa@p:
   918                           	opt callstack 0
   919                           
   920                           ; 2 bytes @ 0x27
   921  000087                     	ds	2
   922  000089                     efgtoa@nmode:
   923                           	opt callstack 0
   924                           
   925                           ; 1 bytes @ 0x29
   926  000089                     	ds	1
   927  00008A                     efgtoa@w:
   928                           	opt callstack 0
   929  00008A                     setLED@b:
   930                           	opt callstack 0
   931                           
   932                           ; 4 bytes @ 0x2A
   933  00008A                     	ds	2
   934  00008C                     efgtoa@mode:
   935                           	opt callstack 0
   936                           
   937                           ; 1 bytes @ 0x2C
   938  00008C                     	ds	1
   939  00008D                     efgtoa@h:
   940                           	opt callstack 0
   941                           
   942                           ; 4 bytes @ 0x2D
   943  00008D                     	ds	1
   944  00008E                     setLED@sg:
   945                           	opt callstack 0
   946                           
   947                           ; 4 bytes @ 0x2E
   948  00008E                     	ds	3
   949  000091                     efgtoa@l:
   950                           	opt callstack 0
   951                           
   952                           ; 4 bytes @ 0x31
   953  000091                     	ds	1
   954  000092                     setLED@sb:
   955                           	opt callstack 0
   956                           
   957                           ; 4 bytes @ 0x32
   958  000092                     	ds	3
   959  000095                     efgtoa@i:
   960                           	opt callstack 0
   961                           
   962                           ; 2 bytes @ 0x35
   963  000095                     	ds	1
   964  000096                     setLED@sr:
   965                           	opt callstack 0
   966                           
   967                           ; 4 bytes @ 0x36
   968  000096                     	ds	1
   969  000097                     efgtoa@g:
   970                           	opt callstack 0
   971                           
   972                           ; 4 bytes @ 0x37
   973  000097                     	ds	3
   974  00009A                     setLED@shift:
   975                           	opt callstack 0
   976                           
   977                           ; 4 bytes @ 0x3A
   978  00009A                     	ds	1
   979  00009B                     efgtoa@e:
   980                           	opt callstack 0
   981                           
   982                           ; 2 bytes @ 0x3B
   983  00009B                     	ds	2
   984  00009D                     efgtoa@n:
   985                           	opt callstack 0
   986                           
   987                           ; 2 bytes @ 0x3D
   988  00009D                     	ds	2
   989  00009F                     efgtoa@u:
   990                           	opt callstack 0
   991                           
   992                           ; 4 bytes @ 0x3F
   993  00009F                     	ds	4
   994  0000A3                     ??_vfpfcnvrt:
   995                           
   996                           ; 1 bytes @ 0x43
   997  0000A3                     	ds	4
   998  0000A7                     _vfpfcnvrt$652:
   999                           	opt callstack 0
  1000                           
  1001                           ; 2 bytes @ 0x47
  1002  0000A7                     	ds	2
  1003  0000A9                     _vfpfcnvrt$653:
  1004                           	opt callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x49
  1007  0000A9                     	ds	2
  1008  0000AB                     _vfpfcnvrt$657:
  1009                           	opt callstack 0
  1010                           
  1011                           ; 2 bytes @ 0x4B
  1012  0000AB                     	ds	2
  1013  0000AD                     vfpfcnvrt@ct:
  1014                           	opt callstack 0
  1015                           
  1016                           ; 3 bytes @ 0x4D
  1017  0000AD                     	ds	3
  1018  0000B0                     vfpfcnvrt@f:
  1019                           	opt callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x50
  1022  0000B0                     	ds	4
  1023  0000B4                     vfpfcnvrt@c:
  1024                           	opt callstack 0
  1025                           
  1026                           ; 1 bytes @ 0x54
  1027  0000B4                     	ds	1
  1028  0000B5                     ?_vfprintf:
  1029                           	opt callstack 0
  1030  0000B5                     vfprintf@fp:
  1031                           	opt callstack 0
  1032                           
  1033                           ; 1 bytes @ 0x55
  1034  0000B5                     	ds	1
  1035  0000B6                     vfprintf@fmt:
  1036                           	opt callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x56
  1039  0000B6                     	ds	2
  1040  0000B8                     vfprintf@ap:
  1041                           	opt callstack 0
  1042                           
  1043                           ; 1 bytes @ 0x58
  1044  0000B8                     	ds	1
  1045  0000B9                     vfprintf@cfmt:
  1046                           	opt callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x59
  1049  0000B9                     	ds	2
  1050  0000BB                     ?_sprintf:
  1051                           	opt callstack 0
  1052  0000BB                     sprintf@s:
  1053                           	opt callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x5B
  1056  0000BB                     	ds	2
  1057  0000BD                     sprintf@fmt:
  1058                           	opt callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x5D
  1061  0000BD                     	ds	8
  1062  0000C5                     sprintf@ap:
  1063                           	opt callstack 0
  1064                           
  1065                           ; 1 bytes @ 0x65
  1066  0000C5                     	ds	1
  1067  0000C6                     sprintf@f:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 6 bytes @ 0x66
  1071  0000C6                     	ds	6
  1072  0000CC                     ??_main_loop:
  1073                           
  1074                           ; 1 bytes @ 0x6C
  1075  0000CC                     	ds	6
  1076  0000D2                     ??_main:
  1077                           
  1078                           ; 1 bytes @ 0x72
  1079  0000D2                     	ds	2
  1080                           
  1081                           	psect	cstackCOMRAM
  1082  000001                     __pcstackCOMRAM:
  1083                           	opt callstack 0
  1084  000001                     ?_strlen:
  1085                           	opt callstack 0
  1086  000001                     ?___fpclassifyf:
  1087                           	opt callstack 0
  1088  000001                     ?_isupper:
  1089                           	opt callstack 0
  1090  000001                     ?_isdigit:
  1091                           	opt callstack 0
  1092  000001                     ?_strncmp:
  1093                           	opt callstack 0
  1094  000001                     ?_isspace:
  1095                           	opt callstack 0
  1096  000001                     ?___wmul:
  1097                           	opt callstack 0
  1098  000001                     ?___awdiv:
  1099                           	opt callstack 0
  1100  000001                     ?___awmod:
  1101                           	opt callstack 0
  1102  000001                     ?___lmul:
  1103                           	opt callstack 0
  1104  000001                     ?___lldiv:
  1105                           	opt callstack 0
  1106  000001                     ?___almod:
  1107                           	opt callstack 0
  1108  000001                     ?___flneg:
  1109                           	opt callstack 0
  1110  000001                     ?___fltol:
  1111                           	opt callstack 0
  1112  000001                     ?___xxtofl:
  1113                           	opt callstack 0
  1114  000001                     lcd_write@data:
  1115                           	opt callstack 0
  1116  000001                     strncmp@_l:
  1117                           	opt callstack 0
  1118  000001                     ___wmul@multiplier:
  1119                           	opt callstack 0
  1120  000001                     ___awdiv@dividend:
  1121                           	opt callstack 0
  1122  000001                     ___awmod@dividend:
  1123                           	opt callstack 0
  1124  000001                     isdigit@c:
  1125                           	opt callstack 0
  1126  000001                     isspace@c:
  1127                           	opt callstack 0
  1128  000001                     isupper@c:
  1129                           	opt callstack 0
  1130  000001                     memcpy@d1:
  1131                           	opt callstack 0
  1132  000001                     fputc@c:
  1133                           	opt callstack 0
  1134  000001                     strcpy@dest:
  1135                           	opt callstack 0
  1136  000001                     strlen@s:
  1137                           	opt callstack 0
  1138  000001                     ___lmul@multiplier:
  1139                           	opt callstack 0
  1140  000001                     ___lldiv@dividend:
  1141                           	opt callstack 0
  1142  000001                     ___almod@dividend:
  1143                           	opt callstack 0
  1144  000001                     ___fleq@ff1:
  1145                           	opt callstack 0
  1146  000001                     ___flneg@f1:
  1147                           	opt callstack 0
  1148  000001                     ___fltol@f1:
  1149                           	opt callstack 0
  1150  000001                     ___xxtofl@val:
  1151                           	opt callstack 0
  1152  000001                     ___fpclassifyf@x:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 4 bytes @ 0x0
  1156  000001                     	ds	1
  1157  000002                     lcd_write@longdelay:
  1158                           	opt callstack 0
  1159  000002                     strncmp@_r:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x1
  1163  000002                     	ds	1
  1164  000003                     ??_isupper:
  1165  000003                     ??_isdigit:
  1166  000003                     ??_isspace:
  1167  000003                     ??_lcd_write:
  1168  000003                     fputc@fp:
  1169                           	opt callstack 0
  1170  000003                     ___wmul@multiplicand:
  1171                           	opt callstack 0
  1172  000003                     ___awdiv@divisor:
  1173                           	opt callstack 0
  1174  000003                     ___awmod@divisor:
  1175                           	opt callstack 0
  1176  000003                     memcpy@s1:
  1177                           	opt callstack 0
  1178  000003                     strcpy@src:
  1179                           	opt callstack 0
  1180  000003                     strlen@a:
  1181                           	opt callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x2
  1184  000003                     	ds	1
  1185  000004                     ??_fputc:
  1186  000004                     lcd_write@rs:
  1187                           	opt callstack 0
  1188  000004                     strncmp@n:
  1189                           	opt callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3
  1192  000004                     	ds	1
  1193  000005                     ??___fpclassifyf:
  1194  000005                     ??_strcpy:
  1195  000005                     ??___fltol:
  1196  000005                     ??___xxtofl:
  1197  000005                     lcd_init@shift:
  1198                           	opt callstack 0
  1199  000005                     lcd_set_data_addr@addr:
  1200                           	opt callstack 0
  1201  000005                     ___awdiv@counter:
  1202                           	opt callstack 0
  1203  000005                     ___awmod@counter:
  1204                           	opt callstack 0
  1205  000005                     lcd_print@string:
  1206                           	opt callstack 0
  1207  000005                     ___wmul@product:
  1208                           	opt callstack 0
  1209  000005                     memcpy@n:
  1210                           	opt callstack 0
  1211  000005                     ___lmul@multiplicand:
  1212                           	opt callstack 0
  1213  000005                     ___lldiv@divisor:
  1214                           	opt callstack 0
  1215  000005                     ___almod@divisor:
  1216                           	opt callstack 0
  1217  000005                     ___fleq@ff2:
  1218                           	opt callstack 0
  1219                           
  1220                           ; 4 bytes @ 0x4
  1221  000005                     	ds	1
  1222  000006                     ??_strncmp:
  1223  000006                     lcd_init@cursor:
  1224                           	opt callstack 0
  1225  000006                     ___awdiv@sign:
  1226                           	opt callstack 0
  1227  000006                     ___awmod@sign:
  1228                           	opt callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x5
  1231  000006                     	ds	1
  1232  000007                     ??_lcd_print:
  1233  000007                     ?_tolower:
  1234                           	opt callstack 0
  1235  000007                     lcd_init@cursorblink:
  1236                           	opt callstack 0
  1237  000007                     _isspace$1159:
  1238                           	opt callstack 0
  1239  000007                     ___awdiv@quotient:
  1240                           	opt callstack 0
  1241  000007                     memcpy@d:
  1242                           	opt callstack 0
  1243  000007                     strcpy@s:
  1244                           	opt callstack 0
  1245  000007                     strncmp@r:
  1246                           	opt callstack 0
  1247  000007                     tolower@c:
  1248                           	opt callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x6
  1251  000007                     	ds	1
  1252  000008                     ?_atoi:
  1253                           	opt callstack 0
  1254  000008                     lcd_init@on:
  1255                           	opt callstack 0
  1256  000008                     atoi@s:
  1257                           	opt callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x7
  1260  000008                     	ds	1
  1261  000009                     ??_lcd_init:
  1262  000009                     ??_tolower:
  1263  000009                     ??___fleq:
  1264  000009                     lcd_print@i:
  1265                           	opt callstack 0
  1266  000009                     ___almod@counter:
  1267                           	opt callstack 0
  1268  000009                     ___fltol@sign1:
  1269                           	opt callstack 0
  1270  000009                     ___xxtofl@sign:
  1271                           	opt callstack 0
  1272  000009                     strncmp@l:
  1273                           	opt callstack 0
  1274  000009                     ___fpclassifyf@e:
  1275                           	opt callstack 0
  1276  000009                     memcpy@s:
  1277                           	opt callstack 0
  1278  000009                     fputs@s:
  1279                           	opt callstack 0
  1280  000009                     strcpy@d:
  1281                           	opt callstack 0
  1282  000009                     ___lmul@product:
  1283                           	opt callstack 0
  1284  000009                     ___lldiv@quotient:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x8
  1288  000009                     	ds	1
  1289  00000A                     ??_atoi:
  1290  00000A                     lcd_init@inc:
  1291                           	opt callstack 0
  1292  00000A                     ___almod@sign:
  1293                           	opt callstack 0
  1294  00000A                     ___fltol@exp1:
  1295                           	opt callstack 0
  1296  00000A                     ___xxtofl@exp:
  1297                           	opt callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x9
  1300  00000A                     	ds	1
  1301  00000B                     memcpy@tmp:
  1302                           	opt callstack 0
  1303  00000B                     fputs@fp:
  1304                           	opt callstack 0
  1305  00000B                     ___xxtofl@arg:
  1306                           	opt callstack 0
  1307  00000B                     ___fpclassifyf@u:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 4 bytes @ 0xA
  1311  00000B                     	ds	1
  1312  00000C                     fputs@c:
  1313                           	opt callstack 0
  1314  00000C                     uart_send@buf:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 2 bytes @ 0xB
  1318  00000C                     	ds	1
  1319  00000D                     ?___aldiv:
  1320                           	opt callstack 0
  1321  00000D                     ___lldiv@counter:
  1322                           	opt callstack 0
  1323  00000D                     fputs@i:
  1324                           	opt callstack 0
  1325  00000D                     _tolower$1251:
  1326                           	opt callstack 0
  1327  00000D                     ___aldiv@dividend:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 4 bytes @ 0xC
  1331  00000D                     	ds	1
  1332  00000E                     ?___llmod:
  1333                           	opt callstack 0
  1334  00000E                     uart_send@len:
  1335                           	opt callstack 0
  1336  00000E                     atoi@neg:
  1337                           	opt callstack 0
  1338  00000E                     ___llmod@dividend:
  1339                           	opt callstack 0
  1340                           
  1341                           ; 4 bytes @ 0xD
  1342  00000E                     	ds	1
  1343  00000F                     ??_uart_send:
  1344  00000F                     ?_pad:
  1345                           	opt callstack 0
  1346  00000F                     ?___fladd:
  1347                           	opt callstack 0
  1348  00000F                     pad@fp:
  1349                           	opt callstack 0
  1350  00000F                     ___fladd@b:
  1351                           	opt callstack 0
  1352                           
  1353                           ; 4 bytes @ 0xE
  1354  00000F                     	ds	1
  1355  000010                     pad@buf:
  1356                           	opt callstack 0
  1357  000010                     _atoi$1128:
  1358                           	opt callstack 0
  1359                           
  1360                           ; 2 bytes @ 0xF
  1361  000010                     	ds	1
  1362  000011                     handle_message@message:
  1363                           	opt callstack 0
  1364  000011                     ___aldiv@divisor:
  1365                           	opt callstack 0
  1366                           
  1367                           ; 4 bytes @ 0x10
  1368  000011                     	ds	1
  1369  000012                     pad@p:
  1370                           	opt callstack 0
  1371  000012                     _atoi$1130:
  1372                           	opt callstack 0
  1373  000012                     ___llmod@divisor:
  1374                           	opt callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x11
  1377  000012                     	ds	1
  1378  000013                     handle_message@len:
  1379                           	opt callstack 0
  1380  000013                     ___fladd@a:
  1381                           	opt callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x12
  1384  000013                     	ds	1
  1385  000014                     ??_pad:
  1386  000014                     _atoi$1129:
  1387                           	opt callstack 0
  1388                           
  1389                           ; 1 bytes @ 0x13
  1390  000014                     	ds	1
  1391  000015                     ??_uart_tasks:
  1392  000015                     ___aldiv@counter:
  1393                           	opt callstack 0
  1394  000015                     pad@i:
  1395                           	opt callstack 0
  1396  000015                     atoi@n:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 2 bytes @ 0x14
  1400  000015                     	ds	1
  1401  000016                     ___aldiv@sign:
  1402                           	opt callstack 0
  1403  000016                     ___llmod@counter:
  1404                           	opt callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x15
  1407  000016                     	ds	1
  1408  000017                     ??___fladd:
  1409  000017                     pad@w:
  1410                           	opt callstack 0
  1411  000017                     ___aldiv@quotient:
  1412                           	opt callstack 0
  1413                           
  1414                           ; 4 bytes @ 0x16
  1415  000017                     	ds	2
  1416  000019                     uart_tasks@rxLen:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 1 bytes @ 0x18
  1420  000019                     	ds	1
  1421  00001A                     uart_tasks@rawMsgOffset:
  1422                           	opt callstack 0
  1423                           
  1424                           ; 1 bytes @ 0x19
  1425  00001A                     	ds	1
  1426  00001B                     uart_tasks@checksum:
  1427                           	opt callstack 0
  1428  00001B                     ___fladd@signs:
  1429                           	opt callstack 0
  1430  00001B                     updateButtonLight@step:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 4 bytes @ 0x1A
  1434  00001B                     	ds	1
  1435  00001C                     uart_tasks@msgOffset:
  1436                           	opt callstack 0
  1437  00001C                     ___fladd@aexp:
  1438                           	opt callstack 0
  1439                           
  1440                           ; 1 bytes @ 0x1B
  1441  00001C                     	ds	1
  1442  00001D                     uart_tasks@posInRawMsg:
  1443                           	opt callstack 0
  1444  00001D                     ___fladd@bexp:
  1445                           	opt callstack 0
  1446                           
  1447                           ; 1 bytes @ 0x1C
  1448  00001D                     	ds	1
  1449  00001E                     uart_tasks@i:
  1450                           	opt callstack 0
  1451  00001E                     ___fladd@grs:
  1452                           	opt callstack 0
  1453                           
  1454                           ; 1 bytes @ 0x1D
  1455  00001E                     	ds	1
  1456  00001F                     ??_updateButtonLight:
  1457  00001F                     ?___fldiv:
  1458                           	opt callstack 0
  1459  00001F                     uart_tasks@bytePos:
  1460                           	opt callstack 0
  1461  00001F                     ___fldiv@b:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 4 bytes @ 0x1E
  1465  00001F                     	ds	1
  1466  000020                     uart_tasks@intPos:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 1 bytes @ 0x1F
  1470  000020                     	ds	1
  1471  000021                     uart_tasks@msgLen:
  1472                           	opt callstack 0
  1473                           
  1474                           ; 1 bytes @ 0x20
  1475  000021                     	ds	1
  1476  000022                     uart_tasks@zeroByte:
  1477                           	opt callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x21
  1480  000022                     	ds	1
  1481  000023                     uart_tasks@val:
  1482                           	opt callstack 0
  1483  000023                     updateButtonLight@dch:
  1484                           	opt callstack 0
  1485  000023                     ___fldiv@a:
  1486                           	opt callstack 0
  1487                           
  1488                           ; 4 bytes @ 0x22
  1489  000023                     	ds	4
  1490  000027                     ??___fldiv:
  1491                           
  1492                           ; 1 bytes @ 0x26
  1493  000027                     	ds	4
  1494  00002B                     ___fldiv@rem:
  1495                           	opt callstack 0
  1496                           
  1497                           ; 4 bytes @ 0x2A
  1498  00002B                     	ds	4
  1499  00002F                     ___fldiv@sign:
  1500                           	opt callstack 0
  1501                           
  1502                           ; 1 bytes @ 0x2E
  1503  00002F                     	ds	1
  1504  000030                     ___fldiv@new_exp:
  1505                           	opt callstack 0
  1506                           
  1507                           ; 2 bytes @ 0x2F
  1508  000030                     	ds	2
  1509  000032                     ___fldiv@grs:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x31
  1513  000032                     	ds	4
  1514  000036                     ___fldiv@bexp:
  1515                           	opt callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x35
  1518  000036                     	ds	1
  1519  000037                     ___fldiv@aexp:
  1520                           	opt callstack 0
  1521                           
  1522                           ; 1 bytes @ 0x36
  1523  000037                     	ds	1
  1524  000038                     ?_floorf:
  1525                           	opt callstack 0
  1526  000038                     ?___flmul:
  1527                           	opt callstack 0
  1528  000038                     ___flmul@b:
  1529                           	opt callstack 0
  1530  000038                     floorf@x:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 4 bytes @ 0x37
  1534  000038                     	ds	4
  1535  00003C                     ??_floorf:
  1536  00003C                     ___flmul@a:
  1537                           	opt callstack 0
  1538                           
  1539                           ; 4 bytes @ 0x3B
  1540  00003C                     	ds	4
  1541  000040                     ??___flmul:
  1542                           
  1543                           ; 1 bytes @ 0x3F
  1544  000040                     	ds	2
  1545  000042                     floorf@m:
  1546                           	opt callstack 0
  1547                           
  1548                           ; 4 bytes @ 0x41
  1549  000042                     	ds	2
  1550  000044                     ___flmul@sign:
  1551                           	opt callstack 0
  1552                           
  1553                           ; 1 bytes @ 0x43
  1554  000044                     	ds	1
  1555  000045                     ___flmul@aexp:
  1556                           	opt callstack 0
  1557                           
  1558                           ; 1 bytes @ 0x44
  1559  000045                     	ds	1
  1560  000046                     floorf@e:
  1561                           	opt callstack 0
  1562  000046                     ___flmul@grs:
  1563                           	opt callstack 0
  1564                           
  1565                           ; 4 bytes @ 0x45
  1566  000046                     	ds	2
  1567  000048                     floorf@u:
  1568                           	opt callstack 0
  1569                           
  1570                           ; 4 bytes @ 0x47
  1571  000048                     	ds	2
  1572  00004A                     ___flmul@bexp:
  1573                           	opt callstack 0
  1574                           
  1575                           ; 1 bytes @ 0x49
  1576  00004A                     	ds	1
  1577  00004B                     ___flmul@prod:
  1578                           	opt callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x4A
  1581  00004B                     	ds	4
  1582  00004F                     ___flmul@temp:
  1583                           	opt callstack 0
  1584                           
  1585                           ; 2 bytes @ 0x4E
  1586  00004F                     	ds	2
  1587  000051                     ?___flsub:
  1588                           	opt callstack 0
  1589  000051                     ___flge@ff1:
  1590                           	opt callstack 0
  1591  000051                     ___flsub@b:
  1592                           	opt callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x50
  1595  000051                     	ds	4
  1596  000055                     ___flge@ff2:
  1597                           	opt callstack 0
  1598  000055                     ___flsub@a:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 4 bytes @ 0x54
  1602  000055                     	ds	4
  1603  000059                     ??___flge:
  1604                           
  1605                           ; 1 bytes @ 0x58
  1606  000059                     	ds	4
  1607  00005D                     ?_vfpfcnvrt:
  1608                           	opt callstack 0
  1609  00005D                     vfpfcnvrt@fp:
  1610                           	opt callstack 0
  1611                           
  1612                           ; 1 bytes @ 0x5C
  1613  00005D                     	ds	1
  1614  00005E                     vfpfcnvrt@fmt:
  1615                           	opt callstack 0
  1616                           
  1617                           ; 1 bytes @ 0x5D
  1618  00005E                     	ds	1
  1619  00005F                     vfpfcnvrt@ap:
  1620                           	opt callstack 0
  1621                           
  1622                           ; 1 bytes @ 0x5E
  1623  00005F                     	ds	1
  1624  000060                     
  1625                           ; 1 bytes @ 0x5F
  1626 ;;
  1627 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1628 ;;
  1629 ;; *************** function _main *****************
  1630 ;; Defined at:
  1631 ;;		line 282 in file "main.c"
  1632 ;; Parameters:    Size  Location     Type
  1633 ;;		None
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;		None
  1636 ;; Return value:  Size  Location     Type
  1637 ;;                  1    wreg      void 
  1638 ;; Registers used:
  1639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1640 ;; Tracked objects:
  1641 ;;		On entry : 0/0
  1642 ;;		On exit  : 0/0
  1643 ;;		Unchanged: 0/0
  1644 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1647 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1648 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1649 ;;Total ram usage:        2 bytes
  1650 ;; Hardware stack levels required when called:    9
  1651 ;; This function calls:
  1652 ;;		_lcd_init
  1653 ;;		_lcd_print
  1654 ;;		_main_loop
  1655 ;;		_uart_init
  1656 ;; This function is called by:
  1657 ;;		Startup code after reset
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           	psect	text0
  1662  012EC2                     __ptext0:
  1663                           	opt callstack 0
  1664  012EC2                     _main:
  1665                           	opt callstack 22
  1666                           
  1667                           ;main.c: 283:     TRISA = 0b00000000;
  1668                           
  1669                           ;incstack = 0
  1670  012EC2  0E00               	movlw	0
  1671  012EC4  6EC2               	movwf	194,c	;volatile
  1672                           
  1673                           ;main.c: 284:     PORTA = 0b00000000;
  1674  012EC6  0E00               	movlw	0
  1675  012EC8  6ECA               	movwf	202,c	;volatile
  1676                           
  1677                           ;main.c: 285:     ANSELA = 0b00000000;
  1678  012ECA  0E00               	movlw	0
  1679  012ECC  013A               	movlb	58	; () banked
  1680  012ECE  6F40               	movwf	64,b	;volatile
  1681                           
  1682                           ;main.c: 286:     WPUA = 0b00000000;
  1683  012ED0  0E00               	movlw	0
  1684  012ED2  6F41               	movwf	65,b	;volatile
  1685                           
  1686                           ; BSR set to: 58
  1687                           ;main.c: 287:     INLVLA = 0b11111111;
  1688  012ED4  6944               	setf	68,b	;volatile
  1689                           
  1690                           ; BSR set to: 58
  1691                           ;main.c: 288:     SLRCONA = 0b11111111;
  1692  012ED6  6943               	setf	67,b	;volatile
  1693                           
  1694                           ;main.c: 289:     ODCONA = 0b00000000;
  1695  012ED8  0E00               	movlw	0
  1696  012EDA  6F42               	movwf	66,b	;volatile
  1697                           
  1698                           ;main.c: 291:     TRISB = 0b11001110;
  1699  012EDC  0ECE               	movlw	206
  1700  012EDE  6EC3               	movwf	195,c	;volatile
  1701                           
  1702                           ;main.c: 292:     PORTB = 0b00010000;
  1703  012EE0  0E10               	movlw	16
  1704  012EE2  6ECB               	movwf	203,c	;volatile
  1705                           
  1706                           ;main.c: 293:     ANSELB = 0b00000000;
  1707  012EE4  0E00               	movlw	0
  1708  012EE6  6F50               	movwf	80,b	;volatile
  1709                           
  1710                           ;main.c: 294:     WPUB = 0b11000000;
  1711  012EE8  0EC0               	movlw	192
  1712  012EEA  6F51               	movwf	81,b	;volatile
  1713                           
  1714                           ; BSR set to: 58
  1715                           ;main.c: 295:     INLVLB = 0b11111111;
  1716  012EEC  6954               	setf	84,b	;volatile
  1717                           
  1718                           ; BSR set to: 58
  1719                           ;main.c: 296:     SLRCONB = 0b11111111;
  1720  012EEE  6953               	setf	83,b	;volatile
  1721                           
  1722                           ;main.c: 297:     ODCONB = 0b00000000;
  1723  012EF0  0E00               	movlw	0
  1724  012EF2  6F52               	movwf	82,b	;volatile
  1725                           
  1726                           ;main.c: 299:     TRISC = 0b01101110;
  1727  012EF4  0E6E               	movlw	110
  1728  012EF6  6EC4               	movwf	196,c	;volatile
  1729                           
  1730                           ;main.c: 300:     PORTC = 0b00000000;
  1731  012EF8  0E00               	movlw	0
  1732  012EFA  6ECC               	movwf	204,c	;volatile
  1733                           
  1734                           ;main.c: 301:     ANSELC = 0b01100000;
  1735  012EFC  0E60               	movlw	96
  1736  012EFE  6F60               	movwf	96,b	;volatile
  1737                           
  1738                           ;main.c: 302:     WPUC = 0b00001110;
  1739  012F00  0E0E               	movlw	14
  1740  012F02  6F61               	movwf	97,b	;volatile
  1741                           
  1742                           ; BSR set to: 58
  1743                           ;main.c: 303:     INLVLC = 0b11111111;
  1744  012F04  6964               	setf	100,b	;volatile
  1745                           
  1746                           ; BSR set to: 58
  1747                           ;main.c: 304:     SLRCONC = 0b11111111;
  1748  012F06  6963               	setf	99,b	;volatile
  1749                           
  1750                           ;main.c: 305:     ODCONC = 0b00000000;
  1751  012F08  0E00               	movlw	0
  1752  012F0A  6F62               	movwf	98,b	;volatile
  1753                           
  1754                           ;main.c: 307:     TRISD = 0b00001111;
  1755  012F0C  0E0F               	movlw	15
  1756  012F0E  6EC5               	movwf	197,c	;volatile
  1757                           
  1758                           ;main.c: 308:     PORTD = 0b00000000;
  1759  012F10  0E00               	movlw	0
  1760  012F12  6ECD               	movwf	205,c	;volatile
  1761                           
  1762                           ;main.c: 309:     ANSELD = 0b00001000;
  1763  012F14  0E08               	movlw	8
  1764  012F16  6F70               	movwf	112,b	;volatile
  1765                           
  1766                           ;main.c: 310:     WPUD = 0b00000111;
  1767  012F18  0E07               	movlw	7
  1768  012F1A  6F71               	movwf	113,b	;volatile
  1769                           
  1770                           ; BSR set to: 58
  1771                           ;main.c: 311:     INLVLD = 0b11111111;
  1772  012F1C  6974               	setf	116,b	;volatile
  1773                           
  1774                           ; BSR set to: 58
  1775                           ;main.c: 312:     SLRCOND = 0b11111111;
  1776  012F1E  6973               	setf	115,b	;volatile
  1777                           
  1778                           ;main.c: 313:     ODCOND = 0b00000000;
  1779  012F20  0E00               	movlw	0
  1780  012F22  6F72               	movwf	114,b	;volatile
  1781                           
  1782                           ;main.c: 315:     TRISE = 0b11111000;
  1783  012F24  0EF8               	movlw	248
  1784  012F26  6EC6               	movwf	198,c	;volatile
  1785                           
  1786                           ;main.c: 316:     PORTE = 0b00000100;
  1787  012F28  0E04               	movlw	4
  1788  012F2A  6ECE               	movwf	206,c	;volatile
  1789                           
  1790                           ;main.c: 317:     ANSELE = 0b11110000;
  1791  012F2C  0EF0               	movlw	240
  1792  012F2E  6F80               	movwf	128,b	;volatile
  1793                           
  1794                           ;main.c: 318:     WPUE = 0b00001000;
  1795  012F30  0E08               	movlw	8
  1796  012F32  6F81               	movwf	129,b	;volatile
  1797                           
  1798                           ; BSR set to: 58
  1799                           ;main.c: 319:     INLVLE = 0b11111111;
  1800  012F34  6984               	setf	132,b	;volatile
  1801                           
  1802                           ; BSR set to: 58
  1803                           ;main.c: 320:     SLRCONE = 0b11111111;
  1804  012F36  6983               	setf	131,b	;volatile
  1805                           
  1806                           ;main.c: 321:     ODCONE = 0b00000000;
  1807  012F38  0E00               	movlw	0
  1808  012F3A  6F82               	movwf	130,b	;volatile
  1809                           
  1810                           ;main.c: 323:     PMD0 = 0b01111111;
  1811  012F3C  0E7F               	movlw	127
  1812  012F3E  0139               	movlb	57	; () banked
  1813  012F40  6FC0               	movwf	192,b	;volatile
  1814                           
  1815                           ;main.c: 324:     PMD1 = 0b11111011;
  1816  012F42  0EFB               	movlw	251
  1817  012F44  6FC1               	movwf	193,b	;volatile
  1818                           
  1819                           ;main.c: 325:     PMD2 = 0b01000111;
  1820  012F46  0E47               	movlw	71
  1821  012F48  6FC2               	movwf	194,b	;volatile
  1822                           
  1823                           ;main.c: 326:     PMD3 = 0b01010001;
  1824  012F4A  0E51               	movlw	81
  1825  012F4C  6FC3               	movwf	195,b	;volatile
  1826                           
  1827                           ;main.c: 327:     PMD4 = 0b11100000;
  1828  012F4E  0EE0               	movlw	224
  1829  012F50  6FC4               	movwf	196,b	;volatile
  1830                           
  1831                           ;main.c: 328:     PMD5 = 0b00100111;
  1832  012F52  0E27               	movlw	39
  1833  012F54  6FC5               	movwf	197,b	;volatile
  1834                           
  1835                           ;main.c: 329:     PMD6 = 0b00111111;
  1836  012F56  0E3F               	movlw	63
  1837  012F58  6FC6               	movwf	198,b	;volatile
  1838                           
  1839                           ;main.c: 330:     PMD7 = 0b00000000;
  1840  012F5A  0E00               	movlw	0
  1841  012F5C  6FC7               	movwf	199,b	;volatile
  1842                           
  1843                           ;main.c: 332:     ADCON0 = 0b10000100;
  1844  012F5E  0E84               	movlw	132
  1845  012F60  013E               	movlb	62	; () banked
  1846  012F62  6FF8               	movwf	248,b	;volatile
  1847                           
  1848                           ;main.c: 333:     ADCON1 = 0b00000000;
  1849  012F64  0E00               	movlw	0
  1850  012F66  6FF9               	movwf	249,b	;volatile
  1851                           
  1852                           ;main.c: 334:     ADCON2 = 0b00000000;
  1853  012F68  0E00               	movlw	0
  1854  012F6A  6FFA               	movwf	250,b	;volatile
  1855                           
  1856                           ;main.c: 335:     ADCON3 = 0b00000000;
  1857  012F6C  0E00               	movlw	0
  1858  012F6E  6FFB               	movwf	251,b	;volatile
  1859                           
  1860                           ;main.c: 336:     ADCLK = 0b00011111;
  1861  012F70  0E1F               	movlw	31
  1862  012F72  6FFF               	movwf	255,b	;volatile
  1863                           
  1864                           ;main.c: 337:     ADREF = 0b00000000;
  1865  012F74  0E00               	movlw	0
  1866  012F76  6FFD               	movwf	253,b	;volatile
  1867                           
  1868                           ;main.c: 339:     RC7PPS = 0b001010;
  1869  012F78  0E0A               	movlw	10
  1870  012F7A  013A               	movlb	58	; () banked
  1871  012F7C  6F17               	movwf	23,b	;volatile
  1872                           
  1873                           ;main.c: 340:     RD4PPS = 0b001011;
  1874  012F7E  0E0B               	movlw	11
  1875  012F80  6F1C               	movwf	28,b	;volatile
  1876                           
  1877                           ;main.c: 341:     RD5PPS = 0b001100;
  1878  012F82  0E0C               	movlw	12
  1879  012F84  6F1D               	movwf	29,b	;volatile
  1880                           
  1881                           ;main.c: 342:     RD6PPS = 0b001110;
  1882  012F86  0E0E               	movlw	14
  1883  012F88  6F1E               	movwf	30,b	;volatile
  1884                           
  1885                           ;main.c: 343:     RD7PPS = 0b010000;
  1886  012F8A  0E10               	movlw	16
  1887  012F8C  6F1F               	movwf	31,b	;volatile
  1888                           
  1889                           ;main.c: 345:     CCPTMRS0 = 0b01010101;
  1890  012F8E  0E55               	movlw	85
  1891  012F90  013F               	movlb	63	; () banked
  1892  012F92  6F5E               	movwf	94,b	;volatile
  1893                           
  1894                           ;main.c: 346:     CCP2CON = 0b10001111;
  1895  012F94  0E8F               	movlw	143
  1896  012F96  6E7A               	movwf	122,c	;volatile
  1897                           
  1898                           ;main.c: 347:     CCP3CON = 0b10001111;
  1899  012F98  0E8F               	movlw	143
  1900  012F9A  6E76               	movwf	118,c	;volatile
  1901                           
  1902                           ;main.c: 348:     CCP4CON = 0b10001111;
  1903  012F9C  0E8F               	movlw	143
  1904  012F9E  6E72               	movwf	114,c	;volatile
  1905                           
  1906                           ;main.c: 349:     PWM6CON = 0b10000000;
  1907  012FA0  0E80               	movlw	128
  1908  012FA2  6E6A               	movwf	106,c	;volatile
  1909                           
  1910                           ;main.c: 350:     PWM8CON = 0b10000000;
  1911  012FA4  0E80               	movlw	128
  1912  012FA6  6E62               	movwf	98,c	;volatile
  1913                           
  1914                           ; BSR set to: 63
  1915                           ;main.c: 352:     T2PR = 255;
  1916  012FA8  68AB               	setf	171,c	;volatile
  1917                           
  1918                           ;main.c: 353:     T2CLK = 0b0001;
  1919  012FAA  0E01               	movlw	1
  1920  012FAC  6EAE               	movwf	174,c	;volatile
  1921                           
  1922                           ;main.c: 354:     T2CON = 0b10010000;
  1923  012FAE  0E90               	movlw	144
  1924  012FB0  6EAC               	movwf	172,c	;volatile
  1925                           
  1926                           ;main.c: 356:     CCPR2L = 0;
  1927  012FB2  0E00               	movlw	0
  1928  012FB4  6E78               	movwf	120,c	;volatile
  1929                           
  1930                           ;main.c: 357:     CCPR2H = 0;
  1931  012FB6  0E00               	movlw	0
  1932  012FB8  6E79               	movwf	121,c	;volatile
  1933                           
  1934                           ;main.c: 358:     CCPR3L = 0;
  1935  012FBA  0E00               	movlw	0
  1936  012FBC  6E74               	movwf	116,c	;volatile
  1937                           
  1938                           ;main.c: 359:     CCPR3H = 0;
  1939  012FBE  0E00               	movlw	0
  1940  012FC0  6E75               	movwf	117,c	;volatile
  1941                           
  1942                           ;main.c: 360:     CCPR4L = 0;
  1943  012FC2  0E00               	movlw	0
  1944  012FC4  6E70               	movwf	112,c	;volatile
  1945                           
  1946                           ;main.c: 361:     CCPR4H = 0;
  1947  012FC6  0E00               	movlw	0
  1948  012FC8  6E71               	movwf	113,c	;volatile
  1949                           
  1950                           ;main.c: 362:     PWM6DCH = 0;
  1951  012FCA  0E00               	movlw	0
  1952  012FCC  6E69               	movwf	105,c	;volatile
  1953                           
  1954                           ;main.c: 363:     PWM6DCL = 0;
  1955  012FCE  0E00               	movlw	0
  1956  012FD0  6E68               	movwf	104,c	;volatile
  1957                           
  1958                           ; BSR set to: 63
  1959                           ;main.c: 364:     PWM8DCH = 255;
  1960  012FD2  6861               	setf	97,c	;volatile
  1961                           
  1962                           ; BSR set to: 63
  1963                           ;main.c: 365:     PWM8DCL = 255;
  1964  012FD4  6860               	setf	96,c	;volatile
  1965                           
  1966                           ; BSR set to: 63
  1967                           ;main.c: 367:     LATB4 = 0;
  1968  012FD6  98BB               	bcf	16315,4,c	;volatile
  1969                           
  1970                           ; BSR set to: 63
  1971                           ;main.c: 368:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1972  012FD8  0E05               	movlw	5
  1973  012FDA  0100               	movlb	0	; () banked
  1974  012FDC  6FD3               	movwf	(??_main+1)& (0+255),b
  1975  012FDE  0E0F               	movlw	15
  1976  012FE0  6FD2               	movwf	??_main& (0+255),b
  1977  012FE2  0EF1               	movlw	241
  1978  012FE4                     u8397:
  1979  012FE4  2EE8               	decfsz	wreg,f,c
  1980  012FE6  D7FE               	bra	u8397
  1981  012FE8  2FD2               	decfsz	??_main& (0+255),f,b
  1982  012FEA  D7FC               	bra	u8397
  1983  012FEC  2FD3               	decfsz	(??_main+1)& (0+255),f,b
  1984  012FEE  D7FA               	bra	u8397
  1985                           
  1986                           ;main.c: 369:     LATB4 = 1;
  1987  012FF0  88BB               	bsf	16315,4,c	;volatile
  1988                           
  1989                           ;main.c: 371:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1990  012FF2  0E05               	movlw	5
  1991  012FF4  0100               	movlb	0	; () banked
  1992  012FF6  6FD3               	movwf	(??_main+1)& (0+255),b
  1993  012FF8  0E0F               	movlw	15
  1994  012FFA  6FD2               	movwf	??_main& (0+255),b
  1995  012FFC  0EF1               	movlw	241
  1996  012FFE                     u8407:
  1997  012FFE  2EE8               	decfsz	wreg,f,c
  1998  013000  D7FE               	bra	u8407
  1999  013002  2FD2               	decfsz	??_main& (0+255),f,b
  2000  013004  D7FC               	bra	u8407
  2001  013006  2FD3               	decfsz	(??_main+1)& (0+255),f,b
  2002  013008  D7FA               	bra	u8407
  2003                           
  2004                           ;main.c: 372:     lcd_init(1, 0, 0, 0, 1);
  2005  01300A  0E00               	movlw	0
  2006  01300C  6E05               	movwf	lcd_init@shift^0,c
  2007  01300E  0E00               	movlw	0
  2008  013010  6E06               	movwf	lcd_init@cursor^0,c
  2009  013012  0E00               	movlw	0
  2010  013014  6E07               	movwf	lcd_init@cursorblink^0,c
  2011  013016  0E01               	movlw	1
  2012  013018  6E08               	movwf	lcd_init@on^0,c
  2013  01301A  0E01               	movlw	1
  2014  01301C  ECDB  F09E         	call	_lcd_init
  2015                           
  2016                           ;main.c: 373:     lcd_print("Hello World!");
  2017  013020  0EDE               	movlw	low STR_14
  2018  013022  6E05               	movwf	lcd_print@string^0,c
  2019  013024  0EFF               	movlw	high STR_14
  2020  013026  6E06               	movwf	(lcd_print@string+1)^0,c
  2021  013028  ECC6  F09D         	call	_lcd_print	;wreg free
  2022                           
  2023                           ;main.c: 375:     uart_init();
  2024  01302C  EC2B  F09D         	call	_uart_init	;wreg free
  2025  013030                     l6416:
  2026  013030  EC00  F080         	call	_main_loop	;wreg free
  2027  013034  D7FD               	goto	l6416
  2028  013036                     __end_of_main:
  2029                           	opt callstack 0
  2030                           
  2031 ;; *************** function _uart_init *****************
  2032 ;; Defined at:
  2033 ;;		line 16 in file "uart.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/3F
  2044 ;;		On exit  : 3F/3A
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text1
  2061  013A56                     __ptext1:
  2062                           	opt callstack 0
  2063  013A56                     _uart_init:
  2064                           	opt callstack 30
  2065                           
  2066                           ;uart.c: 17:     DMA1CON1 = 0b01000000;
  2067                           
  2068                           ;incstack = 0
  2069  013A56  0E40               	movlw	64
  2070  013A58  013B               	movlb	59	; () banked
  2071  013A5A  6FFD               	movwf	253,b	;volatile
  2072                           
  2073                           ;uart.c: 18:     DMA1SSZH = 0x00;
  2074  013A5C  0E00               	movlw	0
  2075  013A5E  6FF8               	movwf	248,b	;volatile
  2076                           
  2077                           ;uart.c: 19:     DMA1SSZL = 0x01;
  2078  013A60  0E01               	movlw	1
  2079  013A62  6FF7               	movwf	247,b	;volatile
  2080                           
  2081                           ;uart.c: 20:     DMA1SSAU = 0x00;
  2082  013A64  0E00               	movlw	0
  2083  013A66  6FFB               	movwf	251,b	;volatile
  2084                           
  2085                           ;uart.c: 21:     DMA1SSAH = 0x3d;
  2086  013A68  0E3D               	movlw	61
  2087  013A6A  6FFA               	movwf	250,b	;volatile
  2088                           
  2089                           ;uart.c: 22:     DMA1SSAL = 0xe8;
  2090  013A6C  0EE8               	movlw	232
  2091  013A6E  6FF9               	movwf	249,b	;volatile
  2092                           
  2093                           ;uart.c: 23:     DMA1DSZH = 0x01;
  2094  013A70  0E01               	movlw	1
  2095  013A72  6FEF               	movwf	239,b	;volatile
  2096                           
  2097                           ;uart.c: 24:     DMA1DSZL = 0x00;
  2098  013A74  0E00               	movlw	0
  2099  013A76  6FEE               	movwf	238,b	;volatile
  2100                           
  2101                           ;uart.c: 25:     DMA1DSAH = 0x01;
  2102  013A78  0E01               	movlw	1
  2103  013A7A  6FF1               	movwf	241,b	;volatile
  2104                           
  2105                           ;uart.c: 26:     DMA1DSAL = 0x00;
  2106  013A7C  0E00               	movlw	0
  2107  013A7E  6FF0               	movwf	240,b	;volatile
  2108                           
  2109                           ;uart.c: 27:     DMA1SIRQ = 0x1b;
  2110  013A80  0E1B               	movlw	27
  2111  013A82  6FFF               	movwf	255,b	;volatile
  2112                           
  2113                           ;uart.c: 28:     DMA1AIRQ = 0x1d;
  2114  013A84  0E1D               	movlw	29
  2115  013A86  6FFE               	movwf	254,b	;volatile
  2116                           
  2117                           ;uart.c: 29:     DMA1CON0 = 0b11000100;
  2118  013A88  0EC4               	movlw	196
  2119  013A8A  6FFC               	movwf	252,b	;volatile
  2120                           
  2121                           ;uart.c: 31:     DMA2CON1 = 0b00000011;
  2122  013A8C  0E03               	movlw	3
  2123  013A8E  6FDD               	movwf	221,b	;volatile
  2124                           
  2125                           ;uart.c: 32:     DMA2SSZH = 0x00;
  2126  013A90  0E00               	movlw	0
  2127  013A92  6FD8               	movwf	216,b	;volatile
  2128                           
  2129                           ;uart.c: 33:     DMA2SSZL = 0x01;
  2130  013A94  0E01               	movlw	1
  2131  013A96  6FD7               	movwf	215,b	;volatile
  2132                           
  2133                           ;uart.c: 34:     DMA2SSAU = 0x00;
  2134  013A98  0E00               	movlw	0
  2135  013A9A  6FDB               	movwf	219,b	;volatile
  2136                           
  2137                           ;uart.c: 35:     DMA2SSAH = 0x02;
  2138  013A9C  0E02               	movlw	2
  2139  013A9E  6FDA               	movwf	218,b	;volatile
  2140                           
  2141                           ;uart.c: 36:     DMA2SSAL = 0x00;
  2142  013AA0  0E00               	movlw	0
  2143  013AA2  6FD9               	movwf	217,b	;volatile
  2144                           
  2145                           ;uart.c: 37:     DMA2DSZH = 0x00;
  2146  013AA4  0E00               	movlw	0
  2147  013AA6  6FCF               	movwf	207,b	;volatile
  2148                           
  2149                           ;uart.c: 38:     DMA2DSZL = 0x01;
  2150  013AA8  0E01               	movlw	1
  2151  013AAA  6FCE               	movwf	206,b	;volatile
  2152                           
  2153                           ;uart.c: 39:     DMA2DSAH = 0x3d;
  2154  013AAC  0E3D               	movlw	61
  2155  013AAE  6FD1               	movwf	209,b	;volatile
  2156                           
  2157                           ;uart.c: 40:     DMA2DSAL = 0xea;
  2158  013AB0  0EEA               	movlw	234
  2159  013AB2  6FD0               	movwf	208,b	;volatile
  2160                           
  2161                           ;uart.c: 41:     DMA2SIRQ = 0x1c;
  2162  013AB4  0E1C               	movlw	28
  2163  013AB6  6FDF               	movwf	223,b	;volatile
  2164                           
  2165                           ;uart.c: 42:     DMA2AIRQ = 0x1d;
  2166  013AB8  0E1D               	movlw	29
  2167  013ABA  6FDE               	movwf	222,b	;volatile
  2168                           
  2169                           ;uart.c: 43:     DMA2CON0 = 0b00000100;
  2170  013ABC  0E04               	movlw	4
  2171  013ABE  6FDC               	movwf	220,b	;volatile
  2172                           
  2173                           ;uart.c: 45:     PRLOCK = 0x55;
  2174  013AC0  0E55               	movlw	85
  2175  013AC2  0139               	movlb	57	; () banked
  2176  013AC4  6FEF               	movwf	239,b	;volatile
  2177                           
  2178                           ;uart.c: 46:     PRLOCK = 0xAA;
  2179  013AC6  0EAA               	movlw	170
  2180  013AC8  6FEF               	movwf	239,b	;volatile
  2181                           
  2182                           ; BSR set to: 57
  2183                           ;uart.c: 47:     PRLOCKbits.PRLOCKED = 1;
  2184  013ACA  81EF               	bsf	239,0,b	;volatile
  2185                           
  2186                           ;uart.c: 49:     U1BRGH = 0;
  2187  013ACC  0E00               	movlw	0
  2188  013ACE  013D               	movlb	61	; () banked
  2189  013AD0  6FF6               	movwf	246,b	;volatile
  2190                           
  2191                           ;uart.c: 50:     U1BRGL = 34;
  2192  013AD2  0E22               	movlw	34
  2193  013AD4  6FF5               	movwf	245,b	;volatile
  2194                           
  2195                           ;uart.c: 51:     U1RXPPS = 0b001001;
  2196  013AD6  0E09               	movlw	9
  2197  013AD8  013A               	movlb	58	; () banked
  2198  013ADA  6FE5               	movwf	229,b	;volatile
  2199                           
  2200                           ;uart.c: 52:     U1CON0 = 0b00110000;
  2201  013ADC  0E30               	movlw	48
  2202  013ADE  013D               	movlb	61	; () banked
  2203  013AE0  6FF2               	movwf	242,b	;volatile
  2204                           
  2205                           ;uart.c: 53:     U1CON1 = 0b10000000;
  2206  013AE2  0E80               	movlw	128
  2207  013AE4  6FF3               	movwf	243,b	;volatile
  2208                           
  2209                           ;uart.c: 54:     U1CON2 = 0b00001000;
  2210  013AE6  0E08               	movlw	8
  2211  013AE8  6FF4               	movwf	244,b	;volatile
  2212                           
  2213                           ;uart.c: 55:     RB0PPS = 0b010011;
  2214  013AEA  0E13               	movlw	19
  2215  013AEC  013A               	movlb	58	; () banked
  2216  013AEE  6F08               	movwf	8,b	;volatile
  2217                           
  2218                           ; BSR set to: 58
  2219  013AF0  0012               	return		;funcret
  2220  013AF2                     __end_of_uart_init:
  2221                           	opt callstack 0
  2222                           
  2223 ;; *************** function _main_loop *****************
  2224 ;; Defined at:
  2225 ;;		line 160 in file "main.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;		None
  2228 ;; Auto vars:     Size  Location     Type
  2229 ;;  batmsg         17    0[BANK4 ] unsigned char [17]
  2230 ;;  batlvl          2   41[BANK4 ] unsigned short 
  2231 ;;  rel             4   47[BANK4 ] long 
  2232 ;;  sample          4   43[BANK4 ] long 
  2233 ;;  lastAvg         4   17[BANK4 ] unsigned long 
  2234 ;;  res             2   39[BANK4 ] short 
  2235 ;;  absRes          2   37[BANK4 ] short 
  2236 ;; Return value:  Size  Location     Type
  2237 ;;                  1    wreg      void 
  2238 ;; Registers used:
  2239 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2240 ;; Tracked objects:
  2241 ;;		On entry : 0/3A
  2242 ;;		On exit  : 0/0
  2243 ;;		Unchanged: 0/0
  2244 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  2245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2246 ;;      Locals:         0       0       0      51       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2247 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2248 ;;      Totals:         0       6       0      51       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2249 ;;Total ram usage:       57 bytes
  2250 ;; Hardware stack levels used:    1
  2251 ;; Hardware stack levels required when called:    8
  2252 ;; This function calls:
  2253 ;;		___awdiv
  2254 ;;		___fladd
  2255 ;;		___fldiv
  2256 ;;		___flge
  2257 ;;		___flmul
  2258 ;;		___lldiv
  2259 ;;		___llmod
  2260 ;;		___lmul
  2261 ;;		___xxtofl
  2262 ;;		_lcd_print
  2263 ;;		_lcd_set_data_addr
  2264 ;;		_setLED
  2265 ;;		_sprintf
  2266 ;;		_uart_send
  2267 ;;		_uart_tasks
  2268 ;;		_updateButtonLight
  2269 ;; This function is called by:
  2270 ;;		_main
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text2
  2275  010000                     __ptext2:
  2276                           	opt callstack 0
  2277  010000                     _main_loop:
  2278                           	opt callstack 22
  2279                           
  2280                           ;main.c: 161:     static uint32_t counter = 100000;;main.c: 162:     static uint32_t sum
      +                           = 0;;main.c: 163:     static uint16_t last[20];;main.c: 164:     static uint32_t lastSu
      +                          m = 0;;main.c: 165:     static int16_t pos = 0;;main.c: 167:     static uint16_t clipCou
      +                          nt = 0;;main.c: 168:     static _Bool ampFault = 0;;main.c: 170:     static _Bool batCut
      +                          off = 0;;main.c: 172:     ADPCH = 0b010101;
  2281                           
  2282                           ; BSR set to: 58
  2283                           ;incstack = 0
  2284  010000  0E15               	movlw	21
  2285  010002  013E               	movlb	62	; () banked
  2286  010004  6FF1               	movwf	241,b	;volatile
  2287                           
  2288                           ; BSR set to: 62
  2289                           ;main.c: 173:     ADCON0bits.GO = 1;
  2290  010006  81F8               	bsf	248,0,b	;volatile
  2291                           
  2292                           ;main.c: 174:     while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000.0))
      +                          );
  2293  010008  D004               	goto	l6164
  2294  01000A                     l6162:
  2295                           
  2296                           ; BSR set to: 62
  2297  01000A  0E05               	movlw	5
  2298  01000C                     u8417:
  2299  01000C  2EE8               	decfsz	wreg,f,c
  2300  01000E  D7FE               	bra	u8417
  2301  010010  F000               	nop	
  2302  010012                     l6164:
  2303  010012  013E               	movlb	62	; () banked
  2304  010014  B1F8               	btfsc	248,0,b	;volatile
  2305  010016  D7F9               	goto	l6162
  2306                           
  2307                           ; BSR set to: 62
  2308                           ;main.c: 175:     int16_t res = ((ADRESH << 8) | ADRESL) - 1545;
  2309  010018  51EF               	movf	239,w,b	;volatile
  2310  01001A  006F FBC0  F0CC    	movff	16112,??_main_loop	;volatile
  2311  010020  0100               	movlb	0	; () banked
  2312  010022  6BCD               	clrf	(??_main_loop+1)& (0+255),b
  2313  010024  0060  F330  F0CD   	movff	??_main_loop,??_main_loop+1
  2314  01002A  6BCC               	clrf	??_main_loop& (0+255),b
  2315  01002C  13CC               	iorwf	??_main_loop& (0+255),f,b
  2316  01002E  0E00               	movlw	0
  2317  010030  13CD               	iorwf	(??_main_loop+1)& (0+255),f,b
  2318  010032  0EF7               	movlw	247
  2319  010034  25CC               	addwf	??_main_loop& (0+255),w,b
  2320  010036  0104               	movlb	4	; () banked
  2321  010038  6FB1               	movwf	main_loop@res& (0+255),b
  2322  01003A  0EF9               	movlw	249
  2323  01003C  0100               	movlb	0	; () banked
  2324  01003E  21CD               	addwfc	(??_main_loop+1)& (0+255),w,b
  2325  010040  0104               	movlb	4	; () banked
  2326  010042  6FB2               	movwf	(main_loop@res+1)& (0+255),b
  2327                           
  2328                           ;main.c: 176:     int16_t absRes = res < 0 ? -res : res;
  2329  010044  BFB2               	btfsc	(main_loop@res+1)& (0+255),7,b
  2330  010046  D007               	goto	l273
  2331                           
  2332                           ; BSR set to: 4
  2333  010048  0061  F2C4  F4AF   	movff	main_loop@res,main_loop@absRes
  2334  01004E  0061  F2C8  F4B0   	movff	main_loop@res+1,main_loop@absRes+1
  2335  010054  D011               	goto	l6170
  2336  010056                     l273:
  2337                           
  2338                           ; BSR set to: 4
  2339  010056  0061  F2C4  F0CC   	movff	main_loop@res,??_main_loop
  2340  01005C  0061  F2C8  F0CD   	movff	main_loop@res+1,??_main_loop+1
  2341  010062  0100               	movlb	0	; () banked
  2342  010064  1FCC               	comf	??_main_loop& (0+255),f,b
  2343  010066  1FCD               	comf	(??_main_loop+1)& (0+255),f,b
  2344  010068  4BCC               	infsnz	??_main_loop& (0+255),f,b
  2345  01006A  2BCD               	incf	(??_main_loop+1)& (0+255),f,b
  2346  01006C  0060  F330  F4AF   	movff	??_main_loop,main_loop@absRes
  2347  010072  0060  F334  F4B0   	movff	??_main_loop+1,main_loop@absRes+1
  2348  010078                     l6170:
  2349                           
  2350                           ;main.c: 177:     sum += absRes;
  2351  010078  0061  F2BC  F0CC   	movff	main_loop@absRes,??_main_loop
  2352  01007E  0061  F2C0  F0CD   	movff	main_loop@absRes+1,??_main_loop+1
  2353  010084  0E00               	movlw	0
  2354  010086  0100               	movlb	0	; () banked
  2355  010088  BFCD               	btfsc	(??_main_loop+1)& (0+255),7,b
  2356  01008A  0EFF               	movlw	255
  2357  01008C  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2358  01008E  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2359  010090  51CC               	movf	??_main_loop& (0+255),w,b
  2360  010092  0104               	movlb	4	; () banked
  2361  010094  272C               	addwf	main_loop@sum& (0+255),f,b
  2362  010096  0100               	movlb	0	; () banked
  2363  010098  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2364  01009A  0104               	movlb	4	; () banked
  2365  01009C  232D               	addwfc	(main_loop@sum+1)& (0+255),f,b
  2366  01009E  0100               	movlb	0	; () banked
  2367  0100A0  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2368  0100A2  0104               	movlb	4	; () banked
  2369  0100A4  232E               	addwfc	(main_loop@sum+2)& (0+255),f,b
  2370  0100A6  0100               	movlb	0	; () banked
  2371  0100A8  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2372  0100AA  0104               	movlb	4	; () banked
  2373  0100AC  232F               	addwfc	(main_loop@sum+3)& (0+255),f,b
  2374                           
  2375                           ; BSR set to: 4
  2376                           ;main.c: 179:     if (counter % 50 == 50 - 1) {
  2377  0100AE  0061  F2F4  F00E   	movff	main_loop@counter,___llmod@dividend
  2378  0100B4  0061  F2F8  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2379  0100BA  0061  F2FC  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2380  0100C0  0061  F300  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2381  0100C6  0E32               	movlw	50
  2382  0100C8  6E12               	movwf	___llmod@divisor^0,c
  2383  0100CA  0E00               	movlw	0
  2384  0100CC  6E13               	movwf	(___llmod@divisor+1)^0,c
  2385  0100CE  0E00               	movlw	0
  2386  0100D0  6E14               	movwf	(___llmod@divisor+2)^0,c
  2387  0100D2  0E00               	movlw	0
  2388  0100D4  6E15               	movwf	(___llmod@divisor+3)^0,c
  2389  0100D6  ECC7  F09F         	call	___llmod	;wreg free
  2390  0100DA  0E31               	movlw	49
  2391  0100DC  180E               	xorwf	?___llmod^0,w,c
  2392  0100DE  100F               	iorwf	(?___llmod+1)^0,w,c
  2393  0100E0  1010               	iorwf	(?___llmod+2)^0,w,c
  2394  0100E2  1011               	iorwf	(?___llmod+3)^0,w,c
  2395  0100E4  A4D8               	btfss	status,2,c
  2396  0100E6  D24D               	goto	l6232
  2397                           
  2398                           ;main.c: 180:         int32_t sample = sum * 2 / 50;
  2399  0100E8  90D8               	bcf	status,0,c
  2400  0100EA  0104               	movlb	4	; () banked
  2401  0100EC  352C               	rlcf	main_loop@sum& (0+255),w,b
  2402  0100EE  6E01               	movwf	___lldiv@dividend^0,c
  2403  0100F0  352D               	rlcf	(main_loop@sum+1)& (0+255),w,b
  2404  0100F2  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2405  0100F4  352E               	rlcf	(main_loop@sum+2)& (0+255),w,b
  2406  0100F6  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2407  0100F8  352F               	rlcf	(main_loop@sum+3)& (0+255),w,b
  2408  0100FA  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2409  0100FC  0E32               	movlw	50
  2410  0100FE  6E05               	movwf	___lldiv@divisor^0,c
  2411  010100  0E00               	movlw	0
  2412  010102  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2413  010104  0E00               	movlw	0
  2414  010106  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2415  010108  0E00               	movlw	0
  2416  01010A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2417  01010C  EC52  F09E         	call	___lldiv	;wreg free
  2418  010110  0060  F004  F4B5   	movff	?___lldiv,main_loop@sample
  2419  010116  0060  F008  F4B6   	movff	?___lldiv+1,main_loop@sample+1
  2420  01011C  0060  F00C  F4B7   	movff	?___lldiv+2,main_loop@sample+2
  2421  010122  0060  F010  F4B8   	movff	?___lldiv+3,main_loop@sample+3
  2422                           
  2423                           ; BSR set to: 4
  2424                           ;main.c: 181:         sample -= 9;
  2425  010128  0EF7               	movlw	247
  2426  01012A  27B5               	addwf	main_loop@sample& (0+255),f,b
  2427  01012C  0EFF               	movlw	255
  2428  01012E  23B6               	addwfc	(main_loop@sample+1)& (0+255),f,b
  2429  010130  0EFF               	movlw	255
  2430  010132  23B7               	addwfc	(main_loop@sample+2)& (0+255),f,b
  2431  010134  0EFF               	movlw	255
  2432  010136  23B8               	addwfc	(main_loop@sample+3)& (0+255),f,b
  2433                           
  2434                           ; BSR set to: 4
  2435                           ;main.c: 182:         if (sample < 0) sample = 0;
  2436  010138  AFB8               	btfss	(main_loop@sample+3)& (0+255),7,b
  2437  01013A  D008               	goto	l6182
  2438                           
  2439                           ; BSR set to: 4
  2440  01013C  0E00               	movlw	0
  2441  01013E  6FB5               	movwf	main_loop@sample& (0+255),b
  2442  010140  0E00               	movlw	0
  2443  010142  6FB6               	movwf	(main_loop@sample+1)& (0+255),b
  2444  010144  0E00               	movlw	0
  2445  010146  6FB7               	movwf	(main_loop@sample+2)& (0+255),b
  2446  010148  0E00               	movlw	0
  2447  01014A  6FB8               	movwf	(main_loop@sample+3)& (0+255),b
  2448  01014C                     l6182:
  2449                           
  2450                           ; BSR set to: 4
  2451                           ;main.c: 184:         uint32_t lastAvg = lastSum / 20;
  2452  01014C  0061  F0A0  F001   	movff	main_loop@lastSum,___lldiv@dividend
  2453  010152  0061  F0A4  F002   	movff	main_loop@lastSum+1,___lldiv@dividend+1
  2454  010158  0061  F0A8  F003   	movff	main_loop@lastSum+2,___lldiv@dividend+2
  2455  01015E  0061  F0AC  F004   	movff	main_loop@lastSum+3,___lldiv@dividend+3
  2456  010164  0E14               	movlw	20
  2457  010166  6E05               	movwf	___lldiv@divisor^0,c
  2458  010168  0E00               	movlw	0
  2459  01016A  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2460  01016C  0E00               	movlw	0
  2461  01016E  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2462  010170  0E00               	movlw	0
  2463  010172  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2464  010174  EC52  F09E         	call	___lldiv	;wreg free
  2465  010178  0060  F004  F49B   	movff	?___lldiv,main_loop@lastAvg
  2466  01017E  0060  F008  F49C   	movff	?___lldiv+1,main_loop@lastAvg+1
  2467  010184  0060  F00C  F49D   	movff	?___lldiv+2,main_loop@lastAvg+2
  2468  01018A  0060  F010  F49E   	movff	?___lldiv+3,main_loop@lastAvg+3
  2469                           
  2470                           ; BSR set to: 4
  2471                           ;main.c: 185:         int32_t rel = (sample - lastAvg) * soundAmplify[volume_level];
  2472  010190  519B               	movf	main_loop@lastAvg& (0+255),w,b
  2473  010192  5DB5               	subwf	main_loop@sample& (0+255),w,b
  2474  010194  6E01               	movwf	___lmul@multiplier^0,c
  2475  010196  519C               	movf	(main_loop@lastAvg+1)& (0+255),w,b
  2476  010198  59B6               	subwfb	(main_loop@sample+1)& (0+255),w,b
  2477  01019A  6E02               	movwf	(___lmul@multiplier+1)^0,c
  2478  01019C  519D               	movf	(main_loop@lastAvg+2)& (0+255),w,b
  2479  01019E  59B7               	subwfb	(main_loop@sample+2)& (0+255),w,b
  2480  0101A0  6E03               	movwf	(___lmul@multiplier+2)^0,c
  2481  0101A2  519E               	movf	(main_loop@lastAvg+3)& (0+255),w,b
  2482  0101A4  59B8               	subwfb	(main_loop@sample+3)& (0+255),w,b
  2483  0101A6  6E04               	movwf	(___lmul@multiplier+3)^0,c
  2484  0101A8  5139               	movf	_volume_level& (0+255),w,b
  2485  0101AA  0D02               	mullw	2
  2486  0101AC  0EE1               	movlw	low _soundAmplify
  2487  0101AE  24F3               	addwf	243,w,c
  2488  0101B0  6EF6               	movwf	tblptrl,c
  2489  0101B2  0EFE               	movlw	high _soundAmplify
  2490  0101B4  20F4               	addwfc	244,w,c
  2491  0101B6  6EF7               	movwf	tblptrh,c
  2492  0101B8                     	if	1	;There are 3 active tblptr bytes
  2493  0101B8  6AF8               	clrf	tblptru,c
  2494  0101BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2495  0101BC  22F8               	addwfc	tblptru,f,c
  2496  0101BE                     	endif
  2497  0101BE  0009               	tblrd		*+
  2498  0101C0  006F FFD4  F0CC    	movff	tablat,??_main_loop
  2499  0101C6  0009               	tblrd		*+
  2500  0101C8  006F FFD4  F0CD    	movff	tablat,??_main_loop+1
  2501  0101CE  0060  F330  F005   	movff	??_main_loop,___lmul@multiplicand
  2502  0101D4  0060  F334  F006   	movff	??_main_loop+1,___lmul@multiplicand+1
  2503  0101DA  6A07               	clrf	(___lmul@multiplicand+2)^0,c
  2504  0101DC  6A08               	clrf	(___lmul@multiplicand+3)^0,c
  2505  0101DE  EC92  F0A0         	call	___lmul	;wreg free
  2506  0101E2  0060  F004  F4B9   	movff	?___lmul,main_loop@rel
  2507  0101E8  0060  F008  F4BA   	movff	?___lmul+1,main_loop@rel+1
  2508  0101EE  0060  F00C  F4BB   	movff	?___lmul+2,main_loop@rel+2
  2509  0101F4  0060  F010  F4BC   	movff	?___lmul+3,main_loop@rel+3
  2510                           
  2511                           ;main.c: 188:         if (streaming && (volume_level >= 4 || ledBrightness <= 24) && rel
      +                           > 1800) pos = (4095 < (pos > rel ? pos : rel) ? 4095 : (pos > rel ? pos : rel));
  2512  0101FA  0104               	movlb	4	; () banked
  2513  0101FC  5137               	movf	_streaming& (0+255),w,b
  2514  0101FE  B4D8               	btfsc	status,2,c
  2515  010200  D0B1               	goto	l6214
  2516                           
  2517                           ; BSR set to: 4
  2518  010202  0E04               	movlw	4
  2519  010204  6139               	cpfslt	_volume_level& (0+255),b
  2520  010206  D00B               	goto	u8050
  2521                           
  2522                           ; BSR set to: 4
  2523  010208  0100               	movlb	0	; () banked
  2524  01020A  BFE9               	btfsc	(_ledBrightness+3)& (0+255),7,b
  2525  01020C  D008               	goto	u8050
  2526  01020E  51E9               	movf	(_ledBrightness+3)& (0+255),w,b
  2527  010210  11E8               	iorwf	(_ledBrightness+2)& (0+255),w,b
  2528  010212  11E7               	iorwf	(_ledBrightness+1)& (0+255),w,b
  2529  010214  E103               	bnz	u8051
  2530  010216  0E19               	movlw	25
  2531  010218  5DE6               	subwf	_ledBrightness& (0+255),w,b
  2532  01021A  B0D8               	btfsc	status,0,c
  2533  01021C                     u8051:
  2534  01021C  D0A3               	goto	l6214
  2535  01021E                     u8050:
  2536  01021E  0104               	movlb	4	; () banked
  2537  010220  BFBC               	btfsc	(main_loop@rel+3)& (0+255),7,b
  2538  010222  D0A0               	goto	l6214
  2539  010224  51BC               	movf	(main_loop@rel+3)& (0+255),w,b
  2540  010226  11BB               	iorwf	(main_loop@rel+2)& (0+255),w,b
  2541  010228  E106               	bnz	u8060
  2542  01022A  0E09               	movlw	9
  2543  01022C  5DB9               	subwf	main_loop@rel& (0+255),w,b
  2544  01022E  0E07               	movlw	7
  2545  010230  59BA               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2546  010232  A0D8               	btfss	status,0,c
  2547  010234  D097               	goto	l6214
  2548  010236                     u8060:
  2549                           
  2550                           ; BSR set to: 4
  2551  010236  0061  F0C8  F0CC   	movff	main_loop@pos,??_main_loop
  2552  01023C  0061  F0CC  F0CD   	movff	main_loop@pos+1,??_main_loop+1
  2553  010242  0E00               	movlw	0
  2554  010244  0100               	movlb	0	; () banked
  2555  010246  BFCD               	btfsc	(??_main_loop+1)& (0+255),7,b
  2556  010248  0EFF               	movlw	255
  2557  01024A  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2558  01024C  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2559  01024E  51CC               	movf	??_main_loop& (0+255),w,b
  2560  010250  0104               	movlb	4	; () banked
  2561  010252  5DB9               	subwf	main_loop@rel& (0+255),w,b
  2562  010254  0100               	movlb	0	; () banked
  2563  010256  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2564  010258  0104               	movlb	4	; () banked
  2565  01025A  59BA               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2566  01025C  0100               	movlb	0	; () banked
  2567  01025E  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2568  010260  0104               	movlb	4	; () banked
  2569  010262  59BB               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2570  010264  51BC               	movf	(main_loop@rel+3)& (0+255),w,b
  2571  010266  0A80               	xorlw	128
  2572  010268  0100               	movlb	0	; () banked
  2573  01026A  6FD0               	movwf	(??_main_loop+4)& (0+255),b
  2574  01026C  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2575  01026E  0A80               	xorlw	128
  2576  010270  59D0               	subwfb	(??_main_loop+4)& (0+255),w,b
  2577  010272  A0D8               	btfss	status,0,c
  2578  010274  D00D               	goto	l6198
  2579                           
  2580                           ; BSR set to: 0
  2581  010276  0061  F2E4  F4A3   	movff	main_loop@rel,_main_loop$321
  2582  01027C  0061  F2E8  F4A4   	movff	main_loop@rel+1,_main_loop$321+1
  2583  010282  0061  F2EC  F4A5   	movff	main_loop@rel+2,_main_loop$321+2
  2584  010288  0061  F2F0  F4A6   	movff	main_loop@rel+3,_main_loop$321+3
  2585  01028E  D00C               	goto	l6200
  2586  010290                     l6198:
  2587                           
  2588                           ; BSR set to: 0
  2589  010290  0061  F0C8  F4A3   	movff	main_loop@pos,_main_loop$321
  2590  010296  0061  F0CC  F4A4   	movff	main_loop@pos+1,_main_loop$321+1
  2591  01029C  0104               	movlb	4	; () banked
  2592  01029E  0E00               	movlw	0
  2593  0102A0  BFA4               	btfsc	(_main_loop$321+1)& (0+255),7,b
  2594  0102A2  0EFF               	movlw	-1
  2595  0102A4  6FA5               	movwf	(_main_loop$321+2)& (0+255),b
  2596  0102A6  6FA6               	movwf	(_main_loop$321+3)& (0+255),b
  2597  0102A8                     l6200:
  2598  0102A8  0104               	movlb	4	; () banked
  2599  0102AA  BFA6               	btfsc	(_main_loop$321+3)& (0+255),7,b
  2600  0102AC  D007               	goto	u8080
  2601  0102AE  51A6               	movf	(_main_loop$321+3)& (0+255),w,b
  2602  0102B0  11A5               	iorwf	(_main_loop$321+2)& (0+255),w,b
  2603  0102B2  E14A               	bnz	l6210
  2604  0102B4  0E10               	movlw	16
  2605  0102B6  5DA4               	subwf	(_main_loop$321+1)& (0+255),w,b
  2606  0102B8  B0D8               	btfsc	status,0,c
  2607  0102BA  D046               	goto	l6210
  2608  0102BC                     u8080:
  2609                           
  2610                           ; BSR set to: 4
  2611  0102BC  0061  F0C8  F0CC   	movff	main_loop@pos,??_main_loop
  2612  0102C2  0061  F0CC  F0CD   	movff	main_loop@pos+1,??_main_loop+1
  2613  0102C8  0E00               	movlw	0
  2614  0102CA  0100               	movlb	0	; () banked
  2615  0102CC  BFCD               	btfsc	(??_main_loop+1)& (0+255),7,b
  2616  0102CE  0EFF               	movlw	255
  2617  0102D0  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2618  0102D2  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2619  0102D4  51CC               	movf	??_main_loop& (0+255),w,b
  2620  0102D6  0104               	movlb	4	; () banked
  2621  0102D8  5DB9               	subwf	main_loop@rel& (0+255),w,b
  2622  0102DA  0100               	movlb	0	; () banked
  2623  0102DC  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2624  0102DE  0104               	movlb	4	; () banked
  2625  0102E0  59BA               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2626  0102E2  0100               	movlb	0	; () banked
  2627  0102E4  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2628  0102E6  0104               	movlb	4	; () banked
  2629  0102E8  59BB               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2630  0102EA  51BC               	movf	(main_loop@rel+3)& (0+255),w,b
  2631  0102EC  0A80               	xorlw	128
  2632  0102EE  0100               	movlb	0	; () banked
  2633  0102F0  6FD0               	movwf	(??_main_loop+4)& (0+255),b
  2634  0102F2  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2635  0102F4  0A80               	xorlw	128
  2636  0102F6  59D0               	subwfb	(??_main_loop+4)& (0+255),w,b
  2637  0102F8  A0D8               	btfss	status,0,c
  2638  0102FA  D00D               	goto	l6206
  2639                           
  2640                           ; BSR set to: 0
  2641  0102FC  0061  F2E4  F4A7   	movff	main_loop@rel,_main_loop$322
  2642  010302  0061  F2E8  F4A8   	movff	main_loop@rel+1,_main_loop$322+1
  2643  010308  0061  F2EC  F4A9   	movff	main_loop@rel+2,_main_loop$322+2
  2644  01030E  0061  F2F0  F4AA   	movff	main_loop@rel+3,_main_loop$322+3
  2645  010314  D00C               	goto	l6208
  2646  010316                     l6206:
  2647                           
  2648                           ; BSR set to: 0
  2649  010316  0061  F0C8  F4A7   	movff	main_loop@pos,_main_loop$322
  2650  01031C  0061  F0CC  F4A8   	movff	main_loop@pos+1,_main_loop$322+1
  2651  010322  0104               	movlb	4	; () banked
  2652  010324  0E00               	movlw	0
  2653  010326  BFA8               	btfsc	(_main_loop$322+1)& (0+255),7,b
  2654  010328  0EFF               	movlw	-1
  2655  01032A  6FA9               	movwf	(_main_loop$322+2)& (0+255),b
  2656  01032C  6FAA               	movwf	(_main_loop$322+3)& (0+255),b
  2657  01032E                     l6208:
  2658  01032E  0061  F29C  F49F   	movff	_main_loop$322,_main_loop$320
  2659  010334  0061  F2A0  F4A0   	movff	_main_loop$322+1,_main_loop$320+1
  2660  01033A  0061  F2A4  F4A1   	movff	_main_loop$322+2,_main_loop$320+2
  2661  010340  0061  F2A8  F4A2   	movff	_main_loop$322+3,_main_loop$320+3
  2662  010346  D008               	goto	l6212
  2663  010348                     l6210:
  2664                           
  2665                           ; BSR set to: 4
  2666  010348  0EFF               	movlw	255
  2667  01034A  6F9F               	movwf	_main_loop$320& (0+255),b
  2668  01034C  0E0F               	movlw	15
  2669  01034E  6FA0               	movwf	(_main_loop$320+1)& (0+255),b
  2670  010350  0E00               	movlw	0
  2671  010352  6FA1               	movwf	(_main_loop$320+2)& (0+255),b
  2672  010354  0E00               	movlw	0
  2673  010356  6FA2               	movwf	(_main_loop$320+3)& (0+255),b
  2674  010358                     l6212:
  2675  010358  0061  F27C  F432   	movff	_main_loop$320,main_loop@pos
  2676  01035E  0061  F280  F433   	movff	_main_loop$320+1,main_loop@pos+1
  2677  010364                     l6214:
  2678                           
  2679                           ;main.c: 190:         setLED(pos, counter);
  2680  010364  0061  F0C8  F060   	movff	main_loop@pos,setLED@mod
  2681  01036A  0061  F0CC  F061   	movff	main_loop@pos+1,setLED@mod+1
  2682  010370  0100               	movlb	0	; () banked
  2683  010372  0E00               	movlw	0
  2684  010374  BF61               	btfsc	(setLED@mod+1)& (0+255),7,b
  2685  010376  0EFF               	movlw	-1
  2686  010378  6F62               	movwf	(setLED@mod+2)& (0+255),b
  2687  01037A  6F63               	movwf	(setLED@mod+3)& (0+255),b
  2688  01037C  0061  F2F4  F064   	movff	main_loop@counter,setLED@step
  2689  010382  0061  F2F8  F065   	movff	main_loop@counter+1,setLED@step+1
  2690  010388  0061  F2FC  F066   	movff	main_loop@counter+2,setLED@step+2
  2691  01038E  0061  F300  F067   	movff	main_loop@counter+3,setLED@step+3
  2692  010394  EC60  F08B         	call	_setLED	;wreg free
  2693                           
  2694                           ;main.c: 192:         pos = (pos - (pos / 50 + 10) > 0 ? pos - (pos / 50 + 10) : 0);
  2695  010398  0EF6               	movlw	246
  2696  01039A  0100               	movlb	0	; () banked
  2697  01039C  6FCC               	movwf	??_main_loop& (0+255),b
  2698  01039E  0EFF               	movlw	255
  2699  0103A0  6FCD               	movwf	(??_main_loop+1)& (0+255),b
  2700  0103A2  0061  F0C8  F001   	movff	main_loop@pos,___awdiv@dividend
  2701  0103A8  0061  F0CC  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2702  0103AE  0E00               	movlw	0
  2703  0103B0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2704  0103B2  0E32               	movlw	50
  2705  0103B4  6E03               	movwf	___awdiv@divisor^0,c
  2706  0103B6  EC97  F09E         	call	___awdiv	;wreg free
  2707  0103BA  0061  F0C8  F0CE   	movff	main_loop@pos,??_main_loop+2
  2708  0103C0  0061  F0CC  F0CF   	movff	main_loop@pos+1,??_main_loop+3
  2709  0103C6  5001               	movf	?___awdiv^0,w,c
  2710  0103C8  5FCE               	subwf	(??_main_loop+2)& (0+255),f,b
  2711  0103CA  5002               	movf	(?___awdiv+1)^0,w,c
  2712  0103CC  5BCF               	subwfb	(??_main_loop+3)& (0+255),f,b
  2713  0103CE  51CC               	movf	??_main_loop& (0+255),w,b
  2714  0103D0  27CE               	addwf	(??_main_loop+2)& (0+255),f,b
  2715  0103D2  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2716  0103D4  23CF               	addwfc	(??_main_loop+3)& (0+255),f,b
  2717  0103D6  BFCF               	btfsc	(??_main_loop+3)& (0+255),7,b
  2718  0103D8  D005               	goto	u8100
  2719  0103DA  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2720  0103DC  E109               	bnz	l6220
  2721  0103DE  05CE               	decf	(??_main_loop+2)& (0+255),w,b
  2722  0103E0  B0D8               	btfsc	status,0,c
  2723  0103E2  D006               	goto	l6220
  2724  0103E4                     u8100:
  2725                           
  2726                           ; BSR set to: 0
  2727  0103E4  0E00               	movlw	0
  2728  0103E6  0104               	movlb	4	; () banked
  2729  0103E8  6F33               	movwf	(main_loop@pos+1)& (0+255),b
  2730  0103EA  0E00               	movlw	0
  2731  0103EC  6F32               	movwf	main_loop@pos& (0+255),b
  2732  0103EE  D01F               	goto	l6222
  2733  0103F0                     l6220:
  2734                           
  2735                           ; BSR set to: 0
  2736  0103F0  0061  F0C8  F001   	movff	main_loop@pos,___awdiv@dividend
  2737  0103F6  0061  F0CC  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2738  0103FC  0E00               	movlw	0
  2739  0103FE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2740  010400  0E32               	movlw	50
  2741  010402  6E03               	movwf	___awdiv@divisor^0,c
  2742  010404  EC97  F09E         	call	___awdiv	;wreg free
  2743  010408  0061  F0C8  F0CC   	movff	main_loop@pos,??_main_loop
  2744  01040E  0061  F0CC  F0CD   	movff	main_loop@pos+1,??_main_loop+1
  2745  010414  5001               	movf	?___awdiv^0,w,c
  2746  010416  5FCC               	subwf	??_main_loop& (0+255),f,b
  2747  010418  5002               	movf	(?___awdiv+1)^0,w,c
  2748  01041A  5BCD               	subwfb	(??_main_loop+1)& (0+255),f,b
  2749  01041C  0EF6               	movlw	246
  2750  01041E  25CC               	addwf	??_main_loop& (0+255),w,b
  2751  010420  0104               	movlb	4	; () banked
  2752  010422  6F32               	movwf	main_loop@pos& (0+255),b
  2753  010424  0EFF               	movlw	255
  2754  010426  0100               	movlb	0	; () banked
  2755  010428  21CD               	addwfc	(??_main_loop+1)& (0+255),w,b
  2756  01042A  0104               	movlb	4	; () banked
  2757  01042C  6F33               	movwf	(main_loop@pos+1)& (0+255),b
  2758  01042E                     l6222:
  2759                           
  2760                           ; BSR set to: 4
  2761                           ;main.c: 194:         sum = 0;
  2762  01042E  0E00               	movlw	0
  2763  010430  6F2C               	movwf	main_loop@sum& (0+255),b
  2764  010432  0E00               	movlw	0
  2765  010434  6F2D               	movwf	(main_loop@sum+1)& (0+255),b
  2766  010436  0E00               	movlw	0
  2767  010438  6F2E               	movwf	(main_loop@sum+2)& (0+255),b
  2768  01043A  0E00               	movlw	0
  2769  01043C  6F2F               	movwf	(main_loop@sum+3)& (0+255),b
  2770                           
  2771                           ; BSR set to: 4
  2772                           ;main.c: 196:         lastSum -= last[(counter / 50) % 20];
  2773  01043E  0E32               	movlw	50
  2774  010440  6E05               	movwf	___lldiv@divisor^0,c
  2775  010442  0E00               	movlw	0
  2776  010444  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2777  010446  0E00               	movlw	0
  2778  010448  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2779  01044A  0E00               	movlw	0
  2780  01044C  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2781  01044E  0061  F2F4  F001   	movff	main_loop@counter,___lldiv@dividend
  2782  010454  0061  F2F8  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2783  01045A  0061  F2FC  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2784  010460  0061  F300  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2785  010466  EC52  F09E         	call	___lldiv	;wreg free
  2786  01046A  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2787  010470  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2788  010476  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2789  01047C  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2790  010482  0E14               	movlw	20
  2791  010484  6E12               	movwf	___llmod@divisor^0,c
  2792  010486  0E00               	movlw	0
  2793  010488  6E13               	movwf	(___llmod@divisor+1)^0,c
  2794  01048A  0E00               	movlw	0
  2795  01048C  6E14               	movwf	(___llmod@divisor+2)^0,c
  2796  01048E  0E00               	movlw	0
  2797  010490  6E15               	movwf	(___llmod@divisor+3)^0,c
  2798  010492  ECC7  F09F         	call	___llmod	;wreg free
  2799  010496  90D8               	bcf	status,0,c
  2800  010498  360E               	rlcf	?___llmod^0,f,c
  2801  01049A  360F               	rlcf	(?___llmod+1)^0,f,c
  2802  01049C  0E00               	movlw	low main_loop@last
  2803  01049E  240E               	addwf	?___llmod^0,w,c
  2804  0104A0  6ED9               	movwf	fsr2l,c
  2805  0104A2  0E04               	movlw	high main_loop@last
  2806  0104A4  200F               	addwfc	(?___llmod+1)^0,w,c
  2807  0104A6  6EDA               	movwf	fsr2h,c
  2808  0104A8  006F FF78  F0CC    	movff	postinc2,??_main_loop
  2809  0104AE  006F FF74  F0CD    	movff	postdec2,??_main_loop+1
  2810  0104B4  0100               	movlb	0	; () banked
  2811  0104B6  51CC               	movf	??_main_loop& (0+255),w,b
  2812  0104B8  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2813  0104BA  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2814  0104BC  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2815  0104BE  6BD0               	clrf	(??_main_loop+4)& (0+255),b
  2816  0104C0  6BD1               	clrf	(??_main_loop+5)& (0+255),b
  2817  0104C2  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2818  0104C4  0104               	movlb	4	; () banked
  2819  0104C6  5F28               	subwf	main_loop@lastSum& (0+255),f,b
  2820  0104C8  0100               	movlb	0	; () banked
  2821  0104CA  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2822  0104CC  0104               	movlb	4	; () banked
  2823  0104CE  5B29               	subwfb	(main_loop@lastSum+1)& (0+255),f,b
  2824  0104D0  0100               	movlb	0	; () banked
  2825  0104D2  51D0               	movf	(??_main_loop+4)& (0+255),w,b
  2826  0104D4  0104               	movlb	4	; () banked
  2827  0104D6  5B2A               	subwfb	(main_loop@lastSum+2)& (0+255),f,b
  2828  0104D8  0100               	movlb	0	; () banked
  2829  0104DA  51D1               	movf	(??_main_loop+5)& (0+255),w,b
  2830  0104DC  0104               	movlb	4	; () banked
  2831  0104DE  5B2B               	subwfb	(main_loop@lastSum+3)& (0+255),f,b
  2832                           
  2833                           ; BSR set to: 4
  2834                           ;main.c: 197:         lastSum += sample;
  2835  0104E0  51B5               	movf	main_loop@sample& (0+255),w,b
  2836  0104E2  2728               	addwf	main_loop@lastSum& (0+255),f,b
  2837  0104E4  51B6               	movf	(main_loop@sample+1)& (0+255),w,b
  2838  0104E6  2329               	addwfc	(main_loop@lastSum+1)& (0+255),f,b
  2839  0104E8  51B7               	movf	(main_loop@sample+2)& (0+255),w,b
  2840  0104EA  232A               	addwfc	(main_loop@lastSum+2)& (0+255),f,b
  2841  0104EC  51B8               	movf	(main_loop@sample+3)& (0+255),w,b
  2842  0104EE  232B               	addwfc	(main_loop@lastSum+3)& (0+255),f,b
  2843                           
  2844                           ; BSR set to: 4
  2845                           ;main.c: 198:         last[(counter / 50) % 20] = sample;
  2846  0104F0  0E32               	movlw	50
  2847  0104F2  6E05               	movwf	___lldiv@divisor^0,c
  2848  0104F4  0E00               	movlw	0
  2849  0104F6  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2850  0104F8  0E00               	movlw	0
  2851  0104FA  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2852  0104FC  0E00               	movlw	0
  2853  0104FE  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2854  010500  0061  F2F4  F001   	movff	main_loop@counter,___lldiv@dividend
  2855  010506  0061  F2F8  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2856  01050C  0061  F2FC  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2857  010512  0061  F300  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2858  010518  EC52  F09E         	call	___lldiv	;wreg free
  2859  01051C  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2860  010522  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2861  010528  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2862  01052E  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2863  010534  0E14               	movlw	20
  2864  010536  6E12               	movwf	___llmod@divisor^0,c
  2865  010538  0E00               	movlw	0
  2866  01053A  6E13               	movwf	(___llmod@divisor+1)^0,c
  2867  01053C  0E00               	movlw	0
  2868  01053E  6E14               	movwf	(___llmod@divisor+2)^0,c
  2869  010540  0E00               	movlw	0
  2870  010542  6E15               	movwf	(___llmod@divisor+3)^0,c
  2871  010544  ECC7  F09F         	call	___llmod	;wreg free
  2872  010548  90D8               	bcf	status,0,c
  2873  01054A  360E               	rlcf	?___llmod^0,f,c
  2874  01054C  360F               	rlcf	(?___llmod+1)^0,f,c
  2875  01054E  0E00               	movlw	low main_loop@last
  2876  010550  240E               	addwf	?___llmod^0,w,c
  2877  010552  6ED9               	movwf	fsr2l,c
  2878  010554  0E04               	movlw	high main_loop@last
  2879  010556  200F               	addwfc	(?___llmod+1)^0,w,c
  2880  010558  6EDA               	movwf	fsr2h,c
  2881  01055A  0061  F2D7  FFDE   	movff	main_loop@sample,postinc2
  2882  010560  0061  F2DB  FFDD   	movff	main_loop@sample+1,postdec2
  2883                           
  2884                           ;main.c: 200:         updateButtonLight(counter);
  2885  010566  0061  F2F4  F01B   	movff	main_loop@counter,updateButtonLight@step
  2886  01056C  0061  F2F8  F01C   	movff	main_loop@counter+1,updateButtonLight@step+1
  2887  010572  0061  F2FC  F01D   	movff	main_loop@counter+2,updateButtonLight@step+2
  2888  010578  0061  F300  F01E   	movff	main_loop@counter+3,updateButtonLight@step+3
  2889  01057E  EC7A  F09A         	call	_updateButtonLight	;wreg free
  2890  010582                     l6232:
  2891                           
  2892                           ;main.c: 203:     if (counter % 1000 == 999) {
  2893  010582  0061  F2F4  F00E   	movff	main_loop@counter,___llmod@dividend
  2894  010588  0061  F2F8  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2895  01058E  0061  F2FC  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2896  010594  0061  F300  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2897  01059A  0EE8               	movlw	232
  2898  01059C  6E12               	movwf	___llmod@divisor^0,c
  2899  01059E  0E03               	movlw	3
  2900  0105A0  6E13               	movwf	(___llmod@divisor+1)^0,c
  2901  0105A2  0E00               	movlw	0
  2902  0105A4  6E14               	movwf	(___llmod@divisor+2)^0,c
  2903  0105A6  0E00               	movlw	0
  2904  0105A8  6E15               	movwf	(___llmod@divisor+3)^0,c
  2905  0105AA  ECC7  F09F         	call	___llmod	;wreg free
  2906  0105AE  0EE7               	movlw	231
  2907  0105B0  180E               	xorwf	?___llmod^0,w,c
  2908  0105B2  E149               	bnz	l6264
  2909  0105B4  0E03               	movlw	3
  2910  0105B6  180F               	xorwf	(?___llmod+1)^0,w,c
  2911  0105B8  1010               	iorwf	(?___llmod+2)^0,w,c
  2912  0105BA  1011               	iorwf	(?___llmod+3)^0,w,c
  2913  0105BC  A4D8               	btfss	status,2,c
  2914  0105BE  D043               	goto	l6264
  2915                           
  2916                           ;main.c: 204:         PORTCbits.RC0 = !PORTCbits.RC1;
  2917  0105C0  B2CC               	btfsc	204,1,c	;volatile
  2918  0105C2  D004               	goto	u8120
  2919  0105C4  0100               	movlb	0	; () banked
  2920  0105C6  6BCC               	clrf	??_main_loop& (0+255),b
  2921  0105C8  2BCC               	incf	??_main_loop& (0+255),f,b
  2922  0105CA  D002               	goto	u8138
  2923  0105CC                     u8120:
  2924  0105CC  0100               	movlb	0	; () banked
  2925  0105CE  6BCC               	clrf	??_main_loop& (0+255),b
  2926  0105D0                     u8138:
  2927  0105D0  50CC               	movf	204,w,c	;volatile
  2928  0105D2  19CC               	xorwf	??_main_loop& (0+255),w,b
  2929  0105D4  0BFE               	andlw	-2
  2930  0105D6  19CC               	xorwf	??_main_loop& (0+255),w,b
  2931  0105D8  6ECC               	movwf	204,c	;volatile
  2932                           
  2933                           ; BSR set to: 0
  2934                           ;main.c: 206:         ADPCH = 0b010110;
  2935  0105DA  0E16               	movlw	22
  2936  0105DC  013E               	movlb	62	; () banked
  2937  0105DE  6FF1               	movwf	241,b	;volatile
  2938                           
  2939                           ; BSR set to: 62
  2940                           ;main.c: 207:         ADCON0bits.FM = 0;
  2941  0105E0  0EF3               	movlw	-13
  2942  0105E2  17F8               	andwf	248,f,b	;volatile
  2943                           
  2944                           ; BSR set to: 62
  2945                           ;main.c: 208:         ADCON0bits.GO = 1;
  2946  0105E4  81F8               	bsf	248,0,b	;volatile
  2947                           
  2948                           ;main.c: 209:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  2949  0105E6  D004               	goto	l6244
  2950  0105E8                     l6242:
  2951                           
  2952                           ; BSR set to: 62
  2953  0105E8  0E05               	movlw	5
  2954  0105EA                     u8427:
  2955  0105EA  2EE8               	decfsz	wreg,f,c
  2956  0105EC  D7FE               	bra	u8427
  2957  0105EE  F000               	nop	
  2958  0105F0                     l6244:
  2959  0105F0  013E               	movlb	62	; () banked
  2960  0105F2  B1F8               	btfsc	248,0,b	;volatile
  2961  0105F4  D7F9               	goto	l6242
  2962                           
  2963                           ; BSR set to: 62
  2964                           ;main.c: 210:         ledBrightness = ADRESH / 4;
  2965  0105F6  006F FBC0  F0CC    	movff	16112,??_main_loop	;volatile
  2966  0105FC  0100               	movlb	0	; () banked
  2967  0105FE  90D8               	bcf	status,0,c
  2968  010600  33CC               	rrcf	??_main_loop& (0+255),f,b
  2969  010602  90D8               	bcf	status,0,c
  2970  010604  33CC               	rrcf	??_main_loop& (0+255),f,b
  2971  010606  51CC               	movf	??_main_loop& (0+255),w,b
  2972  010608  6FE6               	movwf	_ledBrightness& (0+255),b
  2973  01060A  6BE7               	clrf	(_ledBrightness+1)& (0+255),b
  2974  01060C  6BE8               	clrf	(_ledBrightness+2)& (0+255),b
  2975  01060E  6BE9               	clrf	(_ledBrightness+3)& (0+255),b
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;main.c: 211:         ADCON0bits.FM = 1;
  2979  010610  013E               	movlb	62	; () banked
  2980  010612  51F8               	movf	248,w,b	;volatile
  2981  010614  0BF3               	andlw	-13
  2982  010616  0904               	iorlw	4
  2983  010618  6FF8               	movwf	248,b	;volatile
  2984                           
  2985                           ; BSR set to: 62
  2986                           ;main.c: 213:         if (!PORTCbits.RC2) ampFault = 1;
  2987  01061A  B4CC               	btfsc	204,2,c	;volatile
  2988  01061C  D003               	goto	l6254
  2989                           
  2990                           ; BSR set to: 62
  2991  01061E  0E01               	movlw	1
  2992  010620  0104               	movlb	4	; () banked
  2993  010622  6F35               	movwf	main_loop@ampFault& (0+255),b
  2994  010624                     l6254:
  2995                           
  2996                           ;main.c: 214:         if (!PORTCbits.RC3) clipCount++;
  2997  010624  B6CC               	btfsc	204,3,c	;volatile
  2998  010626  D003               	goto	l6258
  2999  010628  0104               	movlb	4	; () banked
  3000  01062A  4B30               	infsnz	main_loop@clipCount& (0+255),f,b
  3001  01062C  2B31               	incf	(main_loop@clipCount+1)& (0+255),f,b
  3002  01062E                     l6258:
  3003                           
  3004                           ;main.c: 215:         if (clipCount > 20) ampFault = 1;
  3005  01062E  0104               	movlb	4	; () banked
  3006  010630  5131               	movf	(main_loop@clipCount+1)& (0+255),w,b
  3007  010632  E104               	bnz	u8170
  3008  010634  0E15               	movlw	21
  3009  010636  5D30               	subwf	main_loop@clipCount& (0+255),w,b
  3010  010638  A0D8               	btfss	status,0,c
  3011  01063A  D002               	goto	l303
  3012  01063C                     u8170:
  3013                           
  3014                           ; BSR set to: 4
  3015  01063C  0E01               	movlw	1
  3016  01063E  6F35               	movwf	main_loop@ampFault& (0+255),b
  3017  010640                     l303:
  3018                           
  3019                           ; BSR set to: 4
  3020                           ;main.c: 216:         if (ampFault) LATC4 = 1;
  3021  010640  5135               	movf	main_loop@ampFault& (0+255),w,b
  3022  010642  A4D8               	btfss	status,2,c
  3023                           
  3024                           ; BSR set to: 4
  3025  010644  88BC               	bsf	16316,4,c	;volatile
  3026  010646                     l6264:
  3027                           
  3028                           ;main.c: 224:     if (counter % 10000 == 9999) {
  3029  010646  0061  F2F4  F00E   	movff	main_loop@counter,___llmod@dividend
  3030  01064C  0061  F2F8  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  3031  010652  0061  F2FC  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  3032  010658  0061  F300  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  3033  01065E  0E10               	movlw	16
  3034  010660  6E12               	movwf	___llmod@divisor^0,c
  3035  010662  0E27               	movlw	39
  3036  010664  6E13               	movwf	(___llmod@divisor+1)^0,c
  3037  010666  0E00               	movlw	0
  3038  010668  6E14               	movwf	(___llmod@divisor+2)^0,c
  3039  01066A  0E00               	movlw	0
  3040  01066C  6E15               	movwf	(___llmod@divisor+3)^0,c
  3041  01066E  ECC7  F09F         	call	___llmod	;wreg free
  3042  010672  0E0F               	movlw	15
  3043  010674  180E               	xorwf	?___llmod^0,w,c
  3044  010676  E14C               	bnz	l6292
  3045  010678  0E27               	movlw	39
  3046  01067A  180F               	xorwf	(?___llmod+1)^0,w,c
  3047  01067C  1010               	iorwf	(?___llmod+2)^0,w,c
  3048  01067E  1011               	iorwf	(?___llmod+3)^0,w,c
  3049  010680  A4D8               	btfss	status,2,c
  3050  010682  D046               	goto	l6292
  3051                           
  3052                           ;main.c: 225:         uart_send(volCheckCmd, 3);
  3053  010684  0E01               	movlw	low _volCheckCmd
  3054  010686  6E0C               	movwf	uart_send@buf^0,c
  3055  010688  0EFF               	movlw	high _volCheckCmd
  3056  01068A  6E0D               	movwf	(uart_send@buf+1)^0,c
  3057  01068C  0E03               	movlw	3
  3058  01068E  6E0E               	movwf	uart_send@len^0,c
  3059  010690  EC19  F09F         	call	_uart_send	;wreg free
  3060                           
  3061                           ; BSR set to: 59
  3062                           ;main.c: 227:         lcd_set_data_addr(0x40);
  3063  010694  0E40               	movlw	64
  3064  010696  EC24  F0A2         	call	_lcd_set_data_addr
  3065                           
  3066                           ;main.c: 228:         if (ampFault) lcd_print("AMPLIFIER FAULT!");
  3067  01069A  0104               	movlb	4	; () banked
  3068  01069C  5135               	movf	main_loop@ampFault& (0+255),w,b
  3069  01069E  B4D8               	btfsc	status,2,c
  3070  0106A0  D007               	goto	l6274
  3071                           
  3072                           ; BSR set to: 4
  3073  0106A2  0EAB               	movlw	low STR_1
  3074  0106A4  6E05               	movwf	lcd_print@string^0,c
  3075  0106A6  0EFF               	movlw	high STR_1
  3076  0106A8  6E06               	movwf	(lcd_print@string+1)^0,c
  3077  0106AA  ECC6  F09D         	call	_lcd_print	;wreg free
  3078  0106AE  D057               	goto	l6296
  3079  0106B0                     l6274:
  3080                           
  3081                           ; BSR set to: 4
  3082  0106B0  5134               	movf	main_loop@batCutoff& (0+255),w,b
  3083  0106B2  B4D8               	btfsc	status,2,c
  3084  0106B4  D007               	goto	l6278
  3085                           
  3086                           ; BSR set to: 4
  3087  0106B6  0EBC               	movlw	low STR_2
  3088  0106B8  6E05               	movwf	lcd_print@string^0,c
  3089  0106BA  0EFF               	movlw	high STR_2
  3090  0106BC  6E06               	movwf	(lcd_print@string+1)^0,c
  3091  0106BE  ECC6  F09D         	call	_lcd_print	;wreg free
  3092  0106C2  D04D               	goto	l6296
  3093  0106C4                     l6278:
  3094                           
  3095                           ; BSR set to: 4
  3096  0106C4  5138               	movf	_pairing& (0+255),w,b
  3097  0106C6  B4D8               	btfsc	status,2,c
  3098  0106C8  D007               	goto	l6282
  3099                           
  3100                           ; BSR set to: 4
  3101  0106CA  0E67               	movlw	low STR_3
  3102  0106CC  6E05               	movwf	lcd_print@string^0,c
  3103  0106CE  0EFF               	movlw	high STR_3
  3104  0106D0  6E06               	movwf	(lcd_print@string+1)^0,c
  3105  0106D2  ECC6  F09D         	call	_lcd_print	;wreg free
  3106  0106D6  D043               	goto	l6296
  3107  0106D8                     l6282:
  3108                           
  3109                           ; BSR set to: 4
  3110  0106D8  5136               	movf	_connected& (0+255),w,b
  3111  0106DA  B4D8               	btfsc	status,2,c
  3112  0106DC  D007               	goto	l6286
  3113                           
  3114                           ; BSR set to: 4
  3115  0106DE  0E78               	movlw	low STR_4
  3116  0106E0  6E05               	movwf	lcd_print@string^0,c
  3117  0106E2  0EFF               	movlw	high STR_4
  3118  0106E4  6E06               	movwf	(lcd_print@string+1)^0,c
  3119  0106E6  ECC6  F09D         	call	_lcd_print	;wreg free
  3120  0106EA  D039               	goto	l6296
  3121  0106EC                     l6286:
  3122                           
  3123                           ; BSR set to: 4
  3124  0106EC  0100               	movlb	0	; () banked
  3125  0106EE  51E5               	movf	_on& (0+255),w,b
  3126  0106F0  B4D8               	btfsc	status,2,c
  3127  0106F2  D007               	goto	l6290
  3128                           
  3129                           ; BSR set to: 0
  3130  0106F4  0E9A               	movlw	low STR_5
  3131  0106F6  6E05               	movwf	lcd_print@string^0,c
  3132  0106F8  0EFF               	movlw	high STR_5
  3133  0106FA  6E06               	movwf	(lcd_print@string+1)^0,c
  3134  0106FC  ECC6  F09D         	call	_lcd_print	;wreg free
  3135  010700  D02E               	goto	l6296
  3136  010702                     l6290:
  3137                           
  3138                           ; BSR set to: 0
  3139  010702  0E56               	movlw	low STR_6
  3140  010704  6E05               	movwf	lcd_print@string^0,c
  3141  010706  0EFF               	movlw	high STR_6
  3142  010708  6E06               	movwf	(lcd_print@string+1)^0,c
  3143  01070A  ECC6  F09D         	call	_lcd_print	;wreg free
  3144  01070E  D027               	goto	l6296
  3145  010710                     l6292:
  3146  010710  0061  F2F4  F00E   	movff	main_loop@counter,___llmod@dividend
  3147  010716  0061  F2F8  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  3148  01071C  0061  F2FC  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  3149  010722  0061  F300  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  3150  010728  0E10               	movlw	16
  3151  01072A  6E12               	movwf	___llmod@divisor^0,c
  3152  01072C  0E27               	movlw	39
  3153  01072E  6E13               	movwf	(___llmod@divisor+1)^0,c
  3154  010730  0E00               	movlw	0
  3155  010732  6E14               	movwf	(___llmod@divisor+2)^0,c
  3156  010734  0E00               	movlw	0
  3157  010736  6E15               	movwf	(___llmod@divisor+3)^0,c
  3158  010738  ECC7  F09F         	call	___llmod	;wreg free
  3159  01073C  0E87               	movlw	135
  3160  01073E  180E               	xorwf	?___llmod^0,w,c
  3161  010740  E10E               	bnz	l6296
  3162  010742  0E13               	movlw	19
  3163  010744  180F               	xorwf	(?___llmod+1)^0,w,c
  3164  010746  1010               	iorwf	(?___llmod+2)^0,w,c
  3165  010748  1011               	iorwf	(?___llmod+3)^0,w,c
  3166  01074A  A4D8               	btfss	status,2,c
  3167  01074C  D008               	goto	l6296
  3168                           
  3169                           ;main.c: 235:         uart_send(stateCheckCmd, 2);
  3170  01074E  0E04               	movlw	low _stateCheckCmd
  3171  010750  6E0C               	movwf	uart_send@buf^0,c
  3172  010752  0EFF               	movlw	high _stateCheckCmd
  3173  010754  6E0D               	movwf	(uart_send@buf+1)^0,c
  3174  010756  0E02               	movlw	2
  3175  010758  6E0E               	movwf	uart_send@len^0,c
  3176  01075A  EC19  F09F         	call	_uart_send	;wreg free
  3177  01075E                     l6296:
  3178                           
  3179                           ;main.c: 238:     if (++counter >= 100000) {
  3180  01075E  0E01               	movlw	1
  3181  010760  0104               	movlb	4	; () banked
  3182  010762  27BD               	addwf	main_loop@counter& (0+255),f,b
  3183  010764  0E00               	movlw	0
  3184  010766  23BE               	addwfc	(main_loop@counter+1)& (0+255),f,b
  3185  010768  23BF               	addwfc	(main_loop@counter+2)& (0+255),f,b
  3186  01076A  23C0               	addwfc	(main_loop@counter+3)& (0+255),f,b
  3187  01076C  51C0               	movf	(main_loop@counter+3)& (0+255),w,b
  3188  01076E  E108               	bnz	u8260
  3189  010770  0EA0               	movlw	160
  3190  010772  5DBD               	subwf	main_loop@counter& (0+255),w,b
  3191  010774  0E86               	movlw	134
  3192  010776  59BE               	subwfb	(main_loop@counter+1)& (0+255),w,b
  3193  010778  0E01               	movlw	1
  3194  01077A  59BF               	subwfb	(main_loop@counter+2)& (0+255),w,b
  3195  01077C  A0D8               	btfss	status,0,c
  3196  01077E  D1F4               	goto	l6370
  3197  010780                     u8260:
  3198                           
  3199                           ; BSR set to: 4
  3200                           ;main.c: 239:         ADPCH = 0b011011;
  3201  010780  0E1B               	movlw	27
  3202  010782  013E               	movlb	62	; () banked
  3203  010784  6FF1               	movwf	241,b	;volatile
  3204                           
  3205                           ; BSR set to: 62
  3206                           ;main.c: 240:         ADCON0bits.GO = 1;
  3207  010786  81F8               	bsf	248,0,b	;volatile
  3208                           
  3209                           ;main.c: 241:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  3210  010788  D004               	goto	l6304
  3211  01078A                     l6302:
  3212                           
  3213                           ; BSR set to: 62
  3214  01078A  0E05               	movlw	5
  3215  01078C                     u8437:
  3216  01078C  2EE8               	decfsz	wreg,f,c
  3217  01078E  D7FE               	bra	u8437
  3218  010790  F000               	nop	
  3219  010792                     l6304:
  3220  010792  013E               	movlb	62	; () banked
  3221  010794  B1F8               	btfsc	248,0,b	;volatile
  3222  010796  D7F9               	goto	l6302
  3223                           
  3224                           ; BSR set to: 62
  3225                           ;main.c: 242:         uint16_t batlvl = ((ADRESH << 8) | ADRESL);
  3226  010798  51EF               	movf	239,w,b	;volatile
  3227  01079A  006F FBC0  F0CC    	movff	16112,??_main_loop	;volatile
  3228  0107A0  0100               	movlb	0	; () banked
  3229  0107A2  6BCD               	clrf	(??_main_loop+1)& (0+255),b
  3230  0107A4  0060  F330  F0CD   	movff	??_main_loop,??_main_loop+1
  3231  0107AA  6BCC               	clrf	??_main_loop& (0+255),b
  3232  0107AC  11CC               	iorwf	??_main_loop& (0+255),w,b
  3233  0107AE  0104               	movlb	4	; () banked
  3234  0107B0  6FB3               	movwf	main_loop@batlvl& (0+255),b
  3235  0107B2  0100               	movlb	0	; () banked
  3236  0107B4  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  3237  0107B6  0104               	movlb	4	; () banked
  3238  0107B8  6FB4               	movwf	(main_loop@batlvl+1)& (0+255),b
  3239                           
  3240                           ; BSR set to: 4
  3241                           ;main.c: 243:         char batmsg[17];;main.c: 244:         if (batlvl < 2000.0f) {
  3242  0107BA  0061  F2CC  F001   	movff	main_loop@batlvl,___xxtofl@val
  3243  0107C0  0061  F2D0  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3244  0107C6  6A03               	clrf	(___xxtofl@val+2)^0,c
  3245  0107C8  6A04               	clrf	(___xxtofl@val+3)^0,c
  3246  0107CA  0E00               	movlw	0
  3247  0107CC  ECCD  F098         	call	___xxtofl
  3248  0107D0  0060  F004  F051   	movff	?___xxtofl,___flge@ff1
  3249  0107D6  0060  F008  F052   	movff	?___xxtofl+1,___flge@ff1+1
  3250  0107DC  0060  F00C  F053   	movff	?___xxtofl+2,___flge@ff1+2
  3251  0107E2  0060  F010  F054   	movff	?___xxtofl+3,___flge@ff1+3
  3252  0107E8  0E00               	movlw	0
  3253  0107EA  6E55               	movwf	___flge@ff2^0,c
  3254  0107EC  0E00               	movlw	0
  3255  0107EE  6E56               	movwf	(___flge@ff2+1)^0,c
  3256  0107F0  0EFA               	movlw	250
  3257  0107F2  6E57               	movwf	(___flge@ff2+2)^0,c
  3258  0107F4  0E44               	movlw	68
  3259  0107F6  6E58               	movwf	(___flge@ff2+3)^0,c
  3260  0107F8  EC58  F09B         	call	___flge	;wreg free
  3261  0107FC  B0D8               	btfsc	status,0,c
  3262  0107FE  D01C               	goto	l6318
  3263                           
  3264                           ;main.c: 245:             bat_percent = 100.0f;
  3265  010800  0E00               	movlw	0
  3266  010802  0100               	movlb	0	; () banked
  3267  010804  6FEA               	movwf	_bat_percent& (0+255),b
  3268  010806  0E00               	movlw	0
  3269  010808  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3270  01080A  0EC8               	movlw	200
  3271  01080C  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3272  01080E  0E42               	movlw	66
  3273  010810  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;main.c: 246:             sprintf(batmsg, "No Battery      ");
  3277  010812  0E8A               	movlw	low main_loop@batmsg
  3278  010814  6FBB               	movwf	sprintf@s& (0+255),b
  3279  010816  0E04               	movlw	high main_loop@batmsg
  3280  010818  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3281  01081A  0E89               	movlw	low STR_7
  3282  01081C  6FBD               	movwf	sprintf@fmt& (0+255),b
  3283  01081E  0EFF               	movlw	high STR_7
  3284  010820  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3285  010822  EC42  F0A1         	call	_sprintf	;wreg free
  3286                           
  3287                           ; BSR set to: 0
  3288                           ;main.c: 247:             batCutoff = 0;
  3289  010826  0E00               	movlw	0
  3290  010828  0104               	movlb	4	; () banked
  3291  01082A  6F34               	movwf	main_loop@batCutoff& (0+255),b
  3292                           
  3293                           ; BSR set to: 4
  3294                           ;main.c: 248:             LATC4 = ampFault;
  3295  01082C  B135               	btfsc	main_loop@ampFault& (0+255),0,b
  3296  01082E  D002               	bra	u8295
  3297  010830  98BC               	bcf	16316,4,c	;volatile
  3298  010832  D001               	bra	u8296
  3299  010834                     u8295:
  3300  010834  D03A               	goto	l6326
  3301  010836                     u8296:
  3302                           
  3303                           ;main.c: 249:         } else if (batlvl < 2180.0f - 50) {
  3304  010836  D182               	goto	l6362
  3305  010838                     l6318:
  3306  010838  0061  F2CC  F001   	movff	main_loop@batlvl,___xxtofl@val
  3307  01083E  0061  F2D0  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3308  010844  6A03               	clrf	(___xxtofl@val+2)^0,c
  3309  010846  6A04               	clrf	(___xxtofl@val+3)^0,c
  3310  010848  0E00               	movlw	0
  3311  01084A  ECCD  F098         	call	___xxtofl
  3312  01084E  0060  F004  F051   	movff	?___xxtofl,___flge@ff1
  3313  010854  0060  F008  F052   	movff	?___xxtofl+1,___flge@ff1+1
  3314  01085A  0060  F00C  F053   	movff	?___xxtofl+2,___flge@ff1+2
  3315  010860  0060  F010  F054   	movff	?___xxtofl+3,___flge@ff1+3
  3316  010866  0E00               	movlw	0
  3317  010868  6E55               	movwf	___flge@ff2^0,c
  3318  01086A  0E20               	movlw	32
  3319  01086C  6E56               	movwf	(___flge@ff2+1)^0,c
  3320  01086E  0E05               	movlw	5
  3321  010870  6E57               	movwf	(___flge@ff2+2)^0,c
  3322  010872  0E45               	movlw	69
  3323  010874  6E58               	movwf	(___flge@ff2+3)^0,c
  3324  010876  EC58  F09B         	call	___flge	;wreg free
  3325  01087A  B0D8               	btfsc	status,0,c
  3326  01087C  D018               	goto	l6328
  3327                           
  3328                           ;main.c: 250:             bat_percent = 0.0f;
  3329  01087E  0E00               	movlw	0
  3330  010880  0100               	movlb	0	; () banked
  3331  010882  6FEA               	movwf	_bat_percent& (0+255),b
  3332  010884  0E00               	movlw	0
  3333  010886  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3334  010888  0E00               	movlw	0
  3335  01088A  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3336  01088C  0E00               	movlw	0
  3337  01088E  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;main.c: 251:             sprintf(batmsg, "Battery critical");
  3341  010890  0E8A               	movlw	low main_loop@batmsg
  3342  010892  6FBB               	movwf	sprintf@s& (0+255),b
  3343  010894  0E04               	movlw	high main_loop@batmsg
  3344  010896  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3345  010898  0ECD               	movlw	low STR_8
  3346  01089A  6FBD               	movwf	sprintf@fmt& (0+255),b
  3347  01089C  0EFF               	movlw	high STR_8
  3348  01089E  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3349  0108A0  EC42  F0A1         	call	_sprintf	;wreg free
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;main.c: 252:             batCutoff = 1;
  3353  0108A4  0E01               	movlw	1
  3354  0108A6  0104               	movlb	4	; () banked
  3355  0108A8  6F34               	movwf	main_loop@batCutoff& (0+255),b
  3356  0108AA                     l6326:
  3357                           
  3358                           ; BSR set to: 4
  3359                           ;main.c: 253:             LATC4 = 1;
  3360  0108AA  88BC               	bsf	16316,4,c	;volatile
  3361                           
  3362                           ;main.c: 254:         } else if (!batCutoff) {
  3363  0108AC  D147               	goto	l6362
  3364  0108AE                     l6328:
  3365  0108AE  0104               	movlb	4	; () banked
  3366  0108B0  5134               	movf	main_loop@batCutoff& (0+255),w,b
  3367  0108B2  A4D8               	btfss	status,2,c
  3368  0108B4  D105               	goto	l6354
  3369                           
  3370                           ; BSR set to: 4
  3371                           ;main.c: 255:             bat_percent = (batlvl - 2180.0f) / (2996.0f - 2180.0f) * 100.0
      +                          f;
  3372  0108B6  0E00               	movlw	0
  3373  0108B8  6E23               	movwf	___fldiv@a^0,c
  3374  0108BA  0E00               	movlw	0
  3375  0108BC  6E24               	movwf	(___fldiv@a+1)^0,c
  3376  0108BE  0E4C               	movlw	76
  3377  0108C0  6E25               	movwf	(___fldiv@a+2)^0,c
  3378  0108C2  0E44               	movlw	68
  3379  0108C4  6E26               	movwf	(___fldiv@a+3)^0,c
  3380  0108C6  0E00               	movlw	0
  3381  0108C8  6E13               	movwf	___fladd@a^0,c
  3382  0108CA  0E40               	movlw	64
  3383  0108CC  6E14               	movwf	(___fladd@a+1)^0,c
  3384  0108CE  0E08               	movlw	8
  3385  0108D0  6E15               	movwf	(___fladd@a+2)^0,c
  3386  0108D2  0EC5               	movlw	197
  3387  0108D4  6E16               	movwf	(___fladd@a+3)^0,c
  3388  0108D6  0061  F2CC  F001   	movff	main_loop@batlvl,___xxtofl@val
  3389  0108DC  0061  F2D0  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3390  0108E2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3391  0108E4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3392  0108E6  0E00               	movlw	0
  3393  0108E8  ECCD  F098         	call	___xxtofl
  3394  0108EC  0060  F004  F00F   	movff	?___xxtofl,___fladd@b
  3395  0108F2  0060  F008  F010   	movff	?___xxtofl+1,___fladd@b+1
  3396  0108F8  0060  F00C  F011   	movff	?___xxtofl+2,___fladd@b+2
  3397  0108FE  0060  F010  F012   	movff	?___xxtofl+3,___fladd@b+3
  3398  010904  ECB5  F092         	call	___fladd	;wreg free
  3399  010908  0060  F03C  F01F   	movff	?___fladd,___fldiv@b
  3400  01090E  0060  F040  F020   	movff	?___fladd+1,___fldiv@b+1
  3401  010914  0060  F044  F021   	movff	?___fladd+2,___fldiv@b+2
  3402  01091A  0060  F048  F022   	movff	?___fladd+3,___fldiv@b+3
  3403  010920  EC59  F094         	call	___fldiv	;wreg free
  3404  010924  0060  F07C  F038   	movff	?___fldiv,___flmul@b
  3405  01092A  0060  F080  F039   	movff	?___fldiv+1,___flmul@b+1
  3406  010930  0060  F084  F03A   	movff	?___fldiv+2,___flmul@b+2
  3407  010936  0060  F088  F03B   	movff	?___fldiv+3,___flmul@b+3
  3408  01093C  0E00               	movlw	0
  3409  01093E  6E3C               	movwf	___flmul@a^0,c
  3410  010940  0E00               	movlw	0
  3411  010942  6E3D               	movwf	(___flmul@a+1)^0,c
  3412  010944  0EC8               	movlw	200
  3413  010946  6E3E               	movwf	(___flmul@a+2)^0,c
  3414  010948  0E42               	movlw	66
  3415  01094A  6E3F               	movwf	(___flmul@a+3)^0,c
  3416  01094C  ECF3  F090         	call	___flmul	;wreg free
  3417  010950  0060  F0E0  F0EA   	movff	?___flmul,_bat_percent
  3418  010956  0060  F0E4  F0EB   	movff	?___flmul+1,_bat_percent+1
  3419  01095C  0060  F0E8  F0EC   	movff	?___flmul+2,_bat_percent+2
  3420  010962  0060  F0EC  F0ED   	movff	?___flmul+3,_bat_percent+3
  3421                           
  3422                           ;main.c: 256:             bat_percent = (bat_percent < 0.0f ? 0.0f : (bat_percent > 100.
      +                          0f ? 100.0f : bat_percent));
  3423  010968  0100               	movlb	0	; () banked
  3424  01096A  BFED               	btfsc	(_bat_percent+3)& (0+255),7,b
  3425  01096C  D03B               	goto	l6342
  3426                           
  3427                           ; BSR set to: 0
  3428  01096E  0E00               	movlw	0
  3429  010970  6E51               	movwf	___flge@ff1^0,c
  3430  010972  0E00               	movlw	0
  3431  010974  6E52               	movwf	(___flge@ff1+1)^0,c
  3432  010976  0EC8               	movlw	200
  3433  010978  6E53               	movwf	(___flge@ff1+2)^0,c
  3434  01097A  0E42               	movlw	66
  3435  01097C  6E54               	movwf	(___flge@ff1+3)^0,c
  3436  01097E  0060  F3A8  F055   	movff	_bat_percent,___flge@ff2
  3437  010984  0060  F3AC  F056   	movff	_bat_percent+1,___flge@ff2+1
  3438  01098A  0060  F3B0  F057   	movff	_bat_percent+2,___flge@ff2+2
  3439  010990  0060  F3B4  F058   	movff	_bat_percent+3,___flge@ff2+3
  3440  010996  EC58  F09B         	call	___flge	;wreg free
  3441  01099A  A0D8               	btfss	status,0,c
  3442  01099C  D00D               	goto	l6338
  3443  01099E  0060  F3A8  F4AB   	movff	_bat_percent,_main_loop$343
  3444  0109A4  0060  F3AC  F4AC   	movff	_bat_percent+1,_main_loop$343+1
  3445  0109AA  0060  F3B0  F4AD   	movff	_bat_percent+2,_main_loop$343+2
  3446  0109B0  0060  F3B4  F4AE   	movff	_bat_percent+3,_main_loop$343+3
  3447  0109B6  D009               	goto	l6340
  3448  0109B8                     l6338:
  3449  0109B8  0E00               	movlw	0
  3450  0109BA  0104               	movlb	4	; () banked
  3451  0109BC  6FAB               	movwf	_main_loop$343& (0+255),b
  3452  0109BE  0E00               	movlw	0
  3453  0109C0  6FAC               	movwf	(_main_loop$343+1)& (0+255),b
  3454  0109C2  0EC8               	movlw	200
  3455  0109C4  6FAD               	movwf	(_main_loop$343+2)& (0+255),b
  3456  0109C6  0E42               	movlw	66
  3457  0109C8  6FAE               	movwf	(_main_loop$343+3)& (0+255),b
  3458  0109CA                     l6340:
  3459  0109CA  0061  F2AC  F0EA   	movff	_main_loop$343,_bat_percent
  3460  0109D0  0061  F2B0  F0EB   	movff	_main_loop$343+1,_bat_percent+1
  3461  0109D6  0061  F2B4  F0EC   	movff	_main_loop$343+2,_bat_percent+2
  3462  0109DC  0061  F2B8  F0ED   	movff	_main_loop$343+3,_bat_percent+3
  3463  0109E2  D008               	goto	l6344
  3464  0109E4                     l6342:
  3465                           
  3466                           ; BSR set to: 0
  3467  0109E4  0E00               	movlw	0
  3468  0109E6  6FEA               	movwf	_bat_percent& (0+255),b
  3469  0109E8  0E00               	movlw	0
  3470  0109EA  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3471  0109EC  0E00               	movlw	0
  3472  0109EE  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3473  0109F0  0E00               	movlw	0
  3474  0109F2  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3475  0109F4                     l6344:
  3476                           
  3477                           ;main.c: 257:             if (!PORTDbits.RD2) sprintf(batmsg, "Chg fault: %3.0f%% ", bat
      +                          _percent);
  3478  0109F4  B4CD               	btfsc	205,2,c	;volatile
  3479  0109F6  D018               	goto	l335
  3480  0109F8  0E8A               	movlw	low main_loop@batmsg
  3481  0109FA  0100               	movlb	0	; () banked
  3482  0109FC  6FBB               	movwf	sprintf@s& (0+255),b
  3483  0109FE  0E04               	movlw	high main_loop@batmsg
  3484  010A00  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3485  010A02  0E42               	movlw	low STR_9
  3486  010A04  6FBD               	movwf	sprintf@fmt& (0+255),b
  3487  010A06  0EFF               	movlw	high STR_9
  3488  010A08  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3489  010A0A  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3490  010A10  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3491  010A16  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3492  010A1C  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3493  010A22  EC42  F0A1         	call	_sprintf	;wreg free
  3494  010A26  D08A               	goto	l6362
  3495  010A28                     l335:
  3496  010A28  B2CD               	btfsc	205,1,c	;volatile
  3497  010A2A  D018               	goto	l337
  3498  010A2C  0E8A               	movlw	low main_loop@batmsg
  3499  010A2E  0100               	movlb	0	; () banked
  3500  010A30  6FBB               	movwf	sprintf@s& (0+255),b
  3501  010A32  0E04               	movlw	high main_loop@batmsg
  3502  010A34  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3503  010A36  0E1A               	movlw	low STR_10
  3504  010A38  6FBD               	movwf	sprintf@fmt& (0+255),b
  3505  010A3A  0EFF               	movlw	high STR_10
  3506  010A3C  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3507  010A3E  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3508  010A44  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3509  010A4A  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3510  010A50  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3511  010A56  EC42  F0A1         	call	_sprintf	;wreg free
  3512  010A5A  D070               	goto	l6362
  3513  010A5C                     l337:
  3514  010A5C  B0CD               	btfsc	205,0,c	;volatile
  3515  010A5E  D018               	goto	l6352
  3516  010A60  0E8A               	movlw	low main_loop@batmsg
  3517  010A62  0100               	movlb	0	; () banked
  3518  010A64  6FBB               	movwf	sprintf@s& (0+255),b
  3519  010A66  0E04               	movlw	high main_loop@batmsg
  3520  010A68  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3521  010A6A  0E2E               	movlw	low STR_11
  3522  010A6C  6FBD               	movwf	sprintf@fmt& (0+255),b
  3523  010A6E  0EFF               	movlw	high STR_11
  3524  010A70  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3525  010A72  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3526  010A78  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3527  010A7E  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3528  010A84  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3529  010A8A  EC42  F0A1         	call	_sprintf	;wreg free
  3530  010A8E  D056               	goto	l6362
  3531  010A90                     l6352:
  3532  010A90  0E8A               	movlw	low main_loop@batmsg
  3533  010A92  0100               	movlb	0	; () banked
  3534  010A94  6FBB               	movwf	sprintf@s& (0+255),b
  3535  010A96  0E04               	movlw	high main_loop@batmsg
  3536  010A98  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3537  010A9A  0E06               	movlw	low STR_12
  3538  010A9C  6FBD               	movwf	sprintf@fmt& (0+255),b
  3539  010A9E  0EFF               	movlw	high STR_12
  3540  010AA0  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3541  010AA2  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3542  010AA8  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3543  010AAE  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3544  010AB4  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3545  010ABA  EC42  F0A1         	call	_sprintf	;wreg free
  3546  010ABE  D03E               	goto	l6362
  3547  010AC0                     l6354:
  3548                           
  3549                           ; BSR set to: 4
  3550                           ;main.c: 262:             if (batlvl > 2180.0f + 50) {
  3551  010AC0  0E00               	movlw	0
  3552  010AC2  6E51               	movwf	___flge@ff1^0,c
  3553  010AC4  0E60               	movlw	96
  3554  010AC6  6E52               	movwf	(___flge@ff1+1)^0,c
  3555  010AC8  0E0B               	movlw	11
  3556  010ACA  6E53               	movwf	(___flge@ff1+2)^0,c
  3557  010ACC  0E45               	movlw	69
  3558  010ACE  6E54               	movwf	(___flge@ff1+3)^0,c
  3559  010AD0  0061  F2CC  F001   	movff	main_loop@batlvl,___xxtofl@val
  3560  010AD6  0061  F2D0  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3561  010ADC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3562  010ADE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3563  010AE0  0E00               	movlw	0
  3564  010AE2  ECCD  F098         	call	___xxtofl
  3565  010AE6  0060  F004  F055   	movff	?___xxtofl,___flge@ff2
  3566  010AEC  0060  F008  F056   	movff	?___xxtofl+1,___flge@ff2+1
  3567  010AF2  0060  F00C  F057   	movff	?___xxtofl+2,___flge@ff2+2
  3568  010AF8  0060  F010  F058   	movff	?___xxtofl+3,___flge@ff2+3
  3569  010AFE  EC58  F09B         	call	___flge	;wreg free
  3570  010B02  B0D8               	btfsc	status,0,c
  3571  010B04  D008               	goto	u8386
  3572                           
  3573                           ;main.c: 263:                 batCutoff = 0;
  3574  010B06  0E00               	movlw	0
  3575  010B08  0104               	movlb	4	; () banked
  3576  010B0A  6F34               	movwf	main_loop@batCutoff& (0+255),b
  3577                           
  3578                           ; BSR set to: 4
  3579                           ;main.c: 264:                 LATC4 = ampFault;
  3580  010B0C  B135               	btfsc	main_loop@ampFault& (0+255),0,b
  3581  010B0E  D002               	bra	u8385
  3582  010B10  98BC               	bcf	16316,4,c	;volatile
  3583  010B12  D001               	bra	u8386
  3584  010B14                     u8385:
  3585  010B14  88BC               	bsf	16316,4,c	;volatile
  3586  010B16                     u8386:
  3587                           
  3588                           ;main.c: 266:             bat_percent = 0.0f;
  3589                           
  3590                           ;main.c: 265:             }
  3591  010B16  0E00               	movlw	0
  3592  010B18  0100               	movlb	0	; () banked
  3593  010B1A  6FEA               	movwf	_bat_percent& (0+255),b
  3594  010B1C  0E00               	movlw	0
  3595  010B1E  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3596  010B20  0E00               	movlw	0
  3597  010B22  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3598  010B24  0E00               	movlw	0
  3599  010B26  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3600                           
  3601                           ; BSR set to: 0
  3602                           ;main.c: 267:             sprintf(batmsg, "Battery critical");
  3603  010B28  0E8A               	movlw	low main_loop@batmsg
  3604  010B2A  6FBB               	movwf	sprintf@s& (0+255),b
  3605  010B2C  0E04               	movlw	high main_loop@batmsg
  3606  010B2E  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3607  010B30  0ECD               	movlw	low STR_8
  3608  010B32  6FBD               	movwf	sprintf@fmt& (0+255),b
  3609  010B34  0EFF               	movlw	high STR_8
  3610  010B36  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3611  010B38  EC42  F0A1         	call	_sprintf	;wreg free
  3612  010B3C                     l6362:
  3613                           
  3614                           ;main.c: 269:         lcd_set_data_addr(0);
  3615  010B3C  0E00               	movlw	0
  3616  010B3E  EC24  F0A2         	call	_lcd_set_data_addr
  3617                           
  3618                           ;main.c: 270:         lcd_print(batmsg);
  3619  010B42  0E8A               	movlw	low main_loop@batmsg
  3620  010B44  6E05               	movwf	lcd_print@string^0,c
  3621  010B46  0E04               	movlw	high main_loop@batmsg
  3622  010B48  6E06               	movwf	(lcd_print@string+1)^0,c
  3623  010B4A  ECC6  F09D         	call	_lcd_print	;wreg free
  3624                           
  3625                           ;main.c: 271:         clipCount = 0;
  3626  010B4E  0E00               	movlw	0
  3627  010B50  0104               	movlb	4	; () banked
  3628  010B52  6F31               	movwf	(main_loop@clipCount+1)& (0+255),b
  3629  010B54  0E00               	movlw	0
  3630  010B56  6F30               	movwf	main_loop@clipCount& (0+255),b
  3631                           
  3632                           ; BSR set to: 4
  3633                           ;main.c: 273:         counter = 0;
  3634  010B58  0E00               	movlw	0
  3635  010B5A  6FBD               	movwf	main_loop@counter& (0+255),b
  3636  010B5C  0E00               	movlw	0
  3637  010B5E  6FBE               	movwf	(main_loop@counter+1)& (0+255),b
  3638  010B60  0E00               	movlw	0
  3639  010B62  6FBF               	movwf	(main_loop@counter+2)& (0+255),b
  3640  010B64  0E00               	movlw	0
  3641  010B66  6FC0               	movwf	(main_loop@counter+3)& (0+255),b
  3642  010B68                     l6370:
  3643                           
  3644                           ; BSR set to: 4
  3645                           ;main.c: 276:     uart_tasks();
  3646  010B68  EC1B  F098         	call	_uart_tasks	;wreg free
  3647  010B6C  0004               	clrwdt		;# 
  3648                           
  3649                           ;main.c: 279:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  3650  010B6E  0E35               	movlw	53
  3651  010B70                     u8447:
  3652  010B70  2EE8               	decfsz	wreg,f,c
  3653  010B72  D7FE               	bra	u8447
  3654  010B74  F000               	nop	
  3655  010B76  0012               	return		;funcret
  3656  010B78                     __end_of_main_loop:
  3657                           	opt callstack 0
  3658                           
  3659 ;; *************** function _updateButtonLight *****************
  3660 ;; Defined at:
  3661 ;;		line 94 in file "main.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;  step            4   26[COMRAM] long 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  dch             4   34[COMRAM] long 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/4
  3672 ;;		On exit  : 3B/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;Total ram usage:       12 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    1
  3682 ;; This function calls:
  3683 ;;		___aldiv
  3684 ;; This function is called by:
  3685 ;;		_main_loop
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text3
  3690  0134F4                     __ptext3:
  3691                           	opt callstack 0
  3692  0134F4                     _updateButtonLight:
  3693                           	opt callstack 28
  3694                           
  3695                           ;main.c: 95:     if (!on) {
  3696                           
  3697                           ;incstack = 0
  3698  0134F4  0100               	movlb	0	; () banked
  3699  0134F6  51E5               	movf	_on& (0+255),w,b
  3700  0134F8  A4D8               	btfss	status,2,c
  3701  0134FA  D007               	goto	l5072
  3702                           
  3703                           ; BSR set to: 0
  3704                           ;main.c: 96:         PWM6DCH = 0;
  3705  0134FC  0E00               	movlw	0
  3706  0134FE  6E69               	movwf	105,c	;volatile
  3707                           
  3708                           ;main.c: 97:         PWM6DCL = 0;
  3709  013500  0E00               	movlw	0
  3710  013502  6E68               	movwf	104,c	;volatile
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;main.c: 98:         PWM8DCH = 255;
  3714  013504  6861               	setf	97,c	;volatile
  3715  013506                     l5070:
  3716                           
  3717                           ;main.c: 99:         PWM8DCL = 255;
  3718  013506  6860               	setf	96,c	;volatile
  3719                           
  3720                           ;main.c: 100:     } else if (pairing) {
  3721  013508  0012               	return	
  3722  01350A                     l5072:
  3723                           
  3724                           ; BSR set to: 0
  3725  01350A  0104               	movlb	4	; () banked
  3726  01350C  5138               	movf	_pairing& (0+255),w,b
  3727  01350E  B4D8               	btfsc	status,2,c
  3728  013510  D060               	goto	l203
  3729                           
  3730                           ; BSR set to: 4
  3731                           ;main.c: 101:         PWM6DCH = 255;
  3732  013512  6869               	setf	105,c	;volatile
  3733                           
  3734                           ;main.c: 102:         PWM6DCL = 255;
  3735  013514  6868               	setf	104,c	;volatile
  3736                           
  3737                           ; BSR set to: 4
  3738                           ;main.c: 104:         if (step % 4096 < 2048) dch = (step % 2048) / 8;
  3739                           
  3740                           ; BSR set to: 4
  3741  013516  0EFF               	movlw	255
  3742  013518  141B               	andwf	updateButtonLight@step^0,w,c
  3743  01351A  6E1F               	movwf	??_updateButtonLight^0,c
  3744  01351C  0E0F               	movlw	15
  3745  01351E  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3746  013520  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3747  013522  0E00               	movlw	0
  3748  013524  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3749  013526  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3750  013528  0E00               	movlw	0
  3751  01352A  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3752  01352C  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3753  01352E  BE22               	btfsc	(??_updateButtonLight+3)^0,7,c
  3754  013530  D007               	goto	u6280
  3755  013532  5022               	movf	(??_updateButtonLight+3)^0,w,c
  3756  013534  1021               	iorwf	(??_updateButtonLight+2)^0,w,c
  3757  013536  E11B               	bnz	l5082
  3758  013538  0E08               	movlw	8
  3759  01353A  5C20               	subwf	(??_updateButtonLight+1)^0,w,c
  3760  01353C  B0D8               	btfsc	status,0,c
  3761  01353E  D017               	goto	l5082
  3762  013540                     u6280:
  3763                           
  3764                           ; BSR set to: 4
  3765  013540  0EFF               	movlw	255
  3766  013542  141B               	andwf	updateButtonLight@step^0,w,c
  3767  013544  6E0D               	movwf	___aldiv@dividend^0,c
  3768  013546  0E07               	movlw	7
  3769  013548  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3770  01354A  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3771  01354C  0E00               	movlw	0
  3772  01354E  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3773  013550  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3774  013552  0E00               	movlw	0
  3775  013554  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3776  013556  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3777  013558  0E08               	movlw	8
  3778  01355A  6E11               	movwf	___aldiv@divisor^0,c
  3779  01355C  0E00               	movlw	0
  3780  01355E  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3781  013560  0E00               	movlw	0
  3782  013562  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3783  013564  0E00               	movlw	0
  3784  013566  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3785  013568  ECEE  F09A         	call	___aldiv	;wreg free
  3786  01356C  D022               	goto	L1
  3787  01356E                     l5082:
  3788                           
  3789                           ; BSR set to: 4
  3790  01356E  0EFF               	movlw	255
  3791  013570  141B               	andwf	updateButtonLight@step^0,w,c
  3792  013572  6E1F               	movwf	??_updateButtonLight^0,c
  3793  013574  0E07               	movlw	7
  3794  013576  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3795  013578  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3796  01357A  0E00               	movlw	0
  3797  01357C  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3798  01357E  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3799  013580  0E00               	movlw	0
  3800  013582  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3801  013584  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3802  013586  501F               	movf	??_updateButtonLight^0,w,c
  3803  013588  0800               	sublw	0
  3804  01358A  6E0D               	movwf	___aldiv@dividend^0,c
  3805  01358C  0E08               	movlw	8
  3806  01358E  5420               	subfwb	(??_updateButtonLight+1)^0,w,c
  3807  013590  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3808  013592  0E00               	movlw	0
  3809  013594  5421               	subfwb	(??_updateButtonLight+2)^0,w,c
  3810  013596  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3811  013598  0E00               	movlw	0
  3812  01359A  5422               	subfwb	(??_updateButtonLight+3)^0,w,c
  3813  01359C  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3814  01359E  0E08               	movlw	8
  3815  0135A0  6E11               	movwf	___aldiv@divisor^0,c
  3816  0135A2  0E00               	movlw	0
  3817  0135A4  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3818  0135A6  0E00               	movlw	0
  3819  0135A8  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3820  0135AA  0E00               	movlw	0
  3821  0135AC  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3822  0135AE  ECEE  F09A         	call	___aldiv	;wreg free
  3823  0135B2                     L1:
  3824  0135B2  0060  F034  F023   	movff	?___aldiv,updateButtonLight@dch
  3825  0135B8  0060  F038  F024   	movff	?___aldiv+1,updateButtonLight@dch+1
  3826  0135BE  0060  F03C  F025   	movff	?___aldiv+2,updateButtonLight@dch+2
  3827  0135C4  0060  F040  F026   	movff	?___aldiv+3,updateButtonLight@dch+3
  3828                           
  3829                           ;main.c: 106:         PWM8DCH = dch;
  3830  0135CA  0060  F08F  FF61   	movff	updateButtonLight@dch,16225	;volatile
  3831  0135D0  D79A               	goto	l5070
  3832  0135D2                     l203:
  3833                           
  3834                           ; BSR set to: 4
  3835                           ;main.c: 109:         PWM6DCH = 255;
  3836  0135D2  6869               	setf	105,c	;volatile
  3837                           
  3838                           ;main.c: 110:         PWM6DCL = 255;
  3839  0135D4  6868               	setf	104,c	;volatile
  3840                           
  3841                           ;main.c: 111:         PWM8DCH = 255;
  3842  0135D6  6861               	setf	97,c	;volatile
  3843                           
  3844                           ;main.c: 112:         PWM8DCL = 255;
  3845  0135D8  6860               	setf	96,c	;volatile
  3846  0135DA  0012               	return		;funcret
  3847  0135DC                     __end_of_updateButtonLight:
  3848                           	opt callstack 0
  3849                           
  3850 ;; *************** function _uart_tasks *****************
  3851 ;; Defined at:
  3852 ;;		line 80 in file "uart.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;  val             1   34[COMRAM] unsigned char 
  3857 ;;  intPos          1   31[COMRAM] unsigned char 
  3858 ;;  bytePos         1   30[COMRAM] unsigned char 
  3859 ;;  posInRawMsg     1   28[COMRAM] unsigned char 
  3860 ;;  message       256    0[BANK3 ] unsigned char [256]
  3861 ;;  zeroByte        1   33[COMRAM] _Bool 
  3862 ;;  msgLen          1   32[COMRAM] unsigned char 
  3863 ;;  i               1   29[COMRAM] unsigned char 
  3864 ;;  msgOffset       1   27[COMRAM] unsigned char 
  3865 ;;  checksum        1   26[COMRAM] unsigned char 
  3866 ;;  rawMsgOffset    1   25[COMRAM] unsigned char 
  3867 ;;  rxLen           1   24[COMRAM] unsigned char 
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 3F/4
  3874 ;;		On exit  : 4/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3878 ;;      Locals:        11       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3879 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3880 ;;      Totals:        15       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3881 ;;Total ram usage:      271 bytes
  3882 ;; Hardware stack levels used:    1
  3883 ;; Hardware stack levels required when called:    3
  3884 ;; This function calls:
  3885 ;;		_handle_message
  3886 ;;		_transmitChecksum
  3887 ;; This function is called by:
  3888 ;;		_main_loop
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text4
  3893  013036                     __ptext4:
  3894                           	opt callstack 0
  3895  013036                     _uart_tasks:
  3896                           	opt callstack 26
  3897                           
  3898                           ; BSR set to: 4
  3899                           ;uart.c: 81:     static uint8_t rxPos = 0;;uart.c: 83:     if (DMA2SCNTIF) transmitCheck
      +                          sum();
  3900                           
  3901                           ;incstack = 0
  3902  013036  0139               	movlb	57	; () banked
  3903  013038  B5A5               	btfsc	165,2,b	;volatile
  3904                           
  3905                           ; BSR set to: 57
  3906  01303A  EC2F  F0A2         	call	_transmitChecksum	;wreg free
  3907                           
  3908                           ; BSR set to: 57
  3909                           ;uart.c: 85:     if (DMA1DPTRL == rxPos) return;
  3910  01303E  0100               	movlb	0	; () banked
  3911  013040  51E4               	movf	uart_tasks@rxPos& (0+255),w,b
  3912  013042  013B               	movlb	59	; () banked
  3913  013044  19EC               	xorwf	236,w,b	;volatile
  3914  013046  B4D8               	btfsc	status,2,c
  3915  013048  0012               	return	
  3916                           
  3917                           ; BSR set to: 59
  3918                           ;uart.c: 86:     uint8_t rxLen = DMA1DPTRL - rxPos;
  3919  01304A  0100               	movlb	0	; () banked
  3920  01304C  51E4               	movf	uart_tasks@rxPos& (0+255),w,b
  3921  01304E  013B               	movlb	59	; () banked
  3922  013050  5DEC               	subwf	236,w,b	;volatile
  3923  013052  6E19               	movwf	uart_tasks@rxLen^0,c
  3924                           
  3925                           ; BSR set to: 59
  3926                           ;uart.c: 87:     uint8_t i;;uart.c: 88:     _Bool zeroByte = 0;
  3927  013054  0E00               	movlw	0
  3928  013056  6E22               	movwf	uart_tasks@zeroByte^0,c
  3929                           
  3930                           ; BSR set to: 59
  3931                           ;uart.c: 89:     uint8_t msgLen = 0;
  3932  013058  0E00               	movlw	0
  3933  01305A  6E21               	movwf	uart_tasks@msgLen^0,c
  3934                           
  3935                           ; BSR set to: 59
  3936                           ;uart.c: 90:     uint8_t checksum = 0;
  3937  01305C  0E00               	movlw	0
  3938  01305E  6E1B               	movwf	uart_tasks@checksum^0,c
  3939                           
  3940                           ; BSR set to: 59
  3941                           ;uart.c: 91:     uint8_t message[256];;uart.c: 92:     uint8_t msgOffset = 0;
  3942  013060  0E00               	movlw	0
  3943  013062  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3944                           
  3945                           ; BSR set to: 59
  3946                           ;uart.c: 93:     uint8_t rawMsgOffset = 0;
  3947  013064  0E00               	movlw	0
  3948  013066  6E1A               	movwf	uart_tasks@rawMsgOffset^0,c
  3949                           
  3950                           ; BSR set to: 59
  3951                           ;uart.c: 94:     for (i = 0; i < rxLen; i++) {
  3952  013068  0E00               	movlw	0
  3953  01306A  6E1E               	movwf	uart_tasks@i^0,c
  3954  01306C  D08E               	goto	l5300
  3955  01306E                     l5238:
  3956                           
  3957                           ;uart.c: 95:         uint8_t bytePos = i - msgOffset;
  3958  01306E  501C               	movf	uart_tasks@msgOffset^0,w,c
  3959  013070  5C1E               	subwf	uart_tasks@i^0,w,c
  3960  013072  6E1F               	movwf	uart_tasks@bytePos^0,c
  3961                           
  3962                           ;uart.c: 96:         uint8_t intPos = rxPos + i;
  3963  013074  0100               	movlb	0	; () banked
  3964  013076  51E4               	movf	uart_tasks@rxPos& (0+255),w,b
  3965  013078  241E               	addwf	uart_tasks@i^0,w,c
  3966  01307A  6E20               	movwf	uart_tasks@intPos^0,c
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;uart.c: 97:         uint8_t val = rxBuf[intPos];
  3970  01307C  0E00               	movlw	0
  3971  01307E  2420               	addwf	uart_tasks@intPos^0,w,c
  3972  013080  6ED9               	movwf	fsr2l,c
  3973  013082  6ADA               	clrf	fsr2h,c
  3974  013084  0E01               	movlw	1
  3975  013086  22DA               	addwfc	fsr2h,f,c
  3976  013088  50DF               	movf	indf2,w,c
  3977  01308A  6E23               	movwf	uart_tasks@val^0,c
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;uart.c: 98:         uint8_t posInRawMsg = bytePos - (3 + zeroByte);
  3981  01308C  5022               	movf	uart_tasks@zeroByte^0,w,c
  3982  01308E  5C1F               	subwf	uart_tasks@bytePos^0,w,c
  3983  013090  0FFD               	addlw	253
  3984  013092  6E1D               	movwf	uart_tasks@posInRawMsg^0,c
  3985                           
  3986                           ; BSR set to: 0
  3987                           ;uart.c: 99:         if (bytePos == zeroByte) {
  3988  013094  5022               	movf	uart_tasks@zeroByte^0,w,c
  3989  013096  181F               	xorwf	uart_tasks@bytePos^0,w,c
  3990  013098  A4D8               	btfss	status,2,c
  3991  01309A  D011               	goto	l5258
  3992                           
  3993                           ; BSR set to: 0
  3994                           ;uart.c: 100:             if (val == 0x00 && !zeroByte) {
  3995  01309C  5023               	movf	uart_tasks@val^0,w,c
  3996  01309E  A4D8               	btfss	status,2,c
  3997  0130A0  D005               	goto	l5252
  3998                           
  3999                           ; BSR set to: 0
  4000  0130A2  5022               	movf	uart_tasks@zeroByte^0,w,c
  4001  0130A4  A4D8               	btfss	status,2,c
  4002  0130A6  D002               	goto	l5252
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;uart.c: 101:                 zeroByte = 1;
  4006  0130A8  0E01               	movlw	1
  4007  0130AA  D007               	goto	L2
  4008  0130AC                     l5252:
  4009                           
  4010                           ; BSR set to: 0
  4011  0130AC  0EAA               	movlw	170
  4012  0130AE  1823               	xorwf	uart_tasks@val^0,w,c
  4013  0130B0  B4D8               	btfsc	status,2,c
  4014  0130B2  D06A               	goto	l5298
  4015                           
  4016                           ; BSR set to: 0
  4017                           ;uart.c: 103:                 msgOffset = intPos + 1;
  4018  0130B4  2820               	incf	uart_tasks@intPos^0,w,c
  4019  0130B6  6E1C               	movwf	uart_tasks@msgOffset^0,c
  4020                           
  4021                           ; BSR set to: 0
  4022                           ;uart.c: 104:                 zeroByte = 0;
  4023  0130B8  0E00               	movlw	0
  4024  0130BA                     L2:
  4025  0130BA  6E22               	movwf	uart_tasks@zeroByte^0,c
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;uart.c: 106:         } else if (bytePos == 1 + zeroByte) {
  4029  0130BC  D065               	goto	l5298
  4030  0130BE                     l5258:
  4031                           
  4032                           ; BSR set to: 0
  4033  0130BE  501F               	movf	uart_tasks@bytePos^0,w,c
  4034  0130C0  6E15               	movwf	??_uart_tasks^0,c
  4035  0130C2  6A16               	clrf	(??_uart_tasks+1)^0,c
  4036  0130C4  5022               	movf	uart_tasks@zeroByte^0,w,c
  4037  0130C6  6E17               	movwf	(??_uart_tasks+2)^0,c
  4038  0130C8  6A18               	clrf	(??_uart_tasks+3)^0,c
  4039  0130CA  0E01               	movlw	1
  4040  0130CC  2617               	addwf	(??_uart_tasks+2)^0,f,c
  4041  0130CE  0E00               	movlw	0
  4042  0130D0  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  4043  0130D2  5015               	movf	??_uart_tasks^0,w,c
  4044  0130D4  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  4045  0130D6  E107               	bnz	l5262
  4046  0130D8  5016               	movf	(??_uart_tasks+1)^0,w,c
  4047  0130DA  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  4048  0130DC  A4D8               	btfss	status,2,c
  4049  0130DE  D003               	goto	l5262
  4050  0130E0                     u6560:
  4051                           
  4052                           ; BSR set to: 0
  4053                           ;uart.c: 107:             checksum += val;
  4054  0130E0  5023               	movf	uart_tasks@val^0,w,c
  4055  0130E2  261B               	addwf	uart_tasks@checksum^0,f,c
  4056                           
  4057                           ;uart.c: 108:         } else if (bytePos == 2 + zeroByte) {
  4058  0130E4  D051               	goto	l5298
  4059  0130E6                     l5262:
  4060                           
  4061                           ; BSR set to: 0
  4062  0130E6  501F               	movf	uart_tasks@bytePos^0,w,c
  4063  0130E8  6E15               	movwf	??_uart_tasks^0,c
  4064  0130EA  6A16               	clrf	(??_uart_tasks+1)^0,c
  4065  0130EC  5022               	movf	uart_tasks@zeroByte^0,w,c
  4066  0130EE  6E17               	movwf	(??_uart_tasks+2)^0,c
  4067  0130F0  6A18               	clrf	(??_uart_tasks+3)^0,c
  4068  0130F2  0E02               	movlw	2
  4069  0130F4  2617               	addwf	(??_uart_tasks+2)^0,f,c
  4070  0130F6  0E00               	movlw	0
  4071  0130F8  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  4072  0130FA  5015               	movf	??_uart_tasks^0,w,c
  4073  0130FC  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  4074  0130FE  E113               	bnz	l5276
  4075  013100  5016               	movf	(??_uart_tasks+1)^0,w,c
  4076  013102  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  4077  013104  A4D8               	btfss	status,2,c
  4078  013106  D00F               	goto	l5276
  4079                           
  4080                           ; BSR set to: 0
  4081                           ;uart.c: 109:             msgLen = val;
  4082  013108  0060  F08C  F021   	movff	uart_tasks@val,uart_tasks@msgLen
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;uart.c: 110:             checksum += val;
  4086  01310E  5023               	movf	uart_tasks@val^0,w,c
  4087  013110  261B               	addwf	uart_tasks@checksum^0,f,c
  4088                           
  4089                           ; BSR set to: 0
  4090                           ;uart.c: 111:             if (msgLen == 0) {
  4091  013112  5021               	movf	uart_tasks@msgLen^0,w,c
  4092  013114  A4D8               	btfss	status,2,c
  4093  013116  D038               	goto	l5298
  4094                           
  4095                           ; BSR set to: 0
  4096                           ;uart.c: 112:                 msgOffset = intPos + 1;
  4097  013118  2820               	incf	uart_tasks@intPos^0,w,c
  4098  01311A  6E1C               	movwf	uart_tasks@msgOffset^0,c
  4099                           
  4100                           ; BSR set to: 0
  4101                           ;uart.c: 113:                 zeroByte = 0;
  4102  01311C  0E00               	movlw	0
  4103  01311E  6E22               	movwf	uart_tasks@zeroByte^0,c
  4104  013120                     l5274:
  4105                           
  4106                           ;uart.c: 114:                 checksum = 0;
  4107  013120  0E00               	movlw	0
  4108  013122  6E1B               	movwf	uart_tasks@checksum^0,c
  4109  013124  D031               	goto	l5298
  4110  013126                     l5276:
  4111                           
  4112                           ; BSR set to: 0
  4113  013126  5021               	movf	uart_tasks@msgLen^0,w,c
  4114  013128  5C1D               	subwf	uart_tasks@posInRawMsg^0,w,c
  4115  01312A  B0D8               	btfsc	status,0,c
  4116  01312C  D012               	goto	l5282
  4117                           
  4118                           ; BSR set to: 0
  4119                           ;uart.c: 117:             message[rawMsgOffset + posInRawMsg] = val;
  4120  01312E  0E00               	movlw	low uart_tasks@message
  4121  013130  6E15               	movwf	??_uart_tasks^0,c
  4122  013132  0E03               	movlw	high uart_tasks@message
  4123  013134  6E16               	movwf	(??_uart_tasks+1)^0,c
  4124  013136  501A               	movf	uart_tasks@rawMsgOffset^0,w,c
  4125  013138  2615               	addwf	??_uart_tasks^0,f,c
  4126  01313A  0E00               	movlw	0
  4127  01313C  2216               	addwfc	(??_uart_tasks+1)^0,f,c
  4128  01313E  501D               	movf	uart_tasks@posInRawMsg^0,w,c
  4129  013140  2415               	addwf	??_uart_tasks^0,w,c
  4130  013142  6ED9               	movwf	fsr2l,c
  4131  013144  0E00               	movlw	0
  4132  013146  2016               	addwfc	(??_uart_tasks+1)^0,w,c
  4133  013148  6EDA               	movwf	fsr2h,c
  4134  01314A  0060  F08F  FFDF   	movff	uart_tasks@val,indf2
  4135  013150  D7C7               	goto	u6560
  4136  013152                     l5282:
  4137                           
  4138                           ; BSR set to: 0
  4139  013152  5021               	movf	uart_tasks@msgLen^0,w,c
  4140  013154  181D               	xorwf	uart_tasks@posInRawMsg^0,w,c
  4141  013156  A4D8               	btfss	status,2,c
  4142  013158  D017               	goto	l5298
  4143                           
  4144                           ; BSR set to: 0
  4145                           ;uart.c: 120:             checksum += val;
  4146  01315A  5023               	movf	uart_tasks@val^0,w,c
  4147  01315C  261B               	addwf	uart_tasks@checksum^0,f,c
  4148                           
  4149                           ; BSR set to: 0
  4150                           ;uart.c: 121:             if (checksum == 0x00) {
  4151  01315E  501B               	movf	uart_tasks@checksum^0,w,c
  4152  013160  A4D8               	btfss	status,2,c
  4153  013162  D00B               	goto	l5290
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;uart.c: 122:                 handle_message(message + rawMsgOffset, msgLen);
  4157  013164  0E00               	movlw	low uart_tasks@message
  4158  013166  241A               	addwf	uart_tasks@rawMsgOffset^0,w,c
  4159  013168  6E11               	movwf	handle_message@message^0,c
  4160  01316A  6A12               	clrf	(handle_message@message+1)^0,c
  4161  01316C  0E03               	movlw	high uart_tasks@message
  4162  01316E  2212               	addwfc	(handle_message@message+1)^0,f,c
  4163  013170  0060  F084  F013   	movff	uart_tasks@msgLen,handle_message@len
  4164  013176  EC7F  F099         	call	_handle_message	;wreg free
  4165  01317A                     l5290:
  4166                           
  4167                           ;uart.c: 124:             msgOffset = intPos + 1;
  4168  01317A  2820               	incf	uart_tasks@intPos^0,w,c
  4169  01317C  6E1C               	movwf	uart_tasks@msgOffset^0,c
  4170                           
  4171                           ;uart.c: 125:             zeroByte = 0;
  4172  01317E  0E00               	movlw	0
  4173  013180  6E22               	movwf	uart_tasks@zeroByte^0,c
  4174                           
  4175                           ;uart.c: 126:             rawMsgOffset += msgLen;
  4176  013182  5021               	movf	uart_tasks@msgLen^0,w,c
  4177  013184  261A               	addwf	uart_tasks@rawMsgOffset^0,f,c
  4178  013186  D7CC               	goto	l5274
  4179  013188                     l5298:
  4180                           
  4181                           ;uart.c: 129:     }
  4182  013188  2A1E               	incf	uart_tasks@i^0,f,c
  4183  01318A                     l5300:
  4184  01318A  5019               	movf	uart_tasks@rxLen^0,w,c
  4185  01318C  5C1E               	subwf	uart_tasks@i^0,w,c
  4186  01318E  A0D8               	btfss	status,0,c
  4187  013190  D76E               	goto	l5238
  4188                           
  4189                           ;uart.c: 130:     rxPos = msgOffset;
  4190  013192  0060  F070  F0E4   	movff	uart_tasks@msgOffset,uart_tasks@rxPos
  4191  013198  0012               	return		;funcret
  4192  01319A                     __end_of_uart_tasks:
  4193                           	opt callstack 0
  4194                           
  4195 ;; *************** function _handle_message *****************
  4196 ;; Defined at:
  4197 ;;		line 58 in file "uart.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  message         2   16[COMRAM] PTR unsigned char 
  4200 ;;		 -> uart_tasks@message(256), 
  4201 ;;  len             1   18[COMRAM] unsigned char 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 3F/0
  4210 ;;		On exit  : 4/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4213 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4215 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4216 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4217 ;;Total ram usage:        4 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    2
  4220 ;; This function calls:
  4221 ;;		_uart_send
  4222 ;; This function is called by:
  4223 ;;		_uart_tasks
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text5
  4228  0132FE                     __ptext5:
  4229                           	opt callstack 0
  4230  0132FE                     _handle_message:
  4231                           	opt callstack 26
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;uart.c: 59:     if (message[0] == 0x17 && message[2] == 0x04 && len == 4) {
  4235                           
  4236                           ;incstack = 0
  4237  0132FE  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4238  013304  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4239  01330A  0E17               	movlw	23
  4240  01330C  18DE               	xorwf	postinc2,w,c
  4241  01330E  A4D8               	btfss	status,2,c
  4242  013310  D019               	goto	l4950
  4243                           
  4244                           ; BSR set to: 0
  4245  013312  EE20 F002          	lfsr	2,2
  4246  013316  5011               	movf	handle_message@message^0,w,c
  4247  013318  26D9               	addwf	fsr2l,f,c
  4248  01331A  5012               	movf	(handle_message@message+1)^0,w,c
  4249  01331C  22DA               	addwfc	fsr2h,f,c
  4250  01331E  0E04               	movlw	4
  4251  013320  18DE               	xorwf	postinc2,w,c
  4252  013322  A4D8               	btfss	status,2,c
  4253  013324  D00F               	goto	l4950
  4254                           
  4255                           ; BSR set to: 0
  4256  013326  0E04               	movlw	4
  4257  013328  1813               	xorwf	handle_message@len^0,w,c
  4258  01332A  A4D8               	btfss	status,2,c
  4259  01332C  D00B               	goto	l4950
  4260                           
  4261                           ; BSR set to: 0
  4262                           ;uart.c: 60:         volume_level = message[3] & 0x0f;
  4263  01332E  EE20 F003          	lfsr	2,3
  4264  013332  5011               	movf	handle_message@message^0,w,c
  4265  013334  26D9               	addwf	fsr2l,f,c
  4266  013336  5012               	movf	(handle_message@message+1)^0,w,c
  4267  013338  22DA               	addwfc	fsr2h,f,c
  4268  01333A  50DF               	movf	indf2,w,c
  4269  01333C  0B0F               	andlw	15
  4270  01333E  0104               	movlb	4	; () banked
  4271  013340  6F39               	movwf	_volume_level& (0+255),b
  4272                           
  4273                           ;uart.c: 61:     } else if (message[0] == 0x1E && len == 8) {
  4274  013342  D051               	goto	u6100
  4275  013344                     l4950:
  4276                           
  4277                           ; BSR set to: 0
  4278  013344  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4279  01334A  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4280  013350  0E1E               	movlw	30
  4281  013352  18DE               	xorwf	postinc2,w,c
  4282  013354  A4D8               	btfss	status,2,c
  4283  013356  D03A               	goto	l4956
  4284                           
  4285                           ; BSR set to: 0
  4286  013358  0E08               	movlw	8
  4287  01335A  1813               	xorwf	handle_message@len^0,w,c
  4288  01335C  A4D8               	btfss	status,2,c
  4289  01335E  D036               	goto	l4956
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;uart.c: 62:         on = message[1] != 0x00;
  4293  013360  EE20 F001          	lfsr	2,1
  4294  013364  5011               	movf	handle_message@message^0,w,c
  4295  013366  26D9               	addwf	fsr2l,f,c
  4296  013368  5012               	movf	(handle_message@message+1)^0,w,c
  4297  01336A  22DA               	addwfc	fsr2h,f,c
  4298  01336C  50DF               	movf	indf2,w,c
  4299  01336E  B4D8               	btfsc	status,2,c
  4300  013370  D002               	goto	u6010
  4301  013372  0E01               	movlw	1
  4302  013374  D001               	goto	u6020
  4303  013376                     u6010:
  4304  013376  0E00               	movlw	0
  4305  013378                     u6020:
  4306  013378  6FE5               	movwf	_on& (0+255),b
  4307                           
  4308                           ;uart.c: 63:         connected = message[2] != 0x00;
  4309  01337A  EE20 F002          	lfsr	2,2
  4310  01337E  5011               	movf	handle_message@message^0,w,c
  4311  013380  26D9               	addwf	fsr2l,f,c
  4312  013382  5012               	movf	(handle_message@message+1)^0,w,c
  4313  013384  22DA               	addwfc	fsr2h,f,c
  4314  013386  50DF               	movf	indf2,w,c
  4315  013388  B4D8               	btfsc	status,2,c
  4316  01338A  D002               	goto	u6030
  4317  01338C  0E01               	movlw	1
  4318  01338E  D001               	goto	u6040
  4319  013390                     u6030:
  4320  013390  0E00               	movlw	0
  4321  013392                     u6040:
  4322  013392  0104               	movlb	4	; () banked
  4323  013394  6F36               	movwf	_connected& (0+255),b
  4324                           
  4325                           ;uart.c: 64:         pairing = message[1] == 0x01;
  4326  013396  EE20 F001          	lfsr	2,1
  4327  01339A  5011               	movf	handle_message@message^0,w,c
  4328  01339C  26D9               	addwf	fsr2l,f,c
  4329  01339E  5012               	movf	(handle_message@message+1)^0,w,c
  4330  0133A0  22DA               	addwfc	fsr2h,f,c
  4331  0133A2  04DE               	decf	postinc2,w,c
  4332  0133A4  A4D8               	btfss	status,2,c
  4333  0133A6  D002               	goto	u6050
  4334  0133A8  0E01               	movlw	1
  4335  0133AA  D001               	goto	u6060
  4336  0133AC                     u6050:
  4337  0133AC  0E00               	movlw	0
  4338  0133AE                     u6060:
  4339  0133AE  6F38               	movwf	_pairing& (0+255),b
  4340                           
  4341                           ;uart.c: 65:         streaming = message[6];
  4342  0133B0  EE20 F006          	lfsr	2,6
  4343  0133B4  5011               	movf	handle_message@message^0,w,c
  4344  0133B6  26D9               	addwf	fsr2l,f,c
  4345  0133B8  5012               	movf	(handle_message@message+1)^0,w,c
  4346  0133BA  22DA               	addwfc	fsr2h,f,c
  4347  0133BC  50DF               	movf	indf2,w,c
  4348  0133BE  B4D8               	btfsc	status,2,c
  4349  0133C0  D002               	goto	u6070
  4350  0133C2  0E01               	movlw	1
  4351  0133C4  D001               	goto	u6080
  4352  0133C6                     u6070:
  4353  0133C6  0E00               	movlw	0
  4354  0133C8                     u6080:
  4355  0133C8  6F37               	movwf	_streaming& (0+255),b
  4356                           
  4357                           ;uart.c: 66:     } else if (message[0] == 0x00 && len == 3) {
  4358  0133CA  D00D               	goto	u6100
  4359  0133CC                     l4956:
  4360                           
  4361                           ; BSR set to: 0
  4362  0133CC  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4363  0133D2  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4364  0133D8  50DF               	movf	indf2,w,c
  4365  0133DA  A4D8               	btfss	status,2,c
  4366  0133DC  0012               	return	
  4367                           
  4368                           ; BSR set to: 0
  4369  0133DE  0E03               	movlw	3
  4370  0133E0  1813               	xorwf	handle_message@len^0,w,c
  4371  0133E2  A4D8               	btfss	status,2,c
  4372  0133E4  0012               	return	
  4373  0133E6                     u6100:
  4374                           
  4375                           ;uart.c: 70:     ackCmd[1] = message[0];
  4376  0133E6  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4377  0133EC  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4378  0133F2  50DF               	movf	indf2,w,c
  4379  0133F4  0100               	movlb	0	; () banked
  4380  0133F6  6FEF               	movwf	(_ackCmd+1)& (0+255),b
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;uart.c: 71:     uart_send(ackCmd, 2);
  4384  0133F8  0EEE               	movlw	low _ackCmd
  4385  0133FA  6E0C               	movwf	uart_send@buf^0,c
  4386  0133FC  6A0D               	clrf	(uart_send@buf+1)^0,c
  4387  0133FE  0E02               	movlw	2
  4388  013400  6E0E               	movwf	uart_send@len^0,c
  4389  013402  EC19  F09F         	call	_uart_send	;wreg free
  4390  013406  0012               	return		;funcret
  4391  013408                     __end_of_handle_message:
  4392                           	opt callstack 0
  4393                           
  4394 ;; *************** function _uart_send *****************
  4395 ;; Defined at:
  4396 ;;		line 133 in file "uart.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  buf             2   11[COMRAM] PTR unsigned char 
  4399 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4400 ;;  len             1   13[COMRAM] unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;		None
  4403 ;; Return value:  Size  Location     Type
  4404 ;;                  1    wreg      void 
  4405 ;; Registers used:
  4406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/4
  4409 ;;		On exit  : 3F/3B
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4412 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4414 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4415 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4416 ;;Total ram usage:        5 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    1
  4419 ;; This function calls:
  4420 ;;		_memcpy
  4421 ;;		_transmitChecksum
  4422 ;; This function is called by:
  4423 ;;		_main_loop
  4424 ;;		_handle_message
  4425 ;; This function uses a non-reentrant model
  4426 ;;
  4427                           
  4428                           	psect	text6
  4429  013E32                     __ptext6:
  4430                           	opt callstack 0
  4431  013E32                     _uart_send:
  4432                           	opt callstack 26
  4433                           
  4434                           ;uart.c: 134:     while (DMA2CON0bits.SIRQEN);
  4435                           
  4436                           ;incstack = 0
  4437  013E32  013B               	movlb	59	; () banked
  4438  013E34  BDDC               	btfsc	220,6,b	;volatile
  4439  013E36  D7FD               	goto	_uart_send
  4440                           
  4441                           ; BSR set to: 59
  4442                           ;uart.c: 135:     if (DMA2SCNTIF) transmitChecksum();
  4443  013E38  0139               	movlb	57	; () banked
  4444  013E3A  B5A5               	btfsc	165,2,b	;volatile
  4445                           
  4446                           ; BSR set to: 57
  4447  013E3C  EC2F  F0A2         	call	_transmitChecksum	;wreg free
  4448                           
  4449                           ; BSR set to: 57
  4450                           ;uart.c: 136:     DMA2CON0bits.EN = 0;
  4451  013E40  013B               	movlb	59	; () banked
  4452  013E42  9FDC               	bcf	220,7,b	;volatile
  4453                           
  4454                           ; BSR set to: 59
  4455                           ;uart.c: 137:     txBuf[0] = 0xAA;
  4456  013E44  0EAA               	movlw	170
  4457  013E46  0102               	movlb	2	; () banked
  4458  013E48  6F00               	movwf	0,b
  4459                           
  4460                           ; BSR set to: 2
  4461                           ;uart.c: 138:     txBuf[1] = 0x00;
  4462  013E4A  0E00               	movlw	0
  4463  013E4C  6F01               	movwf	1,b
  4464                           
  4465                           ; BSR set to: 2
  4466                           ;uart.c: 139:     txBuf[2] = len;
  4467  013E4E  0060  F038  F202   	movff	uart_send@len,514
  4468                           
  4469                           ; BSR set to: 2
  4470                           ;uart.c: 140:     memcpy(txBuf + 3, buf, len);
  4471  013E54  0E03               	movlw	3
  4472  013E56  6E01               	movwf	memcpy@d1^0,c
  4473  013E58  0E02               	movlw	2
  4474  013E5A  6E02               	movwf	(memcpy@d1+1)^0,c
  4475  013E5C  0060  F030  F003   	movff	uart_send@buf,memcpy@s1
  4476  013E62  0060  F034  F004   	movff	uart_send@buf+1,memcpy@s1+1
  4477  013E68  0060  F038  F005   	movff	uart_send@len,memcpy@n
  4478  013E6E  6A06               	clrf	(memcpy@n+1)^0,c
  4479  013E70  EC8E  F09F         	call	_memcpy	;wreg free
  4480                           
  4481                           ;uart.c: 141:     DMA2SSZH = ((uint16_t)len + 3) >> 8;
  4482  013E74  500E               	movf	uart_send@len^0,w,c
  4483  013E76  6E0F               	movwf	??_uart_send^0,c
  4484  013E78  6A10               	clrf	(??_uart_send+1)^0,c
  4485  013E7A  0E03               	movlw	3
  4486  013E7C  260F               	addwf	??_uart_send^0,f,c
  4487  013E7E  0E00               	movlw	0
  4488  013E80  2210               	addwfc	(??_uart_send+1)^0,f,c
  4489  013E82  0060  F040  F00F   	movff	??_uart_send+1,??_uart_send
  4490  013E88  6A10               	clrf	(??_uart_send+1)^0,c
  4491  013E8A  500F               	movf	??_uart_send^0,w,c
  4492  013E8C  013B               	movlb	59	; () banked
  4493  013E8E  6FD8               	movwf	216,b	;volatile
  4494                           
  4495                           ; BSR set to: 59
  4496                           ;uart.c: 142:     DMA2SSZL = (len + 3) & 0xff;
  4497  013E90  500E               	movf	uart_send@len^0,w,c
  4498  013E92  0F03               	addlw	3
  4499  013E94  6FD7               	movwf	215,b	;volatile
  4500                           
  4501                           ; BSR set to: 59
  4502                           ;uart.c: 143:     U1TXCHK = 0;
  4503  013E96  0E00               	movlw	0
  4504  013E98  013D               	movlb	61	; () banked
  4505  013E9A  6FEB               	movwf	235,b	;volatile
  4506                           
  4507                           ; BSR set to: 61
  4508                           ;uart.c: 144:     DMA2SCNTIF = 0;
  4509  013E9C  0139               	movlb	57	; () banked
  4510  013E9E  95A5               	bcf	165,2,b	;volatile
  4511                           
  4512                           ; BSR set to: 57
  4513                           ;uart.c: 145:     DMA2CON0bits.EN = 1;
  4514  013EA0  013B               	movlb	59	; () banked
  4515  013EA2  8FDC               	bsf	220,7,b	;volatile
  4516                           
  4517                           ; BSR set to: 59
  4518                           ;uart.c: 146:     DMA2CON0bits.SIRQEN = 1;
  4519  013EA4  8DDC               	bsf	220,6,b	;volatile
  4520                           
  4521                           ; BSR set to: 59
  4522  013EA6  0012               	return		;funcret
  4523  013EA8                     __end_of_uart_send:
  4524                           	opt callstack 0
  4525                           
  4526 ;; *************** function _transmitChecksum *****************
  4527 ;; Defined at:
  4528 ;;		line 74 in file "uart.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0
  4537 ;; Tracked objects:
  4538 ;;		On entry : 3F/39
  4539 ;;		On exit  : 3F/39
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_uart_tasks
  4552 ;;		_uart_send
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text7
  4557  01445E                     __ptext7:
  4558                           	opt callstack 0
  4559  01445E                     _transmitChecksum:
  4560                           	opt callstack 28
  4561                           
  4562                           ; BSR set to: 57
  4563                           
  4564                           ; BSR set to: 57
  4565                           ;uart.c: 75:     while (!U1TXIF);
  4566                           
  4567                           ; BSR set to: 59
  4568                           ;incstack = 0
  4569  01445E  A9A3               	btfss	163,4,b	;volatile
  4570  014460  D7FE               	goto	_transmitChecksum
  4571                           
  4572                           ; BSR set to: 57
  4573                           ;uart.c: 76:     U1TXB = -(U1TXCHK - 0xaa);
  4574  014462  013D               	movlb	61	; () banked
  4575  014464  51EB               	movf	235,w,b	;volatile
  4576  014466  0F56               	addlw	86
  4577  014468  0800               	sublw	0
  4578  01446A  6FEA               	movwf	234,b	;volatile
  4579                           
  4580                           ; BSR set to: 61
  4581                           ;uart.c: 77:     DMA2SCNTIF = 0;
  4582  01446C  0139               	movlb	57	; () banked
  4583  01446E  95A5               	bcf	165,2,b	;volatile
  4584                           
  4585                           ; BSR set to: 57
  4586  014470  0012               	return		;funcret
  4587  014472                     __end_of_transmitChecksum:
  4588                           	opt callstack 0
  4589                           
  4590 ;; *************** function _memcpy *****************
  4591 ;; Defined at:
  4592 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  d1              2    0[COMRAM] PTR void 
  4595 ;;		 -> txBuf(256), 
  4596 ;;  s1              2    2[COMRAM] PTR const void 
  4597 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4598 ;;  n               2    4[COMRAM] unsigned int 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4601 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4602 ;;  d               2    6[COMRAM] PTR unsigned char 
  4603 ;;		 -> txBuf(256), 
  4604 ;;  tmp             1   10[COMRAM] unsigned char 
  4605 ;; Return value:  Size  Location     Type
  4606 ;;                  2    0[COMRAM] PTR void 
  4607 ;; Registers used:
  4608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4609 ;; Tracked objects:
  4610 ;;		On entry : 3F/2
  4611 ;;		On exit  : 0/0
  4612 ;;		Unchanged: 0/0
  4613 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4614 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4615 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4617 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4618 ;;Total ram usage:       11 bytes
  4619 ;; Hardware stack levels used:    1
  4620 ;; This function calls:
  4621 ;;		Nothing
  4622 ;; This function is called by:
  4623 ;;		_uart_send
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text8
  4628  013F1C                     __ptext8:
  4629                           	opt callstack 0
  4630  013F1C                     _memcpy:
  4631                           	opt callstack 26
  4632                           
  4633                           ; BSR set to: 2
  4634                           
  4635                           ; BSR set to: 57
  4636                           ;incstack = 0
  4637  013F1C  0060  F00C  F009   	movff	memcpy@s1,memcpy@s
  4638  013F22  0060  F010  F00A   	movff	memcpy@s1+1,memcpy@s+1
  4639  013F28  0060  F004  F007   	movff	memcpy@d1,memcpy@d
  4640  013F2E  0060  F008  F008   	movff	memcpy@d1+1,memcpy@d+1
  4641  013F34  D023               	goto	l4418
  4642  013F36                     l4410:
  4643  013F36  0060  F027  FFF6   	movff	memcpy@s,tblptrl
  4644  013F3C  0060  F02B  FFF7   	movff	memcpy@s+1,tblptrh
  4645  013F42  0E00               	movlw	low (__mediumconst shr (0+16))
  4646  013F44  6EF8               	movwf	tblptru,c
  4647  013F46  0E1F               	movlw	(high __ramtop+-1)
  4648  013F48  64F7               	cpfsgt	tblptrh,c
  4649  013F4A  D003               	bra	u5077
  4650  013F4C  0008               	tblrd		*
  4651  013F4E  50F5               	movf	tablat,w,c
  4652  013F50  D007               	bra	u5070
  4653  013F52                     u5077:
  4654  013F52  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4655  013F58  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4656  013F5E  50E7               	movf	indf1,w,c
  4657  013F60                     u5070:
  4658  013F60  6E0B               	movwf	memcpy@tmp^0,c
  4659  013F62  4A09               	infsnz	memcpy@s^0,f,c
  4660  013F64  2A0A               	incf	(memcpy@s+1)^0,f,c
  4661  013F66  0060  F01F  FFD9   	movff	memcpy@d,fsr2l
  4662  013F6C  0060  F023  FFDA   	movff	memcpy@d+1,fsr2h
  4663  013F72  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
  4664  013F78  4A07               	infsnz	memcpy@d^0,f,c
  4665  013F7A  2A08               	incf	(memcpy@d+1)^0,f,c
  4666  013F7C                     l4418:
  4667  013F7C  0605               	decf	memcpy@n^0,f,c
  4668  013F7E  A0D8               	btfss	status,0,c
  4669  013F80  0606               	decf	(memcpy@n+1)^0,f,c
  4670  013F82  2805               	incf	memcpy@n^0,w,c
  4671  013F84  E1D8               	bnz	l4410
  4672  013F86  2806               	incf	(memcpy@n+1)^0,w,c
  4673  013F88  B4D8               	btfsc	status,2,c
  4674  013F8A  0012               	return	
  4675  013F8C  D7D4               	goto	l4410
  4676  013F8E                     __end_of_memcpy:
  4677                           	opt callstack 0
  4678                           
  4679 ;; *************** function _sprintf *****************
  4680 ;; Defined at:
  4681 ;;		line 9 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  s               2   91[BANK0 ] PTR unsigned char 
  4684 ;;		 -> main_loop@batmsg(17), 
  4685 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  4686 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
  4687 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;  f               6  102[BANK0 ] struct _IO_FILE
  4690 ;;  ret             2    0        int 
  4691 ;;  ap              1  101[BANK0 ] PTR void [1]
  4692 ;;		 -> ?_sprintf(2), 
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  2   91[BANK0 ] int 
  4695 ;; Registers used:
  4696 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4697 ;; Tracked objects:
  4698 ;;		On entry : 3F/0
  4699 ;;		On exit  : 3F/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4702 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4703 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4705 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4706 ;;Total ram usage:       17 bytes
  4707 ;; Hardware stack levels used:    1
  4708 ;; Hardware stack levels required when called:    7
  4709 ;; This function calls:
  4710 ;;		_vfprintf
  4711 ;; This function is called by:
  4712 ;;		_main_loop
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text9
  4717  014284                     __ptext9:
  4718                           	opt callstack 0
  4719  014284                     _sprintf:
  4720                           	opt callstack 22
  4721                           
  4722                           ; BSR set to: 0
  4723                           
  4724                           ;incstack = 0
  4725  014284  0EBF               	movlw	low (?_sprintf+4)
  4726  014286  6FC5               	movwf	sprintf@ap& (0+255),b
  4727  014288  0060  F2EC  F0C6   	movff	sprintf@s,sprintf@f
  4728  01428E  0060  F2F0  F0C7   	movff	sprintf@s+1,sprintf@f+1
  4729                           
  4730                           ; BSR set to: 0
  4731  014294  0E00               	movlw	0
  4732  014296  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  4733  014298  0E00               	movlw	0
  4734  01429A  6FC8               	movwf	(sprintf@f+2)& (0+255),b
  4735                           
  4736                           ; BSR set to: 0
  4737  01429C  0E00               	movlw	0
  4738  01429E  6FCB               	movwf	(sprintf@f+5)& (0+255),b
  4739  0142A0  0E00               	movlw	0
  4740  0142A2  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  4741                           
  4742                           ; BSR set to: 0
  4743  0142A4  0EC6               	movlw	low sprintf@f
  4744  0142A6  6FB5               	movwf	vfprintf@fp& (0+255),b
  4745  0142A8  0060  F2F4  F0B6   	movff	sprintf@fmt,vfprintf@fmt
  4746  0142AE  0060  F2F8  F0B7   	movff	sprintf@fmt+1,vfprintf@fmt+1
  4747  0142B4  0EC5               	movlw	low sprintf@ap
  4748  0142B6  6FB8               	movwf	vfprintf@ap& (0+255),b
  4749  0142B8  ECC1  F0A0         	call	_vfprintf	;wreg free
  4750                           
  4751                           ; BSR set to: 0
  4752  0142BC  51C8               	movf	(sprintf@f+2)& (0+255),w,b
  4753  0142BE  25BB               	addwf	sprintf@s& (0+255),w,b
  4754  0142C0  6ED9               	movwf	fsr2l,c
  4755  0142C2  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  4756  0142C4  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  4757  0142C6  6EDA               	movwf	fsr2h,c
  4758  0142C8  0E00               	movlw	0
  4759  0142CA  6EDF               	movwf	indf2,c
  4760                           
  4761                           ; BSR set to: 0
  4762  0142CC  0012               	return		;funcret
  4763  0142CE                     __end_of_sprintf:
  4764                           	opt callstack 0
  4765                           
  4766 ;; *************** function _vfprintf *****************
  4767 ;; Defined at:
  4768 ;;		line 1368 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  fp              1   85[BANK0 ] PTR struct _IO_FILE
  4771 ;;		 -> sprintf@f(6), 
  4772 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  4773 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
  4774 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
  4775 ;;  ap              1   88[BANK0 ] PTR PTR void 
  4776 ;;		 -> sprintf@ap(1), 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  4779 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
  4780 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  2   85[BANK0 ] int 
  4783 ;; Registers used:
  4784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4785 ;; Tracked objects:
  4786 ;;		On entry : 3F/0
  4787 ;;		On exit  : 3F/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4790 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4791 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4793 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4794 ;;Total ram usage:        6 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; Hardware stack levels required when called:    6
  4797 ;; This function calls:
  4798 ;;		_vfpfcnvrt
  4799 ;; This function is called by:
  4800 ;;		_sprintf
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text10
  4805  014182                     __ptext10:
  4806                           	opt callstack 0
  4807  014182                     _vfprintf:
  4808                           	opt callstack 22
  4809                           
  4810                           ; BSR set to: 0
  4811                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FI
      +                          LE *fp, const char *fmt, va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1369: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1371:     char *cfmt;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1373:     cfmt = (char *)fmt;
  4812                           
  4813                           ; BSR set to: 0
  4814                           ;incstack = 0
  4815  014182  0060  F2D8  F0B9   	movff	vfprintf@fmt,vfprintf@cfmt
  4816  014188  0060  F2DC  F0BA   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4817                           
  4818                           ; BSR set to: 0
  4819                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  4820  01418E  0E00               	movlw	0
  4821  014190  6FDD               	movwf	(_nout+1)& (0+255),b
  4822  014192  0E00               	movlw	0
  4823  014194  6FDC               	movwf	_nout& (0+255),b
  4824                           
  4825                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4826  014196  D00F               	goto	l6144
  4827  014198                     l6142:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:         nout +=
      +                           vfpfcnvrt(fp, &cfmt, ap);
  4831  014198  0060  F2D4  F05D   	movff	vfprintf@fp,vfpfcnvrt@fp
  4832  01419E  0EB9               	movlw	low vfprintf@cfmt
  4833  0141A0  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  4834  0141A2  0060  F2E0  F05F   	movff	vfprintf@ap,vfpfcnvrt@ap
  4835  0141A8  EC93  F08E         	call	_vfpfcnvrt	;wreg free
  4836  0141AC  505D               	movf	?_vfpfcnvrt^0,w,c
  4837  0141AE  0100               	movlb	0	; () banked
  4838  0141B0  27DC               	addwf	_nout& (0+255),f,b
  4839  0141B2  505E               	movf	(?_vfpfcnvrt+1)^0,w,c
  4840  0141B4  23DD               	addwfc	(_nout+1)& (0+255),f,b
  4841  0141B6                     l6144:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4845  0141B6  0060  F2E7  FFF6   	movff	vfprintf@cfmt,tblptrl
  4846  0141BC  0060  F2EB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4847  0141C2                     	if	0	;tblptru may be non-zero
  4848  0141C2                     	endif
  4849  0141C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4850  0141C2  0E00               	movlw	low (__mediumconst shr (0+16))
  4851  0141C4  6EF8               	movwf	tblptru,c
  4852  0141C6                     	endif
  4853  0141C6  0008               	tblrd		*
  4854  0141C8  50F5               	movf	tablat,w,c
  4855  0141CA  0900               	iorlw	0
  4856  0141CC  A4D8               	btfss	status,2,c
  4857  0141CE  D7E4               	goto	l6142
  4858                           
  4859                           ; BSR set to: 0
  4860                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     return nout
      +                          ;
  4861  0141D0  0060  F370  F0B5   	movff	_nout,?_vfprintf
  4862  0141D6  0060  F374  F0B6   	movff	_nout+1,?_vfprintf+1
  4863                           
  4864                           ; BSR set to: 0
  4865  0141DC  0012               	return		;funcret
  4866  0141DE                     __end_of_vfprintf:
  4867                           	opt callstack 0
  4868                           
  4869 ;; *************** function _vfpfcnvrt *****************
  4870 ;; Defined at:
  4871 ;;		line 670 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  4874 ;;		 -> sprintf@f(6), 
  4875 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  4876 ;;		 -> vfprintf@cfmt(2), 
  4877 ;;  ap              1   94[COMRAM] PTR PTR void 
  4878 ;;		 -> sprintf@ap(1), 
  4879 ;; Auto vars:     Size  Location     Type
  4880 ;;  llu             8    0        unsigned long long 
  4881 ;;  ll              8    0        long long 
  4882 ;;  f               4   80[BANK0 ] long long 
  4883 ;;  ct              3   77[BANK0 ] unsigned char [3]
  4884 ;;  vp              3    0        PTR void 
  4885 ;;  cp              3    0        PTR unsigned char 
  4886 ;;  i               2    0        int 
  4887 ;;  done            2    0        int 
  4888 ;;  c               1   84[BANK0 ] unsigned char 
  4889 ;; Return value:  Size  Location     Type
  4890 ;;                  2   92[COMRAM] int 
  4891 ;; Registers used:
  4892 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4893 ;; Tracked objects:
  4894 ;;		On entry : 3F/0
  4895 ;;		On exit  : 0/0
  4896 ;;		Unchanged: 0/0
  4897 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4898 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4900 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4901 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4902 ;;Total ram usage:       21 bytes
  4903 ;; Hardware stack levels used:    1
  4904 ;; Hardware stack levels required when called:    5
  4905 ;; This function calls:
  4906 ;;		_atoi
  4907 ;;		_efgtoa
  4908 ;;		_fputc
  4909 ;;		_isdigit
  4910 ;;		_isupper
  4911 ;;		_strncmp
  4912 ;;		_tolower
  4913 ;; This function is called by:
  4914 ;;		_vfprintf
  4915 ;; This function uses a non-reentrant model
  4916 ;;
  4917                           
  4918                           	psect	text11
  4919  011D26                     __ptext11:
  4920                           	opt callstack 0
  4921  011D26                     _vfpfcnvrt:
  4922                           	opt callstack 22
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static int vfpfc
      +                          nvrt(FILE *fp, char *fmt[], va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 671: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 672:     char c, *cp, ct[3];;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 673:     int done, i;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 674:     long long ll;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 675:     unsigned long long llu;
  4926                           
  4927                           ; BSR set to: 0
  4928                           ;incstack = 0
  4929  011D26  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4930  011D28  6ED9               	movwf	fsr2l,c
  4931  011D2A  6ADA               	clrf	fsr2h,c
  4932  011D2C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4933  011D32  006F FF77 FFF7     	movff	postdec2,tblptrh
  4934  011D38                     	if	0	;tblptru may be non-zero
  4935  011D38                     	endif
  4936  011D38                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4937  011D38  0E00               	movlw	low (__mediumconst shr (0+16))
  4938  011D3A  6EF8               	movwf	tblptru,c
  4939  011D3C                     	endif
  4940  011D3C  0008               	tblrd		*
  4941  011D3E  50F5               	movf	tablat,w,c
  4942  011D40  0A25               	xorlw	37
  4943  011D42  A4D8               	btfss	status,2,c
  4944  011D44  D235               	goto	l6130
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  4948  011D46  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4949  011D48  6ED9               	movwf	fsr2l,c
  4950  011D4A  6ADA               	clrf	fsr2h,c
  4951  011D4C  2ADE               	incf	postinc2,f,c
  4952  011D4E  0E00               	movlw	0
  4953  011D50  22DD               	addwfc	postdec2,f,c
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:         flags = 
      +                          width = 0;
  4957  011D52  0E00               	movlw	0
  4958  011D54  6FDF               	movwf	(_width+1)& (0+255),b
  4959  011D56  0E00               	movlw	0
  4960  011D58  6FDE               	movwf	_width& (0+255),b
  4961  011D5A  C0DE  F0E2         	movff	_width,_flags
  4962  011D5E  C0DF  F0E3         	movff	_width+1,_flags+1
  4963                           
  4964                           ; BSR set to: 0
  4965                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:         prec = -
      +                          1;
  4966  011D62  69E0               	setf	_prec& (0+255),b
  4967  011D64  69E1               	setf	(_prec+1)& (0+255),b
  4968                           
  4969                           ; BSR set to: 0
  4970                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:         if ((*fm
      +                          t)[0] == '*') {
  4971  011D66  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4972  011D68  6ED9               	movwf	fsr2l,c
  4973  011D6A  6ADA               	clrf	fsr2h,c
  4974  011D6C  006F FF7B FFF6     	movff	postinc2,tblptrl
  4975  011D72  006F FF77 FFF7     	movff	postdec2,tblptrh
  4976  011D78                     	if	0	;tblptru may be non-zero
  4977  011D78                     	endif
  4978  011D78                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4979  011D78  0E00               	movlw	low (__mediumconst shr (0+16))
  4980  011D7A  6EF8               	movwf	tblptru,c
  4981  011D7C                     	endif
  4982  011D7C  0008               	tblrd		*
  4983  011D7E  50F5               	movf	tablat,w,c
  4984  011D80  0A2A               	xorlw	42
  4985  011D82  A4D8               	btfss	status,2,c
  4986  011D84  D01C               	goto	l6042
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:             ++*f
      +                          mt;
  4990  011D86  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4991  011D88  6ED9               	movwf	fsr2l,c
  4992  011D8A  6ADA               	clrf	fsr2h,c
  4993  011D8C  2ADE               	incf	postinc2,f,c
  4994  011D8E  0E00               	movlw	0
  4995  011D90  22DD               	addwfc	postdec2,f,c
  4996                           
  4997                           ; BSR set to: 0
  4998                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:             widt
      +                          h = (*(int *)__va_arg(*(int **)ap, (int)0));
  4999  011D92  505F               	movf	vfpfcnvrt@ap^0,w,c
  5000  011D94  6ED9               	movwf	fsr2l,c
  5001  011D96  6ADA               	clrf	fsr2h,c
  5002  011D98  0E02               	movlw	2
  5003  011D9A  26DF               	addwf	indf2,f,c
  5004  011D9C  5CDF               	subwf	indf2,w,c
  5005  011D9E  6ED9               	movwf	fsr2l,c
  5006  011DA0  6ADA               	clrf	fsr2h,c
  5007  011DA2  006F FF78  F0DE    	movff	postinc2,_width
  5008  011DA8  006F FF78  F0DF    	movff	postinc2,_width+1
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:             if (
      +                          width < 0) {
  5012  011DAE  AFDF               	btfss	(_width+1)& (0+255),7,b
  5013  011DB0  D045               	goto	u7840
  5014                           
  5015                           ; BSR set to: 0
  5016                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:                 
      +                          flags |= (1 << 0);
  5017  011DB2  81E2               	bsf	_flags& (0+255),0,b
  5018                           
  5019                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:                 
      +                          width = -width;
  5020  011DB4  6DDE               	negf	_width& (0+255),b
  5021  011DB6  1FDF               	comf	(_width+1)& (0+255),f,b
  5022  011DB8  B0D8               	btfsc	status,0,c
  5023  011DBA  2BDF               	incf	(_width+1)& (0+255),f,b
  5024  011DBC  D03F               	goto	u7840
  5025  011DBE                     l6042:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:             widt
      +                          h = atoi(*fmt);
  5029  011DBE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5030  011DC0  6ED9               	movwf	fsr2l,c
  5031  011DC2  6ADA               	clrf	fsr2h,c
  5032  011DC4  006F FF78  F008    	movff	postinc2,atoi@s
  5033  011DCA  006F FF74  F009    	movff	postdec2,atoi@s+1
  5034  011DD0  ECA4  F096         	call	_atoi	;wreg free
  5035  011DD4  0060  F020  F0DE   	movff	?_atoi,_width
  5036  011DDA  0060  F024  F0DF   	movff	?_atoi+1,_width+1
  5037                           
  5038                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:             whil
      +                          e ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5039  011DE0  D006               	goto	l6046
  5040  011DE2                     l6044:
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:                 
      +                          ++*fmt;
  5044  011DE2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5045  011DE4  6ED9               	movwf	fsr2l,c
  5046  011DE6  6ADA               	clrf	fsr2h,c
  5047  011DE8  2ADE               	incf	postinc2,f,c
  5048  011DEA  0E00               	movlw	0
  5049  011DEC  22DD               	addwfc	postdec2,f,c
  5050  011DEE                     l6046:
  5051  011DEE  0ED0               	movlw	208
  5052  011DF0  0100               	movlb	0	; () banked
  5053  011DF2  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5054  011DF4  0EFF               	movlw	255
  5055  011DF6  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5056  011DF8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5057  011DFA  6ED9               	movwf	fsr2l,c
  5058  011DFC  6ADA               	clrf	fsr2h,c
  5059  011DFE  006F FF7B FFF6     	movff	postinc2,tblptrl
  5060  011E04  006F FF77 FFF7     	movff	postdec2,tblptrh
  5061  011E0A                     	if	0	;tblptru may be non-zero
  5062  011E0A                     	endif
  5063  011E0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5064  011E0A  0E00               	movlw	low (__mediumconst shr (0+16))
  5065  011E0C  6EF8               	movwf	tblptru,c
  5066  011E0E                     	endif
  5067  011E0E  0008               	tblrd		*
  5068  011E10  50F5               	movf	tablat,w,c
  5069  011E12  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5070  011E14  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5071  011E16  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5072  011E18  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5073  011E1A  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5074  011E1C  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5075  011E1E  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5076  011E20  E106               	bnz	u7820
  5077  011E22  0E0A               	movlw	10
  5078  011E24  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5079  011E26  B0D8               	btfsc	status,0,c
  5080  011E28  D002               	goto	u7820
  5081  011E2A  0E01               	movlw	1
  5082  011E2C  D001               	goto	u7830
  5083  011E2E                     u7820:
  5084  011E2E  0E00               	movlw	0
  5085  011E30                     u7830:
  5086  011E30  6FA7               	movwf	_vfpfcnvrt$652& (0+255),b
  5087  011E32  6BA8               	clrf	(_vfpfcnvrt$652+1)& (0+255),b
  5088                           
  5089                           ; BSR set to: 0
  5090  011E34  51A7               	movf	_vfpfcnvrt$652& (0+255),w,b
  5091  011E36  11A8               	iorwf	(_vfpfcnvrt$652+1)& (0+255),w,b
  5092  011E38  A4D8               	btfss	status,2,c
  5093  011E3A  D7D3               	goto	l6044
  5094  011E3C                     u7840:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:         if ((*fm
      +                          t)[0] == '.') {
  5098  011E3C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5099  011E3E  6ED9               	movwf	fsr2l,c
  5100  011E40  6ADA               	clrf	fsr2h,c
  5101  011E42  006F FF7B FFF6     	movff	postinc2,tblptrl
  5102  011E48  006F FF77 FFF7     	movff	postdec2,tblptrh
  5103  011E4E                     	if	0	;tblptru may be non-zero
  5104  011E4E                     	endif
  5105  011E4E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5106  011E4E  0E00               	movlw	low (__mediumconst shr (0+16))
  5107  011E50  6EF8               	movwf	tblptru,c
  5108  011E52                     	endif
  5109  011E52  0008               	tblrd		*
  5110  011E54  50F5               	movf	tablat,w,c
  5111  011E56  0A2E               	xorlw	46
  5112  011E58  A4D8               	btfss	status,2,c
  5113  011E5A  D06E               	goto	u7890
  5114                           
  5115                           ; BSR set to: 0
  5116                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:             prec
      +                           = 0;
  5117  011E5C  0E00               	movlw	0
  5118  011E5E  6FE1               	movwf	(_prec+1)& (0+255),b
  5119  011E60  0E00               	movlw	0
  5120  011E62  6FE0               	movwf	_prec& (0+255),b
  5121                           
  5122                           ; BSR set to: 0
  5123                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:             ++*f
      +                          mt;
  5124  011E64  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5125  011E66  6ED9               	movwf	fsr2l,c
  5126  011E68  6ADA               	clrf	fsr2h,c
  5127  011E6A  2ADE               	incf	postinc2,f,c
  5128  011E6C  0E00               	movlw	0
  5129  011E6E  22DD               	addwfc	postdec2,f,c
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:             if (
      +                          (*fmt)[0] == '*') {
  5133  011E70  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5134  011E72  6ED9               	movwf	fsr2l,c
  5135  011E74  6ADA               	clrf	fsr2h,c
  5136  011E76  006F FF7B FFF6     	movff	postinc2,tblptrl
  5137  011E7C  006F FF77 FFF7     	movff	postdec2,tblptrh
  5138  011E82                     	if	0	;tblptru may be non-zero
  5139  011E82                     	endif
  5140  011E82                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5141  011E82  0E00               	movlw	low (__mediumconst shr (0+16))
  5142  011E84  6EF8               	movwf	tblptru,c
  5143  011E86                     	endif
  5144  011E86  0008               	tblrd		*
  5145  011E88  50F5               	movf	tablat,w,c
  5146  011E8A  0A2A               	xorlw	42
  5147  011E8C  A4D8               	btfss	status,2,c
  5148  011E8E  D015               	goto	l6064
  5149                           
  5150                           ; BSR set to: 0
  5151                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:                 
      +                          ++*fmt;
  5152  011E90  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5153  011E92  6ED9               	movwf	fsr2l,c
  5154  011E94  6ADA               	clrf	fsr2h,c
  5155  011E96  2ADE               	incf	postinc2,f,c
  5156  011E98  0E00               	movlw	0
  5157  011E9A  22DD               	addwfc	postdec2,f,c
  5158                           
  5159                           ; BSR set to: 0
  5160                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:                 
      +                          prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5161  011E9C  505F               	movf	vfpfcnvrt@ap^0,w,c
  5162  011E9E  6ED9               	movwf	fsr2l,c
  5163  011EA0  6ADA               	clrf	fsr2h,c
  5164  011EA2  0E02               	movlw	2
  5165  011EA4  26DF               	addwf	indf2,f,c
  5166  011EA6  5CDF               	subwf	indf2,w,c
  5167  011EA8  6ED9               	movwf	fsr2l,c
  5168  011EAA  6ADA               	clrf	fsr2h,c
  5169  011EAC  006F FF78  F0E0    	movff	postinc2,_prec
  5170  011EB2  006F FF78  F0E1    	movff	postinc2,_prec+1
  5171                           
  5172                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:             } el
      +                          se {
  5173  011EB8  D03F               	goto	u7890
  5174  011EBA                     l6064:
  5175                           
  5176                           ; BSR set to: 0
  5177                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:                 
      +                          prec = atoi(*fmt);
  5178  011EBA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5179  011EBC  6ED9               	movwf	fsr2l,c
  5180  011EBE  6ADA               	clrf	fsr2h,c
  5181  011EC0  006F FF78  F008    	movff	postinc2,atoi@s
  5182  011EC6  006F FF74  F009    	movff	postdec2,atoi@s+1
  5183  011ECC  ECA4  F096         	call	_atoi	;wreg free
  5184  011ED0  0060  F020  F0E0   	movff	?_atoi,_prec
  5185  011ED6  0060  F024  F0E1   	movff	?_atoi+1,_prec+1
  5186                           
  5187                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:                 
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5188  011EDC  D006               	goto	l6068
  5189  011EDE                     l6066:
  5190                           
  5191                           ; BSR set to: 0
  5192                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:                 
      +                              ++*fmt;
  5193  011EDE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5194  011EE0  6ED9               	movwf	fsr2l,c
  5195  011EE2  6ADA               	clrf	fsr2h,c
  5196  011EE4  2ADE               	incf	postinc2,f,c
  5197  011EE6  0E00               	movlw	0
  5198  011EE8  22DD               	addwfc	postdec2,f,c
  5199  011EEA                     l6068:
  5200  011EEA  0ED0               	movlw	208
  5201  011EEC  0100               	movlb	0	; () banked
  5202  011EEE  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5203  011EF0  0EFF               	movlw	255
  5204  011EF2  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5205  011EF4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5206  011EF6  6ED9               	movwf	fsr2l,c
  5207  011EF8  6ADA               	clrf	fsr2h,c
  5208  011EFA  006F FF7B FFF6     	movff	postinc2,tblptrl
  5209  011F00  006F FF77 FFF7     	movff	postdec2,tblptrh
  5210  011F06                     	if	0	;tblptru may be non-zero
  5211  011F06                     	endif
  5212  011F06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5213  011F06  0E00               	movlw	low (__mediumconst shr (0+16))
  5214  011F08  6EF8               	movwf	tblptru,c
  5215  011F0A                     	endif
  5216  011F0A  0008               	tblrd		*
  5217  011F0C  50F5               	movf	tablat,w,c
  5218  011F0E  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5219  011F10  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5220  011F12  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5221  011F14  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5222  011F16  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5223  011F18  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5224  011F1A  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5225  011F1C  E106               	bnz	u7870
  5226  011F1E  0E0A               	movlw	10
  5227  011F20  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5228  011F22  B0D8               	btfsc	status,0,c
  5229  011F24  D002               	goto	u7870
  5230  011F26  0E01               	movlw	1
  5231  011F28  D001               	goto	u7880
  5232  011F2A                     u7870:
  5233  011F2A  0E00               	movlw	0
  5234  011F2C                     u7880:
  5235  011F2C  6FA9               	movwf	_vfpfcnvrt$653& (0+255),b
  5236  011F2E  6BAA               	clrf	(_vfpfcnvrt$653+1)& (0+255),b
  5237                           
  5238                           ; BSR set to: 0
  5239  011F30  51A9               	movf	_vfpfcnvrt$653& (0+255),w,b
  5240  011F32  11AA               	iorwf	(_vfpfcnvrt$653+1)& (0+255),w,b
  5241  011F34  A4D8               	btfss	status,2,c
  5242  011F36  D7D3               	goto	l6066
  5243  011F38                     u7890:
  5244                           
  5245                           ; BSR set to: 0
  5246                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:         ct[0] = 
      +                          tolower((int)(*fmt)[0]);
  5247  011F38  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5248  011F3A  6ED9               	movwf	fsr2l,c
  5249  011F3C  6ADA               	clrf	fsr2h,c
  5250  011F3E  006F FF7B FFF6     	movff	postinc2,tblptrl
  5251  011F44  006F FF77 FFF7     	movff	postdec2,tblptrh
  5252  011F4A                     	if	0	;tblptru may be non-zero
  5253  011F4A                     	endif
  5254  011F4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5255  011F4A  0E00               	movlw	low (__mediumconst shr (0+16))
  5256  011F4C  6EF8               	movwf	tblptru,c
  5257  011F4E                     	endif
  5258  011F4E  0008               	tblrd		*
  5259  011F50  50F5               	movf	tablat,w,c
  5260  011F52  6E07               	movwf	tolower@c^0,c
  5261  011F54  6A08               	clrf	(tolower@c+1)^0,c
  5262  011F56  ECEF  F0A0         	call	_tolower	;wreg free
  5263  011F5A  5007               	movf	?_tolower^0,w,c
  5264  011F5C  0100               	movlb	0	; () banked
  5265  011F5E  6FAD               	movwf	vfpfcnvrt@ct& (0+255),b
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:         if (ct[0
      +                          ]) {
  5269  011F60  51AD               	movf	vfpfcnvrt@ct& (0+255),w,b
  5270  011F62  B4D8               	btfsc	status,2,c
  5271  011F64  D03F               	goto	l6084
  5272                           
  5273                           ; BSR set to: 0
  5274                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:             ct[1
      +                          ] = tolower((int)(*fmt)[1]);
  5275  011F66  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5276  011F68  6ED9               	movwf	fsr2l,c
  5277  011F6A  6ADA               	clrf	fsr2h,c
  5278  011F6C  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt
  5279  011F72  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+1
  5280  011F78  0E01               	movlw	1
  5281  011F7A  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5282  011F7C  0E00               	movlw	0
  5283  011F7E  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5284  011F80  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5285  011F86  0060  F293  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5286  011F8C                     	if	0	;tblptru may be non-zero
  5287  011F8C                     	endif
  5288  011F8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5289  011F8C  0E00               	movlw	low (__mediumconst shr (0+16))
  5290  011F8E  6EF8               	movwf	tblptru,c
  5291  011F90                     	endif
  5292  011F90  0008               	tblrd		*
  5293  011F92  50F5               	movf	tablat,w,c
  5294  011F94  6E07               	movwf	tolower@c^0,c
  5295  011F96  6A08               	clrf	(tolower@c+1)^0,c
  5296  011F98  ECEF  F0A0         	call	_tolower	;wreg free
  5297  011F9C  5007               	movf	?_tolower^0,w,c
  5298  011F9E  0100               	movlb	0	; () banked
  5299  011FA0  6FAE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5300                           
  5301                           ; BSR set to: 0
  5302                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:             if (
      +                          ct[1]) {
  5303  011FA2  51AE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5304  011FA4  B4D8               	btfsc	status,2,c
  5305  011FA6  D01E               	goto	l6084
  5306                           
  5307                           ; BSR set to: 0
  5308                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:                 
      +                          ct[2] = tolower((int)(*fmt)[2]);
  5309  011FA8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5310  011FAA  6ED9               	movwf	fsr2l,c
  5311  011FAC  6ADA               	clrf	fsr2h,c
  5312  011FAE  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt
  5313  011FB4  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+1
  5314  011FBA  0E02               	movlw	2
  5315  011FBC  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5316  011FBE  0E00               	movlw	0
  5317  011FC0  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5318  011FC2  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5319  011FC8  0060  F293  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5320  011FCE                     	if	0	;tblptru may be non-zero
  5321  011FCE                     	endif
  5322  011FCE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5323  011FCE  0E00               	movlw	low (__mediumconst shr (0+16))
  5324  011FD0  6EF8               	movwf	tblptru,c
  5325  011FD2                     	endif
  5326  011FD2  0008               	tblrd		*
  5327  011FD4  50F5               	movf	tablat,w,c
  5328  011FD6  6E07               	movwf	tolower@c^0,c
  5329  011FD8  6A08               	clrf	(tolower@c+1)^0,c
  5330  011FDA  ECEF  F0A0         	call	_tolower	;wreg free
  5331  011FDE  5007               	movf	?_tolower^0,w,c
  5332  011FE0  0100               	movlb	0	; () banked
  5333  011FE2  6FAF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5334  011FE4                     l6084:
  5335                           
  5336                           ; BSR set to: 0
  5337                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:         if (ct[0
      +                          ] == 'f') {
  5338  011FE4  0E66               	movlw	102
  5339  011FE6  19AD               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5340  011FE8  A4D8               	btfss	status,2,c
  5341  011FEA  D047               	goto	l6096
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:             c = 
      +                          (*fmt)[0];
  5345  011FEC  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5346  011FEE  6ED9               	movwf	fsr2l,c
  5347  011FF0  6ADA               	clrf	fsr2h,c
  5348  011FF2  006F FF7B FFF6     	movff	postinc2,tblptrl
  5349  011FF8  006F FF77 FFF7     	movff	postdec2,tblptrh
  5350  011FFE                     	if	0	;tblptru may be non-zero
  5351  011FFE                     	endif
  5352  011FFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5353  011FFE  0E00               	movlw	low (__mediumconst shr (0+16))
  5354  012000  6EF8               	movwf	tblptru,c
  5355  012002                     	endif
  5356  012002  0008               	tblrd		*
  5357  012004  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5358                           
  5359                           ; BSR set to: 0
  5360                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:             ++*f
      +                          mt;
  5361  01200A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5362  01200C  6ED9               	movwf	fsr2l,c
  5363  01200E  6ADA               	clrf	fsr2h,c
  5364  012010  2ADE               	incf	postinc2,f,c
  5365  012012  0E00               	movlw	0
  5366  012014  22DD               	addwfc	postdec2,f,c
  5367                           
  5368                           ; BSR set to: 0
  5369                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:             f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5370  012016  505F               	movf	vfpfcnvrt@ap^0,w,c
  5371  012018  6ED9               	movwf	fsr2l,c
  5372  01201A  6ADA               	clrf	fsr2h,c
  5373  01201C  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5374  012022  0E04               	movlw	4
  5375  012024  26DF               	addwf	indf2,f,c
  5376  012026  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5377  012028  6ED9               	movwf	fsr2l,c
  5378  01202A  6ADA               	clrf	fsr2h,c
  5379  01202C  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5380  012032  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5381  012038  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5382  01203E  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5383  012044                     l6092:
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:             retu
      +                          rn efgtoa(fp, f, c);
  5387  012044  0060  F174  F060   	movff	vfpfcnvrt@fp,efgtoa@fp
  5388  01204A  0060  F2C0  F061   	movff	vfpfcnvrt@f,efgtoa@f
  5389  012050  0060  F2C4  F062   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5390  012056  0060  F2C8  F063   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5391  01205C  0060  F2CC  F064   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5392  012062  0060  F2D0  F065   	movff	vfpfcnvrt@c,efgtoa@c
  5393  012068  ECBC  F085         	call	_efgtoa	;wreg free
  5394  01206C  0060  F180  F05D   	movff	?_efgtoa,?_vfpfcnvrt
  5395  012072  0060  F184  F05E   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5396  012078  0012               	return	
  5397  01207A                     l6096:
  5398                           
  5399                           ; BSR set to: 0
  5400                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:         if (!str
      +                          ncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5401  01207A  0EAD               	movlw	low vfpfcnvrt@ct
  5402  01207C  6E01               	movwf	strncmp@_l^0,c
  5403  01207E  0EFB               	movlw	low STR_23
  5404  012080  6E02               	movwf	strncmp@_r^0,c
  5405  012082  0EFF               	movlw	high STR_23
  5406  012084  6E03               	movwf	(strncmp@_r+1)^0,c
  5407  012086  0E00               	movlw	0
  5408  012088  6E05               	movwf	(strncmp@n+1)^0,c
  5409  01208A  0E02               	movlw	2
  5410  01208C  6E04               	movwf	strncmp@n^0,c
  5411  01208E  EC25  F09C         	call	_strncmp	;wreg free
  5412  012092  5001               	movf	?_strncmp^0,w,c
  5413  012094  1002               	iorwf	(?_strncmp+1)^0,w,c
  5414  012096  A4D8               	btfss	status,2,c
  5415  012098  D05C               	goto	l6114
  5416                           
  5417                           ; BSR set to: 0
  5418                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:             if (
      +                          (0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5419  01209A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5420  01209C  6ED9               	movwf	fsr2l,c
  5421  01209E  6ADA               	clrf	fsr2h,c
  5422  0120A0  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt
  5423  0120A6  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+1
  5424  0120AC  0E01               	movlw	1
  5425  0120AE  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5426  0120B0  0E00               	movlw	0
  5427  0120B2  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5428  0120B4  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5429  0120BA  0060  F293  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5430  0120C0                     	if	0	;tblptru may be non-zero
  5431  0120C0                     	endif
  5432  0120C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5433  0120C0  0E00               	movlw	low (__mediumconst shr (0+16))
  5434  0120C2  6EF8               	movwf	tblptru,c
  5435  0120C4                     	endif
  5436  0120C4  0008               	tblrd		*
  5437  0120C6  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5438  0120CC  0EBF               	movlw	191
  5439  0120CE  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5440  0120D0  0EFF               	movlw	255
  5441  0120D2  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5442  0120D4  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5443  0120D6  6ED9               	movwf	fsr2l,c
  5444  0120D8  6ADA               	clrf	fsr2h,c
  5445  0120DA  006F FF7B FFF6     	movff	postinc2,tblptrl
  5446  0120E0  006F FF77 FFF7     	movff	postdec2,tblptrh
  5447  0120E6                     	if	0	;tblptru may be non-zero
  5448  0120E6                     	endif
  5449  0120E6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5450  0120E6  0E00               	movlw	low (__mediumconst shr (0+16))
  5451  0120E8  6EF8               	movwf	tblptru,c
  5452  0120EA                     	endif
  5453  0120EA  0008               	tblrd		*
  5454  0120EC  50F5               	movf	tablat,w,c
  5455  0120EE  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5456  0120F0  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5457  0120F2  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5458  0120F4  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5459  0120F6  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5460  0120F8  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5461  0120FA  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5462  0120FC  E106               	bnz	u7940
  5463  0120FE  0E1A               	movlw	26
  5464  012100  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5465  012102  B0D8               	btfsc	status,0,c
  5466  012104  D002               	goto	u7940
  5467  012106  0E01               	movlw	1
  5468  012108  D001               	goto	u7950
  5469  01210A                     u7940:
  5470  01210A  0E00               	movlw	0
  5471  01210C                     u7950:
  5472  01210C  6FAB               	movwf	_vfpfcnvrt$657& (0+255),b
  5473  01210E  6BAC               	clrf	(_vfpfcnvrt$657+1)& (0+255),b
  5474                           
  5475                           ; BSR set to: 0
  5476  012110  51AB               	movf	_vfpfcnvrt$657& (0+255),w,b
  5477  012112  11AC               	iorwf	(_vfpfcnvrt$657+1)& (0+255),w,b
  5478                           
  5479                           ; BSR set to: 0
  5480                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:                 
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5481                           
  5482                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:             } el
      +                          se {
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:                 
      +                          f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5486  012114  505F               	movf	vfpfcnvrt@ap^0,w,c
  5487  012116  6ED9               	movwf	fsr2l,c
  5488  012118  6ADA               	clrf	fsr2h,c
  5489  01211A  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5490  012120  0E04               	movlw	4
  5491  012122  26DF               	addwf	indf2,f,c
  5492  012124  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5493  012126  6ED9               	movwf	fsr2l,c
  5494  012128  6ADA               	clrf	fsr2h,c
  5495  01212A  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5496  012130  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5497  012136  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5498  01213C  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5499                           
  5500                           ; BSR set to: 0
  5501                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:             *fmt
      +                           += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5502  012142  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5503  012144  6ED9               	movwf	fsr2l,c
  5504  012146  6ADA               	clrf	fsr2h,c
  5505  012148  0E02               	movlw	2
  5506  01214A  26DE               	addwf	postinc2,f,c
  5507  01214C  0E00               	movlw	0
  5508  01214E  22DD               	addwfc	postdec2,f,c
  5509  012150  D779               	goto	l6092
  5510  012152                     l6114:
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:         if ((*f
      +                          mt)[0] == '%') {
  5514  012152  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5515  012154  6ED9               	movwf	fsr2l,c
  5516  012156  6ADA               	clrf	fsr2h,c
  5517  012158  006F FF7B FFF6     	movff	postinc2,tblptrl
  5518  01215E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5519  012164                     	if	0	;tblptru may be non-zero
  5520  012164                     	endif
  5521  012164                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5522  012164  0E00               	movlw	low (__mediumconst shr (0+16))
  5523  012166  6EF8               	movwf	tblptru,c
  5524  012168                     	endif
  5525  012168  0008               	tblrd		*
  5526  01216A  50F5               	movf	tablat,w,c
  5527  01216C  0A25               	xorlw	37
  5528  01216E  A4D8               	btfss	status,2,c
  5529  012170  D014               	goto	l6124
  5530                           
  5531                           ; BSR set to: 0
  5532                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:             ++*
      +                          fmt;
  5533  012172  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5534  012174  6ED9               	movwf	fsr2l,c
  5535  012176  6ADA               	clrf	fsr2h,c
  5536  012178  2ADE               	incf	postinc2,f,c
  5537  01217A  0E00               	movlw	0
  5538  01217C  22DD               	addwfc	postdec2,f,c
  5539                           
  5540                           ; BSR set to: 0
  5541                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:             fpu
      +                          tc((int)'%', fp);
  5542  01217E  0E00               	movlw	0
  5543  012180  6E02               	movwf	(fputc@c+1)^0,c
  5544  012182  0E25               	movlw	37
  5545  012184  6E01               	movwf	fputc@c^0,c
  5546  012186  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5547  01218C  EC79  F09D         	call	_fputc	;wreg free
  5548  012190                     l6120:
  5549                           
  5550                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:             ret
      +                          urn 1;
  5551  012190  0E00               	movlw	0
  5552  012192  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5553  012194  0E01               	movlw	1
  5554  012196  6E5D               	movwf	?_vfpfcnvrt^0,c
  5555  012198  0012               	return	
  5556  01219A                     l6124:
  5557                           
  5558                           ; BSR set to: 0
  5559                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5560  01219A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5561  01219C  6ED9               	movwf	fsr2l,c
  5562  01219E  6ADA               	clrf	fsr2h,c
  5563  0121A0  2ADE               	incf	postinc2,f,c
  5564  0121A2  0E00               	movlw	0
  5565  0121A4  22DD               	addwfc	postdec2,f,c
  5566                           
  5567                           ; BSR set to: 0
  5568                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:         return 
      +                          0;
  5569  0121A6  0E00               	movlw	0
  5570  0121A8  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5571  0121AA  0E00               	movlw	0
  5572  0121AC  6E5D               	movwf	?_vfpfcnvrt^0,c
  5573  0121AE  0012               	return	
  5574  0121B0                     l6130:
  5575                           
  5576                           ; BSR set to: 0
  5577                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)
      +                          (*fmt)[0], fp);
  5578  0121B0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5579  0121B2  6ED9               	movwf	fsr2l,c
  5580  0121B4  6ADA               	clrf	fsr2h,c
  5581  0121B6  006F FF7B FFF6     	movff	postinc2,tblptrl
  5582  0121BC  006F FF77 FFF7     	movff	postdec2,tblptrh
  5583  0121C2                     	if	0	;tblptru may be non-zero
  5584  0121C2                     	endif
  5585  0121C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5586  0121C2  0E00               	movlw	low (__mediumconst shr (0+16))
  5587  0121C4  6EF8               	movwf	tblptru,c
  5588  0121C6                     	endif
  5589  0121C6  0008               	tblrd		*
  5590  0121C8  50F5               	movf	tablat,w,c
  5591  0121CA  6E01               	movwf	fputc@c^0,c
  5592  0121CC  6A02               	clrf	(fputc@c+1)^0,c
  5593  0121CE  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5594  0121D4  EC79  F09D         	call	_fputc	;wreg free
  5595                           
  5596                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5597  0121D8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5598  0121DA  6ED9               	movwf	fsr2l,c
  5599  0121DC  6ADA               	clrf	fsr2h,c
  5600  0121DE  2ADE               	incf	postinc2,f,c
  5601  0121E0  0E00               	movlw	0
  5602  0121E2  22DD               	addwfc	postdec2,f,c
  5603  0121E4  D7D5               	goto	l6120
  5604  0121E6                     __end_of_vfpfcnvrt:
  5605                           	opt callstack 0
  5606                           
  5607 ;; *************** function _strncmp *****************
  5608 ;; Defined at:
  5609 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  5610 ;; Parameters:    Size  Location     Type
  5611 ;;  _l              1    0[COMRAM] PTR const unsigned char 
  5612 ;;		 -> vfpfcnvrt@ct(3), 
  5613 ;;  _r              2    1[COMRAM] PTR const unsigned char 
  5614 ;;		 -> STR_25(3), 
  5615 ;;  n               2    3[COMRAM] unsigned int 
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  r               2    6[COMRAM] PTR const unsigned char 
  5618 ;;		 -> STR_25(3), 
  5619 ;;  l               1    8[COMRAM] PTR const unsigned char 
  5620 ;;		 -> vfpfcnvrt@ct(3), 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  2    0[COMRAM] int 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5625 ;; Tracked objects:
  5626 ;;		On entry : 3F/0
  5627 ;;		On exit  : 3F/0
  5628 ;;		Unchanged: 3F/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5630 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5631 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5633 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5634 ;;Total ram usage:        9 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; This function calls:
  5637 ;;		Nothing
  5638 ;; This function is called by:
  5639 ;;		_vfpfcnvrt
  5640 ;; This function uses a non-reentrant model
  5641 ;;
  5642                           
  5643                           	psect	text12
  5644  01384A                     __ptext12:
  5645                           	opt callstack 0
  5646  01384A                     _strncmp:
  5647                           	opt callstack 26
  5648                           
  5649                           ; BSR set to: 0
  5650                           
  5651                           ;incstack = 0
  5652  01384A  0060  F004  F009   	movff	strncmp@_l,strncmp@l
  5653  013850  0060  F008  F007   	movff	strncmp@_r,strncmp@r
  5654  013856  0060  F00C  F008   	movff	strncmp@_r+1,strncmp@r+1
  5655  01385C  0604               	decf	strncmp@n^0,f,c
  5656  01385E  A0D8               	btfss	status,0,c
  5657  013860  0605               	decf	(strncmp@n+1)^0,f,c
  5658  013862  2804               	incf	strncmp@n^0,w,c
  5659  013864  E10E               	bnz	l4768
  5660  013866  2805               	incf	(strncmp@n+1)^0,w,c
  5661  013868  A4D8               	btfss	status,2,c
  5662  01386A  D00B               	goto	l4768
  5663                           
  5664                           ; BSR set to: 0
  5665  01386C  0E00               	movlw	0
  5666  01386E  6E02               	movwf	(?_strncmp+1)^0,c
  5667  013870  0E00               	movlw	0
  5668  013872  6E01               	movwf	?_strncmp^0,c
  5669  013874  0012               	return	
  5670  013876                     l4766:
  5671                           
  5672                           ; BSR set to: 0
  5673  013876  2A09               	incf	strncmp@l^0,f,c
  5674  013878  4A07               	infsnz	strncmp@r^0,f,c
  5675  01387A  2A08               	incf	(strncmp@r+1)^0,f,c
  5676  01387C  0604               	decf	strncmp@n^0,f,c
  5677  01387E  A0D8               	btfss	status,0,c
  5678  013880  0605               	decf	(strncmp@n+1)^0,f,c
  5679  013882                     l4768:
  5680                           
  5681                           ; BSR set to: 0
  5682  013882  5009               	movf	strncmp@l^0,w,c
  5683  013884  6ED9               	movwf	fsr2l,c
  5684  013886  6ADA               	clrf	fsr2h,c
  5685  013888  50DF               	movf	indf2,w,c
  5686  01388A  B4D8               	btfsc	status,2,c
  5687  01388C  D023               	goto	u5720
  5688                           
  5689                           ; BSR set to: 0
  5690  01388E  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5691  013894  0060  F023  FFF7   	movff	strncmp@r+1,tblptrh
  5692  01389A                     	if	0	;tblptru may be non-zero
  5693  01389A                     	endif
  5694  01389A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5695  01389A  0E00               	movlw	low (__mediumconst shr (0+16))
  5696  01389C  6EF8               	movwf	tblptru,c
  5697  01389E                     	endif
  5698  01389E  0008               	tblrd		*
  5699  0138A0  50F5               	movf	tablat,w,c
  5700  0138A2  0900               	iorlw	0
  5701  0138A4  B4D8               	btfsc	status,2,c
  5702  0138A6  D016               	goto	u5720
  5703                           
  5704                           ; BSR set to: 0
  5705  0138A8  5004               	movf	strncmp@n^0,w,c
  5706  0138AA  1005               	iorwf	(strncmp@n+1)^0,w,c
  5707  0138AC  B4D8               	btfsc	status,2,c
  5708  0138AE  D012               	goto	u5720
  5709                           
  5710                           ; BSR set to: 0
  5711  0138B0  5009               	movf	strncmp@l^0,w,c
  5712  0138B2  6ED9               	movwf	fsr2l,c
  5713  0138B4  6ADA               	clrf	fsr2h,c
  5714  0138B6  50DF               	movf	indf2,w,c
  5715  0138B8  6E06               	movwf	??_strncmp^0,c
  5716  0138BA  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5717  0138C0  0060  F023  FFF7   	movff	strncmp@r+1,tblptrh
  5718  0138C6                     	if	0	;tblptru may be non-zero
  5719  0138C6                     	endif
  5720  0138C6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5721  0138C6  0E00               	movlw	low (__mediumconst shr (0+16))
  5722  0138C8  6EF8               	movwf	tblptru,c
  5723  0138CA                     	endif
  5724  0138CA  0008               	tblrd		*
  5725  0138CC  50F5               	movf	tablat,w,c
  5726  0138CE  1806               	xorwf	??_strncmp^0,w,c
  5727  0138D0  B4D8               	btfsc	status,2,c
  5728  0138D2  D7D1               	goto	l4766
  5729  0138D4                     u5720:
  5730                           
  5731                           ; BSR set to: 0
  5732  0138D4  5009               	movf	strncmp@l^0,w,c
  5733  0138D6  6ED9               	movwf	fsr2l,c
  5734  0138D8  6ADA               	clrf	fsr2h,c
  5735  0138DA  50DF               	movf	indf2,w,c
  5736  0138DC  6E06               	movwf	??_strncmp^0,c
  5737  0138DE  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5738  0138E4  0060  F023  FFF7   	movff	strncmp@r+1,tblptrh
  5739  0138EA                     	if	0	;tblptru may be non-zero
  5740  0138EA                     	endif
  5741  0138EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5742  0138EA  0E00               	movlw	low (__mediumconst shr (0+16))
  5743  0138EC  6EF8               	movwf	tblptru,c
  5744  0138EE                     	endif
  5745  0138EE  0008               	tblrd		*
  5746  0138F0  50F5               	movf	tablat,w,c
  5747  0138F2  5C06               	subwf	??_strncmp^0,w,c
  5748  0138F4  6E01               	movwf	?_strncmp^0,c
  5749  0138F6  6A02               	clrf	(?_strncmp+1)^0,c
  5750  0138F8  A0D8               	btfss	status,0,c
  5751  0138FA  0602               	decf	(?_strncmp+1)^0,f,c
  5752                           
  5753                           ; BSR set to: 0
  5754  0138FC  0012               	return		;funcret
  5755  0138FE                     __end_of_strncmp:
  5756                           	opt callstack 0
  5757                           
  5758 ;; *************** function _efgtoa *****************
  5759 ;; Defined at:
  5760 ;;		line 319 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5761 ;; Parameters:    Size  Location     Type
  5762 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  5763 ;;		 -> sprintf@f(6), 
  5764 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  5765 ;;  c               1    5[BANK0 ] unsigned char 
  5766 ;; Auto vars:     Size  Location     Type
  5767 ;;  u               4   63[BANK0 ] unsigned char 
  5768 ;;  g               4   55[BANK0 ] unsigned char 
  5769 ;;  l               4   49[BANK0 ] unsigned char 
  5770 ;;  h               4   45[BANK0 ] unsigned char 
  5771 ;;  ou              4   11[BANK0 ] unsigned char 
  5772 ;;  n               2   61[BANK0 ] int 
  5773 ;;  e               2   59[BANK0 ] int 
  5774 ;;  i               2   53[BANK0 ] int 
  5775 ;;  w               2   42[BANK0 ] int 
  5776 ;;  p               2   39[BANK0 ] int 
  5777 ;;  sign            2   37[BANK0 ] int 
  5778 ;;  d               2   35[BANK0 ] int 
  5779 ;;  ne              2   33[BANK0 ] int 
  5780 ;;  m               2   31[BANK0 ] int 
  5781 ;;  pp              2   29[BANK0 ] int 
  5782 ;;  t               2   27[BANK0 ] int 
  5783 ;;  mode            1   44[BANK0 ] unsigned char 
  5784 ;;  nmode           1   41[BANK0 ] unsigned char 
  5785 ;; Return value:  Size  Location     Type
  5786 ;;                  2    0[BANK0 ] int 
  5787 ;; Registers used:
  5788 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5789 ;; Tracked objects:
  5790 ;;		On entry : 3F/0
  5791 ;;		On exit  : 0/0
  5792 ;;		Unchanged: 0/0
  5793 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5794 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5795 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5796 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5797 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5798 ;;Total ram usage:       67 bytes
  5799 ;; Hardware stack levels used:    1
  5800 ;; Hardware stack levels required when called:    4
  5801 ;; This function calls:
  5802 ;;		___awdiv
  5803 ;;		___awmod
  5804 ;;		___fladd
  5805 ;;		___fldiv
  5806 ;;		___fleq
  5807 ;;		___flge
  5808 ;;		___flmul
  5809 ;;		___flneg
  5810 ;;		___flsub
  5811 ;;		___fltol
  5812 ;;		___fpclassifyf
  5813 ;;		_floorf
  5814 ;;		_isupper
  5815 ;;		_pad
  5816 ;;		_strcpy
  5817 ;;		_tolower
  5818 ;; This function is called by:
  5819 ;;		_vfpfcnvrt
  5820 ;; This function uses a non-reentrant model
  5821 ;;
  5822                           
  5823                           	psect	text13
  5824  010B78                     __ptext13:
  5825                           	opt callstack 0
  5826  010B78                     _efgtoa:
  5827                           	opt callstack 22
  5828                           
  5829                           ; BSR set to: 0
  5830                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static int efgto
      +                          a(FILE *fp, long double f, char c);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\comm
      +                          on\doprnt.c: 320: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 32
      +                          1:     char mode, nmode;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;F:\Programme\Microchip\xc8\v2.10\p
      +                          ic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;F:\Programme\Microc
      +                          hip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;incstack = 0
  5834  010B78  0E00               	movlw	0
  5835  010B7A  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5836  010B7C  0E00               	movlw	0
  5837  010B7E  6F85               	movwf	efgtoa@sign& (0+255),b
  5838                           
  5839                           ; BSR set to: 0
  5840                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g = f;
  5841  010B80  0060  F184  F097   	movff	efgtoa@f,efgtoa@g
  5842  010B86  0060  F188  F098   	movff	efgtoa@f+1,efgtoa@g+1
  5843  010B8C  0060  F18C  F099   	movff	efgtoa@f+2,efgtoa@g+2
  5844  010B92  0060  F190  F09A   	movff	efgtoa@f+3,efgtoa@g+3
  5845                           
  5846                           ; BSR set to: 0
  5847                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0)
      +                           {
  5848  010B98  AF9A               	btfss	(efgtoa@g+3)& (0+255),7,b
  5849  010B9A  D01E               	goto	l5736
  5850                           
  5851                           ; BSR set to: 0
  5852                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:         sign = 1
      +                          ;
  5853  010B9C  0E00               	movlw	0
  5854  010B9E  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5855  010BA0  0E01               	movlw	1
  5856  010BA2  6F85               	movwf	efgtoa@sign& (0+255),b
  5857                           
  5858                           ; BSR set to: 0
  5859                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  5860  010BA4  0060  F25C  F001   	movff	efgtoa@g,___flneg@f1
  5861  010BAA  0060  F260  F002   	movff	efgtoa@g+1,___flneg@f1+1
  5862  010BB0  0060  F264  F003   	movff	efgtoa@g+2,___flneg@f1+2
  5863  010BB6  0060  F268  F004   	movff	efgtoa@g+3,___flneg@f1+3
  5864  010BBC  ECA5  F0A1         	call	___flneg	;wreg free
  5865  010BC0  0060  F004  F097   	movff	?___flneg,efgtoa@g
  5866  010BC6  0060  F008  F098   	movff	?___flneg+1,efgtoa@g+1
  5867  010BCC  0060  F00C  F099   	movff	?___flneg+2,efgtoa@g+2
  5868  010BD2  0060  F010  F09A   	movff	?___flneg+3,efgtoa@g+3
  5869  010BD8                     l5736:
  5870                           
  5871                           ; BSR set to: 0
  5872                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  5873  010BD8  0E00               	movlw	0
  5874  010BDA  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  5875  010BDC  0E00               	movlw	0
  5876  010BDE  6F9D               	movwf	efgtoa@n& (0+255),b
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w = width;
  5880  010BE0  0060  F378  F08A   	movff	_width,efgtoa@w
  5881  010BE6  0060  F37C  F08B   	movff	_width+1,efgtoa@w+1
  5882                           
  5883                           ; BSR set to: 0
  5884                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if (sign || 
      +                          (flags & (1 << 2))) {
  5885  010BEC  5185               	movf	efgtoa@sign& (0+255),w,b
  5886  010BEE  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5887  010BF0  A4D8               	btfss	status,2,c
  5888  010BF2  D002               	goto	u7290
  5889                           
  5890                           ; BSR set to: 0
  5891  010BF4  A5E2               	btfss	_flags& (0+255),2,b
  5892  010BF6  D014               	goto	l5756
  5893  010BF8                     u7290:
  5894                           
  5895                           ; BSR set to: 0
  5896                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] 
      +                          = sign ? '-' : '+';
  5897  010BF8  5185               	movf	efgtoa@sign& (0+255),w,b
  5898  010BFA  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5899  010BFC  A4D8               	btfss	status,2,c
  5900  010BFE  D004               	goto	l5748
  5901                           
  5902                           ; BSR set to: 0
  5903  010C00  0E00               	movlw	0
  5904  010C02  6F70               	movwf	(_efgtoa$626+1)& (0+255),b
  5905  010C04  0E2B               	movlw	43
  5906  010C06  D003               	goto	L3
  5907  010C08                     l5748:
  5908                           
  5909                           ; BSR set to: 0
  5910  010C08  0E00               	movlw	0
  5911  010C0A  6F70               	movwf	(_efgtoa$626+1)& (0+255),b
  5912  010C0C  0E2D               	movlw	45
  5913  010C0E                     L3:
  5914  010C0E  6F6F               	movwf	_efgtoa$626& (0+255),b
  5915                           
  5916                           ; BSR set to: 0
  5917  010C10  0060  F1BC  F43A   	movff	_efgtoa$626,_dbuf
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:         ++n;
  5921  010C16  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  5922  010C18  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  5923                           
  5924                           ; BSR set to: 0
  5925                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:         --w;
  5926  010C1A  078A               	decf	efgtoa@w& (0+255),f,b
  5927  010C1C  A0D8               	btfss	status,0,c
  5928  010C1E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5929  010C20                     l5756:
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5933  010C20  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5934  010C26  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5935  010C2C  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5936  010C32  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5937  010C38  EC04  F09A         	call	___fpclassifyf	;wreg free
  5938  010C3C  0401               	decf	?___fpclassifyf^0,w,c
  5939  010C3E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5940  010C40  A4D8               	btfss	status,2,c
  5941  010C42  D04F               	goto	l5774
  5942  010C44  0EBF               	movlw	191
  5943  010C46  0100               	movlb	0	; () banked
  5944  010C48  6F66               	movwf	??_efgtoa& (0+255),b
  5945  010C4A  0EFF               	movlw	255
  5946  010C4C  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5947  010C4E  5165               	movf	efgtoa@c& (0+255),w,b
  5948  010C50  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5949  010C52  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5950  010C54  5166               	movf	??_efgtoa& (0+255),w,b
  5951  010C56  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5952  010C58  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5953  010C5A  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5954  010C5C  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5955  010C5E  E106               	bnz	u7320
  5956  010C60  0E1A               	movlw	26
  5957  010C62  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5958  010C64  B0D8               	btfsc	status,0,c
  5959  010C66  D002               	goto	u7320
  5960  010C68  0E01               	movlw	1
  5961  010C6A  D001               	goto	u7330
  5962  010C6C                     u7320:
  5963  010C6C  0E00               	movlw	0
  5964  010C6E                     u7330:
  5965  010C6E  6F71               	movwf	_efgtoa$627& (0+255),b
  5966  010C70  6B72               	clrf	(_efgtoa$627+1)& (0+255),b
  5967                           
  5968                           ; BSR set to: 0
  5969  010C72  5171               	movf	_efgtoa$627& (0+255),w,b
  5970  010C74  1172               	iorwf	(_efgtoa$627+1)& (0+255),w,b
  5971  010C76  B4D8               	btfsc	status,2,c
  5972  010C78  D00D               	goto	l5766
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:             strc
      +                          py(&dbuf[n], "INF");
  5976  010C7A  0E3A               	movlw	low _dbuf
  5977  010C7C  259D               	addwf	efgtoa@n& (0+255),w,b
  5978  010C7E  6E01               	movwf	strcpy@dest^0,c
  5979  010C80  0E04               	movlw	high _dbuf
  5980  010C82  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5981  010C84  6E02               	movwf	(strcpy@dest+1)^0,c
  5982  010C86  0EEB               	movlw	low STR_15
  5983  010C88  6E03               	movwf	strcpy@src^0,c
  5984  010C8A  0EFF               	movlw	high STR_15
  5985  010C8C  6E04               	movwf	(strcpy@src+1)^0,c
  5986  010C8E  ECFE  F09F         	call	_strcpy	;wreg free
  5987                           
  5988                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:         } else {
  5989  010C92  D00C               	goto	l5768
  5990  010C94                     l5766:
  5991                           
  5992                           ; BSR set to: 0
  5993                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:             strc
      +                          py(&dbuf[n], "inf");
  5994  010C94  0E3A               	movlw	low _dbuf
  5995  010C96  259D               	addwf	efgtoa@n& (0+255),w,b
  5996  010C98  6E01               	movwf	strcpy@dest^0,c
  5997  010C9A  0E04               	movlw	high _dbuf
  5998  010C9C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5999  010C9E  6E02               	movwf	(strcpy@dest+1)^0,c
  6000  010CA0  0EF3               	movlw	low STR_16
  6001  010CA2  6E03               	movwf	strcpy@src^0,c
  6002  010CA4  0EFF               	movlw	high STR_16
  6003  010CA6  6E04               	movwf	(strcpy@src+1)^0,c
  6004  010CA8  ECFE  F09F         	call	_strcpy	;wreg free
  6005  010CAC                     l5768:
  6006                           
  6007                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:         w -= ((s
      +                          izeof("inf")/sizeof("inf"[0]))-1);
  6008  010CAC  0100               	movlb	0	; () banked
  6009  010CAE  0EFD               	movlw	253
  6010  010CB0  278A               	addwf	efgtoa@w& (0+255),f,b
  6011  010CB2  0EFF               	movlw	255
  6012  010CB4  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6013  010CB6                     l5770:
  6014                           
  6015                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:         return p
      +                          ad(fp, &dbuf[0], w);
  6016  010CB6  0060  F180  F00F   	movff	efgtoa@fp,pad@fp
  6017  010CBC  0E3A               	movlw	low _dbuf
  6018  010CBE  6E10               	movwf	pad@buf^0,c
  6019  010CC0  0E04               	movlw	high _dbuf
  6020  010CC2  6E11               	movwf	(pad@buf+1)^0,c
  6021  010CC4  0060  F228  F012   	movff	efgtoa@w,pad@p
  6022  010CCA  0060  F22C  F013   	movff	efgtoa@w+1,pad@p+1
  6023  010CD0  ECD9  F09C         	call	_pad	;wreg free
  6024  010CD4  0060  F03C  F060   	movff	?_pad,?_efgtoa
  6025  010CDA  0060  F040  F061   	movff	?_pad+1,?_efgtoa+1
  6026  010CE0  0012               	return	
  6027  010CE2                     l5774:
  6028                           
  6029                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6030  010CE2  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  6031  010CE8  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  6032  010CEE  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  6033  010CF4  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  6034  010CFA  EC04  F09A         	call	___fpclassifyf	;wreg free
  6035  010CFE  5001               	movf	?___fpclassifyf^0,w,c
  6036  010D00  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6037  010D02  A4D8               	btfss	status,2,c
  6038  010D04  D035               	goto	l5792
  6039  010D06  0EBF               	movlw	191
  6040  010D08  0100               	movlb	0	; () banked
  6041  010D0A  6F66               	movwf	??_efgtoa& (0+255),b
  6042  010D0C  0EFF               	movlw	255
  6043  010D0E  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6044  010D10  5165               	movf	efgtoa@c& (0+255),w,b
  6045  010D12  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  6046  010D14  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  6047  010D16  5166               	movf	??_efgtoa& (0+255),w,b
  6048  010D18  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6049  010D1A  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6050  010D1C  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6051  010D1E  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6052  010D20  E106               	bnz	u7360
  6053  010D22  0E1A               	movlw	26
  6054  010D24  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6055  010D26  B0D8               	btfsc	status,0,c
  6056  010D28  D002               	goto	u7360
  6057  010D2A  0E01               	movlw	1
  6058  010D2C  D001               	goto	u7370
  6059  010D2E                     u7360:
  6060  010D2E  0E00               	movlw	0
  6061  010D30                     u7370:
  6062  010D30  6F73               	movwf	_efgtoa$632& (0+255),b
  6063  010D32  6B74               	clrf	(_efgtoa$632+1)& (0+255),b
  6064                           
  6065                           ; BSR set to: 0
  6066  010D34  5173               	movf	_efgtoa$632& (0+255),w,b
  6067  010D36  1174               	iorwf	(_efgtoa$632+1)& (0+255),w,b
  6068  010D38  B4D8               	btfsc	status,2,c
  6069  010D3A  D00D               	goto	l5784
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:             strc
      +                          py(&dbuf[n], "NAN");
  6073  010D3C  0E3A               	movlw	low _dbuf
  6074  010D3E  259D               	addwf	efgtoa@n& (0+255),w,b
  6075  010D40  6E01               	movwf	strcpy@dest^0,c
  6076  010D42  0E04               	movlw	high _dbuf
  6077  010D44  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6078  010D46  6E02               	movwf	(strcpy@dest+1)^0,c
  6079  010D48  0EEF               	movlw	low STR_19
  6080  010D4A  6E03               	movwf	strcpy@src^0,c
  6081  010D4C  0EFF               	movlw	high STR_19
  6082  010D4E  6E04               	movwf	(strcpy@src+1)^0,c
  6083  010D50  ECFE  F09F         	call	_strcpy	;wreg free
  6084                           
  6085                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:         } else {
  6086  010D54  D7AB               	goto	l5768
  6087  010D56                     l5784:
  6088                           
  6089                           ; BSR set to: 0
  6090                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:             strc
      +                          py(&dbuf[n], "nan");
  6091  010D56  0E3A               	movlw	low _dbuf
  6092  010D58  259D               	addwf	efgtoa@n& (0+255),w,b
  6093  010D5A  6E01               	movwf	strcpy@dest^0,c
  6094  010D5C  0E04               	movlw	high _dbuf
  6095  010D5E  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6096  010D60  6E02               	movwf	(strcpy@dest+1)^0,c
  6097  010D62  0EF7               	movlw	low STR_20
  6098  010D64  6E03               	movwf	strcpy@src^0,c
  6099  010D66  0EFF               	movlw	high STR_20
  6100  010D68  6E04               	movwf	(strcpy@src+1)^0,c
  6101  010D6A  ECFE  F09F         	call	_strcpy	;wreg free
  6102  010D6E  D79E               	goto	l5768
  6103  010D70                     l5792:
  6104                           
  6105                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  6106  010D70  0E00               	movlw	0
  6107  010D72  0100               	movlb	0	; () banked
  6108  010D74  6F9F               	movwf	efgtoa@u& (0+255),b
  6109  010D76  0E00               	movlw	0
  6110  010D78  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6111  010D7A  0E80               	movlw	128
  6112  010D7C  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6113  010D7E  0E3F               	movlw	63
  6114  010D80  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6115                           
  6116                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  6117  010D82  0E00               	movlw	0
  6118  010D84  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  6119  010D86  0E00               	movlw	0
  6120  010D88  6F9B               	movwf	efgtoa@e& (0+255),b
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0
      +                          .0)) {
  6124  010D8A  0060  F25C  F001   	movff	efgtoa@g,___fleq@ff1
  6125  010D90  0060  F260  F002   	movff	efgtoa@g+1,___fleq@ff1+1
  6126  010D96  0060  F264  F003   	movff	efgtoa@g+2,___fleq@ff1+2
  6127  010D9C  0060  F268  F004   	movff	efgtoa@g+3,___fleq@ff1+3
  6128  010DA2  0E00               	movlw	0
  6129  010DA4  6E05               	movwf	___fleq@ff2^0,c
  6130  010DA6  0E00               	movlw	0
  6131  010DA8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6132  010DAA  0E00               	movlw	0
  6133  010DAC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6134  010DAE  0E00               	movlw	0
  6135  010DB0  6E08               	movwf	(___fleq@ff2+3)^0,c
  6136  010DB2  EC0D  F09E         	call	___fleq	;wreg free
  6137  010DB6  A0D8               	btfss	status,0,c
  6138  010DB8  D026               	goto	l5802
  6139  010DBA  D09A               	goto	u7410
  6140  010DBC                     l5798:
  6141                           
  6142                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:             u = 
      +                          u*10.0;
  6143  010DBC  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6144  010DC2  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6145  010DC8  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6146  010DCE  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6147  010DD4  0E00               	movlw	0
  6148  010DD6  6E3C               	movwf	___flmul@a^0,c
  6149  010DD8  0E00               	movlw	0
  6150  010DDA  6E3D               	movwf	(___flmul@a+1)^0,c
  6151  010DDC  0E20               	movlw	32
  6152  010DDE  6E3E               	movwf	(___flmul@a+2)^0,c
  6153  010DE0  0E41               	movlw	65
  6154  010DE2  6E3F               	movwf	(___flmul@a+3)^0,c
  6155  010DE4  ECF3  F090         	call	___flmul	;wreg free
  6156  010DE8  0060  F0E0  F09F   	movff	?___flmul,efgtoa@u
  6157  010DEE  0060  F0E4  F0A0   	movff	?___flmul+1,efgtoa@u+1
  6158  010DF4  0060  F0E8  F0A1   	movff	?___flmul+2,efgtoa@u+2
  6159  010DFA  0060  F0EC  F0A2   	movff	?___flmul+3,efgtoa@u+3
  6160                           
  6161                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:             ++e;
  6162  010E00  0100               	movlb	0	; () banked
  6163  010E02  4B9B               	infsnz	efgtoa@e& (0+255),f,b
  6164  010E04  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  6165  010E06                     l5802:
  6166                           
  6167                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:         while (!
      +                          (g < (u*10.0))) {
  6168  010E06  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  6169  010E0C  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  6170  010E12  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  6171  010E18  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  6172  010E1E  0E00               	movlw	0
  6173  010E20  6E3C               	movwf	___flmul@a^0,c
  6174  010E22  0E00               	movlw	0
  6175  010E24  6E3D               	movwf	(___flmul@a+1)^0,c
  6176  010E26  0E20               	movlw	32
  6177  010E28  6E3E               	movwf	(___flmul@a+2)^0,c
  6178  010E2A  0E41               	movlw	65
  6179  010E2C  6E3F               	movwf	(___flmul@a+3)^0,c
  6180  010E2E  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6181  010E34  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6182  010E3A  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6183  010E40  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6184  010E46  ECF3  F090         	call	___flmul	;wreg free
  6185  010E4A  0060  F0E0  F055   	movff	?___flmul,___flge@ff2
  6186  010E50  0060  F0E4  F056   	movff	?___flmul+1,___flge@ff2+1
  6187  010E56  0060  F0E8  F057   	movff	?___flmul+2,___flge@ff2+2
  6188  010E5C  0060  F0EC  F058   	movff	?___flmul+3,___flge@ff2+3
  6189  010E62  EC58  F09B         	call	___flge	;wreg free
  6190  010E66  A0D8               	btfss	status,0,c
  6191  010E68  D027               	goto	l5808
  6192  010E6A  D7A8               	goto	l5798
  6193  010E6C                     l5804:
  6194                           
  6195                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:             u = 
      +                          u/10.0;
  6196  010E6C  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6197  010E72  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6198  010E78  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6199  010E7E  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6200  010E84  0E00               	movlw	0
  6201  010E86  6E23               	movwf	___fldiv@a^0,c
  6202  010E88  0E00               	movlw	0
  6203  010E8A  6E24               	movwf	(___fldiv@a+1)^0,c
  6204  010E8C  0E20               	movlw	32
  6205  010E8E  6E25               	movwf	(___fldiv@a+2)^0,c
  6206  010E90  0E41               	movlw	65
  6207  010E92  6E26               	movwf	(___fldiv@a+3)^0,c
  6208  010E94  EC59  F094         	call	___fldiv	;wreg free
  6209  010E98  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6210  010E9E  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6211  010EA4  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6212  010EAA  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6213                           
  6214                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:             --e;
  6215  010EB0  0100               	movlb	0	; () banked
  6216  010EB2  079B               	decf	efgtoa@e& (0+255),f,b
  6217  010EB4  A0D8               	btfss	status,0,c
  6218  010EB6  079C               	decf	(efgtoa@e+1)& (0+255),f,b
  6219  010EB8                     l5808:
  6220                           
  6221                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:         while (g
      +                           < u) {
  6222  010EB8  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  6223  010EBE  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  6224  010EC4  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  6225  010ECA  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  6226  010ED0  0060  F27C  F055   	movff	efgtoa@u,___flge@ff2
  6227  010ED6  0060  F280  F056   	movff	efgtoa@u+1,___flge@ff2+1
  6228  010EDC  0060  F284  F057   	movff	efgtoa@u+2,___flge@ff2+2
  6229  010EE2  0060  F288  F058   	movff	efgtoa@u+3,___flge@ff2+3
  6230  010EE8  EC58  F09B         	call	___flge	;wreg free
  6231  010EEC  A0D8               	btfss	status,0,c
  6232  010EEE  D7BE               	goto	l5804
  6233  010EF0                     u7410:
  6234                           
  6235                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mode = tolow
      +                          er((int)c);
  6236  010EF0  0060  F194  F007   	movff	efgtoa@c,tolower@c
  6237  010EF6  6A08               	clrf	(tolower@c+1)^0,c
  6238  010EF8  ECEF  F0A0         	call	_tolower	;wreg free
  6239  010EFC  5007               	movf	?_tolower^0,w,c
  6240  010EFE  0100               	movlb	0	; () banked
  6241  010F00  6F8C               	movwf	efgtoa@mode& (0+255),b
  6242                           
  6243                           ; BSR set to: 0
  6244                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nmode = mode
      +                          ;
  6245  010F02  0060  F230  F089   	movff	efgtoa@mode,efgtoa@nmode
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if (mode == 
      +                          'g') {
  6249  010F08  0E67               	movlw	103
  6250  010F0A  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6251  010F0C  A4D8               	btfss	status,2,c
  6252  010F0E  D01B               	goto	l5824
  6253                           
  6254                           ; BSR set to: 0
  6255                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0)
      +                           {
  6256  010F10  51E0               	movf	_prec& (0+255),w,b
  6257  010F12  11E1               	iorwf	(_prec+1)& (0+255),w,b
  6258  010F14  A4D8               	btfss	status,2,c
  6259  010F16  D004               	goto	l5820
  6260                           
  6261                           ; BSR set to: 0
  6262                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  6263  010F18  0E00               	movlw	0
  6264  010F1A  6FE1               	movwf	(_prec+1)& (0+255),b
  6265  010F1C  0E01               	movlw	1
  6266  010F1E  6FE0               	movwf	_prec& (0+255),b
  6267  010F20                     l5820:
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:         p = (0 <
      +                           prec) ? prec : 6;
  6271  010F20  BFE1               	btfsc	(_prec+1)& (0+255),7,b
  6272  010F22  D005               	goto	u7440
  6273  010F24  51E1               	movf	(_prec+1)& (0+255),w,b
  6274  010F26  E108               	bnz	l631
  6275  010F28  05E0               	decf	_prec& (0+255),w,b
  6276  010F2A  B0D8               	btfsc	status,0,c
  6277  010F2C  D005               	goto	l631
  6278  010F2E                     u7440:
  6279                           
  6280                           ; BSR set to: 0
  6281  010F2E  0E00               	movlw	0
  6282  010F30  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  6283  010F32  0E06               	movlw	6
  6284  010F34  6F87               	movwf	efgtoa@p& (0+255),b
  6285  010F36  D00A               	goto	l5830
  6286  010F38                     l631:
  6287                           
  6288                           ; BSR set to: 0
  6289  010F38  0060  F380  F087   	movff	_prec,efgtoa@p
  6290  010F3E  0060  F384  F088   	movff	_prec+1,efgtoa@p+1
  6291  010F44  D003               	goto	l5830
  6292  010F46                     l5824:
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:         p = (pre
      +                          c < 0) ? 6 : prec;
  6296  010F46  AFE1               	btfss	(_prec+1)& (0+255),7,b
  6297  010F48  D7F7               	goto	l631
  6298  010F4A  D7F1               	goto	u7440
  6299  010F4C                     l5830:
  6300                           
  6301                           ; BSR set to: 0
  6302                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if (mode == 
      +                          'g') {
  6303  010F4C  0E67               	movlw	103
  6304  010F4E  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6305  010F50  A4D8               	btfss	status,2,c
  6306  010F52  D024               	goto	l5840
  6307                           
  6308                           ; BSR set to: 0
  6309                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:         if (!(e 
      +                          < -4) && !((p - 1) < e)) {
  6310  010F54  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6311  010F56  D006               	goto	u7470
  6312  010F58  0EFC               	movlw	252
  6313  010F5A  5D9B               	subwf	efgtoa@e& (0+255),w,b
  6314  010F5C  0EFF               	movlw	255
  6315  010F5E  599C               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6316  010F60  A0D8               	btfss	status,0,c
  6317  010F62  D01A               	goto	l5838
  6318  010F64                     u7470:
  6319                           
  6320                           ; BSR set to: 0
  6321  010F64  0EFF               	movlw	255
  6322  010F66  6F66               	movwf	??_efgtoa& (0+255),b
  6323  010F68  0EFF               	movlw	255
  6324  010F6A  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6325  010F6C  0060  F21C  F068   	movff	efgtoa@p,??_efgtoa+2
  6326  010F72  0060  F220  F069   	movff	efgtoa@p+1,??_efgtoa+3
  6327  010F78  5166               	movf	??_efgtoa& (0+255),w,b
  6328  010F7A  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6329  010F7C  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6330  010F7E  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6331  010F80  519B               	movf	efgtoa@e& (0+255),w,b
  6332  010F82  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6333  010F84  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6334  010F86  0A80               	xorlw	128
  6335  010F88  6F6A               	movwf	(??_efgtoa+4)& (0+255),b
  6336  010F8A  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6337  010F8C  0A80               	xorlw	128
  6338  010F8E  596A               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6339  010F90  A0D8               	btfss	status,0,c
  6340  010F92  D002               	goto	l5838
  6341                           
  6342                           ; BSR set to: 0
  6343                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:             nmod
      +                          e = 'f';
  6344  010F94  0E66               	movlw	102
  6345  010F96  D001               	goto	L4
  6346  010F98                     l5838:
  6347                           
  6348                           ; BSR set to: 0
  6349                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:             nmod
      +                          e = 'e';
  6350  010F98  0E65               	movlw	101
  6351  010F9A                     L4:
  6352  010F9A  6F89               	movwf	efgtoa@nmode& (0+255),b
  6353  010F9C                     l5840:
  6354                           
  6355                           ; BSR set to: 0
  6356                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m = p;
  6357  010F9C  0060  F21C  F07F   	movff	efgtoa@p,efgtoa@m
  6358  010FA2  0060  F220  F080   	movff	efgtoa@p+1,efgtoa@m+1
  6359                           
  6360                           ; BSR set to: 0
  6361                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if (!(mode =
      +                          = 'g') || ((nmode == 'f') && (e < 0))) {
  6362  010FA8  0E67               	movlw	103
  6363  010FAA  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6364  010FAC  A4D8               	btfss	status,2,c
  6365  010FAE  D005               	goto	u7510
  6366                           
  6367                           ; BSR set to: 0
  6368  010FB0  0E66               	movlw	102
  6369  010FB2  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6370  010FB4  B4D8               	btfsc	status,2,c
  6371                           
  6372                           ; BSR set to: 0
  6373  010FB6  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6374  010FB8  D002               	goto	l5850
  6375  010FBA                     u7510:
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:         ++m;
  6379  010FBA  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  6380  010FBC  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  6381  010FBE                     l5850:
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if (nmode ==
      +                           'f') {
  6385  010FBE  0E66               	movlw	102
  6386  010FC0  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6387  010FC2  A4D8               	btfss	status,2,c
  6388  010FC4  D016               	goto	l5860
  6389                           
  6390                           ; BSR set to: 0
  6391                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:         if (e < 
      +                          0) {
  6392  010FC6  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6393  010FC8  D00C               	goto	l5856
  6394                           
  6395                           ; BSR set to: 0
  6396                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:             u = 
      +                          1.0;
  6397  010FCA  0E00               	movlw	0
  6398  010FCC  6F9F               	movwf	efgtoa@u& (0+255),b
  6399  010FCE  0E00               	movlw	0
  6400  010FD0  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6401  010FD2  0E80               	movlw	128
  6402  010FD4  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6403  010FD6  0E3F               	movlw	63
  6404  010FD8  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6405                           
  6406                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:             e = 
      +                          0;
  6407  010FDA  0E00               	movlw	0
  6408  010FDC  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  6409  010FDE  0E00               	movlw	0
  6410  010FE0  6F9B               	movwf	efgtoa@e& (0+255),b
  6411  010FE2                     l5856:
  6412                           
  6413                           ; BSR set to: 0
  6414                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:         if (!(mo
      +                          de == 'g')) {
  6415  010FE2  0E67               	movlw	103
  6416  010FE4  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6417  010FE6  B4D8               	btfsc	status,2,c
  6418  010FE8  D004               	goto	l5860
  6419                           
  6420                           ; BSR set to: 0
  6421                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:             m +=
      +                           e;
  6422  010FEA  519B               	movf	efgtoa@e& (0+255),w,b
  6423  010FEC  277F               	addwf	efgtoa@m& (0+255),f,b
  6424  010FEE  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6425  010FF0  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6426  010FF2                     l5860:
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  6430  010FF2  0E00               	movlw	0
  6431  010FF4  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6432  010FF6  0E00               	movlw	0
  6433  010FF8  6F95               	movwf	efgtoa@i& (0+255),b
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h = g;
  6437  010FFA  0060  F25C  F08D   	movff	efgtoa@g,efgtoa@h
  6438  011000  0060  F260  F08E   	movff	efgtoa@g+1,efgtoa@h+1
  6439  011006  0060  F264  F08F   	movff	efgtoa@g+2,efgtoa@h+2
  6440  01100C  0060  F268  F090   	movff	efgtoa@g+3,efgtoa@h+3
  6441                           
  6442                           ; BSR set to: 0
  6443                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  6444  011012  0060  F27C  F06B   	movff	efgtoa@u,efgtoa@ou
  6445  011018  0060  F280  F06C   	movff	efgtoa@u+1,efgtoa@ou+1
  6446  01101E  0060  F284  F06D   	movff	efgtoa@u+2,efgtoa@ou+2
  6447  011024  0060  F288  F06E   	movff	efgtoa@u+3,efgtoa@ou+3
  6448                           
  6449                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6450  01102A  D0AD               	goto	l5874
  6451  01102C                     l5866:
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:         l = floo
      +                          rf(h/u);
  6455  01102C  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6456  011032  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6457  011038  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6458  01103E  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6459  011044  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6460  01104A  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6461  011050  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6462  011056  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6463  01105C  EC59  F094         	call	___fldiv	;wreg free
  6464  011060  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6465  011066  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6466  01106C  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6467  011072  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6468  011078  ECAF  F095         	call	_floorf	;wreg free
  6469  01107C  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6470  011082  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6471  011088  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6472  01108E  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6473                           
  6474                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:         d = (int
      +                          )l;
  6475  011094  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6476  01109A  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6477  0110A0  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6478  0110A6  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6479  0110AC  ECC0  F09B         	call	___fltol	;wreg free
  6480  0110B0  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6481  0110B6  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6482                           
  6483                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:         h -= l*u
      +                          ;
  6484  0110BC  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6485  0110C2  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6486  0110C8  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6487  0110CE  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6488  0110D4  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6489  0110DA  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6490  0110E0  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6491  0110E6  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6492  0110EC  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6493  0110F2  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6494  0110F8  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6495  0110FE  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6496  011104  ECF3  F090         	call	___flmul	;wreg free
  6497  011108  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6498  01110E  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6499  011114  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6500  01111A  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6501  011120  EC63  F0A0         	call	___flsub	;wreg free
  6502  011124  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6503  01112A  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6504  011130  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6505  011136  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6506                           
  6507                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:         u = u/10
      +                          .0;
  6508  01113C  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6509  011142  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6510  011148  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6511  01114E  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6512  011154  0E00               	movlw	0
  6513  011156  6E23               	movwf	___fldiv@a^0,c
  6514  011158  0E00               	movlw	0
  6515  01115A  6E24               	movwf	(___fldiv@a+1)^0,c
  6516  01115C  0E20               	movlw	32
  6517  01115E  6E25               	movwf	(___fldiv@a+2)^0,c
  6518  011160  0E41               	movlw	65
  6519  011162  6E26               	movwf	(___fldiv@a+3)^0,c
  6520  011164  EC59  F094         	call	___fldiv	;wreg free
  6521  011168  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6522  01116E  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6523  011174  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6524  01117A  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6525                           
  6526                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:         ++i;
  6527  011180  0100               	movlb	0	; () banked
  6528  011182  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6529  011184  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6530  011186                     l5874:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6534  011186  517F               	movf	efgtoa@m& (0+255),w,b
  6535  011188  5D95               	subwf	efgtoa@i& (0+255),w,b
  6536  01118A  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6537  01118C  0A80               	xorlw	128
  6538  01118E  6F66               	movwf	??_efgtoa& (0+255),b
  6539  011190  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6540  011192  0A80               	xorlw	128
  6541  011194  5966               	subwfb	??_efgtoa& (0+255),w,b
  6542  011196  A0D8               	btfss	status,0,c
  6543  011198  D749               	goto	l5866
  6544                           
  6545                           ; BSR set to: 0
  6546                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  6547  01119A  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6548  0111A0  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6549  0111A6  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6550  0111AC  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6551  0111B2  0E00               	movlw	0
  6552  0111B4  6E3C               	movwf	___flmul@a^0,c
  6553  0111B6  0E00               	movlw	0
  6554  0111B8  6E3D               	movwf	(___flmul@a+1)^0,c
  6555  0111BA  0EA0               	movlw	160
  6556  0111BC  6E3E               	movwf	(___flmul@a+2)^0,c
  6557  0111BE  0E40               	movlw	64
  6558  0111C0  6E3F               	movwf	(___flmul@a+3)^0,c
  6559  0111C2  ECF3  F090         	call	___flmul	;wreg free
  6560  0111C6  0060  F0E0  F091   	movff	?___flmul,efgtoa@l
  6561  0111CC  0060  F0E4  F092   	movff	?___flmul+1,efgtoa@l+1
  6562  0111D2  0060  F0E8  F093   	movff	?___flmul+2,efgtoa@l+2
  6563  0111D8  0060  F0EC  F094   	movff	?___flmul+3,efgtoa@l+3
  6564                           
  6565                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  6566  0111DE  0060  F234  F051   	movff	efgtoa@h,___flge@ff1
  6567  0111E4  0060  F238  F052   	movff	efgtoa@h+1,___flge@ff1+1
  6568  0111EA  0060  F23C  F053   	movff	efgtoa@h+2,___flge@ff1+2
  6569  0111F0  0060  F240  F054   	movff	efgtoa@h+3,___flge@ff1+3
  6570  0111F6  0060  F244  F055   	movff	efgtoa@l,___flge@ff2
  6571  0111FC  0060  F248  F056   	movff	efgtoa@l+1,___flge@ff2+1
  6572  011202  0060  F24C  F057   	movff	efgtoa@l+2,___flge@ff2+2
  6573  011208  0060  F250  F058   	movff	efgtoa@l+3,___flge@ff2+3
  6574  01120E  EC58  F09B         	call	___flge	;wreg free
  6575  011212  B0D8               	btfsc	status,0,c
  6576  011214  D003               	goto	l5882
  6577                           
  6578                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  6579  011216  0E00               	movlw	0
  6580  011218  0100               	movlb	0	; () banked
  6581  01121A  D020               	goto	L5
  6582  01121C                     l5882:
  6583                           
  6584                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:         if ((h =
      +                          = l) && !(d % 2)) {
  6585  01121C  0060  F234  F001   	movff	efgtoa@h,___fleq@ff1
  6586  011222  0060  F238  F002   	movff	efgtoa@h+1,___fleq@ff1+1
  6587  011228  0060  F23C  F003   	movff	efgtoa@h+2,___fleq@ff1+2
  6588  01122E  0060  F240  F004   	movff	efgtoa@h+3,___fleq@ff1+3
  6589  011234  0060  F244  F005   	movff	efgtoa@l,___fleq@ff2
  6590  01123A  0060  F248  F006   	movff	efgtoa@l+1,___fleq@ff2+1
  6591  011240  0060  F24C  F007   	movff	efgtoa@l+2,___fleq@ff2+2
  6592  011246  0060  F250  F008   	movff	efgtoa@l+3,___fleq@ff2+3
  6593  01124C  EC0D  F09E         	call	___fleq	;wreg free
  6594  011250  A0D8               	btfss	status,0,c
  6595  011252  D00B               	goto	l5888
  6596  011254  0100               	movlb	0	; () banked
  6597  011256  B183               	btfsc	efgtoa@d& (0+255),0,b
  6598  011258  D008               	goto	l5888
  6599                           
  6600                           ; BSR set to: 0
  6601                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:             l = 
      +                          0.0;
  6602  01125A  0E00               	movlw	0
  6603  01125C                     L5:
  6604  01125C  6F91               	movwf	efgtoa@l& (0+255),b
  6605  01125E  0E00               	movlw	0
  6606  011260  6F92               	movwf	(efgtoa@l+1)& (0+255),b
  6607  011262  0E00               	movlw	0
  6608  011264  6F93               	movwf	(efgtoa@l+2)& (0+255),b
  6609  011266  0E00               	movlw	0
  6610  011268  6F94               	movwf	(efgtoa@l+3)& (0+255),b
  6611  01126A                     l5888:
  6612                           
  6613                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  6614  01126A  0060  F25C  F00F   	movff	efgtoa@g,___fladd@b
  6615  011270  0060  F260  F010   	movff	efgtoa@g+1,___fladd@b+1
  6616  011276  0060  F264  F011   	movff	efgtoa@g+2,___fladd@b+2
  6617  01127C  0060  F268  F012   	movff	efgtoa@g+3,___fladd@b+3
  6618  011282  0060  F244  F013   	movff	efgtoa@l,___fladd@a
  6619  011288  0060  F248  F014   	movff	efgtoa@l+1,___fladd@a+1
  6620  01128E  0060  F24C  F015   	movff	efgtoa@l+2,___fladd@a+2
  6621  011294  0060  F250  F016   	movff	efgtoa@l+3,___fladd@a+3
  6622  01129A  ECB5  F092         	call	___fladd	;wreg free
  6623  01129E  0060  F03C  F08D   	movff	?___fladd,efgtoa@h
  6624  0112A4  0060  F040  F08E   	movff	?___fladd+1,efgtoa@h+1
  6625  0112AA  0060  F044  F08F   	movff	?___fladd+2,efgtoa@h+2
  6626  0112B0  0060  F048  F090   	movff	?___fladd+3,efgtoa@h+3
  6627                           
  6628                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  6629  0112B6  0060  F1AC  F09F   	movff	efgtoa@ou,efgtoa@u
  6630  0112BC  0060  F1B0  F0A0   	movff	efgtoa@ou+1,efgtoa@u+1
  6631  0112C2  0060  F1B4  F0A1   	movff	efgtoa@ou+2,efgtoa@u+2
  6632  0112C8  0060  F1B8  F0A2   	movff	efgtoa@ou+3,efgtoa@u+3
  6633                           
  6634                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode 
      +                          == 'e') ? 0 : e;
  6635  0112CE  0E65               	movlw	101
  6636  0112D0  0100               	movlb	0	; () banked
  6637  0112D2  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6638  0112D4  B4D8               	btfsc	status,2,c
  6639  0112D6  D007               	goto	l5896
  6640                           
  6641                           ; BSR set to: 0
  6642  0112D8  0060  F26C  F081   	movff	efgtoa@e,efgtoa@ne
  6643  0112DE  0060  F270  F082   	movff	efgtoa@e+1,efgtoa@ne+1
  6644  0112E4  D004               	goto	l657
  6645  0112E6                     l5896:
  6646                           
  6647                           ; BSR set to: 0
  6648  0112E6  0E00               	movlw	0
  6649  0112E8  6F82               	movwf	(efgtoa@ne+1)& (0+255),b
  6650  0112EA  0E00               	movlw	0
  6651  0112EC  6F81               	movwf	efgtoa@ne& (0+255),b
  6652  0112EE                     l657:
  6653                           
  6654                           ; BSR set to: 0
  6655                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  6656  0112EE  0E00               	movlw	0
  6657  0112F0  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6658  0112F2  0E00               	movlw	0
  6659  0112F4  6F7D               	movwf	efgtoa@pp& (0+255),b
  6660                           
  6661                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  6662  0112F6  0E00               	movlw	0
  6663  0112F8  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  6664  0112FA  0E00               	movlw	0
  6665  0112FC  6F7B               	movwf	efgtoa@t& (0+255),b
  6666                           
  6667                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  6668  0112FE  0E00               	movlw	0
  6669  011300  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6670  011302  0E00               	movlw	0
  6671  011304  6F95               	movwf	efgtoa@i& (0+255),b
  6672                           
  6673                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6674  011306  D0F8               	goto	l5946
  6675  011308                     l5898:
  6676                           
  6677                           ; BSR set to: 0
  6678                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:         l = floo
      +                          rf(h/u);
  6679  011308  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6680  01130E  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6681  011314  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6682  01131A  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6683  011320  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6684  011326  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6685  01132C  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6686  011332  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6687  011338  EC59  F094         	call	___fldiv	;wreg free
  6688  01133C  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6689  011342  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6690  011348  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6691  01134E  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6692  011354  ECAF  F095         	call	_floorf	;wreg free
  6693  011358  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6694  01135E  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6695  011364  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6696  01136A  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6697                           
  6698                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:         d = (int
      +                          )l;
  6699  011370  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6700  011376  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6701  01137C  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6702  011382  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6703  011388  ECC0  F09B         	call	___fltol	;wreg free
  6704  01138C  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6705  011392  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6706                           
  6707                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:         if (!(fl
      +                          ags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6708  011398  0100               	movlb	0	; () banked
  6709  01139A  B9E2               	btfsc	_flags& (0+255),4,b
  6710  01139C  D00C               	goto	l5910
  6711                           
  6712                           ; BSR set to: 0
  6713  01139E  5183               	movf	efgtoa@d& (0+255),w,b
  6714  0113A0  1184               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6715  0113A2  A4D8               	btfss	status,2,c
  6716  0113A4  D008               	goto	l5910
  6717                           
  6718                           ; BSR set to: 0
  6719  0113A6  0E67               	movlw	103
  6720  0113A8  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6721  0113AA  B4D8               	btfsc	status,2,c
  6722                           
  6723                           ; BSR set to: 0
  6724  0113AC  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6725  0113AE  D003               	goto	l5910
  6726                           
  6727                           ; BSR set to: 0
  6728                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:             ++t;
  6729  0113B0  4B7B               	infsnz	efgtoa@t& (0+255),f,b
  6730  0113B2  2B7C               	incf	(efgtoa@t+1)& (0+255),f,b
  6731                           
  6732                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:         } else {
  6733  0113B4  D039               	goto	l5938
  6734  0113B6                     l5910:
  6735                           
  6736                           ; BSR set to: 0
  6737                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:             if (
      +                          !pp && (ne < 0)) {
  6738  0113B6  517D               	movf	efgtoa@pp& (0+255),w,b
  6739  0113B8  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6740  0113BA  B4D8               	btfsc	status,2,c
  6741                           
  6742                           ; BSR set to: 0
  6743  0113BC  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6744  0113BE  D022               	goto	l5930
  6745                           
  6746                           ; BSR set to: 0
  6747                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:                 
      +                          dbuf[n++] = '.';
  6748  0113C0  0E3A               	movlw	low _dbuf
  6749  0113C2  259D               	addwf	efgtoa@n& (0+255),w,b
  6750  0113C4  6ED9               	movwf	fsr2l,c
  6751  0113C6  0E04               	movlw	high _dbuf
  6752  0113C8  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6753  0113CA  6EDA               	movwf	fsr2h,c
  6754  0113CC  0E2E               	movlw	46
  6755  0113CE  6EDF               	movwf	indf2,c
  6756                           
  6757                           ; BSR set to: 0
  6758  0113D0  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6759  0113D2  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6760                           
  6761                           ; BSR set to: 0
  6762                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:                 
      +                          --w;
  6763  0113D4  078A               	decf	efgtoa@w& (0+255),f,b
  6764  0113D6  A0D8               	btfss	status,0,c
  6765  0113D8  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6766                           
  6767                           ; BSR set to: 0
  6768                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:                 
      +                          pp = 1;
  6769  0113DA  0E00               	movlw	0
  6770  0113DC  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6771  0113DE  0E01               	movlw	1
  6772  0113E0  6F7D               	movwf	efgtoa@pp& (0+255),b
  6773  0113E2  D010               	goto	l5930
  6774  0113E4                     l5922:
  6775                           
  6776                           ; BSR set to: 0
  6777                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:                 
      +                          dbuf[n++] = '0';
  6778  0113E4  0E3A               	movlw	low _dbuf
  6779  0113E6  259D               	addwf	efgtoa@n& (0+255),w,b
  6780  0113E8  6ED9               	movwf	fsr2l,c
  6781  0113EA  0E04               	movlw	high _dbuf
  6782  0113EC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6783  0113EE  6EDA               	movwf	fsr2h,c
  6784  0113F0  0E30               	movlw	48
  6785  0113F2  6EDF               	movwf	indf2,c
  6786                           
  6787                           ; BSR set to: 0
  6788  0113F4  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6789  0113F6  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6790                           
  6791                           ; BSR set to: 0
  6792                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:                 
      +                          --w;
  6793  0113F8  078A               	decf	efgtoa@w& (0+255),f,b
  6794  0113FA  A0D8               	btfss	status,0,c
  6795  0113FC  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:                 
      +                          --t;
  6799  0113FE  077B               	decf	efgtoa@t& (0+255),f,b
  6800  011400  A0D8               	btfss	status,0,c
  6801  011402  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  6802  011404                     l5930:
  6803                           
  6804                           ; BSR set to: 0
  6805                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:             whil
      +                          e (t) {
  6806  011404  517B               	movf	efgtoa@t& (0+255),w,b
  6807  011406  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6808  011408  A4D8               	btfss	status,2,c
  6809  01140A  D7EC               	goto	l5922
  6810                           
  6811                           ; BSR set to: 0
  6812                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:             dbuf
      +                          [n++] = '0' + d;
  6813  01140C  0E3A               	movlw	low _dbuf
  6814  01140E  259D               	addwf	efgtoa@n& (0+255),w,b
  6815  011410  6ED9               	movwf	fsr2l,c
  6816  011412  0E04               	movlw	high _dbuf
  6817  011414  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6818  011416  6EDA               	movwf	fsr2h,c
  6819  011418  5183               	movf	efgtoa@d& (0+255),w,b
  6820  01141A  0F30               	addlw	48
  6821  01141C  6EDF               	movwf	indf2,c
  6822                           
  6823                           ; BSR set to: 0
  6824  01141E  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6825  011420  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6826                           
  6827                           ; BSR set to: 0
  6828                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:             --w;
  6829  011422  078A               	decf	efgtoa@w& (0+255),f,b
  6830  011424  A0D8               	btfss	status,0,c
  6831  011426  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6832  011428                     l5938:
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:         h -= l*u
      +                          ;
  6836  011428  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6837  01142E  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6838  011434  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6839  01143A  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6840  011440  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6841  011446  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6842  01144C  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6843  011452  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6844  011458  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6845  01145E  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6846  011464  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6847  01146A  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6848  011470  ECF3  F090         	call	___flmul	;wreg free
  6849  011474  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6850  01147A  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6851  011480  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6852  011486  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6853  01148C  EC63  F0A0         	call	___flsub	;wreg free
  6854  011490  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6855  011496  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6856  01149C  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6857  0114A2  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6858                           
  6859                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:         u = u/10
      +                          .0;
  6860  0114A8  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6861  0114AE  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6862  0114B4  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6863  0114BA  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6864  0114C0  0E00               	movlw	0
  6865  0114C2  6E23               	movwf	___fldiv@a^0,c
  6866  0114C4  0E00               	movlw	0
  6867  0114C6  6E24               	movwf	(___fldiv@a+1)^0,c
  6868  0114C8  0E20               	movlw	32
  6869  0114CA  6E25               	movwf	(___fldiv@a+2)^0,c
  6870  0114CC  0E41               	movlw	65
  6871  0114CE  6E26               	movwf	(___fldiv@a+3)^0,c
  6872  0114D0  EC59  F094         	call	___fldiv	;wreg free
  6873  0114D4  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6874  0114DA  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6875  0114E0  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6876  0114E6  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6877                           
  6878                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:         --ne;
  6879  0114EC  0100               	movlb	0	; () banked
  6880  0114EE  0781               	decf	efgtoa@ne& (0+255),f,b
  6881  0114F0  A0D8               	btfss	status,0,c
  6882  0114F2  0782               	decf	(efgtoa@ne+1)& (0+255),f,b
  6883                           
  6884                           ; BSR set to: 0
  6885                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6886  0114F4  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6887  0114F6  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6888  0114F8                     l5946:
  6889                           
  6890                           ; BSR set to: 0
  6891                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6892  0114F8  517F               	movf	efgtoa@m& (0+255),w,b
  6893  0114FA  5D95               	subwf	efgtoa@i& (0+255),w,b
  6894  0114FC  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6895  0114FE  0A80               	xorlw	128
  6896  011500  6F66               	movwf	??_efgtoa& (0+255),b
  6897  011502  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6898  011504  0A80               	xorlw	128
  6899  011506  5966               	subwfb	??_efgtoa& (0+255),w,b
  6900  011508  B0D8               	btfsc	status,0,c
  6901  01150A  D008               	goto	u7680
  6902                           
  6903                           ; BSR set to: 0
  6904  01150C  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6905  01150E  D6FC               	goto	l5898
  6906  011510  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  6907  011512  E104               	bnz	u7680
  6908  011514  0E4B               	movlw	75
  6909  011516  5D9D               	subwf	efgtoa@n& (0+255),w,b
  6910  011518  A0D8               	btfss	status,0,c
  6911  01151A  D6F6               	goto	l5898
  6912  01151C                     u7680:
  6913                           
  6914                           ; BSR set to: 0
  6915                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (
      +                          flags & (1 << 4))) {
  6916  01151C  517D               	movf	efgtoa@pp& (0+255),w,b
  6917  01151E  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6918  011520  B4D8               	btfsc	status,2,c
  6919                           
  6920                           ; BSR set to: 0
  6921  011522  A9E2               	btfss	_flags& (0+255),4,b
  6922  011524  D00A               	goto	l5958
  6923                           
  6924                           ; BSR set to: 0
  6925                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++
      +                          ] = '.';
  6926  011526  0E3A               	movlw	low _dbuf
  6927  011528  259D               	addwf	efgtoa@n& (0+255),w,b
  6928  01152A  6ED9               	movwf	fsr2l,c
  6929  01152C  0E04               	movlw	high _dbuf
  6930  01152E  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6931  011530  6EDA               	movwf	fsr2h,c
  6932  011532  0E2E               	movlw	46
  6933  011534  6EDF               	movwf	indf2,c
  6934                           
  6935                           ; BSR set to: 0
  6936  011536  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6937  011538  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6938  01153A                     l5958:
  6939                           
  6940                           ; BSR set to: 0
  6941                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\
      +                          0';
  6942  01153A  0E3A               	movlw	low _dbuf
  6943  01153C  259D               	addwf	efgtoa@n& (0+255),w,b
  6944  01153E  6ED9               	movwf	fsr2l,c
  6945  011540  0E04               	movlw	high _dbuf
  6946  011542  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6947  011544  6EDA               	movwf	fsr2h,c
  6948  011546  0E00               	movlw	0
  6949  011548  6EDF               	movwf	indf2,c
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if (nmode ==
      +                           'e') {
  6953  01154A  0E65               	movlw	101
  6954  01154C  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6955  01154E  A4D8               	btfss	status,2,c
  6956  011550  EF5B  F086         	goto	l5770
  6957                           
  6958                           ; BSR set to: 0
  6959                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:         i = size
      +                          of(dbuf) - 1;
  6960  011554  0E00               	movlw	0
  6961  011556  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6962  011558  0E4F               	movlw	79
  6963  01155A  6F95               	movwf	efgtoa@i& (0+255),b
  6964                           
  6965                           ; BSR set to: 0
  6966                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] 
      +                          = '\0';
  6967  01155C  0E3A               	movlw	low _dbuf
  6968  01155E  2595               	addwf	efgtoa@i& (0+255),w,b
  6969  011560  6ED9               	movwf	fsr2l,c
  6970  011562  0E04               	movlw	high _dbuf
  6971  011564  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6972  011566  6EDA               	movwf	fsr2h,c
  6973  011568  0E00               	movlw	0
  6974  01156A  6EDF               	movwf	indf2,c
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:         sign = 0
      +                          ;
  6978  01156C  0E00               	movlw	0
  6979  01156E  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6980  011570  0E00               	movlw	0
  6981  011572  6F85               	movwf	efgtoa@sign& (0+255),b
  6982                           
  6983                           ; BSR set to: 0
  6984                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:         if (e < 
      +                          0) {
  6985  011574  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6986  011576  D008               	goto	l5974
  6987                           
  6988                           ; BSR set to: 0
  6989                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:             sign
      +                           = 1;
  6990  011578  0E00               	movlw	0
  6991  01157A  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6992  01157C  0E01               	movlw	1
  6993  01157E  6F85               	movwf	efgtoa@sign& (0+255),b
  6994                           
  6995                           ; BSR set to: 0
  6996                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:             e = 
      +                          -e;
  6997  011580  6D9B               	negf	efgtoa@e& (0+255),b
  6998  011582  1F9C               	comf	(efgtoa@e+1)& (0+255),f,b
  6999  011584  B0D8               	btfsc	status,0,c
  7000  011586  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  7001  011588                     l5974:
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  7005  011588  0E00               	movlw	0
  7006  01158A  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  7007  01158C  0E02               	movlw	2
  7008  01158E  6F87               	movwf	efgtoa@p& (0+255),b
  7009                           
  7010                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  7011  011590  D030               	goto	l5986
  7012  011592                     l5976:
  7013                           
  7014                           ; BSR set to: 0
  7015                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:             --i;
  7016  011592  0795               	decf	efgtoa@i& (0+255),f,b
  7017  011594  A0D8               	btfss	status,0,c
  7018  011596  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  7019                           
  7020                           ; BSR set to: 0
  7021                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:             dbuf
      +                          [i] = '0' + (e % 10);
  7022  011598  0E3A               	movlw	low _dbuf
  7023  01159A  2595               	addwf	efgtoa@i& (0+255),w,b
  7024  01159C  6ED9               	movwf	fsr2l,c
  7025  01159E  0E04               	movlw	high _dbuf
  7026  0115A0  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7027  0115A2  6EDA               	movwf	fsr2h,c
  7028  0115A4  0060  F26C  F001   	movff	efgtoa@e,___awmod@dividend
  7029  0115AA  0060  F270  F002   	movff	efgtoa@e+1,___awmod@dividend+1
  7030  0115B0  0E00               	movlw	0
  7031  0115B2  6E04               	movwf	(___awmod@divisor+1)^0,c
  7032  0115B4  0E0A               	movlw	10
  7033  0115B6  6E03               	movwf	___awmod@divisor^0,c
  7034  0115B8  EC54  F09F         	call	___awmod	;wreg free
  7035  0115BC  5001               	movf	?___awmod^0,w,c
  7036  0115BE  0F30               	addlw	48
  7037  0115C0  6EDF               	movwf	indf2,c
  7038                           
  7039                           ; BSR set to: 0
  7040                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:             e = 
      +                          e / 10;
  7041  0115C2  0060  F26C  F001   	movff	efgtoa@e,___awdiv@dividend
  7042  0115C8  0060  F270  F002   	movff	efgtoa@e+1,___awdiv@dividend+1
  7043  0115CE  0E00               	movlw	0
  7044  0115D0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7045  0115D2  0E0A               	movlw	10
  7046  0115D4  6E03               	movwf	___awdiv@divisor^0,c
  7047  0115D6  EC97  F09E         	call	___awdiv	;wreg free
  7048  0115DA  0060  F004  F09B   	movff	?___awdiv,efgtoa@e
  7049  0115E0  0060  F008  F09C   	movff	?___awdiv+1,efgtoa@e+1
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:             --p;
  7053  0115E6  0787               	decf	efgtoa@p& (0+255),f,b
  7054  0115E8  A0D8               	btfss	status,0,c
  7055  0115EA  0788               	decf	(efgtoa@p+1)& (0+255),f,b
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:             --w;
  7059  0115EC  078A               	decf	efgtoa@w& (0+255),f,b
  7060  0115EE  A0D8               	btfss	status,0,c
  7061  0115F0  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7062  0115F2                     l5986:
  7063                           
  7064                           ; BSR set to: 0
  7065                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  7066  0115F2  519B               	movf	efgtoa@e& (0+255),w,b
  7067  0115F4  119C               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7068  0115F6  A4D8               	btfss	status,2,c
  7069  0115F8  D7CC               	goto	l5976
  7070                           
  7071                           ; BSR set to: 0
  7072  0115FA  BF88               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7073  0115FC  D005               	goto	u7740
  7074  0115FE  5188               	movf	(efgtoa@p+1)& (0+255),w,b
  7075  011600  E1C8               	bnz	l5976
  7076  011602  0587               	decf	efgtoa@p& (0+255),w,b
  7077  011604  B0D8               	btfsc	status,0,c
  7078  011606  D7C5               	goto	l5976
  7079  011608                     u7740:
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:         --i;
  7083  011608  0795               	decf	efgtoa@i& (0+255),f,b
  7084  01160A  A0D8               	btfss	status,0,c
  7085  01160C  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] 
      +                          = sign ? '-' : '+';
  7089  01160E  5185               	movf	efgtoa@sign& (0+255),w,b
  7090  011610  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7091  011612  A4D8               	btfss	status,2,c
  7092  011614  D004               	goto	l5996
  7093                           
  7094                           ; BSR set to: 0
  7095  011616  0E00               	movlw	0
  7096  011618  6F76               	movwf	(_efgtoa$636+1)& (0+255),b
  7097  01161A  0E2B               	movlw	43
  7098  01161C  D003               	goto	L6
  7099  01161E                     l5996:
  7100                           
  7101                           ; BSR set to: 0
  7102  01161E  0E00               	movlw	0
  7103  011620  6F76               	movwf	(_efgtoa$636+1)& (0+255),b
  7104  011622  0E2D               	movlw	45
  7105  011624                     L6:
  7106  011624  6F75               	movwf	_efgtoa$636& (0+255),b
  7107                           
  7108                           ; BSR set to: 0
  7109  011626  0E3A               	movlw	low _dbuf
  7110  011628  2595               	addwf	efgtoa@i& (0+255),w,b
  7111  01162A  6ED9               	movwf	fsr2l,c
  7112  01162C  0E04               	movlw	high _dbuf
  7113  01162E  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7114  011630  6EDA               	movwf	fsr2h,c
  7115  011632  0060  F1D7  FFDF   	movff	_efgtoa$636,indf2
  7116                           
  7117                           ; BSR set to: 0
  7118                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:         --w;
  7119  011638  078A               	decf	efgtoa@w& (0+255),f,b
  7120  01163A  A0D8               	btfss	status,0,c
  7121  01163C  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] 
      +                          = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7125  01163E  0795               	decf	efgtoa@i& (0+255),f,b
  7126  011640  A0D8               	btfss	status,0,c
  7127  011642  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  7128                           
  7129                           ; BSR set to: 0
  7130  011644  0EBF               	movlw	191
  7131  011646  6F66               	movwf	??_efgtoa& (0+255),b
  7132  011648  0EFF               	movlw	255
  7133  01164A  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  7134  01164C  5165               	movf	efgtoa@c& (0+255),w,b
  7135  01164E  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  7136  011650  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  7137  011652  5166               	movf	??_efgtoa& (0+255),w,b
  7138  011654  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  7139  011656  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  7140  011658  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7141  01165A  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  7142  01165C  E106               	bnz	u7760
  7143  01165E  0E1A               	movlw	26
  7144  011660  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  7145  011662  B0D8               	btfsc	status,0,c
  7146  011664  D002               	goto	u7760
  7147  011666  0E01               	movlw	1
  7148  011668  D001               	goto	u7770
  7149  01166A                     u7760:
  7150  01166A  0E00               	movlw	0
  7151  01166C                     u7770:
  7152  01166C  6F79               	movwf	_efgtoa$638& (0+255),b
  7153  01166E  6B7A               	clrf	(_efgtoa$638+1)& (0+255),b
  7154                           
  7155                           ; BSR set to: 0
  7156  011670  5179               	movf	_efgtoa$638& (0+255),w,b
  7157  011672  117A               	iorwf	(_efgtoa$638+1)& (0+255),w,b
  7158  011674  A4D8               	btfss	status,2,c
  7159  011676  D004               	goto	l6012
  7160                           
  7161                           ; BSR set to: 0
  7162  011678  0E00               	movlw	0
  7163  01167A  6F78               	movwf	(_efgtoa$637+1)& (0+255),b
  7164  01167C  0E65               	movlw	101
  7165  01167E  D003               	goto	L7
  7166  011680                     l6012:
  7167                           
  7168                           ; BSR set to: 0
  7169  011680  0E00               	movlw	0
  7170  011682  6F78               	movwf	(_efgtoa$637+1)& (0+255),b
  7171  011684  0E45               	movlw	69
  7172  011686                     L7:
  7173  011686  6F77               	movwf	_efgtoa$637& (0+255),b
  7174                           
  7175                           ; BSR set to: 0
  7176  011688  0E3A               	movlw	low _dbuf
  7177  01168A  2595               	addwf	efgtoa@i& (0+255),w,b
  7178  01168C  6ED9               	movwf	fsr2l,c
  7179  01168E  0E04               	movlw	high _dbuf
  7180  011690  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7181  011692  6EDA               	movwf	fsr2h,c
  7182  011694  0060  F1DF  FFDF   	movff	_efgtoa$637,indf2
  7183                           
  7184                           ; BSR set to: 0
  7185                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:         --w;
  7186  01169A  078A               	decf	efgtoa@w& (0+255),f,b
  7187  01169C  A0D8               	btfss	status,0,c
  7188  01169E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:         strcpy(&
      +                          dbuf[n], &dbuf[i]);
  7192  0116A0  0E3A               	movlw	low _dbuf
  7193  0116A2  259D               	addwf	efgtoa@n& (0+255),w,b
  7194  0116A4  6E01               	movwf	strcpy@dest^0,c
  7195  0116A6  0E04               	movlw	high _dbuf
  7196  0116A8  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7197  0116AA  6E02               	movwf	(strcpy@dest+1)^0,c
  7198  0116AC  0E3A               	movlw	low _dbuf
  7199  0116AE  2595               	addwf	efgtoa@i& (0+255),w,b
  7200  0116B0  6E03               	movwf	strcpy@src^0,c
  7201  0116B2  0E04               	movlw	high _dbuf
  7202  0116B4  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7203  0116B6  6E04               	movwf	(strcpy@src+1)^0,c
  7204  0116B8  ECFE  F09F         	call	_strcpy	;wreg free
  7205  0116BC  EF5B  F086         	goto	l5770
  7206  0116C0                     __end_of_efgtoa:
  7207                           	opt callstack 0
  7208                           
  7209 ;; *************** function _tolower *****************
  7210 ;; Defined at:
  7211 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  c               2    6[COMRAM] int 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;		None
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  2    6[COMRAM] int 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7225 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7227 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7228 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7229 ;;Total ram usage:        8 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:    1
  7232 ;; This function calls:
  7233 ;;		_isupper
  7234 ;; This function is called by:
  7235 ;;		_efgtoa
  7236 ;;		_vfpfcnvrt
  7237 ;; This function uses a non-reentrant model
  7238 ;;
  7239                           
  7240                           	psect	text14
  7241  0141DE                     __ptext14:
  7242                           	opt callstack 0
  7243  0141DE                     _tolower:
  7244                           	opt callstack 25
  7245                           
  7246                           ;incstack = 0
  7247  0141DE  0EBF               	movlw	191
  7248  0141E0  6E09               	movwf	??_tolower^0,c
  7249  0141E2  0EFF               	movlw	255
  7250  0141E4  6E0A               	movwf	(??_tolower+1)^0,c
  7251  0141E6  0060  F01C  F00B   	movff	tolower@c,??_tolower+2
  7252  0141EC  0060  F020  F00C   	movff	tolower@c+1,??_tolower+3
  7253  0141F2  5009               	movf	??_tolower^0,w,c
  7254  0141F4  260B               	addwf	(??_tolower+2)^0,f,c
  7255  0141F6  500A               	movf	(??_tolower+1)^0,w,c
  7256  0141F8  220C               	addwfc	(??_tolower+3)^0,f,c
  7257  0141FA  500C               	movf	(??_tolower+3)^0,w,c
  7258  0141FC  E106               	bnz	u4200
  7259  0141FE  0E1A               	movlw	26
  7260  014200  5C0B               	subwf	(??_tolower+2)^0,w,c
  7261  014202  B0D8               	btfsc	status,0,c
  7262  014204  D002               	goto	u4200
  7263  014206  0E01               	movlw	1
  7264  014208  D001               	goto	u4210
  7265  01420A                     u4200:
  7266  01420A  0E00               	movlw	0
  7267  01420C                     u4210:
  7268  01420C  6E0D               	movwf	_tolower$1251^0,c
  7269  01420E  6A0E               	clrf	(_tolower$1251+1)^0,c
  7270  014210  500D               	movf	_tolower$1251^0,w,c
  7271  014212  100E               	iorwf	(_tolower$1251+1)^0,w,c
  7272  014214  B4D8               	btfsc	status,2,c
  7273  014216  D006               	goto	l1538
  7274  014218  0E20               	movlw	32
  7275  01421A  1007               	iorwf	tolower@c^0,w,c
  7276  01421C  6E07               	movwf	?_tolower^0,c
  7277  01421E  5008               	movf	(tolower@c+1)^0,w,c
  7278  014220  6E08               	movwf	(?_tolower+1)^0,c
  7279  014222  0012               	return	
  7280  014224                     l1538:
  7281  014224  0060  F01C  F007   	movff	tolower@c,?_tolower
  7282  01422A  0060  F020  F008   	movff	tolower@c+1,?_tolower+1
  7283  014230  0012               	return		;funcret
  7284  014232                     __end_of_tolower:
  7285                           	opt callstack 0
  7286                           
  7287 ;; *************** function _isupper *****************
  7288 ;; Defined at:
  7289 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7290 ;; Parameters:    Size  Location     Type
  7291 ;;  c               2    0[COMRAM] int 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;		None
  7294 ;; Return value:  Size  Location     Type
  7295 ;;                  2    0[COMRAM] int 
  7296 ;; Registers used:
  7297 ;;		wreg, status,2, status,0
  7298 ;; Tracked objects:
  7299 ;;		On entry : 0/0
  7300 ;;		On exit  : 0/0
  7301 ;;		Unchanged: 0/0
  7302 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7303 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7305 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7306 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7307 ;;Total ram usage:        6 bytes
  7308 ;; Hardware stack levels used:    1
  7309 ;; This function calls:
  7310 ;;		Nothing
  7311 ;; This function is called by:
  7312 ;;		_efgtoa
  7313 ;;		_vfpfcnvrt
  7314 ;;		_tolower
  7315 ;; This function uses a non-reentrant model
  7316 ;;
  7317                           
  7318                           	psect	text15
  7319  014380                     __ptext15:
  7320                           	opt callstack 0
  7321  014380                     _isupper:
  7322                           	opt callstack 25
  7323                           
  7324                           ;incstack = 0
  7325  014380  0EBF               	movlw	191
  7326  014382  6E03               	movwf	??_isupper^0,c
  7327  014384  0EFF               	movlw	255
  7328  014386  6E04               	movwf	(??_isupper+1)^0,c
  7329  014388  0060  F004  F005   	movff	isupper@c,??_isupper+2
  7330  01438E  0060  F008  F006   	movff	isupper@c+1,??_isupper+3
  7331  014394  5003               	movf	??_isupper^0,w,c
  7332  014396  2605               	addwf	(??_isupper+2)^0,f,c
  7333  014398  5004               	movf	(??_isupper+1)^0,w,c
  7334  01439A  2206               	addwfc	(??_isupper+3)^0,f,c
  7335  01439C  5006               	movf	(??_isupper+3)^0,w,c
  7336  01439E  E106               	bnz	u3660
  7337  0143A0  0E1A               	movlw	26
  7338  0143A2  5C05               	subwf	(??_isupper+2)^0,w,c
  7339  0143A4  B0D8               	btfsc	status,0,c
  7340  0143A6  D002               	goto	u3660
  7341  0143A8  0E01               	movlw	1
  7342  0143AA  D001               	goto	u3670
  7343  0143AC                     u3660:
  7344  0143AC  0E00               	movlw	0
  7345  0143AE                     u3670:
  7346  0143AE  6E01               	movwf	?_isupper^0,c
  7347  0143B0  6A02               	clrf	(?_isupper+1)^0,c
  7348  0143B2  0012               	return		;funcret
  7349  0143B4                     __end_of_isupper:
  7350                           	opt callstack 0
  7351                           
  7352 ;; *************** function _strcpy *****************
  7353 ;; Defined at:
  7354 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7355 ;; Parameters:    Size  Location     Type
  7356 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7357 ;;		 -> dbuf(80), 
  7358 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7359 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  7360 ;;		 -> dbuf(80), 
  7361 ;; Auto vars:     Size  Location     Type
  7362 ;;  d               2    8[COMRAM] PTR unsigned char 
  7363 ;;		 -> dbuf(80), 
  7364 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7365 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  7366 ;;		 -> dbuf(80), 
  7367 ;; Return value:  Size  Location     Type
  7368 ;;                  2    0[COMRAM] PTR unsigned char 
  7369 ;; Registers used:
  7370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7371 ;; Tracked objects:
  7372 ;;		On entry : 3F/0
  7373 ;;		On exit  : 0/0
  7374 ;;		Unchanged: 0/0
  7375 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7376 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;Total ram usage:       10 bytes
  7381 ;; Hardware stack levels used:    1
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_efgtoa
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text16
  7390  013FFC                     __ptext16:
  7391                           	opt callstack 0
  7392  013FFC                     _strcpy:
  7393                           	opt callstack 25
  7394                           
  7395                           ; BSR set to: 0
  7396                           
  7397                           ;incstack = 0
  7398  013FFC  0060  F00C  F007   	movff	strcpy@src,strcpy@s
  7399  014002  0060  F010  F008   	movff	strcpy@src+1,strcpy@s+1
  7400  014008  0060  F004  F009   	movff	strcpy@dest,strcpy@d
  7401  01400E  0060  F008  F00A   	movff	strcpy@dest+1,strcpy@d+1
  7402  014014                     l5724:
  7403  014014  5007               	movf	strcpy@s^0,w,c
  7404  014016  6E05               	movwf	??_strcpy^0,c
  7405  014018  5008               	movf	(strcpy@s+1)^0,w,c
  7406  01401A  6E06               	movwf	(??_strcpy+1)^0,c
  7407  01401C  4A07               	infsnz	strcpy@s^0,f,c
  7408  01401E  2A08               	incf	(strcpy@s+1)^0,f,c
  7409  014020  0060  F017  FFF6   	movff	??_strcpy,tblptrl
  7410  014026  0060  F01B  FFF7   	movff	??_strcpy+1,tblptrh
  7411  01402C  0E00               	movlw	low (__mediumconst shr (0+16))
  7412  01402E  6EF8               	movwf	tblptru,c
  7413  014030  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  7414  014036  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  7415  01403C  4A09               	infsnz	strcpy@d^0,f,c
  7416  01403E  2A0A               	incf	(strcpy@d+1)^0,f,c
  7417  014040  0E1F               	movlw	(high __ramtop+-1)
  7418  014042  64F7               	cpfsgt	tblptrh,c
  7419  014044  D003               	bra	u7257
  7420  014046  0008               	tblrd		*
  7421  014048  50F5               	movf	tablat,w,c
  7422  01404A  D007               	bra	u7250
  7423  01404C                     u7257:
  7424  01404C  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7425  014052  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7426  014058  50E7               	movf	indf1,w,c
  7427  01405A                     u7250:
  7428  01405A  6EDF               	movwf	indf2,c
  7429  01405C  50DF               	movf	indf2,w,c
  7430  01405E  B4D8               	btfsc	status,2,c
  7431  014060  0012               	return	
  7432  014062  D7D8               	goto	l5724
  7433  014064                     __end_of_strcpy:
  7434                           	opt callstack 0
  7435                           
  7436 ;; *************** function _pad *****************
  7437 ;; Defined at:
  7438 ;;		line 72 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7439 ;; Parameters:    Size  Location     Type
  7440 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  7441 ;;		 -> sprintf@f(6), 
  7442 ;;  buf             2   15[COMRAM] PTR unsigned char 
  7443 ;;		 -> dbuf(80), 
  7444 ;;  p               2   17[COMRAM] int 
  7445 ;; Auto vars:     Size  Location     Type
  7446 ;;  w               2   22[COMRAM] int 
  7447 ;;  i               2   20[COMRAM] int 
  7448 ;; Return value:  Size  Location     Type
  7449 ;;                  2   14[COMRAM] int 
  7450 ;; Registers used:
  7451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7452 ;; Tracked objects:
  7453 ;;		On entry : 0/0
  7454 ;;		On exit  : 0/0
  7455 ;;		Unchanged: 0/0
  7456 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7457 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7458 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7459 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7460 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7461 ;;Total ram usage:       10 bytes
  7462 ;; Hardware stack levels used:    1
  7463 ;; Hardware stack levels required when called:    3
  7464 ;; This function calls:
  7465 ;;		_fputc
  7466 ;;		_fputs
  7467 ;;		_strlen
  7468 ;; This function is called by:
  7469 ;;		_efgtoa
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text17
  7474  0139B2                     __ptext17:
  7475                           	opt callstack 0
  7476  0139B2                     _pad:
  7477                           	opt callstack 22
  7478                           
  7479                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static int pad(FI
      +                          LE *fp, char *buf, int p);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt
      +                          .c: 73: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 74:     int 
      +                          i, w;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 77:     if (flag
      +                          s & (1 << 0)) {
  7480                           
  7481                           ;incstack = 0
  7482  0139B2  0100               	movlb	0	; () banked
  7483  0139B4  A1E2               	btfss	_flags& (0+255),0,b
  7484  0139B6  D00B               	goto	l5704
  7485                           
  7486                           ; BSR set to: 0
  7487                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:         fputs((co
      +                          nst char *)buf, fp);
  7488  0139B8  0060  F040  F009   	movff	pad@buf,fputs@s
  7489  0139BE  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7490  0139C4  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7491  0139CA  EC89  F0A1         	call	_fputs	;wreg free
  7492  0139CE                     l5704:
  7493                           
  7494                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ?
      +                           0 : p;
  7495  0139CE  BE13               	btfsc	(pad@p+1)^0,7,c
  7496  0139D0  D007               	goto	l5708
  7497  0139D2  0060  F048  F017   	movff	pad@p,pad@w
  7498  0139D8  0060  F04C  F018   	movff	pad@p+1,pad@w+1
  7499  0139DE  D004               	goto	l590
  7500  0139E0                     l5708:
  7501  0139E0  0E00               	movlw	0
  7502  0139E2  6E18               	movwf	(pad@w+1)^0,c
  7503  0139E4  0E00               	movlw	0
  7504  0139E6  6E17               	movwf	pad@w^0,c
  7505  0139E8                     l590:
  7506                           
  7507                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7508  0139E8  0E00               	movlw	0
  7509  0139EA  6E16               	movwf	(pad@i+1)^0,c
  7510  0139EC  0E00               	movlw	0
  7511  0139EE  6E15               	movwf	pad@i^0,c
  7512                           
  7513                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7514  0139F0  D00B               	goto	l5714
  7515  0139F2                     l5710:
  7516                           
  7517                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:         fputc(' '
      +                          , fp);
  7518  0139F2  0E00               	movlw	0
  7519  0139F4  6E02               	movwf	(fputc@c+1)^0,c
  7520  0139F6  0E20               	movlw	32
  7521  0139F8  6E01               	movwf	fputc@c^0,c
  7522  0139FA  0060  F03C  F003   	movff	pad@fp,fputc@fp
  7523  013A00  EC79  F09D         	call	_fputc	;wreg free
  7524                           
  7525                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7526  013A04  4A15               	infsnz	pad@i^0,f,c
  7527  013A06  2A16               	incf	(pad@i+1)^0,f,c
  7528  013A08                     l5714:
  7529                           
  7530                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7531  013A08  5017               	movf	pad@w^0,w,c
  7532  013A0A  5C15               	subwf	pad@i^0,w,c
  7533  013A0C  5016               	movf	(pad@i+1)^0,w,c
  7534  013A0E  0A80               	xorlw	128
  7535  013A10  6E14               	movwf	??_pad^0,c
  7536  013A12  5018               	movf	(pad@w+1)^0,w,c
  7537  013A14  0A80               	xorlw	128
  7538  013A16  5814               	subwfb	??_pad^0,w,c
  7539  013A18  A0D8               	btfss	status,0,c
  7540  013A1A  D7EB               	goto	l5710
  7541                           
  7542                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if (!(flags &
      +                           (1 << 0))) {
  7543  013A1C  0100               	movlb	0	; () banked
  7544  013A1E  B1E2               	btfsc	_flags& (0+255),0,b
  7545  013A20  D00B               	goto	l5718
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:         fputs((co
      +                          nst char *)buf, fp);
  7549  013A22  0060  F040  F009   	movff	pad@buf,fputs@s
  7550  013A28  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7551  013A2E  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7552  013A34  EC89  F0A1         	call	_fputs	;wreg free
  7553  013A38                     l5718:
  7554                           
  7555                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     return strlen
      +                          (buf) + w;
  7556  013A38  0060  F040  F001   	movff	pad@buf,strlen@s
  7557  013A3E  0060  F044  F002   	movff	pad@buf+1,strlen@s+1
  7558  013A44  ECF4  F0A1         	call	_strlen	;wreg free
  7559  013A48  5017               	movf	pad@w^0,w,c
  7560  013A4A  2401               	addwf	?_strlen^0,w,c
  7561  013A4C  6E0F               	movwf	?_pad^0,c
  7562  013A4E  5018               	movf	(pad@w+1)^0,w,c
  7563  013A50  2002               	addwfc	(?_strlen+1)^0,w,c
  7564  013A52  6E10               	movwf	(?_pad+1)^0,c
  7565  013A54  0012               	return		;funcret
  7566  013A56                     __end_of_pad:
  7567                           	opt callstack 0
  7568                           
  7569 ;; *************** function _strlen *****************
  7570 ;; Defined at:
  7571 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7572 ;; Parameters:    Size  Location     Type
  7573 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7574 ;;		 -> dbuf(80), 
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7577 ;;		 -> dbuf(80), 
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  2    0[COMRAM] unsigned int 
  7580 ;; Registers used:
  7581 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7588 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7590 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7591 ;;Total ram usage:        4 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_pad
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text18
  7601  0143E8                     __ptext18:
  7602                           	opt callstack 0
  7603  0143E8                     _strlen:
  7604                           	opt callstack 24
  7605                           
  7606                           ;incstack = 0
  7607  0143E8  0060  F004  F003   	movff	strlen@s,strlen@a
  7608  0143EE  0060  F008  F004   	movff	strlen@s+1,strlen@a+1
  7609  0143F4  D002               	goto	l5694
  7610  0143F6                     l5692:
  7611  0143F6  4A01               	infsnz	strlen@s^0,f,c
  7612  0143F8  2A02               	incf	(strlen@s+1)^0,f,c
  7613  0143FA                     l5694:
  7614  0143FA  0060  F007  FFD9   	movff	strlen@s,fsr2l
  7615  014400  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  7616  014406  50DF               	movf	indf2,w,c
  7617  014408  A4D8               	btfss	status,2,c
  7618  01440A  D7F5               	goto	l5692
  7619  01440C  5003               	movf	strlen@a^0,w,c
  7620  01440E  5C01               	subwf	strlen@s^0,w,c
  7621  014410  6E01               	movwf	?_strlen^0,c
  7622  014412  5004               	movf	(strlen@a+1)^0,w,c
  7623  014414  5802               	subwfb	(strlen@s+1)^0,w,c
  7624  014416  6E02               	movwf	(?_strlen+1)^0,c
  7625  014418  0012               	return		;funcret
  7626  01441A                     __end_of_strlen:
  7627                           	opt callstack 0
  7628                           
  7629 ;; *************** function _fputs *****************
  7630 ;; Defined at:
  7631 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7634 ;;		 -> dbuf(80), 
  7635 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  7636 ;;		 -> sprintf@f(6), 
  7637 ;; Auto vars:     Size  Location     Type
  7638 ;;  i               2   12[COMRAM] int 
  7639 ;;  c               1   11[COMRAM] unsigned char 
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  2    8[COMRAM] int 
  7642 ;; Registers used:
  7643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 3F/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7649 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7650 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7652 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7653 ;;Total ram usage:        6 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    2
  7656 ;; This function calls:
  7657 ;;		_fputc
  7658 ;; This function is called by:
  7659 ;;		_pad
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           
  7663                           	psect	text19
  7664  014312                     __ptext19:
  7665                           	opt callstack 0
  7666  014312                     _fputs:
  7667                           	opt callstack 22
  7668                           
  7669                           ; BSR set to: 0
  7670                           
  7671                           ;incstack = 0
  7672  014312  0E00               	movlw	0
  7673  014314  6E0E               	movwf	(fputs@i+1)^0,c
  7674  014316  0E00               	movlw	0
  7675  014318  6E0D               	movwf	fputs@i^0,c
  7676  01431A  D00B               	goto	l5688
  7677  01431C                     l5684:
  7678  01431C  0060  F030  F001   	movff	fputs@c,fputc@c
  7679  014322  6A02               	clrf	(fputc@c+1)^0,c
  7680  014324  0060  F02C  F003   	movff	fputs@fp,fputc@fp
  7681  01432A  EC79  F09D         	call	_fputc	;wreg free
  7682  01432E  4A0D               	infsnz	fputs@i^0,f,c
  7683  014330  2A0E               	incf	(fputs@i+1)^0,f,c
  7684  014332                     l5688:
  7685  014332  500D               	movf	fputs@i^0,w,c
  7686  014334  2409               	addwf	fputs@s^0,w,c
  7687  014336  6ED9               	movwf	fsr2l,c
  7688  014338  500E               	movf	(fputs@i+1)^0,w,c
  7689  01433A  200A               	addwfc	(fputs@s+1)^0,w,c
  7690  01433C  6EDA               	movwf	fsr2h,c
  7691  01433E  50DF               	movf	indf2,w,c
  7692  014340  6E0C               	movwf	fputs@c^0,c
  7693  014342  500C               	movf	fputs@c^0,w,c
  7694  014344  B4D8               	btfsc	status,2,c
  7695  014346  0012               	return	
  7696  014348  D7E9               	goto	l5684
  7697  01434A                     __end_of_fputs:
  7698                           	opt callstack 0
  7699                           
  7700 ;; *************** function _fputc *****************
  7701 ;; Defined at:
  7702 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7703 ;; Parameters:    Size  Location     Type
  7704 ;;  c               2    0[COMRAM] int 
  7705 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7706 ;;		 -> sprintf@f(6), 
  7707 ;; Auto vars:     Size  Location     Type
  7708 ;;		None
  7709 ;; Return value:  Size  Location     Type
  7710 ;;                  2    0[COMRAM] int 
  7711 ;; Registers used:
  7712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7713 ;; Tracked objects:
  7714 ;;		On entry : 0/0
  7715 ;;		On exit  : 0/0
  7716 ;;		Unchanged: 0/0
  7717 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7718 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7720 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7721 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7722 ;;Total ram usage:        8 bytes
  7723 ;; Hardware stack levels used:    1
  7724 ;; Hardware stack levels required when called:    1
  7725 ;; This function calls:
  7726 ;;		_putch
  7727 ;; This function is called by:
  7728 ;;		_pad
  7729 ;;		_vfpfcnvrt
  7730 ;;		_fputs
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           
  7734                           	psect	text20
  7735  013AF2                     __ptext20:
  7736                           	opt callstack 0
  7737  013AF2                     _fputc:
  7738                           	opt callstack 25
  7739                           
  7740                           ;incstack = 0
  7741  013AF2  5003               	movf	fputc@fp^0,w,c
  7742  013AF4  B4D8               	btfsc	status,2,c
  7743  013AF6  D003               	goto	u3610
  7744  013AF8  5003               	movf	fputc@fp^0,w,c
  7745  013AFA  A4D8               	btfss	status,2,c
  7746  013AFC  D004               	goto	l3618
  7747  013AFE                     u3610:
  7748  013AFE  5001               	movf	fputc@c^0,w,c
  7749  013B00  EC40  F0A2         	call	_putch
  7750  013B04  0012               	return	
  7751  013B06                     l3618:
  7752  013B06  5003               	movf	fputc@fp^0,w,c
  7753  013B08  6ED9               	movwf	fsr2l,c
  7754  013B0A  6ADA               	clrf	fsr2h,c
  7755  013B0C  0E04               	movlw	4
  7756  013B0E  26D9               	addwf	fsr2l,f,c
  7757  013B10  50DE               	movf	postinc2,w,c
  7758  013B12  10DE               	iorwf	postinc2,w,c
  7759  013B14  B4D8               	btfsc	status,2,c
  7760  013B16  D014               	goto	u3630
  7761  013B18  5003               	movf	fputc@fp^0,w,c
  7762  013B1A  6ED9               	movwf	fsr2l,c
  7763  013B1C  6ADA               	clrf	fsr2h,c
  7764  013B1E  0E04               	movlw	4
  7765  013B20  26D9               	addwf	fsr2l,f,c
  7766  013B22  5003               	movf	fputc@fp^0,w,c
  7767  013B24  6EE1               	movwf	fsr1l,c
  7768  013B26  6AE2               	clrf	fsr1h,c
  7769  013B28  0E02               	movlw	2
  7770  013B2A  26E1               	addwf	fsr1l,f,c
  7771  013B2C  50DE               	movf	postinc2,w,c
  7772  013B2E  5CE6               	subwf	postinc1,w,c
  7773  013B30  50E6               	movf	postinc1,w,c
  7774  013B32  0A80               	xorlw	128
  7775  013B34  6E08               	movwf	(??_fputc+4)^0,c
  7776  013B36  50DE               	movf	postinc2,w,c
  7777  013B38  0A80               	xorlw	128
  7778  013B3A  5808               	subwfb	(??_fputc+4)^0,w,c
  7779  013B3C  B0D8               	btfsc	status,0,c
  7780  013B3E  0012               	return	
  7781  013B40                     u3630:
  7782  013B40  5003               	movf	fputc@fp^0,w,c
  7783  013B42  6ED9               	movwf	fsr2l,c
  7784  013B44  6ADA               	clrf	fsr2h,c
  7785  013B46  0E02               	movlw	2
  7786  013B48  26D9               	addwf	fsr2l,f,c
  7787  013B4A  006F FF78  F004    	movff	postinc2,??_fputc
  7788  013B50  006F FF74  F005    	movff	postdec2,??_fputc+1
  7789  013B56  5003               	movf	fputc@fp^0,w,c
  7790  013B58  6ED9               	movwf	fsr2l,c
  7791  013B5A  6ADA               	clrf	fsr2h,c
  7792  013B5C  006F FF78  F006    	movff	postinc2,??_fputc+2
  7793  013B62  006F FF74  F007    	movff	postdec2,??_fputc+3
  7794  013B68  5004               	movf	??_fputc^0,w,c
  7795  013B6A  2406               	addwf	(??_fputc+2)^0,w,c
  7796  013B6C  6ED9               	movwf	fsr2l,c
  7797  013B6E  5005               	movf	(??_fputc+1)^0,w,c
  7798  013B70  2007               	addwfc	(??_fputc+3)^0,w,c
  7799  013B72  6EDA               	movwf	fsr2h,c
  7800  013B74  0060  F007  FFDF   	movff	fputc@c,indf2
  7801  013B7A  5003               	movf	fputc@fp^0,w,c
  7802  013B7C  6ED9               	movwf	fsr2l,c
  7803  013B7E  6ADA               	clrf	fsr2h,c
  7804  013B80  0E02               	movlw	2
  7805  013B82  26D9               	addwf	fsr2l,f,c
  7806  013B84  2ADE               	incf	postinc2,f,c
  7807  013B86  0E00               	movlw	0
  7808  013B88  22DD               	addwfc	postdec2,f,c
  7809  013B8A  0012               	return		;funcret
  7810  013B8C                     __end_of_fputc:
  7811                           	opt callstack 0
  7812                           
  7813 ;; *************** function _putch *****************
  7814 ;; Defined at:
  7815 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7816 ;; Parameters:    Size  Location     Type
  7817 ;;  c               1    wreg     unsigned char 
  7818 ;; Auto vars:     Size  Location     Type
  7819 ;;  c               1    0[COMRAM] unsigned char 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;Total ram usage:        0 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; This function calls:
  7836 ;;		Nothing
  7837 ;; This function is called by:
  7838 ;;		_fputc
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text21
  7843  014480                     __ptext21:
  7844                           	opt callstack 0
  7845  014480                     _putch:
  7846                           	opt callstack 25
  7847                           
  7848                           ;incstack = 0
  7849  014480  0012               	return		;funcret
  7850  014482                     __end_of_putch:
  7851                           	opt callstack 0
  7852                           
  7853 ;; *************** function _floorf *****************
  7854 ;; Defined at:
  7855 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  x               4   55[COMRAM] float 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  u               4   71[COMRAM] struct .
  7860 ;;  m               4   65[COMRAM] unsigned long 
  7861 ;;  e               2   69[COMRAM] int 
  7862 ;; Return value:  Size  Location     Type
  7863 ;;                  4   55[COMRAM] float 
  7864 ;; Registers used:
  7865 ;;		wreg, status,2, status,0
  7866 ;; Tracked objects:
  7867 ;;		On entry : 0/0
  7868 ;;		On exit  : 0/0
  7869 ;;		Unchanged: 0/0
  7870 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7871 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7872 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7873 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7874 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;Total ram usage:       20 bytes
  7876 ;; Hardware stack levels used:    1
  7877 ;; This function calls:
  7878 ;;		Nothing
  7879 ;; This function is called by:
  7880 ;;		_efgtoa
  7881 ;; This function uses a non-reentrant model
  7882 ;;
  7883                           
  7884                           	psect	text22
  7885  012B5E                     __ptext22:
  7886                           	opt callstack 0
  7887  012B5E                     _floorf:
  7888                           	opt callstack 25
  7889                           
  7890                           ;incstack = 0
  7891  012B5E  0060  F350  F048   	movff	floorf@F524,floorf@u
  7892  012B64  0060  F354  F049   	movff	floorf@F524+1,floorf@u+1
  7893  012B6A  0060  F358  F04A   	movff	floorf@F524+2,floorf@u+2
  7894  012B70  0060  F35C  F04B   	movff	floorf@F524+3,floorf@u+3
  7895  012B76  0060  F0E0  F048   	movff	floorf@x,floorf@u
  7896  012B7C  0060  F0E4  F049   	movff	floorf@x+1,floorf@u+1
  7897  012B82  0060  F0E8  F04A   	movff	floorf@x+2,floorf@u+2
  7898  012B88  0060  F0EC  F04B   	movff	floorf@x+3,floorf@u+3
  7899  012B8E  0E81               	movlw	129
  7900  012B90  6E3C               	movwf	??_floorf^0,c
  7901  012B92  0EFF               	movlw	255
  7902  012B94  6E3D               	movwf	(??_floorf+1)^0,c
  7903  012B96  0060  F120  F03E   	movff	floorf@u,??_floorf+2
  7904  012B9C  0060  F124  F03F   	movff	floorf@u+1,??_floorf+3
  7905  012BA2  0060  F128  F040   	movff	floorf@u+2,??_floorf+4
  7906  012BA8  0060  F12C  F041   	movff	floorf@u+3,??_floorf+5
  7907  012BAE  0E18               	movlw	24
  7908  012BB0  D005               	goto	u4230
  7909  012BB2                     u4235:
  7910  012BB2  90D8               	bcf	status,0,c
  7911  012BB4  3241               	rrcf	(??_floorf+5)^0,f,c
  7912  012BB6  3240               	rrcf	(??_floorf+4)^0,f,c
  7913  012BB8  323F               	rrcf	(??_floorf+3)^0,f,c
  7914  012BBA  323E               	rrcf	(??_floorf+2)^0,f,c
  7915  012BBC                     u4230:
  7916  012BBC  2EE8               	decfsz	wreg,f,c
  7917  012BBE  D7F9               	goto	u4235
  7918  012BC0  503E               	movf	(??_floorf+2)^0,w,c
  7919  012BC2  243C               	addwf	??_floorf^0,w,c
  7920  012BC4  6E46               	movwf	floorf@e^0,c
  7921  012BC6  0E00               	movlw	0
  7922  012BC8  203D               	addwfc	(??_floorf+1)^0,w,c
  7923  012BCA  6E47               	movwf	(floorf@e+1)^0,c
  7924  012BCC  BE47               	btfsc	(floorf@e+1)^0,7,c
  7925  012BCE  D013               	goto	l3914
  7926  012BD0  5047               	movf	(floorf@e+1)^0,w,c
  7927  012BD2  E104               	bnz	u4240
  7928  012BD4  0E17               	movlw	23
  7929  012BD6  5C46               	subwf	floorf@e^0,w,c
  7930  012BD8  A0D8               	btfss	status,0,c
  7931  012BDA  D00D               	goto	l3914
  7932  012BDC                     u4240:
  7933  012BDC  0060  F0E0  F038   	movff	floorf@x,?_floorf
  7934  012BE2  0060  F0E4  F039   	movff	floorf@x+1,?_floorf+1
  7935  012BE8  0060  F0E8  F03A   	movff	floorf@x+2,?_floorf+2
  7936  012BEE  0060  F0EC  F03B   	movff	floorf@x+3,?_floorf+3
  7937  012BF4  0012               	return	
  7938  012BF6                     l3914:
  7939  012BF6  BE47               	btfsc	(floorf@e+1)^0,7,c
  7940  012BF8  D064               	goto	l3924
  7941  012BFA  0060  F118  F03C   	movff	floorf@e,??_floorf
  7942  012C00  0EFF               	movlw	255
  7943  012C02  6E3D               	movwf	(??_floorf+1)^0,c
  7944  012C04  0EFF               	movlw	255
  7945  012C06  6E3E               	movwf	(??_floorf+2)^0,c
  7946  012C08  0E7F               	movlw	127
  7947  012C0A  6E3F               	movwf	(??_floorf+3)^0,c
  7948  012C0C  0E00               	movlw	0
  7949  012C0E  6E40               	movwf	(??_floorf+4)^0,c
  7950  012C10                     u4265:
  7951  012C10  663C               	tstfsz	??_floorf^0,c
  7952  012C12  D001               	goto	u4266
  7953  012C14  D007               	goto	u4267
  7954  012C16                     u4266:
  7955  012C16  3440               	rlcf	(??_floorf+4)^0,w,c
  7956  012C18  3240               	rrcf	(??_floorf+4)^0,f,c
  7957  012C1A  323F               	rrcf	(??_floorf+3)^0,f,c
  7958  012C1C  323E               	rrcf	(??_floorf+2)^0,f,c
  7959  012C1E  323D               	rrcf	(??_floorf+1)^0,f,c
  7960  012C20  2E3C               	decfsz	??_floorf^0,f,c
  7961  012C22  D7F6               	goto	u4265
  7962  012C24                     u4267:
  7963  012C24  0060  F0F4  F042   	movff	??_floorf+1,floorf@m
  7964  012C2A  0060  F0F8  F043   	movff	??_floorf+2,floorf@m+1
  7965  012C30  0060  F0FC  F044   	movff	??_floorf+3,floorf@m+2
  7966  012C36  0060  F100  F045   	movff	??_floorf+4,floorf@m+3
  7967  012C3C  5042               	movf	floorf@m^0,w,c
  7968  012C3E  1448               	andwf	floorf@u^0,w,c
  7969  012C40  6E3C               	movwf	??_floorf^0,c
  7970  012C42  5043               	movf	(floorf@m+1)^0,w,c
  7971  012C44  1449               	andwf	(floorf@u+1)^0,w,c
  7972  012C46  6E3D               	movwf	(??_floorf+1)^0,c
  7973  012C48  5044               	movf	(floorf@m+2)^0,w,c
  7974  012C4A  144A               	andwf	(floorf@u+2)^0,w,c
  7975  012C4C  6E3E               	movwf	(??_floorf+2)^0,c
  7976  012C4E  5045               	movf	(floorf@m+3)^0,w,c
  7977  012C50  144B               	andwf	(floorf@u+3)^0,w,c
  7978  012C52  6E3F               	movwf	(??_floorf+3)^0,c
  7979  012C54  503C               	movf	??_floorf^0,w,c
  7980  012C56  103D               	iorwf	(??_floorf+1)^0,w,c
  7981  012C58  103E               	iorwf	(??_floorf+2)^0,w,c
  7982  012C5A  103F               	iorwf	(??_floorf+3)^0,w,c
  7983  012C5C  B4D8               	btfsc	status,2,c
  7984  012C5E  D7BE               	goto	u4240
  7985  012C60  0060  F120  F03C   	movff	floorf@u,??_floorf
  7986  012C66  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7987  012C6C  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7988  012C72  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7989  012C78  0E20               	movlw	32
  7990  012C7A  D005               	goto	u4280
  7991  012C7C                     u4285:
  7992  012C7C  90D8               	bcf	status,0,c
  7993  012C7E  323F               	rrcf	(??_floorf+3)^0,f,c
  7994  012C80  323E               	rrcf	(??_floorf+2)^0,f,c
  7995  012C82  323D               	rrcf	(??_floorf+1)^0,f,c
  7996  012C84  323C               	rrcf	??_floorf^0,f,c
  7997  012C86                     u4280:
  7998  012C86  2EE8               	decfsz	wreg,f,c
  7999  012C88  D7F9               	goto	u4285
  8000  012C8A  503C               	movf	??_floorf^0,w,c
  8001  012C8C  B4D8               	btfsc	status,2,c
  8002  012C8E  D008               	goto	l1452
  8003  012C90  5042               	movf	floorf@m^0,w,c
  8004  012C92  2648               	addwf	floorf@u^0,f,c
  8005  012C94  5043               	movf	(floorf@m+1)^0,w,c
  8006  012C96  2249               	addwfc	(floorf@u+1)^0,f,c
  8007  012C98  5044               	movf	(floorf@m+2)^0,w,c
  8008  012C9A  224A               	addwfc	(floorf@u+2)^0,f,c
  8009  012C9C  5045               	movf	(floorf@m+3)^0,w,c
  8010  012C9E  224B               	addwfc	(floorf@u+3)^0,f,c
  8011  012CA0                     l1452:
  8012  012CA0  1C42               	comf	floorf@m^0,w,c
  8013  012CA2  6E3C               	movwf	??_floorf^0,c
  8014  012CA4  1C43               	comf	(floorf@m+1)^0,w,c
  8015  012CA6  6E3D               	movwf	(??_floorf+1)^0,c
  8016  012CA8  1C44               	comf	(floorf@m+2)^0,w,c
  8017  012CAA  6E3E               	movwf	(??_floorf+2)^0,c
  8018  012CAC  1C45               	comf	(floorf@m+3)^0,w,c
  8019  012CAE  6E3F               	movwf	(??_floorf+3)^0,c
  8020  012CB0  503C               	movf	??_floorf^0,w,c
  8021  012CB2  1648               	andwf	floorf@u^0,f,c
  8022  012CB4  503D               	movf	(??_floorf+1)^0,w,c
  8023  012CB6  1649               	andwf	(floorf@u+1)^0,f,c
  8024  012CB8  503E               	movf	(??_floorf+2)^0,w,c
  8025  012CBA  164A               	andwf	(floorf@u+2)^0,f,c
  8026  012CBC  503F               	movf	(??_floorf+3)^0,w,c
  8027  012CBE  164B               	andwf	(floorf@u+3)^0,f,c
  8028  012CC0  D036               	goto	l3932
  8029  012CC2                     l3924:
  8030  012CC2  0060  F120  F03C   	movff	floorf@u,??_floorf
  8031  012CC8  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  8032  012CCE  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  8033  012CD4  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  8034  012CDA  0E20               	movlw	32
  8035  012CDC  D005               	goto	u4300
  8036  012CDE                     u4305:
  8037  012CDE  90D8               	bcf	status,0,c
  8038  012CE0  323F               	rrcf	(??_floorf+3)^0,f,c
  8039  012CE2  323E               	rrcf	(??_floorf+2)^0,f,c
  8040  012CE4  323D               	rrcf	(??_floorf+1)^0,f,c
  8041  012CE6  323C               	rrcf	??_floorf^0,f,c
  8042  012CE8                     u4300:
  8043  012CE8  2EE8               	decfsz	wreg,f,c
  8044  012CEA  D7F9               	goto	u4305
  8045  012CEC  663C               	tstfsz	??_floorf^0,c
  8046  012CEE  D008               	goto	l3928
  8047  012CF0  0E00               	movlw	0
  8048  012CF2  6E48               	movwf	floorf@u^0,c
  8049  012CF4  0E00               	movlw	0
  8050  012CF6  6E49               	movwf	(floorf@u+1)^0,c
  8051  012CF8  0E00               	movlw	0
  8052  012CFA  6E4A               	movwf	(floorf@u+2)^0,c
  8053  012CFC  0E00               	movlw	0
  8054  012CFE  D016               	goto	L8
  8055  012D00                     l3928:
  8056  012D00  90D8               	bcf	status,0,c
  8057  012D02  3448               	rlcf	floorf@u^0,w,c
  8058  012D04  6E3C               	movwf	??_floorf^0,c
  8059  012D06  3449               	rlcf	(floorf@u+1)^0,w,c
  8060  012D08  6E3D               	movwf	(??_floorf+1)^0,c
  8061  012D0A  344A               	rlcf	(floorf@u+2)^0,w,c
  8062  012D0C  6E3E               	movwf	(??_floorf+2)^0,c
  8063  012D0E  344B               	rlcf	(floorf@u+3)^0,w,c
  8064  012D10  6E3F               	movwf	(??_floorf+3)^0,c
  8065  012D12  503C               	movf	??_floorf^0,w,c
  8066  012D14  103D               	iorwf	(??_floorf+1)^0,w,c
  8067  012D16  103E               	iorwf	(??_floorf+2)^0,w,c
  8068  012D18  103F               	iorwf	(??_floorf+3)^0,w,c
  8069  012D1A  B4D8               	btfsc	status,2,c
  8070  012D1C  D008               	goto	l3932
  8071  012D1E  0E00               	movlw	0
  8072  012D20  6E48               	movwf	floorf@u^0,c
  8073  012D22  0E00               	movlw	0
  8074  012D24  6E49               	movwf	(floorf@u+1)^0,c
  8075  012D26  0E80               	movlw	128
  8076  012D28  6E4A               	movwf	(floorf@u+2)^0,c
  8077  012D2A  0EBF               	movlw	191
  8078  012D2C                     L8:
  8079  012D2C  6E4B               	movwf	(floorf@u+3)^0,c
  8080  012D2E                     l3932:
  8081  012D2E  0060  F120  F038   	movff	floorf@u,?_floorf
  8082  012D34  0060  F124  F039   	movff	floorf@u+1,?_floorf+1
  8083  012D3A  0060  F128  F03A   	movff	floorf@u+2,?_floorf+2
  8084  012D40  0060  F12C  F03B   	movff	floorf@u+3,?_floorf+3
  8085  012D46  0012               	return		;funcret
  8086  012D48                     __end_of_floorf:
  8087                           	opt callstack 0
  8088                           
  8089 ;; *************** function ___fpclassifyf *****************
  8090 ;; Defined at:
  8091 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  8092 ;; Parameters:    Size  Location     Type
  8093 ;;  x               4    0[COMRAM] float 
  8094 ;; Auto vars:     Size  Location     Type
  8095 ;;  u               4   10[COMRAM] struct .
  8096 ;;  e               2    8[COMRAM] int 
  8097 ;; Return value:  Size  Location     Type
  8098 ;;                  2    0[COMRAM] int 
  8099 ;; Registers used:
  8100 ;;		wreg, status,2, status,0
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8106 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8109 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8110 ;;Total ram usage:       14 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; This function calls:
  8113 ;;		Nothing
  8114 ;; This function is called by:
  8115 ;;		_efgtoa
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text23
  8120  013408                     __ptext23:
  8121                           	opt callstack 0
  8122  013408                     ___fpclassifyf:
  8123                           	opt callstack 25
  8124                           
  8125                           ;incstack = 0
  8126  013408  0060  F360  F00B   	movff	___fpclassifyf@F463,___fpclassifyf@u
  8127  01340E  0060  F364  F00C   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  8128  013414  0060  F368  F00D   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  8129  01341A  0060  F36C  F00E   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  8130  013420  0060  F004  F00B   	movff	___fpclassifyf@x,___fpclassifyf@u
  8131  013426  0060  F008  F00C   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8132  01342C  0060  F00C  F00D   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8133  013432  0060  F010  F00E   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8134  013438  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  8135  01343E  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8136  013444  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8137  01344A  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8138  013450  0E18               	movlw	24
  8139  013452  D005               	goto	u4110
  8140  013454                     u4115:
  8141  013454  90D8               	bcf	status,0,c
  8142  013456  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8143  013458  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8144  01345A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8145  01345C  3205               	rrcf	??___fpclassifyf^0,f,c
  8146  01345E                     u4110:
  8147  01345E  2EE8               	decfsz	wreg,f,c
  8148  013460  D7F9               	goto	u4115
  8149  013462  5005               	movf	??___fpclassifyf^0,w,c
  8150  013464  6E09               	movwf	___fpclassifyf@e^0,c
  8151  013466  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8152  013468  5009               	movf	___fpclassifyf@e^0,w,c
  8153  01346A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8154  01346C  A4D8               	btfss	status,2,c
  8155  01346E  D019               	goto	l3884
  8156  013470  90D8               	bcf	status,0,c
  8157  013472  340B               	rlcf	___fpclassifyf@u^0,w,c
  8158  013474  6E05               	movwf	??___fpclassifyf^0,c
  8159  013476  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8160  013478  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8161  01347A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8162  01347C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8163  01347E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8164  013480  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8165  013482  5005               	movf	??___fpclassifyf^0,w,c
  8166  013484  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8167  013486  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8168  013488  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8169  01348A  A4D8               	btfss	status,2,c
  8170  01348C  D005               	goto	l3880
  8171  01348E  0E00               	movlw	0
  8172  013490  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8173  013492  0E02               	movlw	2
  8174  013494  6E01               	movwf	?___fpclassifyf^0,c
  8175  013496  0012               	return	
  8176  013498                     l3880:
  8177  013498  0E00               	movlw	0
  8178  01349A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8179  01349C  0E03               	movlw	3
  8180  01349E  6E01               	movwf	?___fpclassifyf^0,c
  8181  0134A0  0012               	return	
  8182  0134A2                     l3884:
  8183  0134A2  2809               	incf	___fpclassifyf@e^0,w,c
  8184  0134A4  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8185  0134A6  A4D8               	btfss	status,2,c
  8186  0134A8  D020               	goto	l3890
  8187  0134AA  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  8188  0134B0  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8189  0134B6  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8190  0134BC  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8191  0134C2  0E09               	movlw	9
  8192  0134C4                     u4155:
  8193  0134C4  90D8               	bcf	status,0,c
  8194  0134C6  3605               	rlcf	??___fpclassifyf^0,f,c
  8195  0134C8  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8196  0134CA  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8197  0134CC  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8198  0134CE  2EE8               	decfsz	wreg,f,c
  8199  0134D0  D7F9               	goto	u4155
  8200  0134D2  5005               	movf	??___fpclassifyf^0,w,c
  8201  0134D4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8202  0134D6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8203  0134D8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8204  0134DA  A4D8               	btfss	status,2,c
  8205  0134DC  D002               	goto	u4160
  8206  0134DE  0E01               	movlw	1
  8207  0134E0  D001               	goto	u4170
  8208  0134E2                     u4160:
  8209  0134E2  0E00               	movlw	0
  8210  0134E4                     u4170:
  8211  0134E4  6E01               	movwf	?___fpclassifyf^0,c
  8212  0134E6  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8213  0134E8  0012               	return	
  8214  0134EA                     l3890:
  8215  0134EA  0E00               	movlw	0
  8216  0134EC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8217  0134EE  0E04               	movlw	4
  8218  0134F0  6E01               	movwf	?___fpclassifyf^0,c
  8219  0134F2  0012               	return		;funcret
  8220  0134F4                     __end_of___fpclassifyf:
  8221                           	opt callstack 0
  8222                           
  8223 ;; *************** function ___fltol *****************
  8224 ;; Defined at:
  8225 ;;		line 43 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  f1              4    0[COMRAM] int 
  8228 ;; Auto vars:     Size  Location     Type
  8229 ;;  exp1            1    9[COMRAM] unsigned char 
  8230 ;;  sign1           1    8[COMRAM] unsigned char 
  8231 ;; Return value:  Size  Location     Type
  8232 ;;                  4    0[COMRAM] long 
  8233 ;; Registers used:
  8234 ;;		wreg, status,2, status,0
  8235 ;; Tracked objects:
  8236 ;;		On entry : 0/0
  8237 ;;		On exit  : 0/0
  8238 ;;		Unchanged: 0/0
  8239 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8240 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8242 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8243 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8244 ;;Total ram usage:       10 bytes
  8245 ;; Hardware stack levels used:    1
  8246 ;; This function calls:
  8247 ;;		Nothing
  8248 ;; This function is called by:
  8249 ;;		_efgtoa
  8250 ;; This function uses a non-reentrant model
  8251 ;;
  8252                           
  8253                           	psect	text24
  8254  013780                     __ptext24:
  8255                           	opt callstack 0
  8256  013780                     ___fltol:
  8257                           	opt callstack 25
  8258                           
  8259                           ;incstack = 0
  8260  013780  3403               	rlcf	(___fltol@f1+2)^0,w,c
  8261  013782  3404               	rlcf	(___fltol@f1+3)^0,w,c
  8262  013784  6E0A               	movwf	___fltol@exp1^0,c
  8263  013786  500A               	movf	___fltol@exp1^0,w,c
  8264  013788  A4D8               	btfss	status,2,c
  8265  01378A  D009               	goto	l4352
  8266  01378C                     u4970:
  8267  01378C  0E00               	movlw	0
  8268  01378E  6E01               	movwf	?___fltol^0,c
  8269  013790  0E00               	movlw	0
  8270  013792  6E02               	movwf	(?___fltol+1)^0,c
  8271  013794  0E00               	movlw	0
  8272  013796  6E03               	movwf	(?___fltol+2)^0,c
  8273  013798  0E00               	movlw	0
  8274  01379A  6E04               	movwf	(?___fltol+3)^0,c
  8275  01379C  0012               	return	
  8276  01379E                     l4352:
  8277  01379E  0060  F004  F005   	movff	___fltol@f1,??___fltol
  8278  0137A4  0060  F008  F006   	movff	___fltol@f1+1,??___fltol+1
  8279  0137AA  0060  F00C  F007   	movff	___fltol@f1+2,??___fltol+2
  8280  0137B0  0060  F010  F008   	movff	___fltol@f1+3,??___fltol+3
  8281  0137B6  0E20               	movlw	32
  8282  0137B8  D005               	goto	u4980
  8283  0137BA                     u4985:
  8284  0137BA  90D8               	bcf	status,0,c
  8285  0137BC  3208               	rrcf	(??___fltol+3)^0,f,c
  8286  0137BE  3207               	rrcf	(??___fltol+2)^0,f,c
  8287  0137C0  3206               	rrcf	(??___fltol+1)^0,f,c
  8288  0137C2  3205               	rrcf	??___fltol^0,f,c
  8289  0137C4                     u4980:
  8290  0137C4  2EE8               	decfsz	wreg,f,c
  8291  0137C6  D7F9               	goto	u4985
  8292  0137C8  5005               	movf	??___fltol^0,w,c
  8293  0137CA  6E09               	movwf	___fltol@sign1^0,c
  8294  0137CC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  8295  0137CE  0EFF               	movlw	255
  8296  0137D0  1601               	andwf	___fltol@f1^0,f,c
  8297  0137D2  0EFF               	movlw	255
  8298  0137D4  1602               	andwf	(___fltol@f1+1)^0,f,c
  8299  0137D6  0EFF               	movlw	255
  8300  0137D8  1603               	andwf	(___fltol@f1+2)^0,f,c
  8301  0137DA  0E00               	movlw	0
  8302  0137DC  1604               	andwf	(___fltol@f1+3)^0,f,c
  8303  0137DE  0E96               	movlw	150
  8304  0137E0  5E0A               	subwf	___fltol@exp1^0,f,c
  8305  0137E2  AE0A               	btfss	___fltol@exp1^0,7,c
  8306  0137E4  D00D               	goto	l4372
  8307  0137E6  500A               	movf	___fltol@exp1^0,w,c
  8308  0137E8  0A80               	xorlw	128
  8309  0137EA  0F97               	addlw	151
  8310  0137EC  A0D8               	btfss	status,0,c
  8311  0137EE  D7CE               	goto	u4970
  8312  0137F0                     l4368:
  8313  0137F0  90D8               	bcf	status,0,c
  8314  0137F2  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8315  0137F4  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8316  0137F6  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8317  0137F8  3201               	rrcf	___fltol@f1^0,f,c
  8318  0137FA  3E0A               	incfsz	___fltol@exp1^0,f,c
  8319  0137FC  D7F9               	goto	l4368
  8320  0137FE  D00D               	goto	u5020
  8321  013800                     l4372:
  8322  013800  0E1F               	movlw	31
  8323  013802  640A               	cpfsgt	___fltol@exp1^0,c
  8324  013804  D007               	goto	l4380
  8325  013806  D7C2               	goto	u4970
  8326  013808                     l4378:
  8327  013808  90D8               	bcf	status,0,c
  8328  01380A  3601               	rlcf	___fltol@f1^0,f,c
  8329  01380C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8330  01380E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8331  013810  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8332  013812  060A               	decf	___fltol@exp1^0,f,c
  8333  013814                     l4380:
  8334  013814  500A               	movf	___fltol@exp1^0,w,c
  8335  013816  A4D8               	btfss	status,2,c
  8336  013818  D7F7               	goto	l4378
  8337  01381A                     u5020:
  8338  01381A  5009               	movf	___fltol@sign1^0,w,c
  8339  01381C  B4D8               	btfsc	status,2,c
  8340  01381E  D008               	goto	l4386
  8341  013820  1E04               	comf	(___fltol@f1+3)^0,f,c
  8342  013822  1E03               	comf	(___fltol@f1+2)^0,f,c
  8343  013824  1E02               	comf	(___fltol@f1+1)^0,f,c
  8344  013826  6C01               	negf	___fltol@f1^0,c
  8345  013828  0E00               	movlw	0
  8346  01382A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8347  01382C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8348  01382E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8349  013830                     l4386:
  8350  013830  0060  F004  F001   	movff	___fltol@f1,?___fltol
  8351  013836  0060  F008  F002   	movff	___fltol@f1+1,?___fltol+1
  8352  01383C  0060  F00C  F003   	movff	___fltol@f1+2,?___fltol+2
  8353  013842  0060  F010  F004   	movff	___fltol@f1+3,?___fltol+3
  8354  013848  0012               	return		;funcret
  8355  01384A                     __end_of___fltol:
  8356                           	opt callstack 0
  8357                           
  8358 ;; *************** function ___flsub *****************
  8359 ;; Defined at:
  8360 ;;		line 245 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8361 ;; Parameters:    Size  Location     Type
  8362 ;;  b               4   80[COMRAM] long 
  8363 ;;  a               4   84[COMRAM] long 
  8364 ;; Auto vars:     Size  Location     Type
  8365 ;;		None
  8366 ;; Return value:  Size  Location     Type
  8367 ;;                  4   80[COMRAM] long 
  8368 ;; Registers used:
  8369 ;;		wreg, status,2, status,0, cstack
  8370 ;; Tracked objects:
  8371 ;;		On entry : 0/0
  8372 ;;		On exit  : 0/0
  8373 ;;		Unchanged: 0/0
  8374 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8375 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8378 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8379 ;;Total ram usage:        8 bytes
  8380 ;; Hardware stack levels used:    1
  8381 ;; Hardware stack levels required when called:    1
  8382 ;; This function calls:
  8383 ;;		___fladd
  8384 ;; This function is called by:
  8385 ;;		_efgtoa
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           	psect	text25
  8390  0140C6                     __ptext25:
  8391                           	opt callstack 0
  8392  0140C6                     ___flsub:
  8393                           	opt callstack 24
  8394                           
  8395                           ;incstack = 0
  8396  0140C6  0E00               	movlw	0
  8397  0140C8  1A55               	xorwf	___flsub@a^0,f,c
  8398  0140CA  0E00               	movlw	0
  8399  0140CC  1A56               	xorwf	(___flsub@a+1)^0,f,c
  8400  0140CE  0E00               	movlw	0
  8401  0140D0  1A57               	xorwf	(___flsub@a+2)^0,f,c
  8402  0140D2  0E80               	movlw	128
  8403  0140D4  1A58               	xorwf	(___flsub@a+3)^0,f,c
  8404  0140D6  0060  F144  F00F   	movff	___flsub@b,___fladd@b
  8405  0140DC  0060  F148  F010   	movff	___flsub@b+1,___fladd@b+1
  8406  0140E2  0060  F14C  F011   	movff	___flsub@b+2,___fladd@b+2
  8407  0140E8  0060  F150  F012   	movff	___flsub@b+3,___fladd@b+3
  8408  0140EE  0060  F154  F013   	movff	___flsub@a,___fladd@a
  8409  0140F4  0060  F158  F014   	movff	___flsub@a+1,___fladd@a+1
  8410  0140FA  0060  F15C  F015   	movff	___flsub@a+2,___fladd@a+2
  8411  014100  0060  F160  F016   	movff	___flsub@a+3,___fladd@a+3
  8412  014106  ECB5  F092         	call	___fladd	;wreg free
  8413  01410A  0060  F03C  F051   	movff	?___fladd,?___flsub
  8414  014110  0060  F040  F052   	movff	?___fladd+1,?___flsub+1
  8415  014116  0060  F044  F053   	movff	?___fladd+2,?___flsub+2
  8416  01411C  0060  F048  F054   	movff	?___fladd+3,?___flsub+3
  8417  014122  0012               	return		;funcret
  8418  014124                     __end_of___flsub:
  8419                           	opt callstack 0
  8420                           
  8421 ;; *************** function ___fladd *****************
  8422 ;; Defined at:
  8423 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;  b               4   14[COMRAM] long 
  8426 ;;  a               4   18[COMRAM] long 
  8427 ;; Auto vars:     Size  Location     Type
  8428 ;;  grs             1   29[COMRAM] unsigned char 
  8429 ;;  bexp            1   28[COMRAM] unsigned char 
  8430 ;;  aexp            1   27[COMRAM] unsigned char 
  8431 ;;  signs           1   26[COMRAM] unsigned char 
  8432 ;; Return value:  Size  Location     Type
  8433 ;;                  4   14[COMRAM] unsigned char 
  8434 ;; Registers used:
  8435 ;;		wreg, status,2, status,0
  8436 ;; Tracked objects:
  8437 ;;		On entry : 0/4
  8438 ;;		On exit  : 0/0
  8439 ;;		Unchanged: 0/0
  8440 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8441 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8442 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8444 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8445 ;;Total ram usage:       16 bytes
  8446 ;; Hardware stack levels used:    1
  8447 ;; This function calls:
  8448 ;;		Nothing
  8449 ;; This function is called by:
  8450 ;;		_main_loop
  8451 ;;		_efgtoa
  8452 ;;		___flsub
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text26
  8457  01256A                     __ptext26:
  8458                           	opt callstack 0
  8459  01256A                     ___fladd:
  8460                           	opt callstack 24
  8461                           
  8462                           ;incstack = 0
  8463  01256A  5012               	movf	(___fladd@b+3)^0,w,c
  8464  01256C  0B80               	andlw	128
  8465  01256E  6E1B               	movwf	___fladd@signs^0,c
  8466  012570  5012               	movf	(___fladd@b+3)^0,w,c
  8467  012572  2412               	addwf	(___fladd@b+3)^0,w,c
  8468  012574  6E1D               	movwf	___fladd@bexp^0,c
  8469  012576  BE11               	btfsc	(___fladd@b+2)^0,7,c
  8470  012578  801D               	bsf	___fladd@bexp^0,0,c
  8471  01257A  501D               	movf	___fladd@bexp^0,w,c
  8472  01257C  B4D8               	btfsc	status,2,c
  8473  01257E  D00D               	goto	l3664
  8474  012580  281D               	incf	___fladd@bexp^0,w,c
  8475  012582  A4D8               	btfss	status,2,c
  8476  012584  D008               	goto	l3660
  8477  012586  0E00               	movlw	0
  8478  012588  6E0F               	movwf	___fladd@b^0,c
  8479  01258A  0E00               	movlw	0
  8480  01258C  6E10               	movwf	(___fladd@b+1)^0,c
  8481  01258E  0E00               	movlw	0
  8482  012590  6E11               	movwf	(___fladd@b+2)^0,c
  8483  012592  0E00               	movlw	0
  8484  012594  6E12               	movwf	(___fladd@b+3)^0,c
  8485  012596                     l3660:
  8486  012596  8E11               	bsf	(___fladd@b+2)^0,7,c
  8487  012598  D006               	goto	L9
  8488  01259A                     l3664:
  8489  01259A  0E00               	movlw	0
  8490  01259C  6E0F               	movwf	___fladd@b^0,c
  8491  01259E  0E00               	movlw	0
  8492  0125A0  6E10               	movwf	(___fladd@b+1)^0,c
  8493  0125A2  0E00               	movlw	0
  8494  0125A4  6E11               	movwf	(___fladd@b+2)^0,c
  8495  0125A6                     L9:
  8496  0125A6  0E00               	movlw	0
  8497  0125A8  6E12               	movwf	(___fladd@b+3)^0,c
  8498  0125AA  5016               	movf	(___fladd@a+3)^0,w,c
  8499  0125AC  0B80               	andlw	128
  8500  0125AE  6E1C               	movwf	___fladd@aexp^0,c
  8501  0125B0  501B               	movf	___fladd@signs^0,w,c
  8502  0125B2  181C               	xorwf	___fladd@aexp^0,w,c
  8503  0125B4  A4D8               	btfss	status,2,c
  8504  0125B6  8C1B               	bsf	___fladd@signs^0,6,c
  8505  0125B8  5016               	movf	(___fladd@a+3)^0,w,c
  8506  0125BA  2416               	addwf	(___fladd@a+3)^0,w,c
  8507  0125BC  6E1C               	movwf	___fladd@aexp^0,c
  8508  0125BE  BE15               	btfsc	(___fladd@a+2)^0,7,c
  8509  0125C0  801C               	bsf	___fladd@aexp^0,0,c
  8510  0125C2  501C               	movf	___fladd@aexp^0,w,c
  8511  0125C4  B4D8               	btfsc	status,2,c
  8512  0125C6  D00D               	goto	l3688
  8513  0125C8  281C               	incf	___fladd@aexp^0,w,c
  8514  0125CA  A4D8               	btfss	status,2,c
  8515  0125CC  D008               	goto	l3684
  8516  0125CE  0E00               	movlw	0
  8517  0125D0  6E13               	movwf	___fladd@a^0,c
  8518  0125D2  0E00               	movlw	0
  8519  0125D4  6E14               	movwf	(___fladd@a+1)^0,c
  8520  0125D6  0E00               	movlw	0
  8521  0125D8  6E15               	movwf	(___fladd@a+2)^0,c
  8522  0125DA  0E00               	movlw	0
  8523  0125DC  6E16               	movwf	(___fladd@a+3)^0,c
  8524  0125DE                     l3684:
  8525  0125DE  8E15               	bsf	(___fladd@a+2)^0,7,c
  8526  0125E0  D006               	goto	L10
  8527  0125E2                     l3688:
  8528  0125E2  0E00               	movlw	0
  8529  0125E4  6E13               	movwf	___fladd@a^0,c
  8530  0125E6  0E00               	movlw	0
  8531  0125E8  6E14               	movwf	(___fladd@a+1)^0,c
  8532  0125EA  0E00               	movlw	0
  8533  0125EC  6E15               	movwf	(___fladd@a+2)^0,c
  8534  0125EE                     L10:
  8535  0125EE  0E00               	movlw	0
  8536  0125F0  6E16               	movwf	(___fladd@a+3)^0,c
  8537  0125F2  501D               	movf	___fladd@bexp^0,w,c
  8538  0125F4  5C1C               	subwf	___fladd@aexp^0,w,c
  8539  0125F6  B0D8               	btfsc	status,0,c
  8540  0125F8  D031               	goto	l3726
  8541  0125FA  AC1B               	btfss	___fladd@signs^0,6,c
  8542  0125FC  D002               	goto	l3696
  8543  0125FE  0E80               	movlw	128
  8544  012600  1A1B               	xorwf	___fladd@signs^0,f,c
  8545  012602                     l3696:
  8546  012602  0060  F074  F01E   	movff	___fladd@bexp,___fladd@grs
  8547  012608  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8548  01260E  0060  F078  F01C   	movff	___fladd@grs,___fladd@aexp
  8549  012614  0060  F03C  F01E   	movff	___fladd@b,___fladd@grs
  8550  01261A  0060  F04C  F00F   	movff	___fladd@a,___fladd@b
  8551  012620  0060  F078  F013   	movff	___fladd@grs,___fladd@a
  8552  012626  0060  F040  F01E   	movff	___fladd@b+1,___fladd@grs
  8553  01262C  0060  F050  F010   	movff	___fladd@a+1,___fladd@b+1
  8554  012632  0060  F078  F014   	movff	___fladd@grs,___fladd@a+1
  8555  012638  0060  F044  F01E   	movff	___fladd@b+2,___fladd@grs
  8556  01263E  0060  F054  F011   	movff	___fladd@a+2,___fladd@b+2
  8557  012644  0060  F078  F015   	movff	___fladd@grs,___fladd@a+2
  8558  01264A  0060  F048  F01E   	movff	___fladd@b+3,___fladd@grs
  8559  012650  0060  F058  F012   	movff	___fladd@a+3,___fladd@b+3
  8560  012656  0060  F078  F016   	movff	___fladd@grs,___fladd@a+3
  8561  01265C                     l3726:
  8562  01265C  0E00               	movlw	0
  8563  01265E  6E1E               	movwf	___fladd@grs^0,c
  8564  012660  501D               	movf	___fladd@bexp^0,w,c
  8565  012662  0060  F070  F017   	movff	___fladd@aexp,??___fladd
  8566  012668  6A18               	clrf	(??___fladd+1)^0,c
  8567  01266A  5E17               	subwf	??___fladd^0,f,c
  8568  01266C  0E00               	movlw	0
  8569  01266E  5A18               	subwfb	(??___fladd+1)^0,f,c
  8570  012670  BE18               	btfsc	(??___fladd+1)^0,7,c
  8571  012672  D02D               	goto	l1259
  8572  012674  5018               	movf	(??___fladd+1)^0,w,c
  8573  012676  E104               	bnz	u3770
  8574  012678  0E1A               	movlw	26
  8575  01267A  5C17               	subwf	??___fladd^0,w,c
  8576  01267C  A0D8               	btfss	status,0,c
  8577  01267E  D027               	goto	l1259
  8578  012680                     u3770:
  8579  012680  500F               	movf	___fladd@b^0,w,c
  8580  012682  1010               	iorwf	(___fladd@b+1)^0,w,c
  8581  012684  1011               	iorwf	(___fladd@b+2)^0,w,c
  8582  012686  1012               	iorwf	(___fladd@b+3)^0,w,c
  8583  012688  B4D8               	btfsc	status,2,c
  8584  01268A  D002               	goto	u3780
  8585  01268C  0E01               	movlw	1
  8586  01268E  D001               	goto	u3790
  8587  012690                     u3780:
  8588  012690  0E00               	movlw	0
  8589  012692                     u3790:
  8590  012692  6E1E               	movwf	___fladd@grs^0,c
  8591  012694  0E00               	movlw	0
  8592  012696  6E0F               	movwf	___fladd@b^0,c
  8593  012698  0E00               	movlw	0
  8594  01269A  6E10               	movwf	(___fladd@b+1)^0,c
  8595  01269C  0E00               	movlw	0
  8596  01269E  6E11               	movwf	(___fladd@b+2)^0,c
  8597  0126A0  0E00               	movlw	0
  8598  0126A2  6E12               	movwf	(___fladd@b+3)^0,c
  8599  0126A4  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8600  0126AA  D015               	goto	u3820
  8601  0126AC                     l1260:
  8602  0126AC  A01E               	btfss	___fladd@grs^0,0,c
  8603  0126AE  D005               	goto	l3738
  8604  0126B0  90D8               	bcf	status,0,c
  8605  0126B2  301E               	rrcf	___fladd@grs^0,w,c
  8606  0126B4  0901               	iorlw	1
  8607  0126B6  6E1E               	movwf	___fladd@grs^0,c
  8608  0126B8  D002               	goto	l3740
  8609  0126BA                     l3738:
  8610  0126BA  90D8               	bcf	status,0,c
  8611  0126BC  321E               	rrcf	___fladd@grs^0,f,c
  8612  0126BE                     l3740:
  8613  0126BE  B00F               	btfsc	___fladd@b^0,0,c
  8614  0126C0  8E1E               	bsf	___fladd@grs^0,7,c
  8615  0126C2  3412               	rlcf	(___fladd@b+3)^0,w,c
  8616  0126C4  3212               	rrcf	(___fladd@b+3)^0,f,c
  8617  0126C6  3211               	rrcf	(___fladd@b+2)^0,f,c
  8618  0126C8  3210               	rrcf	(___fladd@b+1)^0,f,c
  8619  0126CA  320F               	rrcf	___fladd@b^0,f,c
  8620  0126CC  2A1D               	incf	___fladd@bexp^0,f,c
  8621  0126CE                     l1259:
  8622  0126CE  501C               	movf	___fladd@aexp^0,w,c
  8623  0126D0  5C1D               	subwf	___fladd@bexp^0,w,c
  8624  0126D2  A0D8               	btfss	status,0,c
  8625  0126D4  D7EB               	goto	l1260
  8626  0126D6                     u3820:
  8627  0126D6  BC1B               	btfsc	___fladd@signs^0,6,c
  8628  0126D8  D028               	goto	l3772
  8629  0126DA  501D               	movf	___fladd@bexp^0,w,c
  8630  0126DC  A4D8               	btfss	status,2,c
  8631  0126DE  D009               	goto	l3754
  8632  0126E0  0E00               	movlw	0
  8633  0126E2  6E0F               	movwf	?___fladd^0,c
  8634  0126E4  0E00               	movlw	0
  8635  0126E6  6E10               	movwf	(?___fladd+1)^0,c
  8636  0126E8  0E00               	movlw	0
  8637  0126EA  6E11               	movwf	(?___fladd+2)^0,c
  8638  0126EC  0E00               	movlw	0
  8639  0126EE  6E12               	movwf	(?___fladd+3)^0,c
  8640  0126F0  0012               	return	
  8641  0126F2                     l3754:
  8642  0126F2  5013               	movf	___fladd@a^0,w,c
  8643  0126F4  260F               	addwf	___fladd@b^0,f,c
  8644  0126F6  5014               	movf	(___fladd@a+1)^0,w,c
  8645  0126F8  2210               	addwfc	(___fladd@b+1)^0,f,c
  8646  0126FA  5015               	movf	(___fladd@a+2)^0,w,c
  8647  0126FC  2211               	addwfc	(___fladd@b+2)^0,f,c
  8648  0126FE  5016               	movf	(___fladd@a+3)^0,w,c
  8649  012700  2212               	addwfc	(___fladd@b+3)^0,f,c
  8650  012702  A012               	btfss	(___fladd@b+3)^0,0,c
  8651  012704  D071               	goto	u3950
  8652  012706  A01E               	btfss	___fladd@grs^0,0,c
  8653  012708  D005               	goto	l3762
  8654  01270A  90D8               	bcf	status,0,c
  8655  01270C  301E               	rrcf	___fladd@grs^0,w,c
  8656  01270E  0901               	iorlw	1
  8657  012710  6E1E               	movwf	___fladd@grs^0,c
  8658  012712  D002               	goto	l3764
  8659  012714                     l3762:
  8660  012714  90D8               	bcf	status,0,c
  8661  012716  321E               	rrcf	___fladd@grs^0,f,c
  8662  012718                     l3764:
  8663  012718  B00F               	btfsc	___fladd@b^0,0,c
  8664  01271A  8E1E               	bsf	___fladd@grs^0,7,c
  8665  01271C  3412               	rlcf	(___fladd@b+3)^0,w,c
  8666  01271E  3212               	rrcf	(___fladd@b+3)^0,f,c
  8667  012720  3211               	rrcf	(___fladd@b+2)^0,f,c
  8668  012722  3210               	rrcf	(___fladd@b+1)^0,f,c
  8669  012724  320F               	rrcf	___fladd@b^0,f,c
  8670  012726  2A1D               	incf	___fladd@bexp^0,f,c
  8671  012728  D05F               	goto	u3950
  8672  01272A                     l3772:
  8673  01272A  5013               	movf	___fladd@a^0,w,c
  8674  01272C  5C0F               	subwf	___fladd@b^0,w,c
  8675  01272E  5014               	movf	(___fladd@a+1)^0,w,c
  8676  012730  5810               	subwfb	(___fladd@b+1)^0,w,c
  8677  012732  5015               	movf	(___fladd@a+2)^0,w,c
  8678  012734  5811               	subwfb	(___fladd@b+2)^0,w,c
  8679  012736  5012               	movf	(___fladd@b+3)^0,w,c
  8680  012738  0A80               	xorlw	128
  8681  01273A  6E17               	movwf	??___fladd^0,c
  8682  01273C  5016               	movf	(___fladd@a+3)^0,w,c
  8683  01273E  0A80               	xorlw	128
  8684  012740  5817               	subwfb	??___fladd^0,w,c
  8685  012742  B0D8               	btfsc	status,0,c
  8686  012744  D025               	goto	l3782
  8687  012746  500F               	movf	___fladd@b^0,w,c
  8688  012748  5C13               	subwf	___fladd@a^0,w,c
  8689  01274A  6E17               	movwf	??___fladd^0,c
  8690  01274C  5010               	movf	(___fladd@b+1)^0,w,c
  8691  01274E  5814               	subwfb	(___fladd@a+1)^0,w,c
  8692  012750  6E18               	movwf	(??___fladd+1)^0,c
  8693  012752  5011               	movf	(___fladd@b+2)^0,w,c
  8694  012754  5815               	subwfb	(___fladd@a+2)^0,w,c
  8695  012756  6E19               	movwf	(??___fladd+2)^0,c
  8696  012758  5012               	movf	(___fladd@b+3)^0,w,c
  8697  01275A  5816               	subwfb	(___fladd@a+3)^0,w,c
  8698  01275C  6E1A               	movwf	(??___fladd+3)^0,c
  8699  01275E  0EFF               	movlw	255
  8700  012760  2417               	addwf	??___fladd^0,w,c
  8701  012762  6E0F               	movwf	___fladd@b^0,c
  8702  012764  0EFF               	movlw	255
  8703  012766  2018               	addwfc	(??___fladd+1)^0,w,c
  8704  012768  6E10               	movwf	(___fladd@b+1)^0,c
  8705  01276A  0EFF               	movlw	255
  8706  01276C  2019               	addwfc	(??___fladd+2)^0,w,c
  8707  01276E  6E11               	movwf	(___fladd@b+2)^0,c
  8708  012770  0EFF               	movlw	255
  8709  012772  201A               	addwfc	(??___fladd+3)^0,w,c
  8710  012774  6E12               	movwf	(___fladd@b+3)^0,c
  8711  012776  0E80               	movlw	128
  8712  012778  1A1B               	xorwf	___fladd@signs^0,f,c
  8713  01277A  6C1E               	negf	___fladd@grs^0,c
  8714  01277C  501E               	movf	___fladd@grs^0,w,c
  8715  01277E  A4D8               	btfss	status,2,c
  8716  012780  D00F               	goto	l1275
  8717  012782  0E01               	movlw	1
  8718  012784  260F               	addwf	___fladd@b^0,f,c
  8719  012786  0E00               	movlw	0
  8720  012788  2210               	addwfc	(___fladd@b+1)^0,f,c
  8721  01278A  2211               	addwfc	(___fladd@b+2)^0,f,c
  8722  01278C  2212               	addwfc	(___fladd@b+3)^0,f,c
  8723  01278E  D008               	goto	l1275
  8724  012790                     l3782:
  8725  012790  5013               	movf	___fladd@a^0,w,c
  8726  012792  5E0F               	subwf	___fladd@b^0,f,c
  8727  012794  5014               	movf	(___fladd@a+1)^0,w,c
  8728  012796  5A10               	subwfb	(___fladd@b+1)^0,f,c
  8729  012798  5015               	movf	(___fladd@a+2)^0,w,c
  8730  01279A  5A11               	subwfb	(___fladd@b+2)^0,f,c
  8731  01279C  5016               	movf	(___fladd@a+3)^0,w,c
  8732  01279E  5A12               	subwfb	(___fladd@b+3)^0,f,c
  8733  0127A0                     l1275:
  8734  0127A0  500F               	movf	___fladd@b^0,w,c
  8735  0127A2  1010               	iorwf	(___fladd@b+1)^0,w,c
  8736  0127A4  1011               	iorwf	(___fladd@b+2)^0,w,c
  8737  0127A6  1012               	iorwf	(___fladd@b+3)^0,w,c
  8738  0127A8  A4D8               	btfss	status,2,c
  8739  0127AA  D01C               	goto	l3806
  8740  0127AC  501E               	movf	___fladd@grs^0,w,c
  8741  0127AE  A4D8               	btfss	status,2,c
  8742  0127B0  D019               	goto	l3806
  8743  0127B2  0E00               	movlw	0
  8744  0127B4  6E0F               	movwf	?___fladd^0,c
  8745  0127B6  0E00               	movlw	0
  8746  0127B8  6E10               	movwf	(?___fladd+1)^0,c
  8747  0127BA  0E00               	movlw	0
  8748  0127BC  6E11               	movwf	(?___fladd+2)^0,c
  8749  0127BE  0E00               	movlw	0
  8750  0127C0  6E12               	movwf	(?___fladd+3)^0,c
  8751  0127C2  0012               	return	
  8752  0127C4                     l3790:
  8753  0127C4  90D8               	bcf	status,0,c
  8754  0127C6  360F               	rlcf	___fladd@b^0,f,c
  8755  0127C8  3610               	rlcf	(___fladd@b+1)^0,f,c
  8756  0127CA  3611               	rlcf	(___fladd@b+2)^0,f,c
  8757  0127CC  3612               	rlcf	(___fladd@b+3)^0,f,c
  8758  0127CE  BE1E               	btfsc	___fladd@grs^0,7,c
  8759  0127D0  800F               	bsf	___fladd@b^0,0,c
  8760  0127D2  A01E               	btfss	___fladd@grs^0,0,c
  8761  0127D4  D002               	goto	l3800
  8762  0127D6  80D8               	bsf	status,0,c
  8763  0127D8  D001               	goto	L11
  8764  0127DA                     l3800:
  8765  0127DA  90D8               	bcf	status,0,c
  8766  0127DC                     L11:
  8767  0127DC  361E               	rlcf	___fladd@grs^0,f,c
  8768  0127DE  501D               	movf	___fladd@bexp^0,w,c
  8769  0127E0  A4D8               	btfss	status,2,c
  8770  0127E2  061D               	decf	___fladd@bexp^0,f,c
  8771  0127E4                     l3806:
  8772  0127E4  AE11               	btfss	(___fladd@b+2)^0,7,c
  8773  0127E6  D7EE               	goto	l3790
  8774  0127E8                     u3950:
  8775  0127E8  0E00               	movlw	0
  8776  0127EA  6E1C               	movwf	___fladd@aexp^0,c
  8777  0127EC  AE1E               	btfss	___fladd@grs^0,7,c
  8778  0127EE  D00C               	goto	l1284
  8779  0127F0  0060  F078  F017   	movff	___fladd@grs,??___fladd
  8780  0127F6  0E7F               	movlw	127
  8781  0127F8  1617               	andwf	??___fladd^0,f,c
  8782  0127FA  B4D8               	btfsc	status,2,c
  8783  0127FC  D003               	goto	l1285
  8784  0127FE                     u3970:
  8785  0127FE  0E01               	movlw	1
  8786  012800  6E1C               	movwf	___fladd@aexp^0,c
  8787  012802  D002               	goto	l1284
  8788  012804                     l1285:
  8789  012804  B00F               	btfsc	___fladd@b^0,0,c
  8790  012806  D7FB               	goto	u3970
  8791  012808                     l1284:
  8792  012808  501C               	movf	___fladd@aexp^0,w,c
  8793  01280A  B4D8               	btfsc	status,2,c
  8794  01280C  D028               	goto	l3826
  8795  01280E  0E01               	movlw	1
  8796  012810  260F               	addwf	___fladd@b^0,f,c
  8797  012812  0E00               	movlw	0
  8798  012814  2210               	addwfc	(___fladd@b+1)^0,f,c
  8799  012816  2211               	addwfc	(___fladd@b+2)^0,f,c
  8800  012818  2212               	addwfc	(___fladd@b+3)^0,f,c
  8801  01281A  A012               	btfss	(___fladd@b+3)^0,0,c
  8802  01281C  D020               	goto	l3826
  8803  01281E  0060  F03C  F017   	movff	___fladd@b,??___fladd
  8804  012824  0060  F040  F018   	movff	___fladd@b+1,??___fladd+1
  8805  01282A  0060  F044  F019   	movff	___fladd@b+2,??___fladd+2
  8806  012830  0060  F048  F01A   	movff	___fladd@b+3,??___fladd+3
  8807  012836  341A               	rlcf	(??___fladd+3)^0,w,c
  8808  012838  321A               	rrcf	(??___fladd+3)^0,f,c
  8809  01283A  3219               	rrcf	(??___fladd+2)^0,f,c
  8810  01283C  3218               	rrcf	(??___fladd+1)^0,f,c
  8811  01283E  3217               	rrcf	??___fladd^0,f,c
  8812  012840  0060  F05C  F00F   	movff	??___fladd,___fladd@b
  8813  012846  0060  F060  F010   	movff	??___fladd+1,___fladd@b+1
  8814  01284C  0060  F064  F011   	movff	??___fladd+2,___fladd@b+2
  8815  012852  0060  F068  F012   	movff	??___fladd+3,___fladd@b+3
  8816  012858  281D               	incf	___fladd@bexp^0,w,c
  8817  01285A  A4D8               	btfss	status,2,c
  8818  01285C  2A1D               	incf	___fladd@bexp^0,f,c
  8819  01285E                     l3826:
  8820  01285E  281D               	incf	___fladd@bexp^0,w,c
  8821  012860  B4D8               	btfsc	status,2,c
  8822  012862  D003               	goto	u4030
  8823  012864  501D               	movf	___fladd@bexp^0,w,c
  8824  012866  A4D8               	btfss	status,2,c
  8825  012868  D00D               	goto	l3834
  8826  01286A                     u4030:
  8827  01286A  0E00               	movlw	0
  8828  01286C  6E0F               	movwf	___fladd@b^0,c
  8829  01286E  0E00               	movlw	0
  8830  012870  6E10               	movwf	(___fladd@b+1)^0,c
  8831  012872  0E00               	movlw	0
  8832  012874  6E11               	movwf	(___fladd@b+2)^0,c
  8833  012876  0E00               	movlw	0
  8834  012878  6E12               	movwf	(___fladd@b+3)^0,c
  8835  01287A  501D               	movf	___fladd@bexp^0,w,c
  8836  01287C  A4D8               	btfss	status,2,c
  8837  01287E  D002               	goto	l3834
  8838  012880  0E00               	movlw	0
  8839  012882  6E1B               	movwf	___fladd@signs^0,c
  8840  012884                     l3834:
  8841  012884  A01D               	btfss	___fladd@bexp^0,0,c
  8842  012886  D002               	goto	l3838
  8843  012888  8E11               	bsf	(___fladd@b+2)^0,7,c
  8844  01288A  D001               	goto	l3840
  8845  01288C                     l3838:
  8846  01288C  9E11               	bcf	(___fladd@b+2)^0,7,c
  8847  01288E                     l3840:
  8848  01288E  90D8               	bcf	status,0,c
  8849  012890  301D               	rrcf	___fladd@bexp^0,w,c
  8850  012892  6E12               	movwf	(___fladd@b+3)^0,c
  8851  012894  BE1B               	btfsc	___fladd@signs^0,7,c
  8852  012896  8E12               	bsf	(___fladd@b+3)^0,7,c
  8853  012898  0060  F03C  F00F   	movff	___fladd@b,?___fladd
  8854  01289E  0060  F040  F010   	movff	___fladd@b+1,?___fladd+1
  8855  0128A4  0060  F044  F011   	movff	___fladd@b+2,?___fladd+2
  8856  0128AA  0060  F048  F012   	movff	___fladd@b+3,?___fladd+3
  8857  0128B0  0012               	return		;funcret
  8858  0128B2                     __end_of___fladd:
  8859                           	opt callstack 0
  8860                           
  8861 ;; *************** function ___flneg *****************
  8862 ;; Defined at:
  8863 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8864 ;; Parameters:    Size  Location     Type
  8865 ;;  f1              4    0[COMRAM] unsigned char 
  8866 ;; Auto vars:     Size  Location     Type
  8867 ;;		None
  8868 ;; Return value:  Size  Location     Type
  8869 ;;                  4    0[COMRAM] unsigned char 
  8870 ;; Registers used:
  8871 ;;		wreg, status,2, status,0
  8872 ;; Tracked objects:
  8873 ;;		On entry : 3F/0
  8874 ;;		On exit  : 3F/0
  8875 ;;		Unchanged: 3F/0
  8876 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8877 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8880 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8881 ;;Total ram usage:        4 bytes
  8882 ;; Hardware stack levels used:    1
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_efgtoa
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text27
  8891  01434A                     __ptext27:
  8892                           	opt callstack 0
  8893  01434A                     ___flneg:
  8894                           	opt callstack 25
  8895                           
  8896                           ; BSR set to: 0
  8897                           
  8898                           ;incstack = 0
  8899  01434A  5001               	movf	___flneg@f1^0,w,c
  8900  01434C  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8901  01434E  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8902  014350  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8903  014352  B4D8               	btfsc	status,2,c
  8904  014354  D008               	goto	l4342
  8905                           
  8906                           ; BSR set to: 0
  8907  014356  0E00               	movlw	0
  8908  014358  1A01               	xorwf	___flneg@f1^0,f,c
  8909  01435A  0E00               	movlw	0
  8910  01435C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8911  01435E  0E00               	movlw	0
  8912  014360  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8913  014362  0E80               	movlw	128
  8914  014364  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8915  014366                     l4342:
  8916                           
  8917                           ; BSR set to: 0
  8918  014366  0060  F004  F001   	movff	___flneg@f1,?___flneg
  8919  01436C  0060  F008  F002   	movff	___flneg@f1+1,?___flneg+1
  8920  014372  0060  F00C  F003   	movff	___flneg@f1+2,?___flneg+2
  8921  014378  0060  F010  F004   	movff	___flneg@f1+3,?___flneg+3
  8922                           
  8923                           ; BSR set to: 0
  8924  01437E  0012               	return		;funcret
  8925  014380                     __end_of___flneg:
  8926                           	opt callstack 0
  8927                           
  8928 ;; *************** function ___flmul *****************
  8929 ;; Defined at:
  8930 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8931 ;; Parameters:    Size  Location     Type
  8932 ;;  b               4   55[COMRAM] unsigned char 
  8933 ;;  a               4   59[COMRAM] unsigned char 
  8934 ;; Auto vars:     Size  Location     Type
  8935 ;;  prod            4   74[COMRAM] struct .
  8936 ;;  grs             4   69[COMRAM] unsigned long 
  8937 ;;  temp            2   78[COMRAM] struct .
  8938 ;;  bexp            1   73[COMRAM] unsigned char 
  8939 ;;  aexp            1   68[COMRAM] unsigned char 
  8940 ;;  sign            1   67[COMRAM] unsigned char 
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  4   55[COMRAM] unsigned char 
  8943 ;; Registers used:
  8944 ;;		wreg, status,2, status,0, prodl, prodh
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/4
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8950 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8951 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8952 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8953 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8954 ;;Total ram usage:       25 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; This function calls:
  8957 ;;		Nothing
  8958 ;; This function is called by:
  8959 ;;		_main_loop
  8960 ;;		_efgtoa
  8961 ;; This function uses a non-reentrant model
  8962 ;;
  8963                           
  8964                           	psect	text28
  8965  0121E6                     __ptext28:
  8966                           	opt callstack 0
  8967  0121E6                     ___flmul:
  8968                           	opt callstack 25
  8969                           
  8970                           ; BSR set to: 0
  8971                           ;incstack = 0
  8972  0121E6  503B               	movf	(___flmul@b+3)^0,w,c
  8973  0121E8  0B80               	andlw	128
  8974  0121EA  6E44               	movwf	___flmul@sign^0,c
  8975  0121EC  503B               	movf	(___flmul@b+3)^0,w,c
  8976  0121EE  243B               	addwf	(___flmul@b+3)^0,w,c
  8977  0121F0  6E4A               	movwf	___flmul@bexp^0,c
  8978  0121F2  BE3A               	btfsc	(___flmul@b+2)^0,7,c
  8979  0121F4  804A               	bsf	___flmul@bexp^0,0,c
  8980  0121F6  504A               	movf	___flmul@bexp^0,w,c
  8981  0121F8  B4D8               	btfsc	status,2,c
  8982  0121FA  D00D               	goto	l4098
  8983  0121FC  284A               	incf	___flmul@bexp^0,w,c
  8984  0121FE  A4D8               	btfss	status,2,c
  8985  012200  D008               	goto	l4096
  8986  012202  0E00               	movlw	0
  8987  012204  6E38               	movwf	___flmul@b^0,c
  8988  012206  0E00               	movlw	0
  8989  012208  6E39               	movwf	(___flmul@b+1)^0,c
  8990  01220A  0E00               	movlw	0
  8991  01220C  6E3A               	movwf	(___flmul@b+2)^0,c
  8992  01220E  0E00               	movlw	0
  8993  012210  6E3B               	movwf	(___flmul@b+3)^0,c
  8994  012212                     l4096:
  8995  012212  8E3A               	bsf	(___flmul@b+2)^0,7,c
  8996  012214  D008               	goto	l4100
  8997  012216                     l4098:
  8998  012216  0E00               	movlw	0
  8999  012218  6E38               	movwf	___flmul@b^0,c
  9000  01221A  0E00               	movlw	0
  9001  01221C  6E39               	movwf	(___flmul@b+1)^0,c
  9002  01221E  0E00               	movlw	0
  9003  012220  6E3A               	movwf	(___flmul@b+2)^0,c
  9004  012222  0E00               	movlw	0
  9005  012224  6E3B               	movwf	(___flmul@b+3)^0,c
  9006  012226                     l4100:
  9007  012226  503F               	movf	(___flmul@a+3)^0,w,c
  9008  012228  0B80               	andlw	128
  9009  01222A  1A44               	xorwf	___flmul@sign^0,f,c
  9010  01222C  503F               	movf	(___flmul@a+3)^0,w,c
  9011  01222E  243F               	addwf	(___flmul@a+3)^0,w,c
  9012  012230  6E45               	movwf	___flmul@aexp^0,c
  9013  012232  BE3E               	btfsc	(___flmul@a+2)^0,7,c
  9014  012234  8045               	bsf	___flmul@aexp^0,0,c
  9015  012236  5045               	movf	___flmul@aexp^0,w,c
  9016  012238  B4D8               	btfsc	status,2,c
  9017  01223A  D00D               	goto	l4116
  9018  01223C  2845               	incf	___flmul@aexp^0,w,c
  9019  01223E  A4D8               	btfss	status,2,c
  9020  012240  D008               	goto	l4114
  9021  012242  0E00               	movlw	0
  9022  012244  6E3C               	movwf	___flmul@a^0,c
  9023  012246  0E00               	movlw	0
  9024  012248  6E3D               	movwf	(___flmul@a+1)^0,c
  9025  01224A  0E00               	movlw	0
  9026  01224C  6E3E               	movwf	(___flmul@a+2)^0,c
  9027  01224E  0E00               	movlw	0
  9028  012250  6E3F               	movwf	(___flmul@a+3)^0,c
  9029  012252                     l4114:
  9030  012252  8E3E               	bsf	(___flmul@a+2)^0,7,c
  9031  012254  D008               	goto	l1344
  9032  012256                     l4116:
  9033  012256  0E00               	movlw	0
  9034  012258  6E3C               	movwf	___flmul@a^0,c
  9035  01225A  0E00               	movlw	0
  9036  01225C  6E3D               	movwf	(___flmul@a+1)^0,c
  9037  01225E  0E00               	movlw	0
  9038  012260  6E3E               	movwf	(___flmul@a+2)^0,c
  9039  012262  0E00               	movlw	0
  9040  012264  6E3F               	movwf	(___flmul@a+3)^0,c
  9041  012266                     l1344:
  9042  012266  5045               	movf	___flmul@aexp^0,w,c
  9043  012268  B4D8               	btfsc	status,2,c
  9044  01226A  D003               	goto	u4650
  9045  01226C  504A               	movf	___flmul@bexp^0,w,c
  9046  01226E  A4D8               	btfss	status,2,c
  9047  012270  D009               	goto	l4124
  9048  012272                     u4650:
  9049  012272  0E00               	movlw	0
  9050  012274  6E38               	movwf	?___flmul^0,c
  9051  012276  0E00               	movlw	0
  9052  012278  6E39               	movwf	(?___flmul+1)^0,c
  9053  01227A  0E00               	movlw	0
  9054  01227C  6E3A               	movwf	(?___flmul+2)^0,c
  9055  01227E  0E00               	movlw	0
  9056  012280  6E3B               	movwf	(?___flmul+3)^0,c
  9057  012282  0012               	return	
  9058  012284                     l4124:
  9059  012284  503E               	movf	(___flmul@a+2)^0,w,c
  9060  012286  0238               	mulwf	___flmul@b^0,c
  9061  012288  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9062  01228E  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9063  012294  504F               	movf	___flmul@temp^0,w,c
  9064  012296  6E46               	movwf	___flmul@grs^0,c
  9065  012298  6A47               	clrf	(___flmul@grs+1)^0,c
  9066  01229A  6A48               	clrf	(___flmul@grs+2)^0,c
  9067  01229C  6A49               	clrf	(___flmul@grs+3)^0,c
  9068  01229E  5050               	movf	(___flmul@temp+1)^0,w,c
  9069  0122A0  6E4B               	movwf	___flmul@prod^0,c
  9070  0122A2  6A4C               	clrf	(___flmul@prod+1)^0,c
  9071  0122A4  6A4D               	clrf	(___flmul@prod+2)^0,c
  9072  0122A6  6A4E               	clrf	(___flmul@prod+3)^0,c
  9073  0122A8  503D               	movf	(___flmul@a+1)^0,w,c
  9074  0122AA  0239               	mulwf	(___flmul@b+1)^0,c
  9075  0122AC  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9076  0122B2  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9077  0122B8  504F               	movf	___flmul@temp^0,w,c
  9078  0122BA  2646               	addwf	___flmul@grs^0,f,c
  9079  0122BC  0E00               	movlw	0
  9080  0122BE  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9081  0122C0  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9082  0122C2  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9083  0122C4  5050               	movf	(___flmul@temp+1)^0,w,c
  9084  0122C6  264B               	addwf	___flmul@prod^0,f,c
  9085  0122C8  0E00               	movlw	0
  9086  0122CA  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9087  0122CC  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9088  0122CE  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9089  0122D0  503C               	movf	___flmul@a^0,w,c
  9090  0122D2  023A               	mulwf	(___flmul@b+2)^0,c
  9091  0122D4  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9092  0122DA  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9093  0122E0  504F               	movf	___flmul@temp^0,w,c
  9094  0122E2  2646               	addwf	___flmul@grs^0,f,c
  9095  0122E4  0E00               	movlw	0
  9096  0122E6  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9097  0122E8  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9098  0122EA  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9099  0122EC  5050               	movf	(___flmul@temp+1)^0,w,c
  9100  0122EE  264B               	addwf	___flmul@prod^0,f,c
  9101  0122F0  0E00               	movlw	0
  9102  0122F2  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9103  0122F4  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9104  0122F6  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9105  0122F8  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  9106  0122FE  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  9107  012304  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  9108  01230A  6A46               	clrf	___flmul@grs^0,c
  9109  01230C  503C               	movf	___flmul@a^0,w,c
  9110  01230E  0239               	mulwf	(___flmul@b+1)^0,c
  9111  012310  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9112  012316  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9113  01231C  504F               	movf	___flmul@temp^0,w,c
  9114  01231E  2646               	addwf	___flmul@grs^0,f,c
  9115  012320  5050               	movf	(___flmul@temp+1)^0,w,c
  9116  012322  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9117  012324  0E00               	movlw	0
  9118  012326  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9119  012328  0E00               	movlw	0
  9120  01232A  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9121  01232C  503D               	movf	(___flmul@a+1)^0,w,c
  9122  01232E  0238               	mulwf	___flmul@b^0,c
  9123  012330  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9124  012336  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9125  01233C  504F               	movf	___flmul@temp^0,w,c
  9126  01233E  2646               	addwf	___flmul@grs^0,f,c
  9127  012340  5050               	movf	(___flmul@temp+1)^0,w,c
  9128  012342  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9129  012344  0E00               	movlw	0
  9130  012346  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9131  012348  0E00               	movlw	0
  9132  01234A  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9133  01234C  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  9134  012352  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  9135  012358  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  9136  01235E  6A46               	clrf	___flmul@grs^0,c
  9137  012360  503C               	movf	___flmul@a^0,w,c
  9138  012362  0238               	mulwf	___flmul@b^0,c
  9139  012364  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9140  01236A  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9141  012370  504F               	movf	___flmul@temp^0,w,c
  9142  012372  2646               	addwf	___flmul@grs^0,f,c
  9143  012374  5050               	movf	(___flmul@temp+1)^0,w,c
  9144  012376  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9145  012378  0E00               	movlw	0
  9146  01237A  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9147  01237C  0E00               	movlw	0
  9148  01237E  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9149  012380  503E               	movf	(___flmul@a+2)^0,w,c
  9150  012382  0239               	mulwf	(___flmul@b+1)^0,c
  9151  012384  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9152  01238A  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9153  012390  504F               	movf	___flmul@temp^0,w,c
  9154  012392  264B               	addwf	___flmul@prod^0,f,c
  9155  012394  5050               	movf	(___flmul@temp+1)^0,w,c
  9156  012396  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9157  012398  0E00               	movlw	0
  9158  01239A  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9159  01239C  0E00               	movlw	0
  9160  01239E  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9161  0123A0  503D               	movf	(___flmul@a+1)^0,w,c
  9162  0123A2  023A               	mulwf	(___flmul@b+2)^0,c
  9163  0123A4  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9164  0123AA  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9165  0123B0  504F               	movf	___flmul@temp^0,w,c
  9166  0123B2  264B               	addwf	___flmul@prod^0,f,c
  9167  0123B4  5050               	movf	(___flmul@temp+1)^0,w,c
  9168  0123B6  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9169  0123B8  0E00               	movlw	0
  9170  0123BA  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9171  0123BC  0E00               	movlw	0
  9172  0123BE  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9173  0123C0  503E               	movf	(___flmul@a+2)^0,w,c
  9174  0123C2  023A               	mulwf	(___flmul@b+2)^0,c
  9175  0123C4  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9176  0123CA  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9177  0123D0  504F               	movf	___flmul@temp^0,w,c
  9178  0123D2  6E40               	movwf	??___flmul^0,c
  9179  0123D4  5050               	movf	(___flmul@temp+1)^0,w,c
  9180  0123D6  6E41               	movwf	(??___flmul+1)^0,c
  9181  0123D8  6A42               	clrf	(??___flmul+2)^0,c
  9182  0123DA  6A43               	clrf	(??___flmul+3)^0,c
  9183  0123DC  0060  F108  F043   	movff	??___flmul+2,??___flmul+3
  9184  0123E2  0060  F104  F042   	movff	??___flmul+1,??___flmul+2
  9185  0123E8  0060  F100  F041   	movff	??___flmul,??___flmul+1
  9186  0123EE  6A40               	clrf	??___flmul^0,c
  9187  0123F0  5040               	movf	??___flmul^0,w,c
  9188  0123F2  264B               	addwf	___flmul@prod^0,f,c
  9189  0123F4  5041               	movf	(??___flmul+1)^0,w,c
  9190  0123F6  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9191  0123F8  5042               	movf	(??___flmul+2)^0,w,c
  9192  0123FA  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9193  0123FC  5043               	movf	(??___flmul+3)^0,w,c
  9194  0123FE  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9195  012400  5049               	movf	(___flmul@grs+3)^0,w,c
  9196  012402  264B               	addwf	___flmul@prod^0,f,c
  9197  012404  0E00               	movlw	0
  9198  012406  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9199  012408  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9200  01240A  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9201  01240C  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  9202  012412  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  9203  012418  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  9204  01241E  6A46               	clrf	___flmul@grs^0,c
  9205  012420  5045               	movf	___flmul@aexp^0,w,c
  9206  012422  0060  F128  F040   	movff	___flmul@bexp,??___flmul
  9207  012428  6A41               	clrf	(??___flmul+1)^0,c
  9208  01242A  2640               	addwf	??___flmul^0,f,c
  9209  01242C  0E00               	movlw	0
  9210  01242E  2241               	addwfc	(??___flmul+1)^0,f,c
  9211  012430  0E82               	movlw	130
  9212  012432  2440               	addwf	??___flmul^0,w,c
  9213  012434  6E4F               	movwf	___flmul@temp^0,c
  9214  012436  0EFF               	movlw	255
  9215  012438  2041               	addwfc	(??___flmul+1)^0,w,c
  9216  01243A  6E50               	movwf	(___flmul@temp+1)^0,c
  9217  01243C  D00F               	goto	l4172
  9218  01243E                     l4166:
  9219  01243E  90D8               	bcf	status,0,c
  9220  012440  364B               	rlcf	___flmul@prod^0,f,c
  9221  012442  364C               	rlcf	(___flmul@prod+1)^0,f,c
  9222  012444  364D               	rlcf	(___flmul@prod+2)^0,f,c
  9223  012446  364E               	rlcf	(___flmul@prod+3)^0,f,c
  9224  012448  BE49               	btfsc	(___flmul@grs+3)^0,7,c
  9225  01244A  804B               	bsf	___flmul@prod^0,0,c
  9226  01244C  90D8               	bcf	status,0,c
  9227  01244E  3646               	rlcf	___flmul@grs^0,f,c
  9228  012450  3647               	rlcf	(___flmul@grs+1)^0,f,c
  9229  012452  3648               	rlcf	(___flmul@grs+2)^0,f,c
  9230  012454  3649               	rlcf	(___flmul@grs+3)^0,f,c
  9231  012456  064F               	decf	___flmul@temp^0,f,c
  9232  012458  A0D8               	btfss	status,0,c
  9233  01245A  0650               	decf	(___flmul@temp+1)^0,f,c
  9234  01245C                     l4172:
  9235  01245C  AE4D               	btfss	(___flmul@prod+2)^0,7,c
  9236  01245E  D7EF               	goto	l4166
  9237  012460  0E00               	movlw	0
  9238  012462  6E45               	movwf	___flmul@aexp^0,c
  9239  012464  AE49               	btfss	(___flmul@grs+3)^0,7,c
  9240  012466  D017               	goto	l1353
  9241  012468  0EFF               	movlw	255
  9242  01246A  1446               	andwf	___flmul@grs^0,w,c
  9243  01246C  6E40               	movwf	??___flmul^0,c
  9244  01246E  0EFF               	movlw	255
  9245  012470  1447               	andwf	(___flmul@grs+1)^0,w,c
  9246  012472  6E41               	movwf	(??___flmul+1)^0,c
  9247  012474  0EFF               	movlw	255
  9248  012476  1448               	andwf	(___flmul@grs+2)^0,w,c
  9249  012478  6E42               	movwf	(??___flmul+2)^0,c
  9250  01247A  0E7F               	movlw	127
  9251  01247C  1449               	andwf	(___flmul@grs+3)^0,w,c
  9252  01247E  6E43               	movwf	(??___flmul+3)^0,c
  9253  012480  5040               	movf	??___flmul^0,w,c
  9254  012482  1041               	iorwf	(??___flmul+1)^0,w,c
  9255  012484  1042               	iorwf	(??___flmul+2)^0,w,c
  9256  012486  1043               	iorwf	(??___flmul+3)^0,w,c
  9257  012488  B4D8               	btfsc	status,2,c
  9258  01248A  D003               	goto	l1354
  9259  01248C                     u4690:
  9260  01248C  0E01               	movlw	1
  9261  01248E  6E45               	movwf	___flmul@aexp^0,c
  9262  012490  D002               	goto	l1353
  9263  012492                     l1354:
  9264  012492  B04B               	btfsc	___flmul@prod^0,0,c
  9265  012494  D7FB               	goto	u4690
  9266  012496                     l1353:
  9267  012496  5045               	movf	___flmul@aexp^0,w,c
  9268  012498  B4D8               	btfsc	status,2,c
  9269  01249A  D027               	goto	l4192
  9270  01249C  0E01               	movlw	1
  9271  01249E  264B               	addwf	___flmul@prod^0,f,c
  9272  0124A0  0E00               	movlw	0
  9273  0124A2  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9274  0124A4  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9275  0124A6  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9276  0124A8  A04E               	btfss	(___flmul@prod+3)^0,0,c
  9277  0124AA  D01F               	goto	l4192
  9278  0124AC  0060  F12C  F040   	movff	___flmul@prod,??___flmul
  9279  0124B2  0060  F130  F041   	movff	___flmul@prod+1,??___flmul+1
  9280  0124B8  0060  F134  F042   	movff	___flmul@prod+2,??___flmul+2
  9281  0124BE  0060  F138  F043   	movff	___flmul@prod+3,??___flmul+3
  9282  0124C4  3443               	rlcf	(??___flmul+3)^0,w,c
  9283  0124C6  3243               	rrcf	(??___flmul+3)^0,f,c
  9284  0124C8  3242               	rrcf	(??___flmul+2)^0,f,c
  9285  0124CA  3241               	rrcf	(??___flmul+1)^0,f,c
  9286  0124CC  3240               	rrcf	??___flmul^0,f,c
  9287  0124CE  0060  F100  F04B   	movff	??___flmul,___flmul@prod
  9288  0124D4  0060  F104  F04C   	movff	??___flmul+1,___flmul@prod+1
  9289  0124DA  0060  F108  F04D   	movff	??___flmul+2,___flmul@prod+2
  9290  0124E0  0060  F10C  F04E   	movff	??___flmul+3,___flmul@prod+3
  9291  0124E6  4A4F               	infsnz	___flmul@temp^0,f,c
  9292  0124E8  2A50               	incf	(___flmul@temp+1)^0,f,c
  9293  0124EA                     l4192:
  9294  0124EA  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  9295  0124EC  D00D               	goto	l4196
  9296  0124EE  5050               	movf	(___flmul@temp+1)^0,w,c
  9297  0124F0  E103               	bnz	u4730
  9298  0124F2  284F               	incf	___flmul@temp^0,w,c
  9299  0124F4  A0D8               	btfss	status,0,c
  9300  0124F6  D008               	goto	l4196
  9301  0124F8                     u4730:
  9302  0124F8  0E00               	movlw	0
  9303  0124FA  6E4B               	movwf	___flmul@prod^0,c
  9304  0124FC  0E00               	movlw	0
  9305  0124FE  6E4C               	movwf	(___flmul@prod+1)^0,c
  9306  012500  0E80               	movlw	128
  9307  012502  6E4D               	movwf	(___flmul@prod+2)^0,c
  9308  012504  0E7F               	movlw	127
  9309  012506  D021               	goto	L12
  9310  012508                     l4196:
  9311  012508  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  9312  01250A  D005               	goto	u4740
  9313  01250C  5050               	movf	(___flmul@temp+1)^0,w,c
  9314  01250E  E10E               	bnz	l1361
  9315  012510  044F               	decf	___flmul@temp^0,w,c
  9316  012512  B0D8               	btfsc	status,0,c
  9317  012514  D00B               	goto	l1361
  9318  012516                     u4740:
  9319  012516  0E00               	movlw	0
  9320  012518  6E4B               	movwf	___flmul@prod^0,c
  9321  01251A  0E00               	movlw	0
  9322  01251C  6E4C               	movwf	(___flmul@prod+1)^0,c
  9323  01251E  0E00               	movlw	0
  9324  012520  6E4D               	movwf	(___flmul@prod+2)^0,c
  9325  012522  0E00               	movlw	0
  9326  012524  6E4E               	movwf	(___flmul@prod+3)^0,c
  9327  012526  0E00               	movlw	0
  9328  012528  6E44               	movwf	___flmul@sign^0,c
  9329  01252A  D010               	goto	l4208
  9330  01252C                     l1361:
  9331  01252C  0060  F13C  F04A   	movff	___flmul@temp,___flmul@bexp
  9332  012532  0EFF               	movlw	255
  9333  012534  164B               	andwf	___flmul@prod^0,f,c
  9334  012536  0EFF               	movlw	255
  9335  012538  164C               	andwf	(___flmul@prod+1)^0,f,c
  9336  01253A  0E7F               	movlw	127
  9337  01253C  164D               	andwf	(___flmul@prod+2)^0,f,c
  9338  01253E  0E00               	movlw	0
  9339  012540  164E               	andwf	(___flmul@prod+3)^0,f,c
  9340  012542  B04A               	btfsc	___flmul@bexp^0,0,c
  9341  012544  8E4D               	bsf	(___flmul@prod+2)^0,7,c
  9342  012546  90D8               	bcf	status,0,c
  9343  012548  304A               	rrcf	___flmul@bexp^0,w,c
  9344  01254A                     L12:
  9345  01254A  6E4E               	movwf	(___flmul@prod+3)^0,c
  9346  01254C                     l4208:
  9347  01254C  5044               	movf	___flmul@sign^0,w,c
  9348  01254E  124E               	iorwf	(___flmul@prod+3)^0,f,c
  9349  012550  0060  F12C  F038   	movff	___flmul@prod,?___flmul
  9350  012556  0060  F130  F039   	movff	___flmul@prod+1,?___flmul+1
  9351  01255C  0060  F134  F03A   	movff	___flmul@prod+2,?___flmul+2
  9352  012562  0060  F138  F03B   	movff	___flmul@prod+3,?___flmul+3
  9353  012568  0012               	return		;funcret
  9354  01256A                     __end_of___flmul:
  9355                           	opt callstack 0
  9356                           
  9357 ;; *************** function ___fleq *****************
  9358 ;; Defined at:
  9359 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9360 ;; Parameters:    Size  Location     Type
  9361 ;;  ff1             4    0[COMRAM] unsigned char 
  9362 ;;  ff2             4    4[COMRAM] unsigned char 
  9363 ;; Auto vars:     Size  Location     Type
  9364 ;;		None
  9365 ;; Return value:  Size  Location     Type
  9366 ;;		None               void
  9367 ;; Registers used:
  9368 ;;		wreg, status,2, status,0
  9369 ;; Tracked objects:
  9370 ;;		On entry : 0/0
  9371 ;;		On exit  : 0/0
  9372 ;;		Unchanged: 0/0
  9373 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9374 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9377 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9378 ;;Total ram usage:       12 bytes
  9379 ;; Hardware stack levels used:    1
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_efgtoa
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text29
  9388  013C1A                     __ptext29:
  9389                           	opt callstack 0
  9390  013C1A                     ___fleq:
  9391                           	opt callstack 25
  9392                           
  9393                           ;incstack = 0
  9394  013C1A  0E00               	movlw	0
  9395  013C1C  1401               	andwf	___fleq@ff1^0,w,c
  9396  013C1E  6E09               	movwf	??___fleq^0,c
  9397  013C20  0E00               	movlw	0
  9398  013C22  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9399  013C24  6E0A               	movwf	(??___fleq+1)^0,c
  9400  013C26  0E80               	movlw	128
  9401  013C28  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9402  013C2A  6E0B               	movwf	(??___fleq+2)^0,c
  9403  013C2C  0E7F               	movlw	127
  9404  013C2E  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9405  013C30  6E0C               	movwf	(??___fleq+3)^0,c
  9406  013C32  5009               	movf	??___fleq^0,w,c
  9407  013C34  100A               	iorwf	(??___fleq+1)^0,w,c
  9408  013C36  100B               	iorwf	(??___fleq+2)^0,w,c
  9409  013C38  100C               	iorwf	(??___fleq+3)^0,w,c
  9410  013C3A  A4D8               	btfss	status,2,c
  9411  013C3C  D008               	goto	l4304
  9412  013C3E  0E00               	movlw	0
  9413  013C40  6E01               	movwf	___fleq@ff1^0,c
  9414  013C42  0E00               	movlw	0
  9415  013C44  6E02               	movwf	(___fleq@ff1+1)^0,c
  9416  013C46  0E00               	movlw	0
  9417  013C48  6E03               	movwf	(___fleq@ff1+2)^0,c
  9418  013C4A  0E00               	movlw	0
  9419  013C4C  6E04               	movwf	(___fleq@ff1+3)^0,c
  9420  013C4E                     l4304:
  9421  013C4E  0E00               	movlw	0
  9422  013C50  1405               	andwf	___fleq@ff2^0,w,c
  9423  013C52  6E09               	movwf	??___fleq^0,c
  9424  013C54  0E00               	movlw	0
  9425  013C56  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9426  013C58  6E0A               	movwf	(??___fleq+1)^0,c
  9427  013C5A  0E80               	movlw	128
  9428  013C5C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9429  013C5E  6E0B               	movwf	(??___fleq+2)^0,c
  9430  013C60  0E7F               	movlw	127
  9431  013C62  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9432  013C64  6E0C               	movwf	(??___fleq+3)^0,c
  9433  013C66  5009               	movf	??___fleq^0,w,c
  9434  013C68  100A               	iorwf	(??___fleq+1)^0,w,c
  9435  013C6A  100B               	iorwf	(??___fleq+2)^0,w,c
  9436  013C6C  100C               	iorwf	(??___fleq+3)^0,w,c
  9437  013C6E  A4D8               	btfss	status,2,c
  9438  013C70  D008               	goto	l4308
  9439  013C72  0E00               	movlw	0
  9440  013C74  6E05               	movwf	___fleq@ff2^0,c
  9441  013C76  0E00               	movlw	0
  9442  013C78  6E06               	movwf	(___fleq@ff2+1)^0,c
  9443  013C7A  0E00               	movlw	0
  9444  013C7C  6E07               	movwf	(___fleq@ff2+2)^0,c
  9445  013C7E  0E00               	movlw	0
  9446  013C80  6E08               	movwf	(___fleq@ff2+3)^0,c
  9447  013C82                     l4308:
  9448  013C82  5005               	movf	___fleq@ff2^0,w,c
  9449  013C84  1801               	xorwf	___fleq@ff1^0,w,c
  9450  013C86  E10A               	bnz	u4900
  9451  013C88  5006               	movf	(___fleq@ff2+1)^0,w,c
  9452  013C8A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9453  013C8C  E107               	bnz	u4900
  9454  013C8E  5007               	movf	(___fleq@ff2+2)^0,w,c
  9455  013C90  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9456  013C92  E104               	bnz	u4900
  9457  013C94  5008               	movf	(___fleq@ff2+3)^0,w,c
  9458  013C96  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9459  013C98  B4D8               	btfsc	status,2,c
  9460  013C9A  D002               	goto	l4312
  9461  013C9C                     u4900:
  9462  013C9C  90D8               	bcf	status,0,c
  9463  013C9E  0012               	return	
  9464  013CA0                     l4312:
  9465  013CA0  80D8               	bsf	status,0,c
  9466  013CA2  0012               	return		;funcret
  9467  013CA4                     __end_of___fleq:
  9468                           	opt callstack 0
  9469                           
  9470 ;; *************** function ___fldiv *****************
  9471 ;; Defined at:
  9472 ;;		line 11 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9473 ;; Parameters:    Size  Location     Type
  9474 ;;  b               4   30[COMRAM] unsigned char 
  9475 ;;  a               4   34[COMRAM] unsigned char 
  9476 ;; Auto vars:     Size  Location     Type
  9477 ;;  grs             4   49[COMRAM] unsigned long 
  9478 ;;  rem             4   42[COMRAM] unsigned long 
  9479 ;;  new_exp         2   47[COMRAM] short 
  9480 ;;  aexp            1   54[COMRAM] unsigned char 
  9481 ;;  bexp            1   53[COMRAM] unsigned char 
  9482 ;;  sign            1   46[COMRAM] unsigned char 
  9483 ;; Return value:  Size  Location     Type
  9484 ;;                  4   30[COMRAM] unsigned char 
  9485 ;; Registers used:
  9486 ;;		wreg, status,2, status,0
  9487 ;; Tracked objects:
  9488 ;;		On entry : 0/4
  9489 ;;		On exit  : 0/0
  9490 ;;		Unchanged: 0/0
  9491 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9492 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9493 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9494 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9495 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9496 ;;Total ram usage:       25 bytes
  9497 ;; Hardware stack levels used:    1
  9498 ;; This function calls:
  9499 ;;		Nothing
  9500 ;; This function is called by:
  9501 ;;		_main_loop
  9502 ;;		_efgtoa
  9503 ;; This function uses a non-reentrant model
  9504 ;;
  9505                           
  9506                           	psect	text30
  9507  0128B2                     __ptext30:
  9508                           	opt callstack 0
  9509  0128B2                     ___fldiv:
  9510                           	opt callstack 25
  9511                           
  9512                           ;incstack = 0
  9513  0128B2  5022               	movf	(___fldiv@b+3)^0,w,c
  9514  0128B4  0B80               	andlw	128
  9515  0128B6  6E2F               	movwf	___fldiv@sign^0,c
  9516  0128B8  5022               	movf	(___fldiv@b+3)^0,w,c
  9517  0128BA  2422               	addwf	(___fldiv@b+3)^0,w,c
  9518  0128BC  6E36               	movwf	___fldiv@bexp^0,c
  9519  0128BE  BE21               	btfsc	(___fldiv@b+2)^0,7,c
  9520  0128C0  8036               	bsf	___fldiv@bexp^0,0,c
  9521  0128C2  5036               	movf	___fldiv@bexp^0,w,c
  9522  0128C4  B4D8               	btfsc	status,2,c
  9523  0128C6  D00D               	goto	l3962
  9524  0128C8  2836               	incf	___fldiv@bexp^0,w,c
  9525  0128CA  A4D8               	btfss	status,2,c
  9526  0128CC  D008               	goto	l3958
  9527  0128CE  0E00               	movlw	0
  9528  0128D0  6E1F               	movwf	___fldiv@b^0,c
  9529  0128D2  0E00               	movlw	0
  9530  0128D4  6E20               	movwf	(___fldiv@b+1)^0,c
  9531  0128D6  0E00               	movlw	0
  9532  0128D8  6E21               	movwf	(___fldiv@b+2)^0,c
  9533  0128DA  0E00               	movlw	0
  9534  0128DC  6E22               	movwf	(___fldiv@b+3)^0,c
  9535  0128DE                     l3958:
  9536  0128DE  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9537  0128E0  D006               	goto	L13
  9538  0128E2                     l3962:
  9539  0128E2  0E00               	movlw	0
  9540  0128E4  6E1F               	movwf	___fldiv@b^0,c
  9541  0128E6  0E00               	movlw	0
  9542  0128E8  6E20               	movwf	(___fldiv@b+1)^0,c
  9543  0128EA  0E00               	movlw	0
  9544  0128EC  6E21               	movwf	(___fldiv@b+2)^0,c
  9545  0128EE                     L13:
  9546  0128EE  0E00               	movlw	0
  9547  0128F0  6E22               	movwf	(___fldiv@b+3)^0,c
  9548  0128F2  5026               	movf	(___fldiv@a+3)^0,w,c
  9549  0128F4  0B80               	andlw	128
  9550  0128F6  1A2F               	xorwf	___fldiv@sign^0,f,c
  9551  0128F8  5026               	movf	(___fldiv@a+3)^0,w,c
  9552  0128FA  2426               	addwf	(___fldiv@a+3)^0,w,c
  9553  0128FC  6E37               	movwf	___fldiv@aexp^0,c
  9554  0128FE  BE25               	btfsc	(___fldiv@a+2)^0,7,c
  9555  012900  8037               	bsf	___fldiv@aexp^0,0,c
  9556  012902  5037               	movf	___fldiv@aexp^0,w,c
  9557  012904  B4D8               	btfsc	status,2,c
  9558  012906  D00D               	goto	l3982
  9559  012908  2837               	incf	___fldiv@aexp^0,w,c
  9560  01290A  A4D8               	btfss	status,2,c
  9561  01290C  D008               	goto	l3978
  9562  01290E  0E00               	movlw	0
  9563  012910  6E23               	movwf	___fldiv@a^0,c
  9564  012912  0E00               	movlw	0
  9565  012914  6E24               	movwf	(___fldiv@a+1)^0,c
  9566  012916  0E00               	movlw	0
  9567  012918  6E25               	movwf	(___fldiv@a+2)^0,c
  9568  01291A  0E00               	movlw	0
  9569  01291C  6E26               	movwf	(___fldiv@a+3)^0,c
  9570  01291E                     l3978:
  9571  01291E  8E25               	bsf	(___fldiv@a+2)^0,7,c
  9572  012920  D006               	goto	L14
  9573  012922                     l3982:
  9574  012922  0E00               	movlw	0
  9575  012924  6E23               	movwf	___fldiv@a^0,c
  9576  012926  0E00               	movlw	0
  9577  012928  6E24               	movwf	(___fldiv@a+1)^0,c
  9578  01292A  0E00               	movlw	0
  9579  01292C  6E25               	movwf	(___fldiv@a+2)^0,c
  9580  01292E                     L14:
  9581  01292E  0E00               	movlw	0
  9582  012930  6E26               	movwf	(___fldiv@a+3)^0,c
  9583  012932  5023               	movf	___fldiv@a^0,w,c
  9584  012934  1024               	iorwf	(___fldiv@a+1)^0,w,c
  9585  012936  1025               	iorwf	(___fldiv@a+2)^0,w,c
  9586  012938  1026               	iorwf	(___fldiv@a+3)^0,w,c
  9587  01293A  A4D8               	btfss	status,2,c
  9588  01293C  D01B               	goto	l3996
  9589  01293E  0E00               	movlw	0
  9590  012940  6E1F               	movwf	___fldiv@b^0,c
  9591  012942  0E00               	movlw	0
  9592  012944  6E20               	movwf	(___fldiv@b+1)^0,c
  9593  012946  0E00               	movlw	0
  9594  012948  6E21               	movwf	(___fldiv@b+2)^0,c
  9595  01294A  0E00               	movlw	0
  9596  01294C  6E22               	movwf	(___fldiv@b+3)^0,c
  9597  01294E  0E80               	movlw	128
  9598  012950  1221               	iorwf	(___fldiv@b+2)^0,f,c
  9599  012952  0E7F               	movlw	127
  9600  012954  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9601  012956                     l3990:
  9602  012956  502F               	movf	___fldiv@sign^0,w,c
  9603  012958  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9604  01295A  0060  F07C  F01F   	movff	___fldiv@b,?___fldiv
  9605  012960  0060  F080  F020   	movff	___fldiv@b+1,?___fldiv+1
  9606  012966  0060  F084  F021   	movff	___fldiv@b+2,?___fldiv+2
  9607  01296C  0060  F088  F022   	movff	___fldiv@b+3,?___fldiv+3
  9608  012972  0012               	return	
  9609  012974                     l3996:
  9610  012974  5036               	movf	___fldiv@bexp^0,w,c
  9611  012976  A4D8               	btfss	status,2,c
  9612  012978  D009               	goto	l4004
  9613  01297A  0E00               	movlw	0
  9614  01297C  6E1F               	movwf	?___fldiv^0,c
  9615  01297E  0E00               	movlw	0
  9616  012980  6E20               	movwf	(?___fldiv+1)^0,c
  9617  012982  0E00               	movlw	0
  9618  012984  6E21               	movwf	(?___fldiv+2)^0,c
  9619  012986  0E00               	movlw	0
  9620  012988  6E22               	movwf	(?___fldiv+3)^0,c
  9621  01298A  0012               	return	
  9622  01298C                     l4004:
  9623  01298C  5037               	movf	___fldiv@aexp^0,w,c
  9624  01298E  0060  F0D8  F027   	movff	___fldiv@bexp,??___fldiv
  9625  012994  6A28               	clrf	(??___fldiv+1)^0,c
  9626  012996  5E27               	subwf	??___fldiv^0,f,c
  9627  012998  0E00               	movlw	0
  9628  01299A  5A28               	subwfb	(??___fldiv+1)^0,f,c
  9629  01299C  0E7F               	movlw	127
  9630  01299E  2427               	addwf	??___fldiv^0,w,c
  9631  0129A0  6E30               	movwf	___fldiv@new_exp^0,c
  9632  0129A2  0E00               	movlw	0
  9633  0129A4  2028               	addwfc	(??___fldiv+1)^0,w,c
  9634  0129A6  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9635  0129A8  0060  F07C  F02B   	movff	___fldiv@b,___fldiv@rem
  9636  0129AE  0060  F080  F02C   	movff	___fldiv@b+1,___fldiv@rem+1
  9637  0129B4  0060  F084  F02D   	movff	___fldiv@b+2,___fldiv@rem+2
  9638  0129BA  0060  F088  F02E   	movff	___fldiv@b+3,___fldiv@rem+3
  9639  0129C0  0E00               	movlw	0
  9640  0129C2  6E1F               	movwf	___fldiv@b^0,c
  9641  0129C4  0E00               	movlw	0
  9642  0129C6  6E20               	movwf	(___fldiv@b+1)^0,c
  9643  0129C8  0E00               	movlw	0
  9644  0129CA  6E21               	movwf	(___fldiv@b+2)^0,c
  9645  0129CC  0E00               	movlw	0
  9646  0129CE  6E22               	movwf	(___fldiv@b+3)^0,c
  9647  0129D0  0E00               	movlw	0
  9648  0129D2  6E32               	movwf	___fldiv@grs^0,c
  9649  0129D4  0E00               	movlw	0
  9650  0129D6  6E33               	movwf	(___fldiv@grs+1)^0,c
  9651  0129D8  0E00               	movlw	0
  9652  0129DA  6E34               	movwf	(___fldiv@grs+2)^0,c
  9653  0129DC  0E00               	movlw	0
  9654  0129DE  6E35               	movwf	(___fldiv@grs+3)^0,c
  9655  0129E0  0E00               	movlw	0
  9656  0129E2  6E37               	movwf	___fldiv@aexp^0,c
  9657  0129E4  D028               	goto	l1314
  9658  0129E6                     l4014:
  9659  0129E6  5037               	movf	___fldiv@aexp^0,w,c
  9660  0129E8  B4D8               	btfsc	status,2,c
  9661  0129EA  D011               	goto	l4022
  9662  0129EC  90D8               	bcf	status,0,c
  9663  0129EE  362B               	rlcf	___fldiv@rem^0,f,c
  9664  0129F0  362C               	rlcf	(___fldiv@rem+1)^0,f,c
  9665  0129F2  362D               	rlcf	(___fldiv@rem+2)^0,f,c
  9666  0129F4  362E               	rlcf	(___fldiv@rem+3)^0,f,c
  9667  0129F6  90D8               	bcf	status,0,c
  9668  0129F8  361F               	rlcf	___fldiv@b^0,f,c
  9669  0129FA  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9670  0129FC  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9671  0129FE  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9672  012A00  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9673  012A02  801F               	bsf	___fldiv@b^0,0,c
  9674  012A04  90D8               	bcf	status,0,c
  9675  012A06  3632               	rlcf	___fldiv@grs^0,f,c
  9676  012A08  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9677  012A0A  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9678  012A0C  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9679  012A0E                     l4022:
  9680  012A0E  5023               	movf	___fldiv@a^0,w,c
  9681  012A10  5C2B               	subwf	___fldiv@rem^0,w,c
  9682  012A12  5024               	movf	(___fldiv@a+1)^0,w,c
  9683  012A14  582C               	subwfb	(___fldiv@rem+1)^0,w,c
  9684  012A16  5025               	movf	(___fldiv@a+2)^0,w,c
  9685  012A18  582D               	subwfb	(___fldiv@rem+2)^0,w,c
  9686  012A1A  5026               	movf	(___fldiv@a+3)^0,w,c
  9687  012A1C  582E               	subwfb	(___fldiv@rem+3)^0,w,c
  9688  012A1E  A0D8               	btfss	status,0,c
  9689  012A20  D009               	goto	l4028
  9690  012A22  8C35               	bsf	(___fldiv@grs+3)^0,6,c
  9691  012A24  5023               	movf	___fldiv@a^0,w,c
  9692  012A26  5E2B               	subwf	___fldiv@rem^0,f,c
  9693  012A28  5024               	movf	(___fldiv@a+1)^0,w,c
  9694  012A2A  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
  9695  012A2C  5025               	movf	(___fldiv@a+2)^0,w,c
  9696  012A2E  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
  9697  012A30  5026               	movf	(___fldiv@a+3)^0,w,c
  9698  012A32  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
  9699  012A34                     l4028:
  9700  012A34  2A37               	incf	___fldiv@aexp^0,f,c
  9701  012A36                     l1314:
  9702  012A36  0E19               	movlw	25
  9703  012A38  6437               	cpfsgt	___fldiv@aexp^0,c
  9704  012A3A  D7D5               	goto	l4014
  9705  012A3C  502B               	movf	___fldiv@rem^0,w,c
  9706  012A3E  102C               	iorwf	(___fldiv@rem+1)^0,w,c
  9707  012A40  102D               	iorwf	(___fldiv@rem+2)^0,w,c
  9708  012A42  102E               	iorwf	(___fldiv@rem+3)^0,w,c
  9709  012A44  B4D8               	btfsc	status,2,c
  9710  012A46  D011               	goto	l4040
  9711  012A48  8032               	bsf	___fldiv@grs^0,0,c
  9712  012A4A  D00F               	goto	l4040
  9713  012A4C                     l4034:
  9714  012A4C  90D8               	bcf	status,0,c
  9715  012A4E  361F               	rlcf	___fldiv@b^0,f,c
  9716  012A50  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9717  012A52  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9718  012A54  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9719  012A56  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9720  012A58  801F               	bsf	___fldiv@b^0,0,c
  9721  012A5A  90D8               	bcf	status,0,c
  9722  012A5C  3632               	rlcf	___fldiv@grs^0,f,c
  9723  012A5E  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9724  012A60  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9725  012A62  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9726  012A64  0630               	decf	___fldiv@new_exp^0,f,c
  9727  012A66  A0D8               	btfss	status,0,c
  9728  012A68  0631               	decf	(___fldiv@new_exp+1)^0,f,c
  9729  012A6A                     l4040:
  9730  012A6A  AE21               	btfss	(___fldiv@b+2)^0,7,c
  9731  012A6C  D7EF               	goto	l4034
  9732  012A6E  0E00               	movlw	0
  9733  012A70  6E37               	movwf	___fldiv@aexp^0,c
  9734  012A72  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  9735  012A74  D017               	goto	l1325
  9736  012A76  0EFF               	movlw	255
  9737  012A78  1432               	andwf	___fldiv@grs^0,w,c
  9738  012A7A  6E27               	movwf	??___fldiv^0,c
  9739  012A7C  0EFF               	movlw	255
  9740  012A7E  1433               	andwf	(___fldiv@grs+1)^0,w,c
  9741  012A80  6E28               	movwf	(??___fldiv+1)^0,c
  9742  012A82  0EFF               	movlw	255
  9743  012A84  1434               	andwf	(___fldiv@grs+2)^0,w,c
  9744  012A86  6E29               	movwf	(??___fldiv+2)^0,c
  9745  012A88  0E7F               	movlw	127
  9746  012A8A  1435               	andwf	(___fldiv@grs+3)^0,w,c
  9747  012A8C  6E2A               	movwf	(??___fldiv+3)^0,c
  9748  012A8E  5027               	movf	??___fldiv^0,w,c
  9749  012A90  1028               	iorwf	(??___fldiv+1)^0,w,c
  9750  012A92  1029               	iorwf	(??___fldiv+2)^0,w,c
  9751  012A94  102A               	iorwf	(??___fldiv+3)^0,w,c
  9752  012A96  B4D8               	btfsc	status,2,c
  9753  012A98  D003               	goto	l1326
  9754  012A9A                     u4510:
  9755  012A9A  0E01               	movlw	1
  9756  012A9C  6E37               	movwf	___fldiv@aexp^0,c
  9757  012A9E  D002               	goto	l1325
  9758  012AA0                     l1326:
  9759  012AA0  B01F               	btfsc	___fldiv@b^0,0,c
  9760  012AA2  D7FB               	goto	u4510
  9761  012AA4                     l1325:
  9762  012AA4  5037               	movf	___fldiv@aexp^0,w,c
  9763  012AA6  B4D8               	btfsc	status,2,c
  9764  012AA8  D027               	goto	l4060
  9765  012AAA  0E01               	movlw	1
  9766  012AAC  261F               	addwf	___fldiv@b^0,f,c
  9767  012AAE  0E00               	movlw	0
  9768  012AB0  2220               	addwfc	(___fldiv@b+1)^0,f,c
  9769  012AB2  2221               	addwfc	(___fldiv@b+2)^0,f,c
  9770  012AB4  2222               	addwfc	(___fldiv@b+3)^0,f,c
  9771  012AB6  A022               	btfss	(___fldiv@b+3)^0,0,c
  9772  012AB8  D01F               	goto	l4060
  9773  012ABA  0060  F07C  F027   	movff	___fldiv@b,??___fldiv
  9774  012AC0  0060  F080  F028   	movff	___fldiv@b+1,??___fldiv+1
  9775  012AC6  0060  F084  F029   	movff	___fldiv@b+2,??___fldiv+2
  9776  012ACC  0060  F088  F02A   	movff	___fldiv@b+3,??___fldiv+3
  9777  012AD2  342A               	rlcf	(??___fldiv+3)^0,w,c
  9778  012AD4  322A               	rrcf	(??___fldiv+3)^0,f,c
  9779  012AD6  3229               	rrcf	(??___fldiv+2)^0,f,c
  9780  012AD8  3228               	rrcf	(??___fldiv+1)^0,f,c
  9781  012ADA  3227               	rrcf	??___fldiv^0,f,c
  9782  012ADC  0060  F09C  F01F   	movff	??___fldiv,___fldiv@b
  9783  012AE2  0060  F0A0  F020   	movff	??___fldiv+1,___fldiv@b+1
  9784  012AE8  0060  F0A4  F021   	movff	??___fldiv+2,___fldiv@b+2
  9785  012AEE  0060  F0A8  F022   	movff	??___fldiv+3,___fldiv@b+3
  9786  012AF4  4A30               	infsnz	___fldiv@new_exp^0,f,c
  9787  012AF6  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
  9788  012AF8                     l4060:
  9789  012AF8  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9790  012AFA  D010               	goto	l4064
  9791  012AFC  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9792  012AFE  E103               	bnz	u4550
  9793  012B00  2830               	incf	___fldiv@new_exp^0,w,c
  9794  012B02  A0D8               	btfss	status,0,c
  9795  012B04  D00B               	goto	l4064
  9796  012B06                     u4550:
  9797  012B06  0E00               	movlw	0
  9798  012B08  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9799  012B0A  6830               	setf	___fldiv@new_exp^0,c
  9800  012B0C  0E00               	movlw	0
  9801  012B0E  6E1F               	movwf	___fldiv@b^0,c
  9802  012B10  0E00               	movlw	0
  9803  012B12  6E20               	movwf	(___fldiv@b+1)^0,c
  9804  012B14  0E00               	movlw	0
  9805  012B16  6E21               	movwf	(___fldiv@b+2)^0,c
  9806  012B18  0E00               	movlw	0
  9807  012B1A  6E22               	movwf	(___fldiv@b+3)^0,c
  9808  012B1C                     l4064:
  9809  012B1C  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9810  012B1E  D005               	goto	u4560
  9811  012B20  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9812  012B22  E111               	bnz	l4068
  9813  012B24  0430               	decf	___fldiv@new_exp^0,w,c
  9814  012B26  B0D8               	btfsc	status,0,c
  9815  012B28  D00E               	goto	l4068
  9816  012B2A                     u4560:
  9817  012B2A  0E00               	movlw	0
  9818  012B2C  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9819  012B2E  0E00               	movlw	0
  9820  012B30  6E30               	movwf	___fldiv@new_exp^0,c
  9821  012B32  0E00               	movlw	0
  9822  012B34  6E1F               	movwf	___fldiv@b^0,c
  9823  012B36  0E00               	movlw	0
  9824  012B38  6E20               	movwf	(___fldiv@b+1)^0,c
  9825  012B3A  0E00               	movlw	0
  9826  012B3C  6E21               	movwf	(___fldiv@b+2)^0,c
  9827  012B3E  0E00               	movlw	0
  9828  012B40  6E22               	movwf	(___fldiv@b+3)^0,c
  9829  012B42  0E00               	movlw	0
  9830  012B44  6E2F               	movwf	___fldiv@sign^0,c
  9831  012B46                     l4068:
  9832  012B46  0060  F0C0  F036   	movff	___fldiv@new_exp,___fldiv@bexp
  9833  012B4C  A036               	btfss	___fldiv@bexp^0,0,c
  9834  012B4E  D002               	goto	l4074
  9835  012B50  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9836  012B52  D001               	goto	l4076
  9837  012B54                     l4074:
  9838  012B54  9E21               	bcf	(___fldiv@b+2)^0,7,c
  9839  012B56                     l4076:
  9840  012B56  90D8               	bcf	status,0,c
  9841  012B58  3036               	rrcf	___fldiv@bexp^0,w,c
  9842  012B5A  6E22               	movwf	(___fldiv@b+3)^0,c
  9843  012B5C  D6FC               	goto	l3990
  9844  012B5E                     __end_of___fldiv:
  9845                           	opt callstack 0
  9846                           
  9847 ;; *************** function ___awmod *****************
  9848 ;; Defined at:
  9849 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9850 ;; Parameters:    Size  Location     Type
  9851 ;;  dividend        2    0[COMRAM] int 
  9852 ;;  divisor         2    2[COMRAM] int 
  9853 ;; Auto vars:     Size  Location     Type
  9854 ;;  sign            1    5[COMRAM] unsigned char 
  9855 ;;  counter         1    4[COMRAM] unsigned char 
  9856 ;; Return value:  Size  Location     Type
  9857 ;;                  2    0[COMRAM] int 
  9858 ;; Registers used:
  9859 ;;		wreg, status,2, status,0
  9860 ;; Tracked objects:
  9861 ;;		On entry : 3F/0
  9862 ;;		On exit  : 3F/0
  9863 ;;		Unchanged: 3F/0
  9864 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9865 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9866 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9868 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9869 ;;Total ram usage:        6 bytes
  9870 ;; Hardware stack levels used:    1
  9871 ;; This function calls:
  9872 ;;		Nothing
  9873 ;; This function is called by:
  9874 ;;		_efgtoa
  9875 ;; This function uses a non-reentrant model
  9876 ;;
  9877                           
  9878                           	psect	text31
  9879  013EA8                     __ptext31:
  9880                           	opt callstack 0
  9881  013EA8                     ___awmod:
  9882                           	opt callstack 25
  9883                           
  9884                           ; BSR set to: 0
  9885                           
  9886                           ;incstack = 0
  9887  013EA8  0E00               	movlw	0
  9888  013EAA  6E06               	movwf	___awmod@sign^0,c
  9889                           
  9890                           ; BSR set to: 0
  9891  013EAC  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  9892  013EAE  D006               	goto	l4272
  9893                           
  9894                           ; BSR set to: 0
  9895  013EB0  6C01               	negf	___awmod@dividend^0,c
  9896  013EB2  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9897  013EB4  B0D8               	btfsc	status,0,c
  9898  013EB6  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9899                           
  9900                           ; BSR set to: 0
  9901  013EB8  0E01               	movlw	1
  9902  013EBA  6E06               	movwf	___awmod@sign^0,c
  9903  013EBC                     l4272:
  9904                           
  9905                           ; BSR set to: 0
  9906  013EBC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9907  013EBE  D004               	goto	l4276
  9908                           
  9909                           ; BSR set to: 0
  9910  013EC0  6C03               	negf	___awmod@divisor^0,c
  9911  013EC2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9912  013EC4  B0D8               	btfsc	status,0,c
  9913  013EC6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9914  013EC8                     l4276:
  9915                           
  9916                           ; BSR set to: 0
  9917  013EC8  5003               	movf	___awmod@divisor^0,w,c
  9918  013ECA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9919  013ECC  B4D8               	btfsc	status,2,c
  9920  013ECE  D018               	goto	l4292
  9921                           
  9922                           ; BSR set to: 0
  9923  013ED0  0E01               	movlw	1
  9924  013ED2  6E05               	movwf	___awmod@counter^0,c
  9925  013ED4  D004               	goto	l4282
  9926  013ED6                     l4280:
  9927                           
  9928                           ; BSR set to: 0
  9929  013ED6  90D8               	bcf	status,0,c
  9930  013ED8  3603               	rlcf	___awmod@divisor^0,f,c
  9931  013EDA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9932  013EDC  2A05               	incf	___awmod@counter^0,f,c
  9933  013EDE                     l4282:
  9934                           
  9935                           ; BSR set to: 0
  9936  013EDE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9937  013EE0  D7FA               	goto	l4280
  9938  013EE2                     u4850:
  9939                           
  9940                           ; BSR set to: 0
  9941  013EE2  5003               	movf	___awmod@divisor^0,w,c
  9942  013EE4  5C01               	subwf	___awmod@dividend^0,w,c
  9943  013EE6  5004               	movf	(___awmod@divisor+1)^0,w,c
  9944  013EE8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9945  013EEA  A0D8               	btfss	status,0,c
  9946  013EEC  D004               	goto	l4288
  9947                           
  9948                           ; BSR set to: 0
  9949  013EEE  5003               	movf	___awmod@divisor^0,w,c
  9950  013EF0  5E01               	subwf	___awmod@dividend^0,f,c
  9951  013EF2  5004               	movf	(___awmod@divisor+1)^0,w,c
  9952  013EF4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9953  013EF6                     l4288:
  9954                           
  9955                           ; BSR set to: 0
  9956  013EF6  90D8               	bcf	status,0,c
  9957  013EF8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9958  013EFA  3203               	rrcf	___awmod@divisor^0,f,c
  9959                           
  9960                           ; BSR set to: 0
  9961  013EFC  2E05               	decfsz	___awmod@counter^0,f,c
  9962  013EFE  D7F1               	goto	u4850
  9963  013F00                     l4292:
  9964                           
  9965                           ; BSR set to: 0
  9966  013F00  5006               	movf	___awmod@sign^0,w,c
  9967  013F02  B4D8               	btfsc	status,2,c
  9968  013F04  D004               	goto	l4296
  9969                           
  9970                           ; BSR set to: 0
  9971  013F06  6C01               	negf	___awmod@dividend^0,c
  9972  013F08  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9973  013F0A  B0D8               	btfsc	status,0,c
  9974  013F0C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9975  013F0E                     l4296:
  9976                           
  9977                           ; BSR set to: 0
  9978  013F0E  0060  F004  F001   	movff	___awmod@dividend,?___awmod
  9979  013F14  0060  F008  F002   	movff	___awmod@dividend+1,?___awmod+1
  9980                           
  9981                           ; BSR set to: 0
  9982  013F1A  0012               	return		;funcret
  9983  013F1C                     __end_of___awmod:
  9984                           	opt callstack 0
  9985                           
  9986 ;; *************** function ___awdiv *****************
  9987 ;; Defined at:
  9988 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;  dividend        2    0[COMRAM] int 
  9991 ;;  divisor         2    2[COMRAM] int 
  9992 ;; Auto vars:     Size  Location     Type
  9993 ;;  quotient        2    6[COMRAM] int 
  9994 ;;  sign            1    5[COMRAM] unsigned char 
  9995 ;;  counter         1    4[COMRAM] unsigned char 
  9996 ;; Return value:  Size  Location     Type
  9997 ;;                  2    0[COMRAM] int 
  9998 ;; Registers used:
  9999 ;;		wreg, status,2, status,0
 10000 ;; Tracked objects:
 10001 ;;		On entry : 3F/0
 10002 ;;		On exit  : 3F/0
 10003 ;;		Unchanged: 3F/0
 10004 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10005 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10006 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10008 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10009 ;;Total ram usage:        8 bytes
 10010 ;; Hardware stack levels used:    1
 10011 ;; This function calls:
 10012 ;;		Nothing
 10013 ;; This function is called by:
 10014 ;;		_main_loop
 10015 ;;		_efgtoa
 10016 ;; This function uses a non-reentrant model
 10017 ;;
 10018                           
 10019                           	psect	text32
 10020  013D2E                     __ptext32:
 10021                           	opt callstack 0
 10022  013D2E                     ___awdiv:
 10023                           	opt callstack 25
 10024                           
 10025                           ; BSR set to: 0
 10026                           
 10027                           ; BSR set to: 0
 10028                           ;incstack = 0
 10029  013D2E  0E00               	movlw	0
 10030  013D30  6E06               	movwf	___awdiv@sign^0,c
 10031                           
 10032                           ; BSR set to: 0
 10033  013D32  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10034  013D34  D006               	goto	l4228
 10035                           
 10036                           ; BSR set to: 0
 10037  013D36  6C03               	negf	___awdiv@divisor^0,c
 10038  013D38  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10039  013D3A  B0D8               	btfsc	status,0,c
 10040  013D3C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10041                           
 10042                           ; BSR set to: 0
 10043  013D3E  0E01               	movlw	1
 10044  013D40  6E06               	movwf	___awdiv@sign^0,c
 10045  013D42                     l4228:
 10046                           
 10047                           ; BSR set to: 0
 10048  013D42  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
 10049  013D44  D006               	goto	l4234
 10050                           
 10051                           ; BSR set to: 0
 10052  013D46  6C01               	negf	___awdiv@dividend^0,c
 10053  013D48  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10054  013D4A  B0D8               	btfsc	status,0,c
 10055  013D4C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10056                           
 10057                           ; BSR set to: 0
 10058  013D4E  0E01               	movlw	1
 10059  013D50  1A06               	xorwf	___awdiv@sign^0,f,c
 10060  013D52                     l4234:
 10061                           
 10062                           ; BSR set to: 0
 10063  013D52  0E00               	movlw	0
 10064  013D54  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10065  013D56  0E00               	movlw	0
 10066  013D58  6E07               	movwf	___awdiv@quotient^0,c
 10067                           
 10068                           ; BSR set to: 0
 10069  013D5A  5003               	movf	___awdiv@divisor^0,w,c
 10070  013D5C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10071  013D5E  B4D8               	btfsc	status,2,c
 10072  013D60  D01C               	goto	l4256
 10073                           
 10074                           ; BSR set to: 0
 10075  013D62  0E01               	movlw	1
 10076  013D64  6E05               	movwf	___awdiv@counter^0,c
 10077  013D66  D004               	goto	l4242
 10078  013D68                     l4240:
 10079                           
 10080                           ; BSR set to: 0
 10081  013D68  90D8               	bcf	status,0,c
 10082  013D6A  3603               	rlcf	___awdiv@divisor^0,f,c
 10083  013D6C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10084  013D6E  2A05               	incf	___awdiv@counter^0,f,c
 10085  013D70                     l4242:
 10086                           
 10087                           ; BSR set to: 0
 10088  013D70  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10089  013D72  D7FA               	goto	l4240
 10090  013D74                     u4790:
 10091                           
 10092                           ; BSR set to: 0
 10093  013D74  90D8               	bcf	status,0,c
 10094  013D76  3607               	rlcf	___awdiv@quotient^0,f,c
 10095  013D78  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10096                           
 10097                           ; BSR set to: 0
 10098  013D7A  5003               	movf	___awdiv@divisor^0,w,c
 10099  013D7C  5C01               	subwf	___awdiv@dividend^0,w,c
 10100  013D7E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10101  013D80  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10102  013D82  A0D8               	btfss	status,0,c
 10103  013D84  D005               	goto	l4252
 10104                           
 10105                           ; BSR set to: 0
 10106  013D86  5003               	movf	___awdiv@divisor^0,w,c
 10107  013D88  5E01               	subwf	___awdiv@dividend^0,f,c
 10108  013D8A  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10109  013D8C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10110                           
 10111                           ; BSR set to: 0
 10112  013D8E  8007               	bsf	___awdiv@quotient^0,0,c
 10113  013D90                     l4252:
 10114                           
 10115                           ; BSR set to: 0
 10116  013D90  90D8               	bcf	status,0,c
 10117  013D92  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10118  013D94  3203               	rrcf	___awdiv@divisor^0,f,c
 10119                           
 10120                           ; BSR set to: 0
 10121  013D96  2E05               	decfsz	___awdiv@counter^0,f,c
 10122  013D98  D7ED               	goto	u4790
 10123  013D9A                     l4256:
 10124                           
 10125                           ; BSR set to: 0
 10126  013D9A  5006               	movf	___awdiv@sign^0,w,c
 10127  013D9C  B4D8               	btfsc	status,2,c
 10128  013D9E  D004               	goto	l4260
 10129                           
 10130                           ; BSR set to: 0
 10131  013DA0  6C07               	negf	___awdiv@quotient^0,c
 10132  013DA2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10133  013DA4  B0D8               	btfsc	status,0,c
 10134  013DA6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10135  013DA8                     l4260:
 10136                           
 10137                           ; BSR set to: 0
 10138  013DA8  0060  F01C  F001   	movff	___awdiv@quotient,?___awdiv
 10139  013DAE  0060  F020  F002   	movff	___awdiv@quotient+1,?___awdiv+1
 10140                           
 10141                           ; BSR set to: 0
 10142  013DB4  0012               	return		;funcret
 10143  013DB6                     __end_of___awdiv:
 10144                           	opt callstack 0
 10145                           
 10146 ;; *************** function _atoi *****************
 10147 ;; Defined at:
 10148 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10151 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
 10152 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;  n               2   20[COMRAM] int 
 10155 ;;  neg             2   13[COMRAM] int 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  2    7[COMRAM] int 
 10158 ;; Registers used:
 10159 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10160 ;; Tracked objects:
 10161 ;;		On entry : 3F/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10166 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10167 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10168 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10169 ;;Total ram usage:       15 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    1
 10172 ;; This function calls:
 10173 ;;		___wmul
 10174 ;;		_isdigit
 10175 ;;		_isspace
 10176 ;; This function is called by:
 10177 ;;		_vfpfcnvrt
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           	psect	text33
 10182  012D48                     __ptext33:
 10183                           	opt callstack 0
 10184  012D48                     _atoi:
 10185                           	opt callstack 25
 10186                           
 10187                           ; BSR set to: 0
 10188                           
 10189                           ; BSR set to: 0
 10190                           ;incstack = 0
 10191  012D48  0E00               	movlw	0
 10192  012D4A  6E16               	movwf	(atoi@n+1)^0,c
 10193  012D4C  0E00               	movlw	0
 10194  012D4E  6E15               	movwf	atoi@n^0,c
 10195  012D50  0E00               	movlw	0
 10196  012D52  6E0F               	movwf	(atoi@neg+1)^0,c
 10197  012D54  0E00               	movlw	0
 10198  012D56  6E0E               	movwf	atoi@neg^0,c
 10199  012D58  D002               	goto	l4722
 10200  012D5A                     l4720:
 10201                           
 10202                           ; BSR set to: 0
 10203  012D5A  4A08               	infsnz	atoi@s^0,f,c
 10204  012D5C  2A09               	incf	(atoi@s+1)^0,f,c
 10205  012D5E                     l4722:
 10206                           
 10207                           ; BSR set to: 0
 10208  012D5E  0E01               	movlw	1
 10209  012D60  6E14               	movwf	_atoi$1129^0,c
 10210                           
 10211                           ; BSR set to: 0
 10212  012D62  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10213  012D68  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10214  012D6E                     	if	0	;tblptru may be non-zero
 10215  012D6E                     	endif
 10216  012D6E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10217  012D6E  0E00               	movlw	low (__mediumconst shr (0+16))
 10218  012D70  6EF8               	movwf	tblptru,c
 10219  012D72                     	endif
 10220  012D72  0008               	tblrd		*
 10221  012D74  50F5               	movf	tablat,w,c
 10222  012D76  0A20               	xorlw	32
 10223  012D78  B4D8               	btfsc	status,2,c
 10224  012D7A  D01C               	goto	l4730
 10225                           
 10226                           ; BSR set to: 0
 10227  012D7C  0EF7               	movlw	247
 10228  012D7E  6E0A               	movwf	??_atoi^0,c
 10229  012D80  0EFF               	movlw	255
 10230  012D82  6E0B               	movwf	(??_atoi+1)^0,c
 10231  012D84  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10232  012D8A  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10233  012D90                     	if	0	;tblptru may be non-zero
 10234  012D90                     	endif
 10235  012D90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10236  012D90  0E00               	movlw	low (__mediumconst shr (0+16))
 10237  012D92  6EF8               	movwf	tblptru,c
 10238  012D94                     	endif
 10239  012D94  0008               	tblrd		*
 10240  012D96  50F5               	movf	tablat,w,c
 10241  012D98  6E0C               	movwf	(??_atoi+2)^0,c
 10242  012D9A  6A0D               	clrf	(??_atoi+3)^0,c
 10243  012D9C  500A               	movf	??_atoi^0,w,c
 10244  012D9E  260C               	addwf	(??_atoi+2)^0,f,c
 10245  012DA0  500B               	movf	(??_atoi+1)^0,w,c
 10246  012DA2  220D               	addwfc	(??_atoi+3)^0,f,c
 10247  012DA4  500D               	movf	(??_atoi+3)^0,w,c
 10248  012DA6  E104               	bnz	u5620
 10249  012DA8  0E05               	movlw	5
 10250  012DAA  5C0C               	subwf	(??_atoi+2)^0,w,c
 10251  012DAC  A0D8               	btfss	status,0,c
 10252  012DAE  D002               	goto	l4730
 10253  012DB0                     u5620:
 10254                           
 10255                           ; BSR set to: 0
 10256  012DB0  0E00               	movlw	0
 10257  012DB2  6E14               	movwf	_atoi$1129^0,c
 10258  012DB4                     l4730:
 10259                           
 10260                           ; BSR set to: 0
 10261  012DB4  0060  F050  F010   	movff	_atoi$1129,_atoi$1128
 10262  012DBA  6A11               	clrf	(_atoi$1128+1)^0,c
 10263                           
 10264                           ; BSR set to: 0
 10265  012DBC  5010               	movf	_atoi$1128^0,w,c
 10266  012DBE  1011               	iorwf	(_atoi$1128+1)^0,w,c
 10267  012DC0  B4D8               	btfsc	status,2,c
 10268  012DC2  D008               	goto	l4740
 10269  012DC4  D7CA               	goto	l4720
 10270  012DC6                     l4736:
 10271                           
 10272                           ; BSR set to: 0
 10273  012DC6  0E00               	movlw	0
 10274  012DC8  6E0F               	movwf	(atoi@neg+1)^0,c
 10275  012DCA  0E01               	movlw	1
 10276  012DCC  6E0E               	movwf	atoi@neg^0,c
 10277  012DCE                     l4738:
 10278  012DCE  4A08               	infsnz	atoi@s^0,f,c
 10279  012DD0  2A09               	incf	(atoi@s+1)^0,f,c
 10280  012DD2  D038               	goto	l4746
 10281  012DD4                     l4740:
 10282                           
 10283                           ; BSR set to: 0
 10284  012DD4  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10285  012DDA  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10286  012DE0                     	if	0	;tblptru may be non-zero
 10287  012DE0                     	endif
 10288  012DE0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10289  012DE0  0E00               	movlw	low (__mediumconst shr (0+16))
 10290  012DE2  6EF8               	movwf	tblptru,c
 10291  012DE4                     	endif
 10292  012DE4  0008               	tblrd		*
 10293  012DE6  50F5               	movf	tablat,w,c
 10294  012DE8  6E0A               	movwf	??_atoi^0,c
 10295  012DEA  6A0B               	clrf	(??_atoi+1)^0,c
 10296                           
 10297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10298                           ; Switch size 1, requested type "simple"
 10299                           ; Number of cases is 1, Range of values is 0 to 0
 10300                           ; switch strategies available:
 10301                           ; Name         Instructions Cycles
 10302                           ; simple_byte            4     3 (average)
 10303                           ;	Chosen strategy is simple_byte
 10304  012DEC  500B               	movf	(??_atoi+1)^0,w,c
 10305  012DEE  0A00               	xorlw	0	; case 0
 10306  012DF0  A4D8               	btfss	status,2,c
 10307  012DF2  D028               	goto	l4746
 10308                           
 10309                           ; BSR set to: 0
 10310                           ; Switch size 1, requested type "simple"
 10311                           ; Number of cases is 2, Range of values is 43 to 45
 10312                           ; switch strategies available:
 10313                           ; Name         Instructions Cycles
 10314                           ; simple_byte            7     4 (average)
 10315                           ;	Chosen strategy is simple_byte
 10316  012DF4  500A               	movf	??_atoi^0,w,c
 10317  012DF6  0A2B               	xorlw	43	; case 43
 10318  012DF8  B4D8               	btfsc	status,2,c
 10319  012DFA  D7E9               	goto	l4738
 10320  012DFC  0A06               	xorlw	6	; case 45
 10321  012DFE  B4D8               	btfsc	status,2,c
 10322  012E00  D7E2               	goto	l4736
 10323  012E02  D020               	goto	l4746
 10324  012E04                     l4742:
 10325  012E04  0060  F054  F001   	movff	atoi@n,___wmul@multiplier
 10326  012E0A  0060  F058  F002   	movff	atoi@n+1,___wmul@multiplier+1
 10327  012E10  0E00               	movlw	0
 10328  012E12  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10329  012E14  0E0A               	movlw	10
 10330  012E16  6E03               	movwf	___wmul@multiplicand^0,c
 10331  012E18  EC0D  F0A2         	call	___wmul	;wreg free
 10332  012E1C  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10333  012E22  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10334  012E28                     	if	0	;tblptru may be non-zero
 10335  012E28                     	endif
 10336  012E28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10337  012E28  0E00               	movlw	low (__mediumconst shr (0+16))
 10338  012E2A  6EF8               	movwf	tblptru,c
 10339  012E2C                     	endif
 10340  012E2C  0008               	tblrd		*
 10341  012E2E  50F5               	movf	tablat,w,c
 10342  012E30  5E01               	subwf	?___wmul^0,f,c
 10343  012E32  0E00               	movlw	0
 10344  012E34  5A02               	subwfb	(?___wmul+1)^0,f,c
 10345  012E36  0E30               	movlw	48
 10346  012E38  2401               	addwf	?___wmul^0,w,c
 10347  012E3A  6E15               	movwf	atoi@n^0,c
 10348  012E3C  0E00               	movlw	0
 10349  012E3E  2002               	addwfc	(?___wmul+1)^0,w,c
 10350  012E40  6E16               	movwf	(atoi@n+1)^0,c
 10351  012E42  D7C5               	goto	l4738
 10352  012E44                     l4746:
 10353  012E44  0ED0               	movlw	208
 10354  012E46  6E0A               	movwf	??_atoi^0,c
 10355  012E48  0EFF               	movlw	255
 10356  012E4A  6E0B               	movwf	(??_atoi+1)^0,c
 10357  012E4C  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10358  012E52  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10359  012E58                     	if	0	;tblptru may be non-zero
 10360  012E58                     	endif
 10361  012E58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10362  012E58  0E00               	movlw	low (__mediumconst shr (0+16))
 10363  012E5A  6EF8               	movwf	tblptru,c
 10364  012E5C                     	endif
 10365  012E5C  0008               	tblrd		*
 10366  012E5E  50F5               	movf	tablat,w,c
 10367  012E60  6E0C               	movwf	(??_atoi+2)^0,c
 10368  012E62  6A0D               	clrf	(??_atoi+3)^0,c
 10369  012E64  500A               	movf	??_atoi^0,w,c
 10370  012E66  260C               	addwf	(??_atoi+2)^0,f,c
 10371  012E68  500B               	movf	(??_atoi+1)^0,w,c
 10372  012E6A  220D               	addwfc	(??_atoi+3)^0,f,c
 10373  012E6C  500D               	movf	(??_atoi+3)^0,w,c
 10374  012E6E  E106               	bnz	u5640
 10375  012E70  0E0A               	movlw	10
 10376  012E72  5C0C               	subwf	(??_atoi+2)^0,w,c
 10377  012E74  B0D8               	btfsc	status,0,c
 10378  012E76  D002               	goto	u5640
 10379  012E78  0E01               	movlw	1
 10380  012E7A  D001               	goto	u5650
 10381  012E7C                     u5640:
 10382  012E7C  0E00               	movlw	0
 10383  012E7E                     u5650:
 10384  012E7E  6E12               	movwf	_atoi$1130^0,c
 10385  012E80  6A13               	clrf	(_atoi$1130+1)^0,c
 10386  012E82  5012               	movf	_atoi$1130^0,w,c
 10387  012E84  1013               	iorwf	(_atoi$1130+1)^0,w,c
 10388  012E86  A4D8               	btfss	status,2,c
 10389  012E88  D7BD               	goto	l4742
 10390  012E8A  500E               	movf	atoi@neg^0,w,c
 10391  012E8C  100F               	iorwf	(atoi@neg+1)^0,w,c
 10392  012E8E  A4D8               	btfss	status,2,c
 10393  012E90  D011               	goto	l1440
 10394  012E92  0060  F054  F00A   	movff	atoi@n,??_atoi
 10395  012E98  0060  F058  F00B   	movff	atoi@n+1,??_atoi+1
 10396  012E9E  1E0A               	comf	??_atoi^0,f,c
 10397  012EA0  1E0B               	comf	(??_atoi+1)^0,f,c
 10398  012EA2  4A0A               	infsnz	??_atoi^0,f,c
 10399  012EA4  2A0B               	incf	(??_atoi+1)^0,f,c
 10400  012EA6  0060  F028  F008   	movff	??_atoi,?_atoi
 10401  012EAC  0060  F02C  F009   	movff	??_atoi+1,?_atoi+1
 10402  012EB2  0012               	return	
 10403  012EB4                     l1440:
 10404  012EB4  0060  F054  F008   	movff	atoi@n,?_atoi
 10405  012EBA  0060  F058  F009   	movff	atoi@n+1,?_atoi+1
 10406  012EC0  0012               	return		;funcret
 10407  012EC2                     __end_of_atoi:
 10408                           	opt callstack 0
 10409                           
 10410 ;; *************** function _isspace *****************
 10411 ;; Defined at:
 10412 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;  c               2    0[COMRAM] int 
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  2    0[COMRAM] int 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2, status,0
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10428 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10429 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;Total ram usage:        7 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; This function calls:
 10433 ;;		Nothing
 10434 ;; This function is called by:
 10435 ;;		_atoi
 10436 ;; This function uses a non-reentrant model
 10437 ;;
 10438                           
 10439                           	psect	text34
 10440  0142CE                     __ptext34:
 10441                           	opt callstack 0
 10442  0142CE                     _isspace:
 10443                           	opt callstack 25
 10444                           
 10445                           ;incstack = 0
 10446  0142CE  0E01               	movlw	1
 10447  0142D0  6E07               	movwf	_isspace$1159^0,c
 10448  0142D2  0E20               	movlw	32
 10449  0142D4  1801               	xorwf	isspace@c^0,w,c
 10450  0142D6  1002               	iorwf	(isspace@c+1)^0,w,c
 10451  0142D8  B4D8               	btfsc	status,2,c
 10452  0142DA  D016               	goto	l4398
 10453  0142DC  0EF7               	movlw	247
 10454  0142DE  6E03               	movwf	??_isspace^0,c
 10455  0142E0  0EFF               	movlw	255
 10456  0142E2  6E04               	movwf	(??_isspace+1)^0,c
 10457  0142E4  0060  F004  F005   	movff	isspace@c,??_isspace+2
 10458  0142EA  0060  F008  F006   	movff	isspace@c+1,??_isspace+3
 10459  0142F0  5003               	movf	??_isspace^0,w,c
 10460  0142F2  2605               	addwf	(??_isspace+2)^0,f,c
 10461  0142F4  5004               	movf	(??_isspace+1)^0,w,c
 10462  0142F6  2206               	addwfc	(??_isspace+3)^0,f,c
 10463  0142F8  5006               	movf	(??_isspace+3)^0,w,c
 10464  0142FA  E104               	bnz	u5050
 10465  0142FC  0E05               	movlw	5
 10466  0142FE  5C05               	subwf	(??_isspace+2)^0,w,c
 10467  014300  A0D8               	btfss	status,0,c
 10468  014302  D002               	goto	l4398
 10469  014304                     u5050:
 10470  014304  0E00               	movlw	0
 10471  014306  6E07               	movwf	_isspace$1159^0,c
 10472  014308                     l4398:
 10473  014308  0060  F01C  F001   	movff	_isspace$1159,?_isspace
 10474  01430E  6A02               	clrf	(?_isspace+1)^0,c
 10475  014310  0012               	return		;funcret
 10476  014312                     __end_of_isspace:
 10477                           	opt callstack 0
 10478                           
 10479 ;; *************** function _isdigit *****************
 10480 ;; Defined at:
 10481 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10482 ;; Parameters:    Size  Location     Type
 10483 ;;  c               2    0[COMRAM] int 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  2    0[COMRAM] int 
 10488 ;; Registers used:
 10489 ;;		wreg, status,2, status,0
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10495 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10497 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10499 ;;Total ram usage:        6 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; This function calls:
 10502 ;;		Nothing
 10503 ;; This function is called by:
 10504 ;;		_vfpfcnvrt
 10505 ;;		_atoi
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           	psect	text35
 10510  0143B4                     __ptext35:
 10511                           	opt callstack 0
 10512  0143B4                     _isdigit:
 10513                           	opt callstack 26
 10514                           
 10515                           ;incstack = 0
 10516  0143B4  0ED0               	movlw	208
 10517  0143B6  6E03               	movwf	??_isdigit^0,c
 10518  0143B8  0EFF               	movlw	255
 10519  0143BA  6E04               	movwf	(??_isdigit+1)^0,c
 10520  0143BC  0060  F004  F005   	movff	isdigit@c,??_isdigit+2
 10521  0143C2  0060  F008  F006   	movff	isdigit@c+1,??_isdigit+3
 10522  0143C8  5003               	movf	??_isdigit^0,w,c
 10523  0143CA  2605               	addwf	(??_isdigit+2)^0,f,c
 10524  0143CC  5004               	movf	(??_isdigit+1)^0,w,c
 10525  0143CE  2206               	addwfc	(??_isdigit+3)^0,f,c
 10526  0143D0  5006               	movf	(??_isdigit+3)^0,w,c
 10527  0143D2  E106               	bnz	u4330
 10528  0143D4  0E0A               	movlw	10
 10529  0143D6  5C05               	subwf	(??_isdigit+2)^0,w,c
 10530  0143D8  B0D8               	btfsc	status,0,c
 10531  0143DA  D002               	goto	u4330
 10532  0143DC  0E01               	movlw	1
 10533  0143DE  D001               	goto	u4340
 10534  0143E0                     u4330:
 10535  0143E0  0E00               	movlw	0
 10536  0143E2                     u4340:
 10537  0143E2  6E01               	movwf	?_isdigit^0,c
 10538  0143E4  6A02               	clrf	(?_isdigit+1)^0,c
 10539  0143E6  0012               	return		;funcret
 10540  0143E8                     __end_of_isdigit:
 10541                           	opt callstack 0
 10542                           
 10543 ;; *************** function ___wmul *****************
 10544 ;; Defined at:
 10545 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10546 ;; Parameters:    Size  Location     Type
 10547 ;;  multiplier      2    0[COMRAM] unsigned int 
 10548 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10549 ;; Auto vars:     Size  Location     Type
 10550 ;;  product         2    4[COMRAM] unsigned int 
 10551 ;; Return value:  Size  Location     Type
 10552 ;;                  2    0[COMRAM] unsigned int 
 10553 ;; Registers used:
 10554 ;;		wreg, status,2, status,0, prodl, prodh
 10555 ;; Tracked objects:
 10556 ;;		On entry : 0/0
 10557 ;;		On exit  : 0/0
 10558 ;;		Unchanged: 0/0
 10559 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10560 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10563 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10564 ;;Total ram usage:        6 bytes
 10565 ;; Hardware stack levels used:    1
 10566 ;; This function calls:
 10567 ;;		Nothing
 10568 ;; This function is called by:
 10569 ;;		_atoi
 10570 ;; This function uses a non-reentrant model
 10571 ;;
 10572                           
 10573                           	psect	text36
 10574  01441A                     __ptext36:
 10575                           	opt callstack 0
 10576  01441A                     ___wmul:
 10577                           	opt callstack 25
 10578                           
 10579                           ;incstack = 0
 10580  01441A  5001               	movf	___wmul@multiplier^0,w,c
 10581  01441C  0203               	mulwf	___wmul@multiplicand^0,c
 10582  01441E  006F FFCC  F005    	movff	prodl,___wmul@product
 10583  014424  006F FFD0  F006    	movff	prodh,___wmul@product+1
 10584  01442A  5001               	movf	___wmul@multiplier^0,w,c
 10585  01442C  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10586  01442E  50F3               	movf	243,w,c
 10587  014430  2606               	addwf	(___wmul@product+1)^0,f,c
 10588  014432  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10589  014434  0203               	mulwf	___wmul@multiplicand^0,c
 10590  014436  50F3               	movf	243,w,c
 10591  014438  2606               	addwf	(___wmul@product+1)^0,f,c
 10592  01443A  0060  F014  F001   	movff	___wmul@product,?___wmul
 10593  014440  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
 10594  014446  0012               	return		;funcret
 10595  014448                     __end_of___wmul:
 10596                           	opt callstack 0
 10597                           
 10598 ;; *************** function _setLED *****************
 10599 ;; Defined at:
 10600 ;;		line 116 in file "main.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;  mod             4    0[BANK0 ] long 
 10603 ;;  step            4    4[BANK0 ] long 
 10604 ;; Auto vars:     Size  Location     Type
 10605 ;;  shift           4   58[BANK0 ] long 
 10606 ;;  sr              4   54[BANK0 ] long 
 10607 ;;  sb              4   50[BANK0 ] long 
 10608 ;;  sg              4   46[BANK0 ] long 
 10609 ;;  b               4   42[BANK0 ] long 
 10610 ;;  g               4   38[BANK0 ] long 
 10611 ;;  r               4   16[BANK0 ] long 
 10612 ;;  trueMod         2   36[BANK0 ] unsigned short 
 10613 ;; Return value:  Size  Location     Type
 10614 ;;                  1    wreg      void 
 10615 ;; Registers used:
 10616 ;;		wreg, status,2, status,0, cstack
 10617 ;; Tracked objects:
 10618 ;;		On entry : 3F/0
 10619 ;;		On exit  : 0/0
 10620 ;;		Unchanged: 0/0
 10621 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10622 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10623 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10624 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10625 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10626 ;;Total ram usage:       62 bytes
 10627 ;; Hardware stack levels used:    1
 10628 ;; Hardware stack levels required when called:    1
 10629 ;; This function calls:
 10630 ;;		___aldiv
 10631 ;;		___almod
 10632 ;;		___flge
 10633 ;;		___lmul
 10634 ;; This function is called by:
 10635 ;;		_main_loop
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text37
 10640  0116C0                     __ptext37:
 10641                           	opt callstack 0
 10642  0116C0                     _setLED:
 10643                           	opt callstack 28
 10644                           
 10645                           ; BSR set to: 0
 10646                           ;main.c: 117:     uint16_t trueMod = (mod < 0 ? 0 : (mod > 4095 ? 4095 : mod));
 10647                           
 10648                           ;incstack = 0
 10649  0116C0  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10650  0116C2  D02B               	goto	l5098
 10651                           
 10652                           ; BSR set to: 0
 10653  0116C4  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10654  0116C6  D007               	goto	u6300
 10655  0116C8  5163               	movf	(setLED@mod+3)& (0+255),w,b
 10656  0116CA  1162               	iorwf	(setLED@mod+2)& (0+255),w,b
 10657  0116CC  E111               	bnz	l5094
 10658  0116CE  0E10               	movlw	16
 10659  0116D0  5D61               	subwf	(setLED@mod+1)& (0+255),w,b
 10660  0116D2  B0D8               	btfsc	status,0,c
 10661  0116D4  D00D               	goto	l5094
 10662  0116D6                     u6300:
 10663                           
 10664                           ; BSR set to: 0
 10665  0116D6  0060  F180  F078   	movff	setLED@mod,_setLED$289
 10666  0116DC  0060  F184  F079   	movff	setLED@mod+1,_setLED$289+1
 10667  0116E2  0060  F188  F07A   	movff	setLED@mod+2,_setLED$289+2
 10668  0116E8  0060  F18C  F07B   	movff	setLED@mod+3,_setLED$289+3
 10669  0116EE  D008               	goto	l5096
 10670  0116F0                     l5094:
 10671                           
 10672                           ; BSR set to: 0
 10673  0116F0  0EFF               	movlw	255
 10674  0116F2  6F78               	movwf	_setLED$289& (0+255),b
 10675  0116F4  0E0F               	movlw	15
 10676  0116F6  6F79               	movwf	(_setLED$289+1)& (0+255),b
 10677  0116F8  0E00               	movlw	0
 10678  0116FA  6F7A               	movwf	(_setLED$289+2)& (0+255),b
 10679  0116FC  0E00               	movlw	0
 10680  0116FE  6F7B               	movwf	(_setLED$289+3)& (0+255),b
 10681  011700                     l5096:
 10682                           
 10683                           ; BSR set to: 0
 10684  011700  0060  F1E0  F074   	movff	_setLED$289,_setLED$288
 10685  011706  0060  F1E4  F075   	movff	_setLED$289+1,_setLED$288+1
 10686  01170C  0060  F1E8  F076   	movff	_setLED$289+2,_setLED$288+2
 10687  011712  0060  F1EC  F077   	movff	_setLED$289+3,_setLED$288+3
 10688  011718  D008               	goto	l5100
 10689  01171A                     l5098:
 10690                           
 10691                           ; BSR set to: 0
 10692  01171A  0E00               	movlw	0
 10693  01171C  6F74               	movwf	_setLED$288& (0+255),b
 10694  01171E  0E00               	movlw	0
 10695  011720  6F75               	movwf	(_setLED$288+1)& (0+255),b
 10696  011722  0E00               	movlw	0
 10697  011724  6F76               	movwf	(_setLED$288+2)& (0+255),b
 10698  011726  0E00               	movlw	0
 10699  011728  6F77               	movwf	(_setLED$288+3)& (0+255),b
 10700  01172A                     l5100:
 10701                           
 10702                           ; BSR set to: 0
 10703  01172A  0060  F1D0  F084   	movff	_setLED$288,setLED@trueMod
 10704  011730  0060  F1D4  F085   	movff	_setLED$288+1,setLED@trueMod+1
 10705                           
 10706                           ; BSR set to: 0
 10707                           ;main.c: 118:     int32_t r = trueMod;
 10708  011736  0060  F210  F070   	movff	setLED@trueMod,setLED@r
 10709  01173C  0060  F214  F071   	movff	setLED@trueMod+1,setLED@r+1
 10710  011742  6B72               	clrf	(setLED@r+2)& (0+255),b
 10711  011744  6B73               	clrf	(setLED@r+3)& (0+255),b
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;main.c: 119:     int32_t g = 2047 - trueMod / 2;
 10715  011746  90D8               	bcf	status,0,c
 10716  011748  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10717  01174A  6F69               	movwf	(??_setLED+1)& (0+255),b
 10718  01174C  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10719  01174E  6F68               	movwf	??_setLED& (0+255),b
 10720  011750  0EFF               	movlw	255
 10721  011752  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10722  011754  0E07               	movlw	7
 10723  011756  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10724  011758  5168               	movf	??_setLED& (0+255),w,b
 10725  01175A  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10726  01175C  5169               	movf	(??_setLED+1)& (0+255),w,b
 10727  01175E  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10728  011760  0060  F1A8  F086   	movff	??_setLED+2,setLED@g
 10729  011766  0060  F1AC  F087   	movff	??_setLED+3,setLED@g+1
 10730  01176C  6B88               	clrf	(setLED@g+2)& (0+255),b
 10731  01176E  6B89               	clrf	(setLED@g+3)& (0+255),b
 10732                           
 10733                           ; BSR set to: 0
 10734                           ;main.c: 120:     int32_t b = 2047 - trueMod / 2;
 10735  011770  90D8               	bcf	status,0,c
 10736  011772  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10737  011774  6F69               	movwf	(??_setLED+1)& (0+255),b
 10738  011776  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10739  011778  6F68               	movwf	??_setLED& (0+255),b
 10740  01177A  0EFF               	movlw	255
 10741  01177C  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10742  01177E  0E07               	movlw	7
 10743  011780  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10744  011782  5168               	movf	??_setLED& (0+255),w,b
 10745  011784  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10746  011786  5169               	movf	(??_setLED+1)& (0+255),w,b
 10747  011788  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10748  01178A  0060  F1A8  F08A   	movff	??_setLED+2,setLED@b
 10749  011790  0060  F1AC  F08B   	movff	??_setLED+3,setLED@b+1
 10750  011796  6B8C               	clrf	(setLED@b+2)& (0+255),b
 10751  011798  6B8D               	clrf	(setLED@b+3)& (0+255),b
 10752                           
 10753                           ; BSR set to: 0
 10754                           ;main.c: 122:     int32_t shift;;main.c: 123:     if (step < 25000) shift = step / 50;
 10755  01179A  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10756  01179C  D009               	goto	u6310
 10757  01179E  5167               	movf	(setLED@step+3)& (0+255),w,b
 10758  0117A0  1166               	iorwf	(setLED@step+2)& (0+255),w,b
 10759  0117A2  E11D               	bnz	l5112
 10760  0117A4  0EA8               	movlw	168
 10761  0117A6  5D64               	subwf	setLED@step& (0+255),w,b
 10762  0117A8  0E61               	movlw	97
 10763  0117AA  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10764  0117AC  B0D8               	btfsc	status,0,c
 10765  0117AE  D017               	goto	l5112
 10766  0117B0                     u6310:
 10767                           
 10768                           ; BSR set to: 0
 10769  0117B0  0060  F190  F00D   	movff	setLED@step,___aldiv@dividend
 10770  0117B6  0060  F194  F00E   	movff	setLED@step+1,___aldiv@dividend+1
 10771  0117BC  0060  F198  F00F   	movff	setLED@step+2,___aldiv@dividend+2
 10772  0117C2  0060  F19C  F010   	movff	setLED@step+3,___aldiv@dividend+3
 10773  0117C8  0E32               	movlw	50
 10774  0117CA  6E11               	movwf	___aldiv@divisor^0,c
 10775  0117CC  0E00               	movlw	0
 10776  0117CE  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10777  0117D0  0E00               	movlw	0
 10778  0117D2  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10779  0117D4  0E00               	movlw	0
 10780  0117D6  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10781  0117D8  ECEE  F09A         	call	___aldiv	;wreg free
 10782  0117DC  D039               	goto	L15
 10783  0117DE                     l5112:
 10784                           
 10785                           ; BSR set to: 0
 10786  0117DE  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10787  0117E0  D00A               	goto	u6320
 10788  0117E2  5167               	movf	(setLED@step+3)& (0+255),w,b
 10789  0117E4  E11F               	bnz	l5116
 10790  0117E6  0EF8               	movlw	248
 10791  0117E8  5D64               	subwf	setLED@step& (0+255),w,b
 10792  0117EA  0E24               	movlw	36
 10793  0117EC  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10794  0117EE  0E01               	movlw	1
 10795  0117F0  5966               	subwfb	(setLED@step+2)& (0+255),w,b
 10796  0117F2  B0D8               	btfsc	status,0,c
 10797  0117F4  D017               	goto	l5116
 10798  0117F6                     u6320:
 10799                           
 10800                           ; BSR set to: 0
 10801  0117F6  5164               	movf	setLED@step& (0+255),w,b
 10802  0117F8  0850               	sublw	80
 10803  0117FA  6E0D               	movwf	___aldiv@dividend^0,c
 10804  0117FC  0EC3               	movlw	195
 10805  0117FE  5565               	subfwb	(setLED@step+1)& (0+255),w,b
 10806  011800  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10807  011802  0E00               	movlw	0
 10808  011804  5566               	subfwb	(setLED@step+2)& (0+255),w,b
 10809  011806  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10810  011808  0E00               	movlw	0
 10811  01180A  5567               	subfwb	(setLED@step+3)& (0+255),w,b
 10812  01180C  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10813  01180E  0E32               	movlw	50
 10814  011810  6E11               	movwf	___aldiv@divisor^0,c
 10815  011812  0E00               	movlw	0
 10816  011814  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10817  011816  0E00               	movlw	0
 10818  011818  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10819  01181A  0E00               	movlw	0
 10820  01181C  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10821  01181E  ECEE  F09A         	call	___aldiv	;wreg free
 10822  011822  D016               	goto	L15
 10823  011824                     l5116:
 10824                           
 10825                           ; BSR set to: 0
 10826  011824  0E60               	movlw	96
 10827  011826  2564               	addwf	setLED@step& (0+255),w,b
 10828  011828  6E0D               	movwf	___aldiv@dividend^0,c
 10829  01182A  0E79               	movlw	121
 10830  01182C  2165               	addwfc	(setLED@step+1)& (0+255),w,b
 10831  01182E  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10832  011830  0EFE               	movlw	254
 10833  011832  2166               	addwfc	(setLED@step+2)& (0+255),w,b
 10834  011834  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10835  011836  0EFF               	movlw	255
 10836  011838  2167               	addwfc	(setLED@step+3)& (0+255),w,b
 10837  01183A  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10838  01183C  0E32               	movlw	50
 10839  01183E  6E11               	movwf	___aldiv@divisor^0,c
 10840  011840  0E00               	movlw	0
 10841  011842  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10842  011844  0E00               	movlw	0
 10843  011846  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10844  011848  0E00               	movlw	0
 10845  01184A  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10846  01184C  ECEE  F09A         	call	___aldiv	;wreg free
 10847  011850                     L15:
 10848  011850  0060  F034  F09A   	movff	?___aldiv,setLED@shift
 10849  011856  0060  F038  F09B   	movff	?___aldiv+1,setLED@shift+1
 10850  01185C  0060  F03C  F09C   	movff	?___aldiv+2,setLED@shift+2
 10851  011862  0060  F040  F09D   	movff	?___aldiv+3,setLED@shift+3
 10852                           
 10853                           ;main.c: 126:     g = (g + shift - 500 < 0 ? 0 : (g + shift - 500 > 4095 ? 4095 : g + sh
      +                          ift - 500));
 10854  011868  0100               	movlb	0	; () banked
 10855  01186A  519A               	movf	setLED@shift& (0+255),w,b
 10856  01186C  2586               	addwf	setLED@g& (0+255),w,b
 10857  01186E  6F68               	movwf	??_setLED& (0+255),b
 10858  011870  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10859  011872  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10860  011874  6F69               	movwf	(??_setLED+1)& (0+255),b
 10861  011876  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10862  011878  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10863  01187A  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10864  01187C  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10865  01187E  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10866  011880  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10867  011882  0E0C               	movlw	12
 10868  011884  2568               	addwf	??_setLED& (0+255),w,b
 10869  011886  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10870  011888  0EFE               	movlw	254
 10871  01188A  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10872  01188C  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10873  01188E  0EFF               	movlw	255
 10874  011890  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10875  011892  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10876  011894  0EFF               	movlw	255
 10877  011896  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10878  011898  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10879  01189A  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10880  01189C  D04E               	goto	l5128
 10881                           
 10882                           ; BSR set to: 0
 10883  01189E  519A               	movf	setLED@shift& (0+255),w,b
 10884  0118A0  2586               	addwf	setLED@g& (0+255),w,b
 10885  0118A2  6F68               	movwf	??_setLED& (0+255),b
 10886  0118A4  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10887  0118A6  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10888  0118A8  6F69               	movwf	(??_setLED+1)& (0+255),b
 10889  0118AA  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10890  0118AC  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10891  0118AE  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10892  0118B0  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10893  0118B2  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10894  0118B4  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10895  0118B6  0E0C               	movlw	12
 10896  0118B8  2568               	addwf	??_setLED& (0+255),w,b
 10897  0118BA  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10898  0118BC  0EFE               	movlw	254
 10899  0118BE  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10900  0118C0  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10901  0118C2  0EFF               	movlw	255
 10902  0118C4  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10903  0118C6  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10904  0118C8  0EFF               	movlw	255
 10905  0118CA  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10906  0118CC  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10907  0118CE  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10908  0118D0  D007               	goto	u6340
 10909  0118D2  516F               	movf	(??_setLED+7)& (0+255),w,b
 10910  0118D4  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 10911  0118D6  E11C               	bnz	l5124
 10912  0118D8  0E10               	movlw	16
 10913  0118DA  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 10914  0118DC  B0D8               	btfsc	status,0,c
 10915  0118DE  D018               	goto	l5124
 10916  0118E0                     u6340:
 10917                           
 10918                           ; BSR set to: 0
 10919  0118E0  519A               	movf	setLED@shift& (0+255),w,b
 10920  0118E2  2586               	addwf	setLED@g& (0+255),w,b
 10921  0118E4  6F68               	movwf	??_setLED& (0+255),b
 10922  0118E6  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10923  0118E8  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10924  0118EA  6F69               	movwf	(??_setLED+1)& (0+255),b
 10925  0118EC  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10926  0118EE  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10927  0118F0  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10928  0118F2  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10929  0118F4  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10930  0118F6  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10931  0118F8  0E0C               	movlw	12
 10932  0118FA  2568               	addwf	??_setLED& (0+255),w,b
 10933  0118FC  6F7C               	movwf	_setLED$294& (0+255),b
 10934  0118FE  0EFE               	movlw	254
 10935  011900  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10936  011902  6F7D               	movwf	(_setLED$294+1)& (0+255),b
 10937  011904  0EFF               	movlw	255
 10938  011906  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10939  011908  6F7E               	movwf	(_setLED$294+2)& (0+255),b
 10940  01190A  0EFF               	movlw	255
 10941  01190C  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10942  01190E  D007               	goto	L16
 10943  011910                     l5124:
 10944                           
 10945                           ; BSR set to: 0
 10946  011910  0EFF               	movlw	255
 10947  011912  6F7C               	movwf	_setLED$294& (0+255),b
 10948  011914  0E0F               	movlw	15
 10949  011916  6F7D               	movwf	(_setLED$294+1)& (0+255),b
 10950  011918  0E00               	movlw	0
 10951  01191A  6F7E               	movwf	(_setLED$294+2)& (0+255),b
 10952  01191C  0E00               	movlw	0
 10953  01191E                     L16:
 10954  01191E  6F7F               	movwf	(_setLED$294+3)& (0+255),b
 10955                           
 10956                           ; BSR set to: 0
 10957  011920  0060  F1F0  F086   	movff	_setLED$294,setLED@g
 10958  011926  0060  F1F4  F087   	movff	_setLED$294+1,setLED@g+1
 10959  01192C  0060  F1F8  F088   	movff	_setLED$294+2,setLED@g+2
 10960  011932  0060  F1FC  F089   	movff	_setLED$294+3,setLED@g+3
 10961  011938  D008               	goto	l5130
 10962  01193A                     l5128:
 10963                           
 10964                           ; BSR set to: 0
 10965  01193A  0E00               	movlw	0
 10966  01193C  6F86               	movwf	setLED@g& (0+255),b
 10967  01193E  0E00               	movlw	0
 10968  011940  6F87               	movwf	(setLED@g+1)& (0+255),b
 10969  011942  0E00               	movlw	0
 10970  011944  6F88               	movwf	(setLED@g+2)& (0+255),b
 10971  011946  0E00               	movlw	0
 10972  011948  6F89               	movwf	(setLED@g+3)& (0+255),b
 10973  01194A                     l5130:
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;main.c: 127:     b = (b - shift - 500 < 0 ? 0 : (b - shift - 500 > 4095 ? 4095 : b - sh
      +                          ift - 500));
 10977  01194A  519A               	movf	setLED@shift& (0+255),w,b
 10978  01194C  5D8A               	subwf	setLED@b& (0+255),w,b
 10979  01194E  6F68               	movwf	??_setLED& (0+255),b
 10980  011950  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10981  011952  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10982  011954  6F69               	movwf	(??_setLED+1)& (0+255),b
 10983  011956  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10984  011958  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10985  01195A  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10986  01195C  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10987  01195E  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10988  011960  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10989  011962  0E0C               	movlw	12
 10990  011964  2568               	addwf	??_setLED& (0+255),w,b
 10991  011966  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10992  011968  0EFE               	movlw	254
 10993  01196A  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10994  01196C  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10995  01196E  0EFF               	movlw	255
 10996  011970  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10997  011972  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10998  011974  0EFF               	movlw	255
 10999  011976  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 11000  011978  6F6F               	movwf	(??_setLED+7)& (0+255),b
 11001  01197A  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 11002  01197C  D04E               	goto	l5140
 11003                           
 11004                           ; BSR set to: 0
 11005  01197E  519A               	movf	setLED@shift& (0+255),w,b
 11006  011980  5D8A               	subwf	setLED@b& (0+255),w,b
 11007  011982  6F68               	movwf	??_setLED& (0+255),b
 11008  011984  519B               	movf	(setLED@shift+1)& (0+255),w,b
 11009  011986  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 11010  011988  6F69               	movwf	(??_setLED+1)& (0+255),b
 11011  01198A  519C               	movf	(setLED@shift+2)& (0+255),w,b
 11012  01198C  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 11013  01198E  6F6A               	movwf	(??_setLED+2)& (0+255),b
 11014  011990  519D               	movf	(setLED@shift+3)& (0+255),w,b
 11015  011992  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 11016  011994  6F6B               	movwf	(??_setLED+3)& (0+255),b
 11017  011996  0E0C               	movlw	12
 11018  011998  2568               	addwf	??_setLED& (0+255),w,b
 11019  01199A  6F6C               	movwf	(??_setLED+4)& (0+255),b
 11020  01199C  0EFE               	movlw	254
 11021  01199E  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 11022  0119A0  6F6D               	movwf	(??_setLED+5)& (0+255),b
 11023  0119A2  0EFF               	movlw	255
 11024  0119A4  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 11025  0119A6  6F6E               	movwf	(??_setLED+6)& (0+255),b
 11026  0119A8  0EFF               	movlw	255
 11027  0119AA  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 11028  0119AC  6F6F               	movwf	(??_setLED+7)& (0+255),b
 11029  0119AE  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 11030  0119B0  D007               	goto	u6360
 11031  0119B2  516F               	movf	(??_setLED+7)& (0+255),w,b
 11032  0119B4  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 11033  0119B6  E11C               	bnz	l5136
 11034  0119B8  0E10               	movlw	16
 11035  0119BA  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 11036  0119BC  B0D8               	btfsc	status,0,c
 11037  0119BE  D018               	goto	l5136
 11038  0119C0                     u6360:
 11039                           
 11040                           ; BSR set to: 0
 11041  0119C0  519A               	movf	setLED@shift& (0+255),w,b
 11042  0119C2  5D8A               	subwf	setLED@b& (0+255),w,b
 11043  0119C4  6F68               	movwf	??_setLED& (0+255),b
 11044  0119C6  519B               	movf	(setLED@shift+1)& (0+255),w,b
 11045  0119C8  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 11046  0119CA  6F69               	movwf	(??_setLED+1)& (0+255),b
 11047  0119CC  519C               	movf	(setLED@shift+2)& (0+255),w,b
 11048  0119CE  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 11049  0119D0  6F6A               	movwf	(??_setLED+2)& (0+255),b
 11050  0119D2  519D               	movf	(setLED@shift+3)& (0+255),w,b
 11051  0119D4  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 11052  0119D6  6F6B               	movwf	(??_setLED+3)& (0+255),b
 11053  0119D8  0E0C               	movlw	12
 11054  0119DA  2568               	addwf	??_setLED& (0+255),w,b
 11055  0119DC  6F80               	movwf	_setLED$295& (0+255),b
 11056  0119DE  0EFE               	movlw	254
 11057  0119E0  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 11058  0119E2  6F81               	movwf	(_setLED$295+1)& (0+255),b
 11059  0119E4  0EFF               	movlw	255
 11060  0119E6  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 11061  0119E8  6F82               	movwf	(_setLED$295+2)& (0+255),b
 11062  0119EA  0EFF               	movlw	255
 11063  0119EC  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 11064  0119EE  D007               	goto	L17
 11065  0119F0                     l5136:
 11066                           
 11067                           ; BSR set to: 0
 11068  0119F0  0EFF               	movlw	255
 11069  0119F2  6F80               	movwf	_setLED$295& (0+255),b
 11070  0119F4  0E0F               	movlw	15
 11071  0119F6  6F81               	movwf	(_setLED$295+1)& (0+255),b
 11072  0119F8  0E00               	movlw	0
 11073  0119FA  6F82               	movwf	(_setLED$295+2)& (0+255),b
 11074  0119FC  0E00               	movlw	0
 11075  0119FE                     L17:
 11076  0119FE  6F83               	movwf	(_setLED$295+3)& (0+255),b
 11077                           
 11078                           ; BSR set to: 0
 11079  011A00  0060  F200  F08A   	movff	_setLED$295,setLED@b
 11080  011A06  0060  F204  F08B   	movff	_setLED$295+1,setLED@b+1
 11081  011A0C  0060  F208  F08C   	movff	_setLED$295+2,setLED@b+2
 11082  011A12  0060  F20C  F08D   	movff	_setLED$295+3,setLED@b+3
 11083  011A18  D008               	goto	l233
 11084  011A1A                     l5140:
 11085                           
 11086                           ; BSR set to: 0
 11087  011A1A  0E00               	movlw	0
 11088  011A1C  6F8A               	movwf	setLED@b& (0+255),b
 11089  011A1E  0E00               	movlw	0
 11090  011A20  6F8B               	movwf	(setLED@b+1)& (0+255),b
 11091  011A22  0E00               	movlw	0
 11092  011A24  6F8C               	movwf	(setLED@b+2)& (0+255),b
 11093  011A26  0E00               	movlw	0
 11094  011A28  6F8D               	movwf	(setLED@b+3)& (0+255),b
 11095  011A2A                     l233:
 11096                           
 11097                           ; BSR set to: 0
 11098                           ;main.c: 129:     int32_t sr, sg, sb;;main.c: 130:     if (on) {
 11099  011A2A  51E5               	movf	_on& (0+255),w,b
 11100  011A2C  B4D8               	btfsc	status,2,c
 11101  011A2E  D0FE               	goto	l5172
 11102                           
 11103                           ; BSR set to: 0
 11104                           ;main.c: 131:         sr = r * ledBrightness / 300;
 11105  011A30  0060  F1C0  F001   	movff	setLED@r,___lmul@multiplier
 11106  011A36  0060  F1C4  F002   	movff	setLED@r+1,___lmul@multiplier+1
 11107  011A3C  0060  F1C8  F003   	movff	setLED@r+2,___lmul@multiplier+2
 11108  011A42  0060  F1CC  F004   	movff	setLED@r+3,___lmul@multiplier+3
 11109  011A48  0060  F398  F005   	movff	_ledBrightness,___lmul@multiplicand
 11110  011A4E  0060  F39C  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 11111  011A54  0060  F3A0  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 11112  011A5A  0060  F3A4  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 11113  011A60  EC92  F0A0         	call	___lmul	;wreg free
 11114  011A64  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 11115  011A6A  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 11116  011A70  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 11117  011A76  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 11118  011A7C  0E2C               	movlw	44
 11119  011A7E  6E11               	movwf	___aldiv@divisor^0,c
 11120  011A80  0E01               	movlw	1
 11121  011A82  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11122  011A84  0E00               	movlw	0
 11123  011A86  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11124  011A88  0E00               	movlw	0
 11125  011A8A  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11126  011A8C  ECEE  F09A         	call	___aldiv	;wreg free
 11127  011A90  0060  F034  F096   	movff	?___aldiv,setLED@sr
 11128  011A96  0060  F038  F097   	movff	?___aldiv+1,setLED@sr+1
 11129  011A9C  0060  F03C  F098   	movff	?___aldiv+2,setLED@sr+2
 11130  011AA2  0060  F040  F099   	movff	?___aldiv+3,setLED@sr+3
 11131                           
 11132                           ;main.c: 132:         if (sr < 0) sr = 0;
 11133  011AA8  0100               	movlb	0	; () banked
 11134  011AAA  AF99               	btfss	(setLED@sr+3)& (0+255),7,b
 11135  011AAC  D004               	goto	l5148
 11136                           
 11137                           ; BSR set to: 0
 11138  011AAE  0E00               	movlw	0
 11139  011AB0  6F96               	movwf	setLED@sr& (0+255),b
 11140  011AB2  0E00               	movlw	0
 11141  011AB4  D00C               	goto	L18
 11142  011AB6                     l5148:
 11143                           
 11144                           ; BSR set to: 0
 11145  011AB6  BF99               	btfsc	(setLED@sr+3)& (0+255),7,b
 11146  011AB8  D00F               	goto	l5152
 11147  011ABA  5199               	movf	(setLED@sr+3)& (0+255),w,b
 11148  011ABC  1198               	iorwf	(setLED@sr+2)& (0+255),w,b
 11149  011ABE  E104               	bnz	u6390
 11150  011AC0  0E10               	movlw	16
 11151  011AC2  5D97               	subwf	(setLED@sr+1)& (0+255),w,b
 11152  011AC4  A0D8               	btfss	status,0,c
 11153  011AC6  D008               	goto	l5152
 11154  011AC8                     u6390:
 11155                           
 11156                           ; BSR set to: 0
 11157  011AC8  0EFF               	movlw	255
 11158  011ACA  6F96               	movwf	setLED@sr& (0+255),b
 11159  011ACC  0E0F               	movlw	15
 11160  011ACE                     L18:
 11161  011ACE  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11162  011AD0  0E00               	movlw	0
 11163  011AD2  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11164  011AD4  0E00               	movlw	0
 11165  011AD6  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11166  011AD8                     l5152:
 11167                           
 11168                           ; BSR set to: 0
 11169                           ;main.c: 134:         sg = g * ledBrightness / 300;
 11170  011AD8  0060  F218  F001   	movff	setLED@g,___lmul@multiplier
 11171  011ADE  0060  F21C  F002   	movff	setLED@g+1,___lmul@multiplier+1
 11172  011AE4  0060  F220  F003   	movff	setLED@g+2,___lmul@multiplier+2
 11173  011AEA  0060  F224  F004   	movff	setLED@g+3,___lmul@multiplier+3
 11174  011AF0  0060  F398  F005   	movff	_ledBrightness,___lmul@multiplicand
 11175  011AF6  0060  F39C  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 11176  011AFC  0060  F3A0  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 11177  011B02  0060  F3A4  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 11178  011B08  EC92  F0A0         	call	___lmul	;wreg free
 11179  011B0C  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 11180  011B12  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 11181  011B18  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 11182  011B1E  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 11183  011B24  0E2C               	movlw	44
 11184  011B26  6E11               	movwf	___aldiv@divisor^0,c
 11185  011B28  0E01               	movlw	1
 11186  011B2A  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11187  011B2C  0E00               	movlw	0
 11188  011B2E  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11189  011B30  0E00               	movlw	0
 11190  011B32  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11191  011B34  ECEE  F09A         	call	___aldiv	;wreg free
 11192  011B38  0060  F034  F08E   	movff	?___aldiv,setLED@sg
 11193  011B3E  0060  F038  F08F   	movff	?___aldiv+1,setLED@sg+1
 11194  011B44  0060  F03C  F090   	movff	?___aldiv+2,setLED@sg+2
 11195  011B4A  0060  F040  F091   	movff	?___aldiv+3,setLED@sg+3
 11196                           
 11197                           ;main.c: 135:         if (sg < 0) sg = 0;
 11198  011B50  0100               	movlb	0	; () banked
 11199  011B52  AF91               	btfss	(setLED@sg+3)& (0+255),7,b
 11200  011B54  D009               	goto	l5158
 11201                           
 11202                           ; BSR set to: 0
 11203  011B56  0E00               	movlw	0
 11204  011B58  6F8E               	movwf	setLED@sg& (0+255),b
 11205  011B5A  0E00               	movlw	0
 11206  011B5C  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11207  011B5E  0E00               	movlw	0
 11208  011B60  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11209  011B62  0E00               	movlw	0
 11210  011B64  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11211  011B66  D011               	goto	l5162
 11212  011B68                     l5158:
 11213                           
 11214                           ; BSR set to: 0
 11215  011B68  BF91               	btfsc	(setLED@sg+3)& (0+255),7,b
 11216  011B6A  D00F               	goto	l5162
 11217  011B6C  5191               	movf	(setLED@sg+3)& (0+255),w,b
 11218  011B6E  1190               	iorwf	(setLED@sg+2)& (0+255),w,b
 11219  011B70  E104               	bnz	u6410
 11220  011B72  0E10               	movlw	16
 11221  011B74  5D8F               	subwf	(setLED@sg+1)& (0+255),w,b
 11222  011B76  A0D8               	btfss	status,0,c
 11223  011B78  D008               	goto	l5162
 11224  011B7A                     u6410:
 11225                           
 11226                           ; BSR set to: 0
 11227  011B7A  0EFF               	movlw	255
 11228  011B7C  6F96               	movwf	setLED@sr& (0+255),b
 11229  011B7E  0E0F               	movlw	15
 11230  011B80  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11231  011B82  0E00               	movlw	0
 11232  011B84  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11233  011B86  0E00               	movlw	0
 11234  011B88  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11235  011B8A                     l5162:
 11236                           
 11237                           ; BSR set to: 0
 11238                           ;main.c: 137:         sb = b * ledBrightness / 300;
 11239  011B8A  0060  F228  F001   	movff	setLED@b,___lmul@multiplier
 11240  011B90  0060  F22C  F002   	movff	setLED@b+1,___lmul@multiplier+1
 11241  011B96  0060  F230  F003   	movff	setLED@b+2,___lmul@multiplier+2
 11242  011B9C  0060  F234  F004   	movff	setLED@b+3,___lmul@multiplier+3
 11243  011BA2  0060  F398  F005   	movff	_ledBrightness,___lmul@multiplicand
 11244  011BA8  0060  F39C  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 11245  011BAE  0060  F3A0  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 11246  011BB4  0060  F3A4  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 11247  011BBA  EC92  F0A0         	call	___lmul	;wreg free
 11248  011BBE  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 11249  011BC4  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 11250  011BCA  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 11251  011BD0  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 11252  011BD6  0E2C               	movlw	44
 11253  011BD8  6E11               	movwf	___aldiv@divisor^0,c
 11254  011BDA  0E01               	movlw	1
 11255  011BDC  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11256  011BDE  0E00               	movlw	0
 11257  011BE0  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11258  011BE2  0E00               	movlw	0
 11259  011BE4  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11260  011BE6  ECEE  F09A         	call	___aldiv	;wreg free
 11261  011BEA  0060  F034  F092   	movff	?___aldiv,setLED@sb
 11262  011BF0  0060  F038  F093   	movff	?___aldiv+1,setLED@sb+1
 11263  011BF6  0060  F03C  F094   	movff	?___aldiv+2,setLED@sb+2
 11264  011BFC  0060  F040  F095   	movff	?___aldiv+3,setLED@sb+3
 11265                           
 11266                           ;main.c: 138:         if (sb < 0) sb = 0;
 11267  011C02  0100               	movlb	0	; () banked
 11268  011C04  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 11269  011C06  D022               	goto	L19
 11270                           
 11271                           ; BSR set to: 0
 11272                           
 11273                           ; BSR set to: 0
 11274  011C08  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 11275  011C0A  D028               	goto	l5174
 11276  011C0C  5195               	movf	(setLED@sb+3)& (0+255),w,b
 11277  011C0E  1194               	iorwf	(setLED@sb+2)& (0+255),w,b
 11278  011C10  E104               	bnz	u6430
 11279  011C12  0E10               	movlw	16
 11280  011C14  5D93               	subwf	(setLED@sb+1)& (0+255),w,b
 11281  011C16  A0D8               	btfss	status,0,c
 11282  011C18  D021               	goto	l5174
 11283  011C1A                     u6430:
 11284                           
 11285                           ; BSR set to: 0
 11286  011C1A  0EFF               	movlw	255
 11287  011C1C  6F96               	movwf	setLED@sr& (0+255),b
 11288  011C1E  0E0F               	movlw	15
 11289  011C20  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11290  011C22  0E00               	movlw	0
 11291  011C24  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11292  011C26  0E00               	movlw	0
 11293  011C28  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11294  011C2A  D018               	goto	l5174
 11295  011C2C                     l5172:
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;main.c: 141:         sr = 0;
 11299  011C2C  0E00               	movlw	0
 11300  011C2E  6F96               	movwf	setLED@sr& (0+255),b
 11301  011C30  0E00               	movlw	0
 11302  011C32  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11303  011C34  0E00               	movlw	0
 11304  011C36  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11305  011C38  0E00               	movlw	0
 11306  011C3A  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11307                           
 11308                           ;main.c: 142:         sg = 0;
 11309  011C3C  0E00               	movlw	0
 11310  011C3E  6F8E               	movwf	setLED@sg& (0+255),b
 11311  011C40  0E00               	movlw	0
 11312  011C42  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11313  011C44  0E00               	movlw	0
 11314  011C46  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11315  011C48  0E00               	movlw	0
 11316  011C4A  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11317  011C4C                     L19:
 11318                           
 11319                           ;main.c: 143:         sb = 0;
 11320  011C4C  0E00               	movlw	0
 11321  011C4E  6F92               	movwf	setLED@sb& (0+255),b
 11322  011C50  0E00               	movlw	0
 11323  011C52  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11324  011C54  0E00               	movlw	0
 11325  011C56  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11326  011C58  0E00               	movlw	0
 11327  011C5A  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11328  011C5C                     l5174:
 11329                           
 11330                           ; BSR set to: 0
 11331                           ;main.c: 146:     if (bat_percent < 5.0f && step % 10000 < 1000) {
 11332  011C5C  0060  F3A8  F051   	movff	_bat_percent,___flge@ff1
 11333  011C62  0060  F3AC  F052   	movff	_bat_percent+1,___flge@ff1+1
 11334  011C68  0060  F3B0  F053   	movff	_bat_percent+2,___flge@ff1+2
 11335  011C6E  0060  F3B4  F054   	movff	_bat_percent+3,___flge@ff1+3
 11336  011C74  0E00               	movlw	0
 11337  011C76  6E55               	movwf	___flge@ff2^0,c
 11338  011C78  0E00               	movlw	0
 11339  011C7A  6E56               	movwf	(___flge@ff2+1)^0,c
 11340  011C7C  0EA0               	movlw	160
 11341  011C7E  6E57               	movwf	(___flge@ff2+2)^0,c
 11342  011C80  0E40               	movlw	64
 11343  011C82  6E58               	movwf	(___flge@ff2+3)^0,c
 11344  011C84  EC58  F09B         	call	___flge	;wreg free
 11345  011C88  B0D8               	btfsc	status,0,c
 11346  011C8A  D03A               	goto	l5180
 11347  011C8C  0060  F190  F001   	movff	setLED@step,___almod@dividend
 11348  011C92  0060  F194  F002   	movff	setLED@step+1,___almod@dividend+1
 11349  011C98  0060  F198  F003   	movff	setLED@step+2,___almod@dividend+2
 11350  011C9E  0060  F19C  F004   	movff	setLED@step+3,___almod@dividend+3
 11351  011CA4  0E10               	movlw	16
 11352  011CA6  6E05               	movwf	___almod@divisor^0,c
 11353  011CA8  0E27               	movlw	39
 11354  011CAA  6E06               	movwf	(___almod@divisor+1)^0,c
 11355  011CAC  0E00               	movlw	0
 11356  011CAE  6E07               	movwf	(___almod@divisor+2)^0,c
 11357  011CB0  0E00               	movlw	0
 11358  011CB2  6E08               	movwf	(___almod@divisor+3)^0,c
 11359  011CB4  EC7F  F09C         	call	___almod	;wreg free
 11360  011CB8  BE04               	btfsc	(?___almod+3)^0,7,c
 11361  011CBA  D009               	goto	u6450
 11362  011CBC  5004               	movf	(?___almod+3)^0,w,c
 11363  011CBE  1003               	iorwf	(?___almod+2)^0,w,c
 11364  011CC0  E11F               	bnz	l5180
 11365  011CC2  0EE8               	movlw	232
 11366  011CC4  5C01               	subwf	?___almod^0,w,c
 11367  011CC6  0E03               	movlw	3
 11368  011CC8  5802               	subwfb	(?___almod+1)^0,w,c
 11369  011CCA  B0D8               	btfsc	status,0,c
 11370  011CCC  D019               	goto	l5180
 11371  011CCE                     u6450:
 11372                           
 11373                           ;main.c: 147:         sr = 4095;
 11374  011CCE  0EFF               	movlw	255
 11375  011CD0  0100               	movlb	0	; () banked
 11376  011CD2  6F96               	movwf	setLED@sr& (0+255),b
 11377  011CD4  0E0F               	movlw	15
 11378  011CD6  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11379  011CD8  0E00               	movlw	0
 11380  011CDA  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11381  011CDC  0E00               	movlw	0
 11382  011CDE  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11383                           
 11384                           ;main.c: 148:         sg = 0;
 11385  011CE0  0E00               	movlw	0
 11386  011CE2  6F8E               	movwf	setLED@sg& (0+255),b
 11387  011CE4  0E00               	movlw	0
 11388  011CE6  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11389  011CE8  0E00               	movlw	0
 11390  011CEA  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11391  011CEC  0E00               	movlw	0
 11392  011CEE  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11393                           
 11394                           ;main.c: 149:         sb = 0;
 11395  011CF0  0E00               	movlw	0
 11396  011CF2  6F92               	movwf	setLED@sb& (0+255),b
 11397  011CF4  0E00               	movlw	0
 11398  011CF6  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11399  011CF8  0E00               	movlw	0
 11400  011CFA  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11401  011CFC  0E00               	movlw	0
 11402  011CFE  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11403  011D00                     l5180:
 11404                           
 11405                           ;main.c: 152:     CCPR3H = sr >> 8;
 11406  011D00  0060  F25F  FF75   	movff	setLED@sr+1,16245	;volatile
 11407                           
 11408                           ;main.c: 153:     CCPR3L = sr & 0xff;
 11409  011D06  0060  F25B  FF74   	movff	setLED@sr,16244	;volatile
 11410                           
 11411                           ;main.c: 154:     CCPR2H = sg >> 8;
 11412  011D0C  0060  F23F  FF79   	movff	setLED@sg+1,16249	;volatile
 11413                           
 11414                           ;main.c: 155:     CCPR2L = sg & 0xff;
 11415  011D12  0060  F23B  FF78   	movff	setLED@sg,16248	;volatile
 11416                           
 11417                           ;main.c: 156:     CCPR4H = sb >> 8;
 11418  011D18  0060  F24F  FF71   	movff	setLED@sb+1,16241	;volatile
 11419                           
 11420                           ;main.c: 157:     CCPR4L = sb & 0xff;
 11421  011D1E  0060  F24B  FF70   	movff	setLED@sb,16240	;volatile
 11422  011D24  0012               	return		;funcret
 11423  011D26                     __end_of_setLED:
 11424                           	opt callstack 0
 11425                           
 11426 ;; *************** function ___lmul *****************
 11427 ;; Defined at:
 11428 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 11429 ;; Parameters:    Size  Location     Type
 11430 ;;  multiplier      4    0[COMRAM] unsigned long 
 11431 ;;  multiplicand    4    4[COMRAM] unsigned long 
 11432 ;; Auto vars:     Size  Location     Type
 11433 ;;  product         4    8[COMRAM] unsigned long 
 11434 ;; Return value:  Size  Location     Type
 11435 ;;                  4    0[COMRAM] unsigned long 
 11436 ;; Registers used:
 11437 ;;		wreg, status,2, status,0
 11438 ;; Tracked objects:
 11439 ;;		On entry : 3B/4
 11440 ;;		On exit  : 3B/0
 11441 ;;		Unchanged: 3B/0
 11442 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11443 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11444 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11446 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11447 ;;Total ram usage:       12 bytes
 11448 ;; Hardware stack levels used:    1
 11449 ;; This function calls:
 11450 ;;		Nothing
 11451 ;; This function is called by:
 11452 ;;		_setLED
 11453 ;;		_main_loop
 11454 ;; This function uses a non-reentrant model
 11455 ;;
 11456                           
 11457                           	psect	text38
 11458  014124                     __ptext38:
 11459                           	opt callstack 0
 11460  014124                     ___lmul:
 11461                           	opt callstack 28
 11462                           
 11463                           ;incstack = 0
 11464  014124  0E00               	movlw	0
 11465  014126  6E09               	movwf	___lmul@product^0,c
 11466  014128  0E00               	movlw	0
 11467  01412A  6E0A               	movwf	(___lmul@product+1)^0,c
 11468  01412C  0E00               	movlw	0
 11469  01412E  6E0B               	movwf	(___lmul@product+2)^0,c
 11470  014130  0E00               	movlw	0
 11471  014132  6E0C               	movwf	(___lmul@product+3)^0,c
 11472  014134                     l4976:
 11473  014134  A001               	btfss	___lmul@multiplier^0,0,c
 11474  014136  D008               	goto	l4980
 11475  014138  5005               	movf	___lmul@multiplicand^0,w,c
 11476  01413A  2609               	addwf	___lmul@product^0,f,c
 11477  01413C  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 11478  01413E  220A               	addwfc	(___lmul@product+1)^0,f,c
 11479  014140  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 11480  014142  220B               	addwfc	(___lmul@product+2)^0,f,c
 11481  014144  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 11482  014146  220C               	addwfc	(___lmul@product+3)^0,f,c
 11483  014148                     l4980:
 11484  014148  90D8               	bcf	status,0,c
 11485  01414A  3605               	rlcf	___lmul@multiplicand^0,f,c
 11486  01414C  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11487  01414E  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11488  014150  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11489  014152  90D8               	bcf	status,0,c
 11490  014154  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 11491  014156  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 11492  014158  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 11493  01415A  3201               	rrcf	___lmul@multiplier^0,f,c
 11494  01415C  5001               	movf	___lmul@multiplier^0,w,c
 11495  01415E  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 11496  014160  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 11497  014162  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 11498  014164  A4D8               	btfss	status,2,c
 11499  014166  D7E6               	goto	l4976
 11500  014168  0060  F024  F001   	movff	___lmul@product,?___lmul
 11501  01416E  0060  F028  F002   	movff	___lmul@product+1,?___lmul+1
 11502  014174  0060  F02C  F003   	movff	___lmul@product+2,?___lmul+2
 11503  01417A  0060  F030  F004   	movff	___lmul@product+3,?___lmul+3
 11504  014180  0012               	return		;funcret
 11505  014182                     __end_of___lmul:
 11506                           	opt callstack 0
 11507                           
 11508 ;; *************** function ___flge *****************
 11509 ;; Defined at:
 11510 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11511 ;; Parameters:    Size  Location     Type
 11512 ;;  ff1             4   80[COMRAM] unsigned long 
 11513 ;;  ff2             4   84[COMRAM] unsigned long 
 11514 ;; Auto vars:     Size  Location     Type
 11515 ;;		None
 11516 ;; Return value:  Size  Location     Type
 11517 ;;		None               void
 11518 ;; Registers used:
 11519 ;;		wreg, status,2, status,0
 11520 ;; Tracked objects:
 11521 ;;		On entry : 0/4
 11522 ;;		On exit  : 0/0
 11523 ;;		Unchanged: 0/0
 11524 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11525 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11527 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11528 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11529 ;;Total ram usage:       12 bytes
 11530 ;; Hardware stack levels used:    1
 11531 ;; This function calls:
 11532 ;;		Nothing
 11533 ;; This function is called by:
 11534 ;;		_setLED
 11535 ;;		_main_loop
 11536 ;;		_efgtoa
 11537 ;; This function uses a non-reentrant model
 11538 ;;
 11539                           
 11540                           	psect	text39
 11541  0136B0                     __ptext39:
 11542                           	opt callstack 0
 11543  0136B0                     ___flge:
 11544                           	opt callstack 25
 11545                           
 11546                           ;incstack = 0
 11547  0136B0  0E00               	movlw	0
 11548  0136B2  1451               	andwf	___flge@ff1^0,w,c
 11549  0136B4  6E59               	movwf	??___flge^0,c
 11550  0136B6  0E00               	movlw	0
 11551  0136B8  1452               	andwf	(___flge@ff1+1)^0,w,c
 11552  0136BA  6E5A               	movwf	(??___flge+1)^0,c
 11553  0136BC  0E80               	movlw	128
 11554  0136BE  1453               	andwf	(___flge@ff1+2)^0,w,c
 11555  0136C0  6E5B               	movwf	(??___flge+2)^0,c
 11556  0136C2  0E7F               	movlw	127
 11557  0136C4  1454               	andwf	(___flge@ff1+3)^0,w,c
 11558  0136C6  6E5C               	movwf	(??___flge+3)^0,c
 11559  0136C8  5059               	movf	??___flge^0,w,c
 11560  0136CA  105A               	iorwf	(??___flge+1)^0,w,c
 11561  0136CC  105B               	iorwf	(??___flge+2)^0,w,c
 11562  0136CE  105C               	iorwf	(??___flge+3)^0,w,c
 11563  0136D0  A4D8               	btfss	status,2,c
 11564  0136D2  D008               	goto	l4320
 11565  0136D4  0E00               	movlw	0
 11566  0136D6  6E51               	movwf	___flge@ff1^0,c
 11567  0136D8  0E00               	movlw	0
 11568  0136DA  6E52               	movwf	(___flge@ff1+1)^0,c
 11569  0136DC  0E00               	movlw	0
 11570  0136DE  6E53               	movwf	(___flge@ff1+2)^0,c
 11571  0136E0  0E00               	movlw	0
 11572  0136E2  6E54               	movwf	(___flge@ff1+3)^0,c
 11573  0136E4                     l4320:
 11574  0136E4  0E00               	movlw	0
 11575  0136E6  1455               	andwf	___flge@ff2^0,w,c
 11576  0136E8  6E59               	movwf	??___flge^0,c
 11577  0136EA  0E00               	movlw	0
 11578  0136EC  1456               	andwf	(___flge@ff2+1)^0,w,c
 11579  0136EE  6E5A               	movwf	(??___flge+1)^0,c
 11580  0136F0  0E80               	movlw	128
 11581  0136F2  1457               	andwf	(___flge@ff2+2)^0,w,c
 11582  0136F4  6E5B               	movwf	(??___flge+2)^0,c
 11583  0136F6  0E7F               	movlw	127
 11584  0136F8  1458               	andwf	(___flge@ff2+3)^0,w,c
 11585  0136FA  6E5C               	movwf	(??___flge+3)^0,c
 11586  0136FC  5059               	movf	??___flge^0,w,c
 11587  0136FE  105A               	iorwf	(??___flge+1)^0,w,c
 11588  013700  105B               	iorwf	(??___flge+2)^0,w,c
 11589  013702  105C               	iorwf	(??___flge+3)^0,w,c
 11590  013704  A4D8               	btfss	status,2,c
 11591  013706  D008               	goto	l4324
 11592  013708  0E00               	movlw	0
 11593  01370A  6E55               	movwf	___flge@ff2^0,c
 11594  01370C  0E00               	movlw	0
 11595  01370E  6E56               	movwf	(___flge@ff2+1)^0,c
 11596  013710  0E00               	movlw	0
 11597  013712  6E57               	movwf	(___flge@ff2+2)^0,c
 11598  013714  0E00               	movlw	0
 11599  013716  6E58               	movwf	(___flge@ff2+3)^0,c
 11600  013718                     l4324:
 11601  013718  AE54               	btfss	(___flge@ff1+3)^0,7,c
 11602  01371A  D009               	goto	l4328
 11603  01371C  6C51               	negf	___flge@ff1^0,c
 11604  01371E  1E52               	comf	(___flge@ff1+1)^0,f,c
 11605  013720  B0D8               	btfsc	status,0,c
 11606  013722  2A52               	incf	(___flge@ff1+1)^0,f,c
 11607  013724  1E53               	comf	(___flge@ff1+2)^0,f,c
 11608  013726  B0D8               	btfsc	status,0,c
 11609  013728  2A53               	incf	(___flge@ff1+2)^0,f,c
 11610  01372A  0E80               	movlw	128
 11611  01372C  5654               	subfwb	(___flge@ff1+3)^0,f,c
 11612  01372E                     l4328:
 11613  01372E  AE58               	btfss	(___flge@ff2+3)^0,7,c
 11614  013730  D009               	goto	l995
 11615  013732  6C55               	negf	___flge@ff2^0,c
 11616  013734  1E56               	comf	(___flge@ff2+1)^0,f,c
 11617  013736  B0D8               	btfsc	status,0,c
 11618  013738  2A56               	incf	(___flge@ff2+1)^0,f,c
 11619  01373A  1E57               	comf	(___flge@ff2+2)^0,f,c
 11620  01373C  B0D8               	btfsc	status,0,c
 11621  01373E  2A57               	incf	(___flge@ff2+2)^0,f,c
 11622  013740  0E80               	movlw	128
 11623  013742  5658               	subfwb	(___flge@ff2+3)^0,f,c
 11624  013744                     l995:
 11625  013744  0E00               	movlw	0
 11626  013746  1A51               	xorwf	___flge@ff1^0,f,c
 11627  013748  0E00               	movlw	0
 11628  01374A  1A52               	xorwf	(___flge@ff1+1)^0,f,c
 11629  01374C  0E00               	movlw	0
 11630  01374E  1A53               	xorwf	(___flge@ff1+2)^0,f,c
 11631  013750  0E80               	movlw	128
 11632  013752  1A54               	xorwf	(___flge@ff1+3)^0,f,c
 11633  013754  0E00               	movlw	0
 11634  013756  1A55               	xorwf	___flge@ff2^0,f,c
 11635  013758  0E00               	movlw	0
 11636  01375A  1A56               	xorwf	(___flge@ff2+1)^0,f,c
 11637  01375C  0E00               	movlw	0
 11638  01375E  1A57               	xorwf	(___flge@ff2+2)^0,f,c
 11639  013760  0E80               	movlw	128
 11640  013762  1A58               	xorwf	(___flge@ff2+3)^0,f,c
 11641  013764  5055               	movf	___flge@ff2^0,w,c
 11642  013766  5C51               	subwf	___flge@ff1^0,w,c
 11643  013768  5056               	movf	(___flge@ff2+1)^0,w,c
 11644  01376A  5852               	subwfb	(___flge@ff1+1)^0,w,c
 11645  01376C  5057               	movf	(___flge@ff2+2)^0,w,c
 11646  01376E  5853               	subwfb	(___flge@ff1+2)^0,w,c
 11647  013770  5058               	movf	(___flge@ff2+3)^0,w,c
 11648  013772  5854               	subwfb	(___flge@ff1+3)^0,w,c
 11649  013774  B0D8               	btfsc	status,0,c
 11650  013776  D002               	goto	l4334
 11651  013778  90D8               	bcf	status,0,c
 11652  01377A  0012               	return	
 11653  01377C                     l4334:
 11654  01377C  80D8               	bsf	status,0,c
 11655  01377E  0012               	return		;funcret
 11656  013780                     __end_of___flge:
 11657                           	opt callstack 0
 11658                           
 11659 ;; *************** function ___almod *****************
 11660 ;; Defined at:
 11661 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
 11662 ;; Parameters:    Size  Location     Type
 11663 ;;  dividend        4    0[COMRAM] long 
 11664 ;;  divisor         4    4[COMRAM] long 
 11665 ;; Auto vars:     Size  Location     Type
 11666 ;;  sign            1    9[COMRAM] unsigned char 
 11667 ;;  counter         1    8[COMRAM] unsigned char 
 11668 ;; Return value:  Size  Location     Type
 11669 ;;                  4    0[COMRAM] long 
 11670 ;; Registers used:
 11671 ;;		wreg, status,2, status,0
 11672 ;; Tracked objects:
 11673 ;;		On entry : 0/0
 11674 ;;		On exit  : 0/0
 11675 ;;		Unchanged: 0/0
 11676 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11677 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11680 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11681 ;;Total ram usage:       10 bytes
 11682 ;; Hardware stack levels used:    1
 11683 ;; This function calls:
 11684 ;;		Nothing
 11685 ;; This function is called by:
 11686 ;;		_setLED
 11687 ;; This function uses a non-reentrant model
 11688 ;;
 11689                           
 11690                           	psect	text40
 11691  0138FE                     __ptext40:
 11692                           	opt callstack 0
 11693  0138FE                     ___almod:
 11694                           	opt callstack 28
 11695                           
 11696                           ;incstack = 0
 11697  0138FE  0E00               	movlw	0
 11698  013900  6E0A               	movwf	___almod@sign^0,c
 11699  013902  AE04               	btfss	(___almod@dividend+3)^0,7,c
 11700  013904  D00A               	goto	l5036
 11701  013906  1E04               	comf	(___almod@dividend+3)^0,f,c
 11702  013908  1E03               	comf	(___almod@dividend+2)^0,f,c
 11703  01390A  1E02               	comf	(___almod@dividend+1)^0,f,c
 11704  01390C  6C01               	negf	___almod@dividend^0,c
 11705  01390E  0E00               	movlw	0
 11706  013910  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11707  013912  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11708  013914  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11709  013916  0E01               	movlw	1
 11710  013918  6E0A               	movwf	___almod@sign^0,c
 11711  01391A                     l5036:
 11712  01391A  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11713  01391C  D008               	goto	l5040
 11714  01391E  1E08               	comf	(___almod@divisor+3)^0,f,c
 11715  013920  1E07               	comf	(___almod@divisor+2)^0,f,c
 11716  013922  1E06               	comf	(___almod@divisor+1)^0,f,c
 11717  013924  6C05               	negf	___almod@divisor^0,c
 11718  013926  0E00               	movlw	0
 11719  013928  2206               	addwfc	(___almod@divisor+1)^0,f,c
 11720  01392A  2207               	addwfc	(___almod@divisor+2)^0,f,c
 11721  01392C  2208               	addwfc	(___almod@divisor+3)^0,f,c
 11722  01392E                     l5040:
 11723  01392E  5005               	movf	___almod@divisor^0,w,c
 11724  013930  1006               	iorwf	(___almod@divisor+1)^0,w,c
 11725  013932  1007               	iorwf	(___almod@divisor+2)^0,w,c
 11726  013934  1008               	iorwf	(___almod@divisor+3)^0,w,c
 11727  013936  B4D8               	btfsc	status,2,c
 11728  013938  D024               	goto	l5056
 11729  01393A  0E01               	movlw	1
 11730  01393C  6E09               	movwf	___almod@counter^0,c
 11731  01393E  D006               	goto	l5046
 11732  013940                     l5044:
 11733  013940  90D8               	bcf	status,0,c
 11734  013942  3605               	rlcf	___almod@divisor^0,f,c
 11735  013944  3606               	rlcf	(___almod@divisor+1)^0,f,c
 11736  013946  3607               	rlcf	(___almod@divisor+2)^0,f,c
 11737  013948  3608               	rlcf	(___almod@divisor+3)^0,f,c
 11738  01394A  2A09               	incf	___almod@counter^0,f,c
 11739  01394C                     l5046:
 11740  01394C  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11741  01394E  D7F8               	goto	l5044
 11742  013950                     u6230:
 11743  013950  5005               	movf	___almod@divisor^0,w,c
 11744  013952  5C01               	subwf	___almod@dividend^0,w,c
 11745  013954  5006               	movf	(___almod@divisor+1)^0,w,c
 11746  013956  5802               	subwfb	(___almod@dividend+1)^0,w,c
 11747  013958  5007               	movf	(___almod@divisor+2)^0,w,c
 11748  01395A  5803               	subwfb	(___almod@dividend+2)^0,w,c
 11749  01395C  5008               	movf	(___almod@divisor+3)^0,w,c
 11750  01395E  5804               	subwfb	(___almod@dividend+3)^0,w,c
 11751  013960  A0D8               	btfss	status,0,c
 11752  013962  D008               	goto	l5052
 11753  013964  5005               	movf	___almod@divisor^0,w,c
 11754  013966  5E01               	subwf	___almod@dividend^0,f,c
 11755  013968  5006               	movf	(___almod@divisor+1)^0,w,c
 11756  01396A  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 11757  01396C  5007               	movf	(___almod@divisor+2)^0,w,c
 11758  01396E  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 11759  013970  5008               	movf	(___almod@divisor+3)^0,w,c
 11760  013972  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 11761  013974                     l5052:
 11762  013974  90D8               	bcf	status,0,c
 11763  013976  3208               	rrcf	(___almod@divisor+3)^0,f,c
 11764  013978  3207               	rrcf	(___almod@divisor+2)^0,f,c
 11765  01397A  3206               	rrcf	(___almod@divisor+1)^0,f,c
 11766  01397C  3205               	rrcf	___almod@divisor^0,f,c
 11767  01397E  2E09               	decfsz	___almod@counter^0,f,c
 11768  013980  D7E7               	goto	u6230
 11769  013982                     l5056:
 11770  013982  500A               	movf	___almod@sign^0,w,c
 11771  013984  B4D8               	btfsc	status,2,c
 11772  013986  D008               	goto	l5060
 11773  013988  1E04               	comf	(___almod@dividend+3)^0,f,c
 11774  01398A  1E03               	comf	(___almod@dividend+2)^0,f,c
 11775  01398C  1E02               	comf	(___almod@dividend+1)^0,f,c
 11776  01398E  6C01               	negf	___almod@dividend^0,c
 11777  013990  0E00               	movlw	0
 11778  013992  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11779  013994  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11780  013996  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11781  013998                     l5060:
 11782  013998  0060  F004  F001   	movff	___almod@dividend,?___almod
 11783  01399E  0060  F008  F002   	movff	___almod@dividend+1,?___almod+1
 11784  0139A4  0060  F00C  F003   	movff	___almod@dividend+2,?___almod+2
 11785  0139AA  0060  F010  F004   	movff	___almod@dividend+3,?___almod+3
 11786  0139B0  0012               	return		;funcret
 11787  0139B2                     __end_of___almod:
 11788                           	opt callstack 0
 11789                           
 11790 ;; *************** function ___aldiv *****************
 11791 ;; Defined at:
 11792 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11793 ;; Parameters:    Size  Location     Type
 11794 ;;  dividend        4   12[COMRAM] long 
 11795 ;;  divisor         4   16[COMRAM] long 
 11796 ;; Auto vars:     Size  Location     Type
 11797 ;;  quotient        4   22[COMRAM] long 
 11798 ;;  sign            1   21[COMRAM] unsigned char 
 11799 ;;  counter         1   20[COMRAM] unsigned char 
 11800 ;; Return value:  Size  Location     Type
 11801 ;;                  4   12[COMRAM] long 
 11802 ;; Registers used:
 11803 ;;		wreg, status,2, status,0
 11804 ;; Tracked objects:
 11805 ;;		On entry : 3B/4
 11806 ;;		On exit  : 3B/0
 11807 ;;		Unchanged: 3B/0
 11808 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11809 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11810 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11812 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11813 ;;Total ram usage:       14 bytes
 11814 ;; Hardware stack levels used:    1
 11815 ;; This function calls:
 11816 ;;		Nothing
 11817 ;; This function is called by:
 11818 ;;		_updateButtonLight
 11819 ;;		_setLED
 11820 ;; This function uses a non-reentrant model
 11821 ;;
 11822                           
 11823                           	psect	text41
 11824  0135DC                     __ptext41:
 11825                           	opt callstack 0
 11826  0135DC                     ___aldiv:
 11827                           	opt callstack 28
 11828                           
 11829                           ;incstack = 0
 11830  0135DC  0E00               	movlw	0
 11831  0135DE  6E16               	movwf	___aldiv@sign^0,c
 11832  0135E0  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11833  0135E2  D00A               	goto	l4992
 11834  0135E4  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 11835  0135E6  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 11836  0135E8  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 11837  0135EA  6C11               	negf	___aldiv@divisor^0,c
 11838  0135EC  0E00               	movlw	0
 11839  0135EE  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 11840  0135F0  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 11841  0135F2  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 11842  0135F4  0E01               	movlw	1
 11843  0135F6  6E16               	movwf	___aldiv@sign^0,c
 11844  0135F8                     l4992:
 11845  0135F8  AE10               	btfss	(___aldiv@dividend+3)^0,7,c
 11846  0135FA  D00A               	goto	l4998
 11847  0135FC  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 11848  0135FE  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 11849  013600  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 11850  013602  6C0D               	negf	___aldiv@dividend^0,c
 11851  013604  0E00               	movlw	0
 11852  013606  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 11853  013608  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 11854  01360A  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 11855  01360C  0E01               	movlw	1
 11856  01360E  1A16               	xorwf	___aldiv@sign^0,f,c
 11857  013610                     l4998:
 11858  013610  0E00               	movlw	0
 11859  013612  6E17               	movwf	___aldiv@quotient^0,c
 11860  013614  0E00               	movlw	0
 11861  013616  6E18               	movwf	(___aldiv@quotient+1)^0,c
 11862  013618  0E00               	movlw	0
 11863  01361A  6E19               	movwf	(___aldiv@quotient+2)^0,c
 11864  01361C  0E00               	movlw	0
 11865  01361E  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 11866  013620  5011               	movf	___aldiv@divisor^0,w,c
 11867  013622  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 11868  013624  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 11869  013626  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 11870  013628  B4D8               	btfsc	status,2,c
 11871  01362A  D02A               	goto	l5020
 11872  01362C  0E01               	movlw	1
 11873  01362E  6E15               	movwf	___aldiv@counter^0,c
 11874  013630  D006               	goto	l5006
 11875  013632                     l5004:
 11876  013632  90D8               	bcf	status,0,c
 11877  013634  3611               	rlcf	___aldiv@divisor^0,f,c
 11878  013636  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 11879  013638  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 11880  01363A  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 11881  01363C  2A15               	incf	___aldiv@counter^0,f,c
 11882  01363E                     l5006:
 11883  01363E  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11884  013640  D7F8               	goto	l5004
 11885  013642                     u6170:
 11886  013642  90D8               	bcf	status,0,c
 11887  013644  3617               	rlcf	___aldiv@quotient^0,f,c
 11888  013646  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 11889  013648  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 11890  01364A  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 11891  01364C  5011               	movf	___aldiv@divisor^0,w,c
 11892  01364E  5C0D               	subwf	___aldiv@dividend^0,w,c
 11893  013650  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11894  013652  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 11895  013654  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11896  013656  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 11897  013658  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11898  01365A  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 11899  01365C  A0D8               	btfss	status,0,c
 11900  01365E  D009               	goto	l5016
 11901  013660  5011               	movf	___aldiv@divisor^0,w,c
 11902  013662  5E0D               	subwf	___aldiv@dividend^0,f,c
 11903  013664  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11904  013666  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 11905  013668  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11906  01366A  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 11907  01366C  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11908  01366E  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 11909  013670  8017               	bsf	___aldiv@quotient^0,0,c
 11910  013672                     l5016:
 11911  013672  90D8               	bcf	status,0,c
 11912  013674  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 11913  013676  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 11914  013678  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 11915  01367A  3211               	rrcf	___aldiv@divisor^0,f,c
 11916  01367C  2E15               	decfsz	___aldiv@counter^0,f,c
 11917  01367E  D7E1               	goto	u6170
 11918  013680                     l5020:
 11919  013680  5016               	movf	___aldiv@sign^0,w,c
 11920  013682  B4D8               	btfsc	status,2,c
 11921  013684  D008               	goto	l5024
 11922  013686  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 11923  013688  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 11924  01368A  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 11925  01368C  6C17               	negf	___aldiv@quotient^0,c
 11926  01368E  0E00               	movlw	0
 11927  013690  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 11928  013692  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 11929  013694  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 11930  013696                     l5024:
 11931  013696  0060  F05C  F00D   	movff	___aldiv@quotient,?___aldiv
 11932  01369C  0060  F060  F00E   	movff	___aldiv@quotient+1,?___aldiv+1
 11933  0136A2  0060  F064  F00F   	movff	___aldiv@quotient+2,?___aldiv+2
 11934  0136A8  0060  F068  F010   	movff	___aldiv@quotient+3,?___aldiv+3
 11935  0136AE  0012               	return		;funcret
 11936  0136B0                     __end_of___aldiv:
 11937                           	opt callstack 0
 11938                           
 11939 ;; *************** function _lcd_set_data_addr *****************
 11940 ;; Defined at:
 11941 ;;		line 39 in file "char_lcd.c"
 11942 ;; Parameters:    Size  Location     Type
 11943 ;;  addr            1    wreg     unsigned char 
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;  addr            1    4[COMRAM] unsigned char 
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  1    wreg      void 
 11948 ;; Registers used:
 11949 ;;		wreg, status,2, status,0, cstack
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/3B
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11956 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11958 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11959 ;;Total ram usage:        1 bytes
 11960 ;; Hardware stack levels used:    1
 11961 ;; Hardware stack levels required when called:    1
 11962 ;; This function calls:
 11963 ;;		_lcd_write
 11964 ;; This function is called by:
 11965 ;;		_main_loop
 11966 ;; This function uses a non-reentrant model
 11967 ;;
 11968                           
 11969                           	psect	text42
 11970  014448                     __ptext42:
 11971                           	opt callstack 0
 11972  014448                     _lcd_set_data_addr:
 11973                           	opt callstack 28
 11974                           
 11975                           ;incstack = 0
 11976                           ;lcd_set_data_addr@addr stored from wreg
 11977  014448  6E05               	movwf	lcd_set_data_addr@addr^0,c
 11978                           
 11979                           ;char_lcd.c: 40:     lcd_write(0, 0b10000000 | (addr & 0b01111111), 0);
 11980  01444A  5005               	movf	lcd_set_data_addr@addr^0,w,c
 11981  01444C  0B7F               	andlw	127
 11982  01444E  0980               	iorlw	128
 11983  014450  6E01               	movwf	lcd_write@data^0,c
 11984  014452  0E00               	movlw	0
 11985  014454  6E02               	movwf	lcd_write@longdelay^0,c
 11986  014456  0E00               	movlw	0
 11987  014458  EC19  F0A1         	call	_lcd_write
 11988  01445C  0012               	return		;funcret
 11989  01445E                     __end_of_lcd_set_data_addr:
 11990                           	opt callstack 0
 11991                           
 11992 ;; *************** function _lcd_print *****************
 11993 ;; Defined at:
 11994 ;;		line 54 in file "char_lcd.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;  string          2    4[COMRAM] PTR unsigned char 
 11997 ;;		 -> STR_14(13), main_loop@batmsg(17), STR_6(17), STR_5(17), 
 11998 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 11999 ;; Auto vars:     Size  Location     Type
 12000 ;;  i               1    8[COMRAM] unsigned char 
 12001 ;; Return value:  Size  Location     Type
 12002 ;;                  1    wreg      void 
 12003 ;; Registers used:
 12004 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12005 ;; Tracked objects:
 12006 ;;		On entry : 0/3F
 12007 ;;		On exit  : 0/0
 12008 ;;		Unchanged: 0/0
 12009 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12010 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12011 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12012 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12013 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12014 ;;Total ram usage:        5 bytes
 12015 ;; Hardware stack levels used:    1
 12016 ;; Hardware stack levels required when called:    1
 12017 ;; This function calls:
 12018 ;;		_lcd_write
 12019 ;; This function is called by:
 12020 ;;		_main_loop
 12021 ;;		_main
 12022 ;; This function uses a non-reentrant model
 12023 ;;
 12024                           
 12025                           	psect	text43
 12026  013B8C                     __ptext43:
 12027                           	opt callstack 0
 12028  013B8C                     _lcd_print:
 12029                           	opt callstack 28
 12030                           
 12031                           ;char_lcd.c: 55:     uint8_t i = 0;
 12032                           
 12033                           ;incstack = 0
 12034  013B8C  0E00               	movlw	0
 12035  013B8E  6E09               	movwf	lcd_print@i^0,c
 12036                           
 12037                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 12038  013B90  D022               	goto	l5200
 12039  013B92                     l5196:
 12040                           
 12041                           ;char_lcd.c: 57:         lcd_write(1, string[i++], 0);
 12042  013B92  5009               	movf	lcd_print@i^0,w,c
 12043  013B94  2405               	addwf	lcd_print@string^0,w,c
 12044  013B96  6E07               	movwf	??_lcd_print^0,c
 12045  013B98  0E00               	movlw	0
 12046  013B9A  2006               	addwfc	(lcd_print@string+1)^0,w,c
 12047  013B9C  6E08               	movwf	(??_lcd_print+1)^0,c
 12048  013B9E  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 12049  013BA4  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 12050  013BAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12051  013BAC  6EF8               	movwf	tblptru,c
 12052  013BAE  0E1F               	movlw	(high __ramtop+-1)
 12053  013BB0  64F7               	cpfsgt	tblptrh,c
 12054  013BB2  D003               	bra	u6467
 12055  013BB4  0008               	tblrd		*
 12056  013BB6  50F5               	movf	tablat,w,c
 12057  013BB8  D007               	bra	u6460
 12058  013BBA                     u6467:
 12059  013BBA  006F FFDB FFE1     	movff	tblptrl,fsr1l
 12060  013BC0  006F FFDF FFE2     	movff	tblptrh,fsr1h
 12061  013BC6  50E7               	movf	indf1,w,c
 12062  013BC8                     u6460:
 12063  013BC8  6E01               	movwf	lcd_write@data^0,c
 12064  013BCA  0E00               	movlw	0
 12065  013BCC  6E02               	movwf	lcd_write@longdelay^0,c
 12066  013BCE  0E01               	movlw	1
 12067  013BD0  EC19  F0A1         	call	_lcd_write
 12068  013BD4  2A09               	incf	lcd_print@i^0,f,c
 12069  013BD6                     l5200:
 12070                           
 12071                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 12072  013BD6  5009               	movf	lcd_print@i^0,w,c
 12073  013BD8  2405               	addwf	lcd_print@string^0,w,c
 12074  013BDA  6E07               	movwf	??_lcd_print^0,c
 12075  013BDC  0E00               	movlw	0
 12076  013BDE  2006               	addwfc	(lcd_print@string+1)^0,w,c
 12077  013BE0  6E08               	movwf	(??_lcd_print+1)^0,c
 12078  013BE2  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 12079  013BE8  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 12080  013BEE  0E00               	movlw	low (__mediumconst shr (0+16))
 12081  013BF0  6EF8               	movwf	tblptru,c
 12082  013BF2  0E1F               	movlw	(high __ramtop+-1)
 12083  013BF4  64F7               	cpfsgt	tblptrh,c
 12084  013BF6  D003               	bra	u6477
 12085  013BF8  0008               	tblrd		*
 12086  013BFA  50F5               	movf	tablat,w,c
 12087  013BFC  D007               	bra	u6470
 12088  013BFE                     u6477:
 12089  013BFE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 12090  013C04  006F FFDF FFE2     	movff	tblptrh,fsr1h
 12091  013C0A  50E7               	movf	indf1,w,c
 12092  013C0C                     u6470:
 12093  013C0C  0900               	iorlw	0
 12094  013C0E  B4D8               	btfsc	status,2,c
 12095  013C10  0012               	return	
 12096  013C12  2809               	incf	lcd_print@i^0,w,c
 12097  013C14  B4D8               	btfsc	status,2,c
 12098  013C16  0012               	return	
 12099  013C18  D7BC               	goto	l5196
 12100  013C1A                     __end_of_lcd_print:
 12101                           	opt callstack 0
 12102                           
 12103 ;; *************** function ___xxtofl *****************
 12104 ;; Defined at:
 12105 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12106 ;; Parameters:    Size  Location     Type
 12107 ;;  sign            1    wreg     unsigned char 
 12108 ;;  val             4    0[COMRAM] long 
 12109 ;; Auto vars:     Size  Location     Type
 12110 ;;  sign            1    8[COMRAM] unsigned char 
 12111 ;;  arg             4   10[COMRAM] unsigned long 
 12112 ;;  exp             1    9[COMRAM] unsigned char 
 12113 ;; Return value:  Size  Location     Type
 12114 ;;                  4    0[COMRAM] unsigned char 
 12115 ;; Registers used:
 12116 ;;		wreg, status,2, status,0
 12117 ;; Tracked objects:
 12118 ;;		On entry : 0/4
 12119 ;;		On exit  : 0/0
 12120 ;;		Unchanged: 0/0
 12121 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12122 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12123 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12124 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12125 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12126 ;;Total ram usage:       14 bytes
 12127 ;; Hardware stack levels used:    1
 12128 ;; This function calls:
 12129 ;;		Nothing
 12130 ;; This function is called by:
 12131 ;;		_main_loop
 12132 ;; This function uses a non-reentrant model
 12133 ;;
 12134                           
 12135                           	psect	text44
 12136  01319A                     __ptext44:
 12137                           	opt callstack 0
 12138  01319A                     ___xxtofl:
 12139                           	opt callstack 29
 12140                           
 12141                           ;incstack = 0
 12142                           ;___xxtofl@sign stored from wreg
 12143  01319A  6E09               	movwf	___xxtofl@sign^0,c
 12144  01319C  5009               	movf	___xxtofl@sign^0,w,c
 12145  01319E  A4D8               	btfss	status,2,c
 12146  0131A0  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 12147  0131A2  D022               	goto	l1385
 12148  0131A4  0060  F004  F005   	movff	___xxtofl@val,??___xxtofl
 12149  0131AA  0060  F008  F006   	movff	___xxtofl@val+1,??___xxtofl+1
 12150  0131B0  0060  F00C  F007   	movff	___xxtofl@val+2,??___xxtofl+2
 12151  0131B6  0060  F010  F008   	movff	___xxtofl@val+3,??___xxtofl+3
 12152  0131BC  1E05               	comf	??___xxtofl^0,f,c
 12153  0131BE  1E06               	comf	(??___xxtofl+1)^0,f,c
 12154  0131C0  1E07               	comf	(??___xxtofl+2)^0,f,c
 12155  0131C2  1E08               	comf	(??___xxtofl+3)^0,f,c
 12156  0131C4  2A05               	incf	??___xxtofl^0,f,c
 12157  0131C6  0E00               	movlw	0
 12158  0131C8  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12159  0131CA  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12160  0131CC  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12161  0131CE  0060  F014  F00B   	movff	??___xxtofl,___xxtofl@arg
 12162  0131D4  0060  F018  F00C   	movff	??___xxtofl+1,___xxtofl@arg+1
 12163  0131DA  0060  F01C  F00D   	movff	??___xxtofl+2,___xxtofl@arg+2
 12164  0131E0  0060  F020  F00E   	movff	??___xxtofl+3,___xxtofl@arg+3
 12165  0131E6  D00C               	goto	l5346
 12166  0131E8                     l1385:
 12167  0131E8  0060  F004  F00B   	movff	___xxtofl@val,___xxtofl@arg
 12168  0131EE  0060  F008  F00C   	movff	___xxtofl@val+1,___xxtofl@arg+1
 12169  0131F4  0060  F00C  F00D   	movff	___xxtofl@val+2,___xxtofl@arg+2
 12170  0131FA  0060  F010  F00E   	movff	___xxtofl@val+3,___xxtofl@arg+3
 12171  013200                     l5346:
 12172  013200  5001               	movf	___xxtofl@val^0,w,c
 12173  013202  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12174  013204  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12175  013206  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12176  013208  A4D8               	btfss	status,2,c
 12177  01320A  D009               	goto	l5352
 12178  01320C  0E00               	movlw	0
 12179  01320E  6E01               	movwf	?___xxtofl^0,c
 12180  013210  0E00               	movlw	0
 12181  013212  6E02               	movwf	(?___xxtofl+1)^0,c
 12182  013214  0E00               	movlw	0
 12183  013216  6E03               	movwf	(?___xxtofl+2)^0,c
 12184  013218  0E00               	movlw	0
 12185  01321A  6E04               	movwf	(?___xxtofl+3)^0,c
 12186  01321C  0012               	return	
 12187  01321E                     l5352:
 12188  01321E  0E96               	movlw	150
 12189  013220  6E0A               	movwf	___xxtofl@exp^0,c
 12190  013222  D006               	goto	l5356
 12191  013224                     l5354:
 12192  013224  2A0A               	incf	___xxtofl@exp^0,f,c
 12193  013226  90D8               	bcf	status,0,c
 12194  013228  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12195  01322A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12196  01322C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12197  01322E  320B               	rrcf	___xxtofl@arg^0,f,c
 12198  013230                     l5356:
 12199  013230  0E00               	movlw	0
 12200  013232  140B               	andwf	___xxtofl@arg^0,w,c
 12201  013234  6E05               	movwf	??___xxtofl^0,c
 12202  013236  0E00               	movlw	0
 12203  013238  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12204  01323A  6E06               	movwf	(??___xxtofl+1)^0,c
 12205  01323C  0E00               	movlw	0
 12206  01323E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12207  013240  6E07               	movwf	(??___xxtofl+2)^0,c
 12208  013242  0EFE               	movlw	254
 12209  013244  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12210  013246  6E08               	movwf	(??___xxtofl+3)^0,c
 12211  013248  5005               	movf	??___xxtofl^0,w,c
 12212  01324A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12213  01324C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12214  01324E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12215  013250  B4D8               	btfsc	status,2,c
 12216  013252  D00D               	goto	l1392
 12217  013254  D7E7               	goto	l5354
 12218  013256                     l5358:
 12219  013256  2A0A               	incf	___xxtofl@exp^0,f,c
 12220  013258  0E01               	movlw	1
 12221  01325A  260B               	addwf	___xxtofl@arg^0,f,c
 12222  01325C  0E00               	movlw	0
 12223  01325E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12224  013260  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12225  013262  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12226  013264  90D8               	bcf	status,0,c
 12227  013266  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12228  013268  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12229  01326A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12230  01326C  320B               	rrcf	___xxtofl@arg^0,f,c
 12231  01326E                     l1392:
 12232  01326E  0E00               	movlw	0
 12233  013270  140B               	andwf	___xxtofl@arg^0,w,c
 12234  013272  6E05               	movwf	??___xxtofl^0,c
 12235  013274  0E00               	movlw	0
 12236  013276  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12237  013278  6E06               	movwf	(??___xxtofl+1)^0,c
 12238  01327A  0E00               	movlw	0
 12239  01327C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12240  01327E  6E07               	movwf	(??___xxtofl+2)^0,c
 12241  013280  0EFF               	movlw	255
 12242  013282  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12243  013284  6E08               	movwf	(??___xxtofl+3)^0,c
 12244  013286  5005               	movf	??___xxtofl^0,w,c
 12245  013288  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12246  01328A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12247  01328C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12248  01328E  B4D8               	btfsc	status,2,c
 12249  013290  D007               	goto	l5366
 12250  013292  D7E1               	goto	l5358
 12251  013294                     l5364:
 12252  013294  060A               	decf	___xxtofl@exp^0,f,c
 12253  013296  90D8               	bcf	status,0,c
 12254  013298  360B               	rlcf	___xxtofl@arg^0,f,c
 12255  01329A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12256  01329C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12257  01329E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12258  0132A0                     l5366:
 12259  0132A0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12260  0132A2  D003               	goto	u6750
 12261  0132A4  0E02               	movlw	2
 12262  0132A6  600A               	cpfslt	___xxtofl@exp^0,c
 12263  0132A8  D7F5               	goto	l5364
 12264  0132AA                     u6750:
 12265  0132AA  A00A               	btfss	___xxtofl@exp^0,0,c
 12266  0132AC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12267  0132AE  90D8               	bcf	status,0,c
 12268  0132B0  320A               	rrcf	___xxtofl@exp^0,f,c
 12269  0132B2  0060  F028  F005   	movff	___xxtofl@exp,??___xxtofl
 12270  0132B8  6A06               	clrf	(??___xxtofl+1)^0,c
 12271  0132BA  6A07               	clrf	(??___xxtofl+2)^0,c
 12272  0132BC  6A08               	clrf	(??___xxtofl+3)^0,c
 12273  0132BE  0060  F014  F008   	movff	??___xxtofl,??___xxtofl+3
 12274  0132C4  6A07               	clrf	(??___xxtofl+2)^0,c
 12275  0132C6  6A06               	clrf	(??___xxtofl+1)^0,c
 12276  0132C8  6A05               	clrf	??___xxtofl^0,c
 12277  0132CA  5005               	movf	??___xxtofl^0,w,c
 12278  0132CC  120B               	iorwf	___xxtofl@arg^0,f,c
 12279  0132CE  5006               	movf	(??___xxtofl+1)^0,w,c
 12280  0132D0  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12281  0132D2  5007               	movf	(??___xxtofl+2)^0,w,c
 12282  0132D4  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12283  0132D6  5008               	movf	(??___xxtofl+3)^0,w,c
 12284  0132D8  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12285  0132DA  5009               	movf	___xxtofl@sign^0,w,c
 12286  0132DC  A4D8               	btfss	status,2,c
 12287  0132DE  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 12288  0132E0  D001               	goto	l5382
 12289  0132E2  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12290  0132E4                     l5382:
 12291  0132E4  0060  F02C  F001   	movff	___xxtofl@arg,?___xxtofl
 12292  0132EA  0060  F030  F002   	movff	___xxtofl@arg+1,?___xxtofl+1
 12293  0132F0  0060  F034  F003   	movff	___xxtofl@arg+2,?___xxtofl+2
 12294  0132F6  0060  F038  F004   	movff	___xxtofl@arg+3,?___xxtofl+3
 12295  0132FC  0012               	return		;funcret
 12296  0132FE                     __end_of___xxtofl:
 12297                           	opt callstack 0
 12298                           
 12299 ;; *************** function ___llmod *****************
 12300 ;; Defined at:
 12301 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  dividend        4   13[COMRAM] unsigned long 
 12304 ;;  divisor         4   17[COMRAM] unsigned long 
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;  counter         1   21[COMRAM] unsigned char 
 12307 ;; Return value:  Size  Location     Type
 12308 ;;                  4   13[COMRAM] unsigned long 
 12309 ;; Registers used:
 12310 ;;		wreg, status,2, status,0
 12311 ;; Tracked objects:
 12312 ;;		On entry : 0/4
 12313 ;;		On exit  : 0/0
 12314 ;;		Unchanged: 0/0
 12315 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12316 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12319 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12320 ;;Total ram usage:        9 bytes
 12321 ;; Hardware stack levels used:    1
 12322 ;; This function calls:
 12323 ;;		Nothing
 12324 ;; This function is called by:
 12325 ;;		_main_loop
 12326 ;; This function uses a non-reentrant model
 12327 ;;
 12328                           
 12329                           	psect	text45
 12330  013F8E                     __ptext45:
 12331                           	opt callstack 0
 12332  013F8E                     ___llmod:
 12333                           	opt callstack 29
 12334                           
 12335                           ;incstack = 0
 12336  013F8E  5012               	movf	___llmod@divisor^0,w,c
 12337  013F90  1013               	iorwf	(___llmod@divisor+1)^0,w,c
 12338  013F92  1014               	iorwf	(___llmod@divisor+2)^0,w,c
 12339  013F94  1015               	iorwf	(___llmod@divisor+3)^0,w,c
 12340  013F96  B4D8               	btfsc	status,2,c
 12341  013F98  D024               	goto	l1150
 12342  013F9A  0E01               	movlw	1
 12343  013F9C  6E16               	movwf	___llmod@counter^0,c
 12344  013F9E  D006               	goto	l5330
 12345  013FA0                     l5328:
 12346  013FA0  90D8               	bcf	status,0,c
 12347  013FA2  3612               	rlcf	___llmod@divisor^0,f,c
 12348  013FA4  3613               	rlcf	(___llmod@divisor+1)^0,f,c
 12349  013FA6  3614               	rlcf	(___llmod@divisor+2)^0,f,c
 12350  013FA8  3615               	rlcf	(___llmod@divisor+3)^0,f,c
 12351  013FAA  2A16               	incf	___llmod@counter^0,f,c
 12352  013FAC                     l5330:
 12353  013FAC  AE15               	btfss	(___llmod@divisor+3)^0,7,c
 12354  013FAE  D7F8               	goto	l5328
 12355  013FB0                     u6670:
 12356  013FB0  5012               	movf	___llmod@divisor^0,w,c
 12357  013FB2  5C0E               	subwf	___llmod@dividend^0,w,c
 12358  013FB4  5013               	movf	(___llmod@divisor+1)^0,w,c
 12359  013FB6  580F               	subwfb	(___llmod@dividend+1)^0,w,c
 12360  013FB8  5014               	movf	(___llmod@divisor+2)^0,w,c
 12361  013FBA  5810               	subwfb	(___llmod@dividend+2)^0,w,c
 12362  013FBC  5015               	movf	(___llmod@divisor+3)^0,w,c
 12363  013FBE  5811               	subwfb	(___llmod@dividend+3)^0,w,c
 12364  013FC0  A0D8               	btfss	status,0,c
 12365  013FC2  D008               	goto	l5336
 12366  013FC4  5012               	movf	___llmod@divisor^0,w,c
 12367  013FC6  5E0E               	subwf	___llmod@dividend^0,f,c
 12368  013FC8  5013               	movf	(___llmod@divisor+1)^0,w,c
 12369  013FCA  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
 12370  013FCC  5014               	movf	(___llmod@divisor+2)^0,w,c
 12371  013FCE  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
 12372  013FD0  5015               	movf	(___llmod@divisor+3)^0,w,c
 12373  013FD2  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
 12374  013FD4                     l5336:
 12375  013FD4  90D8               	bcf	status,0,c
 12376  013FD6  3215               	rrcf	(___llmod@divisor+3)^0,f,c
 12377  013FD8  3214               	rrcf	(___llmod@divisor+2)^0,f,c
 12378  013FDA  3213               	rrcf	(___llmod@divisor+1)^0,f,c
 12379  013FDC  3212               	rrcf	___llmod@divisor^0,f,c
 12380  013FDE  2E16               	decfsz	___llmod@counter^0,f,c
 12381  013FE0  D7E7               	goto	u6670
 12382  013FE2                     l1150:
 12383  013FE2  0060  F038  F00E   	movff	___llmod@dividend,?___llmod
 12384  013FE8  0060  F03C  F00F   	movff	___llmod@dividend+1,?___llmod+1
 12385  013FEE  0060  F040  F010   	movff	___llmod@dividend+2,?___llmod+2
 12386  013FF4  0060  F044  F011   	movff	___llmod@dividend+3,?___llmod+3
 12387  013FFA  0012               	return		;funcret
 12388  013FFC                     __end_of___llmod:
 12389                           	opt callstack 0
 12390                           
 12391 ;; *************** function ___lldiv *****************
 12392 ;; Defined at:
 12393 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 12394 ;; Parameters:    Size  Location     Type
 12395 ;;  dividend        4    0[COMRAM] unsigned long 
 12396 ;;  divisor         4    4[COMRAM] unsigned long 
 12397 ;; Auto vars:     Size  Location     Type
 12398 ;;  quotient        4    8[COMRAM] unsigned long 
 12399 ;;  counter         1   12[COMRAM] unsigned char 
 12400 ;; Return value:  Size  Location     Type
 12401 ;;                  4    0[COMRAM] unsigned long 
 12402 ;; Registers used:
 12403 ;;		wreg, status,2, status,0
 12404 ;; Tracked objects:
 12405 ;;		On entry : 3F/4
 12406 ;;		On exit  : 3F/4
 12407 ;;		Unchanged: 3F/0
 12408 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12409 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12410 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12412 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12413 ;;Total ram usage:       13 bytes
 12414 ;; Hardware stack levels used:    1
 12415 ;; This function calls:
 12416 ;;		Nothing
 12417 ;; This function is called by:
 12418 ;;		_main_loop
 12419 ;; This function uses a non-reentrant model
 12420 ;;
 12421                           
 12422                           	psect	text46
 12423  013CA4                     __ptext46:
 12424                           	opt callstack 0
 12425  013CA4                     ___lldiv:
 12426                           	opt callstack 29
 12427                           
 12428                           ; BSR set to: 4
 12429                           
 12430                           ;incstack = 0
 12431  013CA4  0E00               	movlw	0
 12432  013CA6  6E09               	movwf	___lldiv@quotient^0,c
 12433  013CA8  0E00               	movlw	0
 12434  013CAA  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12435  013CAC  0E00               	movlw	0
 12436  013CAE  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12437  013CB0  0E00               	movlw	0
 12438  013CB2  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12439                           
 12440                           ; BSR set to: 4
 12441  013CB4  5005               	movf	___lldiv@divisor^0,w,c
 12442  013CB6  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12443  013CB8  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12444  013CBA  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12445  013CBC  B4D8               	btfsc	status,2,c
 12446  013CBE  D02A               	goto	l757
 12447                           
 12448                           ; BSR set to: 4
 12449  013CC0  0E01               	movlw	1
 12450  013CC2  6E0D               	movwf	___lldiv@counter^0,c
 12451  013CC4  D006               	goto	l5310
 12452  013CC6                     l5308:
 12453                           
 12454                           ; BSR set to: 4
 12455  013CC6  90D8               	bcf	status,0,c
 12456  013CC8  3605               	rlcf	___lldiv@divisor^0,f,c
 12457  013CCA  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12458  013CCC  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12459  013CCE  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12460  013CD0  2A0D               	incf	___lldiv@counter^0,f,c
 12461  013CD2                     l5310:
 12462                           
 12463                           ; BSR set to: 4
 12464  013CD2  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12465  013CD4  D7F8               	goto	l5308
 12466  013CD6                     u6640:
 12467                           
 12468                           ; BSR set to: 4
 12469  013CD6  90D8               	bcf	status,0,c
 12470  013CD8  3609               	rlcf	___lldiv@quotient^0,f,c
 12471  013CDA  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12472  013CDC  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12473  013CDE  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12474                           
 12475                           ; BSR set to: 4
 12476  013CE0  5005               	movf	___lldiv@divisor^0,w,c
 12477  013CE2  5C01               	subwf	___lldiv@dividend^0,w,c
 12478  013CE4  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12479  013CE6  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12480  013CE8  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12481  013CEA  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12482  013CEC  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12483  013CEE  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12484  013CF0  A0D8               	btfss	status,0,c
 12485  013CF2  D009               	goto	l5320
 12486                           
 12487                           ; BSR set to: 4
 12488  013CF4  5005               	movf	___lldiv@divisor^0,w,c
 12489  013CF6  5E01               	subwf	___lldiv@dividend^0,f,c
 12490  013CF8  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12491  013CFA  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12492  013CFC  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12493  013CFE  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12494  013D00  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12495  013D02  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12496                           
 12497                           ; BSR set to: 4
 12498  013D04  8009               	bsf	___lldiv@quotient^0,0,c
 12499  013D06                     l5320:
 12500                           
 12501                           ; BSR set to: 4
 12502  013D06  90D8               	bcf	status,0,c
 12503  013D08  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12504  013D0A  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12505  013D0C  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12506  013D0E  3205               	rrcf	___lldiv@divisor^0,f,c
 12507                           
 12508                           ; BSR set to: 4
 12509  013D10  2E0D               	decfsz	___lldiv@counter^0,f,c
 12510  013D12  D7E1               	goto	u6640
 12511  013D14                     l757:
 12512                           
 12513                           ; BSR set to: 4
 12514  013D14  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
 12515  013D1A  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
 12516  013D20  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
 12517  013D26  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
 12518                           
 12519                           ; BSR set to: 4
 12520  013D2C  0012               	return		;funcret
 12521  013D2E                     __end_of___lldiv:
 12522                           	opt callstack 0
 12523                           
 12524 ;; *************** function _lcd_init *****************
 12525 ;; Defined at:
 12526 ;;		line 17 in file "char_lcd.c"
 12527 ;; Parameters:    Size  Location     Type
 12528 ;;  inc             1    wreg     _Bool 
 12529 ;;  shift           1    4[COMRAM] _Bool 
 12530 ;;  cursor          1    5[COMRAM] _Bool 
 12531 ;;  cursorblink     1    6[COMRAM] _Bool 
 12532 ;;  on              1    7[COMRAM] _Bool 
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;  inc             1    9[COMRAM] _Bool 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, status,2, status,0, cstack
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/3F
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12546 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12547 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12548 ;;Total ram usage:        6 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:    1
 12551 ;; This function calls:
 12552 ;;		_lcd_write
 12553 ;; This function is called by:
 12554 ;;		_main
 12555 ;; This function uses a non-reentrant model
 12556 ;;
 12557                           
 12558                           	psect	text47
 12559  013DB6                     __ptext47:
 12560                           	opt callstack 0
 12561  013DB6                     _lcd_init:
 12562                           	opt callstack 29
 12563                           
 12564                           ; BSR set to: 4
 12565                           ;incstack = 0
 12566                           ;lcd_init@inc stored from wreg
 12567  013DB6  6E0A               	movwf	lcd_init@inc^0,c
 12568                           
 12569                           ;char_lcd.c: 18:     lcd_write(0, 0b00110011, 0);
 12570  013DB8  0E33               	movlw	51
 12571  013DBA  6E01               	movwf	lcd_write@data^0,c
 12572  013DBC  0E00               	movlw	0
 12573  013DBE  6E02               	movwf	lcd_write@longdelay^0,c
 12574  013DC0  0E00               	movlw	0
 12575  013DC2  EC19  F0A1         	call	_lcd_write
 12576                           
 12577                           ;char_lcd.c: 19:     lcd_write(0, 0b00110011, 0);
 12578  013DC6  0E33               	movlw	51
 12579  013DC8  6E01               	movwf	lcd_write@data^0,c
 12580  013DCA  0E00               	movlw	0
 12581  013DCC  6E02               	movwf	lcd_write@longdelay^0,c
 12582  013DCE  0E00               	movlw	0
 12583  013DD0  EC19  F0A1         	call	_lcd_write
 12584                           
 12585                           ;char_lcd.c: 20:     lcd_write(0, 0b00110011, 0);
 12586  013DD4  0E33               	movlw	51
 12587  013DD6  6E01               	movwf	lcd_write@data^0,c
 12588  013DD8  0E00               	movlw	0
 12589  013DDA  6E02               	movwf	lcd_write@longdelay^0,c
 12590  013DDC  0E00               	movlw	0
 12591  013DDE  EC19  F0A1         	call	_lcd_write
 12592                           
 12593                           ;char_lcd.c: 21:     lcd_write(0, 0b00111011, 0);
 12594  013DE2  0E3B               	movlw	59
 12595  013DE4  6E01               	movwf	lcd_write@data^0,c
 12596  013DE6  0E00               	movlw	0
 12597  013DE8  6E02               	movwf	lcd_write@longdelay^0,c
 12598  013DEA  0E00               	movlw	0
 12599  013DEC  EC19  F0A1         	call	_lcd_write
 12600                           
 12601                           ;char_lcd.c: 22:     lcd_write(0, 0b00000100 | (inc << 1) | shift, 0);
 12602  013DF0  500A               	movf	lcd_init@inc^0,w,c
 12603  013DF2  240A               	addwf	lcd_init@inc^0,w,c
 12604  013DF4  1005               	iorwf	lcd_init@shift^0,w,c
 12605  013DF6  0904               	iorlw	4
 12606  013DF8  6E01               	movwf	lcd_write@data^0,c
 12607  013DFA  0E00               	movlw	0
 12608  013DFC  6E02               	movwf	lcd_write@longdelay^0,c
 12609  013DFE  0E00               	movlw	0
 12610  013E00  EC19  F0A1         	call	_lcd_write
 12611                           
 12612                           ;char_lcd.c: 23:     lcd_write(0, 0b00001000 | (on << 2) | (cursor << 1) | cursorblink ,
      +                           0);
 12613  013E04  90D8               	bcf	status,0,c
 12614  013E06  3406               	rlcf	lcd_init@cursor^0,w,c
 12615  013E08  6E09               	movwf	??_lcd_init^0,c
 12616  013E0A  4408               	rlncf	lcd_init@on^0,w,c
 12617  013E0C  46E8               	rlncf	wreg,f,c
 12618  013E0E  0BFC               	andlw	252
 12619  013E10  1009               	iorwf	??_lcd_init^0,w,c
 12620  013E12  1007               	iorwf	lcd_init@cursorblink^0,w,c
 12621  013E14  0908               	iorlw	8
 12622  013E16  6E01               	movwf	lcd_write@data^0,c
 12623  013E18  0E00               	movlw	0
 12624  013E1A  6E02               	movwf	lcd_write@longdelay^0,c
 12625  013E1C  0E00               	movlw	0
 12626  013E1E  EC19  F0A1         	call	_lcd_write
 12627                           
 12628                           ;char_lcd.c: 24:     lcd_write(0, 0b00000001, 1);
 12629  013E22  0E01               	movlw	1
 12630  013E24  6E01               	movwf	lcd_write@data^0,c
 12631  013E26  0E01               	movlw	1
 12632  013E28  6E02               	movwf	lcd_write@longdelay^0,c
 12633  013E2A  0E00               	movlw	0
 12634  013E2C  EC19  F0A1         	call	_lcd_write
 12635  013E30  0012               	return		;funcret
 12636  013E32                     __end_of_lcd_init:
 12637                           	opt callstack 0
 12638                           
 12639 ;; *************** function _lcd_write *****************
 12640 ;; Defined at:
 12641 ;;		line 3 in file "char_lcd.c"
 12642 ;; Parameters:    Size  Location     Type
 12643 ;;  rs              1    wreg     _Bool 
 12644 ;;  data            1    0[COMRAM] unsigned char 
 12645 ;;  longdelay       1    1[COMRAM] _Bool 
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;  rs              1    3[COMRAM] _Bool 
 12648 ;; Return value:  Size  Location     Type
 12649 ;;                  1    wreg      void 
 12650 ;; Registers used:
 12651 ;;		wreg, status,2
 12652 ;; Tracked objects:
 12653 ;;		On entry : 0/3B
 12654 ;;		On exit  : 0/0
 12655 ;;		Unchanged: 0/0
 12656 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12658 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12659 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12661 ;;Total ram usage:        4 bytes
 12662 ;; Hardware stack levels used:    1
 12663 ;; This function calls:
 12664 ;;		Nothing
 12665 ;; This function is called by:
 12666 ;;		_lcd_init
 12667 ;;		_lcd_set_data_addr
 12668 ;;		_lcd_print
 12669 ;; This function uses a non-reentrant model
 12670 ;;
 12671                           
 12672                           	psect	text48
 12673  014232                     __ptext48:
 12674                           	opt callstack 0
 12675  014232                     _lcd_write:
 12676                           	opt callstack 28
 12677                           
 12678                           ;incstack = 0
 12679                           ;lcd_write@rs stored from wreg
 12680  014232  6E04               	movwf	lcd_write@rs^0,c
 12681                           
 12682                           ;char_lcd.c: 4:     LATE2 = 1;
 12683  014234  84BE               	bsf	16318,2,c	;volatile
 12684                           
 12685                           ;char_lcd.c: 5:     LATE1 = 0;
 12686  014236  92BE               	bcf	16318,1,c	;volatile
 12687                           
 12688                           ;char_lcd.c: 6:     LATE0 = rs;
 12689  014238  B004               	btfsc	lcd_write@rs^0,0,c
 12690  01423A  D002               	bra	u5945
 12691  01423C  90BE               	bcf	16318,0,c	;volatile
 12692  01423E  D001               	bra	u5946
 12693  014240                     u5945:
 12694  014240  80BE               	bsf	16318,0,c	;volatile
 12695  014242                     u5946:
 12696                           
 12697                           ;char_lcd.c: 7:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12698  014242  0E35               	movlw	53
 12699  014244                     u8457:
 12700  014244  2EE8               	decfsz	wreg,f,c
 12701  014246  D7FE               	bra	u8457
 12702  014248  F000               	nop	
 12703                           
 12704                           ;char_lcd.c: 8:     PORTA = data;
 12705  01424A  0060  F007  FFCA   	movff	lcd_write@data,16330	;volatile
 12706                           
 12707                           ;char_lcd.c: 9:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12708  014250  0E35               	movlw	53
 12709  014252                     u8467:
 12710  014252  2EE8               	decfsz	wreg,f,c
 12711  014254  D7FE               	bra	u8467
 12712  014256  F000               	nop	
 12713                           
 12714                           ;char_lcd.c: 10:     LATE2 = 0;
 12715  014258  94BE               	bcf	16318,2,c	;volatile
 12716                           
 12717                           ;char_lcd.c: 11:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12718  01425A  0E35               	movlw	53
 12719  01425C                     u8477:
 12720  01425C  2EE8               	decfsz	wreg,f,c
 12721  01425E  D7FE               	bra	u8477
 12722  014260  F000               	nop	
 12723                           
 12724                           ;char_lcd.c: 12:     LATE2 = 1;
 12725  014262  84BE               	bsf	16318,2,c	;volatile
 12726                           
 12727                           ;char_lcd.c: 13:     if (longdelay) _delay((unsigned long)((2)*(64000000/4000.0)));
 12728  014264  5002               	movf	lcd_write@longdelay^0,w,c
 12729  014266  B4D8               	btfsc	status,2,c
 12730  014268  D008               	goto	l4940
 12731  01426A  0E2A               	movlw	42
 12732  01426C  6E03               	movwf	??_lcd_write^0,c
 12733  01426E  0E8E               	movlw	142
 12734  014270                     u8487:
 12735  014270  2EE8               	decfsz	wreg,f,c
 12736  014272  D7FE               	bra	u8487
 12737  014274  2E03               	decfsz	??_lcd_write^0,f,c
 12738  014276  D7FC               	bra	u8487
 12739  014278  0012               	return	
 12740  01427A                     l4940:
 12741  01427A  0EA0               	movlw	160
 12742  01427C                     u8497:
 12743  01427C  D000               	nop2	
 12744  01427E  2EE8               	decfsz	wreg,f,c
 12745  014280  D7FD               	bra	u8497
 12746  014282  0012               	return		;funcret
 12747  014284                     __end_of_lcd_write:
 12748                           	opt callstack 0
 12749                           
 12750                           	psect	rparam
 12751  0000                     tosu	equ	0x3FFF
 12752                           tosh	equ	0x3FFE
 12753                           tosl	equ	0x3FFD
 12754                           stkptr	equ	0x3FFC
 12755                           pclatu	equ	0x3FFB
 12756                           pclath	equ	0x3FFA
 12757                           pcl	equ	0x3FF9
 12758                           tblptru	equ	0x3FF8
 12759                           tblptrh	equ	0x3FF7
 12760                           tblptrl	equ	0x3FF6
 12761                           tablat	equ	0x3FF5
 12762                           prodh	equ	0x3FF4
 12763                           prodl	equ	0x3FF3
 12764                           indf0	equ	0x3FEF
 12765                           postinc0	equ	0x3FEE
 12766                           postdec0	equ	0x3FED
 12767                           preinc0	equ	0x3FEC
 12768                           plusw0	equ	0x3FEB
 12769                           fsr0h	equ	0x3FEA
 12770                           fsr0l	equ	0x3FE9
 12771                           wreg	equ	0x3FE8
 12772                           indf1	equ	0x3FE7
 12773                           postinc1	equ	0x3FE6
 12774                           postdec1	equ	0x3FE5
 12775                           preinc1	equ	0x3FE4
 12776                           plusw1	equ	0x3FE3
 12777                           fsr1h	equ	0x3FE2
 12778                           fsr1l	equ	0x3FE1
 12779                           bsr	equ	0x3FE0
 12780                           indf2	equ	0x3FDF
 12781                           postinc2	equ	0x3FDE
 12782                           postdec2	equ	0x3FDD
 12783                           preinc2	equ	0x3FDC
 12784                           plusw2	equ	0x3FDB
 12785                           fsr2h	equ	0x3FDA
 12786                           fsr2l	equ	0x3FD9
 12787                           status	equ	0x3FD8


Data Sizes:
    Strings     248
    Constant    37
    Data        14
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    116     144
    BANK3           256    256     256
    BANK4           256     51     193
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1179_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    uart_send@buf	PTR unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    handle_message@message	PTR unsigned char  size(2) Largest target is 256
		 -> uart_tasks@message(BANK3[256]), 

    lcd_print@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[13]), main_loop@batmsg(BANK4[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _updateButtonLight->___aldiv
    _uart_tasks->_handle_message
    _handle_message->_uart_send
    _uart_send->_memcpy
    _vfprintf->_vfpfcnvrt
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___fladd
    _atoi->_isspace
    _setLED->___flge
    ___flge->___flmul
    ___aldiv->___lmul
    _lcd_set_data_addr->_lcd_write
    _lcd_print->_lcd_write
    ___llmod->___lldiv
    _lcd_init->_lcd_write

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    _main_loop->_uart_tasks

Critical Paths under _main in BANK4

    _main->_main_loop

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   67478
                                            114 BANK0      2     2      0
                           _lcd_init
                          _lcd_print
                          _main_loop
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           57    57      0   62216
                                            108 BANK0      6     6      0
                                              0 BANK4     51    51      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___lldiv
                            ___llmod
                             ___lmul
                           ___xxtofl
                          _lcd_print
                  _lcd_set_data_addr
                             _setLED
                            _sprintf
                          _uart_send
                         _uart_tasks
                  _updateButtonLight
 ---------------------------------------------------------------------------------
 (2) _updateButtonLight                                   12     8      4    1683
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _uart_tasks                                         271   271      0    2294
                                             20 COMRAM    15    15      0
                                              0 BANK3    256   256      0
                     _handle_message
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _handle_message                                       4     1      3    1375
                                             16 COMRAM     4     1      3
                          _uart_send
 ---------------------------------------------------------------------------------
 (4) _uart_send                                            5     2      3     937
                                             11 COMRAM     5     2      3
                             _memcpy
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _transmitChecksum                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             17     9      8   33436
                                             91 BANK0     17     9      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   31846
                                             85 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    44      3   31295
                                             92 COMRAM     3     0      3
                                             67 BANK0     18    18      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     4      5     453
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              67    61      6   25040
                                              0 BANK0     67    61      6
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 10     5      5    3551
                                             14 COMRAM    10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1334
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             55 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2505
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                              62    54      8    5320
                                              0 BANK0     62    54      8
                            ___aldiv
                            ___almod
                             ___flge
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     826
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1398
                                             80 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1516
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_set_data_addr                                    1     1      0    2086
                                              4 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2784
                                              4 COMRAM     5     3      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     2      4    2478
                                              4 COMRAM     6     2      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            4     2      2    2064
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_write
   _lcd_print
     _lcd_write
   _main_loop
     ___awdiv
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lmul
     ___xxtofl
     _lcd_print
       _lcd_write
     _lcd_set_data_addr
       _lcd_write
     _setLED
       ___aldiv
         ___lmul (ARG)
       ___almod
       ___flge
         ___flmul (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _uart_send
       _memcpy
       _transmitChecksum
     _uart_tasks
       _handle_message
         _uart_send
           _memcpy
           _transmitChecksum
       _transmitChecksum
     _updateButtonLight
       ___aldiv
         ___lmul (ARG)
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh           1D00      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      62        0.0%
BANK31             100      0       0      63        0.0%
BITBANK30          100      0       0      60        0.0%
BANK30             100      0       0      61        0.0%
BITBANK29          100      0       0      58        0.0%
BANK29             100      0       0      59        0.0%
BITBANK28          100      0       0      56        0.0%
BANK28             100      0       0      57        0.0%
BITBANK27          100      0       0      54        0.0%
BANK27             100      0       0      55        0.0%
BITBANK26          100      0       0      52        0.0%
BANK26             100      0       0      53        0.0%
BITBANK25          100      0       0      50        0.0%
BANK25             100      0       0      51        0.0%
BITBANK24          100      0       0      48        0.0%
BANK24             100      0       0      49        0.0%
BITBANK23          100      0       0      46        0.0%
BANK23             100      0       0      47        0.0%
BITBANK22          100      0       0      44        0.0%
BANK22             100      0       0      45        0.0%
BITBANK21          100      0       0      42        0.0%
BANK21             100      0       0      43        0.0%
BITBANK20          100      0       0      40        0.0%
BANK20             100      0       0      41        0.0%
BITBANK19          100      0       0      38        0.0%
BANK19             100      0       0      39        0.0%
BITBANK18          100      0       0      36        0.0%
BANK18             100      0       0      37        0.0%
BITBANK17          100      0       0      34        0.0%
BANK17             100      0       0      35        0.0%
BITBANK16          100      0       0      32        0.0%
BANK16             100      0       0      33        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK6           100      0       0      12        0.0%
BANK6              100      0       0      13        0.0%
BITBANK5           100      0       0      10        0.0%
BANK5              100      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100     33      C1       9       75.4%
BITBANK3           100      0       0       6        0.0%
BANK3              100    100     100       7      100.0%
BIGRAMl             FF      0       0      66        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      90       5       90.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B0      64        0.0%
DATA                 0      0     2B0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Oct 21 11:42:48 2019

     lcd_set_data_addr@addr 0005                ___fldiv@aexp 0037                ___fldiv@bexp 0036  
              ___fldiv@sign 002F                 __CFG_CP$OFF 000000                ___awdiv@sign 0006  
                        _on 00E5  __size_of_updateButtonLight 00E8         ___wmul@multiplicand 0003  
               __CFG_LVP$ON 000000                         l203 35D2                         l303 0640  
                       l233 1A2A                         l335 0A28                         l337 0A5C  
                       l273 0056                         l631 0F38                         l590 39E8  
                       l657 12EE                         l757 3D14                         l995 3744  
                       _pad 39B2                 lcd_init@inc 000A                ___awmod@sign 0006  
                       wreg 003FE8                ___flmul@aexp 0045                ___flmul@bexp 004A  
              ___flmul@sign 0044                ___flmul@temp 004F                ___flmul@prod 004B  
             __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000                ___fltol@exp1 000A  
                      l1150 3FE2                        l1314 2A36                        l1260 26AC  
                      l1325 2AA4                        l1326 2AA0                        l1440 2EB4  
                      l1344 2266                        l1361 252C                        l1353 2496  
                      l1354 2492                        l1275 27A0                        l1259 26CE  
                      l4004 298C                        l4100 2226                        l1284 2808  
                      l1452 2CA0                        l1285 2804                        l4022 2A0E  
                      l4014 29E6                        l1392 326E                        l4040 2A6A  
                      l1385 31E8                        l4034 2A4C                        l4114 2252  
                      l1538 4224                        l5004 3632                        l5020 3680  
                      l5100 172A                        l4060 2AF8                        l4028 2A34  
                      l4124 2284                        l4116 2256                        l5006 363E  
                      l5200 3BD6                        l5024 3696                        l5016 3672  
                      l5040 392E                        l4320 36E4                        l5112 17DE  
                      l4240 3D68                        l4064 2B1C                        l4312 3CA0  
                      l4304 3C4E                        l4208 254C                        l5130 194A  
                      l4242 3D70                        l4234 3D52                        l4074 2B54  
                      l4410 3F36                        l5060 3998                        l5052 3974  
                      l5044 3940                        l5036 391A                        l4324 3718  
                      l5140 1A1A                        l5124 1910                        l5116 1824  
                      l4260 3DA8                        l4252 3D90                        l4228 3D42  
                      l4076 2B56                        l4068 2B46                        l4308 3C82  
                      l4172 245C                        l6012 1680                        l5300 318A  
                      l5310 3CD2                        l5046 394C                        l4334 377C  
                      l4166 243E                        l4342 4366                        l5070 3506  
                      l5320 3D06                        l5056 3982                        l4328 372E  
                      l5152 1AD8                        l5136 19F0                        l5128 193A  
                      l4256 3D9A                        l4280 3ED6                        l4272 3EBC  
                      l4192 24EA                        l4096 2212                        l3800 27DA  
                      l4352 379E                        l6120 2190                        l5072 350A  
                      l6200 02A8                        l5330 3FAC                        l5162 1B8A  
                      l4282 3EDE                        l4098 2216                        l3618 3B06  
                      l6114 2152                        l6042 1DBE                        l6130 21B0  
                      l4418 3F7C                        l5082 356E                        l6210 0348  
                      l5308 3CC6                        l5180 1D00                        l5148 1AB6  
                      l5172 1C2C                        l4292 3F00                        l4276 3EC8  
                      l4196 2508                        l3740 26BE                        l3660 2596  
                      l4380 3814                        l4372 3800                        l6124 219A  
                      l6044 1DE2                        l5252 30AC                        l6220 03F0  
                      l6212 0358                        l5174 1C5C                        l5158 1B68  
                      l5094 16F0                        l3806 27E4                        l3726 265C  
                      l6046 1DEE                        l6142 4198                        l5262 30E6  
                      l5238 306E                        l6302 078A                        l6222 042E  
                      l6206 0316                        l6214 0364                        ?_pad 000F  
                      l5336 3FD4                        l5328 3FA0                        l5352 321E  
                      l5096 1700                        l4720 2D5A                        l4296 3F0E  
                      l4288 3EF6                        l3840 288E                        l3664 259A  
                      l4368 37F0                        l6064 1EBA                        l6144 41B6  
                      l6304 0792                        l6208 032E                        l6232 0582  
                      l5354 3224                        l5346 3200                        l5098 171A  
                      l4730 2DB4                        l4722 2D5E                        l3834 2884  
                      l3826 285E                        l3762 2714                        l3754 26F2  
                      l3738 26BA                        l4386 3830                        l4378 3808  
                      l3914 2BF6                        l6066 1EDE                        l5290 317A  
                      l5282 3152                        l5274 3120                        l5258 30BE  
                      l6242 05E8                        l6170 0078                        l6162 000A  
                      l5364 3294                        l5356 3230                        l5196 3B92  
                      l4740 2DD4                        l3764 2718                        l3772 272A  
                      l3684 25DE                        l3932 2D2E                        l3924 2CC2  
                      l6092 2044                        l6084 1FE4                        l6068 1EEA  
                      l5276 3126                        l6340 09CA                        l6244 05F0  
                      l6164 0012                        l5382 32E4                        l5366 32A0  
                      l5358 3256                        l4398 4308                        l4742 2E04  
                      l3838 288C                        l3790 27C4                        l3782 2790  
                      l5710 39F2                        l6342 09E4                        l6326 08AA  
                      l6318 0838                        l6254 0624                        l6182 014C  
                      l4736 2DC6                        l3696 2602                        l3688 25E2  
                      l3880 3498                        l3928 2D00                        l5704 39CE  
                      l6096 207A                        l6352 0A90                        l6344 09F4  
                      l6328 08AE                        l6264 0646                        l6416 3030  
                      l4746 2E44                        l4738 2DCE                        l3962 28E2  
                      l3890 34EA                        l5714 3A08                        l5802 0E06  
                      l5298 3188                        l6338 09B8                        l6354 0AC0  
                      l6362 0B3C                        l6370 0B68                        l6290 0702  
                      l6282 06D8                        l6274 06B0                        l6258 062E  
                      l4940 427A                        l3884 34A2                        l5708 39E0  
                      l5724 4014                        l5820 0F20                        l5804 0E6C  
                      l6292 0710                        l3990 2956                        l3982 2922  
                      l3958 28DE                        l5718 3A38                        l5910 13B6  
                      l5830 0F4C                        l4766 3876                        l4950 3344  
                      l6286 06EC                        l6278 06C4                        l6198 0290  
                      l5840 0F9C                        l5824 0F46                        l5808 0EB8  
                      l5736 0BD8                        l4768 3882                        l6296 075E  
                      l3978 291E                        l5922 13E4                        l5930 1404  
                      l5850 0FBE                        l5770 0CB6                        l4980 4148  
                      l3996 2974                        l5684 431C                        l5692 43F6  
                      l5860 0FF2                        l5748 0C08                        l5756 0C20  
                      l4956 33CC                        l5694 43FA                        l5838 0F98  
                      l5766 0C94                        l5774 0CE2                        l4992 35F8  
                      l4976 4134                        l5688 4332                        l5856 0FE2  
                      l5784 0D56                        l5792 0D70                        l5768 0CAC  
                      l5938 1428                        l5946 14F8                        l5882 121C  
                      l5866 102C                        l5874 1186                        l4998 3610  
                      l5974 1588                        l5958 153A                        l5798 0DBC  
                      l5976 1592                        l5896 12E6                        l5888 126A  
                      l5986 15F2                        l5898 1308                        l5996 161E  
                      STR_1 FFAB                        STR_2 FFBC                        STR_3 FF67  
                      STR_4 FF78                        STR_5 FF9A                        STR_6 FF56  
                      STR_7 FF89                        STR_8 FFCD                        STR_9 FF42  
                      u4030 286A                        u4110 345E                        u4200 420A  
                      u4210 420C                        _T2PR 003FAB                        u4115 3454  
                      u5020 381A                        u4300 2CE8                        u4230 2BBC  
                      u4160 34E2                        u4240 2BDC                        u4305 2CDE  
                      u4330 43E0                        u5050 4304                        u4170 34E4  
                      u3610 3AFE                        u6010 3376                        u4155 34C4  
                      u4235 2BB2                        u4340 43E2                        u6100 33E6  
                      u6020 3378                        u4510 2A9A                        u3630 3B40  
                      u5070 3F60                        u6030 3390                        u4280 2C86  
                      u6040 3392                        u4265 2C10                        u4266 2C16  
                      u6050 33AC                        u4267 2C24                        u6300 16D6  
                      u3820 26D6                        u3660 43AC                        u6060 33AE  
                      _PMD0 0039C0                        u4285 2C7C                        u5077 3F52  
                      _PMD1 0039C1                        u6230 3950                        u6310 17B0  
                      u4550 2B06                        u3670 43AE                        u6070 33C6  
                      _PMD2 0039C2                        _PMD3 0039C3                        u6320 17F6  
                      u4560 2B2A                        u6080 33C8                        _PMD4 0039C4  
                      _PMD5 0039C5                        u6170 3642                        u6410 1B7A  
                      u4730 24F8                        u4650 2272                        u3770 2680  
                      _PMD6 0039C6                        _PMD7 0039C7                        u6340 18E0  
                      u5620 2DB0                        u4900 3C9C                        u4740 2516  
                      u3780 2690                        u8100 03E4                        u6430 1C1A  
                      u3950 27E8                        u3790 2692                        u6360 19C0  
                      u5640 2E7C                        u7320 0C6C                        u5720 38D4  
                      u6280 3540                        u8120 05CC                        u6450 1CCE  
                      u5650 2E7E                        u4850 3EE2                        u4690 248C  
                      u3970 27FE                        u7250 405A                        u7410 0EF0  
                      u7330 0C6E                        u8050 021E                        u8051 021C  
                      u6460 3BC8                        u8060 0236                        u6470 3C0C  
                      u6390 1AC8                        u4790 3D74                        u7510 0FBA  
                      u6640 3CD6                        u7440 0F2E                        u7360 0D2E  
                      u6560 30E0                        u8080 02BC                        u7257 404C  
                      u4970 378C                        u7370 0D30                        u7290 0BF8  
                      u8170 063C                        u8138 05D0                        u6467 3BBA  
                      u4980 37C4                        u8260 0780                        u6477 3BFE  
                      u6670 3FB0                        u6750 32AA                        u7470 0F64  
                      u8407 2FFE                        u5945 4240                        u4985 37BA  
                      u8417 000C                        u5946 4242                        u8427 05EA  
                      u7740 1608                        u7820 1E2E                        u8437 078C  
                      u7830 1E30                        u8447 0B70                        u8295 0834  
                      u7760 166A                        u7680 151C                        u7840 1E3C  
                      u8296 0836                        u8457 4244                        u8385 0B14  
                      u7770 166C                        u8386 0B16                        u8467 4252  
                      u7940 210A                        u8477 425C                        u8397 2FE4  
                      u7950 210C                        u7870 1F2A                        u8487 4270  
                      u7880 1F2C                        u8497 427C                        u7890 1F38  
                      _WPUA 003A41                        _WPUB 003A51                        _WPUC 003A61  
                      _WPUD 003A71                        _WPUE 003A81               __CFG_FCMEN$ON 000000  
                      _dbuf 043A                        _atoi 2D48                        _main 2EC2  
                      _prec 00E0                        _nout 00DC                        pad@i 0015  
                      pad@p 0012                        fsr1h 003FE2                        fsr2h 003FDA  
                      indf1 003FE7                        indf2 003FDF                        fsr1l 003FE1  
                      pad@w 0017                        fsr2l 003FD9                _soundAmplify FEE1  
             ___fpclassifyf 3408                        prodh 003FF4                        prodl 003FF3  
                      start FFFC             ___fldiv@new_exp 0030                 lcd_write@rs 0004  
              _tolower$1251 000D               __CFG_CSWEN$ON 000000                ___param_bank 000000  
                     ??_pad 0014               ___fltol@sign1 0009             __end_of___aldiv 36B0  
                     ?_atoi 0008             __end_of___almod 39B2             __end_of___fladd 28B2  
                     ?_main 0001                       _ADCLK 003EFF               _main_loop$320 049F  
             _main_loop$321 04A3               _main_loop$322 04A7               _main_loop$343 04AB  
                     _ADPCH 003EF1             __end_of___fldiv 2B5E                       _ADREF 003EFD  
           __end_of___awdiv 3DB6             __end_of___flneg 4380                       STR_10 FF1A  
                     STR_11 FF2E                       STR_20 FFF7                       STR_12 FF06  
                     STR_13 FFCD                       STR_14 FFDE                       STR_23 FFFB  
                     STR_15 FFEB                       STR_16 FFF3                       STR_25 FFFB  
             __CFG_WDTE$OFF 000000                       STR_19 FFEF             __end_of___awmod 3F1C  
           __end_of___flmul 256A             __end_of___flsub 4124             __end_of___fltol 384A  
           __end_of___lldiv 3D2E             ___awdiv@divisor 0003                       _T2CLK 003FAE  
           __end_of___llmod 3FFC                       _T2CON 003FAC                       _LATB4 01FDDC  
                     _LATC4 01FDE4                       _LATE0 01FDF0                       _LATE1 01FDF1  
                     _LATE2 01FDF2              __CFG_DEBUG$OFF 000000                       _U1TXB 003DEA  
           ___awdiv@counter 0005                vfpfcnvrt@fmt 005E                       _PORTA 003FCA  
                     _PORTB 003FCB                       _PORTC 003FCC                       _PORTD 003FCD  
                     _PORTE 003FCE                       _TRISA 003FC2                       _TRISB 003FC3  
                     _TRISC 003FC4                       _TRISD 003FC5                       _TRISE 003FC6  
       ___lmul@multiplicand 0005               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000                       _flags 00E2                _DMA2CON0bits 003BDC  
                     _fputc 3AF2                       _fputs 4312             __end_of_isdigit 43E8  
                     _rxBuf 000100                       _txBuf 000200          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0015                       pad@fp 000F                       atoi@s 0008  
                     _width 00DE                       _putch 4480             __end_of_isspace 4312  
           __end_of_isupper 43B4               lcd_init@shift 0005                       tablat 003FF5  
                     status 003FD8             __end_of_sprintf 42CE              ?___fpclassifyf 0001  
           __end_of_tolower 4232             __end_of_strncmp 38FE             __initialization 4064  
              __end_of_atoi 2EC2                __end_of_main 3036              __CFG_SAFEN$OFF 000000  
                    ??_atoi 000A                      ??_main 00D2               __activetblptr 000003  
              _volume_level 0439              __CFG_MVECEN$ON 000000         lcd_init@cursorblink 0007  
                    _ADCON0 003EF8                      _ADCON1 003EF9                      _ADCON2 003EFA  
                    _ADCON3 003EFB                      ?_fputc 0001            ___llmod@dividend 000E  
                    ?_fputs 0009                      _ADRESH 003EF0                      _ADRESL 003EEF  
                    _CCPR2H 003F79                      _CCPR3H 003F75                      _CCPR2L 003F78  
                    _CCPR4H 003F71                      _CCPR3L 003F74                      _CCPR4L 003F70  
          ___awdiv@dividend 0001                      _ANSELA 003A40                      ?_putch 0001  
                    _ANSELB 003A50                      _ANSELC 003A60                      _ANSELD 003A70  
                    _ANSELE 003A80                      _U1CON0 003DF2                      _U1CON1 003DF3  
                    _U1CON2 003DF4                      _U1BRGH 003DF6                      _U1BRGL 003DF5  
                    _RB0PPS 003A08                      _ODCONA 003A42                      _ODCONB 003A52  
                    _ODCONC 003A62                      _RD4PPS 003A1C                      _ODCOND 003A72  
                    _ODCONE 003A82                      _RC7PPS 003A17                      _RD5PPS 003A1D  
                    _RD6PPS 003A1E                      _RD7PPS 003A1F              __CFG_WDTCCS$SC 000000  
                    _U1TXIF 01CD1C                      _INLVLA 003A44                      _INLVLB 003A54  
                    _INLVLC 003A64                      _INLVLD 003A74                      _INLVLE 003A84  
                    _PRLOCK 0039EF            __end_of___xxtofl 32FE          lcd_write@longdelay 0002  
         ?_transmitChecksum 0001              __CFG_XINST$OFF 000000                vfprintf@cfmt 00B9  
          __end_of_lcd_init 3E32                      ___flge 36B0                      ___fleq 3C1A  
                    _ackCmd 00EE                      ___lmul 4124          ??_transmitChecksum 0001  
                 ??___aldiv 0015                   ??___almod 0009                   ??___fladd 0017  
                    ___wmul 441A                   ??___fldiv 0027                   ??___awdiv 0005  
                 ??___flneg 0005              __CFG_STVREN$ON 000000                   ??___awmod 0005  
                 ??___flmul 0040                   ??___flsub 0059                   ??___fltol 0005  
                 ??___lldiv 0009                   ??___llmod 0016                      _efgtoa 0B78  
                    _floorf 2B5E                      _memcpy 3F1C                      _setLED 16C0  
                    clear_0 40AE                      clear_1 40BA            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                 setLED@shift 009A             ___awmod@counter 0005  
                    pad@buf 0010                      _strcpy 3FFC                      _strlen 43E8  
            lcd_init@cursor 0006                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009                   ??_isdigit 0003  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst FEE0                   ??_isspace 0003                main_loop@rel 04B9  
              main_loop@res 04B1                main_loop@pos 0432                main_loop@sum 042C  
                    tblptrh 003FF7                   ??_isupper 0003                      tblptrl 003FF6  
                    tblptru 003FF8                      putch@c 0001            __end_of_vfprintf 41DE  
                 ??_sprintf 0060                   ??_tolower 0009                   ??_strncmp 0006  
         _lcd_set_data_addr 4448                  ___flge@ff1 0051                  ___flge@ff2 0055  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 40C0                  ___flneg@f1 0001  
             lcd_write@data 0001          ?_lcd_set_data_addr 0001               ___rparam_used 000001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001         ??_lcd_set_data_addr 0005  
              __pidataBANK0 4472                __pidataBANK4 447C               __end_of_fputc 3B8C  
             __end_of_fputs 434A               __end_of_putch 4482          __size_of_lcd_print 008E  
 __end_of_lcd_set_data_addr 445E          __size_of_lcd_write 0052                     ??_fputc 0004  
                   ??_fputs 000C             __CFG_PR1WAY$OFF 000000                     ??_putch 0001  
                __pbssBANK0 00D4                  __pbssBANK4 0400          __size_of_main_loop 0B78  
                _efgtoa$632 0073                  _efgtoa$626 006F                  _efgtoa$627 0071  
                _efgtoa$636 0075                  _efgtoa$637 0077                  _efgtoa$638 0079  
                   ?___flge 0051                     ?___fleq 0001                     ?___lmul 0001  
                   ?___wmul 0001                     ?_efgtoa 0060                     _CCP2CON 003F7A  
                   _CCP3CON 003F76                     _CCP4CON 003F72                     ?_floorf 0038  
                   ?_memcpy 0001                     ?_setLED 0060              ___lmul@product 0009  
                   ?_strcpy 0001                     ?_strlen 0001          __size_of_uart_init 009C  
       __CFG_PWRTS$PWRT_OFF 000000          __size_of_uart_send 0076                     _U1TXCHK 003DEB  
                   _U1RXPPS 003AE5                   ?___xxtofl 0001          __size_of_vfpfcnvrt 04C0  
                   _PWM6DCH 003F69                     _PWM6DCL 003F68                     _PWM8DCH 003F61  
                   _PWM8DCL 003F60                     _PWM6CON 003F6A                     _PWM8CON 003F62  
                   _SLRCONA 003A43                     _SLRCONB 003A53                     _SLRCONC 003A63  
                   _SLRCOND 003A73                     _SLRCONE 003A83     __size_of_handle_message 010A  
                 ?_lcd_init 0005           main_loop@ampFault 0435                   _DMA1DPTRL 003BEC  
                   __Hparam 0000                     __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000  
                _setLED$294 007C                  _setLED$295 0080                  _setLED$288 0074  
                _setLED$289 0078                     ___aldiv 35DC             __size_of___flge 00D0  
           __size_of___fleq 008A                     ___almod 38FE           __end_of_lcd_print 3C1A  
                   ___fladd 256A                     ___fldiv 28B2                     ___awdiv 3D2E  
                   ___flneg 434A             __size_of___lmul 005E                     ___awmod 3EA8  
                   ___flmul 21E6                     ___flsub 40C6                     ___fltol 3780  
         __end_of_lcd_write 4284                     ___lldiv 3CA4             __size_of___wmul 002E  
                   ___llmod 3F8E                   ?_vfprintf 00B5             __size_of_efgtoa 0B48  
         handle_message@len 0013           __end_of_main_loop 0B78             __size_of_floorf 01EA  
                   __pcinit 4064             __size_of_memcpy 0072             __size_of_setLED 0666  
                   __ramtop 2000                     __ptext0 2EC2                     __ptext1 3A56  
                   __ptext2 0000                     __ptext3 34F4                     __ptext4 3036  
                   __ptext5 32FE                     __ptext6 3E32                     __ptext7 445E  
                   __ptext8 3F1C                     __ptext9 4284             __CFG_WRTAPP$OFF 000000  
           __size_of_strcpy 0068             __size_of_strlen 0032                __size_of_pad 00A4  
                   _isdigit 43B4                     _pairing 0438                  ??___xxtofl 0005  
          ___awmod@dividend 0001            ___aldiv@dividend 000D                     _isspace 42CE  
           __CFG_WRTSAF$OFF 000000                     _isupper 4380                     efgtoa@c 0065  
                   efgtoa@d 0083                     efgtoa@e 009B                     efgtoa@f 0061  
                   efgtoa@g 0097                     efgtoa@h 008D                     efgtoa@i 0095  
                   efgtoa@l 0091                     efgtoa@m 007F                     efgtoa@n 009D  
                   efgtoa@p 0087                     efgtoa@t 007B                     efgtoa@u 009F  
                   efgtoa@w 008A                     atoi@neg 000E  __size_of_lcd_set_data_addr 0016  
                   _sprintf 4284                     _tolower 41DE                  ??_lcd_init 0009  
                   _strncmp 384A        end_of_initialization 40C0                     floorf@e 0046  
                   floorf@m 0042                     floorf@u 0048                     floorf@x 0038  
                   memcpy@d 0007                     memcpy@n 0005                     memcpy@s 0009  
                   setLED@b 008A                     setLED@g 0086                     setLED@r 0070  
                   fputc@fp 0003       updateButtonLight@step 001B                     fputs@fp 000B  
         __end_of_uart_init 3AF2           __end_of_uart_send 3EA8             ___lldiv@divisor 0005  
             main_loop@last 0400             ___lldiv@counter 000D           uart_tasks@bytePos 001F  
         __end_of_vfpfcnvrt 21E6                  efgtoa@mode 008C           uart_tasks@message 0300  
                efgtoa@sign 0085            ___aldiv@quotient 0017                     postdec1 003FE5  
                   postdec2 003FDD                     postinc0 003FEE                     postinc1 003FE6  
                   postinc2 003FDE                  ??_vfprintf 0060       __CFG_WDTCPS$WDTCPS_31 000000  
                   strcpy@d 0009                     strlen@a 0003                     strcpy@s 0007  
                   strlen@s 0001                  _uart_tasks 3036                   _PORTCbits 003FCC  
                 _PORTDbits 003FCD                 uart_tasks@i 001E                 ___fladd@grs 001E  
 __size_of_transmitChecksum 0014               ___xxtofl@sign 0009                 ___fldiv@grs 0032  
               ___fldiv@rem 002B            __CFG_FEXTOSC$OFF 000000                  lcd_init@on 0008  
     __end_of_stateCheckCmd FF06                 ___flmul@grs 0046                  lcd_print@i 0009  
            __end_of___flge 3780              __end_of___fleq 3CA4       uart_tasks@posInRawMsg 001D  
            __end_of___lmul 4182                 vfpfcnvrt@ap 005F                 vfpfcnvrt@ct 00AD  
               vfpfcnvrt@fp 005D              __end_of___wmul 4448              __end_of_efgtoa 16C0  
            __end_of_floorf 2D48              __end_of_memcpy 3F8E              __end_of_setLED 1D26  
                floorf@F524 00D4              __end_of_strcpy 4064              __end_of_strlen 441A  
       start_initialization 4064              _handle_message 32FE                 __end_of_pad 3A56  
     __end_of___fpclassifyf 34F4             ___llmod@divisor 0012             ___llmod@counter 0016  
          __CFG_LPBOREN$OFF 000000       handle_message@message 0011                 vfprintf@fmt 00B6  
                  ??___flge 0059                    ??___fleq 0009                    ??___lmul 0009  
                  ??___wmul 0005                  setLED@step 0064                    ??_efgtoa 0066  
               __pdataBANK0 00E6                 __pdataBANK4 04BD                    ??_floorf 003C  
                  ??_memcpy 0007                    ??_setLED 0068                 ?_uart_tasks 0001  
          __CFG_IVT1WAY$OFF 000000                 _bat_percent 00EA                    ??_strcpy 0005  
                  ??_strlen 0003                   ___fladd@a 0013                   ___fladd@b 000F  
                 ___fldiv@a 0023                   ___fldiv@b 001F      __end_of_handle_message 3408  
                 ___flmul@a 003C                   ___flmul@b 0038                   ___flsub@a 0055  
                 ___flsub@b 0051               __pcstackBANK0 0060               __pcstackBANK3 0300  
             __pcstackBANK4 048A           __size_of___xxtofl 0164           __size_of_lcd_init 007C  
                 _atoi$1130 0012                   _atoi$1128 0010                   _atoi$1129 0014  
             __pmediumconst FEE0                    ?___aldiv 000D                    ?___almod 0001  
                  ?___fladd 000F                    ?___fldiv 001F                    ?___awdiv 0001  
                  ?___flneg 0001                    ?___awmod 0001                    ?___flmul 0038  
                  ?___flsub 0051                    ?___fltol 0001                    ?___lldiv 0001  
                  ?___llmod 000E            __CFG_PPS1WAY$OFF 000000            ___almod@dividend 0001  
                 _lcd_print 3B8C                   _connected 0436           __size_of_vfprintf 005C  
                 _lcd_write 4232      __CFG_BBSIZE$BBSIZE_512 000000            _transmitChecksum 445E  
                  ?_isdigit 0001                   _main_loop 0000                    _DMA1CON0 003BFC  
                  _DMA1CON1 003BFD                    _DMA1AIRQ 003BFE                    _DMA2CON0 003BDC  
                  _DMA2CON1 003BDD                    _DMA2AIRQ 003BDE                    _DMA1DSAH 003BF1  
                  _DMA1DSAL 003BF0             ?_handle_message 0011                    _DMA2DSAH 003BD1  
                  _DMA2DSAL 003BD0                    _DMA1DSZH 003BEF                    _DMA1DSZL 003BEE  
                  _DMA2DSZH 003BCF                    _DMA2DSZL 003BCE                    _DMA1SSAH 003BFA  
                  _DMA1SIRQ 003BFF                    _DMA1SSAL 003BF9                    _DMA1SSAU 003BFB  
                  _DMA2SSAH 003BDA                    _DMA2SIRQ 003BDF                    _DMA2SSAL 003BD9  
                  _DMA2SSAU 003BDB                    _DMA1SSZH 003BF8                    _DMA1SSZL 003BF7  
                  _DMA2SSZH 003BD8                    _DMA2SSZL 003BD7                    ?_isspace 0001  
                  ?_isupper 0001                    _CCPTMRS0 003F5E            main_loop@lastAvg 049B  
          main_loop@counter 04BD            main_loop@lastSum 0428                    ?_sprintf 00BB  
                  ?_tolower 0007              __size_of_fputc 009A              __size_of_fputs 0038  
                  ?_strncmp 0001              __size_of_putch 0002             ___aldiv@divisor 0011  
           ___aldiv@counter 0015         __size_of_uart_tasks 0164              ___wmul@product 0005  
      updateButtonLight@dch 0023            uart_tasks@intPos 0020            uart_tasks@msgLen 0021  
                 _uart_init 3A56                   _uart_send 3E32                   _vfpfcnvrt 1D26  
                ?_lcd_print 0005                  _ADCON0bits 003EF8                  ?_lcd_write 0001  
         ___wmul@multiplier 0001                  ?_main_loop 0001          main_loop@batCutoff 0434  
                 _streaming 0437                _isspace$1159 0007                  vfpfcnvrt@c 00B4  
                vfpfcnvrt@f 00B0           ___lmul@multiplier 0001                   copy_data0 4078  
                 copy_data1 409A               _ledBrightness 00E6                  _DMA2SCNTIF 01CD2A  
        main_loop@clipCount 0430                    __Hrparam 0000             lcd_print@string 0005  
                 memcpy@tmp 000B                  vfprintf@ap 00B8                    __Lrparam 0000  
                vfprintf@fp 00B5          __CFG_BOREN$SBORDIS 000000                   setLED@mod 0060  
                ?_uart_init 0001                  ?_uart_send 000C            __size_of___aldiv 00D4  
          __size_of___almod 00B4            __size_of___fladd 0348            __size_of___fldiv 02AC  
          __size_of___awdiv 0088            __size_of___flneg 0036            __size_of___awmod 0074  
          __size_of___flmul 0384            __size_of___flsub 005E            __size_of___fltol 00CA  
          __size_of___lldiv 008A            __size_of___llmod 006E                  ?_vfpfcnvrt 005D  
      __end_of_soundAmplify FF01           _updateButtonLight 34F4          ___fpclassifyf@F463 00D8  
                sprintf@fmt 00BD                    ___xxtofl 319A          ?_updateButtonLight 001B  
          __size_of_isdigit 0034            __size_of_isspace 0044                    __ptext10 4182  
                  __ptext11 1D26                    __ptext20 3AF2                    __ptext12 384A  
                  __ptext21 4480                    __ptext13 0B78                    __ptext30 28B2  
                  __ptext22 2B5E                    __ptext14 41DE                    __ptext31 3EA8  
                  __ptext23 3408                    __ptext15 4380                    __ptext40 38FE  
                  __ptext32 3D2E                    __ptext24 3780                    __ptext16 3FFC  
                  __ptext41 35DC                    __ptext33 2D48                    __ptext25 40C6  
                  __ptext17 39B2                    __ptext42 4448                    __ptext34 42CE  
                  __ptext26 256A                    __ptext18 43E8                    __ptext43 3B8C  
                  __ptext35 43B4                    __ptext27 434A                    __ptext19 4312  
                  __ptext44 319A                    __ptext36 441A                    __ptext28 21E6  
                  __ptext45 3F8E                    __ptext37 16C0                    __ptext29 3C1A  
                  __ptext46 3CA4                    __ptext38 4124                    __ptext47 3DB6  
                  __ptext39 36B0                    __ptext48 4232            __size_of_isupper 0034  
                  _lcd_init 3DB6             ___almod@divisor 0005            __size_of_sprintf 004A  
          __size_of_tolower 0054             main_loop@absRes 04AF             ___almod@counter 0009  
       ??_updateButtonLight 001F                  strcpy@dest 0001            __size_of_strncmp 00B4  
           main_loop@batmsg 048A             main_loop@batlvl 04B3         __end_of_volCheckCmd FF04  
             __size_of_atoi 017A               __size_of_main 0174             main_loop@sample 04B5  
      __CFG_WDTCWS$WDTCWS_7 000000          __CFG_BORV$VBOR_190 000000                    efgtoa@fp 0060  
                  efgtoa@ne 0081                    efgtoa@pp 007D                    efgtoa@ou 006B  
           uart_tasks@rxLen 0019             uart_tasks@rxPos 00E4               setLED@trueMod 0084  
       uart_tasks@msgOffset 001C                    _vfprintf 4182                ??_uart_tasks 0015  
 __end_of_updateButtonLight 35DC                 ??_lcd_print 0007                 ??_lcd_write 0003  
               ??_main_loop 00CC                    memcpy@d1 0001                    memcpy@s1 0003  
                  setLED@sb 0092                    setLED@sg 008E                    setLED@sr 0096  
                  isdigit@c 0001          uart_tasks@checksum 001B                   sprintf@ap 00C5  
                  isspace@c 0001            ___lldiv@dividend 0001          __end_of_uart_tasks 319A  
         __CFG_CLKOUTEN$OFF 000000                   strcpy@src 0003                    isupper@c 0001  
  __end_of_transmitChecksum 4472                   strncmp@_l 0001                   strncmp@_r 0002  
               efgtoa@nmode 0089                 ??_uart_init 0001                 ??_uart_send 000F  
          ??_handle_message 0014                 ??_vfpfcnvrt 00A3               _vfpfcnvrt$652 00A7  
             _vfpfcnvrt$653 00A9               _vfpfcnvrt$657 00AB                    sprintf@f 00C6  
                  tolower@c 0007                    sprintf@s 00BB      __size_of___fpclassifyf 00EC  
                _PRLOCKbits 0039EF            ___lldiv@quotient 0009          uart_tasks@zeroByte 0022  
                  strncmp@l 0009                    strncmp@n 0004                    strncmp@r 0007  
              ___aldiv@sign 0016               uart_tasks@val 0023                 _volCheckCmd FF01  
             ___fladd@signs 001B                uart_send@buf 000C                uart_send@len 000E  
              ___almod@sign 000A                ___fladd@aexp 001C                ___fladd@bexp 001D  
             _stateCheckCmd FF04      uart_tasks@rawMsgOffset 001A  
