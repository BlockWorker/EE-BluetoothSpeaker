

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Tue Dec 31 16:06:24 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18LF47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    12                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    65                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    66                           	dabs	1,0x100,256,_rxBuf
    67                           	dabs	1,0x200,256,_txBuf
    68  0000                     
    69                           ; Version 2.10
    70                           ; Generated 31/07/2019 GMT
    71                           ; 
    72                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18LF47K42 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     
   104                           	psect	idataBANK0
   105  01445E                     __pidataBANK0:
   106                           	opt callstack 0
   107                           
   108                           ;initializer for _ledBrightness
   109  01445E  0040               	dw	64
   110  014460  0000               	dw	0
   111                           
   112                           ;initializer for _bat_percent
   113  014462  0000               	dw	0
   114  014464  42C8               	dw	17096
   115                           
   116                           ;initializer for _ackCmd
   117  014466  14                 	db	20
   118  014467  00                 	db	0
   119                           
   120                           	psect	mediumconst
   121  00FEE0                     __pmediumconst:
   122                           	opt callstack 0
   123  00FEE0  00                 	db	0
   124  00FEE1                     _soundAmplify:
   125                           	opt callstack 0
   126  00FEE1  0000               	dw	0
   127  00FEE3  0000               	dw	0
   128  00FEE5  0000               	dw	0
   129  00FEE7  0276               	dw	630
   130  00FEE9  01E0               	dw	480
   131  00FEEB  0186               	dw	390
   132  00FEED  0104               	dw	260
   133  00FEEF  00B4               	dw	180
   134  00FEF1  0064               	dw	100
   135  00FEF3  0041               	dw	65
   136  00FEF5  0032               	dw	50
   137  00FEF7  0023               	dw	35
   138  00FEF9  0016               	dw	22
   139  00FEFB  0010               	dw	16
   140  00FEFD  000B               	dw	11
   141  00FEFF  0008               	dw	8
   142  00FF01                     __end_of_soundAmplify:
   143                           	opt callstack 0
   144  00FF01                     _volCheckCmd:
   145                           	opt callstack 0
   146  00FF01  16                 	db	22
   147  00FF02  00                 	db	0
   148  00FF03  04                 	db	4
   149  00FF04                     __end_of_volCheckCmd:
   150                           	opt callstack 0
   151  00FF04                     _stateCheckCmd:
   152                           	opt callstack 0
   153  00FF04  0D                 	db	13
   154  00FF05  00                 	db	0
   155  00FF06                     __end_of_stateCheckCmd:
   156                           	opt callstack 0
   157  0000                     _PRLOCKbits	set	14831
   158  0000                     _PRLOCK	set	14831
   159  0000                     _PMD7	set	14791
   160  0000                     _PMD6	set	14790
   161  0000                     _PMD5	set	14789
   162  0000                     _PMD4	set	14788
   163  0000                     _PMD3	set	14787
   164  0000                     _PMD2	set	14786
   165  0000                     _PMD1	set	14785
   166  0000                     _PMD0	set	14784
   167  0000                     _DMA2SCNTIF	set	118058
   168  0000                     _U1TXIF	set	118044
   169  0000                     _RB0PPS	set	14856
   170  0000                     _U1RXPPS	set	15077
   171  0000                     _RD7PPS	set	14879
   172  0000                     _RD6PPS	set	14878
   173  0000                     _RD5PPS	set	14877
   174  0000                     _RD4PPS	set	14876
   175  0000                     _RC7PPS	set	14871
   176  0000                     _ODCONE	set	14978
   177  0000                     _SLRCONE	set	14979
   178  0000                     _INLVLE	set	14980
   179  0000                     _WPUE	set	14977
   180  0000                     _ANSELE	set	14976
   181  0000                     _ODCOND	set	14962
   182  0000                     _SLRCOND	set	14963
   183  0000                     _INLVLD	set	14964
   184  0000                     _WPUD	set	14961
   185  0000                     _ANSELD	set	14960
   186  0000                     _ODCONC	set	14946
   187  0000                     _SLRCONC	set	14947
   188  0000                     _INLVLC	set	14948
   189  0000                     _WPUC	set	14945
   190  0000                     _ANSELC	set	14944
   191  0000                     _ODCONB	set	14930
   192  0000                     _SLRCONB	set	14931
   193  0000                     _INLVLB	set	14932
   194  0000                     _WPUB	set	14929
   195  0000                     _ANSELB	set	14928
   196  0000                     _ODCONA	set	14914
   197  0000                     _SLRCONA	set	14915
   198  0000                     _INLVLA	set	14916
   199  0000                     _WPUA	set	14913
   200  0000                     _ANSELA	set	14912
   201  0000                     _DMA2CON0bits	set	15324
   202  0000                     _DMA1DPTRL	set	15340
   203  0000                     _DMA2CON0	set	15324
   204  0000                     _DMA2AIRQ	set	15326
   205  0000                     _DMA2SIRQ	set	15327
   206  0000                     _DMA2DSAL	set	15312
   207  0000                     _DMA2DSAH	set	15313
   208  0000                     _DMA2DSZL	set	15310
   209  0000                     _DMA2DSZH	set	15311
   210  0000                     _DMA2SSAL	set	15321
   211  0000                     _DMA2SSAH	set	15322
   212  0000                     _DMA2SSAU	set	15323
   213  0000                     _DMA2SSZL	set	15319
   214  0000                     _DMA2SSZH	set	15320
   215  0000                     _DMA2CON1	set	15325
   216  0000                     _DMA1CON0	set	15356
   217  0000                     _DMA1AIRQ	set	15358
   218  0000                     _DMA1SIRQ	set	15359
   219  0000                     _DMA1DSAL	set	15344
   220  0000                     _DMA1DSAH	set	15345
   221  0000                     _DMA1DSZL	set	15342
   222  0000                     _DMA1DSZH	set	15343
   223  0000                     _DMA1SSAL	set	15353
   224  0000                     _DMA1SSAH	set	15354
   225  0000                     _DMA1SSAU	set	15355
   226  0000                     _DMA1SSZL	set	15351
   227  0000                     _DMA1SSZH	set	15352
   228  0000                     _DMA1CON1	set	15357
   229  0000                     _U1TXCHK	set	15851
   230  0000                     _U1TXB	set	15850
   231  0000                     _U1CON2	set	15860
   232  0000                     _U1CON1	set	15859
   233  0000                     _U1CON0	set	15858
   234  0000                     _U1BRGL	set	15861
   235  0000                     _U1BRGH	set	15862
   236  0000                     _ADREF	set	16125
   237  0000                     _ADCLK	set	16127
   238  0000                     _ADCON3	set	16123
   239  0000                     _ADCON2	set	16122
   240  0000                     _ADCON1	set	16121
   241  0000                     _ADCON0	set	16120
   242  0000                     _ADRESL	set	16111
   243  0000                     _ADRESH	set	16112
   244  0000                     _ADCON0bits	set	16120
   245  0000                     _ADPCH	set	16113
   246  0000                     _CCPTMRS0	set	16222
   247  0000                     _T2CON	set	16300
   248  0000                     _T2CLK	set	16302
   249  0000                     _T2PR	set	16299
   250  0000                     _PWM8CON	set	16226
   251  0000                     _PWM6CON	set	16234
   252  0000                     _CCP4CON	set	16242
   253  0000                     _CCP3CON	set	16246
   254  0000                     _CCP2CON	set	16250
   255  0000                     _PORTE	set	16334
   256  0000                     _TRISE	set	16326
   257  0000                     _PORTD	set	16333
   258  0000                     _TRISD	set	16325
   259  0000                     _PORTC	set	16332
   260  0000                     _TRISC	set	16324
   261  0000                     _TRISB	set	16323
   262  0000                     _PORTA	set	16330
   263  0000                     _TRISA	set	16322
   264  0000                     _PORTDbits	set	16333
   265  0000                     _PORTB	set	16331
   266  0000                     _PORTCbits	set	16332
   267  0000                     _CCPR4L	set	16240
   268  0000                     _CCPR4H	set	16241
   269  0000                     _CCPR2L	set	16248
   270  0000                     _CCPR2H	set	16249
   271  0000                     _CCPR3L	set	16244
   272  0000                     _CCPR3H	set	16245
   273  0000                     _PWM8DCL	set	16224
   274  0000                     _PWM8DCH	set	16225
   275  0000                     _PWM6DCL	set	16232
   276  0000                     _PWM6DCH	set	16233
   277  0000                     _LATE0	set	130544
   278  0000                     _LATE1	set	130545
   279  0000                     _LATE2	set	130546
   280  0000                     _LATB4	set	130524
   281  0000                     _LATC4	set	130532
   282  00FF06                     STR_12:
   283  00FF06  42                 	db	66	;'B'
   284  00FF07  61                 	db	97	;'a'
   285  00FF08  74                 	db	116	;'t'
   286  00FF09  74                 	db	116	;'t'
   287  00FF0A  65                 	db	101	;'e'
   288  00FF0B  72                 	db	114	;'r'
   289  00FF0C  79                 	db	121	;'y'
   290  00FF0D  3A                 	db	58	;':'
   291  00FF0E  20                 	db	32
   292  00FF0F  25                 	db	37
   293  00FF10  33                 	db	51	;'3'
   294  00FF11  2E                 	db	46
   295  00FF12  30                 	db	48	;'0'
   296  00FF13  66                 	db	102	;'f'
   297  00FF14  25                 	db	37
   298  00FF15  25                 	db	37
   299  00FF16  20                 	db	32
   300  00FF17  20                 	db	32
   301  00FF18  20                 	db	32
   302  00FF19  00                 	db	0
   303  00FF1A                     STR_10:
   304  00FF1A  46                 	db	70	;'F'
   305  00FF1B  75                 	db	117	;'u'
   306  00FF1C  6C                 	db	108	;'l'
   307  00FF1D  6C                 	db	108	;'l'
   308  00FF1E  20                 	db	32
   309  00FF1F  43                 	db	67	;'C'
   310  00FF20  68                 	db	104	;'h'
   311  00FF21  67                 	db	103	;'g'
   312  00FF22  3A                 	db	58	;':'
   313  00FF23  20                 	db	32
   314  00FF24  25                 	db	37
   315  00FF25  33                 	db	51	;'3'
   316  00FF26  2E                 	db	46
   317  00FF27  30                 	db	48	;'0'
   318  00FF28  66                 	db	102	;'f'
   319  00FF29  25                 	db	37
   320  00FF2A  25                 	db	37
   321  00FF2B  20                 	db	32
   322  00FF2C  20                 	db	32
   323  00FF2D  00                 	db	0
   324  00FF2E                     STR_11:
   325  00FF2E  46                 	db	70	;'F'
   326  00FF2F  61                 	db	97	;'a'
   327  00FF30  73                 	db	115	;'s'
   328  00FF31  74                 	db	116	;'t'
   329  00FF32  20                 	db	32
   330  00FF33  43                 	db	67	;'C'
   331  00FF34  68                 	db	104	;'h'
   332  00FF35  67                 	db	103	;'g'
   333  00FF36  3A                 	db	58	;':'
   334  00FF37  20                 	db	32
   335  00FF38  25                 	db	37
   336  00FF39  33                 	db	51	;'3'
   337  00FF3A  2E                 	db	46
   338  00FF3B  30                 	db	48	;'0'
   339  00FF3C  66                 	db	102	;'f'
   340  00FF3D  25                 	db	37
   341  00FF3E  25                 	db	37
   342  00FF3F  20                 	db	32
   343  00FF40  20                 	db	32
   344  00FF41  00                 	db	0
   345  00FF42                     STR_9:
   346  00FF42  43                 	db	67	;'C'
   347  00FF43  68                 	db	104	;'h'
   348  00FF44  67                 	db	103	;'g'
   349  00FF45  20                 	db	32
   350  00FF46  66                 	db	102	;'f'
   351  00FF47  61                 	db	97	;'a'
   352  00FF48  75                 	db	117	;'u'
   353  00FF49  6C                 	db	108	;'l'
   354  00FF4A  74                 	db	116	;'t'
   355  00FF4B  3A                 	db	58	;':'
   356  00FF4C  20                 	db	32
   357  00FF4D  25                 	db	37
   358  00FF4E  33                 	db	51	;'3'
   359  00FF4F  2E                 	db	46
   360  00FF50  30                 	db	48	;'0'
   361  00FF51  66                 	db	102	;'f'
   362  00FF52  25                 	db	37
   363  00FF53  25                 	db	37
   364  00FF54  20                 	db	32
   365  00FF55  00                 	db	0
   366  00FF56                     STR_6:
   367  00FF56  4F                 	db	79	;'O'
   368  00FF57  66                 	db	102	;'f'
   369  00FF58  66                 	db	102	;'f'
   370  00FF59  20                 	db	32
   371  00FF5A  20                 	db	32
   372  00FF5B  20                 	db	32
   373  00FF5C  20                 	db	32
   374  00FF5D  20                 	db	32
   375  00FF5E  20                 	db	32
   376  00FF5F  20                 	db	32
   377  00FF60  20                 	db	32
   378  00FF61  20                 	db	32
   379  00FF62  20                 	db	32
   380  00FF63  20                 	db	32
   381  00FF64  20                 	db	32
   382  00FF65  20                 	db	32
   383  00FF66  00                 	db	0
   384  00FF67                     STR_3:
   385  00FF67  50                 	db	80	;'P'
   386  00FF68  61                 	db	97	;'a'
   387  00FF69  69                 	db	105	;'i'
   388  00FF6A  72                 	db	114	;'r'
   389  00FF6B  69                 	db	105	;'i'
   390  00FF6C  6E                 	db	110	;'n'
   391  00FF6D  67                 	db	103	;'g'
   392  00FF6E  20                 	db	32
   393  00FF6F  20                 	db	32
   394  00FF70  20                 	db	32
   395  00FF71  20                 	db	32
   396  00FF72  20                 	db	32
   397  00FF73  20                 	db	32
   398  00FF74  20                 	db	32
   399  00FF75  20                 	db	32
   400  00FF76  20                 	db	32
   401  00FF77  00                 	db	0
   402  00FF78                     STR_4:
   403  00FF78  43                 	db	67	;'C'
   404  00FF79  6F                 	db	111	;'o'
   405  00FF7A  6E                 	db	110	;'n'
   406  00FF7B  6E                 	db	110	;'n'
   407  00FF7C  65                 	db	101	;'e'
   408  00FF7D  63                 	db	99	;'c'
   409  00FF7E  74                 	db	116	;'t'
   410  00FF7F  65                 	db	101	;'e'
   411  00FF80  64                 	db	100	;'d'
   412  00FF81  20                 	db	32
   413  00FF82  20                 	db	32
   414  00FF83  20                 	db	32
   415  00FF84  20                 	db	32
   416  00FF85  20                 	db	32
   417  00FF86  20                 	db	32
   418  00FF87  20                 	db	32
   419  00FF88  00                 	db	0
   420  00FF89                     STR_7:
   421  00FF89  4E                 	db	78	;'N'
   422  00FF8A  6F                 	db	111	;'o'
   423  00FF8B  20                 	db	32
   424  00FF8C  42                 	db	66	;'B'
   425  00FF8D  61                 	db	97	;'a'
   426  00FF8E  74                 	db	116	;'t'
   427  00FF8F  74                 	db	116	;'t'
   428  00FF90  65                 	db	101	;'e'
   429  00FF91  72                 	db	114	;'r'
   430  00FF92  79                 	db	121	;'y'
   431  00FF93  20                 	db	32
   432  00FF94  20                 	db	32
   433  00FF95  20                 	db	32
   434  00FF96  20                 	db	32
   435  00FF97  20                 	db	32
   436  00FF98  20                 	db	32
   437  00FF99  00                 	db	0
   438  00FF9A                     STR_5:
   439  00FF9A  4E                 	db	78	;'N'
   440  00FF9B  6F                 	db	111	;'o'
   441  00FF9C  74                 	db	116	;'t'
   442  00FF9D  20                 	db	32
   443  00FF9E  63                 	db	99	;'c'
   444  00FF9F  6F                 	db	111	;'o'
   445  00FFA0  6E                 	db	110	;'n'
   446  00FFA1  6E                 	db	110	;'n'
   447  00FFA2  65                 	db	101	;'e'
   448  00FFA3  63                 	db	99	;'c'
   449  00FFA4  74                 	db	116	;'t'
   450  00FFA5  65                 	db	101	;'e'
   451  00FFA6  64                 	db	100	;'d'
   452  00FFA7  20                 	db	32
   453  00FFA8  20                 	db	32
   454  00FFA9  20                 	db	32
   455  00FFAA  00                 	db	0
   456  00FFAB                     STR_1:
   457  00FFAB  41                 	db	65	;'A'
   458  00FFAC  4D                 	db	77	;'M'
   459  00FFAD  50                 	db	80	;'P'
   460  00FFAE  4C                 	db	76	;'L'
   461  00FFAF  49                 	db	73	;'I'
   462  00FFB0  46                 	db	70	;'F'
   463  00FFB1  49                 	db	73	;'I'
   464  00FFB2  45                 	db	69	;'E'
   465  00FFB3  52                 	db	82	;'R'
   466  00FFB4  20                 	db	32
   467  00FFB5  46                 	db	70	;'F'
   468  00FFB6  41                 	db	65	;'A'
   469  00FFB7  55                 	db	85	;'U'
   470  00FFB8  4C                 	db	76	;'L'
   471  00FFB9  54                 	db	84	;'T'
   472  00FFBA  21                 	db	33
   473  00FFBB  00                 	db	0
   474  00FFBC                     STR_2:
   475  00FFBC  4C                 	db	76	;'L'
   476  00FFBD  6F                 	db	111	;'o'
   477  00FFBE  77                 	db	119	;'w'
   478  00FFBF  20                 	db	32
   479  00FFC0  42                 	db	66	;'B'
   480  00FFC1  61                 	db	97	;'a'
   481  00FFC2  74                 	db	116	;'t'
   482  00FFC3  74                 	db	116	;'t'
   483  00FFC4  65                 	db	101	;'e'
   484  00FFC5  72                 	db	114	;'r'
   485  00FFC6  79                 	db	121	;'y'
   486  00FFC7  3A                 	db	58	;':'
   487  00FFC8  20                 	db	32
   488  00FFC9  4F                 	db	79	;'O'
   489  00FFCA  66                 	db	102	;'f'
   490  00FFCB  66                 	db	102	;'f'
   491  00FFCC  00                 	db	0
   492  00FFCD                     STR_8:
   493  00FFCD  42                 	db	66	;'B'
   494  00FFCE  61                 	db	97	;'a'
   495  00FFCF  74                 	db	116	;'t'
   496  00FFD0  74                 	db	116	;'t'
   497  00FFD1  65                 	db	101	;'e'
   498  00FFD2  72                 	db	114	;'r'
   499  00FFD3  79                 	db	121	;'y'
   500  00FFD4  20                 	db	32
   501  00FFD5  63                 	db	99	;'c'
   502  00FFD6  72                 	db	114	;'r'
   503  00FFD7  69                 	db	105	;'i'
   504  00FFD8  74                 	db	116	;'t'
   505  00FFD9  69                 	db	105	;'i'
   506  00FFDA  63                 	db	99	;'c'
   507  00FFDB  61                 	db	97	;'a'
   508  00FFDC  6C                 	db	108	;'l'
   509  00FFDD  00                 	db	0
   510  00FFDE                     STR_14:
   511  00FFDE  48                 	db	72	;'H'
   512  00FFDF  65                 	db	101	;'e'
   513  00FFE0  6C                 	db	108	;'l'
   514  00FFE1  6C                 	db	108	;'l'
   515  00FFE2  6F                 	db	111	;'o'
   516  00FFE3  20                 	db	32
   517  00FFE4  57                 	db	87	;'W'
   518  00FFE5  6F                 	db	111	;'o'
   519  00FFE6  72                 	db	114	;'r'
   520  00FFE7  6C                 	db	108	;'l'
   521  00FFE8  64                 	db	100	;'d'
   522  00FFE9  21                 	db	33
   523  00FFEA  00                 	db	0
   524  00FFEB                     STR_15:
   525  00FFEB  49                 	db	73	;'I'
   526  00FFEC  4E                 	db	78	;'N'
   527  00FFED  46                 	db	70	;'F'
   528  00FFEE  00                 	db	0
   529  00FFEF                     STR_19:
   530  00FFEF  4E                 	db	78	;'N'
   531  00FFF0  41                 	db	65	;'A'
   532  00FFF1  4E                 	db	78	;'N'
   533  00FFF2  00                 	db	0
   534  00FFF3                     STR_16:
   535  00FFF3  69                 	db	105	;'i'
   536  00FFF4  6E                 	db	110	;'n'
   537  00FFF5  66                 	db	102	;'f'
   538  00FFF6  00                 	db	0
   539  00FFF7                     STR_20:
   540  00FFF7  6E                 	db	110	;'n'
   541  00FFF8  61                 	db	97	;'a'
   542  00FFF9  6E                 	db	110	;'n'
   543  00FFFA  00                 	db	0
   544  00FFFB                     STR_23:
   545  00FFFB  6C                 	db	108	;'l'
   546  00FFFC  66                 	db	102	;'f'
   547  00FFFD  00                 	db	0
   548  0000                     
   549                           ; #config settings
   550  00FFFE  00                 	db	0	; dummy byte at the end
   551  0000                     
   552                           	psect	cinit
   553  0142BE                     __pcinit:
   554                           	opt callstack 0
   555  0142BE                     start_initialization:
   556                           	opt callstack 0
   557  0142BE                     __initialization:
   558                           	opt callstack 0
   559                           
   560                           ; Initialize objects allocated to BANK0 (10 bytes)
   561                           ; load TBLPTR registers with __pidataBANK0
   562  0142BE  0E5E               	movlw	low __pidataBANK0
   563  0142C0  6EF6               	movwf	tblptrl,c
   564  0142C2  0E44               	movlw	high __pidataBANK0
   565  0142C4  6EF7               	movwf	tblptrh,c
   566  0142C6  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   567  0142C8  6EF8               	movwf	tblptru,c
   568  0142CA  EE00  F0E6         	lfsr	0,__pdataBANK0
   569  0142CE  EE10 F00A          	lfsr	1,10
   570  0142D2                     copy_data0:
   571  0142D2  0009               	tblrd		*+
   572  0142D4  006F FFD7 FFEE     	movff	tablat,postinc0
   573  0142DA  50E5               	movf	postdec1,w,c
   574  0142DC  50E1               	movf	fsr1l,w,c
   575  0142DE  E1F9               	bnz	copy_data0
   576                           
   577                           ; Clear objects allocated to BANK4 (141 bytes)
   578  0142E0  EE01  F000         	lfsr	0,__pbssBANK4
   579  0142E4  0E8D               	movlw	141
   580  0142E6                     clear_0:
   581  0142E6  6AEE               	clrf	postinc0,c
   582  0142E8  06E8               	decf	wreg,f,c
   583  0142EA  E1FD               	bnz	clear_0
   584                           
   585                           ; Clear objects allocated to BANK0 (18 bytes)
   586  0142EC  EE00  F0D4         	lfsr	0,__pbssBANK0
   587  0142F0  0E12               	movlw	18
   588  0142F2                     clear_1:
   589  0142F2  6AEE               	clrf	postinc0,c
   590  0142F4  06E8               	decf	wreg,f,c
   591  0142F6  E1FD               	bnz	clear_1
   592  0142F8                     end_of_initialization:
   593                           	opt callstack 0
   594  0142F8                     __end_of__initialization:
   595                           	opt callstack 0
   596  0142F8  0100               	movlb	0
   597  0142FA  EF68  F097         	goto	_main	;jump to C main() function
   598                           
   599                           	psect	bssBANK0
   600  0000D4                     __pbssBANK0:
   601                           	opt callstack 0
   602  0000D4                     floorf@F524:
   603                           	opt callstack 0
   604  0000D4                     	ds	4
   605  0000D8                     ___fpclassifyf@F463:
   606                           	opt callstack 0
   607  0000D8                     	ds	4
   608  0000DC                     _nout:
   609                           	opt callstack 0
   610  0000DC                     	ds	2
   611  0000DE                     _width:
   612                           	opt callstack 0
   613  0000DE                     	ds	2
   614  0000E0                     _prec:
   615                           	opt callstack 0
   616  0000E0                     	ds	2
   617  0000E2                     _flags:
   618                           	opt callstack 0
   619  0000E2                     	ds	2
   620  0000E4                     uart_tasks@rxPos:
   621                           	opt callstack 0
   622  0000E4                     	ds	1
   623  0000E5                     _on:
   624                           	opt callstack 0
   625  0000E5                     	ds	1
   626                           
   627                           	psect	dataBANK0
   628  0000E6                     __pdataBANK0:
   629                           	opt callstack 0
   630  0000E6                     _ledBrightness:
   631                           	opt callstack 0
   632  0000E6                     	ds	4
   633  0000EA                     _bat_percent:
   634                           	opt callstack 0
   635  0000EA                     	ds	4
   636  0000EE                     _ackCmd:
   637                           	opt callstack 0
   638  0000EE                     	ds	2
   639                           
   640                           	psect	bssBANK4
   641  000400                     __pbssBANK4:
   642                           	opt callstack 0
   643  000400                     main_loop@last:
   644                           	opt callstack 0
   645  000400                     	ds	40
   646  000428                     main_loop@lastSum:
   647                           	opt callstack 0
   648  000428                     	ds	4
   649  00042C                     main_loop@sum:
   650                           	opt callstack 0
   651  00042C                     	ds	4
   652  000430                     main_loop@counter:
   653                           	opt callstack 0
   654  000430                     	ds	4
   655  000434                     main_loop@pos:
   656                           	opt callstack 0
   657  000434                     	ds	2
   658  000436                     main_loop@batCutoff:
   659                           	opt callstack 0
   660  000436                     	ds	1
   661  000437                     main_loop@ampFault:
   662                           	opt callstack 0
   663  000437                     	ds	1
   664  000438                     _lightMode:
   665                           	opt callstack 0
   666  000438                     	ds	1
   667  000439                     _connected:
   668                           	opt callstack 0
   669  000439                     	ds	1
   670  00043A                     _streaming:
   671                           	opt callstack 0
   672  00043A                     	ds	1
   673  00043B                     _pairing:
   674                           	opt callstack 0
   675  00043B                     	ds	1
   676  00043C                     _volume_level:
   677                           	opt callstack 0
   678  00043C                     	ds	1
   679  00043D                     _dbuf:
   680                           	opt callstack 0
   681  00043D                     	ds	80
   682                           
   683                           	psect	cstackBANK4
   684  00048D                     __pcstackBANK4:
   685                           	opt callstack 0
   686  00048D                     main_loop@batmsg:
   687                           	opt callstack 0
   688                           
   689                           ; 17 bytes @ 0x0
   690  00048D                     	ds	17
   691  00049E                     main_loop@lastAvg:
   692                           	opt callstack 0
   693                           
   694                           ; 4 bytes @ 0x11
   695  00049E                     	ds	4
   696  0004A2                     _main_loop$322:
   697                           	opt callstack 0
   698                           
   699                           ; 4 bytes @ 0x15
   700  0004A2                     	ds	4
   701  0004A6                     _main_loop$323:
   702                           	opt callstack 0
   703                           
   704                           ; 4 bytes @ 0x19
   705  0004A6                     	ds	4
   706  0004AA                     _main_loop$324:
   707                           	opt callstack 0
   708                           
   709                           ; 4 bytes @ 0x1D
   710  0004AA                     	ds	4
   711  0004AE                     _main_loop$345:
   712                           	opt callstack 0
   713                           
   714                           ; 4 bytes @ 0x21
   715  0004AE                     	ds	4
   716  0004B2                     main_loop@update:
   717                           	opt callstack 0
   718                           
   719                           ; 1 bytes @ 0x25
   720  0004B2                     	ds	1
   721  0004B3                     main_loop@absRes:
   722                           	opt callstack 0
   723                           
   724                           ; 2 bytes @ 0x26
   725  0004B3                     	ds	2
   726  0004B5                     _main_loop$321:
   727                           	opt callstack 0
   728                           
   729                           ; 1 bytes @ 0x28
   730  0004B5                     	ds	1
   731  0004B6                     main_loop@res:
   732                           	opt callstack 0
   733                           
   734                           ; 2 bytes @ 0x29
   735  0004B6                     	ds	2
   736  0004B8                     main_loop@batlvl:
   737                           	opt callstack 0
   738                           
   739                           ; 2 bytes @ 0x2B
   740  0004B8                     	ds	2
   741  0004BA                     main_loop@sample:
   742                           	opt callstack 0
   743                           
   744                           ; 4 bytes @ 0x2D
   745  0004BA                     	ds	4
   746  0004BE                     main_loop@rel:
   747                           	opt callstack 0
   748                           
   749                           ; 4 bytes @ 0x31
   750  0004BE                     	ds	4
   751                           
   752                           	psect	cstackBANK3
   753  000300                     __pcstackBANK3:
   754                           	opt callstack 0
   755  000300                     uart_tasks@message:
   756                           	opt callstack 0
   757                           
   758                           ; 256 bytes @ 0x0
   759  000300                     	ds	256
   760                           
   761                           	psect	cstackBANK0
   762  000060                     __pcstackBANK0:
   763                           	opt callstack 0
   764  000060                     ?_efgtoa:
   765                           	opt callstack 0
   766  000060                     efgtoa@fp:
   767                           	opt callstack 0
   768  000060                     setLED@mod:
   769                           	opt callstack 0
   770                           
   771                           ; 4 bytes @ 0x0
   772  000060                     	ds	1
   773  000061                     efgtoa@f:
   774                           	opt callstack 0
   775                           
   776                           ; 4 bytes @ 0x1
   777  000061                     	ds	3
   778  000064                     setLED@step:
   779                           	opt callstack 0
   780                           
   781                           ; 4 bytes @ 0x4
   782  000064                     	ds	1
   783  000065                     efgtoa@c:
   784                           	opt callstack 0
   785                           
   786                           ; 1 bytes @ 0x5
   787  000065                     	ds	1
   788  000066                     ??_efgtoa:
   789                           
   790                           ; 1 bytes @ 0x6
   791  000066                     	ds	2
   792  000068                     ??_setLED:
   793                           
   794                           ; 1 bytes @ 0x8
   795  000068                     	ds	3
   796  00006B                     efgtoa@ou:
   797                           	opt callstack 0
   798                           
   799                           ; 4 bytes @ 0xB
   800  00006B                     	ds	4
   801  00006F                     _efgtoa$628:
   802                           	opt callstack 0
   803                           
   804                           ; 2 bytes @ 0xF
   805  00006F                     	ds	1
   806  000070                     setLED@r:
   807                           	opt callstack 0
   808                           
   809                           ; 4 bytes @ 0x10
   810  000070                     	ds	1
   811  000071                     _efgtoa$629:
   812                           	opt callstack 0
   813                           
   814                           ; 2 bytes @ 0x11
   815  000071                     	ds	2
   816  000073                     _efgtoa$634:
   817                           	opt callstack 0
   818                           
   819                           ; 2 bytes @ 0x13
   820  000073                     	ds	1
   821  000074                     _setLED$289:
   822                           	opt callstack 0
   823                           
   824                           ; 4 bytes @ 0x14
   825  000074                     	ds	1
   826  000075                     _efgtoa$638:
   827                           	opt callstack 0
   828                           
   829                           ; 2 bytes @ 0x15
   830  000075                     	ds	2
   831  000077                     _efgtoa$639:
   832                           	opt callstack 0
   833                           
   834                           ; 2 bytes @ 0x17
   835  000077                     	ds	1
   836  000078                     _setLED$290:
   837                           	opt callstack 0
   838                           
   839                           ; 4 bytes @ 0x18
   840  000078                     	ds	1
   841  000079                     _efgtoa$640:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x19
   845  000079                     	ds	2
   846  00007B                     efgtoa@t:
   847                           	opt callstack 0
   848                           
   849                           ; 2 bytes @ 0x1B
   850  00007B                     	ds	1
   851  00007C                     _setLED$295:
   852                           	opt callstack 0
   853                           
   854                           ; 4 bytes @ 0x1C
   855  00007C                     	ds	1
   856  00007D                     efgtoa@pp:
   857                           	opt callstack 0
   858                           
   859                           ; 2 bytes @ 0x1D
   860  00007D                     	ds	2
   861  00007F                     efgtoa@m:
   862                           	opt callstack 0
   863                           
   864                           ; 2 bytes @ 0x1F
   865  00007F                     	ds	1
   866  000080                     _setLED$296:
   867                           	opt callstack 0
   868                           
   869                           ; 4 bytes @ 0x20
   870  000080                     	ds	1
   871  000081                     efgtoa@ne:
   872                           	opt callstack 0
   873                           
   874                           ; 2 bytes @ 0x21
   875  000081                     	ds	2
   876  000083                     efgtoa@d:
   877                           	opt callstack 0
   878                           
   879                           ; 2 bytes @ 0x23
   880  000083                     	ds	1
   881  000084                     setLED@trueMod:
   882                           	opt callstack 0
   883                           
   884                           ; 2 bytes @ 0x24
   885  000084                     	ds	1
   886  000085                     efgtoa@sign:
   887                           	opt callstack 0
   888                           
   889                           ; 2 bytes @ 0x25
   890  000085                     	ds	1
   891  000086                     setLED@g:
   892                           	opt callstack 0
   893                           
   894                           ; 4 bytes @ 0x26
   895  000086                     	ds	1
   896  000087                     efgtoa@p:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x27
   900  000087                     	ds	2
   901  000089                     efgtoa@nmode:
   902                           	opt callstack 0
   903                           
   904                           ; 1 bytes @ 0x29
   905  000089                     	ds	1
   906  00008A                     efgtoa@w:
   907                           	opt callstack 0
   908  00008A                     setLED@b:
   909                           	opt callstack 0
   910                           
   911                           ; 4 bytes @ 0x2A
   912  00008A                     	ds	2
   913  00008C                     efgtoa@mode:
   914                           	opt callstack 0
   915                           
   916                           ; 1 bytes @ 0x2C
   917  00008C                     	ds	1
   918  00008D                     efgtoa@h:
   919                           	opt callstack 0
   920                           
   921                           ; 4 bytes @ 0x2D
   922  00008D                     	ds	1
   923  00008E                     setLED@sg:
   924                           	opt callstack 0
   925                           
   926                           ; 4 bytes @ 0x2E
   927  00008E                     	ds	3
   928  000091                     efgtoa@l:
   929                           	opt callstack 0
   930                           
   931                           ; 4 bytes @ 0x31
   932  000091                     	ds	1
   933  000092                     setLED@sb:
   934                           	opt callstack 0
   935                           
   936                           ; 4 bytes @ 0x32
   937  000092                     	ds	3
   938  000095                     efgtoa@i:
   939                           	opt callstack 0
   940                           
   941                           ; 2 bytes @ 0x35
   942  000095                     	ds	1
   943  000096                     setLED@sr:
   944                           	opt callstack 0
   945                           
   946                           ; 4 bytes @ 0x36
   947  000096                     	ds	1
   948  000097                     efgtoa@g:
   949                           	opt callstack 0
   950                           
   951                           ; 4 bytes @ 0x37
   952  000097                     	ds	3
   953  00009A                     setLED@shift:
   954                           	opt callstack 0
   955                           
   956                           ; 4 bytes @ 0x3A
   957  00009A                     	ds	1
   958  00009B                     efgtoa@e:
   959                           	opt callstack 0
   960                           
   961                           ; 2 bytes @ 0x3B
   962  00009B                     	ds	2
   963  00009D                     efgtoa@n:
   964                           	opt callstack 0
   965                           
   966                           ; 2 bytes @ 0x3D
   967  00009D                     	ds	2
   968  00009F                     efgtoa@u:
   969                           	opt callstack 0
   970                           
   971                           ; 4 bytes @ 0x3F
   972  00009F                     	ds	4
   973  0000A3                     ??_vfpfcnvrt:
   974                           
   975                           ; 1 bytes @ 0x43
   976  0000A3                     	ds	4
   977  0000A7                     _vfpfcnvrt$654:
   978                           	opt callstack 0
   979                           
   980                           ; 2 bytes @ 0x47
   981  0000A7                     	ds	2
   982  0000A9                     _vfpfcnvrt$655:
   983                           	opt callstack 0
   984                           
   985                           ; 2 bytes @ 0x49
   986  0000A9                     	ds	2
   987  0000AB                     _vfpfcnvrt$659:
   988                           	opt callstack 0
   989                           
   990                           ; 2 bytes @ 0x4B
   991  0000AB                     	ds	2
   992  0000AD                     vfpfcnvrt@ct:
   993                           	opt callstack 0
   994                           
   995                           ; 3 bytes @ 0x4D
   996  0000AD                     	ds	3
   997  0000B0                     vfpfcnvrt@f:
   998                           	opt callstack 0
   999                           
  1000                           ; 4 bytes @ 0x50
  1001  0000B0                     	ds	4
  1002  0000B4                     vfpfcnvrt@c:
  1003                           	opt callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x54
  1006  0000B4                     	ds	1
  1007  0000B5                     ?_vfprintf:
  1008                           	opt callstack 0
  1009  0000B5                     vfprintf@fp:
  1010                           	opt callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x55
  1013  0000B5                     	ds	1
  1014  0000B6                     vfprintf@fmt:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 2 bytes @ 0x56
  1018  0000B6                     	ds	2
  1019  0000B8                     vfprintf@ap:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x58
  1023  0000B8                     	ds	1
  1024  0000B9                     vfprintf@cfmt:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 2 bytes @ 0x59
  1028  0000B9                     	ds	2
  1029  0000BB                     ?_sprintf:
  1030                           	opt callstack 0
  1031  0000BB                     sprintf@s:
  1032                           	opt callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x5B
  1035  0000BB                     	ds	2
  1036  0000BD                     sprintf@fmt:
  1037                           	opt callstack 0
  1038                           
  1039                           ; 2 bytes @ 0x5D
  1040  0000BD                     	ds	8
  1041  0000C5                     sprintf@ap:
  1042                           	opt callstack 0
  1043                           
  1044                           ; 1 bytes @ 0x65
  1045  0000C5                     	ds	1
  1046  0000C6                     sprintf@f:
  1047                           	opt callstack 0
  1048                           
  1049                           ; 6 bytes @ 0x66
  1050  0000C6                     	ds	6
  1051  0000CC                     ??_main_loop:
  1052                           
  1053                           ; 1 bytes @ 0x6C
  1054  0000CC                     	ds	6
  1055  0000D2                     ??_main:
  1056                           
  1057                           ; 1 bytes @ 0x72
  1058  0000D2                     	ds	2
  1059                           
  1060                           	psect	cstackCOMRAM
  1061  000001                     __pcstackCOMRAM:
  1062                           	opt callstack 0
  1063  000001                     ?_strlen:
  1064                           	opt callstack 0
  1065  000001                     ?___fpclassifyf:
  1066                           	opt callstack 0
  1067  000001                     ?_isupper:
  1068                           	opt callstack 0
  1069  000001                     ?_isdigit:
  1070                           	opt callstack 0
  1071  000001                     ?_strncmp:
  1072                           	opt callstack 0
  1073  000001                     ?_isspace:
  1074                           	opt callstack 0
  1075  000001                     ?___wmul:
  1076                           	opt callstack 0
  1077  000001                     ?___awdiv:
  1078                           	opt callstack 0
  1079  000001                     ?___awmod:
  1080                           	opt callstack 0
  1081  000001                     ?___lmul:
  1082                           	opt callstack 0
  1083  000001                     ?___lldiv:
  1084                           	opt callstack 0
  1085  000001                     ?___almod:
  1086                           	opt callstack 0
  1087  000001                     ?___flneg:
  1088                           	opt callstack 0
  1089  000001                     ?___fltol:
  1090                           	opt callstack 0
  1091  000001                     ?___xxtofl:
  1092                           	opt callstack 0
  1093  000001                     lcd_write@data:
  1094                           	opt callstack 0
  1095  000001                     strncmp@_l:
  1096                           	opt callstack 0
  1097  000001                     ___wmul@multiplier:
  1098                           	opt callstack 0
  1099  000001                     ___awdiv@dividend:
  1100                           	opt callstack 0
  1101  000001                     ___awmod@dividend:
  1102                           	opt callstack 0
  1103  000001                     isdigit@c:
  1104                           	opt callstack 0
  1105  000001                     isspace@c:
  1106                           	opt callstack 0
  1107  000001                     isupper@c:
  1108                           	opt callstack 0
  1109  000001                     memcpy@d1:
  1110                           	opt callstack 0
  1111  000001                     fputc@c:
  1112                           	opt callstack 0
  1113  000001                     strcpy@dest:
  1114                           	opt callstack 0
  1115  000001                     strlen@s:
  1116                           	opt callstack 0
  1117  000001                     ___lmul@multiplier:
  1118                           	opt callstack 0
  1119  000001                     ___lldiv@dividend:
  1120                           	opt callstack 0
  1121  000001                     ___almod@dividend:
  1122                           	opt callstack 0
  1123  000001                     ___fleq@ff1:
  1124                           	opt callstack 0
  1125  000001                     ___flneg@f1:
  1126                           	opt callstack 0
  1127  000001                     ___fltol@f1:
  1128                           	opt callstack 0
  1129  000001                     ___xxtofl@val:
  1130                           	opt callstack 0
  1131  000001                     ___fpclassifyf@x:
  1132                           	opt callstack 0
  1133                           
  1134                           ; 4 bytes @ 0x0
  1135  000001                     	ds	1
  1136  000002                     lcd_write@longdelay:
  1137                           	opt callstack 0
  1138  000002                     strncmp@_r:
  1139                           	opt callstack 0
  1140                           
  1141                           ; 2 bytes @ 0x1
  1142  000002                     	ds	1
  1143  000003                     ??_isupper:
  1144  000003                     ??_isdigit:
  1145  000003                     ??_isspace:
  1146  000003                     ??_lcd_write:
  1147  000003                     fputc@fp:
  1148                           	opt callstack 0
  1149  000003                     ___wmul@multiplicand:
  1150                           	opt callstack 0
  1151  000003                     ___awdiv@divisor:
  1152                           	opt callstack 0
  1153  000003                     ___awmod@divisor:
  1154                           	opt callstack 0
  1155  000003                     memcpy@s1:
  1156                           	opt callstack 0
  1157  000003                     strcpy@src:
  1158                           	opt callstack 0
  1159  000003                     strlen@a:
  1160                           	opt callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x2
  1163  000003                     	ds	1
  1164  000004                     ??_fputc:
  1165  000004                     lcd_write@rs:
  1166                           	opt callstack 0
  1167  000004                     strncmp@n:
  1168                           	opt callstack 0
  1169                           
  1170                           ; 2 bytes @ 0x3
  1171  000004                     	ds	1
  1172  000005                     ??___fpclassifyf:
  1173  000005                     ??_strcpy:
  1174  000005                     ??___fltol:
  1175  000005                     ??___xxtofl:
  1176  000005                     lcd_init@shift:
  1177                           	opt callstack 0
  1178  000005                     lcd_set_data_addr@addr:
  1179                           	opt callstack 0
  1180  000005                     ___awdiv@counter:
  1181                           	opt callstack 0
  1182  000005                     ___awmod@counter:
  1183                           	opt callstack 0
  1184  000005                     lcd_print@string:
  1185                           	opt callstack 0
  1186  000005                     ___wmul@product:
  1187                           	opt callstack 0
  1188  000005                     memcpy@n:
  1189                           	opt callstack 0
  1190  000005                     ___lmul@multiplicand:
  1191                           	opt callstack 0
  1192  000005                     ___lldiv@divisor:
  1193                           	opt callstack 0
  1194  000005                     ___almod@divisor:
  1195                           	opt callstack 0
  1196  000005                     ___fleq@ff2:
  1197                           	opt callstack 0
  1198                           
  1199                           ; 4 bytes @ 0x4
  1200  000005                     	ds	1
  1201  000006                     ??_strncmp:
  1202  000006                     lcd_init@cursor:
  1203                           	opt callstack 0
  1204  000006                     ___awdiv@sign:
  1205                           	opt callstack 0
  1206  000006                     ___awmod@sign:
  1207                           	opt callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x5
  1210  000006                     	ds	1
  1211  000007                     ??_lcd_print:
  1212  000007                     ?_tolower:
  1213                           	opt callstack 0
  1214  000007                     lcd_init@cursorblink:
  1215                           	opt callstack 0
  1216  000007                     _isspace$1161:
  1217                           	opt callstack 0
  1218  000007                     ___awdiv@quotient:
  1219                           	opt callstack 0
  1220  000007                     memcpy@d:
  1221                           	opt callstack 0
  1222  000007                     strcpy@s:
  1223                           	opt callstack 0
  1224  000007                     strncmp@r:
  1225                           	opt callstack 0
  1226  000007                     tolower@c:
  1227                           	opt callstack 0
  1228                           
  1229                           ; 2 bytes @ 0x6
  1230  000007                     	ds	1
  1231  000008                     ?_atoi:
  1232                           	opt callstack 0
  1233  000008                     lcd_init@on:
  1234                           	opt callstack 0
  1235  000008                     atoi@s:
  1236                           	opt callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x7
  1239  000008                     	ds	1
  1240  000009                     ??_lcd_init:
  1241  000009                     ??_tolower:
  1242  000009                     ??___fleq:
  1243  000009                     lcd_print@i:
  1244                           	opt callstack 0
  1245  000009                     ___almod@counter:
  1246                           	opt callstack 0
  1247  000009                     ___fltol@sign1:
  1248                           	opt callstack 0
  1249  000009                     ___xxtofl@sign:
  1250                           	opt callstack 0
  1251  000009                     strncmp@l:
  1252                           	opt callstack 0
  1253  000009                     ___fpclassifyf@e:
  1254                           	opt callstack 0
  1255  000009                     memcpy@s:
  1256                           	opt callstack 0
  1257  000009                     fputs@s:
  1258                           	opt callstack 0
  1259  000009                     strcpy@d:
  1260                           	opt callstack 0
  1261  000009                     ___lmul@product:
  1262                           	opt callstack 0
  1263  000009                     ___lldiv@quotient:
  1264                           	opt callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x8
  1267  000009                     	ds	1
  1268  00000A                     ??_atoi:
  1269  00000A                     lcd_init@inc:
  1270                           	opt callstack 0
  1271  00000A                     ___almod@sign:
  1272                           	opt callstack 0
  1273  00000A                     ___fltol@exp1:
  1274                           	opt callstack 0
  1275  00000A                     ___xxtofl@exp:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 1 bytes @ 0x9
  1279  00000A                     	ds	1
  1280  00000B                     memcpy@tmp:
  1281                           	opt callstack 0
  1282  00000B                     fputs@fp:
  1283                           	opt callstack 0
  1284  00000B                     ___xxtofl@arg:
  1285                           	opt callstack 0
  1286  00000B                     ___fpclassifyf@u:
  1287                           	opt callstack 0
  1288                           
  1289                           ; 4 bytes @ 0xA
  1290  00000B                     	ds	1
  1291  00000C                     fputs@c:
  1292                           	opt callstack 0
  1293  00000C                     uart_send@buf:
  1294                           	opt callstack 0
  1295                           
  1296                           ; 2 bytes @ 0xB
  1297  00000C                     	ds	1
  1298  00000D                     ?___aldiv:
  1299                           	opt callstack 0
  1300  00000D                     ___lldiv@counter:
  1301                           	opt callstack 0
  1302  00000D                     fputs@i:
  1303                           	opt callstack 0
  1304  00000D                     _tolower$1253:
  1305                           	opt callstack 0
  1306  00000D                     ___aldiv@dividend:
  1307                           	opt callstack 0
  1308                           
  1309                           ; 4 bytes @ 0xC
  1310  00000D                     	ds	1
  1311  00000E                     ?___llmod:
  1312                           	opt callstack 0
  1313  00000E                     uart_send@len:
  1314                           	opt callstack 0
  1315  00000E                     atoi@neg:
  1316                           	opt callstack 0
  1317  00000E                     ___llmod@dividend:
  1318                           	opt callstack 0
  1319                           
  1320                           ; 4 bytes @ 0xD
  1321  00000E                     	ds	1
  1322  00000F                     ??_uart_send:
  1323  00000F                     ?_pad:
  1324                           	opt callstack 0
  1325  00000F                     ?___fladd:
  1326                           	opt callstack 0
  1327  00000F                     pad@fp:
  1328                           	opt callstack 0
  1329  00000F                     ___fladd@b:
  1330                           	opt callstack 0
  1331                           
  1332                           ; 4 bytes @ 0xE
  1333  00000F                     	ds	1
  1334  000010                     pad@buf:
  1335                           	opt callstack 0
  1336  000010                     _atoi$1130:
  1337                           	opt callstack 0
  1338                           
  1339                           ; 2 bytes @ 0xF
  1340  000010                     	ds	1
  1341  000011                     handle_message@message:
  1342                           	opt callstack 0
  1343  000011                     ___aldiv@divisor:
  1344                           	opt callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x10
  1347  000011                     	ds	1
  1348  000012                     pad@p:
  1349                           	opt callstack 0
  1350  000012                     _atoi$1132:
  1351                           	opt callstack 0
  1352  000012                     ___llmod@divisor:
  1353                           	opt callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x11
  1356  000012                     	ds	1
  1357  000013                     handle_message@len:
  1358                           	opt callstack 0
  1359  000013                     ___fladd@a:
  1360                           	opt callstack 0
  1361                           
  1362                           ; 4 bytes @ 0x12
  1363  000013                     	ds	1
  1364  000014                     ??_pad:
  1365  000014                     _atoi$1131:
  1366                           	opt callstack 0
  1367                           
  1368                           ; 1 bytes @ 0x13
  1369  000014                     	ds	1
  1370  000015                     ??_uart_tasks:
  1371  000015                     ___aldiv@counter:
  1372                           	opt callstack 0
  1373  000015                     pad@i:
  1374                           	opt callstack 0
  1375  000015                     atoi@n:
  1376                           	opt callstack 0
  1377                           
  1378                           ; 2 bytes @ 0x14
  1379  000015                     	ds	1
  1380  000016                     ___aldiv@sign:
  1381                           	opt callstack 0
  1382  000016                     ___llmod@counter:
  1383                           	opt callstack 0
  1384                           
  1385                           ; 1 bytes @ 0x15
  1386  000016                     	ds	1
  1387  000017                     ??___fladd:
  1388  000017                     pad@w:
  1389                           	opt callstack 0
  1390  000017                     ___aldiv@quotient:
  1391                           	opt callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x16
  1394  000017                     	ds	2
  1395  000019                     uart_tasks@rxLen:
  1396                           	opt callstack 0
  1397                           
  1398                           ; 1 bytes @ 0x18
  1399  000019                     	ds	1
  1400  00001A                     uart_tasks@rawMsgOffset:
  1401                           	opt callstack 0
  1402                           
  1403                           ; 1 bytes @ 0x19
  1404  00001A                     	ds	1
  1405  00001B                     uart_tasks@checksum:
  1406                           	opt callstack 0
  1407  00001B                     ___fladd@signs:
  1408                           	opt callstack 0
  1409  00001B                     updateButtonLight@step:
  1410                           	opt callstack 0
  1411                           
  1412                           ; 4 bytes @ 0x1A
  1413  00001B                     	ds	1
  1414  00001C                     uart_tasks@msgOffset:
  1415                           	opt callstack 0
  1416  00001C                     ___fladd@aexp:
  1417                           	opt callstack 0
  1418                           
  1419                           ; 1 bytes @ 0x1B
  1420  00001C                     	ds	1
  1421  00001D                     uart_tasks@posInRawMsg:
  1422                           	opt callstack 0
  1423  00001D                     ___fladd@bexp:
  1424                           	opt callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x1C
  1427  00001D                     	ds	1
  1428  00001E                     uart_tasks@i:
  1429                           	opt callstack 0
  1430  00001E                     ___fladd@grs:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x1D
  1434  00001E                     	ds	1
  1435  00001F                     ??_updateButtonLight:
  1436  00001F                     ?___fldiv:
  1437                           	opt callstack 0
  1438  00001F                     uart_tasks@bytePos:
  1439                           	opt callstack 0
  1440  00001F                     ___fldiv@b:
  1441                           	opt callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x1E
  1444  00001F                     	ds	1
  1445  000020                     uart_tasks@intPos:
  1446                           	opt callstack 0
  1447                           
  1448                           ; 1 bytes @ 0x1F
  1449  000020                     	ds	1
  1450  000021                     uart_tasks@msgLen:
  1451                           	opt callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x20
  1454  000021                     	ds	1
  1455  000022                     uart_tasks@zeroByte:
  1456                           	opt callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x21
  1459  000022                     	ds	1
  1460  000023                     uart_tasks@val:
  1461                           	opt callstack 0
  1462  000023                     updateButtonLight@dch:
  1463                           	opt callstack 0
  1464  000023                     ___fldiv@a:
  1465                           	opt callstack 0
  1466                           
  1467                           ; 4 bytes @ 0x22
  1468  000023                     	ds	4
  1469  000027                     ??___fldiv:
  1470                           
  1471                           ; 1 bytes @ 0x26
  1472  000027                     	ds	4
  1473  00002B                     ___fldiv@rem:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 4 bytes @ 0x2A
  1477  00002B                     	ds	4
  1478  00002F                     ___fldiv@sign:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x2E
  1482  00002F                     	ds	1
  1483  000030                     ___fldiv@new_exp:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 2 bytes @ 0x2F
  1487  000030                     	ds	2
  1488  000032                     ___fldiv@grs:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x31
  1492  000032                     	ds	4
  1493  000036                     ___fldiv@bexp:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 1 bytes @ 0x35
  1497  000036                     	ds	1
  1498  000037                     ___fldiv@aexp:
  1499                           	opt callstack 0
  1500                           
  1501                           ; 1 bytes @ 0x36
  1502  000037                     	ds	1
  1503  000038                     ?_floorf:
  1504                           	opt callstack 0
  1505  000038                     ?___flmul:
  1506                           	opt callstack 0
  1507  000038                     ___flmul@b:
  1508                           	opt callstack 0
  1509  000038                     floorf@x:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x37
  1513  000038                     	ds	4
  1514  00003C                     ??_floorf:
  1515  00003C                     ___flmul@a:
  1516                           	opt callstack 0
  1517                           
  1518                           ; 4 bytes @ 0x3B
  1519  00003C                     	ds	4
  1520  000040                     ??___flmul:
  1521                           
  1522                           ; 1 bytes @ 0x3F
  1523  000040                     	ds	2
  1524  000042                     floorf@m:
  1525                           	opt callstack 0
  1526                           
  1527                           ; 4 bytes @ 0x41
  1528  000042                     	ds	2
  1529  000044                     ___flmul@sign:
  1530                           	opt callstack 0
  1531                           
  1532                           ; 1 bytes @ 0x43
  1533  000044                     	ds	1
  1534  000045                     ___flmul@aexp:
  1535                           	opt callstack 0
  1536                           
  1537                           ; 1 bytes @ 0x44
  1538  000045                     	ds	1
  1539  000046                     floorf@e:
  1540                           	opt callstack 0
  1541  000046                     ___flmul@grs:
  1542                           	opt callstack 0
  1543                           
  1544                           ; 4 bytes @ 0x45
  1545  000046                     	ds	2
  1546  000048                     floorf@u:
  1547                           	opt callstack 0
  1548                           
  1549                           ; 4 bytes @ 0x47
  1550  000048                     	ds	2
  1551  00004A                     ___flmul@bexp:
  1552                           	opt callstack 0
  1553                           
  1554                           ; 1 bytes @ 0x49
  1555  00004A                     	ds	1
  1556  00004B                     ___flmul@prod:
  1557                           	opt callstack 0
  1558                           
  1559                           ; 4 bytes @ 0x4A
  1560  00004B                     	ds	4
  1561  00004F                     ___flmul@temp:
  1562                           	opt callstack 0
  1563                           
  1564                           ; 2 bytes @ 0x4E
  1565  00004F                     	ds	2
  1566  000051                     ?___flsub:
  1567                           	opt callstack 0
  1568  000051                     ___flge@ff1:
  1569                           	opt callstack 0
  1570  000051                     ___flsub@b:
  1571                           	opt callstack 0
  1572                           
  1573                           ; 4 bytes @ 0x50
  1574  000051                     	ds	4
  1575  000055                     ___flge@ff2:
  1576                           	opt callstack 0
  1577  000055                     ___flsub@a:
  1578                           	opt callstack 0
  1579                           
  1580                           ; 4 bytes @ 0x54
  1581  000055                     	ds	4
  1582  000059                     ??___flge:
  1583                           
  1584                           ; 1 bytes @ 0x58
  1585  000059                     	ds	4
  1586  00005D                     ?_vfpfcnvrt:
  1587                           	opt callstack 0
  1588  00005D                     vfpfcnvrt@fp:
  1589                           	opt callstack 0
  1590                           
  1591                           ; 1 bytes @ 0x5C
  1592  00005D                     	ds	1
  1593  00005E                     vfpfcnvrt@fmt:
  1594                           	opt callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x5D
  1597  00005E                     	ds	1
  1598  00005F                     vfpfcnvrt@ap:
  1599                           	opt callstack 0
  1600                           
  1601                           ; 1 bytes @ 0x5E
  1602  00005F                     	ds	1
  1603  000060                     
  1604                           ; 1 bytes @ 0x5F
  1605 ;;
  1606 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1607 ;;
  1608 ;; *************** function _main *****************
  1609 ;; Defined at:
  1610 ;;		line 287 in file "main.c"
  1611 ;; Parameters:    Size  Location     Type
  1612 ;;		None
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;		None
  1615 ;; Return value:  Size  Location     Type
  1616 ;;                  1    wreg      void 
  1617 ;; Registers used:
  1618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1619 ;; Tracked objects:
  1620 ;;		On entry : 0/0
  1621 ;;		On exit  : 0/0
  1622 ;;		Unchanged: 0/0
  1623 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1627 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1628 ;;Total ram usage:        2 bytes
  1629 ;; Hardware stack levels required when called:    9
  1630 ;; This function calls:
  1631 ;;		_lcd_init
  1632 ;;		_lcd_print
  1633 ;;		_main_loop
  1634 ;;		_uart_init
  1635 ;; This function is called by:
  1636 ;;		Startup code after reset
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text0
  1641  012ED0                     __ptext0:
  1642                           	opt callstack 0
  1643  012ED0                     _main:
  1644                           	opt callstack 22
  1645                           
  1646                           ;main.c: 288:     TRISA = 0b00000000;
  1647                           
  1648                           ;incstack = 0
  1649  012ED0  0E00               	movlw	0
  1650  012ED2  6EC2               	movwf	194,c	;volatile
  1651                           
  1652                           ;main.c: 289:     PORTA = 0b00000000;
  1653  012ED4  0E00               	movlw	0
  1654  012ED6  6ECA               	movwf	202,c	;volatile
  1655                           
  1656                           ;main.c: 290:     ANSELA = 0b00000000;
  1657  012ED8  0E00               	movlw	0
  1658  012EDA  013A               	movlb	58	; () banked
  1659  012EDC  6F40               	movwf	64,b	;volatile
  1660                           
  1661                           ;main.c: 291:     WPUA = 0b00000000;
  1662  012EDE  0E00               	movlw	0
  1663  012EE0  6F41               	movwf	65,b	;volatile
  1664                           
  1665                           ; BSR set to: 58
  1666                           ;main.c: 292:     INLVLA = 0b11111111;
  1667  012EE2  6944               	setf	68,b	;volatile
  1668                           
  1669                           ; BSR set to: 58
  1670                           ;main.c: 293:     SLRCONA = 0b11111111;
  1671  012EE4  6943               	setf	67,b	;volatile
  1672                           
  1673                           ;main.c: 294:     ODCONA = 0b00000000;
  1674  012EE6  0E00               	movlw	0
  1675  012EE8  6F42               	movwf	66,b	;volatile
  1676                           
  1677                           ;main.c: 296:     TRISB = 0b11001110;
  1678  012EEA  0ECE               	movlw	206
  1679  012EEC  6EC3               	movwf	195,c	;volatile
  1680                           
  1681                           ;main.c: 297:     PORTB = 0b00010000;
  1682  012EEE  0E10               	movlw	16
  1683  012EF0  6ECB               	movwf	203,c	;volatile
  1684                           
  1685                           ;main.c: 298:     ANSELB = 0b00000000;
  1686  012EF2  0E00               	movlw	0
  1687  012EF4  6F50               	movwf	80,b	;volatile
  1688                           
  1689                           ;main.c: 299:     WPUB = 0b11000000;
  1690  012EF6  0EC0               	movlw	192
  1691  012EF8  6F51               	movwf	81,b	;volatile
  1692                           
  1693                           ; BSR set to: 58
  1694                           ;main.c: 300:     INLVLB = 0b11111111;
  1695  012EFA  6954               	setf	84,b	;volatile
  1696                           
  1697                           ; BSR set to: 58
  1698                           ;main.c: 301:     SLRCONB = 0b11111111;
  1699  012EFC  6953               	setf	83,b	;volatile
  1700                           
  1701                           ;main.c: 302:     ODCONB = 0b00000000;
  1702  012EFE  0E00               	movlw	0
  1703  012F00  6F52               	movwf	82,b	;volatile
  1704                           
  1705                           ;main.c: 304:     TRISC = 0b01101110;
  1706  012F02  0E6E               	movlw	110
  1707  012F04  6EC4               	movwf	196,c	;volatile
  1708                           
  1709                           ;main.c: 305:     PORTC = 0b00000000;
  1710  012F06  0E00               	movlw	0
  1711  012F08  6ECC               	movwf	204,c	;volatile
  1712                           
  1713                           ;main.c: 306:     ANSELC = 0b01100000;
  1714  012F0A  0E60               	movlw	96
  1715  012F0C  6F60               	movwf	96,b	;volatile
  1716                           
  1717                           ;main.c: 307:     WPUC = 0b00001110;
  1718  012F0E  0E0E               	movlw	14
  1719  012F10  6F61               	movwf	97,b	;volatile
  1720                           
  1721                           ; BSR set to: 58
  1722                           ;main.c: 308:     INLVLC = 0b11111111;
  1723  012F12  6964               	setf	100,b	;volatile
  1724                           
  1725                           ; BSR set to: 58
  1726                           ;main.c: 309:     SLRCONC = 0b11111111;
  1727  012F14  6963               	setf	99,b	;volatile
  1728                           
  1729                           ;main.c: 310:     ODCONC = 0b00000000;
  1730  012F16  0E00               	movlw	0
  1731  012F18  6F62               	movwf	98,b	;volatile
  1732                           
  1733                           ;main.c: 312:     TRISD = 0b00001111;
  1734  012F1A  0E0F               	movlw	15
  1735  012F1C  6EC5               	movwf	197,c	;volatile
  1736                           
  1737                           ;main.c: 313:     PORTD = 0b00000000;
  1738  012F1E  0E00               	movlw	0
  1739  012F20  6ECD               	movwf	205,c	;volatile
  1740                           
  1741                           ;main.c: 314:     ANSELD = 0b00001000;
  1742  012F22  0E08               	movlw	8
  1743  012F24  6F70               	movwf	112,b	;volatile
  1744                           
  1745                           ;main.c: 315:     WPUD = 0b00000111;
  1746  012F26  0E07               	movlw	7
  1747  012F28  6F71               	movwf	113,b	;volatile
  1748                           
  1749                           ; BSR set to: 58
  1750                           ;main.c: 316:     INLVLD = 0b11111111;
  1751  012F2A  6974               	setf	116,b	;volatile
  1752                           
  1753                           ; BSR set to: 58
  1754                           ;main.c: 317:     SLRCOND = 0b11111111;
  1755  012F2C  6973               	setf	115,b	;volatile
  1756                           
  1757                           ;main.c: 318:     ODCOND = 0b00000000;
  1758  012F2E  0E00               	movlw	0
  1759  012F30  6F72               	movwf	114,b	;volatile
  1760                           
  1761                           ;main.c: 320:     TRISE = 0b11111000;
  1762  012F32  0EF8               	movlw	248
  1763  012F34  6EC6               	movwf	198,c	;volatile
  1764                           
  1765                           ;main.c: 321:     PORTE = 0b00000100;
  1766  012F36  0E04               	movlw	4
  1767  012F38  6ECE               	movwf	206,c	;volatile
  1768                           
  1769                           ;main.c: 322:     ANSELE = 0b11110000;
  1770  012F3A  0EF0               	movlw	240
  1771  012F3C  6F80               	movwf	128,b	;volatile
  1772                           
  1773                           ;main.c: 323:     WPUE = 0b00001000;
  1774  012F3E  0E08               	movlw	8
  1775  012F40  6F81               	movwf	129,b	;volatile
  1776                           
  1777                           ; BSR set to: 58
  1778                           ;main.c: 324:     INLVLE = 0b11111111;
  1779  012F42  6984               	setf	132,b	;volatile
  1780                           
  1781                           ; BSR set to: 58
  1782                           ;main.c: 325:     SLRCONE = 0b11111111;
  1783  012F44  6983               	setf	131,b	;volatile
  1784                           
  1785                           ;main.c: 326:     ODCONE = 0b00000000;
  1786  012F46  0E00               	movlw	0
  1787  012F48  6F82               	movwf	130,b	;volatile
  1788                           
  1789                           ;main.c: 328:     PMD0 = 0b01111111;
  1790  012F4A  0E7F               	movlw	127
  1791  012F4C  0139               	movlb	57	; () banked
  1792  012F4E  6FC0               	movwf	192,b	;volatile
  1793                           
  1794                           ;main.c: 329:     PMD1 = 0b11111011;
  1795  012F50  0EFB               	movlw	251
  1796  012F52  6FC1               	movwf	193,b	;volatile
  1797                           
  1798                           ;main.c: 330:     PMD2 = 0b01000111;
  1799  012F54  0E47               	movlw	71
  1800  012F56  6FC2               	movwf	194,b	;volatile
  1801                           
  1802                           ;main.c: 331:     PMD3 = 0b01010001;
  1803  012F58  0E51               	movlw	81
  1804  012F5A  6FC3               	movwf	195,b	;volatile
  1805                           
  1806                           ;main.c: 332:     PMD4 = 0b11100000;
  1807  012F5C  0EE0               	movlw	224
  1808  012F5E  6FC4               	movwf	196,b	;volatile
  1809                           
  1810                           ;main.c: 333:     PMD5 = 0b00100111;
  1811  012F60  0E27               	movlw	39
  1812  012F62  6FC5               	movwf	197,b	;volatile
  1813                           
  1814                           ;main.c: 334:     PMD6 = 0b00111111;
  1815  012F64  0E3F               	movlw	63
  1816  012F66  6FC6               	movwf	198,b	;volatile
  1817                           
  1818                           ;main.c: 335:     PMD7 = 0b00000000;
  1819  012F68  0E00               	movlw	0
  1820  012F6A  6FC7               	movwf	199,b	;volatile
  1821                           
  1822                           ;main.c: 337:     ADCON0 = 0b10000100;
  1823  012F6C  0E84               	movlw	132
  1824  012F6E  013E               	movlb	62	; () banked
  1825  012F70  6FF8               	movwf	248,b	;volatile
  1826                           
  1827                           ;main.c: 338:     ADCON1 = 0b00000000;
  1828  012F72  0E00               	movlw	0
  1829  012F74  6FF9               	movwf	249,b	;volatile
  1830                           
  1831                           ;main.c: 339:     ADCON2 = 0b00000000;
  1832  012F76  0E00               	movlw	0
  1833  012F78  6FFA               	movwf	250,b	;volatile
  1834                           
  1835                           ;main.c: 340:     ADCON3 = 0b00000000;
  1836  012F7A  0E00               	movlw	0
  1837  012F7C  6FFB               	movwf	251,b	;volatile
  1838                           
  1839                           ;main.c: 341:     ADCLK = 0b00011111;
  1840  012F7E  0E1F               	movlw	31
  1841  012F80  6FFF               	movwf	255,b	;volatile
  1842                           
  1843                           ;main.c: 342:     ADREF = 0b00000000;
  1844  012F82  0E00               	movlw	0
  1845  012F84  6FFD               	movwf	253,b	;volatile
  1846                           
  1847                           ;main.c: 344:     RC7PPS = 0b001010;
  1848  012F86  0E0A               	movlw	10
  1849  012F88  013A               	movlb	58	; () banked
  1850  012F8A  6F17               	movwf	23,b	;volatile
  1851                           
  1852                           ;main.c: 345:     RD4PPS = 0b001011;
  1853  012F8C  0E0B               	movlw	11
  1854  012F8E  6F1C               	movwf	28,b	;volatile
  1855                           
  1856                           ;main.c: 346:     RD5PPS = 0b001100;
  1857  012F90  0E0C               	movlw	12
  1858  012F92  6F1D               	movwf	29,b	;volatile
  1859                           
  1860                           ;main.c: 347:     RD6PPS = 0b001110;
  1861  012F94  0E0E               	movlw	14
  1862  012F96  6F1E               	movwf	30,b	;volatile
  1863                           
  1864                           ;main.c: 348:     RD7PPS = 0b010000;
  1865  012F98  0E10               	movlw	16
  1866  012F9A  6F1F               	movwf	31,b	;volatile
  1867                           
  1868                           ;main.c: 350:     CCPTMRS0 = 0b01010101;
  1869  012F9C  0E55               	movlw	85
  1870  012F9E  013F               	movlb	63	; () banked
  1871  012FA0  6F5E               	movwf	94,b	;volatile
  1872                           
  1873                           ;main.c: 351:     CCP2CON = 0b10001111;
  1874  012FA2  0E8F               	movlw	143
  1875  012FA4  6E7A               	movwf	122,c	;volatile
  1876                           
  1877                           ;main.c: 352:     CCP3CON = 0b10001111;
  1878  012FA6  0E8F               	movlw	143
  1879  012FA8  6E76               	movwf	118,c	;volatile
  1880                           
  1881                           ;main.c: 353:     CCP4CON = 0b10001111;
  1882  012FAA  0E8F               	movlw	143
  1883  012FAC  6E72               	movwf	114,c	;volatile
  1884                           
  1885                           ;main.c: 354:     PWM6CON = 0b10000000;
  1886  012FAE  0E80               	movlw	128
  1887  012FB0  6E6A               	movwf	106,c	;volatile
  1888                           
  1889                           ;main.c: 355:     PWM8CON = 0b10000000;
  1890  012FB2  0E80               	movlw	128
  1891  012FB4  6E62               	movwf	98,c	;volatile
  1892                           
  1893                           ; BSR set to: 63
  1894                           ;main.c: 357:     T2PR = 255;
  1895  012FB6  68AB               	setf	171,c	;volatile
  1896                           
  1897                           ;main.c: 358:     T2CLK = 0b0001;
  1898  012FB8  0E01               	movlw	1
  1899  012FBA  6EAE               	movwf	174,c	;volatile
  1900                           
  1901                           ;main.c: 359:     T2CON = 0b10010000;
  1902  012FBC  0E90               	movlw	144
  1903  012FBE  6EAC               	movwf	172,c	;volatile
  1904                           
  1905                           ;main.c: 361:     CCPR2L = 0;
  1906  012FC0  0E00               	movlw	0
  1907  012FC2  6E78               	movwf	120,c	;volatile
  1908                           
  1909                           ;main.c: 362:     CCPR2H = 0;
  1910  012FC4  0E00               	movlw	0
  1911  012FC6  6E79               	movwf	121,c	;volatile
  1912                           
  1913                           ;main.c: 363:     CCPR3L = 0;
  1914  012FC8  0E00               	movlw	0
  1915  012FCA  6E74               	movwf	116,c	;volatile
  1916                           
  1917                           ;main.c: 364:     CCPR3H = 0;
  1918  012FCC  0E00               	movlw	0
  1919  012FCE  6E75               	movwf	117,c	;volatile
  1920                           
  1921                           ;main.c: 365:     CCPR4L = 0;
  1922  012FD0  0E00               	movlw	0
  1923  012FD2  6E70               	movwf	112,c	;volatile
  1924                           
  1925                           ;main.c: 366:     CCPR4H = 0;
  1926  012FD4  0E00               	movlw	0
  1927  012FD6  6E71               	movwf	113,c	;volatile
  1928                           
  1929                           ;main.c: 367:     PWM6DCH = 0;
  1930  012FD8  0E00               	movlw	0
  1931  012FDA  6E69               	movwf	105,c	;volatile
  1932                           
  1933                           ;main.c: 368:     PWM6DCL = 0;
  1934  012FDC  0E00               	movlw	0
  1935  012FDE  6E68               	movwf	104,c	;volatile
  1936                           
  1937                           ; BSR set to: 63
  1938                           ;main.c: 369:     PWM8DCH = 255;
  1939  012FE0  6861               	setf	97,c	;volatile
  1940                           
  1941                           ; BSR set to: 63
  1942                           ;main.c: 370:     PWM8DCL = 255;
  1943  012FE2  6860               	setf	96,c	;volatile
  1944                           
  1945                           ; BSR set to: 63
  1946                           ;main.c: 372:     LATB4 = 0;
  1947  012FE4  98BB               	bcf	16315,4,c	;volatile
  1948                           
  1949                           ; BSR set to: 63
  1950                           ;main.c: 373:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1951  012FE6  0E05               	movlw	5
  1952  012FE8  0100               	movlb	0	; () banked
  1953  012FEA  6FD3               	movwf	(??_main+1)& (0+255),b
  1954  012FEC  0E0F               	movlw	15
  1955  012FEE  6FD2               	movwf	??_main& (0+255),b
  1956  012FF0  0EF1               	movlw	241
  1957  012FF2                     u8457:
  1958  012FF2  2EE8               	decfsz	wreg,f,c
  1959  012FF4  D7FE               	bra	u8457
  1960  012FF6  2FD2               	decfsz	??_main& (0+255),f,b
  1961  012FF8  D7FC               	bra	u8457
  1962  012FFA  2FD3               	decfsz	(??_main+1)& (0+255),f,b
  1963  012FFC  D7FA               	bra	u8457
  1964                           
  1965                           ;main.c: 374:     LATB4 = 1;
  1966  012FFE  88BB               	bsf	16315,4,c	;volatile
  1967                           
  1968                           ;main.c: 376:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1969  013000  0E05               	movlw	5
  1970  013002  0100               	movlb	0	; () banked
  1971  013004  6FD3               	movwf	(??_main+1)& (0+255),b
  1972  013006  0E0F               	movlw	15
  1973  013008  6FD2               	movwf	??_main& (0+255),b
  1974  01300A  0EF1               	movlw	241
  1975  01300C                     u8467:
  1976  01300C  2EE8               	decfsz	wreg,f,c
  1977  01300E  D7FE               	bra	u8467
  1978  013010  2FD2               	decfsz	??_main& (0+255),f,b
  1979  013012  D7FC               	bra	u8467
  1980  013014  2FD3               	decfsz	(??_main+1)& (0+255),f,b
  1981  013016  D7FA               	bra	u8467
  1982                           
  1983                           ;main.c: 377:     lcd_init(1, 0, 0, 0, 1);
  1984  013018  0E00               	movlw	0
  1985  01301A  6E05               	movwf	lcd_init@shift^0,c
  1986  01301C  0E00               	movlw	0
  1987  01301E  6E06               	movwf	lcd_init@cursor^0,c
  1988  013020  0E00               	movlw	0
  1989  013022  6E07               	movwf	lcd_init@cursorblink^0,c
  1990  013024  0E01               	movlw	1
  1991  013026  6E08               	movwf	lcd_init@on^0,c
  1992  013028  0E01               	movlw	1
  1993  01302A  ECE2  F09E         	call	_lcd_init
  1994                           
  1995                           ;main.c: 378:     lcd_print("Hello World!");
  1996  01302E  0EDE               	movlw	low STR_14
  1997  013030  6E05               	movwf	lcd_print@string^0,c
  1998  013032  0EFF               	movlw	high STR_14
  1999  013034  6E06               	movwf	(lcd_print@string+1)^0,c
  2000  013036  ECCD  F09D         	call	_lcd_print	;wreg free
  2001                           
  2002                           ;main.c: 380:     uart_init();
  2003  01303A  EC32  F09D         	call	_uart_init	;wreg free
  2004  01303E                     l6426:
  2005  01303E  EC00  F080         	call	_main_loop	;wreg free
  2006  013042  D7FD               	goto	l6426
  2007  013044                     __end_of_main:
  2008                           	opt callstack 0
  2009                           
  2010 ;; *************** function _uart_init *****************
  2011 ;; Defined at:
  2012 ;;		line 16 in file "uart.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;		None
  2015 ;; Auto vars:     Size  Location     Type
  2016 ;;		None
  2017 ;; Return value:  Size  Location     Type
  2018 ;;                  1    wreg      void 
  2019 ;; Registers used:
  2020 ;;		wreg, status,2
  2021 ;; Tracked objects:
  2022 ;;		On entry : 0/3F
  2023 ;;		On exit  : 3F/3A
  2024 ;;		Unchanged: 0/0
  2025 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  2026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2029 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2030 ;;Total ram usage:        0 bytes
  2031 ;; Hardware stack levels used:    1
  2032 ;; This function calls:
  2033 ;;		Nothing
  2034 ;; This function is called by:
  2035 ;;		_main
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text1
  2040  013A64                     __ptext1:
  2041                           	opt callstack 0
  2042  013A64                     _uart_init:
  2043                           	opt callstack 30
  2044                           
  2045                           ;uart.c: 17:     DMA1CON1 = 0b01000000;
  2046                           
  2047                           ;incstack = 0
  2048  013A64  0E40               	movlw	64
  2049  013A66  013B               	movlb	59	; () banked
  2050  013A68  6FFD               	movwf	253,b	;volatile
  2051                           
  2052                           ;uart.c: 18:     DMA1SSZH = 0x00;
  2053  013A6A  0E00               	movlw	0
  2054  013A6C  6FF8               	movwf	248,b	;volatile
  2055                           
  2056                           ;uart.c: 19:     DMA1SSZL = 0x01;
  2057  013A6E  0E01               	movlw	1
  2058  013A70  6FF7               	movwf	247,b	;volatile
  2059                           
  2060                           ;uart.c: 20:     DMA1SSAU = 0x00;
  2061  013A72  0E00               	movlw	0
  2062  013A74  6FFB               	movwf	251,b	;volatile
  2063                           
  2064                           ;uart.c: 21:     DMA1SSAH = 0x3d;
  2065  013A76  0E3D               	movlw	61
  2066  013A78  6FFA               	movwf	250,b	;volatile
  2067                           
  2068                           ;uart.c: 22:     DMA1SSAL = 0xe8;
  2069  013A7A  0EE8               	movlw	232
  2070  013A7C  6FF9               	movwf	249,b	;volatile
  2071                           
  2072                           ;uart.c: 23:     DMA1DSZH = 0x01;
  2073  013A7E  0E01               	movlw	1
  2074  013A80  6FEF               	movwf	239,b	;volatile
  2075                           
  2076                           ;uart.c: 24:     DMA1DSZL = 0x00;
  2077  013A82  0E00               	movlw	0
  2078  013A84  6FEE               	movwf	238,b	;volatile
  2079                           
  2080                           ;uart.c: 25:     DMA1DSAH = 0x01;
  2081  013A86  0E01               	movlw	1
  2082  013A88  6FF1               	movwf	241,b	;volatile
  2083                           
  2084                           ;uart.c: 26:     DMA1DSAL = 0x00;
  2085  013A8A  0E00               	movlw	0
  2086  013A8C  6FF0               	movwf	240,b	;volatile
  2087                           
  2088                           ;uart.c: 27:     DMA1SIRQ = 0x1b;
  2089  013A8E  0E1B               	movlw	27
  2090  013A90  6FFF               	movwf	255,b	;volatile
  2091                           
  2092                           ;uart.c: 28:     DMA1AIRQ = 0x1d;
  2093  013A92  0E1D               	movlw	29
  2094  013A94  6FFE               	movwf	254,b	;volatile
  2095                           
  2096                           ;uart.c: 29:     DMA1CON0 = 0b11000100;
  2097  013A96  0EC4               	movlw	196
  2098  013A98  6FFC               	movwf	252,b	;volatile
  2099                           
  2100                           ;uart.c: 31:     DMA2CON1 = 0b00000011;
  2101  013A9A  0E03               	movlw	3
  2102  013A9C  6FDD               	movwf	221,b	;volatile
  2103                           
  2104                           ;uart.c: 32:     DMA2SSZH = 0x00;
  2105  013A9E  0E00               	movlw	0
  2106  013AA0  6FD8               	movwf	216,b	;volatile
  2107                           
  2108                           ;uart.c: 33:     DMA2SSZL = 0x01;
  2109  013AA2  0E01               	movlw	1
  2110  013AA4  6FD7               	movwf	215,b	;volatile
  2111                           
  2112                           ;uart.c: 34:     DMA2SSAU = 0x00;
  2113  013AA6  0E00               	movlw	0
  2114  013AA8  6FDB               	movwf	219,b	;volatile
  2115                           
  2116                           ;uart.c: 35:     DMA2SSAH = 0x02;
  2117  013AAA  0E02               	movlw	2
  2118  013AAC  6FDA               	movwf	218,b	;volatile
  2119                           
  2120                           ;uart.c: 36:     DMA2SSAL = 0x00;
  2121  013AAE  0E00               	movlw	0
  2122  013AB0  6FD9               	movwf	217,b	;volatile
  2123                           
  2124                           ;uart.c: 37:     DMA2DSZH = 0x00;
  2125  013AB2  0E00               	movlw	0
  2126  013AB4  6FCF               	movwf	207,b	;volatile
  2127                           
  2128                           ;uart.c: 38:     DMA2DSZL = 0x01;
  2129  013AB6  0E01               	movlw	1
  2130  013AB8  6FCE               	movwf	206,b	;volatile
  2131                           
  2132                           ;uart.c: 39:     DMA2DSAH = 0x3d;
  2133  013ABA  0E3D               	movlw	61
  2134  013ABC  6FD1               	movwf	209,b	;volatile
  2135                           
  2136                           ;uart.c: 40:     DMA2DSAL = 0xea;
  2137  013ABE  0EEA               	movlw	234
  2138  013AC0  6FD0               	movwf	208,b	;volatile
  2139                           
  2140                           ;uart.c: 41:     DMA2SIRQ = 0x1c;
  2141  013AC2  0E1C               	movlw	28
  2142  013AC4  6FDF               	movwf	223,b	;volatile
  2143                           
  2144                           ;uart.c: 42:     DMA2AIRQ = 0x1d;
  2145  013AC6  0E1D               	movlw	29
  2146  013AC8  6FDE               	movwf	222,b	;volatile
  2147                           
  2148                           ;uart.c: 43:     DMA2CON0 = 0b00000100;
  2149  013ACA  0E04               	movlw	4
  2150  013ACC  6FDC               	movwf	220,b	;volatile
  2151                           
  2152                           ;uart.c: 45:     PRLOCK = 0x55;
  2153  013ACE  0E55               	movlw	85
  2154  013AD0  0139               	movlb	57	; () banked
  2155  013AD2  6FEF               	movwf	239,b	;volatile
  2156                           
  2157                           ;uart.c: 46:     PRLOCK = 0xAA;
  2158  013AD4  0EAA               	movlw	170
  2159  013AD6  6FEF               	movwf	239,b	;volatile
  2160                           
  2161                           ; BSR set to: 57
  2162                           ;uart.c: 47:     PRLOCKbits.PRLOCKED = 1;
  2163  013AD8  81EF               	bsf	239,0,b	;volatile
  2164                           
  2165                           ;uart.c: 49:     U1BRGH = 0;
  2166  013ADA  0E00               	movlw	0
  2167  013ADC  013D               	movlb	61	; () banked
  2168  013ADE  6FF6               	movwf	246,b	;volatile
  2169                           
  2170                           ;uart.c: 50:     U1BRGL = 34;
  2171  013AE0  0E22               	movlw	34
  2172  013AE2  6FF5               	movwf	245,b	;volatile
  2173                           
  2174                           ;uart.c: 51:     U1RXPPS = 0b001001;
  2175  013AE4  0E09               	movlw	9
  2176  013AE6  013A               	movlb	58	; () banked
  2177  013AE8  6FE5               	movwf	229,b	;volatile
  2178                           
  2179                           ;uart.c: 52:     U1CON0 = 0b00110000;
  2180  013AEA  0E30               	movlw	48
  2181  013AEC  013D               	movlb	61	; () banked
  2182  013AEE  6FF2               	movwf	242,b	;volatile
  2183                           
  2184                           ;uart.c: 53:     U1CON1 = 0b10000000;
  2185  013AF0  0E80               	movlw	128
  2186  013AF2  6FF3               	movwf	243,b	;volatile
  2187                           
  2188                           ;uart.c: 54:     U1CON2 = 0b00001000;
  2189  013AF4  0E08               	movlw	8
  2190  013AF6  6FF4               	movwf	244,b	;volatile
  2191                           
  2192                           ;uart.c: 55:     RB0PPS = 0b010011;
  2193  013AF8  0E13               	movlw	19
  2194  013AFA  013A               	movlb	58	; () banked
  2195  013AFC  6F08               	movwf	8,b	;volatile
  2196                           
  2197                           ; BSR set to: 58
  2198  013AFE  0012               	return		;funcret
  2199  013B00                     __end_of_uart_init:
  2200                           	opt callstack 0
  2201                           
  2202 ;; *************** function _main_loop *****************
  2203 ;; Defined at:
  2204 ;;		line 161 in file "main.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;		None
  2207 ;; Auto vars:     Size  Location     Type
  2208 ;;  batmsg         17    0[BANK4 ] unsigned char [17]
  2209 ;;  batlvl          2   43[BANK4 ] unsigned short 
  2210 ;;  rel             4   49[BANK4 ] long 
  2211 ;;  sample          4   45[BANK4 ] long 
  2212 ;;  lastAvg         4   17[BANK4 ] unsigned long 
  2213 ;;  update          1   37[BANK4 ] _Bool 
  2214 ;;  res             2   41[BANK4 ] short 
  2215 ;;  absRes          2   38[BANK4 ] short 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/3A
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;      Locals:         0       0       0      53       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;      Totals:         0       6       0      53       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2229 ;;Total ram usage:       59 bytes
  2230 ;; Hardware stack levels used:    1
  2231 ;; Hardware stack levels required when called:    8
  2232 ;; This function calls:
  2233 ;;		___awdiv
  2234 ;;		___fladd
  2235 ;;		___fldiv
  2236 ;;		___flge
  2237 ;;		___flmul
  2238 ;;		___lldiv
  2239 ;;		___llmod
  2240 ;;		___lmul
  2241 ;;		___xxtofl
  2242 ;;		_lcd_print
  2243 ;;		_lcd_set_data_addr
  2244 ;;		_setLED
  2245 ;;		_sprintf
  2246 ;;		_uart_send
  2247 ;;		_uart_tasks
  2248 ;;		_updateButtonLight
  2249 ;; This function is called by:
  2250 ;;		_main
  2251 ;; This function uses a non-reentrant model
  2252 ;;
  2253                           
  2254                           	psect	text2
  2255  010000                     __ptext2:
  2256                           	opt callstack 0
  2257  010000                     _main_loop:
  2258                           	opt callstack 22
  2259                           
  2260                           ;main.c: 162:     static uint32_t counter = 0;;main.c: 163:     static uint32_t sum = 0;
      +                          ;main.c: 164:     static uint16_t last[20];;main.c: 165:     static uint32_t lastSum = 0
      +                          ;;main.c: 166:     static int16_t pos = 0;;main.c: 169:     static _Bool ampFault = 0;;m
      +                          ain.c: 171:     static _Bool batCutoff = 0;;main.c: 173:     ADPCH = 0b010101;
  2261                           
  2262                           ; BSR set to: 58
  2263                           ;incstack = 0
  2264  010000  0E15               	movlw	21
  2265  010002  013E               	movlb	62	; () banked
  2266  010004  6FF1               	movwf	241,b	;volatile
  2267                           
  2268                           ; BSR set to: 62
  2269                           ;main.c: 174:     ADCON0bits.GO = 1;
  2270  010006  81F8               	bsf	248,0,b	;volatile
  2271                           
  2272                           ;main.c: 175:     while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000.0))
      +                          );
  2273  010008  D004               	goto	l6178
  2274  01000A                     l6176:
  2275                           
  2276                           ; BSR set to: 62
  2277  01000A  0E05               	movlw	5
  2278  01000C                     u8477:
  2279  01000C  2EE8               	decfsz	wreg,f,c
  2280  01000E  D7FE               	bra	u8477
  2281  010010  F000               	nop	
  2282  010012                     l6178:
  2283  010012  013E               	movlb	62	; () banked
  2284  010014  B1F8               	btfsc	248,0,b	;volatile
  2285  010016  D7F9               	goto	l6176
  2286                           
  2287                           ; BSR set to: 62
  2288                           ;main.c: 176:     int16_t res = ((ADRESH << 8) | ADRESL) - 1545;
  2289  010018  51EF               	movf	239,w,b	;volatile
  2290  01001A  006F FBC0  F0CC    	movff	16112,??_main_loop	;volatile
  2291  010020  0100               	movlb	0	; () banked
  2292  010022  6BCD               	clrf	(??_main_loop+1)& (0+255),b
  2293  010024  0060  F330  F0CD   	movff	??_main_loop,??_main_loop+1
  2294  01002A  6BCC               	clrf	??_main_loop& (0+255),b
  2295  01002C  13CC               	iorwf	??_main_loop& (0+255),f,b
  2296  01002E  0E00               	movlw	0
  2297  010030  13CD               	iorwf	(??_main_loop+1)& (0+255),f,b
  2298  010032  0EF7               	movlw	247
  2299  010034  25CC               	addwf	??_main_loop& (0+255),w,b
  2300  010036  0104               	movlb	4	; () banked
  2301  010038  6FB6               	movwf	main_loop@res& (0+255),b
  2302  01003A  0EF9               	movlw	249
  2303  01003C  0100               	movlb	0	; () banked
  2304  01003E  21CD               	addwfc	(??_main_loop+1)& (0+255),w,b
  2305  010040  0104               	movlb	4	; () banked
  2306  010042  6FB7               	movwf	(main_loop@res+1)& (0+255),b
  2307                           
  2308                           ;main.c: 177:     int16_t absRes = res < 0 ? -res : res;
  2309  010044  BFB7               	btfsc	(main_loop@res+1)& (0+255),7,b
  2310  010046  D007               	goto	l273
  2311                           
  2312                           ; BSR set to: 4
  2313  010048  0061  F2D8  F4B3   	movff	main_loop@res,main_loop@absRes
  2314  01004E  0061  F2DC  F4B4   	movff	main_loop@res+1,main_loop@absRes+1
  2315  010054  D011               	goto	l6184
  2316  010056                     l273:
  2317                           
  2318                           ; BSR set to: 4
  2319  010056  0061  F2D8  F0CC   	movff	main_loop@res,??_main_loop
  2320  01005C  0061  F2DC  F0CD   	movff	main_loop@res+1,??_main_loop+1
  2321  010062  0100               	movlb	0	; () banked
  2322  010064  1FCC               	comf	??_main_loop& (0+255),f,b
  2323  010066  1FCD               	comf	(??_main_loop+1)& (0+255),f,b
  2324  010068  4BCC               	infsnz	??_main_loop& (0+255),f,b
  2325  01006A  2BCD               	incf	(??_main_loop+1)& (0+255),f,b
  2326  01006C  0060  F330  F4B3   	movff	??_main_loop,main_loop@absRes
  2327  010072  0060  F334  F4B4   	movff	??_main_loop+1,main_loop@absRes+1
  2328  010078                     l6184:
  2329                           
  2330                           ;main.c: 178:     sum += absRes;
  2331  010078  0061  F2CC  F0CC   	movff	main_loop@absRes,??_main_loop
  2332  01007E  0061  F2D0  F0CD   	movff	main_loop@absRes+1,??_main_loop+1
  2333  010084  0E00               	movlw	0
  2334  010086  0100               	movlb	0	; () banked
  2335  010088  BFCD               	btfsc	(??_main_loop+1)& (0+255),7,b
  2336  01008A  0EFF               	movlw	255
  2337  01008C  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2338  01008E  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2339  010090  51CC               	movf	??_main_loop& (0+255),w,b
  2340  010092  0104               	movlb	4	; () banked
  2341  010094  272C               	addwf	main_loop@sum& (0+255),f,b
  2342  010096  0100               	movlb	0	; () banked
  2343  010098  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2344  01009A  0104               	movlb	4	; () banked
  2345  01009C  232D               	addwfc	(main_loop@sum+1)& (0+255),f,b
  2346  01009E  0100               	movlb	0	; () banked
  2347  0100A0  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2348  0100A2  0104               	movlb	4	; () banked
  2349  0100A4  232E               	addwfc	(main_loop@sum+2)& (0+255),f,b
  2350  0100A6  0100               	movlb	0	; () banked
  2351  0100A8  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2352  0100AA  0104               	movlb	4	; () banked
  2353  0100AC  232F               	addwfc	(main_loop@sum+3)& (0+255),f,b
  2354                           
  2355                           ; BSR set to: 4
  2356                           ;main.c: 180:     if (counter % 50 == 50 - 1) {
  2357  0100AE  0061  F0C0  F00E   	movff	main_loop@counter,___llmod@dividend
  2358  0100B4  0061  F0C4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2359  0100BA  0061  F0C8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2360  0100C0  0061  F0CC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2361  0100C6  0E32               	movlw	50
  2362  0100C8  6E12               	movwf	___llmod@divisor^0,c
  2363  0100CA  0E00               	movlw	0
  2364  0100CC  6E13               	movwf	(___llmod@divisor+1)^0,c
  2365  0100CE  0E00               	movlw	0
  2366  0100D0  6E14               	movwf	(___llmod@divisor+2)^0,c
  2367  0100D2  0E00               	movlw	0
  2368  0100D4  6E15               	movwf	(___llmod@divisor+3)^0,c
  2369  0100D6  ECCE  F09F         	call	___llmod	;wreg free
  2370  0100DA  0E31               	movlw	49
  2371  0100DC  180E               	xorwf	?___llmod^0,w,c
  2372  0100DE  100F               	iorwf	(?___llmod+1)^0,w,c
  2373  0100E0  1010               	iorwf	(?___llmod+2)^0,w,c
  2374  0100E2  1011               	iorwf	(?___llmod+3)^0,w,c
  2375  0100E4  A4D8               	btfss	status,2,c
  2376  0100E6  D25F               	goto	l6252
  2377                           
  2378                           ;main.c: 181:         int32_t sample = sum * 2 / 50;
  2379  0100E8  90D8               	bcf	status,0,c
  2380  0100EA  0104               	movlb	4	; () banked
  2381  0100EC  352C               	rlcf	main_loop@sum& (0+255),w,b
  2382  0100EE  6E01               	movwf	___lldiv@dividend^0,c
  2383  0100F0  352D               	rlcf	(main_loop@sum+1)& (0+255),w,b
  2384  0100F2  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2385  0100F4  352E               	rlcf	(main_loop@sum+2)& (0+255),w,b
  2386  0100F6  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2387  0100F8  352F               	rlcf	(main_loop@sum+3)& (0+255),w,b
  2388  0100FA  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2389  0100FC  0E32               	movlw	50
  2390  0100FE  6E05               	movwf	___lldiv@divisor^0,c
  2391  010100  0E00               	movlw	0
  2392  010102  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2393  010104  0E00               	movlw	0
  2394  010106  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2395  010108  0E00               	movlw	0
  2396  01010A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2397  01010C  EC59  F09E         	call	___lldiv	;wreg free
  2398  010110  0060  F004  F4BA   	movff	?___lldiv,main_loop@sample
  2399  010116  0060  F008  F4BB   	movff	?___lldiv+1,main_loop@sample+1
  2400  01011C  0060  F00C  F4BC   	movff	?___lldiv+2,main_loop@sample+2
  2401  010122  0060  F010  F4BD   	movff	?___lldiv+3,main_loop@sample+3
  2402                           
  2403                           ; BSR set to: 4
  2404                           ;main.c: 182:         sample -= 9;
  2405  010128  0EF7               	movlw	247
  2406  01012A  27BA               	addwf	main_loop@sample& (0+255),f,b
  2407  01012C  0EFF               	movlw	255
  2408  01012E  23BB               	addwfc	(main_loop@sample+1)& (0+255),f,b
  2409  010130  0EFF               	movlw	255
  2410  010132  23BC               	addwfc	(main_loop@sample+2)& (0+255),f,b
  2411  010134  0EFF               	movlw	255
  2412  010136  23BD               	addwfc	(main_loop@sample+3)& (0+255),f,b
  2413                           
  2414                           ; BSR set to: 4
  2415                           ;main.c: 183:         if (sample < 0) sample = 0;
  2416  010138  AFBD               	btfss	(main_loop@sample+3)& (0+255),7,b
  2417  01013A  D008               	goto	l6196
  2418                           
  2419                           ; BSR set to: 4
  2420  01013C  0E00               	movlw	0
  2421  01013E  6FBA               	movwf	main_loop@sample& (0+255),b
  2422  010140  0E00               	movlw	0
  2423  010142  6FBB               	movwf	(main_loop@sample+1)& (0+255),b
  2424  010144  0E00               	movlw	0
  2425  010146  6FBC               	movwf	(main_loop@sample+2)& (0+255),b
  2426  010148  0E00               	movlw	0
  2427  01014A  6FBD               	movwf	(main_loop@sample+3)& (0+255),b
  2428  01014C                     l6196:
  2429                           
  2430                           ; BSR set to: 4
  2431                           ;main.c: 185:         uint32_t lastAvg = lastSum / 20;
  2432  01014C  0061  F0A0  F001   	movff	main_loop@lastSum,___lldiv@dividend
  2433  010152  0061  F0A4  F002   	movff	main_loop@lastSum+1,___lldiv@dividend+1
  2434  010158  0061  F0A8  F003   	movff	main_loop@lastSum+2,___lldiv@dividend+2
  2435  01015E  0061  F0AC  F004   	movff	main_loop@lastSum+3,___lldiv@dividend+3
  2436  010164  0E14               	movlw	20
  2437  010166  6E05               	movwf	___lldiv@divisor^0,c
  2438  010168  0E00               	movlw	0
  2439  01016A  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2440  01016C  0E00               	movlw	0
  2441  01016E  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2442  010170  0E00               	movlw	0
  2443  010172  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2444  010174  EC59  F09E         	call	___lldiv	;wreg free
  2445  010178  0060  F004  F49E   	movff	?___lldiv,main_loop@lastAvg
  2446  01017E  0060  F008  F49F   	movff	?___lldiv+1,main_loop@lastAvg+1
  2447  010184  0060  F00C  F4A0   	movff	?___lldiv+2,main_loop@lastAvg+2
  2448  01018A  0060  F010  F4A1   	movff	?___lldiv+3,main_loop@lastAvg+3
  2449                           
  2450                           ; BSR set to: 4
  2451                           ;main.c: 186:         int32_t rel = (sample - lastAvg) * soundAmplify[volume_level];
  2452  010190  519E               	movf	main_loop@lastAvg& (0+255),w,b
  2453  010192  5DBA               	subwf	main_loop@sample& (0+255),w,b
  2454  010194  6E01               	movwf	___lmul@multiplier^0,c
  2455  010196  519F               	movf	(main_loop@lastAvg+1)& (0+255),w,b
  2456  010198  59BB               	subwfb	(main_loop@sample+1)& (0+255),w,b
  2457  01019A  6E02               	movwf	(___lmul@multiplier+1)^0,c
  2458  01019C  51A0               	movf	(main_loop@lastAvg+2)& (0+255),w,b
  2459  01019E  59BC               	subwfb	(main_loop@sample+2)& (0+255),w,b
  2460  0101A0  6E03               	movwf	(___lmul@multiplier+2)^0,c
  2461  0101A2  51A1               	movf	(main_loop@lastAvg+3)& (0+255),w,b
  2462  0101A4  59BD               	subwfb	(main_loop@sample+3)& (0+255),w,b
  2463  0101A6  6E04               	movwf	(___lmul@multiplier+3)^0,c
  2464  0101A8  513C               	movf	_volume_level& (0+255),w,b
  2465  0101AA  0D02               	mullw	2
  2466  0101AC  0EE1               	movlw	low _soundAmplify
  2467  0101AE  24F3               	addwf	243,w,c
  2468  0101B0  6EF6               	movwf	tblptrl,c
  2469  0101B2  0EFE               	movlw	high _soundAmplify
  2470  0101B4  20F4               	addwfc	244,w,c
  2471  0101B6  6EF7               	movwf	tblptrh,c
  2472  0101B8                     	if	1	;There are 3 active tblptr bytes
  2473  0101B8  6AF8               	clrf	tblptru,c
  2474  0101BA  0E00               	movlw	low (__mediumconst shr (0+16))
  2475  0101BC  22F8               	addwfc	tblptru,f,c
  2476  0101BE                     	endif
  2477  0101BE  0009               	tblrd		*+
  2478  0101C0  006F FFD4  F0CC    	movff	tablat,??_main_loop
  2479  0101C6  0009               	tblrd		*+
  2480  0101C8  006F FFD4  F0CD    	movff	tablat,??_main_loop+1
  2481  0101CE  0060  F330  F005   	movff	??_main_loop,___lmul@multiplicand
  2482  0101D4  0060  F334  F006   	movff	??_main_loop+1,___lmul@multiplicand+1
  2483  0101DA  6A07               	clrf	(___lmul@multiplicand+2)^0,c
  2484  0101DC  6A08               	clrf	(___lmul@multiplicand+3)^0,c
  2485  0101DE  EC68  F0A0         	call	___lmul	;wreg free
  2486  0101E2  0060  F004  F4BE   	movff	?___lmul,main_loop@rel
  2487  0101E8  0060  F008  F4BF   	movff	?___lmul+1,main_loop@rel+1
  2488  0101EE  0060  F00C  F4C0   	movff	?___lmul+2,main_loop@rel+2
  2489  0101F4  0060  F010  F4C1   	movff	?___lmul+3,main_loop@rel+3
  2490                           
  2491                           ;main.c: 189:         _Bool update = lightMode == 1 && streaming &&
  2492  0101FA  0E00               	movlw	0
  2493  0101FC  0104               	movlb	4	; () banked
  2494  0101FE  6FB5               	movwf	_main_loop$321& (0+255),b
  2495                           
  2496                           ; BSR set to: 4
  2497  010200  0538               	decf	_lightMode& (0+255),w,b
  2498  010202  A4D8               	btfss	status,2,c
  2499  010204  D01F               	goto	l279
  2500                           
  2501                           ; BSR set to: 4
  2502  010206  513A               	movf	_streaming& (0+255),w,b
  2503  010208  B4D8               	btfsc	status,2,c
  2504  01020A  D01C               	goto	l279
  2505                           
  2506                           ; BSR set to: 4
  2507  01020C  0E04               	movlw	4
  2508  01020E  613C               	cpfslt	_volume_level& (0+255),b
  2509  010210  D00B               	goto	u8100
  2510                           
  2511                           ; BSR set to: 4
  2512  010212  0100               	movlb	0	; () banked
  2513  010214  BFE9               	btfsc	(_ledBrightness+3)& (0+255),7,b
  2514  010216  D008               	goto	u8100
  2515  010218  51E9               	movf	(_ledBrightness+3)& (0+255),w,b
  2516  01021A  11E8               	iorwf	(_ledBrightness+2)& (0+255),w,b
  2517  01021C  11E7               	iorwf	(_ledBrightness+1)& (0+255),w,b
  2518  01021E  E112               	bnz	l279
  2519  010220  0E19               	movlw	25
  2520  010222  5DE6               	subwf	_ledBrightness& (0+255),w,b
  2521  010224  B0D8               	btfsc	status,0,c
  2522  010226  D00E               	goto	l279
  2523  010228                     u8100:
  2524  010228  0104               	movlb	4	; () banked
  2525  01022A  BFC1               	btfsc	(main_loop@rel+3)& (0+255),7,b
  2526  01022C  D00B               	goto	l279
  2527  01022E  51C1               	movf	(main_loop@rel+3)& (0+255),w,b
  2528  010230  11C0               	iorwf	(main_loop@rel+2)& (0+255),w,b
  2529  010232  E106               	bnz	u8110
  2530  010234  0E09               	movlw	9
  2531  010236  5DBE               	subwf	main_loop@rel& (0+255),w,b
  2532  010238  0E07               	movlw	7
  2533  01023A  59BF               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2534  01023C  A0D8               	btfss	status,0,c
  2535  01023E  D002               	goto	l279
  2536  010240                     u8110:
  2537                           
  2538                           ; BSR set to: 4
  2539  010240  0E01               	movlw	1
  2540  010242  6FB5               	movwf	_main_loop$321& (0+255),b
  2541  010244                     l279:
  2542  010244  0104               	movlb	4	; () banked
  2543  010246  51B5               	movf	_main_loop$321& (0+255),w,b
  2544  010248  B4D8               	btfsc	status,2,c
  2545  01024A  D002               	goto	u8120
  2546  01024C  0E01               	movlw	1
  2547  01024E  D001               	goto	u8130
  2548  010250                     u8120:
  2549  010250  0E00               	movlw	0
  2550  010252                     u8130:
  2551  010252  6FB2               	movwf	main_loop@update& (0+255),b
  2552                           
  2553                           ;main.c: 191:         if (update) pos = (4095 < (pos > rel ? pos : rel) ? 4095 : (pos > 
      +                          rel ? pos : rel));
  2554  010254  51B2               	movf	main_loop@update& (0+255),w,b
  2555  010256  B4D8               	btfsc	status,2,c
  2556  010258  D097               	goto	l6234
  2557                           
  2558                           ; BSR set to: 4
  2559  01025A  0061  F0D0  F0CC   	movff	main_loop@pos,??_main_loop
  2560  010260  0061  F0D4  F0CD   	movff	main_loop@pos+1,??_main_loop+1
  2561  010266  0E00               	movlw	0
  2562  010268  0100               	movlb	0	; () banked
  2563  01026A  BFCD               	btfsc	(??_main_loop+1)& (0+255),7,b
  2564  01026C  0EFF               	movlw	255
  2565  01026E  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2566  010270  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2567  010272  51CC               	movf	??_main_loop& (0+255),w,b
  2568  010274  0104               	movlb	4	; () banked
  2569  010276  5DBE               	subwf	main_loop@rel& (0+255),w,b
  2570  010278  0100               	movlb	0	; () banked
  2571  01027A  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2572  01027C  0104               	movlb	4	; () banked
  2573  01027E  59BF               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2574  010280  0100               	movlb	0	; () banked
  2575  010282  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2576  010284  0104               	movlb	4	; () banked
  2577  010286  59C0               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2578  010288  51C1               	movf	(main_loop@rel+3)& (0+255),w,b
  2579  01028A  0A80               	xorlw	128
  2580  01028C  0100               	movlb	0	; () banked
  2581  01028E  6FD0               	movwf	(??_main_loop+4)& (0+255),b
  2582  010290  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2583  010292  0A80               	xorlw	128
  2584  010294  59D0               	subwfb	(??_main_loop+4)& (0+255),w,b
  2585  010296  A0D8               	btfss	status,0,c
  2586  010298  D00D               	goto	l6218
  2587                           
  2588                           ; BSR set to: 0
  2589  01029A  0061  F2F8  F4A6   	movff	main_loop@rel,_main_loop$323
  2590  0102A0  0061  F2FC  F4A7   	movff	main_loop@rel+1,_main_loop$323+1
  2591  0102A6  0061  F300  F4A8   	movff	main_loop@rel+2,_main_loop$323+2
  2592  0102AC  0061  F304  F4A9   	movff	main_loop@rel+3,_main_loop$323+3
  2593  0102B2  D00C               	goto	l6220
  2594  0102B4                     l6218:
  2595                           
  2596                           ; BSR set to: 0
  2597  0102B4  0061  F0D0  F4A6   	movff	main_loop@pos,_main_loop$323
  2598  0102BA  0061  F0D4  F4A7   	movff	main_loop@pos+1,_main_loop$323+1
  2599  0102C0  0104               	movlb	4	; () banked
  2600  0102C2  0E00               	movlw	0
  2601  0102C4  BFA7               	btfsc	(_main_loop$323+1)& (0+255),7,b
  2602  0102C6  0EFF               	movlw	-1
  2603  0102C8  6FA8               	movwf	(_main_loop$323+2)& (0+255),b
  2604  0102CA  6FA9               	movwf	(_main_loop$323+3)& (0+255),b
  2605  0102CC                     l6220:
  2606  0102CC  0104               	movlb	4	; () banked
  2607  0102CE  BFA9               	btfsc	(_main_loop$323+3)& (0+255),7,b
  2608  0102D0  D007               	goto	u8160
  2609  0102D2  51A9               	movf	(_main_loop$323+3)& (0+255),w,b
  2610  0102D4  11A8               	iorwf	(_main_loop$323+2)& (0+255),w,b
  2611  0102D6  E14A               	bnz	l6230
  2612  0102D8  0E10               	movlw	16
  2613  0102DA  5DA7               	subwf	(_main_loop$323+1)& (0+255),w,b
  2614  0102DC  B0D8               	btfsc	status,0,c
  2615  0102DE  D046               	goto	l6230
  2616  0102E0                     u8160:
  2617                           
  2618                           ; BSR set to: 4
  2619  0102E0  0061  F0D0  F0CC   	movff	main_loop@pos,??_main_loop
  2620  0102E6  0061  F0D4  F0CD   	movff	main_loop@pos+1,??_main_loop+1
  2621  0102EC  0E00               	movlw	0
  2622  0102EE  0100               	movlb	0	; () banked
  2623  0102F0  BFCD               	btfsc	(??_main_loop+1)& (0+255),7,b
  2624  0102F2  0EFF               	movlw	255
  2625  0102F4  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2626  0102F6  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2627  0102F8  51CC               	movf	??_main_loop& (0+255),w,b
  2628  0102FA  0104               	movlb	4	; () banked
  2629  0102FC  5DBE               	subwf	main_loop@rel& (0+255),w,b
  2630  0102FE  0100               	movlb	0	; () banked
  2631  010300  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2632  010302  0104               	movlb	4	; () banked
  2633  010304  59BF               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2634  010306  0100               	movlb	0	; () banked
  2635  010308  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2636  01030A  0104               	movlb	4	; () banked
  2637  01030C  59C0               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2638  01030E  51C1               	movf	(main_loop@rel+3)& (0+255),w,b
  2639  010310  0A80               	xorlw	128
  2640  010312  0100               	movlb	0	; () banked
  2641  010314  6FD0               	movwf	(??_main_loop+4)& (0+255),b
  2642  010316  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2643  010318  0A80               	xorlw	128
  2644  01031A  59D0               	subwfb	(??_main_loop+4)& (0+255),w,b
  2645  01031C  A0D8               	btfss	status,0,c
  2646  01031E  D00D               	goto	l6226
  2647                           
  2648                           ; BSR set to: 0
  2649  010320  0061  F2F8  F4AA   	movff	main_loop@rel,_main_loop$324
  2650  010326  0061  F2FC  F4AB   	movff	main_loop@rel+1,_main_loop$324+1
  2651  01032C  0061  F300  F4AC   	movff	main_loop@rel+2,_main_loop$324+2
  2652  010332  0061  F304  F4AD   	movff	main_loop@rel+3,_main_loop$324+3
  2653  010338  D00C               	goto	l6228
  2654  01033A                     l6226:
  2655                           
  2656                           ; BSR set to: 0
  2657  01033A  0061  F0D0  F4AA   	movff	main_loop@pos,_main_loop$324
  2658  010340  0061  F0D4  F4AB   	movff	main_loop@pos+1,_main_loop$324+1
  2659  010346  0104               	movlb	4	; () banked
  2660  010348  0E00               	movlw	0
  2661  01034A  BFAB               	btfsc	(_main_loop$324+1)& (0+255),7,b
  2662  01034C  0EFF               	movlw	-1
  2663  01034E  6FAC               	movwf	(_main_loop$324+2)& (0+255),b
  2664  010350  6FAD               	movwf	(_main_loop$324+3)& (0+255),b
  2665  010352                     l6228:
  2666  010352  0061  F2A8  F4A2   	movff	_main_loop$324,_main_loop$322
  2667  010358  0061  F2AC  F4A3   	movff	_main_loop$324+1,_main_loop$322+1
  2668  01035E  0061  F2B0  F4A4   	movff	_main_loop$324+2,_main_loop$322+2
  2669  010364  0061  F2B4  F4A5   	movff	_main_loop$324+3,_main_loop$322+3
  2670  01036A  D008               	goto	l6232
  2671  01036C                     l6230:
  2672                           
  2673                           ; BSR set to: 4
  2674  01036C  0EFF               	movlw	255
  2675  01036E  6FA2               	movwf	_main_loop$322& (0+255),b
  2676  010370  0E0F               	movlw	15
  2677  010372  6FA3               	movwf	(_main_loop$322+1)& (0+255),b
  2678  010374  0E00               	movlw	0
  2679  010376  6FA4               	movwf	(_main_loop$322+2)& (0+255),b
  2680  010378  0E00               	movlw	0
  2681  01037A  6FA5               	movwf	(_main_loop$322+3)& (0+255),b
  2682  01037C                     l6232:
  2683  01037C  0061  F288  F434   	movff	_main_loop$322,main_loop@pos
  2684  010382  0061  F28C  F435   	movff	_main_loop$322+1,main_loop@pos+1
  2685  010388                     l6234:
  2686                           
  2687                           ;main.c: 193:         setLED(pos, counter);
  2688  010388  0061  F0D0  F060   	movff	main_loop@pos,setLED@mod
  2689  01038E  0061  F0D4  F061   	movff	main_loop@pos+1,setLED@mod+1
  2690  010394  0100               	movlb	0	; () banked
  2691  010396  0E00               	movlw	0
  2692  010398  BF61               	btfsc	(setLED@mod+1)& (0+255),7,b
  2693  01039A  0EFF               	movlw	-1
  2694  01039C  6F62               	movwf	(setLED@mod+2)& (0+255),b
  2695  01039E  6F63               	movwf	(setLED@mod+3)& (0+255),b
  2696  0103A0  0061  F0C0  F064   	movff	main_loop@counter,setLED@step
  2697  0103A6  0061  F0C4  F065   	movff	main_loop@counter+1,setLED@step+1
  2698  0103AC  0061  F0C8  F066   	movff	main_loop@counter+2,setLED@step+2
  2699  0103B2  0061  F0CC  F067   	movff	main_loop@counter+3,setLED@step+3
  2700  0103B8  EC67  F08B         	call	_setLED	;wreg free
  2701                           
  2702                           ;main.c: 195:         pos = (pos - (pos / 50 + 10) > 0 ? pos - (pos / 50 + 10) : 0);
  2703  0103BC  0EF6               	movlw	246
  2704  0103BE  0100               	movlb	0	; () banked
  2705  0103C0  6FCC               	movwf	??_main_loop& (0+255),b
  2706  0103C2  0EFF               	movlw	255
  2707  0103C4  6FCD               	movwf	(??_main_loop+1)& (0+255),b
  2708  0103C6  0061  F0D0  F001   	movff	main_loop@pos,___awdiv@dividend
  2709  0103CC  0061  F0D4  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2710  0103D2  0E00               	movlw	0
  2711  0103D4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2712  0103D6  0E32               	movlw	50
  2713  0103D8  6E03               	movwf	___awdiv@divisor^0,c
  2714  0103DA  EC9E  F09E         	call	___awdiv	;wreg free
  2715  0103DE  0061  F0D0  F0CE   	movff	main_loop@pos,??_main_loop+2
  2716  0103E4  0061  F0D4  F0CF   	movff	main_loop@pos+1,??_main_loop+3
  2717  0103EA  5001               	movf	?___awdiv^0,w,c
  2718  0103EC  5FCE               	subwf	(??_main_loop+2)& (0+255),f,b
  2719  0103EE  5002               	movf	(?___awdiv+1)^0,w,c
  2720  0103F0  5BCF               	subwfb	(??_main_loop+3)& (0+255),f,b
  2721  0103F2  51CC               	movf	??_main_loop& (0+255),w,b
  2722  0103F4  27CE               	addwf	(??_main_loop+2)& (0+255),f,b
  2723  0103F6  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2724  0103F8  23CF               	addwfc	(??_main_loop+3)& (0+255),f,b
  2725  0103FA  BFCF               	btfsc	(??_main_loop+3)& (0+255),7,b
  2726  0103FC  D005               	goto	u8180
  2727  0103FE  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2728  010400  E109               	bnz	l6240
  2729  010402  05CE               	decf	(??_main_loop+2)& (0+255),w,b
  2730  010404  B0D8               	btfsc	status,0,c
  2731  010406  D006               	goto	l6240
  2732  010408                     u8180:
  2733                           
  2734                           ; BSR set to: 0
  2735  010408  0E00               	movlw	0
  2736  01040A  0104               	movlb	4	; () banked
  2737  01040C  6F35               	movwf	(main_loop@pos+1)& (0+255),b
  2738  01040E  0E00               	movlw	0
  2739  010410  6F34               	movwf	main_loop@pos& (0+255),b
  2740  010412  D01F               	goto	l6242
  2741  010414                     l6240:
  2742                           
  2743                           ; BSR set to: 0
  2744  010414  0061  F0D0  F001   	movff	main_loop@pos,___awdiv@dividend
  2745  01041A  0061  F0D4  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2746  010420  0E00               	movlw	0
  2747  010422  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2748  010424  0E32               	movlw	50
  2749  010426  6E03               	movwf	___awdiv@divisor^0,c
  2750  010428  EC9E  F09E         	call	___awdiv	;wreg free
  2751  01042C  0061  F0D0  F0CC   	movff	main_loop@pos,??_main_loop
  2752  010432  0061  F0D4  F0CD   	movff	main_loop@pos+1,??_main_loop+1
  2753  010438  5001               	movf	?___awdiv^0,w,c
  2754  01043A  5FCC               	subwf	??_main_loop& (0+255),f,b
  2755  01043C  5002               	movf	(?___awdiv+1)^0,w,c
  2756  01043E  5BCD               	subwfb	(??_main_loop+1)& (0+255),f,b
  2757  010440  0EF6               	movlw	246
  2758  010442  25CC               	addwf	??_main_loop& (0+255),w,b
  2759  010444  0104               	movlb	4	; () banked
  2760  010446  6F34               	movwf	main_loop@pos& (0+255),b
  2761  010448  0EFF               	movlw	255
  2762  01044A  0100               	movlb	0	; () banked
  2763  01044C  21CD               	addwfc	(??_main_loop+1)& (0+255),w,b
  2764  01044E  0104               	movlb	4	; () banked
  2765  010450  6F35               	movwf	(main_loop@pos+1)& (0+255),b
  2766  010452                     l6242:
  2767                           
  2768                           ; BSR set to: 4
  2769                           ;main.c: 197:         sum = 0;
  2770  010452  0E00               	movlw	0
  2771  010454  6F2C               	movwf	main_loop@sum& (0+255),b
  2772  010456  0E00               	movlw	0
  2773  010458  6F2D               	movwf	(main_loop@sum+1)& (0+255),b
  2774  01045A  0E00               	movlw	0
  2775  01045C  6F2E               	movwf	(main_loop@sum+2)& (0+255),b
  2776  01045E  0E00               	movlw	0
  2777  010460  6F2F               	movwf	(main_loop@sum+3)& (0+255),b
  2778                           
  2779                           ; BSR set to: 4
  2780                           ;main.c: 199:         lastSum -= last[(counter / 50) % 20];
  2781  010462  0E32               	movlw	50
  2782  010464  6E05               	movwf	___lldiv@divisor^0,c
  2783  010466  0E00               	movlw	0
  2784  010468  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2785  01046A  0E00               	movlw	0
  2786  01046C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2787  01046E  0E00               	movlw	0
  2788  010470  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2789  010472  0061  F0C0  F001   	movff	main_loop@counter,___lldiv@dividend
  2790  010478  0061  F0C4  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2791  01047E  0061  F0C8  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2792  010484  0061  F0CC  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2793  01048A  EC59  F09E         	call	___lldiv	;wreg free
  2794  01048E  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2795  010494  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2796  01049A  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2797  0104A0  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2798  0104A6  0E14               	movlw	20
  2799  0104A8  6E12               	movwf	___llmod@divisor^0,c
  2800  0104AA  0E00               	movlw	0
  2801  0104AC  6E13               	movwf	(___llmod@divisor+1)^0,c
  2802  0104AE  0E00               	movlw	0
  2803  0104B0  6E14               	movwf	(___llmod@divisor+2)^0,c
  2804  0104B2  0E00               	movlw	0
  2805  0104B4  6E15               	movwf	(___llmod@divisor+3)^0,c
  2806  0104B6  ECCE  F09F         	call	___llmod	;wreg free
  2807  0104BA  90D8               	bcf	status,0,c
  2808  0104BC  360E               	rlcf	?___llmod^0,f,c
  2809  0104BE  360F               	rlcf	(?___llmod+1)^0,f,c
  2810  0104C0  0E00               	movlw	low main_loop@last
  2811  0104C2  240E               	addwf	?___llmod^0,w,c
  2812  0104C4  6ED9               	movwf	fsr2l,c
  2813  0104C6  0E04               	movlw	high main_loop@last
  2814  0104C8  200F               	addwfc	(?___llmod+1)^0,w,c
  2815  0104CA  6EDA               	movwf	fsr2h,c
  2816  0104CC  006F FF78  F0CC    	movff	postinc2,??_main_loop
  2817  0104D2  006F FF74  F0CD    	movff	postdec2,??_main_loop+1
  2818  0104D8  0100               	movlb	0	; () banked
  2819  0104DA  51CC               	movf	??_main_loop& (0+255),w,b
  2820  0104DC  6FCE               	movwf	(??_main_loop+2)& (0+255),b
  2821  0104DE  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  2822  0104E0  6FCF               	movwf	(??_main_loop+3)& (0+255),b
  2823  0104E2  6BD0               	clrf	(??_main_loop+4)& (0+255),b
  2824  0104E4  6BD1               	clrf	(??_main_loop+5)& (0+255),b
  2825  0104E6  51CE               	movf	(??_main_loop+2)& (0+255),w,b
  2826  0104E8  0104               	movlb	4	; () banked
  2827  0104EA  5F28               	subwf	main_loop@lastSum& (0+255),f,b
  2828  0104EC  0100               	movlb	0	; () banked
  2829  0104EE  51CF               	movf	(??_main_loop+3)& (0+255),w,b
  2830  0104F0  0104               	movlb	4	; () banked
  2831  0104F2  5B29               	subwfb	(main_loop@lastSum+1)& (0+255),f,b
  2832  0104F4  0100               	movlb	0	; () banked
  2833  0104F6  51D0               	movf	(??_main_loop+4)& (0+255),w,b
  2834  0104F8  0104               	movlb	4	; () banked
  2835  0104FA  5B2A               	subwfb	(main_loop@lastSum+2)& (0+255),f,b
  2836  0104FC  0100               	movlb	0	; () banked
  2837  0104FE  51D1               	movf	(??_main_loop+5)& (0+255),w,b
  2838  010500  0104               	movlb	4	; () banked
  2839  010502  5B2B               	subwfb	(main_loop@lastSum+3)& (0+255),f,b
  2840                           
  2841                           ; BSR set to: 4
  2842                           ;main.c: 200:         lastSum += sample;
  2843  010504  51BA               	movf	main_loop@sample& (0+255),w,b
  2844  010506  2728               	addwf	main_loop@lastSum& (0+255),f,b
  2845  010508  51BB               	movf	(main_loop@sample+1)& (0+255),w,b
  2846  01050A  2329               	addwfc	(main_loop@lastSum+1)& (0+255),f,b
  2847  01050C  51BC               	movf	(main_loop@sample+2)& (0+255),w,b
  2848  01050E  232A               	addwfc	(main_loop@lastSum+2)& (0+255),f,b
  2849  010510  51BD               	movf	(main_loop@sample+3)& (0+255),w,b
  2850  010512  232B               	addwfc	(main_loop@lastSum+3)& (0+255),f,b
  2851                           
  2852                           ; BSR set to: 4
  2853                           ;main.c: 201:         last[(counter / 50) % 20] = sample;
  2854  010514  0E32               	movlw	50
  2855  010516  6E05               	movwf	___lldiv@divisor^0,c
  2856  010518  0E00               	movlw	0
  2857  01051A  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2858  01051C  0E00               	movlw	0
  2859  01051E  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2860  010520  0E00               	movlw	0
  2861  010522  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2862  010524  0061  F0C0  F001   	movff	main_loop@counter,___lldiv@dividend
  2863  01052A  0061  F0C4  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2864  010530  0061  F0C8  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2865  010536  0061  F0CC  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2866  01053C  EC59  F09E         	call	___lldiv	;wreg free
  2867  010540  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2868  010546  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2869  01054C  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2870  010552  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2871  010558  0E14               	movlw	20
  2872  01055A  6E12               	movwf	___llmod@divisor^0,c
  2873  01055C  0E00               	movlw	0
  2874  01055E  6E13               	movwf	(___llmod@divisor+1)^0,c
  2875  010560  0E00               	movlw	0
  2876  010562  6E14               	movwf	(___llmod@divisor+2)^0,c
  2877  010564  0E00               	movlw	0
  2878  010566  6E15               	movwf	(___llmod@divisor+3)^0,c
  2879  010568  ECCE  F09F         	call	___llmod	;wreg free
  2880  01056C  90D8               	bcf	status,0,c
  2881  01056E  360E               	rlcf	?___llmod^0,f,c
  2882  010570  360F               	rlcf	(?___llmod+1)^0,f,c
  2883  010572  0E00               	movlw	low main_loop@last
  2884  010574  240E               	addwf	?___llmod^0,w,c
  2885  010576  6ED9               	movwf	fsr2l,c
  2886  010578  0E04               	movlw	high main_loop@last
  2887  01057A  200F               	addwfc	(?___llmod+1)^0,w,c
  2888  01057C  6EDA               	movwf	fsr2h,c
  2889  01057E  0061  F2EB  FFDE   	movff	main_loop@sample,postinc2
  2890  010584  0061  F2EF  FFDD   	movff	main_loop@sample+1,postdec2
  2891                           
  2892                           ;main.c: 203:         updateButtonLight(counter);
  2893  01058A  0061  F0C0  F01B   	movff	main_loop@counter,updateButtonLight@step
  2894  010590  0061  F0C4  F01C   	movff	main_loop@counter+1,updateButtonLight@step+1
  2895  010596  0061  F0C8  F01D   	movff	main_loop@counter+2,updateButtonLight@step+2
  2896  01059C  0061  F0CC  F01E   	movff	main_loop@counter+3,updateButtonLight@step+3
  2897  0105A2  EC81  F09A         	call	_updateButtonLight	;wreg free
  2898  0105A6                     l6252:
  2899                           
  2900                           ;main.c: 206:     if (counter % 1000 == 999) {
  2901  0105A6  0061  F0C0  F00E   	movff	main_loop@counter,___llmod@dividend
  2902  0105AC  0061  F0C4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2903  0105B2  0061  F0C8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2904  0105B8  0061  F0CC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2905  0105BE  0EE8               	movlw	232
  2906  0105C0  6E12               	movwf	___llmod@divisor^0,c
  2907  0105C2  0E03               	movlw	3
  2908  0105C4  6E13               	movwf	(___llmod@divisor+1)^0,c
  2909  0105C6  0E00               	movlw	0
  2910  0105C8  6E14               	movwf	(___llmod@divisor+2)^0,c
  2911  0105CA  0E00               	movlw	0
  2912  0105CC  6E15               	movwf	(___llmod@divisor+3)^0,c
  2913  0105CE  ECCE  F09F         	call	___llmod	;wreg free
  2914  0105D2  0EE7               	movlw	231
  2915  0105D4  180E               	xorwf	?___llmod^0,w,c
  2916  0105D6  E142               	bnz	l6276
  2917  0105D8  0E03               	movlw	3
  2918  0105DA  180F               	xorwf	(?___llmod+1)^0,w,c
  2919  0105DC  1010               	iorwf	(?___llmod+2)^0,w,c
  2920  0105DE  1011               	iorwf	(?___llmod+3)^0,w,c
  2921  0105E0  A4D8               	btfss	status,2,c
  2922  0105E2  D03C               	goto	l6276
  2923                           
  2924                           ;main.c: 207:         PORTCbits.RC0 = !PORTCbits.RC1;
  2925  0105E4  B2CC               	btfsc	204,1,c	;volatile
  2926  0105E6  D004               	goto	u8200
  2927  0105E8  0100               	movlb	0	; () banked
  2928  0105EA  6BCC               	clrf	??_main_loop& (0+255),b
  2929  0105EC  2BCC               	incf	??_main_loop& (0+255),f,b
  2930  0105EE  D002               	goto	u8218
  2931  0105F0                     u8200:
  2932  0105F0  0100               	movlb	0	; () banked
  2933  0105F2  6BCC               	clrf	??_main_loop& (0+255),b
  2934  0105F4                     u8218:
  2935  0105F4  50CC               	movf	204,w,c	;volatile
  2936  0105F6  19CC               	xorwf	??_main_loop& (0+255),w,b
  2937  0105F8  0BFE               	andlw	-2
  2938  0105FA  19CC               	xorwf	??_main_loop& (0+255),w,b
  2939  0105FC  6ECC               	movwf	204,c	;volatile
  2940                           
  2941                           ;main.c: 209:         lightMode = (PORTB & 0b00001100) >> 2;
  2942  0105FE  40CB               	rrncf	203,w,c	;volatile
  2943  010600  42E8               	rrncf	wreg,f,c
  2944  010602  0B3F               	andlw	63
  2945  010604  0B03               	andlw	3
  2946  010606  0104               	movlb	4	; () banked
  2947  010608  6F38               	movwf	_lightMode& (0+255),b
  2948                           
  2949                           ; BSR set to: 4
  2950                           ;main.c: 211:         ADPCH = 0b010110;
  2951  01060A  0E16               	movlw	22
  2952  01060C  013E               	movlb	62	; () banked
  2953  01060E  6FF1               	movwf	241,b	;volatile
  2954                           
  2955                           ; BSR set to: 62
  2956                           ;main.c: 212:         ADCON0bits.FM = 0;
  2957  010610  0EF3               	movlw	-13
  2958  010612  17F8               	andwf	248,f,b	;volatile
  2959                           
  2960                           ; BSR set to: 62
  2961                           ;main.c: 213:         ADCON0bits.GO = 1;
  2962  010614  81F8               	bsf	248,0,b	;volatile
  2963                           
  2964                           ;main.c: 214:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  2965  010616  D004               	goto	l6264
  2966  010618                     l6262:
  2967                           
  2968                           ; BSR set to: 62
  2969  010618  0E05               	movlw	5
  2970  01061A                     u8487:
  2971  01061A  2EE8               	decfsz	wreg,f,c
  2972  01061C  D7FE               	bra	u8487
  2973  01061E  F000               	nop	
  2974  010620                     l6264:
  2975  010620  013E               	movlb	62	; () banked
  2976  010622  B1F8               	btfsc	248,0,b	;volatile
  2977  010624  D7F9               	goto	l6262
  2978                           
  2979                           ; BSR set to: 62
  2980                           ;main.c: 215:         ledBrightness = ADRESH / 4;
  2981  010626  006F FBC0  F0CC    	movff	16112,??_main_loop	;volatile
  2982  01062C  0100               	movlb	0	; () banked
  2983  01062E  90D8               	bcf	status,0,c
  2984  010630  33CC               	rrcf	??_main_loop& (0+255),f,b
  2985  010632  90D8               	bcf	status,0,c
  2986  010634  33CC               	rrcf	??_main_loop& (0+255),f,b
  2987  010636  51CC               	movf	??_main_loop& (0+255),w,b
  2988  010638  6FE6               	movwf	_ledBrightness& (0+255),b
  2989  01063A  6BE7               	clrf	(_ledBrightness+1)& (0+255),b
  2990  01063C  6BE8               	clrf	(_ledBrightness+2)& (0+255),b
  2991  01063E  6BE9               	clrf	(_ledBrightness+3)& (0+255),b
  2992                           
  2993                           ; BSR set to: 0
  2994                           ;main.c: 216:         ADCON0bits.FM = 1;
  2995  010640  013E               	movlb	62	; () banked
  2996  010642  51F8               	movf	248,w,b	;volatile
  2997  010644  0BF3               	andlw	-13
  2998  010646  0904               	iorlw	4
  2999  010648  6FF8               	movwf	248,b	;volatile
  3000                           
  3001                           ; BSR set to: 62
  3002                           ;main.c: 218:         if (!PORTCbits.RC2) ampFault = 1;
  3003  01064A  B4CC               	btfsc	204,2,c	;volatile
  3004  01064C  D003               	goto	l301
  3005                           
  3006                           ; BSR set to: 62
  3007  01064E  0E01               	movlw	1
  3008  010650  0104               	movlb	4	; () banked
  3009  010652  6F37               	movwf	main_loop@ampFault& (0+255),b
  3010  010654                     l301:
  3011                           
  3012                           ;main.c: 221:         if (ampFault) LATC4 = 1;
  3013  010654  0104               	movlb	4	; () banked
  3014  010656  5137               	movf	main_loop@ampFault& (0+255),w,b
  3015  010658  A4D8               	btfss	status,2,c
  3016                           
  3017                           ; BSR set to: 4
  3018  01065A  88BC               	bsf	16316,4,c	;volatile
  3019  01065C                     l6276:
  3020                           
  3021                           ;main.c: 229:     if (counter % 10000 == 9999) {
  3022  01065C  0061  F0C0  F00E   	movff	main_loop@counter,___llmod@dividend
  3023  010662  0061  F0C4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  3024  010668  0061  F0C8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  3025  01066E  0061  F0CC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  3026  010674  0E10               	movlw	16
  3027  010676  6E12               	movwf	___llmod@divisor^0,c
  3028  010678  0E27               	movlw	39
  3029  01067A  6E13               	movwf	(___llmod@divisor+1)^0,c
  3030  01067C  0E00               	movlw	0
  3031  01067E  6E14               	movwf	(___llmod@divisor+2)^0,c
  3032  010680  0E00               	movlw	0
  3033  010682  6E15               	movwf	(___llmod@divisor+3)^0,c
  3034  010684  ECCE  F09F         	call	___llmod	;wreg free
  3035  010688  0E0F               	movlw	15
  3036  01068A  180E               	xorwf	?___llmod^0,w,c
  3037  01068C  E14C               	bnz	l6304
  3038  01068E  0E27               	movlw	39
  3039  010690  180F               	xorwf	(?___llmod+1)^0,w,c
  3040  010692  1010               	iorwf	(?___llmod+2)^0,w,c
  3041  010694  1011               	iorwf	(?___llmod+3)^0,w,c
  3042  010696  A4D8               	btfss	status,2,c
  3043  010698  D046               	goto	l6304
  3044                           
  3045                           ;main.c: 230:         uart_send(volCheckCmd, 3);
  3046  01069A  0E01               	movlw	low _volCheckCmd
  3047  01069C  6E0C               	movwf	uart_send@buf^0,c
  3048  01069E  0EFF               	movlw	high _volCheckCmd
  3049  0106A0  6E0D               	movwf	(uart_send@buf+1)^0,c
  3050  0106A2  0E03               	movlw	3
  3051  0106A4  6E0E               	movwf	uart_send@len^0,c
  3052  0106A6  EC20  F09F         	call	_uart_send	;wreg free
  3053                           
  3054                           ; BSR set to: 59
  3055                           ;main.c: 232:         lcd_set_data_addr(0x40);
  3056  0106AA  0E40               	movlw	64
  3057  0106AC  EC1A  F0A2         	call	_lcd_set_data_addr
  3058                           
  3059                           ;main.c: 233:         if (ampFault) lcd_print("AMPLIFIER FAULT!");
  3060  0106B0  0104               	movlb	4	; () banked
  3061  0106B2  5137               	movf	main_loop@ampFault& (0+255),w,b
  3062  0106B4  B4D8               	btfsc	status,2,c
  3063  0106B6  D007               	goto	l6286
  3064                           
  3065                           ; BSR set to: 4
  3066  0106B8  0EAB               	movlw	low STR_1
  3067  0106BA  6E05               	movwf	lcd_print@string^0,c
  3068  0106BC  0EFF               	movlw	high STR_1
  3069  0106BE  6E06               	movwf	(lcd_print@string+1)^0,c
  3070  0106C0  ECCD  F09D         	call	_lcd_print	;wreg free
  3071  0106C4  D057               	goto	l6308
  3072  0106C6                     l6286:
  3073                           
  3074                           ; BSR set to: 4
  3075  0106C6  5136               	movf	main_loop@batCutoff& (0+255),w,b
  3076  0106C8  B4D8               	btfsc	status,2,c
  3077  0106CA  D007               	goto	l6290
  3078                           
  3079                           ; BSR set to: 4
  3080  0106CC  0EBC               	movlw	low STR_2
  3081  0106CE  6E05               	movwf	lcd_print@string^0,c
  3082  0106D0  0EFF               	movlw	high STR_2
  3083  0106D2  6E06               	movwf	(lcd_print@string+1)^0,c
  3084  0106D4  ECCD  F09D         	call	_lcd_print	;wreg free
  3085  0106D8  D04D               	goto	l6308
  3086  0106DA                     l6290:
  3087                           
  3088                           ; BSR set to: 4
  3089  0106DA  513B               	movf	_pairing& (0+255),w,b
  3090  0106DC  B4D8               	btfsc	status,2,c
  3091  0106DE  D007               	goto	l6294
  3092                           
  3093                           ; BSR set to: 4
  3094  0106E0  0E67               	movlw	low STR_3
  3095  0106E2  6E05               	movwf	lcd_print@string^0,c
  3096  0106E4  0EFF               	movlw	high STR_3
  3097  0106E6  6E06               	movwf	(lcd_print@string+1)^0,c
  3098  0106E8  ECCD  F09D         	call	_lcd_print	;wreg free
  3099  0106EC  D043               	goto	l6308
  3100  0106EE                     l6294:
  3101                           
  3102                           ; BSR set to: 4
  3103  0106EE  5139               	movf	_connected& (0+255),w,b
  3104  0106F0  B4D8               	btfsc	status,2,c
  3105  0106F2  D007               	goto	l6298
  3106                           
  3107                           ; BSR set to: 4
  3108  0106F4  0E78               	movlw	low STR_4
  3109  0106F6  6E05               	movwf	lcd_print@string^0,c
  3110  0106F8  0EFF               	movlw	high STR_4
  3111  0106FA  6E06               	movwf	(lcd_print@string+1)^0,c
  3112  0106FC  ECCD  F09D         	call	_lcd_print	;wreg free
  3113  010700  D039               	goto	l6308
  3114  010702                     l6298:
  3115                           
  3116                           ; BSR set to: 4
  3117  010702  0100               	movlb	0	; () banked
  3118  010704  51E5               	movf	_on& (0+255),w,b
  3119  010706  B4D8               	btfsc	status,2,c
  3120  010708  D007               	goto	l6302
  3121                           
  3122                           ; BSR set to: 0
  3123  01070A  0E9A               	movlw	low STR_5
  3124  01070C  6E05               	movwf	lcd_print@string^0,c
  3125  01070E  0EFF               	movlw	high STR_5
  3126  010710  6E06               	movwf	(lcd_print@string+1)^0,c
  3127  010712  ECCD  F09D         	call	_lcd_print	;wreg free
  3128  010716  D02E               	goto	l6308
  3129  010718                     l6302:
  3130                           
  3131                           ; BSR set to: 0
  3132  010718  0E56               	movlw	low STR_6
  3133  01071A  6E05               	movwf	lcd_print@string^0,c
  3134  01071C  0EFF               	movlw	high STR_6
  3135  01071E  6E06               	movwf	(lcd_print@string+1)^0,c
  3136  010720  ECCD  F09D         	call	_lcd_print	;wreg free
  3137  010724  D027               	goto	l6308
  3138  010726                     l6304:
  3139  010726  0061  F0C0  F00E   	movff	main_loop@counter,___llmod@dividend
  3140  01072C  0061  F0C4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  3141  010732  0061  F0C8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  3142  010738  0061  F0CC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  3143  01073E  0E10               	movlw	16
  3144  010740  6E12               	movwf	___llmod@divisor^0,c
  3145  010742  0E27               	movlw	39
  3146  010744  6E13               	movwf	(___llmod@divisor+1)^0,c
  3147  010746  0E00               	movlw	0
  3148  010748  6E14               	movwf	(___llmod@divisor+2)^0,c
  3149  01074A  0E00               	movlw	0
  3150  01074C  6E15               	movwf	(___llmod@divisor+3)^0,c
  3151  01074E  ECCE  F09F         	call	___llmod	;wreg free
  3152  010752  0E87               	movlw	135
  3153  010754  180E               	xorwf	?___llmod^0,w,c
  3154  010756  E10E               	bnz	l6308
  3155  010758  0E13               	movlw	19
  3156  01075A  180F               	xorwf	(?___llmod+1)^0,w,c
  3157  01075C  1010               	iorwf	(?___llmod+2)^0,w,c
  3158  01075E  1011               	iorwf	(?___llmod+3)^0,w,c
  3159  010760  A4D8               	btfss	status,2,c
  3160  010762  D008               	goto	l6308
  3161                           
  3162                           ;main.c: 240:         uart_send(stateCheckCmd, 2);
  3163  010764  0E04               	movlw	low _stateCheckCmd
  3164  010766  6E0C               	movwf	uart_send@buf^0,c
  3165  010768  0EFF               	movlw	high _stateCheckCmd
  3166  01076A  6E0D               	movwf	(uart_send@buf+1)^0,c
  3167  01076C  0E02               	movlw	2
  3168  01076E  6E0E               	movwf	uart_send@len^0,c
  3169  010770  EC20  F09F         	call	_uart_send	;wreg free
  3170  010774                     l6308:
  3171                           
  3172                           ;main.c: 243:     if (++counter >= 100000) {
  3173  010774  0E01               	movlw	1
  3174  010776  0104               	movlb	4	; () banked
  3175  010778  2730               	addwf	main_loop@counter& (0+255),f,b
  3176  01077A  0E00               	movlw	0
  3177  01077C  2331               	addwfc	(main_loop@counter+1)& (0+255),f,b
  3178  01077E  2332               	addwfc	(main_loop@counter+2)& (0+255),f,b
  3179  010780  2333               	addwfc	(main_loop@counter+3)& (0+255),f,b
  3180  010782  5133               	movf	(main_loop@counter+3)& (0+255),w,b
  3181  010784  E108               	bnz	u8320
  3182  010786  0EA0               	movlw	160
  3183  010788  5D30               	subwf	main_loop@counter& (0+255),w,b
  3184  01078A  0E86               	movlw	134
  3185  01078C  5931               	subwfb	(main_loop@counter+1)& (0+255),w,b
  3186  01078E  0E01               	movlw	1
  3187  010790  5932               	subwfb	(main_loop@counter+2)& (0+255),w,b
  3188  010792  A0D8               	btfss	status,0,c
  3189  010794  D1F0               	goto	l6380
  3190  010796                     u8320:
  3191                           
  3192                           ; BSR set to: 4
  3193                           ;main.c: 244:         ADPCH = 0b011011;
  3194  010796  0E1B               	movlw	27
  3195  010798  013E               	movlb	62	; () banked
  3196  01079A  6FF1               	movwf	241,b	;volatile
  3197                           
  3198                           ; BSR set to: 62
  3199                           ;main.c: 245:         ADCON0bits.GO = 1;
  3200  01079C  81F8               	bsf	248,0,b	;volatile
  3201                           
  3202                           ;main.c: 246:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  3203  01079E  D004               	goto	l6316
  3204  0107A0                     l6314:
  3205                           
  3206                           ; BSR set to: 62
  3207  0107A0  0E05               	movlw	5
  3208  0107A2                     u8497:
  3209  0107A2  2EE8               	decfsz	wreg,f,c
  3210  0107A4  D7FE               	bra	u8497
  3211  0107A6  F000               	nop	
  3212  0107A8                     l6316:
  3213  0107A8  013E               	movlb	62	; () banked
  3214  0107AA  B1F8               	btfsc	248,0,b	;volatile
  3215  0107AC  D7F9               	goto	l6314
  3216                           
  3217                           ; BSR set to: 62
  3218                           ;main.c: 247:         uint16_t batlvl = ((ADRESH << 8) | ADRESL);
  3219  0107AE  51EF               	movf	239,w,b	;volatile
  3220  0107B0  006F FBC0  F0CC    	movff	16112,??_main_loop	;volatile
  3221  0107B6  0100               	movlb	0	; () banked
  3222  0107B8  6BCD               	clrf	(??_main_loop+1)& (0+255),b
  3223  0107BA  0060  F330  F0CD   	movff	??_main_loop,??_main_loop+1
  3224  0107C0  6BCC               	clrf	??_main_loop& (0+255),b
  3225  0107C2  11CC               	iorwf	??_main_loop& (0+255),w,b
  3226  0107C4  0104               	movlb	4	; () banked
  3227  0107C6  6FB8               	movwf	main_loop@batlvl& (0+255),b
  3228  0107C8  0100               	movlb	0	; () banked
  3229  0107CA  51CD               	movf	(??_main_loop+1)& (0+255),w,b
  3230  0107CC  0104               	movlb	4	; () banked
  3231  0107CE  6FB9               	movwf	(main_loop@batlvl+1)& (0+255),b
  3232                           
  3233                           ; BSR set to: 4
  3234                           ;main.c: 248:         char batmsg[17];;main.c: 249:         if (batlvl < 2000.0f) {
  3235  0107D0  0061  F2E0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3236  0107D6  0061  F2E4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3237  0107DC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3238  0107DE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3239  0107E0  0E00               	movlw	0
  3240  0107E2  ECD4  F098         	call	___xxtofl
  3241  0107E6  0060  F004  F051   	movff	?___xxtofl,___flge@ff1
  3242  0107EC  0060  F008  F052   	movff	?___xxtofl+1,___flge@ff1+1
  3243  0107F2  0060  F00C  F053   	movff	?___xxtofl+2,___flge@ff1+2
  3244  0107F8  0060  F010  F054   	movff	?___xxtofl+3,___flge@ff1+3
  3245  0107FE  0E00               	movlw	0
  3246  010800  6E55               	movwf	___flge@ff2^0,c
  3247  010802  0E00               	movlw	0
  3248  010804  6E56               	movwf	(___flge@ff2+1)^0,c
  3249  010806  0EFA               	movlw	250
  3250  010808  6E57               	movwf	(___flge@ff2+2)^0,c
  3251  01080A  0E44               	movlw	68
  3252  01080C  6E58               	movwf	(___flge@ff2+3)^0,c
  3253  01080E  EC5F  F09B         	call	___flge	;wreg free
  3254  010812  B0D8               	btfsc	status,0,c
  3255  010814  D01C               	goto	l6330
  3256                           
  3257                           ;main.c: 250:             bat_percent = 100.0f;
  3258  010816  0E00               	movlw	0
  3259  010818  0100               	movlb	0	; () banked
  3260  01081A  6FEA               	movwf	_bat_percent& (0+255),b
  3261  01081C  0E00               	movlw	0
  3262  01081E  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3263  010820  0EC8               	movlw	200
  3264  010822  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3265  010824  0E42               	movlw	66
  3266  010826  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3267                           
  3268                           ; BSR set to: 0
  3269                           ;main.c: 251:             sprintf(batmsg, "No Battery      ");
  3270  010828  0E8D               	movlw	low main_loop@batmsg
  3271  01082A  6FBB               	movwf	sprintf@s& (0+255),b
  3272  01082C  0E04               	movlw	high main_loop@batmsg
  3273  01082E  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3274  010830  0E89               	movlw	low STR_7
  3275  010832  6FBD               	movwf	sprintf@fmt& (0+255),b
  3276  010834  0EFF               	movlw	high STR_7
  3277  010836  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3278  010838  EC18  F0A1         	call	_sprintf	;wreg free
  3279                           
  3280                           ; BSR set to: 0
  3281                           ;main.c: 252:             batCutoff = 0;
  3282  01083C  0E00               	movlw	0
  3283  01083E  0104               	movlb	4	; () banked
  3284  010840  6F36               	movwf	main_loop@batCutoff& (0+255),b
  3285                           
  3286                           ; BSR set to: 4
  3287                           ;main.c: 253:             LATC4 = ampFault;
  3288  010842  B137               	btfsc	main_loop@ampFault& (0+255),0,b
  3289  010844  D002               	bra	u8355
  3290  010846  98BC               	bcf	16316,4,c	;volatile
  3291  010848  D001               	bra	u8356
  3292  01084A                     u8355:
  3293  01084A  D03A               	goto	l6338
  3294  01084C                     u8356:
  3295                           
  3296                           ;main.c: 254:         } else if (batlvl < 2180.0f - 50) {
  3297  01084C  D182               	goto	l6374
  3298  01084E                     l6330:
  3299  01084E  0061  F2E0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3300  010854  0061  F2E4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3301  01085A  6A03               	clrf	(___xxtofl@val+2)^0,c
  3302  01085C  6A04               	clrf	(___xxtofl@val+3)^0,c
  3303  01085E  0E00               	movlw	0
  3304  010860  ECD4  F098         	call	___xxtofl
  3305  010864  0060  F004  F051   	movff	?___xxtofl,___flge@ff1
  3306  01086A  0060  F008  F052   	movff	?___xxtofl+1,___flge@ff1+1
  3307  010870  0060  F00C  F053   	movff	?___xxtofl+2,___flge@ff1+2
  3308  010876  0060  F010  F054   	movff	?___xxtofl+3,___flge@ff1+3
  3309  01087C  0E00               	movlw	0
  3310  01087E  6E55               	movwf	___flge@ff2^0,c
  3311  010880  0E20               	movlw	32
  3312  010882  6E56               	movwf	(___flge@ff2+1)^0,c
  3313  010884  0E05               	movlw	5
  3314  010886  6E57               	movwf	(___flge@ff2+2)^0,c
  3315  010888  0E45               	movlw	69
  3316  01088A  6E58               	movwf	(___flge@ff2+3)^0,c
  3317  01088C  EC5F  F09B         	call	___flge	;wreg free
  3318  010890  B0D8               	btfsc	status,0,c
  3319  010892  D018               	goto	l6340
  3320                           
  3321                           ;main.c: 255:             bat_percent = 0.0f;
  3322  010894  0E00               	movlw	0
  3323  010896  0100               	movlb	0	; () banked
  3324  010898  6FEA               	movwf	_bat_percent& (0+255),b
  3325  01089A  0E00               	movlw	0
  3326  01089C  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3327  01089E  0E00               	movlw	0
  3328  0108A0  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3329  0108A2  0E00               	movlw	0
  3330  0108A4  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3331                           
  3332                           ; BSR set to: 0
  3333                           ;main.c: 256:             sprintf(batmsg, "Battery critical");
  3334  0108A6  0E8D               	movlw	low main_loop@batmsg
  3335  0108A8  6FBB               	movwf	sprintf@s& (0+255),b
  3336  0108AA  0E04               	movlw	high main_loop@batmsg
  3337  0108AC  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3338  0108AE  0ECD               	movlw	low STR_8
  3339  0108B0  6FBD               	movwf	sprintf@fmt& (0+255),b
  3340  0108B2  0EFF               	movlw	high STR_8
  3341  0108B4  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3342  0108B6  EC18  F0A1         	call	_sprintf	;wreg free
  3343                           
  3344                           ; BSR set to: 0
  3345                           ;main.c: 257:             batCutoff = 1;
  3346  0108BA  0E01               	movlw	1
  3347  0108BC  0104               	movlb	4	; () banked
  3348  0108BE  6F36               	movwf	main_loop@batCutoff& (0+255),b
  3349  0108C0                     l6338:
  3350                           
  3351                           ; BSR set to: 4
  3352                           ;main.c: 258:             LATC4 = 1;
  3353  0108C0  88BC               	bsf	16316,4,c	;volatile
  3354                           
  3355                           ;main.c: 259:         } else if (!batCutoff) {
  3356  0108C2  D147               	goto	l6374
  3357  0108C4                     l6340:
  3358  0108C4  0104               	movlb	4	; () banked
  3359  0108C6  5136               	movf	main_loop@batCutoff& (0+255),w,b
  3360  0108C8  A4D8               	btfss	status,2,c
  3361  0108CA  D105               	goto	l6366
  3362                           
  3363                           ; BSR set to: 4
  3364                           ;main.c: 260:             bat_percent = (batlvl - 2180.0f) / (2996.0f - 2180.0f) * 100.0
      +                          f;
  3365  0108CC  0E00               	movlw	0
  3366  0108CE  6E23               	movwf	___fldiv@a^0,c
  3367  0108D0  0E00               	movlw	0
  3368  0108D2  6E24               	movwf	(___fldiv@a+1)^0,c
  3369  0108D4  0E4C               	movlw	76
  3370  0108D6  6E25               	movwf	(___fldiv@a+2)^0,c
  3371  0108D8  0E44               	movlw	68
  3372  0108DA  6E26               	movwf	(___fldiv@a+3)^0,c
  3373  0108DC  0E00               	movlw	0
  3374  0108DE  6E13               	movwf	___fladd@a^0,c
  3375  0108E0  0E40               	movlw	64
  3376  0108E2  6E14               	movwf	(___fladd@a+1)^0,c
  3377  0108E4  0E08               	movlw	8
  3378  0108E6  6E15               	movwf	(___fladd@a+2)^0,c
  3379  0108E8  0EC5               	movlw	197
  3380  0108EA  6E16               	movwf	(___fladd@a+3)^0,c
  3381  0108EC  0061  F2E0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3382  0108F2  0061  F2E4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3383  0108F8  6A03               	clrf	(___xxtofl@val+2)^0,c
  3384  0108FA  6A04               	clrf	(___xxtofl@val+3)^0,c
  3385  0108FC  0E00               	movlw	0
  3386  0108FE  ECD4  F098         	call	___xxtofl
  3387  010902  0060  F004  F00F   	movff	?___xxtofl,___fladd@b
  3388  010908  0060  F008  F010   	movff	?___xxtofl+1,___fladd@b+1
  3389  01090E  0060  F00C  F011   	movff	?___xxtofl+2,___fladd@b+2
  3390  010914  0060  F010  F012   	movff	?___xxtofl+3,___fladd@b+3
  3391  01091A  ECBC  F092         	call	___fladd	;wreg free
  3392  01091E  0060  F03C  F01F   	movff	?___fladd,___fldiv@b
  3393  010924  0060  F040  F020   	movff	?___fladd+1,___fldiv@b+1
  3394  01092A  0060  F044  F021   	movff	?___fladd+2,___fldiv@b+2
  3395  010930  0060  F048  F022   	movff	?___fladd+3,___fldiv@b+3
  3396  010936  EC60  F094         	call	___fldiv	;wreg free
  3397  01093A  0060  F07C  F038   	movff	?___fldiv,___flmul@b
  3398  010940  0060  F080  F039   	movff	?___fldiv+1,___flmul@b+1
  3399  010946  0060  F084  F03A   	movff	?___fldiv+2,___flmul@b+2
  3400  01094C  0060  F088  F03B   	movff	?___fldiv+3,___flmul@b+3
  3401  010952  0E00               	movlw	0
  3402  010954  6E3C               	movwf	___flmul@a^0,c
  3403  010956  0E00               	movlw	0
  3404  010958  6E3D               	movwf	(___flmul@a+1)^0,c
  3405  01095A  0EC8               	movlw	200
  3406  01095C  6E3E               	movwf	(___flmul@a+2)^0,c
  3407  01095E  0E42               	movlw	66
  3408  010960  6E3F               	movwf	(___flmul@a+3)^0,c
  3409  010962  ECFA  F090         	call	___flmul	;wreg free
  3410  010966  0060  F0E0  F0EA   	movff	?___flmul,_bat_percent
  3411  01096C  0060  F0E4  F0EB   	movff	?___flmul+1,_bat_percent+1
  3412  010972  0060  F0E8  F0EC   	movff	?___flmul+2,_bat_percent+2
  3413  010978  0060  F0EC  F0ED   	movff	?___flmul+3,_bat_percent+3
  3414                           
  3415                           ;main.c: 261:             bat_percent = (bat_percent < 0.0f ? 0.0f : (bat_percent > 100.
      +                          0f ? 100.0f : bat_percent));
  3416  01097E  0100               	movlb	0	; () banked
  3417  010980  BFED               	btfsc	(_bat_percent+3)& (0+255),7,b
  3418  010982  D03B               	goto	l6354
  3419                           
  3420                           ; BSR set to: 0
  3421  010984  0E00               	movlw	0
  3422  010986  6E51               	movwf	___flge@ff1^0,c
  3423  010988  0E00               	movlw	0
  3424  01098A  6E52               	movwf	(___flge@ff1+1)^0,c
  3425  01098C  0EC8               	movlw	200
  3426  01098E  6E53               	movwf	(___flge@ff1+2)^0,c
  3427  010990  0E42               	movlw	66
  3428  010992  6E54               	movwf	(___flge@ff1+3)^0,c
  3429  010994  0060  F3A8  F055   	movff	_bat_percent,___flge@ff2
  3430  01099A  0060  F3AC  F056   	movff	_bat_percent+1,___flge@ff2+1
  3431  0109A0  0060  F3B0  F057   	movff	_bat_percent+2,___flge@ff2+2
  3432  0109A6  0060  F3B4  F058   	movff	_bat_percent+3,___flge@ff2+3
  3433  0109AC  EC5F  F09B         	call	___flge	;wreg free
  3434  0109B0  A0D8               	btfss	status,0,c
  3435  0109B2  D00D               	goto	l6350
  3436  0109B4  0060  F3A8  F4AE   	movff	_bat_percent,_main_loop$345
  3437  0109BA  0060  F3AC  F4AF   	movff	_bat_percent+1,_main_loop$345+1
  3438  0109C0  0060  F3B0  F4B0   	movff	_bat_percent+2,_main_loop$345+2
  3439  0109C6  0060  F3B4  F4B1   	movff	_bat_percent+3,_main_loop$345+3
  3440  0109CC  D009               	goto	l6352
  3441  0109CE                     l6350:
  3442  0109CE  0E00               	movlw	0
  3443  0109D0  0104               	movlb	4	; () banked
  3444  0109D2  6FAE               	movwf	_main_loop$345& (0+255),b
  3445  0109D4  0E00               	movlw	0
  3446  0109D6  6FAF               	movwf	(_main_loop$345+1)& (0+255),b
  3447  0109D8  0EC8               	movlw	200
  3448  0109DA  6FB0               	movwf	(_main_loop$345+2)& (0+255),b
  3449  0109DC  0E42               	movlw	66
  3450  0109DE  6FB1               	movwf	(_main_loop$345+3)& (0+255),b
  3451  0109E0                     l6352:
  3452  0109E0  0061  F2B8  F0EA   	movff	_main_loop$345,_bat_percent
  3453  0109E6  0061  F2BC  F0EB   	movff	_main_loop$345+1,_bat_percent+1
  3454  0109EC  0061  F2C0  F0EC   	movff	_main_loop$345+2,_bat_percent+2
  3455  0109F2  0061  F2C4  F0ED   	movff	_main_loop$345+3,_bat_percent+3
  3456  0109F8  D008               	goto	l6356
  3457  0109FA                     l6354:
  3458                           
  3459                           ; BSR set to: 0
  3460  0109FA  0E00               	movlw	0
  3461  0109FC  6FEA               	movwf	_bat_percent& (0+255),b
  3462  0109FE  0E00               	movlw	0
  3463  010A00  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3464  010A02  0E00               	movlw	0
  3465  010A04  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3466  010A06  0E00               	movlw	0
  3467  010A08  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3468  010A0A                     l6356:
  3469                           
  3470                           ;main.c: 262:             if (!PORTDbits.RD2) sprintf(batmsg, "Chg fault: %3.0f%% ", bat
      +                          _percent);
  3471  010A0A  B4CD               	btfsc	205,2,c	;volatile
  3472  010A0C  D018               	goto	l333
  3473  010A0E  0E8D               	movlw	low main_loop@batmsg
  3474  010A10  0100               	movlb	0	; () banked
  3475  010A12  6FBB               	movwf	sprintf@s& (0+255),b
  3476  010A14  0E04               	movlw	high main_loop@batmsg
  3477  010A16  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3478  010A18  0E42               	movlw	low STR_9
  3479  010A1A  6FBD               	movwf	sprintf@fmt& (0+255),b
  3480  010A1C  0EFF               	movlw	high STR_9
  3481  010A1E  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3482  010A20  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3483  010A26  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3484  010A2C  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3485  010A32  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3486  010A38  EC18  F0A1         	call	_sprintf	;wreg free
  3487  010A3C  D08A               	goto	l6374
  3488  010A3E                     l333:
  3489  010A3E  B2CD               	btfsc	205,1,c	;volatile
  3490  010A40  D018               	goto	l335
  3491  010A42  0E8D               	movlw	low main_loop@batmsg
  3492  010A44  0100               	movlb	0	; () banked
  3493  010A46  6FBB               	movwf	sprintf@s& (0+255),b
  3494  010A48  0E04               	movlw	high main_loop@batmsg
  3495  010A4A  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3496  010A4C  0E1A               	movlw	low STR_10
  3497  010A4E  6FBD               	movwf	sprintf@fmt& (0+255),b
  3498  010A50  0EFF               	movlw	high STR_10
  3499  010A52  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3500  010A54  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3501  010A5A  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3502  010A60  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3503  010A66  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3504  010A6C  EC18  F0A1         	call	_sprintf	;wreg free
  3505  010A70  D070               	goto	l6374
  3506  010A72                     l335:
  3507  010A72  B0CD               	btfsc	205,0,c	;volatile
  3508  010A74  D018               	goto	l6364
  3509  010A76  0E8D               	movlw	low main_loop@batmsg
  3510  010A78  0100               	movlb	0	; () banked
  3511  010A7A  6FBB               	movwf	sprintf@s& (0+255),b
  3512  010A7C  0E04               	movlw	high main_loop@batmsg
  3513  010A7E  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3514  010A80  0E2E               	movlw	low STR_11
  3515  010A82  6FBD               	movwf	sprintf@fmt& (0+255),b
  3516  010A84  0EFF               	movlw	high STR_11
  3517  010A86  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3518  010A88  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3519  010A8E  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3520  010A94  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3521  010A9A  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3522  010AA0  EC18  F0A1         	call	_sprintf	;wreg free
  3523  010AA4  D056               	goto	l6374
  3524  010AA6                     l6364:
  3525  010AA6  0E8D               	movlw	low main_loop@batmsg
  3526  010AA8  0100               	movlb	0	; () banked
  3527  010AAA  6FBB               	movwf	sprintf@s& (0+255),b
  3528  010AAC  0E04               	movlw	high main_loop@batmsg
  3529  010AAE  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3530  010AB0  0E06               	movlw	low STR_12
  3531  010AB2  6FBD               	movwf	sprintf@fmt& (0+255),b
  3532  010AB4  0EFF               	movlw	high STR_12
  3533  010AB6  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3534  010AB8  0060  F3A8  F0BF   	movff	_bat_percent,?_sprintf+4
  3535  010ABE  0060  F3AC  F0C0   	movff	_bat_percent+1,?_sprintf+5
  3536  010AC4  0060  F3B0  F0C1   	movff	_bat_percent+2,?_sprintf+6
  3537  010ACA  0060  F3B4  F0C2   	movff	_bat_percent+3,?_sprintf+7
  3538  010AD0  EC18  F0A1         	call	_sprintf	;wreg free
  3539  010AD4  D03E               	goto	l6374
  3540  010AD6                     l6366:
  3541                           
  3542                           ; BSR set to: 4
  3543                           ;main.c: 267:             if (batlvl > 2180.0f + 50) {
  3544  010AD6  0E00               	movlw	0
  3545  010AD8  6E51               	movwf	___flge@ff1^0,c
  3546  010ADA  0E60               	movlw	96
  3547  010ADC  6E52               	movwf	(___flge@ff1+1)^0,c
  3548  010ADE  0E0B               	movlw	11
  3549  010AE0  6E53               	movwf	(___flge@ff1+2)^0,c
  3550  010AE2  0E45               	movlw	69
  3551  010AE4  6E54               	movwf	(___flge@ff1+3)^0,c
  3552  010AE6  0061  F2E0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3553  010AEC  0061  F2E4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3554  010AF2  6A03               	clrf	(___xxtofl@val+2)^0,c
  3555  010AF4  6A04               	clrf	(___xxtofl@val+3)^0,c
  3556  010AF6  0E00               	movlw	0
  3557  010AF8  ECD4  F098         	call	___xxtofl
  3558  010AFC  0060  F004  F055   	movff	?___xxtofl,___flge@ff2
  3559  010B02  0060  F008  F056   	movff	?___xxtofl+1,___flge@ff2+1
  3560  010B08  0060  F00C  F057   	movff	?___xxtofl+2,___flge@ff2+2
  3561  010B0E  0060  F010  F058   	movff	?___xxtofl+3,___flge@ff2+3
  3562  010B14  EC5F  F09B         	call	___flge	;wreg free
  3563  010B18  B0D8               	btfsc	status,0,c
  3564  010B1A  D008               	goto	u8446
  3565                           
  3566                           ;main.c: 268:                 batCutoff = 0;
  3567  010B1C  0E00               	movlw	0
  3568  010B1E  0104               	movlb	4	; () banked
  3569  010B20  6F36               	movwf	main_loop@batCutoff& (0+255),b
  3570                           
  3571                           ; BSR set to: 4
  3572                           ;main.c: 269:                 LATC4 = ampFault;
  3573  010B22  B137               	btfsc	main_loop@ampFault& (0+255),0,b
  3574  010B24  D002               	bra	u8445
  3575  010B26  98BC               	bcf	16316,4,c	;volatile
  3576  010B28  D001               	bra	u8446
  3577  010B2A                     u8445:
  3578  010B2A  88BC               	bsf	16316,4,c	;volatile
  3579  010B2C                     u8446:
  3580                           
  3581                           ;main.c: 271:             bat_percent = 0.0f;
  3582                           
  3583                           ;main.c: 270:             }
  3584  010B2C  0E00               	movlw	0
  3585  010B2E  0100               	movlb	0	; () banked
  3586  010B30  6FEA               	movwf	_bat_percent& (0+255),b
  3587  010B32  0E00               	movlw	0
  3588  010B34  6FEB               	movwf	(_bat_percent+1)& (0+255),b
  3589  010B36  0E00               	movlw	0
  3590  010B38  6FEC               	movwf	(_bat_percent+2)& (0+255),b
  3591  010B3A  0E00               	movlw	0
  3592  010B3C  6FED               	movwf	(_bat_percent+3)& (0+255),b
  3593                           
  3594                           ; BSR set to: 0
  3595                           ;main.c: 272:             sprintf(batmsg, "Battery critical");
  3596  010B3E  0E8D               	movlw	low main_loop@batmsg
  3597  010B40  6FBB               	movwf	sprintf@s& (0+255),b
  3598  010B42  0E04               	movlw	high main_loop@batmsg
  3599  010B44  6FBC               	movwf	(sprintf@s+1)& (0+255),b
  3600  010B46  0ECD               	movlw	low STR_8
  3601  010B48  6FBD               	movwf	sprintf@fmt& (0+255),b
  3602  010B4A  0EFF               	movlw	high STR_8
  3603  010B4C  6FBE               	movwf	(sprintf@fmt+1)& (0+255),b
  3604  010B4E  EC18  F0A1         	call	_sprintf	;wreg free
  3605  010B52                     l6374:
  3606                           
  3607                           ;main.c: 274:         lcd_set_data_addr(0);
  3608  010B52  0E00               	movlw	0
  3609  010B54  EC1A  F0A2         	call	_lcd_set_data_addr
  3610                           
  3611                           ;main.c: 275:         lcd_print(batmsg);
  3612  010B58  0E8D               	movlw	low main_loop@batmsg
  3613  010B5A  6E05               	movwf	lcd_print@string^0,c
  3614  010B5C  0E04               	movlw	high main_loop@batmsg
  3615  010B5E  6E06               	movwf	(lcd_print@string+1)^0,c
  3616  010B60  ECCD  F09D         	call	_lcd_print	;wreg free
  3617                           
  3618                           ;main.c: 278:         counter = 0;
  3619  010B64  0E00               	movlw	0
  3620  010B66  0104               	movlb	4	; () banked
  3621  010B68  6F30               	movwf	main_loop@counter& (0+255),b
  3622  010B6A  0E00               	movlw	0
  3623  010B6C  6F31               	movwf	(main_loop@counter+1)& (0+255),b
  3624  010B6E  0E00               	movlw	0
  3625  010B70  6F32               	movwf	(main_loop@counter+2)& (0+255),b
  3626  010B72  0E00               	movlw	0
  3627  010B74  6F33               	movwf	(main_loop@counter+3)& (0+255),b
  3628  010B76                     l6380:
  3629                           
  3630                           ; BSR set to: 4
  3631                           ;main.c: 281:     uart_tasks();
  3632  010B76  EC22  F098         	call	_uart_tasks	;wreg free
  3633  010B7A  0004               	clrwdt		;# 
  3634                           
  3635                           ;main.c: 284:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  3636  010B7C  0E35               	movlw	53
  3637  010B7E                     u8507:
  3638  010B7E  2EE8               	decfsz	wreg,f,c
  3639  010B80  D7FE               	bra	u8507
  3640  010B82  F000               	nop	
  3641  010B84  0012               	return		;funcret
  3642  010B86                     __end_of_main_loop:
  3643                           	opt callstack 0
  3644                           
  3645 ;; *************** function _updateButtonLight *****************
  3646 ;; Defined at:
  3647 ;;		line 95 in file "main.c"
  3648 ;; Parameters:    Size  Location     Type
  3649 ;;  step            4   26[COMRAM] long 
  3650 ;; Auto vars:     Size  Location     Type
  3651 ;;  dch             4   34[COMRAM] long 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, status,2, status,0, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : 0/4
  3658 ;;		On exit  : 3B/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3662 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3663 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3664 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3665 ;;Total ram usage:       12 bytes
  3666 ;; Hardware stack levels used:    1
  3667 ;; Hardware stack levels required when called:    1
  3668 ;; This function calls:
  3669 ;;		___aldiv
  3670 ;; This function is called by:
  3671 ;;		_main_loop
  3672 ;; This function uses a non-reentrant model
  3673 ;;
  3674                           
  3675                           	psect	text3
  3676  013502                     __ptext3:
  3677                           	opt callstack 0
  3678  013502                     _updateButtonLight:
  3679                           	opt callstack 28
  3680                           
  3681                           ;main.c: 96:     if (!on) {
  3682                           
  3683                           ;incstack = 0
  3684  013502  0100               	movlb	0	; () banked
  3685  013504  51E5               	movf	_on& (0+255),w,b
  3686  013506  A4D8               	btfss	status,2,c
  3687  013508  D007               	goto	l5088
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;main.c: 97:         PWM6DCH = 0;
  3691  01350A  0E00               	movlw	0
  3692  01350C  6E69               	movwf	105,c	;volatile
  3693                           
  3694                           ;main.c: 98:         PWM6DCL = 0;
  3695  01350E  0E00               	movlw	0
  3696  013510  6E68               	movwf	104,c	;volatile
  3697                           
  3698                           ; BSR set to: 0
  3699                           ;main.c: 99:         PWM8DCH = 255;
  3700  013512  6861               	setf	97,c	;volatile
  3701  013514                     l5086:
  3702                           
  3703                           ;main.c: 100:         PWM8DCL = 255;
  3704  013514  6860               	setf	96,c	;volatile
  3705                           
  3706                           ;main.c: 101:     } else if (pairing) {
  3707  013516  0012               	return	
  3708  013518                     l5088:
  3709                           
  3710                           ; BSR set to: 0
  3711  013518  0104               	movlb	4	; () banked
  3712  01351A  513B               	movf	_pairing& (0+255),w,b
  3713  01351C  B4D8               	btfsc	status,2,c
  3714  01351E  D060               	goto	l205
  3715                           
  3716                           ; BSR set to: 4
  3717                           ;main.c: 102:         PWM6DCH = 255;
  3718  013520  6869               	setf	105,c	;volatile
  3719                           
  3720                           ;main.c: 103:         PWM6DCL = 255;
  3721  013522  6868               	setf	104,c	;volatile
  3722                           
  3723                           ; BSR set to: 4
  3724                           ;main.c: 105:         if (step % 4096 < 2048) dch = (step % 2048) / 8;
  3725                           
  3726                           ; BSR set to: 4
  3727  013524  0EFF               	movlw	255
  3728  013526  141B               	andwf	updateButtonLight@step^0,w,c
  3729  013528  6E1F               	movwf	??_updateButtonLight^0,c
  3730  01352A  0E0F               	movlw	15
  3731  01352C  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3732  01352E  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3733  013530  0E00               	movlw	0
  3734  013532  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3735  013534  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3736  013536  0E00               	movlw	0
  3737  013538  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3738  01353A  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3739  01353C  BE22               	btfsc	(??_updateButtonLight+3)^0,7,c
  3740  01353E  D007               	goto	u6300
  3741  013540  5022               	movf	(??_updateButtonLight+3)^0,w,c
  3742  013542  1021               	iorwf	(??_updateButtonLight+2)^0,w,c
  3743  013544  E11B               	bnz	l5098
  3744  013546  0E08               	movlw	8
  3745  013548  5C20               	subwf	(??_updateButtonLight+1)^0,w,c
  3746  01354A  B0D8               	btfsc	status,0,c
  3747  01354C  D017               	goto	l5098
  3748  01354E                     u6300:
  3749                           
  3750                           ; BSR set to: 4
  3751  01354E  0EFF               	movlw	255
  3752  013550  141B               	andwf	updateButtonLight@step^0,w,c
  3753  013552  6E0D               	movwf	___aldiv@dividend^0,c
  3754  013554  0E07               	movlw	7
  3755  013556  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3756  013558  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3757  01355A  0E00               	movlw	0
  3758  01355C  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3759  01355E  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3760  013560  0E00               	movlw	0
  3761  013562  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3762  013564  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3763  013566  0E08               	movlw	8
  3764  013568  6E11               	movwf	___aldiv@divisor^0,c
  3765  01356A  0E00               	movlw	0
  3766  01356C  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3767  01356E  0E00               	movlw	0
  3768  013570  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3769  013572  0E00               	movlw	0
  3770  013574  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3771  013576  ECF5  F09A         	call	___aldiv	;wreg free
  3772  01357A  D022               	goto	L1
  3773  01357C                     l5098:
  3774                           
  3775                           ; BSR set to: 4
  3776  01357C  0EFF               	movlw	255
  3777  01357E  141B               	andwf	updateButtonLight@step^0,w,c
  3778  013580  6E1F               	movwf	??_updateButtonLight^0,c
  3779  013582  0E07               	movlw	7
  3780  013584  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3781  013586  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3782  013588  0E00               	movlw	0
  3783  01358A  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3784  01358C  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3785  01358E  0E00               	movlw	0
  3786  013590  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3787  013592  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3788  013594  501F               	movf	??_updateButtonLight^0,w,c
  3789  013596  0800               	sublw	0
  3790  013598  6E0D               	movwf	___aldiv@dividend^0,c
  3791  01359A  0E08               	movlw	8
  3792  01359C  5420               	subfwb	(??_updateButtonLight+1)^0,w,c
  3793  01359E  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3794  0135A0  0E00               	movlw	0
  3795  0135A2  5421               	subfwb	(??_updateButtonLight+2)^0,w,c
  3796  0135A4  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3797  0135A6  0E00               	movlw	0
  3798  0135A8  5422               	subfwb	(??_updateButtonLight+3)^0,w,c
  3799  0135AA  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3800  0135AC  0E08               	movlw	8
  3801  0135AE  6E11               	movwf	___aldiv@divisor^0,c
  3802  0135B0  0E00               	movlw	0
  3803  0135B2  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3804  0135B4  0E00               	movlw	0
  3805  0135B6  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3806  0135B8  0E00               	movlw	0
  3807  0135BA  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3808  0135BC  ECF5  F09A         	call	___aldiv	;wreg free
  3809  0135C0                     L1:
  3810  0135C0  0060  F034  F023   	movff	?___aldiv,updateButtonLight@dch
  3811  0135C6  0060  F038  F024   	movff	?___aldiv+1,updateButtonLight@dch+1
  3812  0135CC  0060  F03C  F025   	movff	?___aldiv+2,updateButtonLight@dch+2
  3813  0135D2  0060  F040  F026   	movff	?___aldiv+3,updateButtonLight@dch+3
  3814                           
  3815                           ;main.c: 107:         PWM8DCH = dch;
  3816  0135D8  0060  F08F  FF61   	movff	updateButtonLight@dch,16225	;volatile
  3817  0135DE  D79A               	goto	l5086
  3818  0135E0                     l205:
  3819                           
  3820                           ; BSR set to: 4
  3821                           ;main.c: 110:         PWM6DCH = 255;
  3822  0135E0  6869               	setf	105,c	;volatile
  3823                           
  3824                           ;main.c: 111:         PWM6DCL = 255;
  3825  0135E2  6868               	setf	104,c	;volatile
  3826                           
  3827                           ;main.c: 112:         PWM8DCH = 255;
  3828  0135E4  6861               	setf	97,c	;volatile
  3829                           
  3830                           ;main.c: 113:         PWM8DCL = 255;
  3831  0135E6  6860               	setf	96,c	;volatile
  3832  0135E8  0012               	return		;funcret
  3833  0135EA                     __end_of_updateButtonLight:
  3834                           	opt callstack 0
  3835                           
  3836 ;; *************** function _uart_tasks *****************
  3837 ;; Defined at:
  3838 ;;		line 80 in file "uart.c"
  3839 ;; Parameters:    Size  Location     Type
  3840 ;;		None
  3841 ;; Auto vars:     Size  Location     Type
  3842 ;;  val             1   34[COMRAM] unsigned char 
  3843 ;;  intPos          1   31[COMRAM] unsigned char 
  3844 ;;  bytePos         1   30[COMRAM] unsigned char 
  3845 ;;  posInRawMsg     1   28[COMRAM] unsigned char 
  3846 ;;  message       256    0[BANK3 ] unsigned char [256]
  3847 ;;  zeroByte        1   33[COMRAM] _Bool 
  3848 ;;  msgLen          1   32[COMRAM] unsigned char 
  3849 ;;  i               1   29[COMRAM] unsigned char 
  3850 ;;  msgOffset       1   27[COMRAM] unsigned char 
  3851 ;;  checksum        1   26[COMRAM] unsigned char 
  3852 ;;  rawMsgOffset    1   25[COMRAM] unsigned char 
  3853 ;;  rxLen           1   24[COMRAM] unsigned char 
  3854 ;; Return value:  Size  Location     Type
  3855 ;;                  1    wreg      void 
  3856 ;; Registers used:
  3857 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3858 ;; Tracked objects:
  3859 ;;		On entry : 3F/4
  3860 ;;		On exit  : 4/0
  3861 ;;		Unchanged: 0/0
  3862 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;      Locals:        11       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3866 ;;      Totals:        15       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3867 ;;Total ram usage:      271 bytes
  3868 ;; Hardware stack levels used:    1
  3869 ;; Hardware stack levels required when called:    3
  3870 ;; This function calls:
  3871 ;;		_handle_message
  3872 ;;		_transmitChecksum
  3873 ;; This function is called by:
  3874 ;;		_main_loop
  3875 ;; This function uses a non-reentrant model
  3876 ;;
  3877                           
  3878                           	psect	text4
  3879  013044                     __ptext4:
  3880                           	opt callstack 0
  3881  013044                     _uart_tasks:
  3882                           	opt callstack 26
  3883                           
  3884                           ; BSR set to: 4
  3885                           ;uart.c: 81:     static uint8_t rxPos = 0;;uart.c: 83:     if (DMA2SCNTIF) transmitCheck
      +                          sum();
  3886                           
  3887                           ;incstack = 0
  3888  013044  0139               	movlb	57	; () banked
  3889  013046  B5A5               	btfsc	165,2,b	;volatile
  3890                           
  3891                           ; BSR set to: 57
  3892  013048  EC25  F0A2         	call	_transmitChecksum	;wreg free
  3893                           
  3894                           ; BSR set to: 57
  3895                           ;uart.c: 85:     if (DMA1DPTRL == rxPos) return;
  3896  01304C  0100               	movlb	0	; () banked
  3897  01304E  51E4               	movf	uart_tasks@rxPos& (0+255),w,b
  3898  013050  013B               	movlb	59	; () banked
  3899  013052  19EC               	xorwf	236,w,b	;volatile
  3900  013054  B4D8               	btfsc	status,2,c
  3901  013056  0012               	return	
  3902                           
  3903                           ; BSR set to: 59
  3904                           ;uart.c: 86:     uint8_t rxLen = DMA1DPTRL - rxPos;
  3905  013058  0100               	movlb	0	; () banked
  3906  01305A  51E4               	movf	uart_tasks@rxPos& (0+255),w,b
  3907  01305C  013B               	movlb	59	; () banked
  3908  01305E  5DEC               	subwf	236,w,b	;volatile
  3909  013060  6E19               	movwf	uart_tasks@rxLen^0,c
  3910                           
  3911                           ; BSR set to: 59
  3912                           ;uart.c: 87:     uint8_t i;;uart.c: 88:     _Bool zeroByte = 0;
  3913  013062  0E00               	movlw	0
  3914  013064  6E22               	movwf	uart_tasks@zeroByte^0,c
  3915                           
  3916                           ; BSR set to: 59
  3917                           ;uart.c: 89:     uint8_t msgLen = 0;
  3918  013066  0E00               	movlw	0
  3919  013068  6E21               	movwf	uart_tasks@msgLen^0,c
  3920                           
  3921                           ; BSR set to: 59
  3922                           ;uart.c: 90:     uint8_t checksum = 0;
  3923  01306A  0E00               	movlw	0
  3924  01306C  6E1B               	movwf	uart_tasks@checksum^0,c
  3925                           
  3926                           ; BSR set to: 59
  3927                           ;uart.c: 91:     uint8_t message[256];;uart.c: 92:     uint8_t msgOffset = 0;
  3928  01306E  0E00               	movlw	0
  3929  013070  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3930                           
  3931                           ; BSR set to: 59
  3932                           ;uart.c: 93:     uint8_t rawMsgOffset = 0;
  3933  013072  0E00               	movlw	0
  3934  013074  6E1A               	movwf	uart_tasks@rawMsgOffset^0,c
  3935                           
  3936                           ; BSR set to: 59
  3937                           ;uart.c: 94:     for (i = 0; i < rxLen; i++) {
  3938  013076  0E00               	movlw	0
  3939  013078  6E1E               	movwf	uart_tasks@i^0,c
  3940  01307A  D08E               	goto	l5316
  3941  01307C                     l5254:
  3942                           
  3943                           ;uart.c: 95:         uint8_t bytePos = i - msgOffset;
  3944  01307C  501C               	movf	uart_tasks@msgOffset^0,w,c
  3945  01307E  5C1E               	subwf	uart_tasks@i^0,w,c
  3946  013080  6E1F               	movwf	uart_tasks@bytePos^0,c
  3947                           
  3948                           ;uart.c: 96:         uint8_t intPos = rxPos + i;
  3949  013082  0100               	movlb	0	; () banked
  3950  013084  51E4               	movf	uart_tasks@rxPos& (0+255),w,b
  3951  013086  241E               	addwf	uart_tasks@i^0,w,c
  3952  013088  6E20               	movwf	uart_tasks@intPos^0,c
  3953                           
  3954                           ; BSR set to: 0
  3955                           ;uart.c: 97:         uint8_t val = rxBuf[intPos];
  3956  01308A  0E00               	movlw	0
  3957  01308C  2420               	addwf	uart_tasks@intPos^0,w,c
  3958  01308E  6ED9               	movwf	fsr2l,c
  3959  013090  6ADA               	clrf	fsr2h,c
  3960  013092  0E01               	movlw	1
  3961  013094  22DA               	addwfc	fsr2h,f,c
  3962  013096  50DF               	movf	indf2,w,c
  3963  013098  6E23               	movwf	uart_tasks@val^0,c
  3964                           
  3965                           ; BSR set to: 0
  3966                           ;uart.c: 98:         uint8_t posInRawMsg = bytePos - (3 + zeroByte);
  3967  01309A  5022               	movf	uart_tasks@zeroByte^0,w,c
  3968  01309C  5C1F               	subwf	uart_tasks@bytePos^0,w,c
  3969  01309E  0FFD               	addlw	253
  3970  0130A0  6E1D               	movwf	uart_tasks@posInRawMsg^0,c
  3971                           
  3972                           ; BSR set to: 0
  3973                           ;uart.c: 99:         if (bytePos == zeroByte) {
  3974  0130A2  5022               	movf	uart_tasks@zeroByte^0,w,c
  3975  0130A4  181F               	xorwf	uart_tasks@bytePos^0,w,c
  3976  0130A6  A4D8               	btfss	status,2,c
  3977  0130A8  D011               	goto	l5274
  3978                           
  3979                           ; BSR set to: 0
  3980                           ;uart.c: 100:             if (val == 0x00 && !zeroByte) {
  3981  0130AA  5023               	movf	uart_tasks@val^0,w,c
  3982  0130AC  A4D8               	btfss	status,2,c
  3983  0130AE  D005               	goto	l5268
  3984                           
  3985                           ; BSR set to: 0
  3986  0130B0  5022               	movf	uart_tasks@zeroByte^0,w,c
  3987  0130B2  A4D8               	btfss	status,2,c
  3988  0130B4  D002               	goto	l5268
  3989                           
  3990                           ; BSR set to: 0
  3991                           ;uart.c: 101:                 zeroByte = 1;
  3992  0130B6  0E01               	movlw	1
  3993  0130B8  D007               	goto	L2
  3994  0130BA                     l5268:
  3995                           
  3996                           ; BSR set to: 0
  3997  0130BA  0EAA               	movlw	170
  3998  0130BC  1823               	xorwf	uart_tasks@val^0,w,c
  3999  0130BE  B4D8               	btfsc	status,2,c
  4000  0130C0  D06A               	goto	l5314
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;uart.c: 103:                 msgOffset = intPos + 1;
  4004  0130C2  2820               	incf	uart_tasks@intPos^0,w,c
  4005  0130C4  6E1C               	movwf	uart_tasks@msgOffset^0,c
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;uart.c: 104:                 zeroByte = 0;
  4009  0130C6  0E00               	movlw	0
  4010  0130C8                     L2:
  4011  0130C8  6E22               	movwf	uart_tasks@zeroByte^0,c
  4012                           
  4013                           ; BSR set to: 0
  4014                           ;uart.c: 106:         } else if (bytePos == 1 + zeroByte) {
  4015  0130CA  D065               	goto	l5314
  4016  0130CC                     l5274:
  4017                           
  4018                           ; BSR set to: 0
  4019  0130CC  501F               	movf	uart_tasks@bytePos^0,w,c
  4020  0130CE  6E15               	movwf	??_uart_tasks^0,c
  4021  0130D0  6A16               	clrf	(??_uart_tasks+1)^0,c
  4022  0130D2  5022               	movf	uart_tasks@zeroByte^0,w,c
  4023  0130D4  6E17               	movwf	(??_uart_tasks+2)^0,c
  4024  0130D6  6A18               	clrf	(??_uart_tasks+3)^0,c
  4025  0130D8  0E01               	movlw	1
  4026  0130DA  2617               	addwf	(??_uart_tasks+2)^0,f,c
  4027  0130DC  0E00               	movlw	0
  4028  0130DE  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  4029  0130E0  5015               	movf	??_uart_tasks^0,w,c
  4030  0130E2  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  4031  0130E4  E107               	bnz	l5278
  4032  0130E6  5016               	movf	(??_uart_tasks+1)^0,w,c
  4033  0130E8  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  4034  0130EA  A4D8               	btfss	status,2,c
  4035  0130EC  D003               	goto	l5278
  4036  0130EE                     u6580:
  4037                           
  4038                           ; BSR set to: 0
  4039                           ;uart.c: 107:             checksum += val;
  4040  0130EE  5023               	movf	uart_tasks@val^0,w,c
  4041  0130F0  261B               	addwf	uart_tasks@checksum^0,f,c
  4042                           
  4043                           ;uart.c: 108:         } else if (bytePos == 2 + zeroByte) {
  4044  0130F2  D051               	goto	l5314
  4045  0130F4                     l5278:
  4046                           
  4047                           ; BSR set to: 0
  4048  0130F4  501F               	movf	uart_tasks@bytePos^0,w,c
  4049  0130F6  6E15               	movwf	??_uart_tasks^0,c
  4050  0130F8  6A16               	clrf	(??_uart_tasks+1)^0,c
  4051  0130FA  5022               	movf	uart_tasks@zeroByte^0,w,c
  4052  0130FC  6E17               	movwf	(??_uart_tasks+2)^0,c
  4053  0130FE  6A18               	clrf	(??_uart_tasks+3)^0,c
  4054  013100  0E02               	movlw	2
  4055  013102  2617               	addwf	(??_uart_tasks+2)^0,f,c
  4056  013104  0E00               	movlw	0
  4057  013106  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  4058  013108  5015               	movf	??_uart_tasks^0,w,c
  4059  01310A  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  4060  01310C  E113               	bnz	l5292
  4061  01310E  5016               	movf	(??_uart_tasks+1)^0,w,c
  4062  013110  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  4063  013112  A4D8               	btfss	status,2,c
  4064  013114  D00F               	goto	l5292
  4065                           
  4066                           ; BSR set to: 0
  4067                           ;uart.c: 109:             msgLen = val;
  4068  013116  0060  F08C  F021   	movff	uart_tasks@val,uart_tasks@msgLen
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;uart.c: 110:             checksum += val;
  4072  01311C  5023               	movf	uart_tasks@val^0,w,c
  4073  01311E  261B               	addwf	uart_tasks@checksum^0,f,c
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;uart.c: 111:             if (msgLen == 0) {
  4077  013120  5021               	movf	uart_tasks@msgLen^0,w,c
  4078  013122  A4D8               	btfss	status,2,c
  4079  013124  D038               	goto	l5314
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;uart.c: 112:                 msgOffset = intPos + 1;
  4083  013126  2820               	incf	uart_tasks@intPos^0,w,c
  4084  013128  6E1C               	movwf	uart_tasks@msgOffset^0,c
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;uart.c: 113:                 zeroByte = 0;
  4088  01312A  0E00               	movlw	0
  4089  01312C  6E22               	movwf	uart_tasks@zeroByte^0,c
  4090  01312E                     l5290:
  4091                           
  4092                           ;uart.c: 114:                 checksum = 0;
  4093  01312E  0E00               	movlw	0
  4094  013130  6E1B               	movwf	uart_tasks@checksum^0,c
  4095  013132  D031               	goto	l5314
  4096  013134                     l5292:
  4097                           
  4098                           ; BSR set to: 0
  4099  013134  5021               	movf	uart_tasks@msgLen^0,w,c
  4100  013136  5C1D               	subwf	uart_tasks@posInRawMsg^0,w,c
  4101  013138  B0D8               	btfsc	status,0,c
  4102  01313A  D012               	goto	l5298
  4103                           
  4104                           ; BSR set to: 0
  4105                           ;uart.c: 117:             message[rawMsgOffset + posInRawMsg] = val;
  4106  01313C  0E00               	movlw	low uart_tasks@message
  4107  01313E  6E15               	movwf	??_uart_tasks^0,c
  4108  013140  0E03               	movlw	high uart_tasks@message
  4109  013142  6E16               	movwf	(??_uart_tasks+1)^0,c
  4110  013144  501A               	movf	uart_tasks@rawMsgOffset^0,w,c
  4111  013146  2615               	addwf	??_uart_tasks^0,f,c
  4112  013148  0E00               	movlw	0
  4113  01314A  2216               	addwfc	(??_uart_tasks+1)^0,f,c
  4114  01314C  501D               	movf	uart_tasks@posInRawMsg^0,w,c
  4115  01314E  2415               	addwf	??_uart_tasks^0,w,c
  4116  013150  6ED9               	movwf	fsr2l,c
  4117  013152  0E00               	movlw	0
  4118  013154  2016               	addwfc	(??_uart_tasks+1)^0,w,c
  4119  013156  6EDA               	movwf	fsr2h,c
  4120  013158  0060  F08F  FFDF   	movff	uart_tasks@val,indf2
  4121  01315E  D7C7               	goto	u6580
  4122  013160                     l5298:
  4123                           
  4124                           ; BSR set to: 0
  4125  013160  5021               	movf	uart_tasks@msgLen^0,w,c
  4126  013162  181D               	xorwf	uart_tasks@posInRawMsg^0,w,c
  4127  013164  A4D8               	btfss	status,2,c
  4128  013166  D017               	goto	l5314
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;uart.c: 120:             checksum += val;
  4132  013168  5023               	movf	uart_tasks@val^0,w,c
  4133  01316A  261B               	addwf	uart_tasks@checksum^0,f,c
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;uart.c: 121:             if (checksum == 0x00) {
  4137  01316C  501B               	movf	uart_tasks@checksum^0,w,c
  4138  01316E  A4D8               	btfss	status,2,c
  4139  013170  D00B               	goto	l5306
  4140                           
  4141                           ; BSR set to: 0
  4142                           ;uart.c: 122:                 handle_message(message + rawMsgOffset, msgLen);
  4143  013172  0E00               	movlw	low uart_tasks@message
  4144  013174  241A               	addwf	uart_tasks@rawMsgOffset^0,w,c
  4145  013176  6E11               	movwf	handle_message@message^0,c
  4146  013178  6A12               	clrf	(handle_message@message+1)^0,c
  4147  01317A  0E03               	movlw	high uart_tasks@message
  4148  01317C  2212               	addwfc	(handle_message@message+1)^0,f,c
  4149  01317E  0060  F084  F013   	movff	uart_tasks@msgLen,handle_message@len
  4150  013184  EC86  F099         	call	_handle_message	;wreg free
  4151  013188                     l5306:
  4152                           
  4153                           ;uart.c: 124:             msgOffset = intPos + 1;
  4154  013188  2820               	incf	uart_tasks@intPos^0,w,c
  4155  01318A  6E1C               	movwf	uart_tasks@msgOffset^0,c
  4156                           
  4157                           ;uart.c: 125:             zeroByte = 0;
  4158  01318C  0E00               	movlw	0
  4159  01318E  6E22               	movwf	uart_tasks@zeroByte^0,c
  4160                           
  4161                           ;uart.c: 126:             rawMsgOffset += msgLen;
  4162  013190  5021               	movf	uart_tasks@msgLen^0,w,c
  4163  013192  261A               	addwf	uart_tasks@rawMsgOffset^0,f,c
  4164  013194  D7CC               	goto	l5290
  4165  013196                     l5314:
  4166                           
  4167                           ;uart.c: 129:     }
  4168  013196  2A1E               	incf	uart_tasks@i^0,f,c
  4169  013198                     l5316:
  4170  013198  5019               	movf	uart_tasks@rxLen^0,w,c
  4171  01319A  5C1E               	subwf	uart_tasks@i^0,w,c
  4172  01319C  A0D8               	btfss	status,0,c
  4173  01319E  D76E               	goto	l5254
  4174                           
  4175                           ;uart.c: 130:     rxPos = msgOffset;
  4176  0131A0  0060  F070  F0E4   	movff	uart_tasks@msgOffset,uart_tasks@rxPos
  4177  0131A6  0012               	return		;funcret
  4178  0131A8                     __end_of_uart_tasks:
  4179                           	opt callstack 0
  4180                           
  4181 ;; *************** function _handle_message *****************
  4182 ;; Defined at:
  4183 ;;		line 58 in file "uart.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;  message         2   16[COMRAM] PTR unsigned char 
  4186 ;;		 -> uart_tasks@message(256), 
  4187 ;;  len             1   18[COMRAM] unsigned char 
  4188 ;; Auto vars:     Size  Location     Type
  4189 ;;		None
  4190 ;; Return value:  Size  Location     Type
  4191 ;;                  1    wreg      void 
  4192 ;; Registers used:
  4193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4194 ;; Tracked objects:
  4195 ;;		On entry : 3F/0
  4196 ;;		On exit  : 4/0
  4197 ;;		Unchanged: 0/0
  4198 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4199 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4201 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4202 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4203 ;;Total ram usage:        4 bytes
  4204 ;; Hardware stack levels used:    1
  4205 ;; Hardware stack levels required when called:    2
  4206 ;; This function calls:
  4207 ;;		_uart_send
  4208 ;; This function is called by:
  4209 ;;		_uart_tasks
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           	psect	text5
  4214  01330C                     __ptext5:
  4215                           	opt callstack 0
  4216  01330C                     _handle_message:
  4217                           	opt callstack 26
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;uart.c: 59:     if (message[0] == 0x17 && message[2] == 0x04 && len == 4) {
  4221                           
  4222                           ;incstack = 0
  4223  01330C  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4224  013312  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4225  013318  0E17               	movlw	23
  4226  01331A  18DE               	xorwf	postinc2,w,c
  4227  01331C  A4D8               	btfss	status,2,c
  4228  01331E  D019               	goto	l4966
  4229                           
  4230                           ; BSR set to: 0
  4231  013320  EE20 F002          	lfsr	2,2
  4232  013324  5011               	movf	handle_message@message^0,w,c
  4233  013326  26D9               	addwf	fsr2l,f,c
  4234  013328  5012               	movf	(handle_message@message+1)^0,w,c
  4235  01332A  22DA               	addwfc	fsr2h,f,c
  4236  01332C  0E04               	movlw	4
  4237  01332E  18DE               	xorwf	postinc2,w,c
  4238  013330  A4D8               	btfss	status,2,c
  4239  013332  D00F               	goto	l4966
  4240                           
  4241                           ; BSR set to: 0
  4242  013334  0E04               	movlw	4
  4243  013336  1813               	xorwf	handle_message@len^0,w,c
  4244  013338  A4D8               	btfss	status,2,c
  4245  01333A  D00B               	goto	l4966
  4246                           
  4247                           ; BSR set to: 0
  4248                           ;uart.c: 60:         volume_level = message[3] & 0x0f;
  4249  01333C  EE20 F003          	lfsr	2,3
  4250  013340  5011               	movf	handle_message@message^0,w,c
  4251  013342  26D9               	addwf	fsr2l,f,c
  4252  013344  5012               	movf	(handle_message@message+1)^0,w,c
  4253  013346  22DA               	addwfc	fsr2h,f,c
  4254  013348  50DF               	movf	indf2,w,c
  4255  01334A  0B0F               	andlw	15
  4256  01334C  0104               	movlb	4	; () banked
  4257  01334E  6F3C               	movwf	_volume_level& (0+255),b
  4258                           
  4259                           ;uart.c: 61:     } else if (message[0] == 0x1E && len == 8) {
  4260  013350  D051               	goto	u6120
  4261  013352                     l4966:
  4262                           
  4263                           ; BSR set to: 0
  4264  013352  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4265  013358  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4266  01335E  0E1E               	movlw	30
  4267  013360  18DE               	xorwf	postinc2,w,c
  4268  013362  A4D8               	btfss	status,2,c
  4269  013364  D03A               	goto	l4972
  4270                           
  4271                           ; BSR set to: 0
  4272  013366  0E08               	movlw	8
  4273  013368  1813               	xorwf	handle_message@len^0,w,c
  4274  01336A  A4D8               	btfss	status,2,c
  4275  01336C  D036               	goto	l4972
  4276                           
  4277                           ; BSR set to: 0
  4278                           ;uart.c: 62:         on = message[1] != 0x00;
  4279  01336E  EE20 F001          	lfsr	2,1
  4280  013372  5011               	movf	handle_message@message^0,w,c
  4281  013374  26D9               	addwf	fsr2l,f,c
  4282  013376  5012               	movf	(handle_message@message+1)^0,w,c
  4283  013378  22DA               	addwfc	fsr2h,f,c
  4284  01337A  50DF               	movf	indf2,w,c
  4285  01337C  B4D8               	btfsc	status,2,c
  4286  01337E  D002               	goto	u6030
  4287  013380  0E01               	movlw	1
  4288  013382  D001               	goto	u6040
  4289  013384                     u6030:
  4290  013384  0E00               	movlw	0
  4291  013386                     u6040:
  4292  013386  6FE5               	movwf	_on& (0+255),b
  4293                           
  4294                           ;uart.c: 63:         connected = message[2] != 0x00;
  4295  013388  EE20 F002          	lfsr	2,2
  4296  01338C  5011               	movf	handle_message@message^0,w,c
  4297  01338E  26D9               	addwf	fsr2l,f,c
  4298  013390  5012               	movf	(handle_message@message+1)^0,w,c
  4299  013392  22DA               	addwfc	fsr2h,f,c
  4300  013394  50DF               	movf	indf2,w,c
  4301  013396  B4D8               	btfsc	status,2,c
  4302  013398  D002               	goto	u6050
  4303  01339A  0E01               	movlw	1
  4304  01339C  D001               	goto	u6060
  4305  01339E                     u6050:
  4306  01339E  0E00               	movlw	0
  4307  0133A0                     u6060:
  4308  0133A0  0104               	movlb	4	; () banked
  4309  0133A2  6F39               	movwf	_connected& (0+255),b
  4310                           
  4311                           ;uart.c: 64:         pairing = message[1] == 0x01;
  4312  0133A4  EE20 F001          	lfsr	2,1
  4313  0133A8  5011               	movf	handle_message@message^0,w,c
  4314  0133AA  26D9               	addwf	fsr2l,f,c
  4315  0133AC  5012               	movf	(handle_message@message+1)^0,w,c
  4316  0133AE  22DA               	addwfc	fsr2h,f,c
  4317  0133B0  04DE               	decf	postinc2,w,c
  4318  0133B2  A4D8               	btfss	status,2,c
  4319  0133B4  D002               	goto	u6070
  4320  0133B6  0E01               	movlw	1
  4321  0133B8  D001               	goto	u6080
  4322  0133BA                     u6070:
  4323  0133BA  0E00               	movlw	0
  4324  0133BC                     u6080:
  4325  0133BC  6F3B               	movwf	_pairing& (0+255),b
  4326                           
  4327                           ;uart.c: 65:         streaming = message[6];
  4328  0133BE  EE20 F006          	lfsr	2,6
  4329  0133C2  5011               	movf	handle_message@message^0,w,c
  4330  0133C4  26D9               	addwf	fsr2l,f,c
  4331  0133C6  5012               	movf	(handle_message@message+1)^0,w,c
  4332  0133C8  22DA               	addwfc	fsr2h,f,c
  4333  0133CA  50DF               	movf	indf2,w,c
  4334  0133CC  B4D8               	btfsc	status,2,c
  4335  0133CE  D002               	goto	u6090
  4336  0133D0  0E01               	movlw	1
  4337  0133D2  D001               	goto	u6100
  4338  0133D4                     u6090:
  4339  0133D4  0E00               	movlw	0
  4340  0133D6                     u6100:
  4341  0133D6  6F3A               	movwf	_streaming& (0+255),b
  4342                           
  4343                           ;uart.c: 66:     } else if (message[0] == 0x00 && len == 3) {
  4344  0133D8  D00D               	goto	u6120
  4345  0133DA                     l4972:
  4346                           
  4347                           ; BSR set to: 0
  4348  0133DA  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4349  0133E0  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4350  0133E6  50DF               	movf	indf2,w,c
  4351  0133E8  A4D8               	btfss	status,2,c
  4352  0133EA  0012               	return	
  4353                           
  4354                           ; BSR set to: 0
  4355  0133EC  0E03               	movlw	3
  4356  0133EE  1813               	xorwf	handle_message@len^0,w,c
  4357  0133F0  A4D8               	btfss	status,2,c
  4358  0133F2  0012               	return	
  4359  0133F4                     u6120:
  4360                           
  4361                           ;uart.c: 70:     ackCmd[1] = message[0];
  4362  0133F4  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4363  0133FA  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4364  013400  50DF               	movf	indf2,w,c
  4365  013402  0100               	movlb	0	; () banked
  4366  013404  6FEF               	movwf	(_ackCmd+1)& (0+255),b
  4367                           
  4368                           ; BSR set to: 0
  4369                           ;uart.c: 71:     uart_send(ackCmd, 2);
  4370  013406  0EEE               	movlw	low _ackCmd
  4371  013408  6E0C               	movwf	uart_send@buf^0,c
  4372  01340A  6A0D               	clrf	(uart_send@buf+1)^0,c
  4373  01340C  0E02               	movlw	2
  4374  01340E  6E0E               	movwf	uart_send@len^0,c
  4375  013410  EC20  F09F         	call	_uart_send	;wreg free
  4376  013414  0012               	return		;funcret
  4377  013416                     __end_of_handle_message:
  4378                           	opt callstack 0
  4379                           
  4380 ;; *************** function _uart_send *****************
  4381 ;; Defined at:
  4382 ;;		line 133 in file "uart.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  buf             2   11[COMRAM] PTR unsigned char 
  4385 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4386 ;;  len             1   13[COMRAM] unsigned char 
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/4
  4395 ;;		On exit  : 3F/3B
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4398 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4400 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4401 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4402 ;;Total ram usage:        5 bytes
  4403 ;; Hardware stack levels used:    1
  4404 ;; Hardware stack levels required when called:    1
  4405 ;; This function calls:
  4406 ;;		_memcpy
  4407 ;;		_transmitChecksum
  4408 ;; This function is called by:
  4409 ;;		_main_loop
  4410 ;;		_handle_message
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text6
  4415  013E40                     __ptext6:
  4416                           	opt callstack 0
  4417  013E40                     _uart_send:
  4418                           	opt callstack 26
  4419                           
  4420                           ;uart.c: 134:     while (DMA2CON0bits.SIRQEN);
  4421                           
  4422                           ;incstack = 0
  4423  013E40  013B               	movlb	59	; () banked
  4424  013E42  BDDC               	btfsc	220,6,b	;volatile
  4425  013E44  D7FD               	goto	_uart_send
  4426                           
  4427                           ; BSR set to: 59
  4428                           ;uart.c: 135:     if (DMA2SCNTIF) transmitChecksum();
  4429  013E46  0139               	movlb	57	; () banked
  4430  013E48  B5A5               	btfsc	165,2,b	;volatile
  4431                           
  4432                           ; BSR set to: 57
  4433  013E4A  EC25  F0A2         	call	_transmitChecksum	;wreg free
  4434                           
  4435                           ; BSR set to: 57
  4436                           ;uart.c: 136:     DMA2CON0bits.EN = 0;
  4437  013E4E  013B               	movlb	59	; () banked
  4438  013E50  9FDC               	bcf	220,7,b	;volatile
  4439                           
  4440                           ; BSR set to: 59
  4441                           ;uart.c: 137:     txBuf[0] = 0xAA;
  4442  013E52  0EAA               	movlw	170
  4443  013E54  0102               	movlb	2	; () banked
  4444  013E56  6F00               	movwf	0,b
  4445                           
  4446                           ; BSR set to: 2
  4447                           ;uart.c: 138:     txBuf[1] = 0x00;
  4448  013E58  0E00               	movlw	0
  4449  013E5A  6F01               	movwf	1,b
  4450                           
  4451                           ; BSR set to: 2
  4452                           ;uart.c: 139:     txBuf[2] = len;
  4453  013E5C  0060  F038  F202   	movff	uart_send@len,514
  4454                           
  4455                           ; BSR set to: 2
  4456                           ;uart.c: 140:     memcpy(txBuf + 3, buf, len);
  4457  013E62  0E03               	movlw	3
  4458  013E64  6E01               	movwf	memcpy@d1^0,c
  4459  013E66  0E02               	movlw	2
  4460  013E68  6E02               	movwf	(memcpy@d1+1)^0,c
  4461  013E6A  0060  F030  F003   	movff	uart_send@buf,memcpy@s1
  4462  013E70  0060  F034  F004   	movff	uart_send@buf+1,memcpy@s1+1
  4463  013E76  0060  F038  F005   	movff	uart_send@len,memcpy@n
  4464  013E7C  6A06               	clrf	(memcpy@n+1)^0,c
  4465  013E7E  EC95  F09F         	call	_memcpy	;wreg free
  4466                           
  4467                           ;uart.c: 141:     DMA2SSZH = ((uint16_t)len + 3) >> 8;
  4468  013E82  500E               	movf	uart_send@len^0,w,c
  4469  013E84  6E0F               	movwf	??_uart_send^0,c
  4470  013E86  6A10               	clrf	(??_uart_send+1)^0,c
  4471  013E88  0E03               	movlw	3
  4472  013E8A  260F               	addwf	??_uart_send^0,f,c
  4473  013E8C  0E00               	movlw	0
  4474  013E8E  2210               	addwfc	(??_uart_send+1)^0,f,c
  4475  013E90  0060  F040  F00F   	movff	??_uart_send+1,??_uart_send
  4476  013E96  6A10               	clrf	(??_uart_send+1)^0,c
  4477  013E98  500F               	movf	??_uart_send^0,w,c
  4478  013E9A  013B               	movlb	59	; () banked
  4479  013E9C  6FD8               	movwf	216,b	;volatile
  4480                           
  4481                           ; BSR set to: 59
  4482                           ;uart.c: 142:     DMA2SSZL = (len + 3) & 0xff;
  4483  013E9E  500E               	movf	uart_send@len^0,w,c
  4484  013EA0  0F03               	addlw	3
  4485  013EA2  6FD7               	movwf	215,b	;volatile
  4486                           
  4487                           ; BSR set to: 59
  4488                           ;uart.c: 143:     U1TXCHK = 0;
  4489  013EA4  0E00               	movlw	0
  4490  013EA6  013D               	movlb	61	; () banked
  4491  013EA8  6FEB               	movwf	235,b	;volatile
  4492                           
  4493                           ; BSR set to: 61
  4494                           ;uart.c: 144:     DMA2SCNTIF = 0;
  4495  013EAA  0139               	movlb	57	; () banked
  4496  013EAC  95A5               	bcf	165,2,b	;volatile
  4497                           
  4498                           ; BSR set to: 57
  4499                           ;uart.c: 145:     DMA2CON0bits.EN = 1;
  4500  013EAE  013B               	movlb	59	; () banked
  4501  013EB0  8FDC               	bsf	220,7,b	;volatile
  4502                           
  4503                           ; BSR set to: 59
  4504                           ;uart.c: 146:     DMA2CON0bits.SIRQEN = 1;
  4505  013EB2  8DDC               	bsf	220,6,b	;volatile
  4506                           
  4507                           ; BSR set to: 59
  4508  013EB4  0012               	return		;funcret
  4509  013EB6                     __end_of_uart_send:
  4510                           	opt callstack 0
  4511                           
  4512 ;; *************** function _transmitChecksum *****************
  4513 ;; Defined at:
  4514 ;;		line 74 in file "uart.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;		None
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;		None
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  1    wreg      void 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0
  4523 ;; Tracked objects:
  4524 ;;		On entry : 3F/39
  4525 ;;		On exit  : 3F/39
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4532 ;;Total ram usage:        0 bytes
  4533 ;; Hardware stack levels used:    1
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_uart_tasks
  4538 ;;		_uart_send
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text7
  4543  01444A                     __ptext7:
  4544                           	opt callstack 0
  4545  01444A                     _transmitChecksum:
  4546                           	opt callstack 28
  4547                           
  4548                           ; BSR set to: 57
  4549                           
  4550                           ; BSR set to: 57
  4551                           ;uart.c: 75:     while (!U1TXIF);
  4552                           
  4553                           ; BSR set to: 59
  4554                           ;incstack = 0
  4555  01444A  A9A3               	btfss	163,4,b	;volatile
  4556  01444C  D7FE               	goto	_transmitChecksum
  4557                           
  4558                           ; BSR set to: 57
  4559                           ;uart.c: 76:     U1TXB = -(U1TXCHK - 0xaa);
  4560  01444E  013D               	movlb	61	; () banked
  4561  014450  51EB               	movf	235,w,b	;volatile
  4562  014452  0F56               	addlw	86
  4563  014454  0800               	sublw	0
  4564  014456  6FEA               	movwf	234,b	;volatile
  4565                           
  4566                           ; BSR set to: 61
  4567                           ;uart.c: 77:     DMA2SCNTIF = 0;
  4568  014458  0139               	movlb	57	; () banked
  4569  01445A  95A5               	bcf	165,2,b	;volatile
  4570                           
  4571                           ; BSR set to: 57
  4572  01445C  0012               	return		;funcret
  4573  01445E                     __end_of_transmitChecksum:
  4574                           	opt callstack 0
  4575                           
  4576 ;; *************** function _memcpy *****************
  4577 ;; Defined at:
  4578 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  d1              2    0[COMRAM] PTR void 
  4581 ;;		 -> txBuf(256), 
  4582 ;;  s1              2    2[COMRAM] PTR const void 
  4583 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4584 ;;  n               2    4[COMRAM] unsigned int 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4587 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4588 ;;  d               2    6[COMRAM] PTR unsigned char 
  4589 ;;		 -> txBuf(256), 
  4590 ;;  tmp             1   10[COMRAM] unsigned char 
  4591 ;; Return value:  Size  Location     Type
  4592 ;;                  2    0[COMRAM] PTR void 
  4593 ;; Registers used:
  4594 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4595 ;; Tracked objects:
  4596 ;;		On entry : 3F/2
  4597 ;;		On exit  : 0/0
  4598 ;;		Unchanged: 0/0
  4599 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4600 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4601 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4603 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4604 ;;Total ram usage:       11 bytes
  4605 ;; Hardware stack levels used:    1
  4606 ;; This function calls:
  4607 ;;		Nothing
  4608 ;; This function is called by:
  4609 ;;		_uart_send
  4610 ;; This function uses a non-reentrant model
  4611 ;;
  4612                           
  4613                           	psect	text8
  4614  013F2A                     __ptext8:
  4615                           	opt callstack 0
  4616  013F2A                     _memcpy:
  4617                           	opt callstack 26
  4618                           
  4619                           ; BSR set to: 2
  4620                           
  4621                           ; BSR set to: 57
  4622                           ;incstack = 0
  4623  013F2A  0060  F00C  F009   	movff	memcpy@s1,memcpy@s
  4624  013F30  0060  F010  F00A   	movff	memcpy@s1+1,memcpy@s+1
  4625  013F36  0060  F004  F007   	movff	memcpy@d1,memcpy@d
  4626  013F3C  0060  F008  F008   	movff	memcpy@d1+1,memcpy@d+1
  4627  013F42  D023               	goto	l4434
  4628  013F44                     l4426:
  4629  013F44  0060  F027  FFF6   	movff	memcpy@s,tblptrl
  4630  013F4A  0060  F02B  FFF7   	movff	memcpy@s+1,tblptrh
  4631  013F50  0E00               	movlw	low (__mediumconst shr (0+16))
  4632  013F52  6EF8               	movwf	tblptru,c
  4633  013F54  0E1F               	movlw	(high __ramtop+-1)
  4634  013F56  64F7               	cpfsgt	tblptrh,c
  4635  013F58  D003               	bra	u5097
  4636  013F5A  0008               	tblrd		*
  4637  013F5C  50F5               	movf	tablat,w,c
  4638  013F5E  D007               	bra	u5090
  4639  013F60                     u5097:
  4640  013F60  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4641  013F66  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4642  013F6C  50E7               	movf	indf1,w,c
  4643  013F6E                     u5090:
  4644  013F6E  6E0B               	movwf	memcpy@tmp^0,c
  4645  013F70  4A09               	infsnz	memcpy@s^0,f,c
  4646  013F72  2A0A               	incf	(memcpy@s+1)^0,f,c
  4647  013F74  0060  F01F  FFD9   	movff	memcpy@d,fsr2l
  4648  013F7A  0060  F023  FFDA   	movff	memcpy@d+1,fsr2h
  4649  013F80  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
  4650  013F86  4A07               	infsnz	memcpy@d^0,f,c
  4651  013F88  2A08               	incf	(memcpy@d+1)^0,f,c
  4652  013F8A                     l4434:
  4653  013F8A  0605               	decf	memcpy@n^0,f,c
  4654  013F8C  A0D8               	btfss	status,0,c
  4655  013F8E  0606               	decf	(memcpy@n+1)^0,f,c
  4656  013F90  2805               	incf	memcpy@n^0,w,c
  4657  013F92  E1D8               	bnz	l4426
  4658  013F94  2806               	incf	(memcpy@n+1)^0,w,c
  4659  013F96  B4D8               	btfsc	status,2,c
  4660  013F98  0012               	return	
  4661  013F9A  D7D4               	goto	l4426
  4662  013F9C                     __end_of_memcpy:
  4663                           	opt callstack 0
  4664                           
  4665 ;; *************** function _sprintf *****************
  4666 ;; Defined at:
  4667 ;;		line 9 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  s               2   91[BANK0 ] PTR unsigned char 
  4670 ;;		 -> main_loop@batmsg(17), 
  4671 ;;  fmt             2   93[BANK0 ] PTR const unsigned char 
  4672 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
  4673 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
  4674 ;; Auto vars:     Size  Location     Type
  4675 ;;  f               6  102[BANK0 ] struct _IO_FILE
  4676 ;;  ret             2    0        int 
  4677 ;;  ap              1  101[BANK0 ] PTR void [1]
  4678 ;;		 -> ?_sprintf(2), 
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  2   91[BANK0 ] int 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 3F/0
  4685 ;;		On exit  : 3F/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4688 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4689 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4691 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4692 ;;Total ram usage:       17 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:    7
  4695 ;; This function calls:
  4696 ;;		_vfprintf
  4697 ;; This function is called by:
  4698 ;;		_main_loop
  4699 ;; This function uses a non-reentrant model
  4700 ;;
  4701                           
  4702                           	psect	text9
  4703  014230                     __ptext9:
  4704                           	opt callstack 0
  4705  014230                     _sprintf:
  4706                           	opt callstack 22
  4707                           
  4708                           ; BSR set to: 0
  4709                           
  4710                           ;incstack = 0
  4711  014230  0EBF               	movlw	low (?_sprintf+4)
  4712  014232  6FC5               	movwf	sprintf@ap& (0+255),b
  4713  014234  0060  F2EC  F0C6   	movff	sprintf@s,sprintf@f
  4714  01423A  0060  F2F0  F0C7   	movff	sprintf@s+1,sprintf@f+1
  4715                           
  4716                           ; BSR set to: 0
  4717  014240  0E00               	movlw	0
  4718  014242  6FC9               	movwf	(sprintf@f+3)& (0+255),b
  4719  014244  0E00               	movlw	0
  4720  014246  6FC8               	movwf	(sprintf@f+2)& (0+255),b
  4721                           
  4722                           ; BSR set to: 0
  4723  014248  0E00               	movlw	0
  4724  01424A  6FCB               	movwf	(sprintf@f+5)& (0+255),b
  4725  01424C  0E00               	movlw	0
  4726  01424E  6FCA               	movwf	(sprintf@f+4)& (0+255),b
  4727                           
  4728                           ; BSR set to: 0
  4729  014250  0EC6               	movlw	low sprintf@f
  4730  014252  6FB5               	movwf	vfprintf@fp& (0+255),b
  4731  014254  0060  F2F4  F0B6   	movff	sprintf@fmt,vfprintf@fmt
  4732  01425A  0060  F2F8  F0B7   	movff	sprintf@fmt+1,vfprintf@fmt+1
  4733  014260  0EC5               	movlw	low sprintf@ap
  4734  014262  6FB8               	movwf	vfprintf@ap& (0+255),b
  4735  014264  EC97  F0A0         	call	_vfprintf	;wreg free
  4736                           
  4737                           ; BSR set to: 0
  4738  014268  51C8               	movf	(sprintf@f+2)& (0+255),w,b
  4739  01426A  25BB               	addwf	sprintf@s& (0+255),w,b
  4740  01426C  6ED9               	movwf	fsr2l,c
  4741  01426E  51C9               	movf	(sprintf@f+3)& (0+255),w,b
  4742  014270  21BC               	addwfc	(sprintf@s+1)& (0+255),w,b
  4743  014272  6EDA               	movwf	fsr2h,c
  4744  014274  0E00               	movlw	0
  4745  014276  6EDF               	movwf	indf2,c
  4746                           
  4747                           ; BSR set to: 0
  4748  014278  0012               	return		;funcret
  4749  01427A                     __end_of_sprintf:
  4750                           	opt callstack 0
  4751                           
  4752 ;; *************** function _vfprintf *****************
  4753 ;; Defined at:
  4754 ;;		line 1368 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4755 ;; Parameters:    Size  Location     Type
  4756 ;;  fp              1   85[BANK0 ] PTR struct _IO_FILE
  4757 ;;		 -> sprintf@f(6), 
  4758 ;;  fmt             2   86[BANK0 ] PTR const unsigned char 
  4759 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
  4760 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
  4761 ;;  ap              1   88[BANK0 ] PTR PTR void 
  4762 ;;		 -> sprintf@ap(1), 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  cfmt            2   89[BANK0 ] PTR unsigned char 
  4765 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
  4766 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
  4767 ;; Return value:  Size  Location     Type
  4768 ;;                  2   85[BANK0 ] int 
  4769 ;; Registers used:
  4770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4771 ;; Tracked objects:
  4772 ;;		On entry : 3F/0
  4773 ;;		On exit  : 3F/0
  4774 ;;		Unchanged: 0/0
  4775 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4776 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4779 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4780 ;;Total ram usage:        6 bytes
  4781 ;; Hardware stack levels used:    1
  4782 ;; Hardware stack levels required when called:    6
  4783 ;; This function calls:
  4784 ;;		_vfpfcnvrt
  4785 ;; This function is called by:
  4786 ;;		_sprintf
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           	psect	text10
  4791  01412E                     __ptext10:
  4792                           	opt callstack 0
  4793  01412E                     _vfprintf:
  4794                           	opt callstack 22
  4795                           
  4796                           ; BSR set to: 0
  4797                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FI
      +                          LE *fp, const char *fmt, va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1369: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1371:     char *cfmt;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1373:     cfmt = (char *)fmt;
  4798                           
  4799                           ; BSR set to: 0
  4800                           ;incstack = 0
  4801  01412E  0060  F2D8  F0B9   	movff	vfprintf@fmt,vfprintf@cfmt
  4802  014134  0060  F2DC  F0BA   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4803                           
  4804                           ; BSR set to: 0
  4805                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  4806  01413A  0E00               	movlw	0
  4807  01413C  6FDD               	movwf	(_nout+1)& (0+255),b
  4808  01413E  0E00               	movlw	0
  4809  014140  6FDC               	movwf	_nout& (0+255),b
  4810                           
  4811                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4812  014142  D00F               	goto	l6158
  4813  014144                     l6156:
  4814                           
  4815                           ; BSR set to: 0
  4816                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:         nout +=
      +                           vfpfcnvrt(fp, &cfmt, ap);
  4817  014144  0060  F2D4  F05D   	movff	vfprintf@fp,vfpfcnvrt@fp
  4818  01414A  0EB9               	movlw	low vfprintf@cfmt
  4819  01414C  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  4820  01414E  0060  F2E0  F05F   	movff	vfprintf@ap,vfpfcnvrt@ap
  4821  014154  EC9A  F08E         	call	_vfpfcnvrt	;wreg free
  4822  014158  505D               	movf	?_vfpfcnvrt^0,w,c
  4823  01415A  0100               	movlb	0	; () banked
  4824  01415C  27DC               	addwf	_nout& (0+255),f,b
  4825  01415E  505E               	movf	(?_vfpfcnvrt+1)^0,w,c
  4826  014160  23DD               	addwfc	(_nout+1)& (0+255),f,b
  4827  014162                     l6158:
  4828                           
  4829                           ; BSR set to: 0
  4830                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4831  014162  0060  F2E7  FFF6   	movff	vfprintf@cfmt,tblptrl
  4832  014168  0060  F2EB  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  4833  01416E                     	if	0	;tblptru may be non-zero
  4834  01416E                     	endif
  4835  01416E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4836  01416E  0E00               	movlw	low (__mediumconst shr (0+16))
  4837  014170  6EF8               	movwf	tblptru,c
  4838  014172                     	endif
  4839  014172  0008               	tblrd		*
  4840  014174  50F5               	movf	tablat,w,c
  4841  014176  0900               	iorlw	0
  4842  014178  A4D8               	btfss	status,2,c
  4843  01417A  D7E4               	goto	l6156
  4844                           
  4845                           ; BSR set to: 0
  4846                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     return nout
      +                          ;
  4847  01417C  0060  F370  F0B5   	movff	_nout,?_vfprintf
  4848  014182  0060  F374  F0B6   	movff	_nout+1,?_vfprintf+1
  4849                           
  4850                           ; BSR set to: 0
  4851  014188  0012               	return		;funcret
  4852  01418A                     __end_of_vfprintf:
  4853                           	opt callstack 0
  4854                           
  4855 ;; *************** function _vfpfcnvrt *****************
  4856 ;; Defined at:
  4857 ;;		line 670 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  4860 ;;		 -> sprintf@f(6), 
  4861 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  4862 ;;		 -> vfprintf@cfmt(2), 
  4863 ;;  ap              1   94[COMRAM] PTR PTR void 
  4864 ;;		 -> sprintf@ap(1), 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  llu             8    0        unsigned long long 
  4867 ;;  ll              8    0        long long 
  4868 ;;  f               4   80[BANK0 ] long long 
  4869 ;;  ct              3   77[BANK0 ] unsigned char [3]
  4870 ;;  vp              3    0        PTR void 
  4871 ;;  cp              3    0        PTR unsigned char 
  4872 ;;  i               2    0        int 
  4873 ;;  done            2    0        int 
  4874 ;;  c               1   84[BANK0 ] unsigned char 
  4875 ;; Return value:  Size  Location     Type
  4876 ;;                  2   92[COMRAM] int 
  4877 ;; Registers used:
  4878 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4879 ;; Tracked objects:
  4880 ;;		On entry : 3F/0
  4881 ;;		On exit  : 0/0
  4882 ;;		Unchanged: 0/0
  4883 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4884 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4885 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4886 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4887 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4888 ;;Total ram usage:       21 bytes
  4889 ;; Hardware stack levels used:    1
  4890 ;; Hardware stack levels required when called:    5
  4891 ;; This function calls:
  4892 ;;		_atoi
  4893 ;;		_efgtoa
  4894 ;;		_fputc
  4895 ;;		_isdigit
  4896 ;;		_isupper
  4897 ;;		_strncmp
  4898 ;;		_tolower
  4899 ;; This function is called by:
  4900 ;;		_vfprintf
  4901 ;; This function uses a non-reentrant model
  4902 ;;
  4903                           
  4904                           	psect	text11
  4905  011D34                     __ptext11:
  4906                           	opt callstack 0
  4907  011D34                     _vfpfcnvrt:
  4908                           	opt callstack 22
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static int vfpfc
      +                          nvrt(FILE *fp, char *fmt[], va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 671: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 672:     char c, *cp, ct[3];;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 673:     int done, i;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 674:     long long ll;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 675:     unsigned long long llu;
  4912                           
  4913                           ; BSR set to: 0
  4914                           ;incstack = 0
  4915  011D34  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4916  011D36  6ED9               	movwf	fsr2l,c
  4917  011D38  6ADA               	clrf	fsr2h,c
  4918  011D3A  006F FF7B FFF6     	movff	postinc2,tblptrl
  4919  011D40  006F FF77 FFF7     	movff	postdec2,tblptrh
  4920  011D46                     	if	0	;tblptru may be non-zero
  4921  011D46                     	endif
  4922  011D46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4923  011D46  0E00               	movlw	low (__mediumconst shr (0+16))
  4924  011D48  6EF8               	movwf	tblptru,c
  4925  011D4A                     	endif
  4926  011D4A  0008               	tblrd		*
  4927  011D4C  50F5               	movf	tablat,w,c
  4928  011D4E  0A25               	xorlw	37
  4929  011D50  A4D8               	btfss	status,2,c
  4930  011D52  D235               	goto	l6144
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  4934  011D54  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4935  011D56  6ED9               	movwf	fsr2l,c
  4936  011D58  6ADA               	clrf	fsr2h,c
  4937  011D5A  2ADE               	incf	postinc2,f,c
  4938  011D5C  0E00               	movlw	0
  4939  011D5E  22DD               	addwfc	postdec2,f,c
  4940                           
  4941                           ; BSR set to: 0
  4942                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:         flags = 
      +                          width = 0;
  4943  011D60  0E00               	movlw	0
  4944  011D62  6FDF               	movwf	(_width+1)& (0+255),b
  4945  011D64  0E00               	movlw	0
  4946  011D66  6FDE               	movwf	_width& (0+255),b
  4947  011D68  C0DE  F0E2         	movff	_width,_flags
  4948  011D6C  C0DF  F0E3         	movff	_width+1,_flags+1
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:         prec = -
      +                          1;
  4952  011D70  69E0               	setf	_prec& (0+255),b
  4953  011D72  69E1               	setf	(_prec+1)& (0+255),b
  4954                           
  4955                           ; BSR set to: 0
  4956                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:         if ((*fm
      +                          t)[0] == '*') {
  4957  011D74  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4958  011D76  6ED9               	movwf	fsr2l,c
  4959  011D78  6ADA               	clrf	fsr2h,c
  4960  011D7A  006F FF7B FFF6     	movff	postinc2,tblptrl
  4961  011D80  006F FF77 FFF7     	movff	postdec2,tblptrh
  4962  011D86                     	if	0	;tblptru may be non-zero
  4963  011D86                     	endif
  4964  011D86                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4965  011D86  0E00               	movlw	low (__mediumconst shr (0+16))
  4966  011D88  6EF8               	movwf	tblptru,c
  4967  011D8A                     	endif
  4968  011D8A  0008               	tblrd		*
  4969  011D8C  50F5               	movf	tablat,w,c
  4970  011D8E  0A2A               	xorlw	42
  4971  011D90  A4D8               	btfss	status,2,c
  4972  011D92  D01C               	goto	l6056
  4973                           
  4974                           ; BSR set to: 0
  4975                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:             ++*f
      +                          mt;
  4976  011D94  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4977  011D96  6ED9               	movwf	fsr2l,c
  4978  011D98  6ADA               	clrf	fsr2h,c
  4979  011D9A  2ADE               	incf	postinc2,f,c
  4980  011D9C  0E00               	movlw	0
  4981  011D9E  22DD               	addwfc	postdec2,f,c
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:             widt
      +                          h = (*(int *)__va_arg(*(int **)ap, (int)0));
  4985  011DA0  505F               	movf	vfpfcnvrt@ap^0,w,c
  4986  011DA2  6ED9               	movwf	fsr2l,c
  4987  011DA4  6ADA               	clrf	fsr2h,c
  4988  011DA6  0E02               	movlw	2
  4989  011DA8  26DF               	addwf	indf2,f,c
  4990  011DAA  5CDF               	subwf	indf2,w,c
  4991  011DAC  6ED9               	movwf	fsr2l,c
  4992  011DAE  6ADA               	clrf	fsr2h,c
  4993  011DB0  006F FF78  F0DE    	movff	postinc2,_width
  4994  011DB6  006F FF78  F0DF    	movff	postinc2,_width+1
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:             if (
      +                          width < 0) {
  4998  011DBC  AFDF               	btfss	(_width+1)& (0+255),7,b
  4999  011DBE  D045               	goto	u7880
  5000                           
  5001                           ; BSR set to: 0
  5002                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:                 
      +                          flags |= (1 << 0);
  5003  011DC0  81E2               	bsf	_flags& (0+255),0,b
  5004                           
  5005                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:                 
      +                          width = -width;
  5006  011DC2  6DDE               	negf	_width& (0+255),b
  5007  011DC4  1FDF               	comf	(_width+1)& (0+255),f,b
  5008  011DC6  B0D8               	btfsc	status,0,c
  5009  011DC8  2BDF               	incf	(_width+1)& (0+255),f,b
  5010  011DCA  D03F               	goto	u7880
  5011  011DCC                     l6056:
  5012                           
  5013                           ; BSR set to: 0
  5014                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:             widt
      +                          h = atoi(*fmt);
  5015  011DCC  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5016  011DCE  6ED9               	movwf	fsr2l,c
  5017  011DD0  6ADA               	clrf	fsr2h,c
  5018  011DD2  006F FF78  F008    	movff	postinc2,atoi@s
  5019  011DD8  006F FF74  F009    	movff	postdec2,atoi@s+1
  5020  011DDE  ECAB  F096         	call	_atoi	;wreg free
  5021  011DE2  0060  F020  F0DE   	movff	?_atoi,_width
  5022  011DE8  0060  F024  F0DF   	movff	?_atoi+1,_width+1
  5023                           
  5024                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:             whil
      +                          e ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5025  011DEE  D006               	goto	l6060
  5026  011DF0                     l6058:
  5027                           
  5028                           ; BSR set to: 0
  5029                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:                 
      +                          ++*fmt;
  5030  011DF0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5031  011DF2  6ED9               	movwf	fsr2l,c
  5032  011DF4  6ADA               	clrf	fsr2h,c
  5033  011DF6  2ADE               	incf	postinc2,f,c
  5034  011DF8  0E00               	movlw	0
  5035  011DFA  22DD               	addwfc	postdec2,f,c
  5036  011DFC                     l6060:
  5037  011DFC  0ED0               	movlw	208
  5038  011DFE  0100               	movlb	0	; () banked
  5039  011E00  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5040  011E02  0EFF               	movlw	255
  5041  011E04  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5042  011E06  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5043  011E08  6ED9               	movwf	fsr2l,c
  5044  011E0A  6ADA               	clrf	fsr2h,c
  5045  011E0C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5046  011E12  006F FF77 FFF7     	movff	postdec2,tblptrh
  5047  011E18                     	if	0	;tblptru may be non-zero
  5048  011E18                     	endif
  5049  011E18                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5050  011E18  0E00               	movlw	low (__mediumconst shr (0+16))
  5051  011E1A  6EF8               	movwf	tblptru,c
  5052  011E1C                     	endif
  5053  011E1C  0008               	tblrd		*
  5054  011E1E  50F5               	movf	tablat,w,c
  5055  011E20  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5056  011E22  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5057  011E24  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5058  011E26  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5059  011E28  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5060  011E2A  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5061  011E2C  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5062  011E2E  E106               	bnz	u7860
  5063  011E30  0E0A               	movlw	10
  5064  011E32  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5065  011E34  B0D8               	btfsc	status,0,c
  5066  011E36  D002               	goto	u7860
  5067  011E38  0E01               	movlw	1
  5068  011E3A  D001               	goto	u7870
  5069  011E3C                     u7860:
  5070  011E3C  0E00               	movlw	0
  5071  011E3E                     u7870:
  5072  011E3E  6FA7               	movwf	_vfpfcnvrt$654& (0+255),b
  5073  011E40  6BA8               	clrf	(_vfpfcnvrt$654+1)& (0+255),b
  5074                           
  5075                           ; BSR set to: 0
  5076  011E42  51A7               	movf	_vfpfcnvrt$654& (0+255),w,b
  5077  011E44  11A8               	iorwf	(_vfpfcnvrt$654+1)& (0+255),w,b
  5078  011E46  A4D8               	btfss	status,2,c
  5079  011E48  D7D3               	goto	l6058
  5080  011E4A                     u7880:
  5081                           
  5082                           ; BSR set to: 0
  5083                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:         if ((*fm
      +                          t)[0] == '.') {
  5084  011E4A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5085  011E4C  6ED9               	movwf	fsr2l,c
  5086  011E4E  6ADA               	clrf	fsr2h,c
  5087  011E50  006F FF7B FFF6     	movff	postinc2,tblptrl
  5088  011E56  006F FF77 FFF7     	movff	postdec2,tblptrh
  5089  011E5C                     	if	0	;tblptru may be non-zero
  5090  011E5C                     	endif
  5091  011E5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5092  011E5C  0E00               	movlw	low (__mediumconst shr (0+16))
  5093  011E5E  6EF8               	movwf	tblptru,c
  5094  011E60                     	endif
  5095  011E60  0008               	tblrd		*
  5096  011E62  50F5               	movf	tablat,w,c
  5097  011E64  0A2E               	xorlw	46
  5098  011E66  A4D8               	btfss	status,2,c
  5099  011E68  D06E               	goto	u7930
  5100                           
  5101                           ; BSR set to: 0
  5102                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:             prec
      +                           = 0;
  5103  011E6A  0E00               	movlw	0
  5104  011E6C  6FE1               	movwf	(_prec+1)& (0+255),b
  5105  011E6E  0E00               	movlw	0
  5106  011E70  6FE0               	movwf	_prec& (0+255),b
  5107                           
  5108                           ; BSR set to: 0
  5109                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:             ++*f
      +                          mt;
  5110  011E72  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5111  011E74  6ED9               	movwf	fsr2l,c
  5112  011E76  6ADA               	clrf	fsr2h,c
  5113  011E78  2ADE               	incf	postinc2,f,c
  5114  011E7A  0E00               	movlw	0
  5115  011E7C  22DD               	addwfc	postdec2,f,c
  5116                           
  5117                           ; BSR set to: 0
  5118                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:             if (
      +                          (*fmt)[0] == '*') {
  5119  011E7E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5120  011E80  6ED9               	movwf	fsr2l,c
  5121  011E82  6ADA               	clrf	fsr2h,c
  5122  011E84  006F FF7B FFF6     	movff	postinc2,tblptrl
  5123  011E8A  006F FF77 FFF7     	movff	postdec2,tblptrh
  5124  011E90                     	if	0	;tblptru may be non-zero
  5125  011E90                     	endif
  5126  011E90                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5127  011E90  0E00               	movlw	low (__mediumconst shr (0+16))
  5128  011E92  6EF8               	movwf	tblptru,c
  5129  011E94                     	endif
  5130  011E94  0008               	tblrd		*
  5131  011E96  50F5               	movf	tablat,w,c
  5132  011E98  0A2A               	xorlw	42
  5133  011E9A  A4D8               	btfss	status,2,c
  5134  011E9C  D015               	goto	l6078
  5135                           
  5136                           ; BSR set to: 0
  5137                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:                 
      +                          ++*fmt;
  5138  011E9E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5139  011EA0  6ED9               	movwf	fsr2l,c
  5140  011EA2  6ADA               	clrf	fsr2h,c
  5141  011EA4  2ADE               	incf	postinc2,f,c
  5142  011EA6  0E00               	movlw	0
  5143  011EA8  22DD               	addwfc	postdec2,f,c
  5144                           
  5145                           ; BSR set to: 0
  5146                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:                 
      +                          prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5147  011EAA  505F               	movf	vfpfcnvrt@ap^0,w,c
  5148  011EAC  6ED9               	movwf	fsr2l,c
  5149  011EAE  6ADA               	clrf	fsr2h,c
  5150  011EB0  0E02               	movlw	2
  5151  011EB2  26DF               	addwf	indf2,f,c
  5152  011EB4  5CDF               	subwf	indf2,w,c
  5153  011EB6  6ED9               	movwf	fsr2l,c
  5154  011EB8  6ADA               	clrf	fsr2h,c
  5155  011EBA  006F FF78  F0E0    	movff	postinc2,_prec
  5156  011EC0  006F FF78  F0E1    	movff	postinc2,_prec+1
  5157                           
  5158                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:             } el
      +                          se {
  5159  011EC6  D03F               	goto	u7930
  5160  011EC8                     l6078:
  5161                           
  5162                           ; BSR set to: 0
  5163                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:                 
      +                          prec = atoi(*fmt);
  5164  011EC8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5165  011ECA  6ED9               	movwf	fsr2l,c
  5166  011ECC  6ADA               	clrf	fsr2h,c
  5167  011ECE  006F FF78  F008    	movff	postinc2,atoi@s
  5168  011ED4  006F FF74  F009    	movff	postdec2,atoi@s+1
  5169  011EDA  ECAB  F096         	call	_atoi	;wreg free
  5170  011EDE  0060  F020  F0E0   	movff	?_atoi,_prec
  5171  011EE4  0060  F024  F0E1   	movff	?_atoi+1,_prec+1
  5172                           
  5173                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:                 
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5174  011EEA  D006               	goto	l6082
  5175  011EEC                     l6080:
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:                 
      +                              ++*fmt;
  5179  011EEC  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5180  011EEE  6ED9               	movwf	fsr2l,c
  5181  011EF0  6ADA               	clrf	fsr2h,c
  5182  011EF2  2ADE               	incf	postinc2,f,c
  5183  011EF4  0E00               	movlw	0
  5184  011EF6  22DD               	addwfc	postdec2,f,c
  5185  011EF8                     l6082:
  5186  011EF8  0ED0               	movlw	208
  5187  011EFA  0100               	movlb	0	; () banked
  5188  011EFC  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5189  011EFE  0EFF               	movlw	255
  5190  011F00  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5191  011F02  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5192  011F04  6ED9               	movwf	fsr2l,c
  5193  011F06  6ADA               	clrf	fsr2h,c
  5194  011F08  006F FF7B FFF6     	movff	postinc2,tblptrl
  5195  011F0E  006F FF77 FFF7     	movff	postdec2,tblptrh
  5196  011F14                     	if	0	;tblptru may be non-zero
  5197  011F14                     	endif
  5198  011F14                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5199  011F14  0E00               	movlw	low (__mediumconst shr (0+16))
  5200  011F16  6EF8               	movwf	tblptru,c
  5201  011F18                     	endif
  5202  011F18  0008               	tblrd		*
  5203  011F1A  50F5               	movf	tablat,w,c
  5204  011F1C  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5205  011F1E  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5206  011F20  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5207  011F22  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5208  011F24  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5209  011F26  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5210  011F28  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5211  011F2A  E106               	bnz	u7910
  5212  011F2C  0E0A               	movlw	10
  5213  011F2E  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5214  011F30  B0D8               	btfsc	status,0,c
  5215  011F32  D002               	goto	u7910
  5216  011F34  0E01               	movlw	1
  5217  011F36  D001               	goto	u7920
  5218  011F38                     u7910:
  5219  011F38  0E00               	movlw	0
  5220  011F3A                     u7920:
  5221  011F3A  6FA9               	movwf	_vfpfcnvrt$655& (0+255),b
  5222  011F3C  6BAA               	clrf	(_vfpfcnvrt$655+1)& (0+255),b
  5223                           
  5224                           ; BSR set to: 0
  5225  011F3E  51A9               	movf	_vfpfcnvrt$655& (0+255),w,b
  5226  011F40  11AA               	iorwf	(_vfpfcnvrt$655+1)& (0+255),w,b
  5227  011F42  A4D8               	btfss	status,2,c
  5228  011F44  D7D3               	goto	l6080
  5229  011F46                     u7930:
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:         ct[0] = 
      +                          tolower((int)(*fmt)[0]);
  5233  011F46  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5234  011F48  6ED9               	movwf	fsr2l,c
  5235  011F4A  6ADA               	clrf	fsr2h,c
  5236  011F4C  006F FF7B FFF6     	movff	postinc2,tblptrl
  5237  011F52  006F FF77 FFF7     	movff	postdec2,tblptrh
  5238  011F58                     	if	0	;tblptru may be non-zero
  5239  011F58                     	endif
  5240  011F58                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5241  011F58  0E00               	movlw	low (__mediumconst shr (0+16))
  5242  011F5A  6EF8               	movwf	tblptru,c
  5243  011F5C                     	endif
  5244  011F5C  0008               	tblrd		*
  5245  011F5E  50F5               	movf	tablat,w,c
  5246  011F60  6E07               	movwf	tolower@c^0,c
  5247  011F62  6A08               	clrf	(tolower@c+1)^0,c
  5248  011F64  ECC5  F0A0         	call	_tolower	;wreg free
  5249  011F68  5007               	movf	?_tolower^0,w,c
  5250  011F6A  0100               	movlb	0	; () banked
  5251  011F6C  6FAD               	movwf	vfpfcnvrt@ct& (0+255),b
  5252                           
  5253                           ; BSR set to: 0
  5254                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:         if (ct[0
      +                          ]) {
  5255  011F6E  51AD               	movf	vfpfcnvrt@ct& (0+255),w,b
  5256  011F70  B4D8               	btfsc	status,2,c
  5257  011F72  D03F               	goto	l6098
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:             ct[1
      +                          ] = tolower((int)(*fmt)[1]);
  5261  011F74  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5262  011F76  6ED9               	movwf	fsr2l,c
  5263  011F78  6ADA               	clrf	fsr2h,c
  5264  011F7A  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt
  5265  011F80  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+1
  5266  011F86  0E01               	movlw	1
  5267  011F88  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5268  011F8A  0E00               	movlw	0
  5269  011F8C  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5270  011F8E  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5271  011F94  0060  F293  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5272  011F9A                     	if	0	;tblptru may be non-zero
  5273  011F9A                     	endif
  5274  011F9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5275  011F9A  0E00               	movlw	low (__mediumconst shr (0+16))
  5276  011F9C  6EF8               	movwf	tblptru,c
  5277  011F9E                     	endif
  5278  011F9E  0008               	tblrd		*
  5279  011FA0  50F5               	movf	tablat,w,c
  5280  011FA2  6E07               	movwf	tolower@c^0,c
  5281  011FA4  6A08               	clrf	(tolower@c+1)^0,c
  5282  011FA6  ECC5  F0A0         	call	_tolower	;wreg free
  5283  011FAA  5007               	movf	?_tolower^0,w,c
  5284  011FAC  0100               	movlb	0	; () banked
  5285  011FAE  6FAE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5286                           
  5287                           ; BSR set to: 0
  5288                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:             if (
      +                          ct[1]) {
  5289  011FB0  51AE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5290  011FB2  B4D8               	btfsc	status,2,c
  5291  011FB4  D01E               	goto	l6098
  5292                           
  5293                           ; BSR set to: 0
  5294                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:                 
      +                          ct[2] = tolower((int)(*fmt)[2]);
  5295  011FB6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5296  011FB8  6ED9               	movwf	fsr2l,c
  5297  011FBA  6ADA               	clrf	fsr2h,c
  5298  011FBC  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt
  5299  011FC2  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+1
  5300  011FC8  0E02               	movlw	2
  5301  011FCA  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5302  011FCC  0E00               	movlw	0
  5303  011FCE  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5304  011FD0  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5305  011FD6  0060  F293  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5306  011FDC                     	if	0	;tblptru may be non-zero
  5307  011FDC                     	endif
  5308  011FDC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5309  011FDC  0E00               	movlw	low (__mediumconst shr (0+16))
  5310  011FDE  6EF8               	movwf	tblptru,c
  5311  011FE0                     	endif
  5312  011FE0  0008               	tblrd		*
  5313  011FE2  50F5               	movf	tablat,w,c
  5314  011FE4  6E07               	movwf	tolower@c^0,c
  5315  011FE6  6A08               	clrf	(tolower@c+1)^0,c
  5316  011FE8  ECC5  F0A0         	call	_tolower	;wreg free
  5317  011FEC  5007               	movf	?_tolower^0,w,c
  5318  011FEE  0100               	movlb	0	; () banked
  5319  011FF0  6FAF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5320  011FF2                     l6098:
  5321                           
  5322                           ; BSR set to: 0
  5323                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:         if (ct[0
      +                          ] == 'f') {
  5324  011FF2  0E66               	movlw	102
  5325  011FF4  19AD               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5326  011FF6  A4D8               	btfss	status,2,c
  5327  011FF8  D047               	goto	l6110
  5328                           
  5329                           ; BSR set to: 0
  5330                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:             c = 
      +                          (*fmt)[0];
  5331  011FFA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5332  011FFC  6ED9               	movwf	fsr2l,c
  5333  011FFE  6ADA               	clrf	fsr2h,c
  5334  012000  006F FF7B FFF6     	movff	postinc2,tblptrl
  5335  012006  006F FF77 FFF7     	movff	postdec2,tblptrh
  5336  01200C                     	if	0	;tblptru may be non-zero
  5337  01200C                     	endif
  5338  01200C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5339  01200C  0E00               	movlw	low (__mediumconst shr (0+16))
  5340  01200E  6EF8               	movwf	tblptru,c
  5341  012010                     	endif
  5342  012010  0008               	tblrd		*
  5343  012012  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5344                           
  5345                           ; BSR set to: 0
  5346                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:             ++*f
      +                          mt;
  5347  012018  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5348  01201A  6ED9               	movwf	fsr2l,c
  5349  01201C  6ADA               	clrf	fsr2h,c
  5350  01201E  2ADE               	incf	postinc2,f,c
  5351  012020  0E00               	movlw	0
  5352  012022  22DD               	addwfc	postdec2,f,c
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:             f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5356  012024  505F               	movf	vfpfcnvrt@ap^0,w,c
  5357  012026  6ED9               	movwf	fsr2l,c
  5358  012028  6ADA               	clrf	fsr2h,c
  5359  01202A  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5360  012030  0E04               	movlw	4
  5361  012032  26DF               	addwf	indf2,f,c
  5362  012034  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5363  012036  6ED9               	movwf	fsr2l,c
  5364  012038  6ADA               	clrf	fsr2h,c
  5365  01203A  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5366  012040  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5367  012046  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5368  01204C  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5369  012052                     l6106:
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:             retu
      +                          rn efgtoa(fp, f, c);
  5373  012052  0060  F174  F060   	movff	vfpfcnvrt@fp,efgtoa@fp
  5374  012058  0060  F2C0  F061   	movff	vfpfcnvrt@f,efgtoa@f
  5375  01205E  0060  F2C4  F062   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5376  012064  0060  F2C8  F063   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5377  01206A  0060  F2CC  F064   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5378  012070  0060  F2D0  F065   	movff	vfpfcnvrt@c,efgtoa@c
  5379  012076  ECC3  F085         	call	_efgtoa	;wreg free
  5380  01207A  0060  F180  F05D   	movff	?_efgtoa,?_vfpfcnvrt
  5381  012080  0060  F184  F05E   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5382  012086  0012               	return	
  5383  012088                     l6110:
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:         if (!str
      +                          ncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5387  012088  0EAD               	movlw	low vfpfcnvrt@ct
  5388  01208A  6E01               	movwf	strncmp@_l^0,c
  5389  01208C  0EFB               	movlw	low STR_23
  5390  01208E  6E02               	movwf	strncmp@_r^0,c
  5391  012090  0EFF               	movlw	high STR_23
  5392  012092  6E03               	movwf	(strncmp@_r+1)^0,c
  5393  012094  0E00               	movlw	0
  5394  012096  6E05               	movwf	(strncmp@n+1)^0,c
  5395  012098  0E02               	movlw	2
  5396  01209A  6E04               	movwf	strncmp@n^0,c
  5397  01209C  EC2C  F09C         	call	_strncmp	;wreg free
  5398  0120A0  5001               	movf	?_strncmp^0,w,c
  5399  0120A2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5400  0120A4  A4D8               	btfss	status,2,c
  5401  0120A6  D05C               	goto	l6128
  5402                           
  5403                           ; BSR set to: 0
  5404                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:             if (
      +                          (0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5405  0120A8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5406  0120AA  6ED9               	movwf	fsr2l,c
  5407  0120AC  6ADA               	clrf	fsr2h,c
  5408  0120AE  006F FF78  F0A3    	movff	postinc2,??_vfpfcnvrt
  5409  0120B4  006F FF74  F0A4    	movff	postdec2,??_vfpfcnvrt+1
  5410  0120BA  0E01               	movlw	1
  5411  0120BC  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5412  0120BE  0E00               	movlw	0
  5413  0120C0  23A4               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  5414  0120C2  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5415  0120C8  0060  F293  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  5416  0120CE                     	if	0	;tblptru may be non-zero
  5417  0120CE                     	endif
  5418  0120CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5419  0120CE  0E00               	movlw	low (__mediumconst shr (0+16))
  5420  0120D0  6EF8               	movwf	tblptru,c
  5421  0120D2                     	endif
  5422  0120D2  0008               	tblrd		*
  5423  0120D4  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5424  0120DA  0EBF               	movlw	191
  5425  0120DC  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5426  0120DE  0EFF               	movlw	255
  5427  0120E0  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5428  0120E2  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5429  0120E4  6ED9               	movwf	fsr2l,c
  5430  0120E6  6ADA               	clrf	fsr2h,c
  5431  0120E8  006F FF7B FFF6     	movff	postinc2,tblptrl
  5432  0120EE  006F FF77 FFF7     	movff	postdec2,tblptrh
  5433  0120F4                     	if	0	;tblptru may be non-zero
  5434  0120F4                     	endif
  5435  0120F4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5436  0120F4  0E00               	movlw	low (__mediumconst shr (0+16))
  5437  0120F6  6EF8               	movwf	tblptru,c
  5438  0120F8                     	endif
  5439  0120F8  0008               	tblrd		*
  5440  0120FA  50F5               	movf	tablat,w,c
  5441  0120FC  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5442  0120FE  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5443  012100  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5444  012102  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5445  012104  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5446  012106  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5447  012108  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5448  01210A  E106               	bnz	u7980
  5449  01210C  0E1A               	movlw	26
  5450  01210E  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5451  012110  B0D8               	btfsc	status,0,c
  5452  012112  D002               	goto	u7980
  5453  012114  0E01               	movlw	1
  5454  012116  D001               	goto	u7990
  5455  012118                     u7980:
  5456  012118  0E00               	movlw	0
  5457  01211A                     u7990:
  5458  01211A  6FAB               	movwf	_vfpfcnvrt$659& (0+255),b
  5459  01211C  6BAC               	clrf	(_vfpfcnvrt$659+1)& (0+255),b
  5460                           
  5461                           ; BSR set to: 0
  5462  01211E  51AB               	movf	_vfpfcnvrt$659& (0+255),w,b
  5463  012120  11AC               	iorwf	(_vfpfcnvrt$659+1)& (0+255),w,b
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:                 
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5467                           
  5468                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:             } el
      +                          se {
  5469                           
  5470                           ; BSR set to: 0
  5471                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:                 
      +                          f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5472  012122  505F               	movf	vfpfcnvrt@ap^0,w,c
  5473  012124  6ED9               	movwf	fsr2l,c
  5474  012126  6ADA               	clrf	fsr2h,c
  5475  012128  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5476  01212E  0E04               	movlw	4
  5477  012130  26DF               	addwf	indf2,f,c
  5478  012132  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5479  012134  6ED9               	movwf	fsr2l,c
  5480  012136  6ADA               	clrf	fsr2h,c
  5481  012138  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5482  01213E  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5483  012144  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5484  01214A  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:             *fmt
      +                           += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5488  012150  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5489  012152  6ED9               	movwf	fsr2l,c
  5490  012154  6ADA               	clrf	fsr2h,c
  5491  012156  0E02               	movlw	2
  5492  012158  26DE               	addwf	postinc2,f,c
  5493  01215A  0E00               	movlw	0
  5494  01215C  22DD               	addwfc	postdec2,f,c
  5495  01215E  D779               	goto	l6106
  5496  012160                     l6128:
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:         if ((*f
      +                          mt)[0] == '%') {
  5500  012160  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5501  012162  6ED9               	movwf	fsr2l,c
  5502  012164  6ADA               	clrf	fsr2h,c
  5503  012166  006F FF7B FFF6     	movff	postinc2,tblptrl
  5504  01216C  006F FF77 FFF7     	movff	postdec2,tblptrh
  5505  012172                     	if	0	;tblptru may be non-zero
  5506  012172                     	endif
  5507  012172                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5508  012172  0E00               	movlw	low (__mediumconst shr (0+16))
  5509  012174  6EF8               	movwf	tblptru,c
  5510  012176                     	endif
  5511  012176  0008               	tblrd		*
  5512  012178  50F5               	movf	tablat,w,c
  5513  01217A  0A25               	xorlw	37
  5514  01217C  A4D8               	btfss	status,2,c
  5515  01217E  D014               	goto	l6138
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:             ++*
      +                          fmt;
  5519  012180  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5520  012182  6ED9               	movwf	fsr2l,c
  5521  012184  6ADA               	clrf	fsr2h,c
  5522  012186  2ADE               	incf	postinc2,f,c
  5523  012188  0E00               	movlw	0
  5524  01218A  22DD               	addwfc	postdec2,f,c
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:             fpu
      +                          tc((int)'%', fp);
  5528  01218C  0E00               	movlw	0
  5529  01218E  6E02               	movwf	(fputc@c+1)^0,c
  5530  012190  0E25               	movlw	37
  5531  012192  6E01               	movwf	fputc@c^0,c
  5532  012194  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5533  01219A  EC80  F09D         	call	_fputc	;wreg free
  5534  01219E                     l6134:
  5535                           
  5536                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:             ret
      +                          urn 1;
  5537  01219E  0E00               	movlw	0
  5538  0121A0  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5539  0121A2  0E01               	movlw	1
  5540  0121A4  6E5D               	movwf	?_vfpfcnvrt^0,c
  5541  0121A6  0012               	return	
  5542  0121A8                     l6138:
  5543                           
  5544                           ; BSR set to: 0
  5545                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5546  0121A8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5547  0121AA  6ED9               	movwf	fsr2l,c
  5548  0121AC  6ADA               	clrf	fsr2h,c
  5549  0121AE  2ADE               	incf	postinc2,f,c
  5550  0121B0  0E00               	movlw	0
  5551  0121B2  22DD               	addwfc	postdec2,f,c
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:         return 
      +                          0;
  5555  0121B4  0E00               	movlw	0
  5556  0121B6  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5557  0121B8  0E00               	movlw	0
  5558  0121BA  6E5D               	movwf	?_vfpfcnvrt^0,c
  5559  0121BC  0012               	return	
  5560  0121BE                     l6144:
  5561                           
  5562                           ; BSR set to: 0
  5563                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)
      +                          (*fmt)[0], fp);
  5564  0121BE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5565  0121C0  6ED9               	movwf	fsr2l,c
  5566  0121C2  6ADA               	clrf	fsr2h,c
  5567  0121C4  006F FF7B FFF6     	movff	postinc2,tblptrl
  5568  0121CA  006F FF77 FFF7     	movff	postdec2,tblptrh
  5569  0121D0                     	if	0	;tblptru may be non-zero
  5570  0121D0                     	endif
  5571  0121D0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5572  0121D0  0E00               	movlw	low (__mediumconst shr (0+16))
  5573  0121D2  6EF8               	movwf	tblptru,c
  5574  0121D4                     	endif
  5575  0121D4  0008               	tblrd		*
  5576  0121D6  50F5               	movf	tablat,w,c
  5577  0121D8  6E01               	movwf	fputc@c^0,c
  5578  0121DA  6A02               	clrf	(fputc@c+1)^0,c
  5579  0121DC  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5580  0121E2  EC80  F09D         	call	_fputc	;wreg free
  5581                           
  5582                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5583  0121E6  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5584  0121E8  6ED9               	movwf	fsr2l,c
  5585  0121EA  6ADA               	clrf	fsr2h,c
  5586  0121EC  2ADE               	incf	postinc2,f,c
  5587  0121EE  0E00               	movlw	0
  5588  0121F0  22DD               	addwfc	postdec2,f,c
  5589  0121F2  D7D5               	goto	l6134
  5590  0121F4                     __end_of_vfpfcnvrt:
  5591                           	opt callstack 0
  5592                           
  5593 ;; *************** function _strncmp *****************
  5594 ;; Defined at:
  5595 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  _l              1    0[COMRAM] PTR const unsigned char 
  5598 ;;		 -> vfpfcnvrt@ct(3), 
  5599 ;;  _r              2    1[COMRAM] PTR const unsigned char 
  5600 ;;		 -> STR_25(3), 
  5601 ;;  n               2    3[COMRAM] unsigned int 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  r               2    6[COMRAM] PTR const unsigned char 
  5604 ;;		 -> STR_25(3), 
  5605 ;;  l               1    8[COMRAM] PTR const unsigned char 
  5606 ;;		 -> vfpfcnvrt@ct(3), 
  5607 ;; Return value:  Size  Location     Type
  5608 ;;                  2    0[COMRAM] int 
  5609 ;; Registers used:
  5610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5611 ;; Tracked objects:
  5612 ;;		On entry : 3F/0
  5613 ;;		On exit  : 3F/0
  5614 ;;		Unchanged: 3F/0
  5615 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5616 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5617 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5618 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5619 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5620 ;;Total ram usage:        9 bytes
  5621 ;; Hardware stack levels used:    1
  5622 ;; This function calls:
  5623 ;;		Nothing
  5624 ;; This function is called by:
  5625 ;;		_vfpfcnvrt
  5626 ;; This function uses a non-reentrant model
  5627 ;;
  5628                           
  5629                           	psect	text12
  5630  013858                     __ptext12:
  5631                           	opt callstack 0
  5632  013858                     _strncmp:
  5633                           	opt callstack 26
  5634                           
  5635                           ; BSR set to: 0
  5636                           
  5637                           ;incstack = 0
  5638  013858  0060  F004  F009   	movff	strncmp@_l,strncmp@l
  5639  01385E  0060  F008  F007   	movff	strncmp@_r,strncmp@r
  5640  013864  0060  F00C  F008   	movff	strncmp@_r+1,strncmp@r+1
  5641  01386A  0604               	decf	strncmp@n^0,f,c
  5642  01386C  A0D8               	btfss	status,0,c
  5643  01386E  0605               	decf	(strncmp@n+1)^0,f,c
  5644  013870  2804               	incf	strncmp@n^0,w,c
  5645  013872  E10E               	bnz	l4784
  5646  013874  2805               	incf	(strncmp@n+1)^0,w,c
  5647  013876  A4D8               	btfss	status,2,c
  5648  013878  D00B               	goto	l4784
  5649                           
  5650                           ; BSR set to: 0
  5651  01387A  0E00               	movlw	0
  5652  01387C  6E02               	movwf	(?_strncmp+1)^0,c
  5653  01387E  0E00               	movlw	0
  5654  013880  6E01               	movwf	?_strncmp^0,c
  5655  013882  0012               	return	
  5656  013884                     l4782:
  5657                           
  5658                           ; BSR set to: 0
  5659  013884  2A09               	incf	strncmp@l^0,f,c
  5660  013886  4A07               	infsnz	strncmp@r^0,f,c
  5661  013888  2A08               	incf	(strncmp@r+1)^0,f,c
  5662  01388A  0604               	decf	strncmp@n^0,f,c
  5663  01388C  A0D8               	btfss	status,0,c
  5664  01388E  0605               	decf	(strncmp@n+1)^0,f,c
  5665  013890                     l4784:
  5666                           
  5667                           ; BSR set to: 0
  5668  013890  5009               	movf	strncmp@l^0,w,c
  5669  013892  6ED9               	movwf	fsr2l,c
  5670  013894  6ADA               	clrf	fsr2h,c
  5671  013896  50DF               	movf	indf2,w,c
  5672  013898  B4D8               	btfsc	status,2,c
  5673  01389A  D023               	goto	u5740
  5674                           
  5675                           ; BSR set to: 0
  5676  01389C  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5677  0138A2  0060  F023  FFF7   	movff	strncmp@r+1,tblptrh
  5678  0138A8                     	if	0	;tblptru may be non-zero
  5679  0138A8                     	endif
  5680  0138A8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5681  0138A8  0E00               	movlw	low (__mediumconst shr (0+16))
  5682  0138AA  6EF8               	movwf	tblptru,c
  5683  0138AC                     	endif
  5684  0138AC  0008               	tblrd		*
  5685  0138AE  50F5               	movf	tablat,w,c
  5686  0138B0  0900               	iorlw	0
  5687  0138B2  B4D8               	btfsc	status,2,c
  5688  0138B4  D016               	goto	u5740
  5689                           
  5690                           ; BSR set to: 0
  5691  0138B6  5004               	movf	strncmp@n^0,w,c
  5692  0138B8  1005               	iorwf	(strncmp@n+1)^0,w,c
  5693  0138BA  B4D8               	btfsc	status,2,c
  5694  0138BC  D012               	goto	u5740
  5695                           
  5696                           ; BSR set to: 0
  5697  0138BE  5009               	movf	strncmp@l^0,w,c
  5698  0138C0  6ED9               	movwf	fsr2l,c
  5699  0138C2  6ADA               	clrf	fsr2h,c
  5700  0138C4  50DF               	movf	indf2,w,c
  5701  0138C6  6E06               	movwf	??_strncmp^0,c
  5702  0138C8  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5703  0138CE  0060  F023  FFF7   	movff	strncmp@r+1,tblptrh
  5704  0138D4                     	if	0	;tblptru may be non-zero
  5705  0138D4                     	endif
  5706  0138D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5707  0138D4  0E00               	movlw	low (__mediumconst shr (0+16))
  5708  0138D6  6EF8               	movwf	tblptru,c
  5709  0138D8                     	endif
  5710  0138D8  0008               	tblrd		*
  5711  0138DA  50F5               	movf	tablat,w,c
  5712  0138DC  1806               	xorwf	??_strncmp^0,w,c
  5713  0138DE  B4D8               	btfsc	status,2,c
  5714  0138E0  D7D1               	goto	l4782
  5715  0138E2                     u5740:
  5716                           
  5717                           ; BSR set to: 0
  5718  0138E2  5009               	movf	strncmp@l^0,w,c
  5719  0138E4  6ED9               	movwf	fsr2l,c
  5720  0138E6  6ADA               	clrf	fsr2h,c
  5721  0138E8  50DF               	movf	indf2,w,c
  5722  0138EA  6E06               	movwf	??_strncmp^0,c
  5723  0138EC  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5724  0138F2  0060  F023  FFF7   	movff	strncmp@r+1,tblptrh
  5725  0138F8                     	if	0	;tblptru may be non-zero
  5726  0138F8                     	endif
  5727  0138F8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5728  0138F8  0E00               	movlw	low (__mediumconst shr (0+16))
  5729  0138FA  6EF8               	movwf	tblptru,c
  5730  0138FC                     	endif
  5731  0138FC  0008               	tblrd		*
  5732  0138FE  50F5               	movf	tablat,w,c
  5733  013900  5C06               	subwf	??_strncmp^0,w,c
  5734  013902  6E01               	movwf	?_strncmp^0,c
  5735  013904  6A02               	clrf	(?_strncmp+1)^0,c
  5736  013906  A0D8               	btfss	status,0,c
  5737  013908  0602               	decf	(?_strncmp+1)^0,f,c
  5738                           
  5739                           ; BSR set to: 0
  5740  01390A  0012               	return		;funcret
  5741  01390C                     __end_of_strncmp:
  5742                           	opt callstack 0
  5743                           
  5744 ;; *************** function _efgtoa *****************
  5745 ;; Defined at:
  5746 ;;		line 319 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  5749 ;;		 -> sprintf@f(6), 
  5750 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  5751 ;;  c               1    5[BANK0 ] unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  u               4   63[BANK0 ] unsigned char 
  5754 ;;  g               4   55[BANK0 ] unsigned char 
  5755 ;;  l               4   49[BANK0 ] unsigned char 
  5756 ;;  h               4   45[BANK0 ] unsigned char 
  5757 ;;  ou              4   11[BANK0 ] unsigned char 
  5758 ;;  n               2   61[BANK0 ] int 
  5759 ;;  e               2   59[BANK0 ] int 
  5760 ;;  i               2   53[BANK0 ] int 
  5761 ;;  w               2   42[BANK0 ] int 
  5762 ;;  p               2   39[BANK0 ] int 
  5763 ;;  sign            2   37[BANK0 ] int 
  5764 ;;  d               2   35[BANK0 ] int 
  5765 ;;  ne              2   33[BANK0 ] int 
  5766 ;;  m               2   31[BANK0 ] int 
  5767 ;;  pp              2   29[BANK0 ] int 
  5768 ;;  t               2   27[BANK0 ] int 
  5769 ;;  mode            1   44[BANK0 ] unsigned char 
  5770 ;;  nmode           1   41[BANK0 ] unsigned char 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  2    0[BANK0 ] int 
  5773 ;; Registers used:
  5774 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5775 ;; Tracked objects:
  5776 ;;		On entry : 3F/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5780 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5781 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5782 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5783 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5784 ;;Total ram usage:       67 bytes
  5785 ;; Hardware stack levels used:    1
  5786 ;; Hardware stack levels required when called:    4
  5787 ;; This function calls:
  5788 ;;		___awdiv
  5789 ;;		___awmod
  5790 ;;		___fladd
  5791 ;;		___fldiv
  5792 ;;		___fleq
  5793 ;;		___flge
  5794 ;;		___flmul
  5795 ;;		___flneg
  5796 ;;		___flsub
  5797 ;;		___fltol
  5798 ;;		___fpclassifyf
  5799 ;;		_floorf
  5800 ;;		_isupper
  5801 ;;		_pad
  5802 ;;		_strcpy
  5803 ;;		_tolower
  5804 ;; This function is called by:
  5805 ;;		_vfpfcnvrt
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text13
  5810  010B86                     __ptext13:
  5811                           	opt callstack 0
  5812  010B86                     _efgtoa:
  5813                           	opt callstack 22
  5814                           
  5815                           ; BSR set to: 0
  5816                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static int efgto
      +                          a(FILE *fp, long double f, char c);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\comm
      +                          on\doprnt.c: 320: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 32
      +                          1:     char mode, nmode;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;F:\Programme\Microchip\xc8\v2.10\p
      +                          ic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;F:\Programme\Microc
      +                          hip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  5817                           
  5818                           ; BSR set to: 0
  5819                           ;incstack = 0
  5820  010B86  0E00               	movlw	0
  5821  010B88  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5822  010B8A  0E00               	movlw	0
  5823  010B8C  6F85               	movwf	efgtoa@sign& (0+255),b
  5824                           
  5825                           ; BSR set to: 0
  5826                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g = f;
  5827  010B8E  0060  F184  F097   	movff	efgtoa@f,efgtoa@g
  5828  010B94  0060  F188  F098   	movff	efgtoa@f+1,efgtoa@g+1
  5829  010B9A  0060  F18C  F099   	movff	efgtoa@f+2,efgtoa@g+2
  5830  010BA0  0060  F190  F09A   	movff	efgtoa@f+3,efgtoa@g+3
  5831                           
  5832                           ; BSR set to: 0
  5833                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0)
      +                           {
  5834  010BA6  AF9A               	btfss	(efgtoa@g+3)& (0+255),7,b
  5835  010BA8  D01E               	goto	l5750
  5836                           
  5837                           ; BSR set to: 0
  5838                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:         sign = 1
      +                          ;
  5839  010BAA  0E00               	movlw	0
  5840  010BAC  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5841  010BAE  0E01               	movlw	1
  5842  010BB0  6F85               	movwf	efgtoa@sign& (0+255),b
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  5846  010BB2  0060  F25C  F001   	movff	efgtoa@g,___flneg@f1
  5847  010BB8  0060  F260  F002   	movff	efgtoa@g+1,___flneg@f1+1
  5848  010BBE  0060  F264  F003   	movff	efgtoa@g+2,___flneg@f1+2
  5849  010BC4  0060  F268  F004   	movff	efgtoa@g+3,___flneg@f1+3
  5850  010BCA  EC9B  F0A1         	call	___flneg	;wreg free
  5851  010BCE  0060  F004  F097   	movff	?___flneg,efgtoa@g
  5852  010BD4  0060  F008  F098   	movff	?___flneg+1,efgtoa@g+1
  5853  010BDA  0060  F00C  F099   	movff	?___flneg+2,efgtoa@g+2
  5854  010BE0  0060  F010  F09A   	movff	?___flneg+3,efgtoa@g+3
  5855  010BE6                     l5750:
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  5859  010BE6  0E00               	movlw	0
  5860  010BE8  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  5861  010BEA  0E00               	movlw	0
  5862  010BEC  6F9D               	movwf	efgtoa@n& (0+255),b
  5863                           
  5864                           ; BSR set to: 0
  5865                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w = width;
  5866  010BEE  0060  F378  F08A   	movff	_width,efgtoa@w
  5867  010BF4  0060  F37C  F08B   	movff	_width+1,efgtoa@w+1
  5868                           
  5869                           ; BSR set to: 0
  5870                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if (sign || 
      +                          (flags & (1 << 2))) {
  5871  010BFA  5185               	movf	efgtoa@sign& (0+255),w,b
  5872  010BFC  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5873  010BFE  A4D8               	btfss	status,2,c
  5874  010C00  D002               	goto	u7330
  5875                           
  5876                           ; BSR set to: 0
  5877  010C02  A5E2               	btfss	_flags& (0+255),2,b
  5878  010C04  D014               	goto	l5770
  5879  010C06                     u7330:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] 
      +                          = sign ? '-' : '+';
  5883  010C06  5185               	movf	efgtoa@sign& (0+255),w,b
  5884  010C08  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5885  010C0A  A4D8               	btfss	status,2,c
  5886  010C0C  D004               	goto	l5762
  5887                           
  5888                           ; BSR set to: 0
  5889  010C0E  0E00               	movlw	0
  5890  010C10  6F70               	movwf	(_efgtoa$628+1)& (0+255),b
  5891  010C12  0E2B               	movlw	43
  5892  010C14  D003               	goto	L3
  5893  010C16                     l5762:
  5894                           
  5895                           ; BSR set to: 0
  5896  010C16  0E00               	movlw	0
  5897  010C18  6F70               	movwf	(_efgtoa$628+1)& (0+255),b
  5898  010C1A  0E2D               	movlw	45
  5899  010C1C                     L3:
  5900  010C1C  6F6F               	movwf	_efgtoa$628& (0+255),b
  5901                           
  5902                           ; BSR set to: 0
  5903  010C1E  0060  F1BC  F43D   	movff	_efgtoa$628,_dbuf
  5904                           
  5905                           ; BSR set to: 0
  5906                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:         ++n;
  5907  010C24  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  5908  010C26  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  5909                           
  5910                           ; BSR set to: 0
  5911                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:         --w;
  5912  010C28  078A               	decf	efgtoa@w& (0+255),f,b
  5913  010C2A  A0D8               	btfss	status,0,c
  5914  010C2C  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5915  010C2E                     l5770:
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5919  010C2E  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5920  010C34  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5921  010C3A  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5922  010C40  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5923  010C46  EC0B  F09A         	call	___fpclassifyf	;wreg free
  5924  010C4A  0401               	decf	?___fpclassifyf^0,w,c
  5925  010C4C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5926  010C4E  A4D8               	btfss	status,2,c
  5927  010C50  D04F               	goto	l5788
  5928  010C52  0EBF               	movlw	191
  5929  010C54  0100               	movlb	0	; () banked
  5930  010C56  6F66               	movwf	??_efgtoa& (0+255),b
  5931  010C58  0EFF               	movlw	255
  5932  010C5A  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5933  010C5C  5165               	movf	efgtoa@c& (0+255),w,b
  5934  010C5E  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5935  010C60  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5936  010C62  5166               	movf	??_efgtoa& (0+255),w,b
  5937  010C64  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5938  010C66  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5939  010C68  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5940  010C6A  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5941  010C6C  E106               	bnz	u7360
  5942  010C6E  0E1A               	movlw	26
  5943  010C70  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5944  010C72  B0D8               	btfsc	status,0,c
  5945  010C74  D002               	goto	u7360
  5946  010C76  0E01               	movlw	1
  5947  010C78  D001               	goto	u7370
  5948  010C7A                     u7360:
  5949  010C7A  0E00               	movlw	0
  5950  010C7C                     u7370:
  5951  010C7C  6F71               	movwf	_efgtoa$629& (0+255),b
  5952  010C7E  6B72               	clrf	(_efgtoa$629+1)& (0+255),b
  5953                           
  5954                           ; BSR set to: 0
  5955  010C80  5171               	movf	_efgtoa$629& (0+255),w,b
  5956  010C82  1172               	iorwf	(_efgtoa$629+1)& (0+255),w,b
  5957  010C84  B4D8               	btfsc	status,2,c
  5958  010C86  D00D               	goto	l5780
  5959                           
  5960                           ; BSR set to: 0
  5961                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:             strc
      +                          py(&dbuf[n], "INF");
  5962  010C88  0E3D               	movlw	low _dbuf
  5963  010C8A  259D               	addwf	efgtoa@n& (0+255),w,b
  5964  010C8C  6E01               	movwf	strcpy@dest^0,c
  5965  010C8E  0E04               	movlw	high _dbuf
  5966  010C90  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5967  010C92  6E02               	movwf	(strcpy@dest+1)^0,c
  5968  010C94  0EEB               	movlw	low STR_15
  5969  010C96  6E03               	movwf	strcpy@src^0,c
  5970  010C98  0EFF               	movlw	high STR_15
  5971  010C9A  6E04               	movwf	(strcpy@src+1)^0,c
  5972  010C9C  EC05  F0A0         	call	_strcpy	;wreg free
  5973                           
  5974                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:         } else {
  5975  010CA0  D00C               	goto	l5782
  5976  010CA2                     l5780:
  5977                           
  5978                           ; BSR set to: 0
  5979                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:             strc
      +                          py(&dbuf[n], "inf");
  5980  010CA2  0E3D               	movlw	low _dbuf
  5981  010CA4  259D               	addwf	efgtoa@n& (0+255),w,b
  5982  010CA6  6E01               	movwf	strcpy@dest^0,c
  5983  010CA8  0E04               	movlw	high _dbuf
  5984  010CAA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5985  010CAC  6E02               	movwf	(strcpy@dest+1)^0,c
  5986  010CAE  0EF3               	movlw	low STR_16
  5987  010CB0  6E03               	movwf	strcpy@src^0,c
  5988  010CB2  0EFF               	movlw	high STR_16
  5989  010CB4  6E04               	movwf	(strcpy@src+1)^0,c
  5990  010CB6  EC05  F0A0         	call	_strcpy	;wreg free
  5991  010CBA                     l5782:
  5992                           
  5993                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:         w -= ((s
      +                          izeof("inf")/sizeof("inf"[0]))-1);
  5994  010CBA  0100               	movlb	0	; () banked
  5995  010CBC  0EFD               	movlw	253
  5996  010CBE  278A               	addwf	efgtoa@w& (0+255),f,b
  5997  010CC0  0EFF               	movlw	255
  5998  010CC2  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5999  010CC4                     l5784:
  6000                           
  6001                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:         return p
      +                          ad(fp, &dbuf[0], w);
  6002  010CC4  0060  F180  F00F   	movff	efgtoa@fp,pad@fp
  6003  010CCA  0E3D               	movlw	low _dbuf
  6004  010CCC  6E10               	movwf	pad@buf^0,c
  6005  010CCE  0E04               	movlw	high _dbuf
  6006  010CD0  6E11               	movwf	(pad@buf+1)^0,c
  6007  010CD2  0060  F228  F012   	movff	efgtoa@w,pad@p
  6008  010CD8  0060  F22C  F013   	movff	efgtoa@w+1,pad@p+1
  6009  010CDE  ECE0  F09C         	call	_pad	;wreg free
  6010  010CE2  0060  F03C  F060   	movff	?_pad,?_efgtoa
  6011  010CE8  0060  F040  F061   	movff	?_pad+1,?_efgtoa+1
  6012  010CEE  0012               	return	
  6013  010CF0                     l5788:
  6014                           
  6015                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6016  010CF0  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  6017  010CF6  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  6018  010CFC  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  6019  010D02  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  6020  010D08  EC0B  F09A         	call	___fpclassifyf	;wreg free
  6021  010D0C  5001               	movf	?___fpclassifyf^0,w,c
  6022  010D0E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6023  010D10  A4D8               	btfss	status,2,c
  6024  010D12  D035               	goto	l5806
  6025  010D14  0EBF               	movlw	191
  6026  010D16  0100               	movlb	0	; () banked
  6027  010D18  6F66               	movwf	??_efgtoa& (0+255),b
  6028  010D1A  0EFF               	movlw	255
  6029  010D1C  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6030  010D1E  5165               	movf	efgtoa@c& (0+255),w,b
  6031  010D20  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  6032  010D22  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  6033  010D24  5166               	movf	??_efgtoa& (0+255),w,b
  6034  010D26  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6035  010D28  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6036  010D2A  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6037  010D2C  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6038  010D2E  E106               	bnz	u7400
  6039  010D30  0E1A               	movlw	26
  6040  010D32  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6041  010D34  B0D8               	btfsc	status,0,c
  6042  010D36  D002               	goto	u7400
  6043  010D38  0E01               	movlw	1
  6044  010D3A  D001               	goto	u7410
  6045  010D3C                     u7400:
  6046  010D3C  0E00               	movlw	0
  6047  010D3E                     u7410:
  6048  010D3E  6F73               	movwf	_efgtoa$634& (0+255),b
  6049  010D40  6B74               	clrf	(_efgtoa$634+1)& (0+255),b
  6050                           
  6051                           ; BSR set to: 0
  6052  010D42  5173               	movf	_efgtoa$634& (0+255),w,b
  6053  010D44  1174               	iorwf	(_efgtoa$634+1)& (0+255),w,b
  6054  010D46  B4D8               	btfsc	status,2,c
  6055  010D48  D00D               	goto	l5798
  6056                           
  6057                           ; BSR set to: 0
  6058                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:             strc
      +                          py(&dbuf[n], "NAN");
  6059  010D4A  0E3D               	movlw	low _dbuf
  6060  010D4C  259D               	addwf	efgtoa@n& (0+255),w,b
  6061  010D4E  6E01               	movwf	strcpy@dest^0,c
  6062  010D50  0E04               	movlw	high _dbuf
  6063  010D52  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6064  010D54  6E02               	movwf	(strcpy@dest+1)^0,c
  6065  010D56  0EEF               	movlw	low STR_19
  6066  010D58  6E03               	movwf	strcpy@src^0,c
  6067  010D5A  0EFF               	movlw	high STR_19
  6068  010D5C  6E04               	movwf	(strcpy@src+1)^0,c
  6069  010D5E  EC05  F0A0         	call	_strcpy	;wreg free
  6070                           
  6071                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:         } else {
  6072  010D62  D7AB               	goto	l5782
  6073  010D64                     l5798:
  6074                           
  6075                           ; BSR set to: 0
  6076                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:             strc
      +                          py(&dbuf[n], "nan");
  6077  010D64  0E3D               	movlw	low _dbuf
  6078  010D66  259D               	addwf	efgtoa@n& (0+255),w,b
  6079  010D68  6E01               	movwf	strcpy@dest^0,c
  6080  010D6A  0E04               	movlw	high _dbuf
  6081  010D6C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6082  010D6E  6E02               	movwf	(strcpy@dest+1)^0,c
  6083  010D70  0EF7               	movlw	low STR_20
  6084  010D72  6E03               	movwf	strcpy@src^0,c
  6085  010D74  0EFF               	movlw	high STR_20
  6086  010D76  6E04               	movwf	(strcpy@src+1)^0,c
  6087  010D78  EC05  F0A0         	call	_strcpy	;wreg free
  6088  010D7C  D79E               	goto	l5782
  6089  010D7E                     l5806:
  6090                           
  6091                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  6092  010D7E  0E00               	movlw	0
  6093  010D80  0100               	movlb	0	; () banked
  6094  010D82  6F9F               	movwf	efgtoa@u& (0+255),b
  6095  010D84  0E00               	movlw	0
  6096  010D86  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6097  010D88  0E80               	movlw	128
  6098  010D8A  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6099  010D8C  0E3F               	movlw	63
  6100  010D8E  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6101                           
  6102                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  6103  010D90  0E00               	movlw	0
  6104  010D92  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  6105  010D94  0E00               	movlw	0
  6106  010D96  6F9B               	movwf	efgtoa@e& (0+255),b
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0
      +                          .0)) {
  6110  010D98  0060  F25C  F001   	movff	efgtoa@g,___fleq@ff1
  6111  010D9E  0060  F260  F002   	movff	efgtoa@g+1,___fleq@ff1+1
  6112  010DA4  0060  F264  F003   	movff	efgtoa@g+2,___fleq@ff1+2
  6113  010DAA  0060  F268  F004   	movff	efgtoa@g+3,___fleq@ff1+3
  6114  010DB0  0E00               	movlw	0
  6115  010DB2  6E05               	movwf	___fleq@ff2^0,c
  6116  010DB4  0E00               	movlw	0
  6117  010DB6  6E06               	movwf	(___fleq@ff2+1)^0,c
  6118  010DB8  0E00               	movlw	0
  6119  010DBA  6E07               	movwf	(___fleq@ff2+2)^0,c
  6120  010DBC  0E00               	movlw	0
  6121  010DBE  6E08               	movwf	(___fleq@ff2+3)^0,c
  6122  010DC0  EC14  F09E         	call	___fleq	;wreg free
  6123  010DC4  A0D8               	btfss	status,0,c
  6124  010DC6  D026               	goto	l5816
  6125  010DC8  D09A               	goto	u7450
  6126  010DCA                     l5812:
  6127                           
  6128                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:             u = 
      +                          u*10.0;
  6129  010DCA  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6130  010DD0  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6131  010DD6  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6132  010DDC  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6133  010DE2  0E00               	movlw	0
  6134  010DE4  6E3C               	movwf	___flmul@a^0,c
  6135  010DE6  0E00               	movlw	0
  6136  010DE8  6E3D               	movwf	(___flmul@a+1)^0,c
  6137  010DEA  0E20               	movlw	32
  6138  010DEC  6E3E               	movwf	(___flmul@a+2)^0,c
  6139  010DEE  0E41               	movlw	65
  6140  010DF0  6E3F               	movwf	(___flmul@a+3)^0,c
  6141  010DF2  ECFA  F090         	call	___flmul	;wreg free
  6142  010DF6  0060  F0E0  F09F   	movff	?___flmul,efgtoa@u
  6143  010DFC  0060  F0E4  F0A0   	movff	?___flmul+1,efgtoa@u+1
  6144  010E02  0060  F0E8  F0A1   	movff	?___flmul+2,efgtoa@u+2
  6145  010E08  0060  F0EC  F0A2   	movff	?___flmul+3,efgtoa@u+3
  6146                           
  6147                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:             ++e;
  6148  010E0E  0100               	movlb	0	; () banked
  6149  010E10  4B9B               	infsnz	efgtoa@e& (0+255),f,b
  6150  010E12  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  6151  010E14                     l5816:
  6152                           
  6153                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:         while (!
      +                          (g < (u*10.0))) {
  6154  010E14  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  6155  010E1A  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  6156  010E20  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  6157  010E26  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  6158  010E2C  0E00               	movlw	0
  6159  010E2E  6E3C               	movwf	___flmul@a^0,c
  6160  010E30  0E00               	movlw	0
  6161  010E32  6E3D               	movwf	(___flmul@a+1)^0,c
  6162  010E34  0E20               	movlw	32
  6163  010E36  6E3E               	movwf	(___flmul@a+2)^0,c
  6164  010E38  0E41               	movlw	65
  6165  010E3A  6E3F               	movwf	(___flmul@a+3)^0,c
  6166  010E3C  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6167  010E42  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6168  010E48  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6169  010E4E  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6170  010E54  ECFA  F090         	call	___flmul	;wreg free
  6171  010E58  0060  F0E0  F055   	movff	?___flmul,___flge@ff2
  6172  010E5E  0060  F0E4  F056   	movff	?___flmul+1,___flge@ff2+1
  6173  010E64  0060  F0E8  F057   	movff	?___flmul+2,___flge@ff2+2
  6174  010E6A  0060  F0EC  F058   	movff	?___flmul+3,___flge@ff2+3
  6175  010E70  EC5F  F09B         	call	___flge	;wreg free
  6176  010E74  A0D8               	btfss	status,0,c
  6177  010E76  D027               	goto	l5822
  6178  010E78  D7A8               	goto	l5812
  6179  010E7A                     l5818:
  6180                           
  6181                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:             u = 
      +                          u/10.0;
  6182  010E7A  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6183  010E80  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6184  010E86  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6185  010E8C  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6186  010E92  0E00               	movlw	0
  6187  010E94  6E23               	movwf	___fldiv@a^0,c
  6188  010E96  0E00               	movlw	0
  6189  010E98  6E24               	movwf	(___fldiv@a+1)^0,c
  6190  010E9A  0E20               	movlw	32
  6191  010E9C  6E25               	movwf	(___fldiv@a+2)^0,c
  6192  010E9E  0E41               	movlw	65
  6193  010EA0  6E26               	movwf	(___fldiv@a+3)^0,c
  6194  010EA2  EC60  F094         	call	___fldiv	;wreg free
  6195  010EA6  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6196  010EAC  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6197  010EB2  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6198  010EB8  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6199                           
  6200                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:             --e;
  6201  010EBE  0100               	movlb	0	; () banked
  6202  010EC0  079B               	decf	efgtoa@e& (0+255),f,b
  6203  010EC2  A0D8               	btfss	status,0,c
  6204  010EC4  079C               	decf	(efgtoa@e+1)& (0+255),f,b
  6205  010EC6                     l5822:
  6206                           
  6207                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:         while (g
      +                           < u) {
  6208  010EC6  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  6209  010ECC  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  6210  010ED2  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  6211  010ED8  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  6212  010EDE  0060  F27C  F055   	movff	efgtoa@u,___flge@ff2
  6213  010EE4  0060  F280  F056   	movff	efgtoa@u+1,___flge@ff2+1
  6214  010EEA  0060  F284  F057   	movff	efgtoa@u+2,___flge@ff2+2
  6215  010EF0  0060  F288  F058   	movff	efgtoa@u+3,___flge@ff2+3
  6216  010EF6  EC5F  F09B         	call	___flge	;wreg free
  6217  010EFA  A0D8               	btfss	status,0,c
  6218  010EFC  D7BE               	goto	l5818
  6219  010EFE                     u7450:
  6220                           
  6221                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mode = tolow
      +                          er((int)c);
  6222  010EFE  0060  F194  F007   	movff	efgtoa@c,tolower@c
  6223  010F04  6A08               	clrf	(tolower@c+1)^0,c
  6224  010F06  ECC5  F0A0         	call	_tolower	;wreg free
  6225  010F0A  5007               	movf	?_tolower^0,w,c
  6226  010F0C  0100               	movlb	0	; () banked
  6227  010F0E  6F8C               	movwf	efgtoa@mode& (0+255),b
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nmode = mode
      +                          ;
  6231  010F10  0060  F230  F089   	movff	efgtoa@mode,efgtoa@nmode
  6232                           
  6233                           ; BSR set to: 0
  6234                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if (mode == 
      +                          'g') {
  6235  010F16  0E67               	movlw	103
  6236  010F18  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6237  010F1A  A4D8               	btfss	status,2,c
  6238  010F1C  D01B               	goto	l5838
  6239                           
  6240                           ; BSR set to: 0
  6241                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0)
      +                           {
  6242  010F1E  51E0               	movf	_prec& (0+255),w,b
  6243  010F20  11E1               	iorwf	(_prec+1)& (0+255),w,b
  6244  010F22  A4D8               	btfss	status,2,c
  6245  010F24  D004               	goto	l5834
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  6249  010F26  0E00               	movlw	0
  6250  010F28  6FE1               	movwf	(_prec+1)& (0+255),b
  6251  010F2A  0E01               	movlw	1
  6252  010F2C  6FE0               	movwf	_prec& (0+255),b
  6253  010F2E                     l5834:
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:         p = (0 <
      +                           prec) ? prec : 6;
  6257  010F2E  BFE1               	btfsc	(_prec+1)& (0+255),7,b
  6258  010F30  D005               	goto	u7480
  6259  010F32  51E1               	movf	(_prec+1)& (0+255),w,b
  6260  010F34  E108               	bnz	l629
  6261  010F36  05E0               	decf	_prec& (0+255),w,b
  6262  010F38  B0D8               	btfsc	status,0,c
  6263  010F3A  D005               	goto	l629
  6264  010F3C                     u7480:
  6265                           
  6266                           ; BSR set to: 0
  6267  010F3C  0E00               	movlw	0
  6268  010F3E  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  6269  010F40  0E06               	movlw	6
  6270  010F42  6F87               	movwf	efgtoa@p& (0+255),b
  6271  010F44  D00A               	goto	l5844
  6272  010F46                     l629:
  6273                           
  6274                           ; BSR set to: 0
  6275  010F46  0060  F380  F087   	movff	_prec,efgtoa@p
  6276  010F4C  0060  F384  F088   	movff	_prec+1,efgtoa@p+1
  6277  010F52  D003               	goto	l5844
  6278  010F54                     l5838:
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:         p = (pre
      +                          c < 0) ? 6 : prec;
  6282  010F54  AFE1               	btfss	(_prec+1)& (0+255),7,b
  6283  010F56  D7F7               	goto	l629
  6284  010F58  D7F1               	goto	u7480
  6285  010F5A                     l5844:
  6286                           
  6287                           ; BSR set to: 0
  6288                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if (mode == 
      +                          'g') {
  6289  010F5A  0E67               	movlw	103
  6290  010F5C  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6291  010F5E  A4D8               	btfss	status,2,c
  6292  010F60  D024               	goto	l5854
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:         if (!(e 
      +                          < -4) && !((p - 1) < e)) {
  6296  010F62  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6297  010F64  D006               	goto	u7510
  6298  010F66  0EFC               	movlw	252
  6299  010F68  5D9B               	subwf	efgtoa@e& (0+255),w,b
  6300  010F6A  0EFF               	movlw	255
  6301  010F6C  599C               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6302  010F6E  A0D8               	btfss	status,0,c
  6303  010F70  D01A               	goto	l5852
  6304  010F72                     u7510:
  6305                           
  6306                           ; BSR set to: 0
  6307  010F72  0EFF               	movlw	255
  6308  010F74  6F66               	movwf	??_efgtoa& (0+255),b
  6309  010F76  0EFF               	movlw	255
  6310  010F78  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6311  010F7A  0060  F21C  F068   	movff	efgtoa@p,??_efgtoa+2
  6312  010F80  0060  F220  F069   	movff	efgtoa@p+1,??_efgtoa+3
  6313  010F86  5166               	movf	??_efgtoa& (0+255),w,b
  6314  010F88  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6315  010F8A  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6316  010F8C  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6317  010F8E  519B               	movf	efgtoa@e& (0+255),w,b
  6318  010F90  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6319  010F92  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6320  010F94  0A80               	xorlw	128
  6321  010F96  6F6A               	movwf	(??_efgtoa+4)& (0+255),b
  6322  010F98  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6323  010F9A  0A80               	xorlw	128
  6324  010F9C  596A               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6325  010F9E  A0D8               	btfss	status,0,c
  6326  010FA0  D002               	goto	l5852
  6327                           
  6328                           ; BSR set to: 0
  6329                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:             nmod
      +                          e = 'f';
  6330  010FA2  0E66               	movlw	102
  6331  010FA4  D001               	goto	L4
  6332  010FA6                     l5852:
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:             nmod
      +                          e = 'e';
  6336  010FA6  0E65               	movlw	101
  6337  010FA8                     L4:
  6338  010FA8  6F89               	movwf	efgtoa@nmode& (0+255),b
  6339  010FAA                     l5854:
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m = p;
  6343  010FAA  0060  F21C  F07F   	movff	efgtoa@p,efgtoa@m
  6344  010FB0  0060  F220  F080   	movff	efgtoa@p+1,efgtoa@m+1
  6345                           
  6346                           ; BSR set to: 0
  6347                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if (!(mode =
      +                          = 'g') || ((nmode == 'f') && (e < 0))) {
  6348  010FB6  0E67               	movlw	103
  6349  010FB8  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6350  010FBA  A4D8               	btfss	status,2,c
  6351  010FBC  D005               	goto	u7550
  6352                           
  6353                           ; BSR set to: 0
  6354  010FBE  0E66               	movlw	102
  6355  010FC0  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6356  010FC2  B4D8               	btfsc	status,2,c
  6357                           
  6358                           ; BSR set to: 0
  6359  010FC4  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6360  010FC6  D002               	goto	l5864
  6361  010FC8                     u7550:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:         ++m;
  6365  010FC8  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  6366  010FCA  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  6367  010FCC                     l5864:
  6368                           
  6369                           ; BSR set to: 0
  6370                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if (nmode ==
      +                           'f') {
  6371  010FCC  0E66               	movlw	102
  6372  010FCE  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6373  010FD0  A4D8               	btfss	status,2,c
  6374  010FD2  D016               	goto	l5874
  6375                           
  6376                           ; BSR set to: 0
  6377                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:         if (e < 
      +                          0) {
  6378  010FD4  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6379  010FD6  D00C               	goto	l5870
  6380                           
  6381                           ; BSR set to: 0
  6382                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:             u = 
      +                          1.0;
  6383  010FD8  0E00               	movlw	0
  6384  010FDA  6F9F               	movwf	efgtoa@u& (0+255),b
  6385  010FDC  0E00               	movlw	0
  6386  010FDE  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6387  010FE0  0E80               	movlw	128
  6388  010FE2  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6389  010FE4  0E3F               	movlw	63
  6390  010FE6  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6391                           
  6392                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:             e = 
      +                          0;
  6393  010FE8  0E00               	movlw	0
  6394  010FEA  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  6395  010FEC  0E00               	movlw	0
  6396  010FEE  6F9B               	movwf	efgtoa@e& (0+255),b
  6397  010FF0                     l5870:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:         if (!(mo
      +                          de == 'g')) {
  6401  010FF0  0E67               	movlw	103
  6402  010FF2  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6403  010FF4  B4D8               	btfsc	status,2,c
  6404  010FF6  D004               	goto	l5874
  6405                           
  6406                           ; BSR set to: 0
  6407                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:             m +=
      +                           e;
  6408  010FF8  519B               	movf	efgtoa@e& (0+255),w,b
  6409  010FFA  277F               	addwf	efgtoa@m& (0+255),f,b
  6410  010FFC  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6411  010FFE  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6412  011000                     l5874:
  6413                           
  6414                           ; BSR set to: 0
  6415                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  6416  011000  0E00               	movlw	0
  6417  011002  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6418  011004  0E00               	movlw	0
  6419  011006  6F95               	movwf	efgtoa@i& (0+255),b
  6420                           
  6421                           ; BSR set to: 0
  6422                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h = g;
  6423  011008  0060  F25C  F08D   	movff	efgtoa@g,efgtoa@h
  6424  01100E  0060  F260  F08E   	movff	efgtoa@g+1,efgtoa@h+1
  6425  011014  0060  F264  F08F   	movff	efgtoa@g+2,efgtoa@h+2
  6426  01101A  0060  F268  F090   	movff	efgtoa@g+3,efgtoa@h+3
  6427                           
  6428                           ; BSR set to: 0
  6429                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  6430  011020  0060  F27C  F06B   	movff	efgtoa@u,efgtoa@ou
  6431  011026  0060  F280  F06C   	movff	efgtoa@u+1,efgtoa@ou+1
  6432  01102C  0060  F284  F06D   	movff	efgtoa@u+2,efgtoa@ou+2
  6433  011032  0060  F288  F06E   	movff	efgtoa@u+3,efgtoa@ou+3
  6434                           
  6435                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6436  011038  D0AD               	goto	l5888
  6437  01103A                     l5880:
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:         l = floo
      +                          rf(h/u);
  6441  01103A  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6442  011040  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6443  011046  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6444  01104C  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6445  011052  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6446  011058  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6447  01105E  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6448  011064  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6449  01106A  EC60  F094         	call	___fldiv	;wreg free
  6450  01106E  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6451  011074  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6452  01107A  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6453  011080  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6454  011086  ECB6  F095         	call	_floorf	;wreg free
  6455  01108A  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6456  011090  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6457  011096  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6458  01109C  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6459                           
  6460                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:         d = (int
      +                          )l;
  6461  0110A2  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6462  0110A8  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6463  0110AE  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6464  0110B4  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6465  0110BA  ECC7  F09B         	call	___fltol	;wreg free
  6466  0110BE  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6467  0110C4  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6468                           
  6469                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:         h -= l*u
      +                          ;
  6470  0110CA  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6471  0110D0  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6472  0110D6  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6473  0110DC  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6474  0110E2  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6475  0110E8  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6476  0110EE  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6477  0110F4  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6478  0110FA  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6479  011100  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6480  011106  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6481  01110C  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6482  011112  ECFA  F090         	call	___flmul	;wreg free
  6483  011116  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6484  01111C  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6485  011122  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6486  011128  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6487  01112E  EC39  F0A0         	call	___flsub	;wreg free
  6488  011132  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6489  011138  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6490  01113E  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6491  011144  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6492                           
  6493                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:         u = u/10
      +                          .0;
  6494  01114A  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6495  011150  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6496  011156  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6497  01115C  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6498  011162  0E00               	movlw	0
  6499  011164  6E23               	movwf	___fldiv@a^0,c
  6500  011166  0E00               	movlw	0
  6501  011168  6E24               	movwf	(___fldiv@a+1)^0,c
  6502  01116A  0E20               	movlw	32
  6503  01116C  6E25               	movwf	(___fldiv@a+2)^0,c
  6504  01116E  0E41               	movlw	65
  6505  011170  6E26               	movwf	(___fldiv@a+3)^0,c
  6506  011172  EC60  F094         	call	___fldiv	;wreg free
  6507  011176  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6508  01117C  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6509  011182  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6510  011188  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6511                           
  6512                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:         ++i;
  6513  01118E  0100               	movlb	0	; () banked
  6514  011190  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6515  011192  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6516  011194                     l5888:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6520  011194  517F               	movf	efgtoa@m& (0+255),w,b
  6521  011196  5D95               	subwf	efgtoa@i& (0+255),w,b
  6522  011198  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6523  01119A  0A80               	xorlw	128
  6524  01119C  6F66               	movwf	??_efgtoa& (0+255),b
  6525  01119E  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6526  0111A0  0A80               	xorlw	128
  6527  0111A2  5966               	subwfb	??_efgtoa& (0+255),w,b
  6528  0111A4  A0D8               	btfss	status,0,c
  6529  0111A6  D749               	goto	l5880
  6530                           
  6531                           ; BSR set to: 0
  6532                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  6533  0111A8  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6534  0111AE  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6535  0111B4  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6536  0111BA  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6537  0111C0  0E00               	movlw	0
  6538  0111C2  6E3C               	movwf	___flmul@a^0,c
  6539  0111C4  0E00               	movlw	0
  6540  0111C6  6E3D               	movwf	(___flmul@a+1)^0,c
  6541  0111C8  0EA0               	movlw	160
  6542  0111CA  6E3E               	movwf	(___flmul@a+2)^0,c
  6543  0111CC  0E40               	movlw	64
  6544  0111CE  6E3F               	movwf	(___flmul@a+3)^0,c
  6545  0111D0  ECFA  F090         	call	___flmul	;wreg free
  6546  0111D4  0060  F0E0  F091   	movff	?___flmul,efgtoa@l
  6547  0111DA  0060  F0E4  F092   	movff	?___flmul+1,efgtoa@l+1
  6548  0111E0  0060  F0E8  F093   	movff	?___flmul+2,efgtoa@l+2
  6549  0111E6  0060  F0EC  F094   	movff	?___flmul+3,efgtoa@l+3
  6550                           
  6551                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  6552  0111EC  0060  F234  F051   	movff	efgtoa@h,___flge@ff1
  6553  0111F2  0060  F238  F052   	movff	efgtoa@h+1,___flge@ff1+1
  6554  0111F8  0060  F23C  F053   	movff	efgtoa@h+2,___flge@ff1+2
  6555  0111FE  0060  F240  F054   	movff	efgtoa@h+3,___flge@ff1+3
  6556  011204  0060  F244  F055   	movff	efgtoa@l,___flge@ff2
  6557  01120A  0060  F248  F056   	movff	efgtoa@l+1,___flge@ff2+1
  6558  011210  0060  F24C  F057   	movff	efgtoa@l+2,___flge@ff2+2
  6559  011216  0060  F250  F058   	movff	efgtoa@l+3,___flge@ff2+3
  6560  01121C  EC5F  F09B         	call	___flge	;wreg free
  6561  011220  B0D8               	btfsc	status,0,c
  6562  011222  D003               	goto	l5896
  6563                           
  6564                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  6565  011224  0E00               	movlw	0
  6566  011226  0100               	movlb	0	; () banked
  6567  011228  D020               	goto	L5
  6568  01122A                     l5896:
  6569                           
  6570                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:         if ((h =
      +                          = l) && !(d % 2)) {
  6571  01122A  0060  F234  F001   	movff	efgtoa@h,___fleq@ff1
  6572  011230  0060  F238  F002   	movff	efgtoa@h+1,___fleq@ff1+1
  6573  011236  0060  F23C  F003   	movff	efgtoa@h+2,___fleq@ff1+2
  6574  01123C  0060  F240  F004   	movff	efgtoa@h+3,___fleq@ff1+3
  6575  011242  0060  F244  F005   	movff	efgtoa@l,___fleq@ff2
  6576  011248  0060  F248  F006   	movff	efgtoa@l+1,___fleq@ff2+1
  6577  01124E  0060  F24C  F007   	movff	efgtoa@l+2,___fleq@ff2+2
  6578  011254  0060  F250  F008   	movff	efgtoa@l+3,___fleq@ff2+3
  6579  01125A  EC14  F09E         	call	___fleq	;wreg free
  6580  01125E  A0D8               	btfss	status,0,c
  6581  011260  D00B               	goto	l5902
  6582  011262  0100               	movlb	0	; () banked
  6583  011264  B183               	btfsc	efgtoa@d& (0+255),0,b
  6584  011266  D008               	goto	l5902
  6585                           
  6586                           ; BSR set to: 0
  6587                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:             l = 
      +                          0.0;
  6588  011268  0E00               	movlw	0
  6589  01126A                     L5:
  6590  01126A  6F91               	movwf	efgtoa@l& (0+255),b
  6591  01126C  0E00               	movlw	0
  6592  01126E  6F92               	movwf	(efgtoa@l+1)& (0+255),b
  6593  011270  0E00               	movlw	0
  6594  011272  6F93               	movwf	(efgtoa@l+2)& (0+255),b
  6595  011274  0E00               	movlw	0
  6596  011276  6F94               	movwf	(efgtoa@l+3)& (0+255),b
  6597  011278                     l5902:
  6598                           
  6599                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  6600  011278  0060  F25C  F00F   	movff	efgtoa@g,___fladd@b
  6601  01127E  0060  F260  F010   	movff	efgtoa@g+1,___fladd@b+1
  6602  011284  0060  F264  F011   	movff	efgtoa@g+2,___fladd@b+2
  6603  01128A  0060  F268  F012   	movff	efgtoa@g+3,___fladd@b+3
  6604  011290  0060  F244  F013   	movff	efgtoa@l,___fladd@a
  6605  011296  0060  F248  F014   	movff	efgtoa@l+1,___fladd@a+1
  6606  01129C  0060  F24C  F015   	movff	efgtoa@l+2,___fladd@a+2
  6607  0112A2  0060  F250  F016   	movff	efgtoa@l+3,___fladd@a+3
  6608  0112A8  ECBC  F092         	call	___fladd	;wreg free
  6609  0112AC  0060  F03C  F08D   	movff	?___fladd,efgtoa@h
  6610  0112B2  0060  F040  F08E   	movff	?___fladd+1,efgtoa@h+1
  6611  0112B8  0060  F044  F08F   	movff	?___fladd+2,efgtoa@h+2
  6612  0112BE  0060  F048  F090   	movff	?___fladd+3,efgtoa@h+3
  6613                           
  6614                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  6615  0112C4  0060  F1AC  F09F   	movff	efgtoa@ou,efgtoa@u
  6616  0112CA  0060  F1B0  F0A0   	movff	efgtoa@ou+1,efgtoa@u+1
  6617  0112D0  0060  F1B4  F0A1   	movff	efgtoa@ou+2,efgtoa@u+2
  6618  0112D6  0060  F1B8  F0A2   	movff	efgtoa@ou+3,efgtoa@u+3
  6619                           
  6620                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode 
      +                          == 'e') ? 0 : e;
  6621  0112DC  0E65               	movlw	101
  6622  0112DE  0100               	movlb	0	; () banked
  6623  0112E0  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6624  0112E2  B4D8               	btfsc	status,2,c
  6625  0112E4  D007               	goto	l5910
  6626                           
  6627                           ; BSR set to: 0
  6628  0112E6  0060  F26C  F081   	movff	efgtoa@e,efgtoa@ne
  6629  0112EC  0060  F270  F082   	movff	efgtoa@e+1,efgtoa@ne+1
  6630  0112F2  D004               	goto	l655
  6631  0112F4                     l5910:
  6632                           
  6633                           ; BSR set to: 0
  6634  0112F4  0E00               	movlw	0
  6635  0112F6  6F82               	movwf	(efgtoa@ne+1)& (0+255),b
  6636  0112F8  0E00               	movlw	0
  6637  0112FA  6F81               	movwf	efgtoa@ne& (0+255),b
  6638  0112FC                     l655:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  6642  0112FC  0E00               	movlw	0
  6643  0112FE  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6644  011300  0E00               	movlw	0
  6645  011302  6F7D               	movwf	efgtoa@pp& (0+255),b
  6646                           
  6647                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  6648  011304  0E00               	movlw	0
  6649  011306  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  6650  011308  0E00               	movlw	0
  6651  01130A  6F7B               	movwf	efgtoa@t& (0+255),b
  6652                           
  6653                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  6654  01130C  0E00               	movlw	0
  6655  01130E  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6656  011310  0E00               	movlw	0
  6657  011312  6F95               	movwf	efgtoa@i& (0+255),b
  6658                           
  6659                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6660  011314  D0F8               	goto	l5960
  6661  011316                     l5912:
  6662                           
  6663                           ; BSR set to: 0
  6664                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:         l = floo
      +                          rf(h/u);
  6665  011316  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6666  01131C  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6667  011322  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6668  011328  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6669  01132E  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6670  011334  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6671  01133A  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6672  011340  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6673  011346  EC60  F094         	call	___fldiv	;wreg free
  6674  01134A  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6675  011350  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6676  011356  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6677  01135C  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6678  011362  ECB6  F095         	call	_floorf	;wreg free
  6679  011366  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6680  01136C  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6681  011372  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6682  011378  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6683                           
  6684                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:         d = (int
      +                          )l;
  6685  01137E  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6686  011384  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6687  01138A  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6688  011390  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6689  011396  ECC7  F09B         	call	___fltol	;wreg free
  6690  01139A  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6691  0113A0  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6692                           
  6693                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:         if (!(fl
      +                          ags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6694  0113A6  0100               	movlb	0	; () banked
  6695  0113A8  B9E2               	btfsc	_flags& (0+255),4,b
  6696  0113AA  D00C               	goto	l5924
  6697                           
  6698                           ; BSR set to: 0
  6699  0113AC  5183               	movf	efgtoa@d& (0+255),w,b
  6700  0113AE  1184               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6701  0113B0  A4D8               	btfss	status,2,c
  6702  0113B2  D008               	goto	l5924
  6703                           
  6704                           ; BSR set to: 0
  6705  0113B4  0E67               	movlw	103
  6706  0113B6  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6707  0113B8  B4D8               	btfsc	status,2,c
  6708                           
  6709                           ; BSR set to: 0
  6710  0113BA  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6711  0113BC  D003               	goto	l5924
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:             ++t;
  6715  0113BE  4B7B               	infsnz	efgtoa@t& (0+255),f,b
  6716  0113C0  2B7C               	incf	(efgtoa@t+1)& (0+255),f,b
  6717                           
  6718                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:         } else {
  6719  0113C2  D039               	goto	l5952
  6720  0113C4                     l5924:
  6721                           
  6722                           ; BSR set to: 0
  6723                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:             if (
      +                          !pp && (ne < 0)) {
  6724  0113C4  517D               	movf	efgtoa@pp& (0+255),w,b
  6725  0113C6  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6726  0113C8  B4D8               	btfsc	status,2,c
  6727                           
  6728                           ; BSR set to: 0
  6729  0113CA  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6730  0113CC  D022               	goto	l5944
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:                 
      +                          dbuf[n++] = '.';
  6734  0113CE  0E3D               	movlw	low _dbuf
  6735  0113D0  259D               	addwf	efgtoa@n& (0+255),w,b
  6736  0113D2  6ED9               	movwf	fsr2l,c
  6737  0113D4  0E04               	movlw	high _dbuf
  6738  0113D6  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6739  0113D8  6EDA               	movwf	fsr2h,c
  6740  0113DA  0E2E               	movlw	46
  6741  0113DC  6EDF               	movwf	indf2,c
  6742                           
  6743                           ; BSR set to: 0
  6744  0113DE  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6745  0113E0  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6746                           
  6747                           ; BSR set to: 0
  6748                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:                 
      +                          --w;
  6749  0113E2  078A               	decf	efgtoa@w& (0+255),f,b
  6750  0113E4  A0D8               	btfss	status,0,c
  6751  0113E6  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6752                           
  6753                           ; BSR set to: 0
  6754                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:                 
      +                          pp = 1;
  6755  0113E8  0E00               	movlw	0
  6756  0113EA  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6757  0113EC  0E01               	movlw	1
  6758  0113EE  6F7D               	movwf	efgtoa@pp& (0+255),b
  6759  0113F0  D010               	goto	l5944
  6760  0113F2                     l5936:
  6761                           
  6762                           ; BSR set to: 0
  6763                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:                 
      +                          dbuf[n++] = '0';
  6764  0113F2  0E3D               	movlw	low _dbuf
  6765  0113F4  259D               	addwf	efgtoa@n& (0+255),w,b
  6766  0113F6  6ED9               	movwf	fsr2l,c
  6767  0113F8  0E04               	movlw	high _dbuf
  6768  0113FA  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6769  0113FC  6EDA               	movwf	fsr2h,c
  6770  0113FE  0E30               	movlw	48
  6771  011400  6EDF               	movwf	indf2,c
  6772                           
  6773                           ; BSR set to: 0
  6774  011402  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6775  011404  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6776                           
  6777                           ; BSR set to: 0
  6778                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:                 
      +                          --w;
  6779  011406  078A               	decf	efgtoa@w& (0+255),f,b
  6780  011408  A0D8               	btfss	status,0,c
  6781  01140A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6782                           
  6783                           ; BSR set to: 0
  6784                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:                 
      +                          --t;
  6785  01140C  077B               	decf	efgtoa@t& (0+255),f,b
  6786  01140E  A0D8               	btfss	status,0,c
  6787  011410  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  6788  011412                     l5944:
  6789                           
  6790                           ; BSR set to: 0
  6791                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:             whil
      +                          e (t) {
  6792  011412  517B               	movf	efgtoa@t& (0+255),w,b
  6793  011414  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6794  011416  A4D8               	btfss	status,2,c
  6795  011418  D7EC               	goto	l5936
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:             dbuf
      +                          [n++] = '0' + d;
  6799  01141A  0E3D               	movlw	low _dbuf
  6800  01141C  259D               	addwf	efgtoa@n& (0+255),w,b
  6801  01141E  6ED9               	movwf	fsr2l,c
  6802  011420  0E04               	movlw	high _dbuf
  6803  011422  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6804  011424  6EDA               	movwf	fsr2h,c
  6805  011426  5183               	movf	efgtoa@d& (0+255),w,b
  6806  011428  0F30               	addlw	48
  6807  01142A  6EDF               	movwf	indf2,c
  6808                           
  6809                           ; BSR set to: 0
  6810  01142C  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6811  01142E  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6812                           
  6813                           ; BSR set to: 0
  6814                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:             --w;
  6815  011430  078A               	decf	efgtoa@w& (0+255),f,b
  6816  011432  A0D8               	btfss	status,0,c
  6817  011434  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6818  011436                     l5952:
  6819                           
  6820                           ; BSR set to: 0
  6821                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:         h -= l*u
      +                          ;
  6822  011436  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6823  01143C  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6824  011442  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6825  011448  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6826  01144E  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6827  011454  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6828  01145A  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6829  011460  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6830  011466  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6831  01146C  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6832  011472  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6833  011478  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6834  01147E  ECFA  F090         	call	___flmul	;wreg free
  6835  011482  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6836  011488  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6837  01148E  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6838  011494  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6839  01149A  EC39  F0A0         	call	___flsub	;wreg free
  6840  01149E  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6841  0114A4  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6842  0114AA  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6843  0114B0  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6844                           
  6845                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:         u = u/10
      +                          .0;
  6846  0114B6  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6847  0114BC  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6848  0114C2  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6849  0114C8  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6850  0114CE  0E00               	movlw	0
  6851  0114D0  6E23               	movwf	___fldiv@a^0,c
  6852  0114D2  0E00               	movlw	0
  6853  0114D4  6E24               	movwf	(___fldiv@a+1)^0,c
  6854  0114D6  0E20               	movlw	32
  6855  0114D8  6E25               	movwf	(___fldiv@a+2)^0,c
  6856  0114DA  0E41               	movlw	65
  6857  0114DC  6E26               	movwf	(___fldiv@a+3)^0,c
  6858  0114DE  EC60  F094         	call	___fldiv	;wreg free
  6859  0114E2  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6860  0114E8  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6861  0114EE  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6862  0114F4  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6863                           
  6864                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:         --ne;
  6865  0114FA  0100               	movlb	0	; () banked
  6866  0114FC  0781               	decf	efgtoa@ne& (0+255),f,b
  6867  0114FE  A0D8               	btfss	status,0,c
  6868  011500  0782               	decf	(efgtoa@ne+1)& (0+255),f,b
  6869                           
  6870                           ; BSR set to: 0
  6871                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6872  011502  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6873  011504  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6874  011506                     l5960:
  6875                           
  6876                           ; BSR set to: 0
  6877                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6878  011506  517F               	movf	efgtoa@m& (0+255),w,b
  6879  011508  5D95               	subwf	efgtoa@i& (0+255),w,b
  6880  01150A  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6881  01150C  0A80               	xorlw	128
  6882  01150E  6F66               	movwf	??_efgtoa& (0+255),b
  6883  011510  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6884  011512  0A80               	xorlw	128
  6885  011514  5966               	subwfb	??_efgtoa& (0+255),w,b
  6886  011516  B0D8               	btfsc	status,0,c
  6887  011518  D008               	goto	u7720
  6888                           
  6889                           ; BSR set to: 0
  6890  01151A  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6891  01151C  D6FC               	goto	l5912
  6892  01151E  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  6893  011520  E104               	bnz	u7720
  6894  011522  0E4B               	movlw	75
  6895  011524  5D9D               	subwf	efgtoa@n& (0+255),w,b
  6896  011526  A0D8               	btfss	status,0,c
  6897  011528  D6F6               	goto	l5912
  6898  01152A                     u7720:
  6899                           
  6900                           ; BSR set to: 0
  6901                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (
      +                          flags & (1 << 4))) {
  6902  01152A  517D               	movf	efgtoa@pp& (0+255),w,b
  6903  01152C  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6904  01152E  B4D8               	btfsc	status,2,c
  6905                           
  6906                           ; BSR set to: 0
  6907  011530  A9E2               	btfss	_flags& (0+255),4,b
  6908  011532  D00A               	goto	l5972
  6909                           
  6910                           ; BSR set to: 0
  6911                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++
      +                          ] = '.';
  6912  011534  0E3D               	movlw	low _dbuf
  6913  011536  259D               	addwf	efgtoa@n& (0+255),w,b
  6914  011538  6ED9               	movwf	fsr2l,c
  6915  01153A  0E04               	movlw	high _dbuf
  6916  01153C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6917  01153E  6EDA               	movwf	fsr2h,c
  6918  011540  0E2E               	movlw	46
  6919  011542  6EDF               	movwf	indf2,c
  6920                           
  6921                           ; BSR set to: 0
  6922  011544  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6923  011546  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6924  011548                     l5972:
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\
      +                          0';
  6928  011548  0E3D               	movlw	low _dbuf
  6929  01154A  259D               	addwf	efgtoa@n& (0+255),w,b
  6930  01154C  6ED9               	movwf	fsr2l,c
  6931  01154E  0E04               	movlw	high _dbuf
  6932  011550  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6933  011552  6EDA               	movwf	fsr2h,c
  6934  011554  0E00               	movlw	0
  6935  011556  6EDF               	movwf	indf2,c
  6936                           
  6937                           ; BSR set to: 0
  6938                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if (nmode ==
      +                           'e') {
  6939  011558  0E65               	movlw	101
  6940  01155A  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6941  01155C  A4D8               	btfss	status,2,c
  6942  01155E  EF62  F086         	goto	l5784
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:         i = size
      +                          of(dbuf) - 1;
  6946  011562  0E00               	movlw	0
  6947  011564  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6948  011566  0E4F               	movlw	79
  6949  011568  6F95               	movwf	efgtoa@i& (0+255),b
  6950                           
  6951                           ; BSR set to: 0
  6952                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] 
      +                          = '\0';
  6953  01156A  0E3D               	movlw	low _dbuf
  6954  01156C  2595               	addwf	efgtoa@i& (0+255),w,b
  6955  01156E  6ED9               	movwf	fsr2l,c
  6956  011570  0E04               	movlw	high _dbuf
  6957  011572  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6958  011574  6EDA               	movwf	fsr2h,c
  6959  011576  0E00               	movlw	0
  6960  011578  6EDF               	movwf	indf2,c
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:         sign = 0
      +                          ;
  6964  01157A  0E00               	movlw	0
  6965  01157C  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6966  01157E  0E00               	movlw	0
  6967  011580  6F85               	movwf	efgtoa@sign& (0+255),b
  6968                           
  6969                           ; BSR set to: 0
  6970                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:         if (e < 
      +                          0) {
  6971  011582  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6972  011584  D008               	goto	l5988
  6973                           
  6974                           ; BSR set to: 0
  6975                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:             sign
      +                           = 1;
  6976  011586  0E00               	movlw	0
  6977  011588  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6978  01158A  0E01               	movlw	1
  6979  01158C  6F85               	movwf	efgtoa@sign& (0+255),b
  6980                           
  6981                           ; BSR set to: 0
  6982                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:             e = 
      +                          -e;
  6983  01158E  6D9B               	negf	efgtoa@e& (0+255),b
  6984  011590  1F9C               	comf	(efgtoa@e+1)& (0+255),f,b
  6985  011592  B0D8               	btfsc	status,0,c
  6986  011594  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  6987  011596                     l5988:
  6988                           
  6989                           ; BSR set to: 0
  6990                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  6991  011596  0E00               	movlw	0
  6992  011598  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  6993  01159A  0E02               	movlw	2
  6994  01159C  6F87               	movwf	efgtoa@p& (0+255),b
  6995                           
  6996                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  6997  01159E  D030               	goto	l6000
  6998  0115A0                     l5990:
  6999                           
  7000                           ; BSR set to: 0
  7001                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:             --i;
  7002  0115A0  0795               	decf	efgtoa@i& (0+255),f,b
  7003  0115A2  A0D8               	btfss	status,0,c
  7004  0115A4  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  7005                           
  7006                           ; BSR set to: 0
  7007                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:             dbuf
      +                          [i] = '0' + (e % 10);
  7008  0115A6  0E3D               	movlw	low _dbuf
  7009  0115A8  2595               	addwf	efgtoa@i& (0+255),w,b
  7010  0115AA  6ED9               	movwf	fsr2l,c
  7011  0115AC  0E04               	movlw	high _dbuf
  7012  0115AE  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7013  0115B0  6EDA               	movwf	fsr2h,c
  7014  0115B2  0060  F26C  F001   	movff	efgtoa@e,___awmod@dividend
  7015  0115B8  0060  F270  F002   	movff	efgtoa@e+1,___awmod@dividend+1
  7016  0115BE  0E00               	movlw	0
  7017  0115C0  6E04               	movwf	(___awmod@divisor+1)^0,c
  7018  0115C2  0E0A               	movlw	10
  7019  0115C4  6E03               	movwf	___awmod@divisor^0,c
  7020  0115C6  EC5B  F09F         	call	___awmod	;wreg free
  7021  0115CA  5001               	movf	?___awmod^0,w,c
  7022  0115CC  0F30               	addlw	48
  7023  0115CE  6EDF               	movwf	indf2,c
  7024                           
  7025                           ; BSR set to: 0
  7026                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:             e = 
      +                          e / 10;
  7027  0115D0  0060  F26C  F001   	movff	efgtoa@e,___awdiv@dividend
  7028  0115D6  0060  F270  F002   	movff	efgtoa@e+1,___awdiv@dividend+1
  7029  0115DC  0E00               	movlw	0
  7030  0115DE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7031  0115E0  0E0A               	movlw	10
  7032  0115E2  6E03               	movwf	___awdiv@divisor^0,c
  7033  0115E4  EC9E  F09E         	call	___awdiv	;wreg free
  7034  0115E8  0060  F004  F09B   	movff	?___awdiv,efgtoa@e
  7035  0115EE  0060  F008  F09C   	movff	?___awdiv+1,efgtoa@e+1
  7036                           
  7037                           ; BSR set to: 0
  7038                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:             --p;
  7039  0115F4  0787               	decf	efgtoa@p& (0+255),f,b
  7040  0115F6  A0D8               	btfss	status,0,c
  7041  0115F8  0788               	decf	(efgtoa@p+1)& (0+255),f,b
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:             --w;
  7045  0115FA  078A               	decf	efgtoa@w& (0+255),f,b
  7046  0115FC  A0D8               	btfss	status,0,c
  7047  0115FE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7048  011600                     l6000:
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  7052  011600  519B               	movf	efgtoa@e& (0+255),w,b
  7053  011602  119C               	iorwf	(efgtoa@e+1)& (0+255),w,b
  7054  011604  A4D8               	btfss	status,2,c
  7055  011606  D7CC               	goto	l5990
  7056                           
  7057                           ; BSR set to: 0
  7058  011608  BF88               	btfsc	(efgtoa@p+1)& (0+255),7,b
  7059  01160A  D005               	goto	u7780
  7060  01160C  5188               	movf	(efgtoa@p+1)& (0+255),w,b
  7061  01160E  E1C8               	bnz	l5990
  7062  011610  0587               	decf	efgtoa@p& (0+255),w,b
  7063  011612  B0D8               	btfsc	status,0,c
  7064  011614  D7C5               	goto	l5990
  7065  011616                     u7780:
  7066                           
  7067                           ; BSR set to: 0
  7068                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:         --i;
  7069  011616  0795               	decf	efgtoa@i& (0+255),f,b
  7070  011618  A0D8               	btfss	status,0,c
  7071  01161A  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  7072                           
  7073                           ; BSR set to: 0
  7074                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] 
      +                          = sign ? '-' : '+';
  7075  01161C  5185               	movf	efgtoa@sign& (0+255),w,b
  7076  01161E  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7077  011620  A4D8               	btfss	status,2,c
  7078  011622  D004               	goto	l6010
  7079                           
  7080                           ; BSR set to: 0
  7081  011624  0E00               	movlw	0
  7082  011626  6F76               	movwf	(_efgtoa$638+1)& (0+255),b
  7083  011628  0E2B               	movlw	43
  7084  01162A  D003               	goto	L6
  7085  01162C                     l6010:
  7086                           
  7087                           ; BSR set to: 0
  7088  01162C  0E00               	movlw	0
  7089  01162E  6F76               	movwf	(_efgtoa$638+1)& (0+255),b
  7090  011630  0E2D               	movlw	45
  7091  011632                     L6:
  7092  011632  6F75               	movwf	_efgtoa$638& (0+255),b
  7093                           
  7094                           ; BSR set to: 0
  7095  011634  0E3D               	movlw	low _dbuf
  7096  011636  2595               	addwf	efgtoa@i& (0+255),w,b
  7097  011638  6ED9               	movwf	fsr2l,c
  7098  01163A  0E04               	movlw	high _dbuf
  7099  01163C  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7100  01163E  6EDA               	movwf	fsr2h,c
  7101  011640  0060  F1D7  FFDF   	movff	_efgtoa$638,indf2
  7102                           
  7103                           ; BSR set to: 0
  7104                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:         --w;
  7105  011646  078A               	decf	efgtoa@w& (0+255),f,b
  7106  011648  A0D8               	btfss	status,0,c
  7107  01164A  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7108                           
  7109                           ; BSR set to: 0
  7110                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] 
      +                          = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  7111  01164C  0795               	decf	efgtoa@i& (0+255),f,b
  7112  01164E  A0D8               	btfss	status,0,c
  7113  011650  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  7114                           
  7115                           ; BSR set to: 0
  7116  011652  0EBF               	movlw	191
  7117  011654  6F66               	movwf	??_efgtoa& (0+255),b
  7118  011656  0EFF               	movlw	255
  7119  011658  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  7120  01165A  5165               	movf	efgtoa@c& (0+255),w,b
  7121  01165C  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  7122  01165E  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  7123  011660  5166               	movf	??_efgtoa& (0+255),w,b
  7124  011662  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  7125  011664  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  7126  011666  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7127  011668  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  7128  01166A  E106               	bnz	u7800
  7129  01166C  0E1A               	movlw	26
  7130  01166E  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  7131  011670  B0D8               	btfsc	status,0,c
  7132  011672  D002               	goto	u7800
  7133  011674  0E01               	movlw	1
  7134  011676  D001               	goto	u7810
  7135  011678                     u7800:
  7136  011678  0E00               	movlw	0
  7137  01167A                     u7810:
  7138  01167A  6F79               	movwf	_efgtoa$640& (0+255),b
  7139  01167C  6B7A               	clrf	(_efgtoa$640+1)& (0+255),b
  7140                           
  7141                           ; BSR set to: 0
  7142  01167E  5179               	movf	_efgtoa$640& (0+255),w,b
  7143  011680  117A               	iorwf	(_efgtoa$640+1)& (0+255),w,b
  7144  011682  A4D8               	btfss	status,2,c
  7145  011684  D004               	goto	l6026
  7146                           
  7147                           ; BSR set to: 0
  7148  011686  0E00               	movlw	0
  7149  011688  6F78               	movwf	(_efgtoa$639+1)& (0+255),b
  7150  01168A  0E65               	movlw	101
  7151  01168C  D003               	goto	L7
  7152  01168E                     l6026:
  7153                           
  7154                           ; BSR set to: 0
  7155  01168E  0E00               	movlw	0
  7156  011690  6F78               	movwf	(_efgtoa$639+1)& (0+255),b
  7157  011692  0E45               	movlw	69
  7158  011694                     L7:
  7159  011694  6F77               	movwf	_efgtoa$639& (0+255),b
  7160                           
  7161                           ; BSR set to: 0
  7162  011696  0E3D               	movlw	low _dbuf
  7163  011698  2595               	addwf	efgtoa@i& (0+255),w,b
  7164  01169A  6ED9               	movwf	fsr2l,c
  7165  01169C  0E04               	movlw	high _dbuf
  7166  01169E  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7167  0116A0  6EDA               	movwf	fsr2h,c
  7168  0116A2  0060  F1DF  FFDF   	movff	_efgtoa$639,indf2
  7169                           
  7170                           ; BSR set to: 0
  7171                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:         --w;
  7172  0116A8  078A               	decf	efgtoa@w& (0+255),f,b
  7173  0116AA  A0D8               	btfss	status,0,c
  7174  0116AC  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:         strcpy(&
      +                          dbuf[n], &dbuf[i]);
  7178  0116AE  0E3D               	movlw	low _dbuf
  7179  0116B0  259D               	addwf	efgtoa@n& (0+255),w,b
  7180  0116B2  6E01               	movwf	strcpy@dest^0,c
  7181  0116B4  0E04               	movlw	high _dbuf
  7182  0116B6  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7183  0116B8  6E02               	movwf	(strcpy@dest+1)^0,c
  7184  0116BA  0E3D               	movlw	low _dbuf
  7185  0116BC  2595               	addwf	efgtoa@i& (0+255),w,b
  7186  0116BE  6E03               	movwf	strcpy@src^0,c
  7187  0116C0  0E04               	movlw	high _dbuf
  7188  0116C2  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  7189  0116C4  6E04               	movwf	(strcpy@src+1)^0,c
  7190  0116C6  EC05  F0A0         	call	_strcpy	;wreg free
  7191  0116CA  EF62  F086         	goto	l5784
  7192  0116CE                     __end_of_efgtoa:
  7193                           	opt callstack 0
  7194                           
  7195 ;; *************** function _tolower *****************
  7196 ;; Defined at:
  7197 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  7198 ;; Parameters:    Size  Location     Type
  7199 ;;  c               2    6[COMRAM] int 
  7200 ;; Auto vars:     Size  Location     Type
  7201 ;;		None
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  2    6[COMRAM] int 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7211 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7212 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7213 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7215 ;;Total ram usage:        8 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    1
  7218 ;; This function calls:
  7219 ;;		_isupper
  7220 ;; This function is called by:
  7221 ;;		_efgtoa
  7222 ;;		_vfpfcnvrt
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text14
  7227  01418A                     __ptext14:
  7228                           	opt callstack 0
  7229  01418A                     _tolower:
  7230                           	opt callstack 25
  7231                           
  7232                           ;incstack = 0
  7233  01418A  0EBF               	movlw	191
  7234  01418C  6E09               	movwf	??_tolower^0,c
  7235  01418E  0EFF               	movlw	255
  7236  014190  6E0A               	movwf	(??_tolower+1)^0,c
  7237  014192  0060  F01C  F00B   	movff	tolower@c,??_tolower+2
  7238  014198  0060  F020  F00C   	movff	tolower@c+1,??_tolower+3
  7239  01419E  5009               	movf	??_tolower^0,w,c
  7240  0141A0  260B               	addwf	(??_tolower+2)^0,f,c
  7241  0141A2  500A               	movf	(??_tolower+1)^0,w,c
  7242  0141A4  220C               	addwfc	(??_tolower+3)^0,f,c
  7243  0141A6  500C               	movf	(??_tolower+3)^0,w,c
  7244  0141A8  E106               	bnz	u4220
  7245  0141AA  0E1A               	movlw	26
  7246  0141AC  5C0B               	subwf	(??_tolower+2)^0,w,c
  7247  0141AE  B0D8               	btfsc	status,0,c
  7248  0141B0  D002               	goto	u4220
  7249  0141B2  0E01               	movlw	1
  7250  0141B4  D001               	goto	u4230
  7251  0141B6                     u4220:
  7252  0141B6  0E00               	movlw	0
  7253  0141B8                     u4230:
  7254  0141B8  6E0D               	movwf	_tolower$1253^0,c
  7255  0141BA  6A0E               	clrf	(_tolower$1253+1)^0,c
  7256  0141BC  500D               	movf	_tolower$1253^0,w,c
  7257  0141BE  100E               	iorwf	(_tolower$1253+1)^0,w,c
  7258  0141C0  B4D8               	btfsc	status,2,c
  7259  0141C2  D006               	goto	l1536
  7260  0141C4  0E20               	movlw	32
  7261  0141C6  1007               	iorwf	tolower@c^0,w,c
  7262  0141C8  6E07               	movwf	?_tolower^0,c
  7263  0141CA  5008               	movf	(tolower@c+1)^0,w,c
  7264  0141CC  6E08               	movwf	(?_tolower+1)^0,c
  7265  0141CE  0012               	return	
  7266  0141D0                     l1536:
  7267  0141D0  0060  F01C  F007   	movff	tolower@c,?_tolower
  7268  0141D6  0060  F020  F008   	movff	tolower@c+1,?_tolower+1
  7269  0141DC  0012               	return		;funcret
  7270  0141DE                     __end_of_tolower:
  7271                           	opt callstack 0
  7272                           
  7273 ;; *************** function _isupper *****************
  7274 ;; Defined at:
  7275 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  c               2    0[COMRAM] int 
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  2    0[COMRAM] int 
  7282 ;; Registers used:
  7283 ;;		wreg, status,2, status,0
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7289 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7291 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7292 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7293 ;;Total ram usage:        6 bytes
  7294 ;; Hardware stack levels used:    1
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_efgtoa
  7299 ;;		_vfpfcnvrt
  7300 ;;		_tolower
  7301 ;; This function uses a non-reentrant model
  7302 ;;
  7303                           
  7304                           	psect	text15
  7305  01436C                     __ptext15:
  7306                           	opt callstack 0
  7307  01436C                     _isupper:
  7308                           	opt callstack 25
  7309                           
  7310                           ;incstack = 0
  7311  01436C  0EBF               	movlw	191
  7312  01436E  6E03               	movwf	??_isupper^0,c
  7313  014370  0EFF               	movlw	255
  7314  014372  6E04               	movwf	(??_isupper+1)^0,c
  7315  014374  0060  F004  F005   	movff	isupper@c,??_isupper+2
  7316  01437A  0060  F008  F006   	movff	isupper@c+1,??_isupper+3
  7317  014380  5003               	movf	??_isupper^0,w,c
  7318  014382  2605               	addwf	(??_isupper+2)^0,f,c
  7319  014384  5004               	movf	(??_isupper+1)^0,w,c
  7320  014386  2206               	addwfc	(??_isupper+3)^0,f,c
  7321  014388  5006               	movf	(??_isupper+3)^0,w,c
  7322  01438A  E106               	bnz	u3680
  7323  01438C  0E1A               	movlw	26
  7324  01438E  5C05               	subwf	(??_isupper+2)^0,w,c
  7325  014390  B0D8               	btfsc	status,0,c
  7326  014392  D002               	goto	u3680
  7327  014394  0E01               	movlw	1
  7328  014396  D001               	goto	u3690
  7329  014398                     u3680:
  7330  014398  0E00               	movlw	0
  7331  01439A                     u3690:
  7332  01439A  6E01               	movwf	?_isupper^0,c
  7333  01439C  6A02               	clrf	(?_isupper+1)^0,c
  7334  01439E  0012               	return		;funcret
  7335  0143A0                     __end_of_isupper:
  7336                           	opt callstack 0
  7337                           
  7338 ;; *************** function _strcpy *****************
  7339 ;; Defined at:
  7340 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7343 ;;		 -> dbuf(80), 
  7344 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7345 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  7346 ;;		 -> dbuf(80), 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;  d               2    8[COMRAM] PTR unsigned char 
  7349 ;;		 -> dbuf(80), 
  7350 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7351 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  7352 ;;		 -> dbuf(80), 
  7353 ;; Return value:  Size  Location     Type
  7354 ;;                  2    0[COMRAM] PTR unsigned char 
  7355 ;; Registers used:
  7356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7357 ;; Tracked objects:
  7358 ;;		On entry : 3F/0
  7359 ;;		On exit  : 0/0
  7360 ;;		Unchanged: 0/0
  7361 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7362 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7363 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7364 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7365 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7366 ;;Total ram usage:       10 bytes
  7367 ;; Hardware stack levels used:    1
  7368 ;; This function calls:
  7369 ;;		Nothing
  7370 ;; This function is called by:
  7371 ;;		_efgtoa
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text16
  7376  01400A                     __ptext16:
  7377                           	opt callstack 0
  7378  01400A                     _strcpy:
  7379                           	opt callstack 25
  7380                           
  7381                           ; BSR set to: 0
  7382                           
  7383                           ;incstack = 0
  7384  01400A  0060  F00C  F007   	movff	strcpy@src,strcpy@s
  7385  014010  0060  F010  F008   	movff	strcpy@src+1,strcpy@s+1
  7386  014016  0060  F004  F009   	movff	strcpy@dest,strcpy@d
  7387  01401C  0060  F008  F00A   	movff	strcpy@dest+1,strcpy@d+1
  7388  014022                     l5738:
  7389  014022  5007               	movf	strcpy@s^0,w,c
  7390  014024  6E05               	movwf	??_strcpy^0,c
  7391  014026  5008               	movf	(strcpy@s+1)^0,w,c
  7392  014028  6E06               	movwf	(??_strcpy+1)^0,c
  7393  01402A  4A07               	infsnz	strcpy@s^0,f,c
  7394  01402C  2A08               	incf	(strcpy@s+1)^0,f,c
  7395  01402E  0060  F017  FFF6   	movff	??_strcpy,tblptrl
  7396  014034  0060  F01B  FFF7   	movff	??_strcpy+1,tblptrh
  7397  01403A  0E00               	movlw	low (__mediumconst shr (0+16))
  7398  01403C  6EF8               	movwf	tblptru,c
  7399  01403E  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  7400  014044  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  7401  01404A  4A09               	infsnz	strcpy@d^0,f,c
  7402  01404C  2A0A               	incf	(strcpy@d+1)^0,f,c
  7403  01404E  0E1F               	movlw	(high __ramtop+-1)
  7404  014050  64F7               	cpfsgt	tblptrh,c
  7405  014052  D003               	bra	u7297
  7406  014054  0008               	tblrd		*
  7407  014056  50F5               	movf	tablat,w,c
  7408  014058  D007               	bra	u7290
  7409  01405A                     u7297:
  7410  01405A  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7411  014060  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7412  014066  50E7               	movf	indf1,w,c
  7413  014068                     u7290:
  7414  014068  6EDF               	movwf	indf2,c
  7415  01406A  50DF               	movf	indf2,w,c
  7416  01406C  B4D8               	btfsc	status,2,c
  7417  01406E  0012               	return	
  7418  014070  D7D8               	goto	l5738
  7419  014072                     __end_of_strcpy:
  7420                           	opt callstack 0
  7421                           
  7422 ;; *************** function _pad *****************
  7423 ;; Defined at:
  7424 ;;		line 72 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  7427 ;;		 -> sprintf@f(6), 
  7428 ;;  buf             2   15[COMRAM] PTR unsigned char 
  7429 ;;		 -> dbuf(80), 
  7430 ;;  p               2   17[COMRAM] int 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  w               2   22[COMRAM] int 
  7433 ;;  i               2   20[COMRAM] int 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  2   14[COMRAM] int 
  7436 ;; Registers used:
  7437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7443 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7444 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7445 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7446 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;Total ram usage:       10 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:    3
  7450 ;; This function calls:
  7451 ;;		_fputc
  7452 ;;		_fputs
  7453 ;;		_strlen
  7454 ;; This function is called by:
  7455 ;;		_efgtoa
  7456 ;; This function uses a non-reentrant model
  7457 ;;
  7458                           
  7459                           	psect	text17
  7460  0139C0                     __ptext17:
  7461                           	opt callstack 0
  7462  0139C0                     _pad:
  7463                           	opt callstack 22
  7464                           
  7465                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static int pad(FI
      +                          LE *fp, char *buf, int p);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt
      +                          .c: 73: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 74:     int 
      +                          i, w;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 77:     if (flag
      +                          s & (1 << 0)) {
  7466                           
  7467                           ;incstack = 0
  7468  0139C0  0100               	movlb	0	; () banked
  7469  0139C2  A1E2               	btfss	_flags& (0+255),0,b
  7470  0139C4  D00B               	goto	l5718
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:         fputs((co
      +                          nst char *)buf, fp);
  7474  0139C6  0060  F040  F009   	movff	pad@buf,fputs@s
  7475  0139CC  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7476  0139D2  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7477  0139D8  EC7F  F0A1         	call	_fputs	;wreg free
  7478  0139DC                     l5718:
  7479                           
  7480                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ?
      +                           0 : p;
  7481  0139DC  BE13               	btfsc	(pad@p+1)^0,7,c
  7482  0139DE  D007               	goto	l5722
  7483  0139E0  0060  F048  F017   	movff	pad@p,pad@w
  7484  0139E6  0060  F04C  F018   	movff	pad@p+1,pad@w+1
  7485  0139EC  D004               	goto	l588
  7486  0139EE                     l5722:
  7487  0139EE  0E00               	movlw	0
  7488  0139F0  6E18               	movwf	(pad@w+1)^0,c
  7489  0139F2  0E00               	movlw	0
  7490  0139F4  6E17               	movwf	pad@w^0,c
  7491  0139F6                     l588:
  7492                           
  7493                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7494  0139F6  0E00               	movlw	0
  7495  0139F8  6E16               	movwf	(pad@i+1)^0,c
  7496  0139FA  0E00               	movlw	0
  7497  0139FC  6E15               	movwf	pad@i^0,c
  7498                           
  7499                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7500  0139FE  D00B               	goto	l5728
  7501  013A00                     l5724:
  7502                           
  7503                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:         fputc(' '
      +                          , fp);
  7504  013A00  0E00               	movlw	0
  7505  013A02  6E02               	movwf	(fputc@c+1)^0,c
  7506  013A04  0E20               	movlw	32
  7507  013A06  6E01               	movwf	fputc@c^0,c
  7508  013A08  0060  F03C  F003   	movff	pad@fp,fputc@fp
  7509  013A0E  EC80  F09D         	call	_fputc	;wreg free
  7510                           
  7511                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7512  013A12  4A15               	infsnz	pad@i^0,f,c
  7513  013A14  2A16               	incf	(pad@i+1)^0,f,c
  7514  013A16                     l5728:
  7515                           
  7516                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7517  013A16  5017               	movf	pad@w^0,w,c
  7518  013A18  5C15               	subwf	pad@i^0,w,c
  7519  013A1A  5016               	movf	(pad@i+1)^0,w,c
  7520  013A1C  0A80               	xorlw	128
  7521  013A1E  6E14               	movwf	??_pad^0,c
  7522  013A20  5018               	movf	(pad@w+1)^0,w,c
  7523  013A22  0A80               	xorlw	128
  7524  013A24  5814               	subwfb	??_pad^0,w,c
  7525  013A26  A0D8               	btfss	status,0,c
  7526  013A28  D7EB               	goto	l5724
  7527                           
  7528                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if (!(flags &
      +                           (1 << 0))) {
  7529  013A2A  0100               	movlb	0	; () banked
  7530  013A2C  B1E2               	btfsc	_flags& (0+255),0,b
  7531  013A2E  D00B               	goto	l5732
  7532                           
  7533                           ; BSR set to: 0
  7534                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:         fputs((co
      +                          nst char *)buf, fp);
  7535  013A30  0060  F040  F009   	movff	pad@buf,fputs@s
  7536  013A36  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7537  013A3C  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7538  013A42  EC7F  F0A1         	call	_fputs	;wreg free
  7539  013A46                     l5732:
  7540                           
  7541                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     return strlen
      +                          (buf) + w;
  7542  013A46  0060  F040  F001   	movff	pad@buf,strlen@s
  7543  013A4C  0060  F044  F002   	movff	pad@buf+1,strlen@s+1
  7544  013A52  ECEA  F0A1         	call	_strlen	;wreg free
  7545  013A56  5017               	movf	pad@w^0,w,c
  7546  013A58  2401               	addwf	?_strlen^0,w,c
  7547  013A5A  6E0F               	movwf	?_pad^0,c
  7548  013A5C  5018               	movf	(pad@w+1)^0,w,c
  7549  013A5E  2002               	addwfc	(?_strlen+1)^0,w,c
  7550  013A60  6E10               	movwf	(?_pad+1)^0,c
  7551  013A62  0012               	return		;funcret
  7552  013A64                     __end_of_pad:
  7553                           	opt callstack 0
  7554                           
  7555 ;; *************** function _strlen *****************
  7556 ;; Defined at:
  7557 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7560 ;;		 -> dbuf(80), 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7563 ;;		 -> dbuf(80), 
  7564 ;; Return value:  Size  Location     Type
  7565 ;;                  2    0[COMRAM] unsigned int 
  7566 ;; Registers used:
  7567 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7568 ;; Tracked objects:
  7569 ;;		On entry : 0/0
  7570 ;;		On exit  : 0/0
  7571 ;;		Unchanged: 0/0
  7572 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7574 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7576 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7577 ;;Total ram usage:        4 bytes
  7578 ;; Hardware stack levels used:    1
  7579 ;; This function calls:
  7580 ;;		Nothing
  7581 ;; This function is called by:
  7582 ;;		_pad
  7583 ;; This function uses a non-reentrant model
  7584 ;;
  7585                           
  7586                           	psect	text18
  7587  0143D4                     __ptext18:
  7588                           	opt callstack 0
  7589  0143D4                     _strlen:
  7590                           	opt callstack 24
  7591                           
  7592                           ;incstack = 0
  7593  0143D4  0060  F004  F003   	movff	strlen@s,strlen@a
  7594  0143DA  0060  F008  F004   	movff	strlen@s+1,strlen@a+1
  7595  0143E0  D002               	goto	l5708
  7596  0143E2                     l5706:
  7597  0143E2  4A01               	infsnz	strlen@s^0,f,c
  7598  0143E4  2A02               	incf	(strlen@s+1)^0,f,c
  7599  0143E6                     l5708:
  7600  0143E6  0060  F007  FFD9   	movff	strlen@s,fsr2l
  7601  0143EC  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  7602  0143F2  50DF               	movf	indf2,w,c
  7603  0143F4  A4D8               	btfss	status,2,c
  7604  0143F6  D7F5               	goto	l5706
  7605  0143F8  5003               	movf	strlen@a^0,w,c
  7606  0143FA  5C01               	subwf	strlen@s^0,w,c
  7607  0143FC  6E01               	movwf	?_strlen^0,c
  7608  0143FE  5004               	movf	(strlen@a+1)^0,w,c
  7609  014400  5802               	subwfb	(strlen@s+1)^0,w,c
  7610  014402  6E02               	movwf	(?_strlen+1)^0,c
  7611  014404  0012               	return		;funcret
  7612  014406                     __end_of_strlen:
  7613                           	opt callstack 0
  7614                           
  7615 ;; *************** function _fputs *****************
  7616 ;; Defined at:
  7617 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7620 ;;		 -> dbuf(80), 
  7621 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  7622 ;;		 -> sprintf@f(6), 
  7623 ;; Auto vars:     Size  Location     Type
  7624 ;;  i               2   12[COMRAM] int 
  7625 ;;  c               1   11[COMRAM] unsigned char 
  7626 ;; Return value:  Size  Location     Type
  7627 ;;                  2    8[COMRAM] int 
  7628 ;; Registers used:
  7629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7630 ;; Tracked objects:
  7631 ;;		On entry : 3F/0
  7632 ;;		On exit  : 0/0
  7633 ;;		Unchanged: 0/0
  7634 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7635 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7638 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7639 ;;Total ram usage:        6 bytes
  7640 ;; Hardware stack levels used:    1
  7641 ;; Hardware stack levels required when called:    2
  7642 ;; This function calls:
  7643 ;;		_fputc
  7644 ;; This function is called by:
  7645 ;;		_pad
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text19
  7650  0142FE                     __ptext19:
  7651                           	opt callstack 0
  7652  0142FE                     _fputs:
  7653                           	opt callstack 22
  7654                           
  7655                           ; BSR set to: 0
  7656                           
  7657                           ;incstack = 0
  7658  0142FE  0E00               	movlw	0
  7659  014300  6E0E               	movwf	(fputs@i+1)^0,c
  7660  014302  0E00               	movlw	0
  7661  014304  6E0D               	movwf	fputs@i^0,c
  7662  014306  D00B               	goto	l5702
  7663  014308                     l5698:
  7664  014308  0060  F030  F001   	movff	fputs@c,fputc@c
  7665  01430E  6A02               	clrf	(fputc@c+1)^0,c
  7666  014310  0060  F02C  F003   	movff	fputs@fp,fputc@fp
  7667  014316  EC80  F09D         	call	_fputc	;wreg free
  7668  01431A  4A0D               	infsnz	fputs@i^0,f,c
  7669  01431C  2A0E               	incf	(fputs@i+1)^0,f,c
  7670  01431E                     l5702:
  7671  01431E  500D               	movf	fputs@i^0,w,c
  7672  014320  2409               	addwf	fputs@s^0,w,c
  7673  014322  6ED9               	movwf	fsr2l,c
  7674  014324  500E               	movf	(fputs@i+1)^0,w,c
  7675  014326  200A               	addwfc	(fputs@s+1)^0,w,c
  7676  014328  6EDA               	movwf	fsr2h,c
  7677  01432A  50DF               	movf	indf2,w,c
  7678  01432C  6E0C               	movwf	fputs@c^0,c
  7679  01432E  500C               	movf	fputs@c^0,w,c
  7680  014330  B4D8               	btfsc	status,2,c
  7681  014332  0012               	return	
  7682  014334  D7E9               	goto	l5698
  7683  014336                     __end_of_fputs:
  7684                           	opt callstack 0
  7685                           
  7686 ;; *************** function _fputc *****************
  7687 ;; Defined at:
  7688 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  c               2    0[COMRAM] int 
  7691 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7692 ;;		 -> sprintf@f(6), 
  7693 ;; Auto vars:     Size  Location     Type
  7694 ;;		None
  7695 ;; Return value:  Size  Location     Type
  7696 ;;                  2    0[COMRAM] int 
  7697 ;; Registers used:
  7698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7699 ;; Tracked objects:
  7700 ;;		On entry : 0/0
  7701 ;;		On exit  : 0/0
  7702 ;;		Unchanged: 0/0
  7703 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7704 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7707 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7708 ;;Total ram usage:        8 bytes
  7709 ;; Hardware stack levels used:    1
  7710 ;; Hardware stack levels required when called:    1
  7711 ;; This function calls:
  7712 ;;		_putch
  7713 ;; This function is called by:
  7714 ;;		_pad
  7715 ;;		_vfpfcnvrt
  7716 ;;		_fputs
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text20
  7721  013B00                     __ptext20:
  7722                           	opt callstack 0
  7723  013B00                     _fputc:
  7724                           	opt callstack 25
  7725                           
  7726                           ;incstack = 0
  7727  013B00  5003               	movf	fputc@fp^0,w,c
  7728  013B02  B4D8               	btfsc	status,2,c
  7729  013B04  D003               	goto	u3630
  7730  013B06  5003               	movf	fputc@fp^0,w,c
  7731  013B08  A4D8               	btfss	status,2,c
  7732  013B0A  D004               	goto	l3634
  7733  013B0C                     u3630:
  7734  013B0C  5001               	movf	fputc@c^0,w,c
  7735  013B0E  EC34  F0A2         	call	_putch
  7736  013B12  0012               	return	
  7737  013B14                     l3634:
  7738  013B14  5003               	movf	fputc@fp^0,w,c
  7739  013B16  6ED9               	movwf	fsr2l,c
  7740  013B18  6ADA               	clrf	fsr2h,c
  7741  013B1A  0E04               	movlw	4
  7742  013B1C  26D9               	addwf	fsr2l,f,c
  7743  013B1E  50DE               	movf	postinc2,w,c
  7744  013B20  10DE               	iorwf	postinc2,w,c
  7745  013B22  B4D8               	btfsc	status,2,c
  7746  013B24  D014               	goto	u3650
  7747  013B26  5003               	movf	fputc@fp^0,w,c
  7748  013B28  6ED9               	movwf	fsr2l,c
  7749  013B2A  6ADA               	clrf	fsr2h,c
  7750  013B2C  0E04               	movlw	4
  7751  013B2E  26D9               	addwf	fsr2l,f,c
  7752  013B30  5003               	movf	fputc@fp^0,w,c
  7753  013B32  6EE1               	movwf	fsr1l,c
  7754  013B34  6AE2               	clrf	fsr1h,c
  7755  013B36  0E02               	movlw	2
  7756  013B38  26E1               	addwf	fsr1l,f,c
  7757  013B3A  50DE               	movf	postinc2,w,c
  7758  013B3C  5CE6               	subwf	postinc1,w,c
  7759  013B3E  50E6               	movf	postinc1,w,c
  7760  013B40  0A80               	xorlw	128
  7761  013B42  6E08               	movwf	(??_fputc+4)^0,c
  7762  013B44  50DE               	movf	postinc2,w,c
  7763  013B46  0A80               	xorlw	128
  7764  013B48  5808               	subwfb	(??_fputc+4)^0,w,c
  7765  013B4A  B0D8               	btfsc	status,0,c
  7766  013B4C  0012               	return	
  7767  013B4E                     u3650:
  7768  013B4E  5003               	movf	fputc@fp^0,w,c
  7769  013B50  6ED9               	movwf	fsr2l,c
  7770  013B52  6ADA               	clrf	fsr2h,c
  7771  013B54  0E02               	movlw	2
  7772  013B56  26D9               	addwf	fsr2l,f,c
  7773  013B58  006F FF78  F004    	movff	postinc2,??_fputc
  7774  013B5E  006F FF74  F005    	movff	postdec2,??_fputc+1
  7775  013B64  5003               	movf	fputc@fp^0,w,c
  7776  013B66  6ED9               	movwf	fsr2l,c
  7777  013B68  6ADA               	clrf	fsr2h,c
  7778  013B6A  006F FF78  F006    	movff	postinc2,??_fputc+2
  7779  013B70  006F FF74  F007    	movff	postdec2,??_fputc+3
  7780  013B76  5004               	movf	??_fputc^0,w,c
  7781  013B78  2406               	addwf	(??_fputc+2)^0,w,c
  7782  013B7A  6ED9               	movwf	fsr2l,c
  7783  013B7C  5005               	movf	(??_fputc+1)^0,w,c
  7784  013B7E  2007               	addwfc	(??_fputc+3)^0,w,c
  7785  013B80  6EDA               	movwf	fsr2h,c
  7786  013B82  0060  F007  FFDF   	movff	fputc@c,indf2
  7787  013B88  5003               	movf	fputc@fp^0,w,c
  7788  013B8A  6ED9               	movwf	fsr2l,c
  7789  013B8C  6ADA               	clrf	fsr2h,c
  7790  013B8E  0E02               	movlw	2
  7791  013B90  26D9               	addwf	fsr2l,f,c
  7792  013B92  2ADE               	incf	postinc2,f,c
  7793  013B94  0E00               	movlw	0
  7794  013B96  22DD               	addwfc	postdec2,f,c
  7795  013B98  0012               	return		;funcret
  7796  013B9A                     __end_of_fputc:
  7797                           	opt callstack 0
  7798                           
  7799 ;; *************** function _putch *****************
  7800 ;; Defined at:
  7801 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  c               1    wreg     unsigned char 
  7804 ;; Auto vars:     Size  Location     Type
  7805 ;;  c               1    0[COMRAM] unsigned char 
  7806 ;; Return value:  Size  Location     Type
  7807 ;;                  1    wreg      void 
  7808 ;; Registers used:
  7809 ;;		wreg
  7810 ;; Tracked objects:
  7811 ;;		On entry : 0/0
  7812 ;;		On exit  : 0/0
  7813 ;;		Unchanged: 0/0
  7814 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7816 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7818 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7819 ;;Total ram usage:        0 bytes
  7820 ;; Hardware stack levels used:    1
  7821 ;; This function calls:
  7822 ;;		Nothing
  7823 ;; This function is called by:
  7824 ;;		_fputc
  7825 ;; This function uses a non-reentrant model
  7826 ;;
  7827                           
  7828                           	psect	text21
  7829  014468                     __ptext21:
  7830                           	opt callstack 0
  7831  014468                     _putch:
  7832                           	opt callstack 25
  7833                           
  7834                           ;incstack = 0
  7835  014468  0012               	return		;funcret
  7836  01446A                     __end_of_putch:
  7837                           	opt callstack 0
  7838                           
  7839 ;; *************** function _floorf *****************
  7840 ;; Defined at:
  7841 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  x               4   55[COMRAM] float 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  u               4   71[COMRAM] struct .
  7846 ;;  m               4   65[COMRAM] unsigned long 
  7847 ;;  e               2   69[COMRAM] int 
  7848 ;; Return value:  Size  Location     Type
  7849 ;;                  4   55[COMRAM] float 
  7850 ;; Registers used:
  7851 ;;		wreg, status,2, status,0
  7852 ;; Tracked objects:
  7853 ;;		On entry : 0/0
  7854 ;;		On exit  : 0/0
  7855 ;;		Unchanged: 0/0
  7856 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7858 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7859 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7860 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7861 ;;Total ram usage:       20 bytes
  7862 ;; Hardware stack levels used:    1
  7863 ;; This function calls:
  7864 ;;		Nothing
  7865 ;; This function is called by:
  7866 ;;		_efgtoa
  7867 ;; This function uses a non-reentrant model
  7868 ;;
  7869                           
  7870                           	psect	text22
  7871  012B6C                     __ptext22:
  7872                           	opt callstack 0
  7873  012B6C                     _floorf:
  7874                           	opt callstack 25
  7875                           
  7876                           ;incstack = 0
  7877  012B6C  0060  F350  F048   	movff	floorf@F524,floorf@u
  7878  012B72  0060  F354  F049   	movff	floorf@F524+1,floorf@u+1
  7879  012B78  0060  F358  F04A   	movff	floorf@F524+2,floorf@u+2
  7880  012B7E  0060  F35C  F04B   	movff	floorf@F524+3,floorf@u+3
  7881  012B84  0060  F0E0  F048   	movff	floorf@x,floorf@u
  7882  012B8A  0060  F0E4  F049   	movff	floorf@x+1,floorf@u+1
  7883  012B90  0060  F0E8  F04A   	movff	floorf@x+2,floorf@u+2
  7884  012B96  0060  F0EC  F04B   	movff	floorf@x+3,floorf@u+3
  7885  012B9C  0E81               	movlw	129
  7886  012B9E  6E3C               	movwf	??_floorf^0,c
  7887  012BA0  0EFF               	movlw	255
  7888  012BA2  6E3D               	movwf	(??_floorf+1)^0,c
  7889  012BA4  0060  F120  F03E   	movff	floorf@u,??_floorf+2
  7890  012BAA  0060  F124  F03F   	movff	floorf@u+1,??_floorf+3
  7891  012BB0  0060  F128  F040   	movff	floorf@u+2,??_floorf+4
  7892  012BB6  0060  F12C  F041   	movff	floorf@u+3,??_floorf+5
  7893  012BBC  0E18               	movlw	24
  7894  012BBE  D005               	goto	u4250
  7895  012BC0                     u4255:
  7896  012BC0  90D8               	bcf	status,0,c
  7897  012BC2  3241               	rrcf	(??_floorf+5)^0,f,c
  7898  012BC4  3240               	rrcf	(??_floorf+4)^0,f,c
  7899  012BC6  323F               	rrcf	(??_floorf+3)^0,f,c
  7900  012BC8  323E               	rrcf	(??_floorf+2)^0,f,c
  7901  012BCA                     u4250:
  7902  012BCA  2EE8               	decfsz	wreg,f,c
  7903  012BCC  D7F9               	goto	u4255
  7904  012BCE  503E               	movf	(??_floorf+2)^0,w,c
  7905  012BD0  243C               	addwf	??_floorf^0,w,c
  7906  012BD2  6E46               	movwf	floorf@e^0,c
  7907  012BD4  0E00               	movlw	0
  7908  012BD6  203D               	addwfc	(??_floorf+1)^0,w,c
  7909  012BD8  6E47               	movwf	(floorf@e+1)^0,c
  7910  012BDA  BE47               	btfsc	(floorf@e+1)^0,7,c
  7911  012BDC  D013               	goto	l3930
  7912  012BDE  5047               	movf	(floorf@e+1)^0,w,c
  7913  012BE0  E104               	bnz	u4260
  7914  012BE2  0E17               	movlw	23
  7915  012BE4  5C46               	subwf	floorf@e^0,w,c
  7916  012BE6  A0D8               	btfss	status,0,c
  7917  012BE8  D00D               	goto	l3930
  7918  012BEA                     u4260:
  7919  012BEA  0060  F0E0  F038   	movff	floorf@x,?_floorf
  7920  012BF0  0060  F0E4  F039   	movff	floorf@x+1,?_floorf+1
  7921  012BF6  0060  F0E8  F03A   	movff	floorf@x+2,?_floorf+2
  7922  012BFC  0060  F0EC  F03B   	movff	floorf@x+3,?_floorf+3
  7923  012C02  0012               	return	
  7924  012C04                     l3930:
  7925  012C04  BE47               	btfsc	(floorf@e+1)^0,7,c
  7926  012C06  D064               	goto	l3940
  7927  012C08  0060  F118  F03C   	movff	floorf@e,??_floorf
  7928  012C0E  0EFF               	movlw	255
  7929  012C10  6E3D               	movwf	(??_floorf+1)^0,c
  7930  012C12  0EFF               	movlw	255
  7931  012C14  6E3E               	movwf	(??_floorf+2)^0,c
  7932  012C16  0E7F               	movlw	127
  7933  012C18  6E3F               	movwf	(??_floorf+3)^0,c
  7934  012C1A  0E00               	movlw	0
  7935  012C1C  6E40               	movwf	(??_floorf+4)^0,c
  7936  012C1E                     u4285:
  7937  012C1E  663C               	tstfsz	??_floorf^0,c
  7938  012C20  D001               	goto	u4286
  7939  012C22  D007               	goto	u4287
  7940  012C24                     u4286:
  7941  012C24  3440               	rlcf	(??_floorf+4)^0,w,c
  7942  012C26  3240               	rrcf	(??_floorf+4)^0,f,c
  7943  012C28  323F               	rrcf	(??_floorf+3)^0,f,c
  7944  012C2A  323E               	rrcf	(??_floorf+2)^0,f,c
  7945  012C2C  323D               	rrcf	(??_floorf+1)^0,f,c
  7946  012C2E  2E3C               	decfsz	??_floorf^0,f,c
  7947  012C30  D7F6               	goto	u4285
  7948  012C32                     u4287:
  7949  012C32  0060  F0F4  F042   	movff	??_floorf+1,floorf@m
  7950  012C38  0060  F0F8  F043   	movff	??_floorf+2,floorf@m+1
  7951  012C3E  0060  F0FC  F044   	movff	??_floorf+3,floorf@m+2
  7952  012C44  0060  F100  F045   	movff	??_floorf+4,floorf@m+3
  7953  012C4A  5042               	movf	floorf@m^0,w,c
  7954  012C4C  1448               	andwf	floorf@u^0,w,c
  7955  012C4E  6E3C               	movwf	??_floorf^0,c
  7956  012C50  5043               	movf	(floorf@m+1)^0,w,c
  7957  012C52  1449               	andwf	(floorf@u+1)^0,w,c
  7958  012C54  6E3D               	movwf	(??_floorf+1)^0,c
  7959  012C56  5044               	movf	(floorf@m+2)^0,w,c
  7960  012C58  144A               	andwf	(floorf@u+2)^0,w,c
  7961  012C5A  6E3E               	movwf	(??_floorf+2)^0,c
  7962  012C5C  5045               	movf	(floorf@m+3)^0,w,c
  7963  012C5E  144B               	andwf	(floorf@u+3)^0,w,c
  7964  012C60  6E3F               	movwf	(??_floorf+3)^0,c
  7965  012C62  503C               	movf	??_floorf^0,w,c
  7966  012C64  103D               	iorwf	(??_floorf+1)^0,w,c
  7967  012C66  103E               	iorwf	(??_floorf+2)^0,w,c
  7968  012C68  103F               	iorwf	(??_floorf+3)^0,w,c
  7969  012C6A  B4D8               	btfsc	status,2,c
  7970  012C6C  D7BE               	goto	u4260
  7971  012C6E  0060  F120  F03C   	movff	floorf@u,??_floorf
  7972  012C74  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7973  012C7A  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7974  012C80  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7975  012C86  0E20               	movlw	32
  7976  012C88  D005               	goto	u4300
  7977  012C8A                     u4305:
  7978  012C8A  90D8               	bcf	status,0,c
  7979  012C8C  323F               	rrcf	(??_floorf+3)^0,f,c
  7980  012C8E  323E               	rrcf	(??_floorf+2)^0,f,c
  7981  012C90  323D               	rrcf	(??_floorf+1)^0,f,c
  7982  012C92  323C               	rrcf	??_floorf^0,f,c
  7983  012C94                     u4300:
  7984  012C94  2EE8               	decfsz	wreg,f,c
  7985  012C96  D7F9               	goto	u4305
  7986  012C98  503C               	movf	??_floorf^0,w,c
  7987  012C9A  B4D8               	btfsc	status,2,c
  7988  012C9C  D008               	goto	l1450
  7989  012C9E  5042               	movf	floorf@m^0,w,c
  7990  012CA0  2648               	addwf	floorf@u^0,f,c
  7991  012CA2  5043               	movf	(floorf@m+1)^0,w,c
  7992  012CA4  2249               	addwfc	(floorf@u+1)^0,f,c
  7993  012CA6  5044               	movf	(floorf@m+2)^0,w,c
  7994  012CA8  224A               	addwfc	(floorf@u+2)^0,f,c
  7995  012CAA  5045               	movf	(floorf@m+3)^0,w,c
  7996  012CAC  224B               	addwfc	(floorf@u+3)^0,f,c
  7997  012CAE                     l1450:
  7998  012CAE  1C42               	comf	floorf@m^0,w,c
  7999  012CB0  6E3C               	movwf	??_floorf^0,c
  8000  012CB2  1C43               	comf	(floorf@m+1)^0,w,c
  8001  012CB4  6E3D               	movwf	(??_floorf+1)^0,c
  8002  012CB6  1C44               	comf	(floorf@m+2)^0,w,c
  8003  012CB8  6E3E               	movwf	(??_floorf+2)^0,c
  8004  012CBA  1C45               	comf	(floorf@m+3)^0,w,c
  8005  012CBC  6E3F               	movwf	(??_floorf+3)^0,c
  8006  012CBE  503C               	movf	??_floorf^0,w,c
  8007  012CC0  1648               	andwf	floorf@u^0,f,c
  8008  012CC2  503D               	movf	(??_floorf+1)^0,w,c
  8009  012CC4  1649               	andwf	(floorf@u+1)^0,f,c
  8010  012CC6  503E               	movf	(??_floorf+2)^0,w,c
  8011  012CC8  164A               	andwf	(floorf@u+2)^0,f,c
  8012  012CCA  503F               	movf	(??_floorf+3)^0,w,c
  8013  012CCC  164B               	andwf	(floorf@u+3)^0,f,c
  8014  012CCE  D036               	goto	l3948
  8015  012CD0                     l3940:
  8016  012CD0  0060  F120  F03C   	movff	floorf@u,??_floorf
  8017  012CD6  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  8018  012CDC  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  8019  012CE2  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  8020  012CE8  0E20               	movlw	32
  8021  012CEA  D005               	goto	u4320
  8022  012CEC                     u4325:
  8023  012CEC  90D8               	bcf	status,0,c
  8024  012CEE  323F               	rrcf	(??_floorf+3)^0,f,c
  8025  012CF0  323E               	rrcf	(??_floorf+2)^0,f,c
  8026  012CF2  323D               	rrcf	(??_floorf+1)^0,f,c
  8027  012CF4  323C               	rrcf	??_floorf^0,f,c
  8028  012CF6                     u4320:
  8029  012CF6  2EE8               	decfsz	wreg,f,c
  8030  012CF8  D7F9               	goto	u4325
  8031  012CFA  663C               	tstfsz	??_floorf^0,c
  8032  012CFC  D008               	goto	l3944
  8033  012CFE  0E00               	movlw	0
  8034  012D00  6E48               	movwf	floorf@u^0,c
  8035  012D02  0E00               	movlw	0
  8036  012D04  6E49               	movwf	(floorf@u+1)^0,c
  8037  012D06  0E00               	movlw	0
  8038  012D08  6E4A               	movwf	(floorf@u+2)^0,c
  8039  012D0A  0E00               	movlw	0
  8040  012D0C  D016               	goto	L8
  8041  012D0E                     l3944:
  8042  012D0E  90D8               	bcf	status,0,c
  8043  012D10  3448               	rlcf	floorf@u^0,w,c
  8044  012D12  6E3C               	movwf	??_floorf^0,c
  8045  012D14  3449               	rlcf	(floorf@u+1)^0,w,c
  8046  012D16  6E3D               	movwf	(??_floorf+1)^0,c
  8047  012D18  344A               	rlcf	(floorf@u+2)^0,w,c
  8048  012D1A  6E3E               	movwf	(??_floorf+2)^0,c
  8049  012D1C  344B               	rlcf	(floorf@u+3)^0,w,c
  8050  012D1E  6E3F               	movwf	(??_floorf+3)^0,c
  8051  012D20  503C               	movf	??_floorf^0,w,c
  8052  012D22  103D               	iorwf	(??_floorf+1)^0,w,c
  8053  012D24  103E               	iorwf	(??_floorf+2)^0,w,c
  8054  012D26  103F               	iorwf	(??_floorf+3)^0,w,c
  8055  012D28  B4D8               	btfsc	status,2,c
  8056  012D2A  D008               	goto	l3948
  8057  012D2C  0E00               	movlw	0
  8058  012D2E  6E48               	movwf	floorf@u^0,c
  8059  012D30  0E00               	movlw	0
  8060  012D32  6E49               	movwf	(floorf@u+1)^0,c
  8061  012D34  0E80               	movlw	128
  8062  012D36  6E4A               	movwf	(floorf@u+2)^0,c
  8063  012D38  0EBF               	movlw	191
  8064  012D3A                     L8:
  8065  012D3A  6E4B               	movwf	(floorf@u+3)^0,c
  8066  012D3C                     l3948:
  8067  012D3C  0060  F120  F038   	movff	floorf@u,?_floorf
  8068  012D42  0060  F124  F039   	movff	floorf@u+1,?_floorf+1
  8069  012D48  0060  F128  F03A   	movff	floorf@u+2,?_floorf+2
  8070  012D4E  0060  F12C  F03B   	movff	floorf@u+3,?_floorf+3
  8071  012D54  0012               	return		;funcret
  8072  012D56                     __end_of_floorf:
  8073                           	opt callstack 0
  8074                           
  8075 ;; *************** function ___fpclassifyf *****************
  8076 ;; Defined at:
  8077 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  8078 ;; Parameters:    Size  Location     Type
  8079 ;;  x               4    0[COMRAM] float 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  u               4   10[COMRAM] struct .
  8082 ;;  e               2    8[COMRAM] int 
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  2    0[COMRAM] int 
  8085 ;; Registers used:
  8086 ;;		wreg, status,2, status,0
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8094 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;Total ram usage:       14 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; This function calls:
  8099 ;;		Nothing
  8100 ;; This function is called by:
  8101 ;;		_efgtoa
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           	psect	text23
  8106  013416                     __ptext23:
  8107                           	opt callstack 0
  8108  013416                     ___fpclassifyf:
  8109                           	opt callstack 25
  8110                           
  8111                           ;incstack = 0
  8112  013416  0060  F360  F00B   	movff	___fpclassifyf@F463,___fpclassifyf@u
  8113  01341C  0060  F364  F00C   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  8114  013422  0060  F368  F00D   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  8115  013428  0060  F36C  F00E   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  8116  01342E  0060  F004  F00B   	movff	___fpclassifyf@x,___fpclassifyf@u
  8117  013434  0060  F008  F00C   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8118  01343A  0060  F00C  F00D   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8119  013440  0060  F010  F00E   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8120  013446  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  8121  01344C  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8122  013452  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8123  013458  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8124  01345E  0E18               	movlw	24
  8125  013460  D005               	goto	u4130
  8126  013462                     u4135:
  8127  013462  90D8               	bcf	status,0,c
  8128  013464  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8129  013466  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8130  013468  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8131  01346A  3205               	rrcf	??___fpclassifyf^0,f,c
  8132  01346C                     u4130:
  8133  01346C  2EE8               	decfsz	wreg,f,c
  8134  01346E  D7F9               	goto	u4135
  8135  013470  5005               	movf	??___fpclassifyf^0,w,c
  8136  013472  6E09               	movwf	___fpclassifyf@e^0,c
  8137  013474  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8138  013476  5009               	movf	___fpclassifyf@e^0,w,c
  8139  013478  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8140  01347A  A4D8               	btfss	status,2,c
  8141  01347C  D019               	goto	l3900
  8142  01347E  90D8               	bcf	status,0,c
  8143  013480  340B               	rlcf	___fpclassifyf@u^0,w,c
  8144  013482  6E05               	movwf	??___fpclassifyf^0,c
  8145  013484  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8146  013486  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8147  013488  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8148  01348A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8149  01348C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8150  01348E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8151  013490  5005               	movf	??___fpclassifyf^0,w,c
  8152  013492  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8153  013494  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8154  013496  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8155  013498  A4D8               	btfss	status,2,c
  8156  01349A  D005               	goto	l3896
  8157  01349C  0E00               	movlw	0
  8158  01349E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8159  0134A0  0E02               	movlw	2
  8160  0134A2  6E01               	movwf	?___fpclassifyf^0,c
  8161  0134A4  0012               	return	
  8162  0134A6                     l3896:
  8163  0134A6  0E00               	movlw	0
  8164  0134A8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8165  0134AA  0E03               	movlw	3
  8166  0134AC  6E01               	movwf	?___fpclassifyf^0,c
  8167  0134AE  0012               	return	
  8168  0134B0                     l3900:
  8169  0134B0  2809               	incf	___fpclassifyf@e^0,w,c
  8170  0134B2  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8171  0134B4  A4D8               	btfss	status,2,c
  8172  0134B6  D020               	goto	l3906
  8173  0134B8  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  8174  0134BE  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8175  0134C4  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8176  0134CA  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8177  0134D0  0E09               	movlw	9
  8178  0134D2                     u4175:
  8179  0134D2  90D8               	bcf	status,0,c
  8180  0134D4  3605               	rlcf	??___fpclassifyf^0,f,c
  8181  0134D6  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8182  0134D8  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8183  0134DA  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8184  0134DC  2EE8               	decfsz	wreg,f,c
  8185  0134DE  D7F9               	goto	u4175
  8186  0134E0  5005               	movf	??___fpclassifyf^0,w,c
  8187  0134E2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8188  0134E4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8189  0134E6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8190  0134E8  A4D8               	btfss	status,2,c
  8191  0134EA  D002               	goto	u4180
  8192  0134EC  0E01               	movlw	1
  8193  0134EE  D001               	goto	u4190
  8194  0134F0                     u4180:
  8195  0134F0  0E00               	movlw	0
  8196  0134F2                     u4190:
  8197  0134F2  6E01               	movwf	?___fpclassifyf^0,c
  8198  0134F4  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8199  0134F6  0012               	return	
  8200  0134F8                     l3906:
  8201  0134F8  0E00               	movlw	0
  8202  0134FA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8203  0134FC  0E04               	movlw	4
  8204  0134FE  6E01               	movwf	?___fpclassifyf^0,c
  8205  013500  0012               	return		;funcret
  8206  013502                     __end_of___fpclassifyf:
  8207                           	opt callstack 0
  8208                           
  8209 ;; *************** function ___fltol *****************
  8210 ;; Defined at:
  8211 ;;		line 43 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  8212 ;; Parameters:    Size  Location     Type
  8213 ;;  f1              4    0[COMRAM] int 
  8214 ;; Auto vars:     Size  Location     Type
  8215 ;;  exp1            1    9[COMRAM] unsigned char 
  8216 ;;  sign1           1    8[COMRAM] unsigned char 
  8217 ;; Return value:  Size  Location     Type
  8218 ;;                  4    0[COMRAM] long 
  8219 ;; Registers used:
  8220 ;;		wreg, status,2, status,0
  8221 ;; Tracked objects:
  8222 ;;		On entry : 0/0
  8223 ;;		On exit  : 0/0
  8224 ;;		Unchanged: 0/0
  8225 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8226 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8227 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8228 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8229 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8230 ;;Total ram usage:       10 bytes
  8231 ;; Hardware stack levels used:    1
  8232 ;; This function calls:
  8233 ;;		Nothing
  8234 ;; This function is called by:
  8235 ;;		_efgtoa
  8236 ;; This function uses a non-reentrant model
  8237 ;;
  8238                           
  8239                           	psect	text24
  8240  01378E                     __ptext24:
  8241                           	opt callstack 0
  8242  01378E                     ___fltol:
  8243                           	opt callstack 25
  8244                           
  8245                           ;incstack = 0
  8246  01378E  3403               	rlcf	(___fltol@f1+2)^0,w,c
  8247  013790  3404               	rlcf	(___fltol@f1+3)^0,w,c
  8248  013792  6E0A               	movwf	___fltol@exp1^0,c
  8249  013794  500A               	movf	___fltol@exp1^0,w,c
  8250  013796  A4D8               	btfss	status,2,c
  8251  013798  D009               	goto	l4368
  8252  01379A                     u4990:
  8253  01379A  0E00               	movlw	0
  8254  01379C  6E01               	movwf	?___fltol^0,c
  8255  01379E  0E00               	movlw	0
  8256  0137A0  6E02               	movwf	(?___fltol+1)^0,c
  8257  0137A2  0E00               	movlw	0
  8258  0137A4  6E03               	movwf	(?___fltol+2)^0,c
  8259  0137A6  0E00               	movlw	0
  8260  0137A8  6E04               	movwf	(?___fltol+3)^0,c
  8261  0137AA  0012               	return	
  8262  0137AC                     l4368:
  8263  0137AC  0060  F004  F005   	movff	___fltol@f1,??___fltol
  8264  0137B2  0060  F008  F006   	movff	___fltol@f1+1,??___fltol+1
  8265  0137B8  0060  F00C  F007   	movff	___fltol@f1+2,??___fltol+2
  8266  0137BE  0060  F010  F008   	movff	___fltol@f1+3,??___fltol+3
  8267  0137C4  0E20               	movlw	32
  8268  0137C6  D005               	goto	u5000
  8269  0137C8                     u5005:
  8270  0137C8  90D8               	bcf	status,0,c
  8271  0137CA  3208               	rrcf	(??___fltol+3)^0,f,c
  8272  0137CC  3207               	rrcf	(??___fltol+2)^0,f,c
  8273  0137CE  3206               	rrcf	(??___fltol+1)^0,f,c
  8274  0137D0  3205               	rrcf	??___fltol^0,f,c
  8275  0137D2                     u5000:
  8276  0137D2  2EE8               	decfsz	wreg,f,c
  8277  0137D4  D7F9               	goto	u5005
  8278  0137D6  5005               	movf	??___fltol^0,w,c
  8279  0137D8  6E09               	movwf	___fltol@sign1^0,c
  8280  0137DA  8E03               	bsf	(___fltol@f1+2)^0,7,c
  8281  0137DC  0EFF               	movlw	255
  8282  0137DE  1601               	andwf	___fltol@f1^0,f,c
  8283  0137E0  0EFF               	movlw	255
  8284  0137E2  1602               	andwf	(___fltol@f1+1)^0,f,c
  8285  0137E4  0EFF               	movlw	255
  8286  0137E6  1603               	andwf	(___fltol@f1+2)^0,f,c
  8287  0137E8  0E00               	movlw	0
  8288  0137EA  1604               	andwf	(___fltol@f1+3)^0,f,c
  8289  0137EC  0E96               	movlw	150
  8290  0137EE  5E0A               	subwf	___fltol@exp1^0,f,c
  8291  0137F0  AE0A               	btfss	___fltol@exp1^0,7,c
  8292  0137F2  D00D               	goto	l4388
  8293  0137F4  500A               	movf	___fltol@exp1^0,w,c
  8294  0137F6  0A80               	xorlw	128
  8295  0137F8  0F97               	addlw	151
  8296  0137FA  A0D8               	btfss	status,0,c
  8297  0137FC  D7CE               	goto	u4990
  8298  0137FE                     l4384:
  8299  0137FE  90D8               	bcf	status,0,c
  8300  013800  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8301  013802  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8302  013804  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8303  013806  3201               	rrcf	___fltol@f1^0,f,c
  8304  013808  3E0A               	incfsz	___fltol@exp1^0,f,c
  8305  01380A  D7F9               	goto	l4384
  8306  01380C  D00D               	goto	u5040
  8307  01380E                     l4388:
  8308  01380E  0E1F               	movlw	31
  8309  013810  640A               	cpfsgt	___fltol@exp1^0,c
  8310  013812  D007               	goto	l4396
  8311  013814  D7C2               	goto	u4990
  8312  013816                     l4394:
  8313  013816  90D8               	bcf	status,0,c
  8314  013818  3601               	rlcf	___fltol@f1^0,f,c
  8315  01381A  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8316  01381C  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8317  01381E  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8318  013820  060A               	decf	___fltol@exp1^0,f,c
  8319  013822                     l4396:
  8320  013822  500A               	movf	___fltol@exp1^0,w,c
  8321  013824  A4D8               	btfss	status,2,c
  8322  013826  D7F7               	goto	l4394
  8323  013828                     u5040:
  8324  013828  5009               	movf	___fltol@sign1^0,w,c
  8325  01382A  B4D8               	btfsc	status,2,c
  8326  01382C  D008               	goto	l4402
  8327  01382E  1E04               	comf	(___fltol@f1+3)^0,f,c
  8328  013830  1E03               	comf	(___fltol@f1+2)^0,f,c
  8329  013832  1E02               	comf	(___fltol@f1+1)^0,f,c
  8330  013834  6C01               	negf	___fltol@f1^0,c
  8331  013836  0E00               	movlw	0
  8332  013838  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8333  01383A  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8334  01383C  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8335  01383E                     l4402:
  8336  01383E  0060  F004  F001   	movff	___fltol@f1,?___fltol
  8337  013844  0060  F008  F002   	movff	___fltol@f1+1,?___fltol+1
  8338  01384A  0060  F00C  F003   	movff	___fltol@f1+2,?___fltol+2
  8339  013850  0060  F010  F004   	movff	___fltol@f1+3,?___fltol+3
  8340  013856  0012               	return		;funcret
  8341  013858                     __end_of___fltol:
  8342                           	opt callstack 0
  8343                           
  8344 ;; *************** function ___flsub *****************
  8345 ;; Defined at:
  8346 ;;		line 245 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  b               4   80[COMRAM] long 
  8349 ;;  a               4   84[COMRAM] long 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;		None
  8352 ;; Return value:  Size  Location     Type
  8353 ;;                  4   80[COMRAM] long 
  8354 ;; Registers used:
  8355 ;;		wreg, status,2, status,0, cstack
  8356 ;; Tracked objects:
  8357 ;;		On entry : 0/0
  8358 ;;		On exit  : 0/0
  8359 ;;		Unchanged: 0/0
  8360 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8361 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8363 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8364 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8365 ;;Total ram usage:        8 bytes
  8366 ;; Hardware stack levels used:    1
  8367 ;; Hardware stack levels required when called:    1
  8368 ;; This function calls:
  8369 ;;		___fladd
  8370 ;; This function is called by:
  8371 ;;		_efgtoa
  8372 ;; This function uses a non-reentrant model
  8373 ;;
  8374                           
  8375                           	psect	text25
  8376  014072                     __ptext25:
  8377                           	opt callstack 0
  8378  014072                     ___flsub:
  8379                           	opt callstack 24
  8380                           
  8381                           ;incstack = 0
  8382  014072  0E00               	movlw	0
  8383  014074  1A55               	xorwf	___flsub@a^0,f,c
  8384  014076  0E00               	movlw	0
  8385  014078  1A56               	xorwf	(___flsub@a+1)^0,f,c
  8386  01407A  0E00               	movlw	0
  8387  01407C  1A57               	xorwf	(___flsub@a+2)^0,f,c
  8388  01407E  0E80               	movlw	128
  8389  014080  1A58               	xorwf	(___flsub@a+3)^0,f,c
  8390  014082  0060  F144  F00F   	movff	___flsub@b,___fladd@b
  8391  014088  0060  F148  F010   	movff	___flsub@b+1,___fladd@b+1
  8392  01408E  0060  F14C  F011   	movff	___flsub@b+2,___fladd@b+2
  8393  014094  0060  F150  F012   	movff	___flsub@b+3,___fladd@b+3
  8394  01409A  0060  F154  F013   	movff	___flsub@a,___fladd@a
  8395  0140A0  0060  F158  F014   	movff	___flsub@a+1,___fladd@a+1
  8396  0140A6  0060  F15C  F015   	movff	___flsub@a+2,___fladd@a+2
  8397  0140AC  0060  F160  F016   	movff	___flsub@a+3,___fladd@a+3
  8398  0140B2  ECBC  F092         	call	___fladd	;wreg free
  8399  0140B6  0060  F03C  F051   	movff	?___fladd,?___flsub
  8400  0140BC  0060  F040  F052   	movff	?___fladd+1,?___flsub+1
  8401  0140C2  0060  F044  F053   	movff	?___fladd+2,?___flsub+2
  8402  0140C8  0060  F048  F054   	movff	?___fladd+3,?___flsub+3
  8403  0140CE  0012               	return		;funcret
  8404  0140D0                     __end_of___flsub:
  8405                           	opt callstack 0
  8406                           
  8407 ;; *************** function ___fladd *****************
  8408 ;; Defined at:
  8409 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  b               4   14[COMRAM] long 
  8412 ;;  a               4   18[COMRAM] long 
  8413 ;; Auto vars:     Size  Location     Type
  8414 ;;  grs             1   29[COMRAM] unsigned char 
  8415 ;;  bexp            1   28[COMRAM] unsigned char 
  8416 ;;  aexp            1   27[COMRAM] unsigned char 
  8417 ;;  signs           1   26[COMRAM] unsigned char 
  8418 ;; Return value:  Size  Location     Type
  8419 ;;                  4   14[COMRAM] unsigned char 
  8420 ;; Registers used:
  8421 ;;		wreg, status,2, status,0
  8422 ;; Tracked objects:
  8423 ;;		On entry : 0/4
  8424 ;;		On exit  : 0/0
  8425 ;;		Unchanged: 0/0
  8426 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8427 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8428 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8429 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8430 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8431 ;;Total ram usage:       16 bytes
  8432 ;; Hardware stack levels used:    1
  8433 ;; This function calls:
  8434 ;;		Nothing
  8435 ;; This function is called by:
  8436 ;;		_main_loop
  8437 ;;		_efgtoa
  8438 ;;		___flsub
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text26
  8443  012578                     __ptext26:
  8444                           	opt callstack 0
  8445  012578                     ___fladd:
  8446                           	opt callstack 24
  8447                           
  8448                           ;incstack = 0
  8449  012578  5012               	movf	(___fladd@b+3)^0,w,c
  8450  01257A  0B80               	andlw	128
  8451  01257C  6E1B               	movwf	___fladd@signs^0,c
  8452  01257E  5012               	movf	(___fladd@b+3)^0,w,c
  8453  012580  2412               	addwf	(___fladd@b+3)^0,w,c
  8454  012582  6E1D               	movwf	___fladd@bexp^0,c
  8455  012584  BE11               	btfsc	(___fladd@b+2)^0,7,c
  8456  012586  801D               	bsf	___fladd@bexp^0,0,c
  8457  012588  501D               	movf	___fladd@bexp^0,w,c
  8458  01258A  B4D8               	btfsc	status,2,c
  8459  01258C  D00D               	goto	l3680
  8460  01258E  281D               	incf	___fladd@bexp^0,w,c
  8461  012590  A4D8               	btfss	status,2,c
  8462  012592  D008               	goto	l3676
  8463  012594  0E00               	movlw	0
  8464  012596  6E0F               	movwf	___fladd@b^0,c
  8465  012598  0E00               	movlw	0
  8466  01259A  6E10               	movwf	(___fladd@b+1)^0,c
  8467  01259C  0E00               	movlw	0
  8468  01259E  6E11               	movwf	(___fladd@b+2)^0,c
  8469  0125A0  0E00               	movlw	0
  8470  0125A2  6E12               	movwf	(___fladd@b+3)^0,c
  8471  0125A4                     l3676:
  8472  0125A4  8E11               	bsf	(___fladd@b+2)^0,7,c
  8473  0125A6  D006               	goto	L9
  8474  0125A8                     l3680:
  8475  0125A8  0E00               	movlw	0
  8476  0125AA  6E0F               	movwf	___fladd@b^0,c
  8477  0125AC  0E00               	movlw	0
  8478  0125AE  6E10               	movwf	(___fladd@b+1)^0,c
  8479  0125B0  0E00               	movlw	0
  8480  0125B2  6E11               	movwf	(___fladd@b+2)^0,c
  8481  0125B4                     L9:
  8482  0125B4  0E00               	movlw	0
  8483  0125B6  6E12               	movwf	(___fladd@b+3)^0,c
  8484  0125B8  5016               	movf	(___fladd@a+3)^0,w,c
  8485  0125BA  0B80               	andlw	128
  8486  0125BC  6E1C               	movwf	___fladd@aexp^0,c
  8487  0125BE  501B               	movf	___fladd@signs^0,w,c
  8488  0125C0  181C               	xorwf	___fladd@aexp^0,w,c
  8489  0125C2  A4D8               	btfss	status,2,c
  8490  0125C4  8C1B               	bsf	___fladd@signs^0,6,c
  8491  0125C6  5016               	movf	(___fladd@a+3)^0,w,c
  8492  0125C8  2416               	addwf	(___fladd@a+3)^0,w,c
  8493  0125CA  6E1C               	movwf	___fladd@aexp^0,c
  8494  0125CC  BE15               	btfsc	(___fladd@a+2)^0,7,c
  8495  0125CE  801C               	bsf	___fladd@aexp^0,0,c
  8496  0125D0  501C               	movf	___fladd@aexp^0,w,c
  8497  0125D2  B4D8               	btfsc	status,2,c
  8498  0125D4  D00D               	goto	l3704
  8499  0125D6  281C               	incf	___fladd@aexp^0,w,c
  8500  0125D8  A4D8               	btfss	status,2,c
  8501  0125DA  D008               	goto	l3700
  8502  0125DC  0E00               	movlw	0
  8503  0125DE  6E13               	movwf	___fladd@a^0,c
  8504  0125E0  0E00               	movlw	0
  8505  0125E2  6E14               	movwf	(___fladd@a+1)^0,c
  8506  0125E4  0E00               	movlw	0
  8507  0125E6  6E15               	movwf	(___fladd@a+2)^0,c
  8508  0125E8  0E00               	movlw	0
  8509  0125EA  6E16               	movwf	(___fladd@a+3)^0,c
  8510  0125EC                     l3700:
  8511  0125EC  8E15               	bsf	(___fladd@a+2)^0,7,c
  8512  0125EE  D006               	goto	L10
  8513  0125F0                     l3704:
  8514  0125F0  0E00               	movlw	0
  8515  0125F2  6E13               	movwf	___fladd@a^0,c
  8516  0125F4  0E00               	movlw	0
  8517  0125F6  6E14               	movwf	(___fladd@a+1)^0,c
  8518  0125F8  0E00               	movlw	0
  8519  0125FA  6E15               	movwf	(___fladd@a+2)^0,c
  8520  0125FC                     L10:
  8521  0125FC  0E00               	movlw	0
  8522  0125FE  6E16               	movwf	(___fladd@a+3)^0,c
  8523  012600  501D               	movf	___fladd@bexp^0,w,c
  8524  012602  5C1C               	subwf	___fladd@aexp^0,w,c
  8525  012604  B0D8               	btfsc	status,0,c
  8526  012606  D031               	goto	l3742
  8527  012608  AC1B               	btfss	___fladd@signs^0,6,c
  8528  01260A  D002               	goto	l3712
  8529  01260C  0E80               	movlw	128
  8530  01260E  1A1B               	xorwf	___fladd@signs^0,f,c
  8531  012610                     l3712:
  8532  012610  0060  F074  F01E   	movff	___fladd@bexp,___fladd@grs
  8533  012616  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8534  01261C  0060  F078  F01C   	movff	___fladd@grs,___fladd@aexp
  8535  012622  0060  F03C  F01E   	movff	___fladd@b,___fladd@grs
  8536  012628  0060  F04C  F00F   	movff	___fladd@a,___fladd@b
  8537  01262E  0060  F078  F013   	movff	___fladd@grs,___fladd@a
  8538  012634  0060  F040  F01E   	movff	___fladd@b+1,___fladd@grs
  8539  01263A  0060  F050  F010   	movff	___fladd@a+1,___fladd@b+1
  8540  012640  0060  F078  F014   	movff	___fladd@grs,___fladd@a+1
  8541  012646  0060  F044  F01E   	movff	___fladd@b+2,___fladd@grs
  8542  01264C  0060  F054  F011   	movff	___fladd@a+2,___fladd@b+2
  8543  012652  0060  F078  F015   	movff	___fladd@grs,___fladd@a+2
  8544  012658  0060  F048  F01E   	movff	___fladd@b+3,___fladd@grs
  8545  01265E  0060  F058  F012   	movff	___fladd@a+3,___fladd@b+3
  8546  012664  0060  F078  F016   	movff	___fladd@grs,___fladd@a+3
  8547  01266A                     l3742:
  8548  01266A  0E00               	movlw	0
  8549  01266C  6E1E               	movwf	___fladd@grs^0,c
  8550  01266E  501D               	movf	___fladd@bexp^0,w,c
  8551  012670  0060  F070  F017   	movff	___fladd@aexp,??___fladd
  8552  012676  6A18               	clrf	(??___fladd+1)^0,c
  8553  012678  5E17               	subwf	??___fladd^0,f,c
  8554  01267A  0E00               	movlw	0
  8555  01267C  5A18               	subwfb	(??___fladd+1)^0,f,c
  8556  01267E  BE18               	btfsc	(??___fladd+1)^0,7,c
  8557  012680  D02D               	goto	l1257
  8558  012682  5018               	movf	(??___fladd+1)^0,w,c
  8559  012684  E104               	bnz	u3790
  8560  012686  0E1A               	movlw	26
  8561  012688  5C17               	subwf	??___fladd^0,w,c
  8562  01268A  A0D8               	btfss	status,0,c
  8563  01268C  D027               	goto	l1257
  8564  01268E                     u3790:
  8565  01268E  500F               	movf	___fladd@b^0,w,c
  8566  012690  1010               	iorwf	(___fladd@b+1)^0,w,c
  8567  012692  1011               	iorwf	(___fladd@b+2)^0,w,c
  8568  012694  1012               	iorwf	(___fladd@b+3)^0,w,c
  8569  012696  B4D8               	btfsc	status,2,c
  8570  012698  D002               	goto	u3800
  8571  01269A  0E01               	movlw	1
  8572  01269C  D001               	goto	u3810
  8573  01269E                     u3800:
  8574  01269E  0E00               	movlw	0
  8575  0126A0                     u3810:
  8576  0126A0  6E1E               	movwf	___fladd@grs^0,c
  8577  0126A2  0E00               	movlw	0
  8578  0126A4  6E0F               	movwf	___fladd@b^0,c
  8579  0126A6  0E00               	movlw	0
  8580  0126A8  6E10               	movwf	(___fladd@b+1)^0,c
  8581  0126AA  0E00               	movlw	0
  8582  0126AC  6E11               	movwf	(___fladd@b+2)^0,c
  8583  0126AE  0E00               	movlw	0
  8584  0126B0  6E12               	movwf	(___fladd@b+3)^0,c
  8585  0126B2  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8586  0126B8  D015               	goto	u3840
  8587  0126BA                     l1258:
  8588  0126BA  A01E               	btfss	___fladd@grs^0,0,c
  8589  0126BC  D005               	goto	l3754
  8590  0126BE  90D8               	bcf	status,0,c
  8591  0126C0  301E               	rrcf	___fladd@grs^0,w,c
  8592  0126C2  0901               	iorlw	1
  8593  0126C4  6E1E               	movwf	___fladd@grs^0,c
  8594  0126C6  D002               	goto	l3756
  8595  0126C8                     l3754:
  8596  0126C8  90D8               	bcf	status,0,c
  8597  0126CA  321E               	rrcf	___fladd@grs^0,f,c
  8598  0126CC                     l3756:
  8599  0126CC  B00F               	btfsc	___fladd@b^0,0,c
  8600  0126CE  8E1E               	bsf	___fladd@grs^0,7,c
  8601  0126D0  3412               	rlcf	(___fladd@b+3)^0,w,c
  8602  0126D2  3212               	rrcf	(___fladd@b+3)^0,f,c
  8603  0126D4  3211               	rrcf	(___fladd@b+2)^0,f,c
  8604  0126D6  3210               	rrcf	(___fladd@b+1)^0,f,c
  8605  0126D8  320F               	rrcf	___fladd@b^0,f,c
  8606  0126DA  2A1D               	incf	___fladd@bexp^0,f,c
  8607  0126DC                     l1257:
  8608  0126DC  501C               	movf	___fladd@aexp^0,w,c
  8609  0126DE  5C1D               	subwf	___fladd@bexp^0,w,c
  8610  0126E0  A0D8               	btfss	status,0,c
  8611  0126E2  D7EB               	goto	l1258
  8612  0126E4                     u3840:
  8613  0126E4  BC1B               	btfsc	___fladd@signs^0,6,c
  8614  0126E6  D028               	goto	l3788
  8615  0126E8  501D               	movf	___fladd@bexp^0,w,c
  8616  0126EA  A4D8               	btfss	status,2,c
  8617  0126EC  D009               	goto	l3770
  8618  0126EE  0E00               	movlw	0
  8619  0126F0  6E0F               	movwf	?___fladd^0,c
  8620  0126F2  0E00               	movlw	0
  8621  0126F4  6E10               	movwf	(?___fladd+1)^0,c
  8622  0126F6  0E00               	movlw	0
  8623  0126F8  6E11               	movwf	(?___fladd+2)^0,c
  8624  0126FA  0E00               	movlw	0
  8625  0126FC  6E12               	movwf	(?___fladd+3)^0,c
  8626  0126FE  0012               	return	
  8627  012700                     l3770:
  8628  012700  5013               	movf	___fladd@a^0,w,c
  8629  012702  260F               	addwf	___fladd@b^0,f,c
  8630  012704  5014               	movf	(___fladd@a+1)^0,w,c
  8631  012706  2210               	addwfc	(___fladd@b+1)^0,f,c
  8632  012708  5015               	movf	(___fladd@a+2)^0,w,c
  8633  01270A  2211               	addwfc	(___fladd@b+2)^0,f,c
  8634  01270C  5016               	movf	(___fladd@a+3)^0,w,c
  8635  01270E  2212               	addwfc	(___fladd@b+3)^0,f,c
  8636  012710  A012               	btfss	(___fladd@b+3)^0,0,c
  8637  012712  D071               	goto	u3970
  8638  012714  A01E               	btfss	___fladd@grs^0,0,c
  8639  012716  D005               	goto	l3778
  8640  012718  90D8               	bcf	status,0,c
  8641  01271A  301E               	rrcf	___fladd@grs^0,w,c
  8642  01271C  0901               	iorlw	1
  8643  01271E  6E1E               	movwf	___fladd@grs^0,c
  8644  012720  D002               	goto	l3780
  8645  012722                     l3778:
  8646  012722  90D8               	bcf	status,0,c
  8647  012724  321E               	rrcf	___fladd@grs^0,f,c
  8648  012726                     l3780:
  8649  012726  B00F               	btfsc	___fladd@b^0,0,c
  8650  012728  8E1E               	bsf	___fladd@grs^0,7,c
  8651  01272A  3412               	rlcf	(___fladd@b+3)^0,w,c
  8652  01272C  3212               	rrcf	(___fladd@b+3)^0,f,c
  8653  01272E  3211               	rrcf	(___fladd@b+2)^0,f,c
  8654  012730  3210               	rrcf	(___fladd@b+1)^0,f,c
  8655  012732  320F               	rrcf	___fladd@b^0,f,c
  8656  012734  2A1D               	incf	___fladd@bexp^0,f,c
  8657  012736  D05F               	goto	u3970
  8658  012738                     l3788:
  8659  012738  5013               	movf	___fladd@a^0,w,c
  8660  01273A  5C0F               	subwf	___fladd@b^0,w,c
  8661  01273C  5014               	movf	(___fladd@a+1)^0,w,c
  8662  01273E  5810               	subwfb	(___fladd@b+1)^0,w,c
  8663  012740  5015               	movf	(___fladd@a+2)^0,w,c
  8664  012742  5811               	subwfb	(___fladd@b+2)^0,w,c
  8665  012744  5012               	movf	(___fladd@b+3)^0,w,c
  8666  012746  0A80               	xorlw	128
  8667  012748  6E17               	movwf	??___fladd^0,c
  8668  01274A  5016               	movf	(___fladd@a+3)^0,w,c
  8669  01274C  0A80               	xorlw	128
  8670  01274E  5817               	subwfb	??___fladd^0,w,c
  8671  012750  B0D8               	btfsc	status,0,c
  8672  012752  D025               	goto	l3798
  8673  012754  500F               	movf	___fladd@b^0,w,c
  8674  012756  5C13               	subwf	___fladd@a^0,w,c
  8675  012758  6E17               	movwf	??___fladd^0,c
  8676  01275A  5010               	movf	(___fladd@b+1)^0,w,c
  8677  01275C  5814               	subwfb	(___fladd@a+1)^0,w,c
  8678  01275E  6E18               	movwf	(??___fladd+1)^0,c
  8679  012760  5011               	movf	(___fladd@b+2)^0,w,c
  8680  012762  5815               	subwfb	(___fladd@a+2)^0,w,c
  8681  012764  6E19               	movwf	(??___fladd+2)^0,c
  8682  012766  5012               	movf	(___fladd@b+3)^0,w,c
  8683  012768  5816               	subwfb	(___fladd@a+3)^0,w,c
  8684  01276A  6E1A               	movwf	(??___fladd+3)^0,c
  8685  01276C  0EFF               	movlw	255
  8686  01276E  2417               	addwf	??___fladd^0,w,c
  8687  012770  6E0F               	movwf	___fladd@b^0,c
  8688  012772  0EFF               	movlw	255
  8689  012774  2018               	addwfc	(??___fladd+1)^0,w,c
  8690  012776  6E10               	movwf	(___fladd@b+1)^0,c
  8691  012778  0EFF               	movlw	255
  8692  01277A  2019               	addwfc	(??___fladd+2)^0,w,c
  8693  01277C  6E11               	movwf	(___fladd@b+2)^0,c
  8694  01277E  0EFF               	movlw	255
  8695  012780  201A               	addwfc	(??___fladd+3)^0,w,c
  8696  012782  6E12               	movwf	(___fladd@b+3)^0,c
  8697  012784  0E80               	movlw	128
  8698  012786  1A1B               	xorwf	___fladd@signs^0,f,c
  8699  012788  6C1E               	negf	___fladd@grs^0,c
  8700  01278A  501E               	movf	___fladd@grs^0,w,c
  8701  01278C  A4D8               	btfss	status,2,c
  8702  01278E  D00F               	goto	l1273
  8703  012790  0E01               	movlw	1
  8704  012792  260F               	addwf	___fladd@b^0,f,c
  8705  012794  0E00               	movlw	0
  8706  012796  2210               	addwfc	(___fladd@b+1)^0,f,c
  8707  012798  2211               	addwfc	(___fladd@b+2)^0,f,c
  8708  01279A  2212               	addwfc	(___fladd@b+3)^0,f,c
  8709  01279C  D008               	goto	l1273
  8710  01279E                     l3798:
  8711  01279E  5013               	movf	___fladd@a^0,w,c
  8712  0127A0  5E0F               	subwf	___fladd@b^0,f,c
  8713  0127A2  5014               	movf	(___fladd@a+1)^0,w,c
  8714  0127A4  5A10               	subwfb	(___fladd@b+1)^0,f,c
  8715  0127A6  5015               	movf	(___fladd@a+2)^0,w,c
  8716  0127A8  5A11               	subwfb	(___fladd@b+2)^0,f,c
  8717  0127AA  5016               	movf	(___fladd@a+3)^0,w,c
  8718  0127AC  5A12               	subwfb	(___fladd@b+3)^0,f,c
  8719  0127AE                     l1273:
  8720  0127AE  500F               	movf	___fladd@b^0,w,c
  8721  0127B0  1010               	iorwf	(___fladd@b+1)^0,w,c
  8722  0127B2  1011               	iorwf	(___fladd@b+2)^0,w,c
  8723  0127B4  1012               	iorwf	(___fladd@b+3)^0,w,c
  8724  0127B6  A4D8               	btfss	status,2,c
  8725  0127B8  D01C               	goto	l3822
  8726  0127BA  501E               	movf	___fladd@grs^0,w,c
  8727  0127BC  A4D8               	btfss	status,2,c
  8728  0127BE  D019               	goto	l3822
  8729  0127C0  0E00               	movlw	0
  8730  0127C2  6E0F               	movwf	?___fladd^0,c
  8731  0127C4  0E00               	movlw	0
  8732  0127C6  6E10               	movwf	(?___fladd+1)^0,c
  8733  0127C8  0E00               	movlw	0
  8734  0127CA  6E11               	movwf	(?___fladd+2)^0,c
  8735  0127CC  0E00               	movlw	0
  8736  0127CE  6E12               	movwf	(?___fladd+3)^0,c
  8737  0127D0  0012               	return	
  8738  0127D2                     l3806:
  8739  0127D2  90D8               	bcf	status,0,c
  8740  0127D4  360F               	rlcf	___fladd@b^0,f,c
  8741  0127D6  3610               	rlcf	(___fladd@b+1)^0,f,c
  8742  0127D8  3611               	rlcf	(___fladd@b+2)^0,f,c
  8743  0127DA  3612               	rlcf	(___fladd@b+3)^0,f,c
  8744  0127DC  BE1E               	btfsc	___fladd@grs^0,7,c
  8745  0127DE  800F               	bsf	___fladd@b^0,0,c
  8746  0127E0  A01E               	btfss	___fladd@grs^0,0,c
  8747  0127E2  D002               	goto	l3816
  8748  0127E4  80D8               	bsf	status,0,c
  8749  0127E6  D001               	goto	L11
  8750  0127E8                     l3816:
  8751  0127E8  90D8               	bcf	status,0,c
  8752  0127EA                     L11:
  8753  0127EA  361E               	rlcf	___fladd@grs^0,f,c
  8754  0127EC  501D               	movf	___fladd@bexp^0,w,c
  8755  0127EE  A4D8               	btfss	status,2,c
  8756  0127F0  061D               	decf	___fladd@bexp^0,f,c
  8757  0127F2                     l3822:
  8758  0127F2  AE11               	btfss	(___fladd@b+2)^0,7,c
  8759  0127F4  D7EE               	goto	l3806
  8760  0127F6                     u3970:
  8761  0127F6  0E00               	movlw	0
  8762  0127F8  6E1C               	movwf	___fladd@aexp^0,c
  8763  0127FA  AE1E               	btfss	___fladd@grs^0,7,c
  8764  0127FC  D00C               	goto	l1282
  8765  0127FE  0060  F078  F017   	movff	___fladd@grs,??___fladd
  8766  012804  0E7F               	movlw	127
  8767  012806  1617               	andwf	??___fladd^0,f,c
  8768  012808  B4D8               	btfsc	status,2,c
  8769  01280A  D003               	goto	l1283
  8770  01280C                     u3990:
  8771  01280C  0E01               	movlw	1
  8772  01280E  6E1C               	movwf	___fladd@aexp^0,c
  8773  012810  D002               	goto	l1282
  8774  012812                     l1283:
  8775  012812  B00F               	btfsc	___fladd@b^0,0,c
  8776  012814  D7FB               	goto	u3990
  8777  012816                     l1282:
  8778  012816  501C               	movf	___fladd@aexp^0,w,c
  8779  012818  B4D8               	btfsc	status,2,c
  8780  01281A  D028               	goto	l3842
  8781  01281C  0E01               	movlw	1
  8782  01281E  260F               	addwf	___fladd@b^0,f,c
  8783  012820  0E00               	movlw	0
  8784  012822  2210               	addwfc	(___fladd@b+1)^0,f,c
  8785  012824  2211               	addwfc	(___fladd@b+2)^0,f,c
  8786  012826  2212               	addwfc	(___fladd@b+3)^0,f,c
  8787  012828  A012               	btfss	(___fladd@b+3)^0,0,c
  8788  01282A  D020               	goto	l3842
  8789  01282C  0060  F03C  F017   	movff	___fladd@b,??___fladd
  8790  012832  0060  F040  F018   	movff	___fladd@b+1,??___fladd+1
  8791  012838  0060  F044  F019   	movff	___fladd@b+2,??___fladd+2
  8792  01283E  0060  F048  F01A   	movff	___fladd@b+3,??___fladd+3
  8793  012844  341A               	rlcf	(??___fladd+3)^0,w,c
  8794  012846  321A               	rrcf	(??___fladd+3)^0,f,c
  8795  012848  3219               	rrcf	(??___fladd+2)^0,f,c
  8796  01284A  3218               	rrcf	(??___fladd+1)^0,f,c
  8797  01284C  3217               	rrcf	??___fladd^0,f,c
  8798  01284E  0060  F05C  F00F   	movff	??___fladd,___fladd@b
  8799  012854  0060  F060  F010   	movff	??___fladd+1,___fladd@b+1
  8800  01285A  0060  F064  F011   	movff	??___fladd+2,___fladd@b+2
  8801  012860  0060  F068  F012   	movff	??___fladd+3,___fladd@b+3
  8802  012866  281D               	incf	___fladd@bexp^0,w,c
  8803  012868  A4D8               	btfss	status,2,c
  8804  01286A  2A1D               	incf	___fladd@bexp^0,f,c
  8805  01286C                     l3842:
  8806  01286C  281D               	incf	___fladd@bexp^0,w,c
  8807  01286E  B4D8               	btfsc	status,2,c
  8808  012870  D003               	goto	u4050
  8809  012872  501D               	movf	___fladd@bexp^0,w,c
  8810  012874  A4D8               	btfss	status,2,c
  8811  012876  D00D               	goto	l3850
  8812  012878                     u4050:
  8813  012878  0E00               	movlw	0
  8814  01287A  6E0F               	movwf	___fladd@b^0,c
  8815  01287C  0E00               	movlw	0
  8816  01287E  6E10               	movwf	(___fladd@b+1)^0,c
  8817  012880  0E00               	movlw	0
  8818  012882  6E11               	movwf	(___fladd@b+2)^0,c
  8819  012884  0E00               	movlw	0
  8820  012886  6E12               	movwf	(___fladd@b+3)^0,c
  8821  012888  501D               	movf	___fladd@bexp^0,w,c
  8822  01288A  A4D8               	btfss	status,2,c
  8823  01288C  D002               	goto	l3850
  8824  01288E  0E00               	movlw	0
  8825  012890  6E1B               	movwf	___fladd@signs^0,c
  8826  012892                     l3850:
  8827  012892  A01D               	btfss	___fladd@bexp^0,0,c
  8828  012894  D002               	goto	l3854
  8829  012896  8E11               	bsf	(___fladd@b+2)^0,7,c
  8830  012898  D001               	goto	l3856
  8831  01289A                     l3854:
  8832  01289A  9E11               	bcf	(___fladd@b+2)^0,7,c
  8833  01289C                     l3856:
  8834  01289C  90D8               	bcf	status,0,c
  8835  01289E  301D               	rrcf	___fladd@bexp^0,w,c
  8836  0128A0  6E12               	movwf	(___fladd@b+3)^0,c
  8837  0128A2  BE1B               	btfsc	___fladd@signs^0,7,c
  8838  0128A4  8E12               	bsf	(___fladd@b+3)^0,7,c
  8839  0128A6  0060  F03C  F00F   	movff	___fladd@b,?___fladd
  8840  0128AC  0060  F040  F010   	movff	___fladd@b+1,?___fladd+1
  8841  0128B2  0060  F044  F011   	movff	___fladd@b+2,?___fladd+2
  8842  0128B8  0060  F048  F012   	movff	___fladd@b+3,?___fladd+3
  8843  0128BE  0012               	return		;funcret
  8844  0128C0                     __end_of___fladd:
  8845                           	opt callstack 0
  8846                           
  8847 ;; *************** function ___flneg *****************
  8848 ;; Defined at:
  8849 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8850 ;; Parameters:    Size  Location     Type
  8851 ;;  f1              4    0[COMRAM] unsigned char 
  8852 ;; Auto vars:     Size  Location     Type
  8853 ;;		None
  8854 ;; Return value:  Size  Location     Type
  8855 ;;                  4    0[COMRAM] unsigned char 
  8856 ;; Registers used:
  8857 ;;		wreg, status,2, status,0
  8858 ;; Tracked objects:
  8859 ;;		On entry : 3F/0
  8860 ;;		On exit  : 3F/0
  8861 ;;		Unchanged: 3F/0
  8862 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8863 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8866 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8867 ;;Total ram usage:        4 bytes
  8868 ;; Hardware stack levels used:    1
  8869 ;; This function calls:
  8870 ;;		Nothing
  8871 ;; This function is called by:
  8872 ;;		_efgtoa
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text27
  8877  014336                     __ptext27:
  8878                           	opt callstack 0
  8879  014336                     ___flneg:
  8880                           	opt callstack 25
  8881                           
  8882                           ; BSR set to: 0
  8883                           
  8884                           ;incstack = 0
  8885  014336  5001               	movf	___flneg@f1^0,w,c
  8886  014338  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8887  01433A  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8888  01433C  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8889  01433E  B4D8               	btfsc	status,2,c
  8890  014340  D008               	goto	l4358
  8891                           
  8892                           ; BSR set to: 0
  8893  014342  0E00               	movlw	0
  8894  014344  1A01               	xorwf	___flneg@f1^0,f,c
  8895  014346  0E00               	movlw	0
  8896  014348  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8897  01434A  0E00               	movlw	0
  8898  01434C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8899  01434E  0E80               	movlw	128
  8900  014350  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8901  014352                     l4358:
  8902                           
  8903                           ; BSR set to: 0
  8904  014352  0060  F004  F001   	movff	___flneg@f1,?___flneg
  8905  014358  0060  F008  F002   	movff	___flneg@f1+1,?___flneg+1
  8906  01435E  0060  F00C  F003   	movff	___flneg@f1+2,?___flneg+2
  8907  014364  0060  F010  F004   	movff	___flneg@f1+3,?___flneg+3
  8908                           
  8909                           ; BSR set to: 0
  8910  01436A  0012               	return		;funcret
  8911  01436C                     __end_of___flneg:
  8912                           	opt callstack 0
  8913                           
  8914 ;; *************** function ___flmul *****************
  8915 ;; Defined at:
  8916 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8917 ;; Parameters:    Size  Location     Type
  8918 ;;  b               4   55[COMRAM] unsigned char 
  8919 ;;  a               4   59[COMRAM] unsigned char 
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;  prod            4   74[COMRAM] struct .
  8922 ;;  grs             4   69[COMRAM] unsigned long 
  8923 ;;  temp            2   78[COMRAM] struct .
  8924 ;;  bexp            1   73[COMRAM] unsigned char 
  8925 ;;  aexp            1   68[COMRAM] unsigned char 
  8926 ;;  sign            1   67[COMRAM] unsigned char 
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  4   55[COMRAM] unsigned char 
  8929 ;; Registers used:
  8930 ;;		wreg, status,2, status,0, prodl, prodh
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/4
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8936 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8937 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8938 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8939 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8940 ;;Total ram usage:       25 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; This function calls:
  8943 ;;		Nothing
  8944 ;; This function is called by:
  8945 ;;		_main_loop
  8946 ;;		_efgtoa
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           
  8950                           	psect	text28
  8951  0121F4                     __ptext28:
  8952                           	opt callstack 0
  8953  0121F4                     ___flmul:
  8954                           	opt callstack 25
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;incstack = 0
  8958  0121F4  503B               	movf	(___flmul@b+3)^0,w,c
  8959  0121F6  0B80               	andlw	128
  8960  0121F8  6E44               	movwf	___flmul@sign^0,c
  8961  0121FA  503B               	movf	(___flmul@b+3)^0,w,c
  8962  0121FC  243B               	addwf	(___flmul@b+3)^0,w,c
  8963  0121FE  6E4A               	movwf	___flmul@bexp^0,c
  8964  012200  BE3A               	btfsc	(___flmul@b+2)^0,7,c
  8965  012202  804A               	bsf	___flmul@bexp^0,0,c
  8966  012204  504A               	movf	___flmul@bexp^0,w,c
  8967  012206  B4D8               	btfsc	status,2,c
  8968  012208  D00D               	goto	l4114
  8969  01220A  284A               	incf	___flmul@bexp^0,w,c
  8970  01220C  A4D8               	btfss	status,2,c
  8971  01220E  D008               	goto	l4112
  8972  012210  0E00               	movlw	0
  8973  012212  6E38               	movwf	___flmul@b^0,c
  8974  012214  0E00               	movlw	0
  8975  012216  6E39               	movwf	(___flmul@b+1)^0,c
  8976  012218  0E00               	movlw	0
  8977  01221A  6E3A               	movwf	(___flmul@b+2)^0,c
  8978  01221C  0E00               	movlw	0
  8979  01221E  6E3B               	movwf	(___flmul@b+3)^0,c
  8980  012220                     l4112:
  8981  012220  8E3A               	bsf	(___flmul@b+2)^0,7,c
  8982  012222  D008               	goto	l4116
  8983  012224                     l4114:
  8984  012224  0E00               	movlw	0
  8985  012226  6E38               	movwf	___flmul@b^0,c
  8986  012228  0E00               	movlw	0
  8987  01222A  6E39               	movwf	(___flmul@b+1)^0,c
  8988  01222C  0E00               	movlw	0
  8989  01222E  6E3A               	movwf	(___flmul@b+2)^0,c
  8990  012230  0E00               	movlw	0
  8991  012232  6E3B               	movwf	(___flmul@b+3)^0,c
  8992  012234                     l4116:
  8993  012234  503F               	movf	(___flmul@a+3)^0,w,c
  8994  012236  0B80               	andlw	128
  8995  012238  1A44               	xorwf	___flmul@sign^0,f,c
  8996  01223A  503F               	movf	(___flmul@a+3)^0,w,c
  8997  01223C  243F               	addwf	(___flmul@a+3)^0,w,c
  8998  01223E  6E45               	movwf	___flmul@aexp^0,c
  8999  012240  BE3E               	btfsc	(___flmul@a+2)^0,7,c
  9000  012242  8045               	bsf	___flmul@aexp^0,0,c
  9001  012244  5045               	movf	___flmul@aexp^0,w,c
  9002  012246  B4D8               	btfsc	status,2,c
  9003  012248  D00D               	goto	l4132
  9004  01224A  2845               	incf	___flmul@aexp^0,w,c
  9005  01224C  A4D8               	btfss	status,2,c
  9006  01224E  D008               	goto	l4130
  9007  012250  0E00               	movlw	0
  9008  012252  6E3C               	movwf	___flmul@a^0,c
  9009  012254  0E00               	movlw	0
  9010  012256  6E3D               	movwf	(___flmul@a+1)^0,c
  9011  012258  0E00               	movlw	0
  9012  01225A  6E3E               	movwf	(___flmul@a+2)^0,c
  9013  01225C  0E00               	movlw	0
  9014  01225E  6E3F               	movwf	(___flmul@a+3)^0,c
  9015  012260                     l4130:
  9016  012260  8E3E               	bsf	(___flmul@a+2)^0,7,c
  9017  012262  D008               	goto	l1342
  9018  012264                     l4132:
  9019  012264  0E00               	movlw	0
  9020  012266  6E3C               	movwf	___flmul@a^0,c
  9021  012268  0E00               	movlw	0
  9022  01226A  6E3D               	movwf	(___flmul@a+1)^0,c
  9023  01226C  0E00               	movlw	0
  9024  01226E  6E3E               	movwf	(___flmul@a+2)^0,c
  9025  012270  0E00               	movlw	0
  9026  012272  6E3F               	movwf	(___flmul@a+3)^0,c
  9027  012274                     l1342:
  9028  012274  5045               	movf	___flmul@aexp^0,w,c
  9029  012276  B4D8               	btfsc	status,2,c
  9030  012278  D003               	goto	u4670
  9031  01227A  504A               	movf	___flmul@bexp^0,w,c
  9032  01227C  A4D8               	btfss	status,2,c
  9033  01227E  D009               	goto	l4140
  9034  012280                     u4670:
  9035  012280  0E00               	movlw	0
  9036  012282  6E38               	movwf	?___flmul^0,c
  9037  012284  0E00               	movlw	0
  9038  012286  6E39               	movwf	(?___flmul+1)^0,c
  9039  012288  0E00               	movlw	0
  9040  01228A  6E3A               	movwf	(?___flmul+2)^0,c
  9041  01228C  0E00               	movlw	0
  9042  01228E  6E3B               	movwf	(?___flmul+3)^0,c
  9043  012290  0012               	return	
  9044  012292                     l4140:
  9045  012292  503E               	movf	(___flmul@a+2)^0,w,c
  9046  012294  0238               	mulwf	___flmul@b^0,c
  9047  012296  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9048  01229C  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9049  0122A2  504F               	movf	___flmul@temp^0,w,c
  9050  0122A4  6E46               	movwf	___flmul@grs^0,c
  9051  0122A6  6A47               	clrf	(___flmul@grs+1)^0,c
  9052  0122A8  6A48               	clrf	(___flmul@grs+2)^0,c
  9053  0122AA  6A49               	clrf	(___flmul@grs+3)^0,c
  9054  0122AC  5050               	movf	(___flmul@temp+1)^0,w,c
  9055  0122AE  6E4B               	movwf	___flmul@prod^0,c
  9056  0122B0  6A4C               	clrf	(___flmul@prod+1)^0,c
  9057  0122B2  6A4D               	clrf	(___flmul@prod+2)^0,c
  9058  0122B4  6A4E               	clrf	(___flmul@prod+3)^0,c
  9059  0122B6  503D               	movf	(___flmul@a+1)^0,w,c
  9060  0122B8  0239               	mulwf	(___flmul@b+1)^0,c
  9061  0122BA  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9062  0122C0  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9063  0122C6  504F               	movf	___flmul@temp^0,w,c
  9064  0122C8  2646               	addwf	___flmul@grs^0,f,c
  9065  0122CA  0E00               	movlw	0
  9066  0122CC  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9067  0122CE  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9068  0122D0  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9069  0122D2  5050               	movf	(___flmul@temp+1)^0,w,c
  9070  0122D4  264B               	addwf	___flmul@prod^0,f,c
  9071  0122D6  0E00               	movlw	0
  9072  0122D8  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9073  0122DA  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9074  0122DC  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9075  0122DE  503C               	movf	___flmul@a^0,w,c
  9076  0122E0  023A               	mulwf	(___flmul@b+2)^0,c
  9077  0122E2  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9078  0122E8  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9079  0122EE  504F               	movf	___flmul@temp^0,w,c
  9080  0122F0  2646               	addwf	___flmul@grs^0,f,c
  9081  0122F2  0E00               	movlw	0
  9082  0122F4  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9083  0122F6  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9084  0122F8  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9085  0122FA  5050               	movf	(___flmul@temp+1)^0,w,c
  9086  0122FC  264B               	addwf	___flmul@prod^0,f,c
  9087  0122FE  0E00               	movlw	0
  9088  012300  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9089  012302  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9090  012304  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9091  012306  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  9092  01230C  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  9093  012312  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  9094  012318  6A46               	clrf	___flmul@grs^0,c
  9095  01231A  503C               	movf	___flmul@a^0,w,c
  9096  01231C  0239               	mulwf	(___flmul@b+1)^0,c
  9097  01231E  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9098  012324  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9099  01232A  504F               	movf	___flmul@temp^0,w,c
  9100  01232C  2646               	addwf	___flmul@grs^0,f,c
  9101  01232E  5050               	movf	(___flmul@temp+1)^0,w,c
  9102  012330  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9103  012332  0E00               	movlw	0
  9104  012334  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9105  012336  0E00               	movlw	0
  9106  012338  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9107  01233A  503D               	movf	(___flmul@a+1)^0,w,c
  9108  01233C  0238               	mulwf	___flmul@b^0,c
  9109  01233E  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9110  012344  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9111  01234A  504F               	movf	___flmul@temp^0,w,c
  9112  01234C  2646               	addwf	___flmul@grs^0,f,c
  9113  01234E  5050               	movf	(___flmul@temp+1)^0,w,c
  9114  012350  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9115  012352  0E00               	movlw	0
  9116  012354  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9117  012356  0E00               	movlw	0
  9118  012358  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9119  01235A  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  9120  012360  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  9121  012366  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  9122  01236C  6A46               	clrf	___flmul@grs^0,c
  9123  01236E  503C               	movf	___flmul@a^0,w,c
  9124  012370  0238               	mulwf	___flmul@b^0,c
  9125  012372  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9126  012378  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9127  01237E  504F               	movf	___flmul@temp^0,w,c
  9128  012380  2646               	addwf	___flmul@grs^0,f,c
  9129  012382  5050               	movf	(___flmul@temp+1)^0,w,c
  9130  012384  2247               	addwfc	(___flmul@grs+1)^0,f,c
  9131  012386  0E00               	movlw	0
  9132  012388  2248               	addwfc	(___flmul@grs+2)^0,f,c
  9133  01238A  0E00               	movlw	0
  9134  01238C  2249               	addwfc	(___flmul@grs+3)^0,f,c
  9135  01238E  503E               	movf	(___flmul@a+2)^0,w,c
  9136  012390  0239               	mulwf	(___flmul@b+1)^0,c
  9137  012392  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9138  012398  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9139  01239E  504F               	movf	___flmul@temp^0,w,c
  9140  0123A0  264B               	addwf	___flmul@prod^0,f,c
  9141  0123A2  5050               	movf	(___flmul@temp+1)^0,w,c
  9142  0123A4  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9143  0123A6  0E00               	movlw	0
  9144  0123A8  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9145  0123AA  0E00               	movlw	0
  9146  0123AC  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9147  0123AE  503D               	movf	(___flmul@a+1)^0,w,c
  9148  0123B0  023A               	mulwf	(___flmul@b+2)^0,c
  9149  0123B2  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9150  0123B8  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9151  0123BE  504F               	movf	___flmul@temp^0,w,c
  9152  0123C0  264B               	addwf	___flmul@prod^0,f,c
  9153  0123C2  5050               	movf	(___flmul@temp+1)^0,w,c
  9154  0123C4  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9155  0123C6  0E00               	movlw	0
  9156  0123C8  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9157  0123CA  0E00               	movlw	0
  9158  0123CC  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9159  0123CE  503E               	movf	(___flmul@a+2)^0,w,c
  9160  0123D0  023A               	mulwf	(___flmul@b+2)^0,c
  9161  0123D2  006F FFCC  F04F    	movff	prodl,___flmul@temp
  9162  0123D8  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  9163  0123DE  504F               	movf	___flmul@temp^0,w,c
  9164  0123E0  6E40               	movwf	??___flmul^0,c
  9165  0123E2  5050               	movf	(___flmul@temp+1)^0,w,c
  9166  0123E4  6E41               	movwf	(??___flmul+1)^0,c
  9167  0123E6  6A42               	clrf	(??___flmul+2)^0,c
  9168  0123E8  6A43               	clrf	(??___flmul+3)^0,c
  9169  0123EA  0060  F108  F043   	movff	??___flmul+2,??___flmul+3
  9170  0123F0  0060  F104  F042   	movff	??___flmul+1,??___flmul+2
  9171  0123F6  0060  F100  F041   	movff	??___flmul,??___flmul+1
  9172  0123FC  6A40               	clrf	??___flmul^0,c
  9173  0123FE  5040               	movf	??___flmul^0,w,c
  9174  012400  264B               	addwf	___flmul@prod^0,f,c
  9175  012402  5041               	movf	(??___flmul+1)^0,w,c
  9176  012404  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9177  012406  5042               	movf	(??___flmul+2)^0,w,c
  9178  012408  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9179  01240A  5043               	movf	(??___flmul+3)^0,w,c
  9180  01240C  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9181  01240E  5049               	movf	(___flmul@grs+3)^0,w,c
  9182  012410  264B               	addwf	___flmul@prod^0,f,c
  9183  012412  0E00               	movlw	0
  9184  012414  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9185  012416  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9186  012418  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9187  01241A  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  9188  012420  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  9189  012426  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  9190  01242C  6A46               	clrf	___flmul@grs^0,c
  9191  01242E  5045               	movf	___flmul@aexp^0,w,c
  9192  012430  0060  F128  F040   	movff	___flmul@bexp,??___flmul
  9193  012436  6A41               	clrf	(??___flmul+1)^0,c
  9194  012438  2640               	addwf	??___flmul^0,f,c
  9195  01243A  0E00               	movlw	0
  9196  01243C  2241               	addwfc	(??___flmul+1)^0,f,c
  9197  01243E  0E82               	movlw	130
  9198  012440  2440               	addwf	??___flmul^0,w,c
  9199  012442  6E4F               	movwf	___flmul@temp^0,c
  9200  012444  0EFF               	movlw	255
  9201  012446  2041               	addwfc	(??___flmul+1)^0,w,c
  9202  012448  6E50               	movwf	(___flmul@temp+1)^0,c
  9203  01244A  D00F               	goto	l4188
  9204  01244C                     l4182:
  9205  01244C  90D8               	bcf	status,0,c
  9206  01244E  364B               	rlcf	___flmul@prod^0,f,c
  9207  012450  364C               	rlcf	(___flmul@prod+1)^0,f,c
  9208  012452  364D               	rlcf	(___flmul@prod+2)^0,f,c
  9209  012454  364E               	rlcf	(___flmul@prod+3)^0,f,c
  9210  012456  BE49               	btfsc	(___flmul@grs+3)^0,7,c
  9211  012458  804B               	bsf	___flmul@prod^0,0,c
  9212  01245A  90D8               	bcf	status,0,c
  9213  01245C  3646               	rlcf	___flmul@grs^0,f,c
  9214  01245E  3647               	rlcf	(___flmul@grs+1)^0,f,c
  9215  012460  3648               	rlcf	(___flmul@grs+2)^0,f,c
  9216  012462  3649               	rlcf	(___flmul@grs+3)^0,f,c
  9217  012464  064F               	decf	___flmul@temp^0,f,c
  9218  012466  A0D8               	btfss	status,0,c
  9219  012468  0650               	decf	(___flmul@temp+1)^0,f,c
  9220  01246A                     l4188:
  9221  01246A  AE4D               	btfss	(___flmul@prod+2)^0,7,c
  9222  01246C  D7EF               	goto	l4182
  9223  01246E  0E00               	movlw	0
  9224  012470  6E45               	movwf	___flmul@aexp^0,c
  9225  012472  AE49               	btfss	(___flmul@grs+3)^0,7,c
  9226  012474  D017               	goto	l1351
  9227  012476  0EFF               	movlw	255
  9228  012478  1446               	andwf	___flmul@grs^0,w,c
  9229  01247A  6E40               	movwf	??___flmul^0,c
  9230  01247C  0EFF               	movlw	255
  9231  01247E  1447               	andwf	(___flmul@grs+1)^0,w,c
  9232  012480  6E41               	movwf	(??___flmul+1)^0,c
  9233  012482  0EFF               	movlw	255
  9234  012484  1448               	andwf	(___flmul@grs+2)^0,w,c
  9235  012486  6E42               	movwf	(??___flmul+2)^0,c
  9236  012488  0E7F               	movlw	127
  9237  01248A  1449               	andwf	(___flmul@grs+3)^0,w,c
  9238  01248C  6E43               	movwf	(??___flmul+3)^0,c
  9239  01248E  5040               	movf	??___flmul^0,w,c
  9240  012490  1041               	iorwf	(??___flmul+1)^0,w,c
  9241  012492  1042               	iorwf	(??___flmul+2)^0,w,c
  9242  012494  1043               	iorwf	(??___flmul+3)^0,w,c
  9243  012496  B4D8               	btfsc	status,2,c
  9244  012498  D003               	goto	l1352
  9245  01249A                     u4710:
  9246  01249A  0E01               	movlw	1
  9247  01249C  6E45               	movwf	___flmul@aexp^0,c
  9248  01249E  D002               	goto	l1351
  9249  0124A0                     l1352:
  9250  0124A0  B04B               	btfsc	___flmul@prod^0,0,c
  9251  0124A2  D7FB               	goto	u4710
  9252  0124A4                     l1351:
  9253  0124A4  5045               	movf	___flmul@aexp^0,w,c
  9254  0124A6  B4D8               	btfsc	status,2,c
  9255  0124A8  D027               	goto	l4208
  9256  0124AA  0E01               	movlw	1
  9257  0124AC  264B               	addwf	___flmul@prod^0,f,c
  9258  0124AE  0E00               	movlw	0
  9259  0124B0  224C               	addwfc	(___flmul@prod+1)^0,f,c
  9260  0124B2  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9261  0124B4  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9262  0124B6  A04E               	btfss	(___flmul@prod+3)^0,0,c
  9263  0124B8  D01F               	goto	l4208
  9264  0124BA  0060  F12C  F040   	movff	___flmul@prod,??___flmul
  9265  0124C0  0060  F130  F041   	movff	___flmul@prod+1,??___flmul+1
  9266  0124C6  0060  F134  F042   	movff	___flmul@prod+2,??___flmul+2
  9267  0124CC  0060  F138  F043   	movff	___flmul@prod+3,??___flmul+3
  9268  0124D2  3443               	rlcf	(??___flmul+3)^0,w,c
  9269  0124D4  3243               	rrcf	(??___flmul+3)^0,f,c
  9270  0124D6  3242               	rrcf	(??___flmul+2)^0,f,c
  9271  0124D8  3241               	rrcf	(??___flmul+1)^0,f,c
  9272  0124DA  3240               	rrcf	??___flmul^0,f,c
  9273  0124DC  0060  F100  F04B   	movff	??___flmul,___flmul@prod
  9274  0124E2  0060  F104  F04C   	movff	??___flmul+1,___flmul@prod+1
  9275  0124E8  0060  F108  F04D   	movff	??___flmul+2,___flmul@prod+2
  9276  0124EE  0060  F10C  F04E   	movff	??___flmul+3,___flmul@prod+3
  9277  0124F4  4A4F               	infsnz	___flmul@temp^0,f,c
  9278  0124F6  2A50               	incf	(___flmul@temp+1)^0,f,c
  9279  0124F8                     l4208:
  9280  0124F8  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  9281  0124FA  D00D               	goto	l4212
  9282  0124FC  5050               	movf	(___flmul@temp+1)^0,w,c
  9283  0124FE  E103               	bnz	u4750
  9284  012500  284F               	incf	___flmul@temp^0,w,c
  9285  012502  A0D8               	btfss	status,0,c
  9286  012504  D008               	goto	l4212
  9287  012506                     u4750:
  9288  012506  0E00               	movlw	0
  9289  012508  6E4B               	movwf	___flmul@prod^0,c
  9290  01250A  0E00               	movlw	0
  9291  01250C  6E4C               	movwf	(___flmul@prod+1)^0,c
  9292  01250E  0E80               	movlw	128
  9293  012510  6E4D               	movwf	(___flmul@prod+2)^0,c
  9294  012512  0E7F               	movlw	127
  9295  012514  D021               	goto	L12
  9296  012516                     l4212:
  9297  012516  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  9298  012518  D005               	goto	u4760
  9299  01251A  5050               	movf	(___flmul@temp+1)^0,w,c
  9300  01251C  E10E               	bnz	l1359
  9301  01251E  044F               	decf	___flmul@temp^0,w,c
  9302  012520  B0D8               	btfsc	status,0,c
  9303  012522  D00B               	goto	l1359
  9304  012524                     u4760:
  9305  012524  0E00               	movlw	0
  9306  012526  6E4B               	movwf	___flmul@prod^0,c
  9307  012528  0E00               	movlw	0
  9308  01252A  6E4C               	movwf	(___flmul@prod+1)^0,c
  9309  01252C  0E00               	movlw	0
  9310  01252E  6E4D               	movwf	(___flmul@prod+2)^0,c
  9311  012530  0E00               	movlw	0
  9312  012532  6E4E               	movwf	(___flmul@prod+3)^0,c
  9313  012534  0E00               	movlw	0
  9314  012536  6E44               	movwf	___flmul@sign^0,c
  9315  012538  D010               	goto	l4224
  9316  01253A                     l1359:
  9317  01253A  0060  F13C  F04A   	movff	___flmul@temp,___flmul@bexp
  9318  012540  0EFF               	movlw	255
  9319  012542  164B               	andwf	___flmul@prod^0,f,c
  9320  012544  0EFF               	movlw	255
  9321  012546  164C               	andwf	(___flmul@prod+1)^0,f,c
  9322  012548  0E7F               	movlw	127
  9323  01254A  164D               	andwf	(___flmul@prod+2)^0,f,c
  9324  01254C  0E00               	movlw	0
  9325  01254E  164E               	andwf	(___flmul@prod+3)^0,f,c
  9326  012550  B04A               	btfsc	___flmul@bexp^0,0,c
  9327  012552  8E4D               	bsf	(___flmul@prod+2)^0,7,c
  9328  012554  90D8               	bcf	status,0,c
  9329  012556  304A               	rrcf	___flmul@bexp^0,w,c
  9330  012558                     L12:
  9331  012558  6E4E               	movwf	(___flmul@prod+3)^0,c
  9332  01255A                     l4224:
  9333  01255A  5044               	movf	___flmul@sign^0,w,c
  9334  01255C  124E               	iorwf	(___flmul@prod+3)^0,f,c
  9335  01255E  0060  F12C  F038   	movff	___flmul@prod,?___flmul
  9336  012564  0060  F130  F039   	movff	___flmul@prod+1,?___flmul+1
  9337  01256A  0060  F134  F03A   	movff	___flmul@prod+2,?___flmul+2
  9338  012570  0060  F138  F03B   	movff	___flmul@prod+3,?___flmul+3
  9339  012576  0012               	return		;funcret
  9340  012578                     __end_of___flmul:
  9341                           	opt callstack 0
  9342                           
  9343 ;; *************** function ___fleq *****************
  9344 ;; Defined at:
  9345 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;  ff1             4    0[COMRAM] unsigned char 
  9348 ;;  ff2             4    4[COMRAM] unsigned char 
  9349 ;; Auto vars:     Size  Location     Type
  9350 ;;		None
  9351 ;; Return value:  Size  Location     Type
  9352 ;;		None               void
  9353 ;; Registers used:
  9354 ;;		wreg, status,2, status,0
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9363 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9364 ;;Total ram usage:       12 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; This function calls:
  9367 ;;		Nothing
  9368 ;; This function is called by:
  9369 ;;		_efgtoa
  9370 ;; This function uses a non-reentrant model
  9371 ;;
  9372                           
  9373                           	psect	text29
  9374  013C28                     __ptext29:
  9375                           	opt callstack 0
  9376  013C28                     ___fleq:
  9377                           	opt callstack 25
  9378                           
  9379                           ;incstack = 0
  9380  013C28  0E00               	movlw	0
  9381  013C2A  1401               	andwf	___fleq@ff1^0,w,c
  9382  013C2C  6E09               	movwf	??___fleq^0,c
  9383  013C2E  0E00               	movlw	0
  9384  013C30  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9385  013C32  6E0A               	movwf	(??___fleq+1)^0,c
  9386  013C34  0E80               	movlw	128
  9387  013C36  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9388  013C38  6E0B               	movwf	(??___fleq+2)^0,c
  9389  013C3A  0E7F               	movlw	127
  9390  013C3C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9391  013C3E  6E0C               	movwf	(??___fleq+3)^0,c
  9392  013C40  5009               	movf	??___fleq^0,w,c
  9393  013C42  100A               	iorwf	(??___fleq+1)^0,w,c
  9394  013C44  100B               	iorwf	(??___fleq+2)^0,w,c
  9395  013C46  100C               	iorwf	(??___fleq+3)^0,w,c
  9396  013C48  A4D8               	btfss	status,2,c
  9397  013C4A  D008               	goto	l4320
  9398  013C4C  0E00               	movlw	0
  9399  013C4E  6E01               	movwf	___fleq@ff1^0,c
  9400  013C50  0E00               	movlw	0
  9401  013C52  6E02               	movwf	(___fleq@ff1+1)^0,c
  9402  013C54  0E00               	movlw	0
  9403  013C56  6E03               	movwf	(___fleq@ff1+2)^0,c
  9404  013C58  0E00               	movlw	0
  9405  013C5A  6E04               	movwf	(___fleq@ff1+3)^0,c
  9406  013C5C                     l4320:
  9407  013C5C  0E00               	movlw	0
  9408  013C5E  1405               	andwf	___fleq@ff2^0,w,c
  9409  013C60  6E09               	movwf	??___fleq^0,c
  9410  013C62  0E00               	movlw	0
  9411  013C64  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9412  013C66  6E0A               	movwf	(??___fleq+1)^0,c
  9413  013C68  0E80               	movlw	128
  9414  013C6A  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9415  013C6C  6E0B               	movwf	(??___fleq+2)^0,c
  9416  013C6E  0E7F               	movlw	127
  9417  013C70  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9418  013C72  6E0C               	movwf	(??___fleq+3)^0,c
  9419  013C74  5009               	movf	??___fleq^0,w,c
  9420  013C76  100A               	iorwf	(??___fleq+1)^0,w,c
  9421  013C78  100B               	iorwf	(??___fleq+2)^0,w,c
  9422  013C7A  100C               	iorwf	(??___fleq+3)^0,w,c
  9423  013C7C  A4D8               	btfss	status,2,c
  9424  013C7E  D008               	goto	l4324
  9425  013C80  0E00               	movlw	0
  9426  013C82  6E05               	movwf	___fleq@ff2^0,c
  9427  013C84  0E00               	movlw	0
  9428  013C86  6E06               	movwf	(___fleq@ff2+1)^0,c
  9429  013C88  0E00               	movlw	0
  9430  013C8A  6E07               	movwf	(___fleq@ff2+2)^0,c
  9431  013C8C  0E00               	movlw	0
  9432  013C8E  6E08               	movwf	(___fleq@ff2+3)^0,c
  9433  013C90                     l4324:
  9434  013C90  5005               	movf	___fleq@ff2^0,w,c
  9435  013C92  1801               	xorwf	___fleq@ff1^0,w,c
  9436  013C94  E10A               	bnz	u4920
  9437  013C96  5006               	movf	(___fleq@ff2+1)^0,w,c
  9438  013C98  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9439  013C9A  E107               	bnz	u4920
  9440  013C9C  5007               	movf	(___fleq@ff2+2)^0,w,c
  9441  013C9E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9442  013CA0  E104               	bnz	u4920
  9443  013CA2  5008               	movf	(___fleq@ff2+3)^0,w,c
  9444  013CA4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9445  013CA6  B4D8               	btfsc	status,2,c
  9446  013CA8  D002               	goto	l4328
  9447  013CAA                     u4920:
  9448  013CAA  90D8               	bcf	status,0,c
  9449  013CAC  0012               	return	
  9450  013CAE                     l4328:
  9451  013CAE  80D8               	bsf	status,0,c
  9452  013CB0  0012               	return		;funcret
  9453  013CB2                     __end_of___fleq:
  9454                           	opt callstack 0
  9455                           
  9456 ;; *************** function ___fldiv *****************
  9457 ;; Defined at:
  9458 ;;		line 11 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9459 ;; Parameters:    Size  Location     Type
  9460 ;;  b               4   30[COMRAM] unsigned char 
  9461 ;;  a               4   34[COMRAM] unsigned char 
  9462 ;; Auto vars:     Size  Location     Type
  9463 ;;  grs             4   49[COMRAM] unsigned long 
  9464 ;;  rem             4   42[COMRAM] unsigned long 
  9465 ;;  new_exp         2   47[COMRAM] short 
  9466 ;;  aexp            1   54[COMRAM] unsigned char 
  9467 ;;  bexp            1   53[COMRAM] unsigned char 
  9468 ;;  sign            1   46[COMRAM] unsigned char 
  9469 ;; Return value:  Size  Location     Type
  9470 ;;                  4   30[COMRAM] unsigned char 
  9471 ;; Registers used:
  9472 ;;		wreg, status,2, status,0
  9473 ;; Tracked objects:
  9474 ;;		On entry : 0/4
  9475 ;;		On exit  : 0/0
  9476 ;;		Unchanged: 0/0
  9477 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9478 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9479 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9480 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9481 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9482 ;;Total ram usage:       25 bytes
  9483 ;; Hardware stack levels used:    1
  9484 ;; This function calls:
  9485 ;;		Nothing
  9486 ;; This function is called by:
  9487 ;;		_main_loop
  9488 ;;		_efgtoa
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           	psect	text30
  9493  0128C0                     __ptext30:
  9494                           	opt callstack 0
  9495  0128C0                     ___fldiv:
  9496                           	opt callstack 25
  9497                           
  9498                           ;incstack = 0
  9499  0128C0  5022               	movf	(___fldiv@b+3)^0,w,c
  9500  0128C2  0B80               	andlw	128
  9501  0128C4  6E2F               	movwf	___fldiv@sign^0,c
  9502  0128C6  5022               	movf	(___fldiv@b+3)^0,w,c
  9503  0128C8  2422               	addwf	(___fldiv@b+3)^0,w,c
  9504  0128CA  6E36               	movwf	___fldiv@bexp^0,c
  9505  0128CC  BE21               	btfsc	(___fldiv@b+2)^0,7,c
  9506  0128CE  8036               	bsf	___fldiv@bexp^0,0,c
  9507  0128D0  5036               	movf	___fldiv@bexp^0,w,c
  9508  0128D2  B4D8               	btfsc	status,2,c
  9509  0128D4  D00D               	goto	l3978
  9510  0128D6  2836               	incf	___fldiv@bexp^0,w,c
  9511  0128D8  A4D8               	btfss	status,2,c
  9512  0128DA  D008               	goto	l3974
  9513  0128DC  0E00               	movlw	0
  9514  0128DE  6E1F               	movwf	___fldiv@b^0,c
  9515  0128E0  0E00               	movlw	0
  9516  0128E2  6E20               	movwf	(___fldiv@b+1)^0,c
  9517  0128E4  0E00               	movlw	0
  9518  0128E6  6E21               	movwf	(___fldiv@b+2)^0,c
  9519  0128E8  0E00               	movlw	0
  9520  0128EA  6E22               	movwf	(___fldiv@b+3)^0,c
  9521  0128EC                     l3974:
  9522  0128EC  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9523  0128EE  D006               	goto	L13
  9524  0128F0                     l3978:
  9525  0128F0  0E00               	movlw	0
  9526  0128F2  6E1F               	movwf	___fldiv@b^0,c
  9527  0128F4  0E00               	movlw	0
  9528  0128F6  6E20               	movwf	(___fldiv@b+1)^0,c
  9529  0128F8  0E00               	movlw	0
  9530  0128FA  6E21               	movwf	(___fldiv@b+2)^0,c
  9531  0128FC                     L13:
  9532  0128FC  0E00               	movlw	0
  9533  0128FE  6E22               	movwf	(___fldiv@b+3)^0,c
  9534  012900  5026               	movf	(___fldiv@a+3)^0,w,c
  9535  012902  0B80               	andlw	128
  9536  012904  1A2F               	xorwf	___fldiv@sign^0,f,c
  9537  012906  5026               	movf	(___fldiv@a+3)^0,w,c
  9538  012908  2426               	addwf	(___fldiv@a+3)^0,w,c
  9539  01290A  6E37               	movwf	___fldiv@aexp^0,c
  9540  01290C  BE25               	btfsc	(___fldiv@a+2)^0,7,c
  9541  01290E  8037               	bsf	___fldiv@aexp^0,0,c
  9542  012910  5037               	movf	___fldiv@aexp^0,w,c
  9543  012912  B4D8               	btfsc	status,2,c
  9544  012914  D00D               	goto	l3998
  9545  012916  2837               	incf	___fldiv@aexp^0,w,c
  9546  012918  A4D8               	btfss	status,2,c
  9547  01291A  D008               	goto	l3994
  9548  01291C  0E00               	movlw	0
  9549  01291E  6E23               	movwf	___fldiv@a^0,c
  9550  012920  0E00               	movlw	0
  9551  012922  6E24               	movwf	(___fldiv@a+1)^0,c
  9552  012924  0E00               	movlw	0
  9553  012926  6E25               	movwf	(___fldiv@a+2)^0,c
  9554  012928  0E00               	movlw	0
  9555  01292A  6E26               	movwf	(___fldiv@a+3)^0,c
  9556  01292C                     l3994:
  9557  01292C  8E25               	bsf	(___fldiv@a+2)^0,7,c
  9558  01292E  D006               	goto	L14
  9559  012930                     l3998:
  9560  012930  0E00               	movlw	0
  9561  012932  6E23               	movwf	___fldiv@a^0,c
  9562  012934  0E00               	movlw	0
  9563  012936  6E24               	movwf	(___fldiv@a+1)^0,c
  9564  012938  0E00               	movlw	0
  9565  01293A  6E25               	movwf	(___fldiv@a+2)^0,c
  9566  01293C                     L14:
  9567  01293C  0E00               	movlw	0
  9568  01293E  6E26               	movwf	(___fldiv@a+3)^0,c
  9569  012940  5023               	movf	___fldiv@a^0,w,c
  9570  012942  1024               	iorwf	(___fldiv@a+1)^0,w,c
  9571  012944  1025               	iorwf	(___fldiv@a+2)^0,w,c
  9572  012946  1026               	iorwf	(___fldiv@a+3)^0,w,c
  9573  012948  A4D8               	btfss	status,2,c
  9574  01294A  D01B               	goto	l4012
  9575  01294C  0E00               	movlw	0
  9576  01294E  6E1F               	movwf	___fldiv@b^0,c
  9577  012950  0E00               	movlw	0
  9578  012952  6E20               	movwf	(___fldiv@b+1)^0,c
  9579  012954  0E00               	movlw	0
  9580  012956  6E21               	movwf	(___fldiv@b+2)^0,c
  9581  012958  0E00               	movlw	0
  9582  01295A  6E22               	movwf	(___fldiv@b+3)^0,c
  9583  01295C  0E80               	movlw	128
  9584  01295E  1221               	iorwf	(___fldiv@b+2)^0,f,c
  9585  012960  0E7F               	movlw	127
  9586  012962  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9587  012964                     l4006:
  9588  012964  502F               	movf	___fldiv@sign^0,w,c
  9589  012966  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9590  012968  0060  F07C  F01F   	movff	___fldiv@b,?___fldiv
  9591  01296E  0060  F080  F020   	movff	___fldiv@b+1,?___fldiv+1
  9592  012974  0060  F084  F021   	movff	___fldiv@b+2,?___fldiv+2
  9593  01297A  0060  F088  F022   	movff	___fldiv@b+3,?___fldiv+3
  9594  012980  0012               	return	
  9595  012982                     l4012:
  9596  012982  5036               	movf	___fldiv@bexp^0,w,c
  9597  012984  A4D8               	btfss	status,2,c
  9598  012986  D009               	goto	l4020
  9599  012988  0E00               	movlw	0
  9600  01298A  6E1F               	movwf	?___fldiv^0,c
  9601  01298C  0E00               	movlw	0
  9602  01298E  6E20               	movwf	(?___fldiv+1)^0,c
  9603  012990  0E00               	movlw	0
  9604  012992  6E21               	movwf	(?___fldiv+2)^0,c
  9605  012994  0E00               	movlw	0
  9606  012996  6E22               	movwf	(?___fldiv+3)^0,c
  9607  012998  0012               	return	
  9608  01299A                     l4020:
  9609  01299A  5037               	movf	___fldiv@aexp^0,w,c
  9610  01299C  0060  F0D8  F027   	movff	___fldiv@bexp,??___fldiv
  9611  0129A2  6A28               	clrf	(??___fldiv+1)^0,c
  9612  0129A4  5E27               	subwf	??___fldiv^0,f,c
  9613  0129A6  0E00               	movlw	0
  9614  0129A8  5A28               	subwfb	(??___fldiv+1)^0,f,c
  9615  0129AA  0E7F               	movlw	127
  9616  0129AC  2427               	addwf	??___fldiv^0,w,c
  9617  0129AE  6E30               	movwf	___fldiv@new_exp^0,c
  9618  0129B0  0E00               	movlw	0
  9619  0129B2  2028               	addwfc	(??___fldiv+1)^0,w,c
  9620  0129B4  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9621  0129B6  0060  F07C  F02B   	movff	___fldiv@b,___fldiv@rem
  9622  0129BC  0060  F080  F02C   	movff	___fldiv@b+1,___fldiv@rem+1
  9623  0129C2  0060  F084  F02D   	movff	___fldiv@b+2,___fldiv@rem+2
  9624  0129C8  0060  F088  F02E   	movff	___fldiv@b+3,___fldiv@rem+3
  9625  0129CE  0E00               	movlw	0
  9626  0129D0  6E1F               	movwf	___fldiv@b^0,c
  9627  0129D2  0E00               	movlw	0
  9628  0129D4  6E20               	movwf	(___fldiv@b+1)^0,c
  9629  0129D6  0E00               	movlw	0
  9630  0129D8  6E21               	movwf	(___fldiv@b+2)^0,c
  9631  0129DA  0E00               	movlw	0
  9632  0129DC  6E22               	movwf	(___fldiv@b+3)^0,c
  9633  0129DE  0E00               	movlw	0
  9634  0129E0  6E32               	movwf	___fldiv@grs^0,c
  9635  0129E2  0E00               	movlw	0
  9636  0129E4  6E33               	movwf	(___fldiv@grs+1)^0,c
  9637  0129E6  0E00               	movlw	0
  9638  0129E8  6E34               	movwf	(___fldiv@grs+2)^0,c
  9639  0129EA  0E00               	movlw	0
  9640  0129EC  6E35               	movwf	(___fldiv@grs+3)^0,c
  9641  0129EE  0E00               	movlw	0
  9642  0129F0  6E37               	movwf	___fldiv@aexp^0,c
  9643  0129F2  D028               	goto	l1312
  9644  0129F4                     l4030:
  9645  0129F4  5037               	movf	___fldiv@aexp^0,w,c
  9646  0129F6  B4D8               	btfsc	status,2,c
  9647  0129F8  D011               	goto	l4038
  9648  0129FA  90D8               	bcf	status,0,c
  9649  0129FC  362B               	rlcf	___fldiv@rem^0,f,c
  9650  0129FE  362C               	rlcf	(___fldiv@rem+1)^0,f,c
  9651  012A00  362D               	rlcf	(___fldiv@rem+2)^0,f,c
  9652  012A02  362E               	rlcf	(___fldiv@rem+3)^0,f,c
  9653  012A04  90D8               	bcf	status,0,c
  9654  012A06  361F               	rlcf	___fldiv@b^0,f,c
  9655  012A08  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9656  012A0A  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9657  012A0C  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9658  012A0E  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9659  012A10  801F               	bsf	___fldiv@b^0,0,c
  9660  012A12  90D8               	bcf	status,0,c
  9661  012A14  3632               	rlcf	___fldiv@grs^0,f,c
  9662  012A16  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9663  012A18  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9664  012A1A  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9665  012A1C                     l4038:
  9666  012A1C  5023               	movf	___fldiv@a^0,w,c
  9667  012A1E  5C2B               	subwf	___fldiv@rem^0,w,c
  9668  012A20  5024               	movf	(___fldiv@a+1)^0,w,c
  9669  012A22  582C               	subwfb	(___fldiv@rem+1)^0,w,c
  9670  012A24  5025               	movf	(___fldiv@a+2)^0,w,c
  9671  012A26  582D               	subwfb	(___fldiv@rem+2)^0,w,c
  9672  012A28  5026               	movf	(___fldiv@a+3)^0,w,c
  9673  012A2A  582E               	subwfb	(___fldiv@rem+3)^0,w,c
  9674  012A2C  A0D8               	btfss	status,0,c
  9675  012A2E  D009               	goto	l4044
  9676  012A30  8C35               	bsf	(___fldiv@grs+3)^0,6,c
  9677  012A32  5023               	movf	___fldiv@a^0,w,c
  9678  012A34  5E2B               	subwf	___fldiv@rem^0,f,c
  9679  012A36  5024               	movf	(___fldiv@a+1)^0,w,c
  9680  012A38  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
  9681  012A3A  5025               	movf	(___fldiv@a+2)^0,w,c
  9682  012A3C  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
  9683  012A3E  5026               	movf	(___fldiv@a+3)^0,w,c
  9684  012A40  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
  9685  012A42                     l4044:
  9686  012A42  2A37               	incf	___fldiv@aexp^0,f,c
  9687  012A44                     l1312:
  9688  012A44  0E19               	movlw	25
  9689  012A46  6437               	cpfsgt	___fldiv@aexp^0,c
  9690  012A48  D7D5               	goto	l4030
  9691  012A4A  502B               	movf	___fldiv@rem^0,w,c
  9692  012A4C  102C               	iorwf	(___fldiv@rem+1)^0,w,c
  9693  012A4E  102D               	iorwf	(___fldiv@rem+2)^0,w,c
  9694  012A50  102E               	iorwf	(___fldiv@rem+3)^0,w,c
  9695  012A52  B4D8               	btfsc	status,2,c
  9696  012A54  D011               	goto	l4056
  9697  012A56  8032               	bsf	___fldiv@grs^0,0,c
  9698  012A58  D00F               	goto	l4056
  9699  012A5A                     l4050:
  9700  012A5A  90D8               	bcf	status,0,c
  9701  012A5C  361F               	rlcf	___fldiv@b^0,f,c
  9702  012A5E  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9703  012A60  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9704  012A62  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9705  012A64  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9706  012A66  801F               	bsf	___fldiv@b^0,0,c
  9707  012A68  90D8               	bcf	status,0,c
  9708  012A6A  3632               	rlcf	___fldiv@grs^0,f,c
  9709  012A6C  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9710  012A6E  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9711  012A70  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9712  012A72  0630               	decf	___fldiv@new_exp^0,f,c
  9713  012A74  A0D8               	btfss	status,0,c
  9714  012A76  0631               	decf	(___fldiv@new_exp+1)^0,f,c
  9715  012A78                     l4056:
  9716  012A78  AE21               	btfss	(___fldiv@b+2)^0,7,c
  9717  012A7A  D7EF               	goto	l4050
  9718  012A7C  0E00               	movlw	0
  9719  012A7E  6E37               	movwf	___fldiv@aexp^0,c
  9720  012A80  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  9721  012A82  D017               	goto	l1323
  9722  012A84  0EFF               	movlw	255
  9723  012A86  1432               	andwf	___fldiv@grs^0,w,c
  9724  012A88  6E27               	movwf	??___fldiv^0,c
  9725  012A8A  0EFF               	movlw	255
  9726  012A8C  1433               	andwf	(___fldiv@grs+1)^0,w,c
  9727  012A8E  6E28               	movwf	(??___fldiv+1)^0,c
  9728  012A90  0EFF               	movlw	255
  9729  012A92  1434               	andwf	(___fldiv@grs+2)^0,w,c
  9730  012A94  6E29               	movwf	(??___fldiv+2)^0,c
  9731  012A96  0E7F               	movlw	127
  9732  012A98  1435               	andwf	(___fldiv@grs+3)^0,w,c
  9733  012A9A  6E2A               	movwf	(??___fldiv+3)^0,c
  9734  012A9C  5027               	movf	??___fldiv^0,w,c
  9735  012A9E  1028               	iorwf	(??___fldiv+1)^0,w,c
  9736  012AA0  1029               	iorwf	(??___fldiv+2)^0,w,c
  9737  012AA2  102A               	iorwf	(??___fldiv+3)^0,w,c
  9738  012AA4  B4D8               	btfsc	status,2,c
  9739  012AA6  D003               	goto	l1324
  9740  012AA8                     u4530:
  9741  012AA8  0E01               	movlw	1
  9742  012AAA  6E37               	movwf	___fldiv@aexp^0,c
  9743  012AAC  D002               	goto	l1323
  9744  012AAE                     l1324:
  9745  012AAE  B01F               	btfsc	___fldiv@b^0,0,c
  9746  012AB0  D7FB               	goto	u4530
  9747  012AB2                     l1323:
  9748  012AB2  5037               	movf	___fldiv@aexp^0,w,c
  9749  012AB4  B4D8               	btfsc	status,2,c
  9750  012AB6  D027               	goto	l4076
  9751  012AB8  0E01               	movlw	1
  9752  012ABA  261F               	addwf	___fldiv@b^0,f,c
  9753  012ABC  0E00               	movlw	0
  9754  012ABE  2220               	addwfc	(___fldiv@b+1)^0,f,c
  9755  012AC0  2221               	addwfc	(___fldiv@b+2)^0,f,c
  9756  012AC2  2222               	addwfc	(___fldiv@b+3)^0,f,c
  9757  012AC4  A022               	btfss	(___fldiv@b+3)^0,0,c
  9758  012AC6  D01F               	goto	l4076
  9759  012AC8  0060  F07C  F027   	movff	___fldiv@b,??___fldiv
  9760  012ACE  0060  F080  F028   	movff	___fldiv@b+1,??___fldiv+1
  9761  012AD4  0060  F084  F029   	movff	___fldiv@b+2,??___fldiv+2
  9762  012ADA  0060  F088  F02A   	movff	___fldiv@b+3,??___fldiv+3
  9763  012AE0  342A               	rlcf	(??___fldiv+3)^0,w,c
  9764  012AE2  322A               	rrcf	(??___fldiv+3)^0,f,c
  9765  012AE4  3229               	rrcf	(??___fldiv+2)^0,f,c
  9766  012AE6  3228               	rrcf	(??___fldiv+1)^0,f,c
  9767  012AE8  3227               	rrcf	??___fldiv^0,f,c
  9768  012AEA  0060  F09C  F01F   	movff	??___fldiv,___fldiv@b
  9769  012AF0  0060  F0A0  F020   	movff	??___fldiv+1,___fldiv@b+1
  9770  012AF6  0060  F0A4  F021   	movff	??___fldiv+2,___fldiv@b+2
  9771  012AFC  0060  F0A8  F022   	movff	??___fldiv+3,___fldiv@b+3
  9772  012B02  4A30               	infsnz	___fldiv@new_exp^0,f,c
  9773  012B04  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
  9774  012B06                     l4076:
  9775  012B06  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9776  012B08  D010               	goto	l4080
  9777  012B0A  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9778  012B0C  E103               	bnz	u4570
  9779  012B0E  2830               	incf	___fldiv@new_exp^0,w,c
  9780  012B10  A0D8               	btfss	status,0,c
  9781  012B12  D00B               	goto	l4080
  9782  012B14                     u4570:
  9783  012B14  0E00               	movlw	0
  9784  012B16  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9785  012B18  6830               	setf	___fldiv@new_exp^0,c
  9786  012B1A  0E00               	movlw	0
  9787  012B1C  6E1F               	movwf	___fldiv@b^0,c
  9788  012B1E  0E00               	movlw	0
  9789  012B20  6E20               	movwf	(___fldiv@b+1)^0,c
  9790  012B22  0E00               	movlw	0
  9791  012B24  6E21               	movwf	(___fldiv@b+2)^0,c
  9792  012B26  0E00               	movlw	0
  9793  012B28  6E22               	movwf	(___fldiv@b+3)^0,c
  9794  012B2A                     l4080:
  9795  012B2A  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9796  012B2C  D005               	goto	u4580
  9797  012B2E  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9798  012B30  E111               	bnz	l4084
  9799  012B32  0430               	decf	___fldiv@new_exp^0,w,c
  9800  012B34  B0D8               	btfsc	status,0,c
  9801  012B36  D00E               	goto	l4084
  9802  012B38                     u4580:
  9803  012B38  0E00               	movlw	0
  9804  012B3A  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9805  012B3C  0E00               	movlw	0
  9806  012B3E  6E30               	movwf	___fldiv@new_exp^0,c
  9807  012B40  0E00               	movlw	0
  9808  012B42  6E1F               	movwf	___fldiv@b^0,c
  9809  012B44  0E00               	movlw	0
  9810  012B46  6E20               	movwf	(___fldiv@b+1)^0,c
  9811  012B48  0E00               	movlw	0
  9812  012B4A  6E21               	movwf	(___fldiv@b+2)^0,c
  9813  012B4C  0E00               	movlw	0
  9814  012B4E  6E22               	movwf	(___fldiv@b+3)^0,c
  9815  012B50  0E00               	movlw	0
  9816  012B52  6E2F               	movwf	___fldiv@sign^0,c
  9817  012B54                     l4084:
  9818  012B54  0060  F0C0  F036   	movff	___fldiv@new_exp,___fldiv@bexp
  9819  012B5A  A036               	btfss	___fldiv@bexp^0,0,c
  9820  012B5C  D002               	goto	l4090
  9821  012B5E  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9822  012B60  D001               	goto	l4092
  9823  012B62                     l4090:
  9824  012B62  9E21               	bcf	(___fldiv@b+2)^0,7,c
  9825  012B64                     l4092:
  9826  012B64  90D8               	bcf	status,0,c
  9827  012B66  3036               	rrcf	___fldiv@bexp^0,w,c
  9828  012B68  6E22               	movwf	(___fldiv@b+3)^0,c
  9829  012B6A  D6FC               	goto	l4006
  9830  012B6C                     __end_of___fldiv:
  9831                           	opt callstack 0
  9832                           
  9833 ;; *************** function ___awmod *****************
  9834 ;; Defined at:
  9835 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9836 ;; Parameters:    Size  Location     Type
  9837 ;;  dividend        2    0[COMRAM] int 
  9838 ;;  divisor         2    2[COMRAM] int 
  9839 ;; Auto vars:     Size  Location     Type
  9840 ;;  sign            1    5[COMRAM] unsigned char 
  9841 ;;  counter         1    4[COMRAM] unsigned char 
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  2    0[COMRAM] int 
  9844 ;; Registers used:
  9845 ;;		wreg, status,2, status,0
  9846 ;; Tracked objects:
  9847 ;;		On entry : 3F/0
  9848 ;;		On exit  : 3F/0
  9849 ;;		Unchanged: 3F/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9851 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;Total ram usage:        6 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; This function calls:
  9858 ;;		Nothing
  9859 ;; This function is called by:
  9860 ;;		_efgtoa
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           	psect	text31
  9865  013EB6                     __ptext31:
  9866                           	opt callstack 0
  9867  013EB6                     ___awmod:
  9868                           	opt callstack 25
  9869                           
  9870                           ; BSR set to: 0
  9871                           
  9872                           ;incstack = 0
  9873  013EB6  0E00               	movlw	0
  9874  013EB8  6E06               	movwf	___awmod@sign^0,c
  9875                           
  9876                           ; BSR set to: 0
  9877  013EBA  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  9878  013EBC  D006               	goto	l4288
  9879                           
  9880                           ; BSR set to: 0
  9881  013EBE  6C01               	negf	___awmod@dividend^0,c
  9882  013EC0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9883  013EC2  B0D8               	btfsc	status,0,c
  9884  013EC4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9885                           
  9886                           ; BSR set to: 0
  9887  013EC6  0E01               	movlw	1
  9888  013EC8  6E06               	movwf	___awmod@sign^0,c
  9889  013ECA                     l4288:
  9890                           
  9891                           ; BSR set to: 0
  9892  013ECA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9893  013ECC  D004               	goto	l4292
  9894                           
  9895                           ; BSR set to: 0
  9896  013ECE  6C03               	negf	___awmod@divisor^0,c
  9897  013ED0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9898  013ED2  B0D8               	btfsc	status,0,c
  9899  013ED4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9900  013ED6                     l4292:
  9901                           
  9902                           ; BSR set to: 0
  9903  013ED6  5003               	movf	___awmod@divisor^0,w,c
  9904  013ED8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9905  013EDA  B4D8               	btfsc	status,2,c
  9906  013EDC  D018               	goto	l4308
  9907                           
  9908                           ; BSR set to: 0
  9909  013EDE  0E01               	movlw	1
  9910  013EE0  6E05               	movwf	___awmod@counter^0,c
  9911  013EE2  D004               	goto	l4298
  9912  013EE4                     l4296:
  9913                           
  9914                           ; BSR set to: 0
  9915  013EE4  90D8               	bcf	status,0,c
  9916  013EE6  3603               	rlcf	___awmod@divisor^0,f,c
  9917  013EE8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9918  013EEA  2A05               	incf	___awmod@counter^0,f,c
  9919  013EEC                     l4298:
  9920                           
  9921                           ; BSR set to: 0
  9922  013EEC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9923  013EEE  D7FA               	goto	l4296
  9924  013EF0                     u4870:
  9925                           
  9926                           ; BSR set to: 0
  9927  013EF0  5003               	movf	___awmod@divisor^0,w,c
  9928  013EF2  5C01               	subwf	___awmod@dividend^0,w,c
  9929  013EF4  5004               	movf	(___awmod@divisor+1)^0,w,c
  9930  013EF6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9931  013EF8  A0D8               	btfss	status,0,c
  9932  013EFA  D004               	goto	l4304
  9933                           
  9934                           ; BSR set to: 0
  9935  013EFC  5003               	movf	___awmod@divisor^0,w,c
  9936  013EFE  5E01               	subwf	___awmod@dividend^0,f,c
  9937  013F00  5004               	movf	(___awmod@divisor+1)^0,w,c
  9938  013F02  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9939  013F04                     l4304:
  9940                           
  9941                           ; BSR set to: 0
  9942  013F04  90D8               	bcf	status,0,c
  9943  013F06  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9944  013F08  3203               	rrcf	___awmod@divisor^0,f,c
  9945                           
  9946                           ; BSR set to: 0
  9947  013F0A  2E05               	decfsz	___awmod@counter^0,f,c
  9948  013F0C  D7F1               	goto	u4870
  9949  013F0E                     l4308:
  9950                           
  9951                           ; BSR set to: 0
  9952  013F0E  5006               	movf	___awmod@sign^0,w,c
  9953  013F10  B4D8               	btfsc	status,2,c
  9954  013F12  D004               	goto	l4312
  9955                           
  9956                           ; BSR set to: 0
  9957  013F14  6C01               	negf	___awmod@dividend^0,c
  9958  013F16  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9959  013F18  B0D8               	btfsc	status,0,c
  9960  013F1A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9961  013F1C                     l4312:
  9962                           
  9963                           ; BSR set to: 0
  9964  013F1C  0060  F004  F001   	movff	___awmod@dividend,?___awmod
  9965  013F22  0060  F008  F002   	movff	___awmod@dividend+1,?___awmod+1
  9966                           
  9967                           ; BSR set to: 0
  9968  013F28  0012               	return		;funcret
  9969  013F2A                     __end_of___awmod:
  9970                           	opt callstack 0
  9971                           
  9972 ;; *************** function ___awdiv *****************
  9973 ;; Defined at:
  9974 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;  dividend        2    0[COMRAM] int 
  9977 ;;  divisor         2    2[COMRAM] int 
  9978 ;; Auto vars:     Size  Location     Type
  9979 ;;  quotient        2    6[COMRAM] int 
  9980 ;;  sign            1    5[COMRAM] unsigned char 
  9981 ;;  counter         1    4[COMRAM] unsigned char 
  9982 ;; Return value:  Size  Location     Type
  9983 ;;                  2    0[COMRAM] int 
  9984 ;; Registers used:
  9985 ;;		wreg, status,2, status,0
  9986 ;; Tracked objects:
  9987 ;;		On entry : 3F/0
  9988 ;;		On exit  : 3F/0
  9989 ;;		Unchanged: 3F/0
  9990 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9991 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9994 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9995 ;;Total ram usage:        8 bytes
  9996 ;; Hardware stack levels used:    1
  9997 ;; This function calls:
  9998 ;;		Nothing
  9999 ;; This function is called by:
 10000 ;;		_main_loop
 10001 ;;		_efgtoa
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text32
 10006  013D3C                     __ptext32:
 10007                           	opt callstack 0
 10008  013D3C                     ___awdiv:
 10009                           	opt callstack 25
 10010                           
 10011                           ; BSR set to: 0
 10012                           
 10013                           ; BSR set to: 0
 10014                           ;incstack = 0
 10015  013D3C  0E00               	movlw	0
 10016  013D3E  6E06               	movwf	___awdiv@sign^0,c
 10017                           
 10018                           ; BSR set to: 0
 10019  013D40  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10020  013D42  D006               	goto	l4244
 10021                           
 10022                           ; BSR set to: 0
 10023  013D44  6C03               	negf	___awdiv@divisor^0,c
 10024  013D46  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 10025  013D48  B0D8               	btfsc	status,0,c
 10026  013D4A  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 10027                           
 10028                           ; BSR set to: 0
 10029  013D4C  0E01               	movlw	1
 10030  013D4E  6E06               	movwf	___awdiv@sign^0,c
 10031  013D50                     l4244:
 10032                           
 10033                           ; BSR set to: 0
 10034  013D50  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
 10035  013D52  D006               	goto	l4250
 10036                           
 10037                           ; BSR set to: 0
 10038  013D54  6C01               	negf	___awdiv@dividend^0,c
 10039  013D56  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 10040  013D58  B0D8               	btfsc	status,0,c
 10041  013D5A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 10042                           
 10043                           ; BSR set to: 0
 10044  013D5C  0E01               	movlw	1
 10045  013D5E  1A06               	xorwf	___awdiv@sign^0,f,c
 10046  013D60                     l4250:
 10047                           
 10048                           ; BSR set to: 0
 10049  013D60  0E00               	movlw	0
 10050  013D62  6E08               	movwf	(___awdiv@quotient+1)^0,c
 10051  013D64  0E00               	movlw	0
 10052  013D66  6E07               	movwf	___awdiv@quotient^0,c
 10053                           
 10054                           ; BSR set to: 0
 10055  013D68  5003               	movf	___awdiv@divisor^0,w,c
 10056  013D6A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 10057  013D6C  B4D8               	btfsc	status,2,c
 10058  013D6E  D01C               	goto	l4272
 10059                           
 10060                           ; BSR set to: 0
 10061  013D70  0E01               	movlw	1
 10062  013D72  6E05               	movwf	___awdiv@counter^0,c
 10063  013D74  D004               	goto	l4258
 10064  013D76                     l4256:
 10065                           
 10066                           ; BSR set to: 0
 10067  013D76  90D8               	bcf	status,0,c
 10068  013D78  3603               	rlcf	___awdiv@divisor^0,f,c
 10069  013D7A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 10070  013D7C  2A05               	incf	___awdiv@counter^0,f,c
 10071  013D7E                     l4258:
 10072                           
 10073                           ; BSR set to: 0
 10074  013D7E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 10075  013D80  D7FA               	goto	l4256
 10076  013D82                     u4810:
 10077                           
 10078                           ; BSR set to: 0
 10079  013D82  90D8               	bcf	status,0,c
 10080  013D84  3607               	rlcf	___awdiv@quotient^0,f,c
 10081  013D86  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 10082                           
 10083                           ; BSR set to: 0
 10084  013D88  5003               	movf	___awdiv@divisor^0,w,c
 10085  013D8A  5C01               	subwf	___awdiv@dividend^0,w,c
 10086  013D8C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10087  013D8E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 10088  013D90  A0D8               	btfss	status,0,c
 10089  013D92  D005               	goto	l4268
 10090                           
 10091                           ; BSR set to: 0
 10092  013D94  5003               	movf	___awdiv@divisor^0,w,c
 10093  013D96  5E01               	subwf	___awdiv@dividend^0,f,c
 10094  013D98  5004               	movf	(___awdiv@divisor+1)^0,w,c
 10095  013D9A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 10096                           
 10097                           ; BSR set to: 0
 10098  013D9C  8007               	bsf	___awdiv@quotient^0,0,c
 10099  013D9E                     l4268:
 10100                           
 10101                           ; BSR set to: 0
 10102  013D9E  90D8               	bcf	status,0,c
 10103  013DA0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 10104  013DA2  3203               	rrcf	___awdiv@divisor^0,f,c
 10105                           
 10106                           ; BSR set to: 0
 10107  013DA4  2E05               	decfsz	___awdiv@counter^0,f,c
 10108  013DA6  D7ED               	goto	u4810
 10109  013DA8                     l4272:
 10110                           
 10111                           ; BSR set to: 0
 10112  013DA8  5006               	movf	___awdiv@sign^0,w,c
 10113  013DAA  B4D8               	btfsc	status,2,c
 10114  013DAC  D004               	goto	l4276
 10115                           
 10116                           ; BSR set to: 0
 10117  013DAE  6C07               	negf	___awdiv@quotient^0,c
 10118  013DB0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 10119  013DB2  B0D8               	btfsc	status,0,c
 10120  013DB4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 10121  013DB6                     l4276:
 10122                           
 10123                           ; BSR set to: 0
 10124  013DB6  0060  F01C  F001   	movff	___awdiv@quotient,?___awdiv
 10125  013DBC  0060  F020  F002   	movff	___awdiv@quotient+1,?___awdiv+1
 10126                           
 10127                           ; BSR set to: 0
 10128  013DC2  0012               	return		;funcret
 10129  013DC4                     __end_of___awdiv:
 10130                           	opt callstack 0
 10131                           
 10132 ;; *************** function _atoi *****************
 10133 ;; Defined at:
 10134 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
 10135 ;; Parameters:    Size  Location     Type
 10136 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10137 ;;		 -> STR_13(17), STR_12(20), STR_11(20), STR_10(20), 
 10138 ;;		 -> STR_9(20), STR_8(17), STR_7(17), 
 10139 ;; Auto vars:     Size  Location     Type
 10140 ;;  n               2   20[COMRAM] int 
 10141 ;;  neg             2   13[COMRAM] int 
 10142 ;; Return value:  Size  Location     Type
 10143 ;;                  2    7[COMRAM] int 
 10144 ;; Registers used:
 10145 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10146 ;; Tracked objects:
 10147 ;;		On entry : 3F/0
 10148 ;;		On exit  : 0/0
 10149 ;;		Unchanged: 0/0
 10150 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10151 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10152 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10153 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10154 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10155 ;;Total ram usage:       15 bytes
 10156 ;; Hardware stack levels used:    1
 10157 ;; Hardware stack levels required when called:    1
 10158 ;; This function calls:
 10159 ;;		___wmul
 10160 ;;		_isdigit
 10161 ;;		_isspace
 10162 ;; This function is called by:
 10163 ;;		_vfpfcnvrt
 10164 ;; This function uses a non-reentrant model
 10165 ;;
 10166                           
 10167                           	psect	text33
 10168  012D56                     __ptext33:
 10169                           	opt callstack 0
 10170  012D56                     _atoi:
 10171                           	opt callstack 25
 10172                           
 10173                           ; BSR set to: 0
 10174                           
 10175                           ; BSR set to: 0
 10176                           ;incstack = 0
 10177  012D56  0E00               	movlw	0
 10178  012D58  6E16               	movwf	(atoi@n+1)^0,c
 10179  012D5A  0E00               	movlw	0
 10180  012D5C  6E15               	movwf	atoi@n^0,c
 10181  012D5E  0E00               	movlw	0
 10182  012D60  6E0F               	movwf	(atoi@neg+1)^0,c
 10183  012D62  0E00               	movlw	0
 10184  012D64  6E0E               	movwf	atoi@neg^0,c
 10185  012D66  D002               	goto	l4738
 10186  012D68                     l4736:
 10187                           
 10188                           ; BSR set to: 0
 10189  012D68  4A08               	infsnz	atoi@s^0,f,c
 10190  012D6A  2A09               	incf	(atoi@s+1)^0,f,c
 10191  012D6C                     l4738:
 10192                           
 10193                           ; BSR set to: 0
 10194  012D6C  0E01               	movlw	1
 10195  012D6E  6E14               	movwf	_atoi$1131^0,c
 10196                           
 10197                           ; BSR set to: 0
 10198  012D70  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10199  012D76  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10200  012D7C                     	if	0	;tblptru may be non-zero
 10201  012D7C                     	endif
 10202  012D7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10203  012D7C  0E00               	movlw	low (__mediumconst shr (0+16))
 10204  012D7E  6EF8               	movwf	tblptru,c
 10205  012D80                     	endif
 10206  012D80  0008               	tblrd		*
 10207  012D82  50F5               	movf	tablat,w,c
 10208  012D84  0A20               	xorlw	32
 10209  012D86  B4D8               	btfsc	status,2,c
 10210  012D88  D01C               	goto	l4746
 10211                           
 10212                           ; BSR set to: 0
 10213  012D8A  0EF7               	movlw	247
 10214  012D8C  6E0A               	movwf	??_atoi^0,c
 10215  012D8E  0EFF               	movlw	255
 10216  012D90  6E0B               	movwf	(??_atoi+1)^0,c
 10217  012D92  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10218  012D98  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10219  012D9E                     	if	0	;tblptru may be non-zero
 10220  012D9E                     	endif
 10221  012D9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10222  012D9E  0E00               	movlw	low (__mediumconst shr (0+16))
 10223  012DA0  6EF8               	movwf	tblptru,c
 10224  012DA2                     	endif
 10225  012DA2  0008               	tblrd		*
 10226  012DA4  50F5               	movf	tablat,w,c
 10227  012DA6  6E0C               	movwf	(??_atoi+2)^0,c
 10228  012DA8  6A0D               	clrf	(??_atoi+3)^0,c
 10229  012DAA  500A               	movf	??_atoi^0,w,c
 10230  012DAC  260C               	addwf	(??_atoi+2)^0,f,c
 10231  012DAE  500B               	movf	(??_atoi+1)^0,w,c
 10232  012DB0  220D               	addwfc	(??_atoi+3)^0,f,c
 10233  012DB2  500D               	movf	(??_atoi+3)^0,w,c
 10234  012DB4  E104               	bnz	u5640
 10235  012DB6  0E05               	movlw	5
 10236  012DB8  5C0C               	subwf	(??_atoi+2)^0,w,c
 10237  012DBA  A0D8               	btfss	status,0,c
 10238  012DBC  D002               	goto	l4746
 10239  012DBE                     u5640:
 10240                           
 10241                           ; BSR set to: 0
 10242  012DBE  0E00               	movlw	0
 10243  012DC0  6E14               	movwf	_atoi$1131^0,c
 10244  012DC2                     l4746:
 10245                           
 10246                           ; BSR set to: 0
 10247  012DC2  0060  F050  F010   	movff	_atoi$1131,_atoi$1130
 10248  012DC8  6A11               	clrf	(_atoi$1130+1)^0,c
 10249                           
 10250                           ; BSR set to: 0
 10251  012DCA  5010               	movf	_atoi$1130^0,w,c
 10252  012DCC  1011               	iorwf	(_atoi$1130+1)^0,w,c
 10253  012DCE  B4D8               	btfsc	status,2,c
 10254  012DD0  D008               	goto	l4756
 10255  012DD2  D7CA               	goto	l4736
 10256  012DD4                     l4752:
 10257                           
 10258                           ; BSR set to: 0
 10259  012DD4  0E00               	movlw	0
 10260  012DD6  6E0F               	movwf	(atoi@neg+1)^0,c
 10261  012DD8  0E01               	movlw	1
 10262  012DDA  6E0E               	movwf	atoi@neg^0,c
 10263  012DDC                     l4754:
 10264  012DDC  4A08               	infsnz	atoi@s^0,f,c
 10265  012DDE  2A09               	incf	(atoi@s+1)^0,f,c
 10266  012DE0  D038               	goto	l4762
 10267  012DE2                     l4756:
 10268                           
 10269                           ; BSR set to: 0
 10270  012DE2  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10271  012DE8  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10272  012DEE                     	if	0	;tblptru may be non-zero
 10273  012DEE                     	endif
 10274  012DEE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10275  012DEE  0E00               	movlw	low (__mediumconst shr (0+16))
 10276  012DF0  6EF8               	movwf	tblptru,c
 10277  012DF2                     	endif
 10278  012DF2  0008               	tblrd		*
 10279  012DF4  50F5               	movf	tablat,w,c
 10280  012DF6  6E0A               	movwf	??_atoi^0,c
 10281  012DF8  6A0B               	clrf	(??_atoi+1)^0,c
 10282                           
 10283                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10284                           ; Switch size 1, requested type "simple"
 10285                           ; Number of cases is 1, Range of values is 0 to 0
 10286                           ; switch strategies available:
 10287                           ; Name         Instructions Cycles
 10288                           ; simple_byte            4     3 (average)
 10289                           ;	Chosen strategy is simple_byte
 10290  012DFA  500B               	movf	(??_atoi+1)^0,w,c
 10291  012DFC  0A00               	xorlw	0	; case 0
 10292  012DFE  A4D8               	btfss	status,2,c
 10293  012E00  D028               	goto	l4762
 10294                           
 10295                           ; BSR set to: 0
 10296                           ; Switch size 1, requested type "simple"
 10297                           ; Number of cases is 2, Range of values is 43 to 45
 10298                           ; switch strategies available:
 10299                           ; Name         Instructions Cycles
 10300                           ; simple_byte            7     4 (average)
 10301                           ;	Chosen strategy is simple_byte
 10302  012E02  500A               	movf	??_atoi^0,w,c
 10303  012E04  0A2B               	xorlw	43	; case 43
 10304  012E06  B4D8               	btfsc	status,2,c
 10305  012E08  D7E9               	goto	l4754
 10306  012E0A  0A06               	xorlw	6	; case 45
 10307  012E0C  B4D8               	btfsc	status,2,c
 10308  012E0E  D7E2               	goto	l4752
 10309  012E10  D020               	goto	l4762
 10310  012E12                     l4758:
 10311  012E12  0060  F054  F001   	movff	atoi@n,___wmul@multiplier
 10312  012E18  0060  F058  F002   	movff	atoi@n+1,___wmul@multiplier+1
 10313  012E1E  0E00               	movlw	0
 10314  012E20  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10315  012E22  0E0A               	movlw	10
 10316  012E24  6E03               	movwf	___wmul@multiplicand^0,c
 10317  012E26  EC03  F0A2         	call	___wmul	;wreg free
 10318  012E2A  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10319  012E30  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10320  012E36                     	if	0	;tblptru may be non-zero
 10321  012E36                     	endif
 10322  012E36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10323  012E36  0E00               	movlw	low (__mediumconst shr (0+16))
 10324  012E38  6EF8               	movwf	tblptru,c
 10325  012E3A                     	endif
 10326  012E3A  0008               	tblrd		*
 10327  012E3C  50F5               	movf	tablat,w,c
 10328  012E3E  5E01               	subwf	?___wmul^0,f,c
 10329  012E40  0E00               	movlw	0
 10330  012E42  5A02               	subwfb	(?___wmul+1)^0,f,c
 10331  012E44  0E30               	movlw	48
 10332  012E46  2401               	addwf	?___wmul^0,w,c
 10333  012E48  6E15               	movwf	atoi@n^0,c
 10334  012E4A  0E00               	movlw	0
 10335  012E4C  2002               	addwfc	(?___wmul+1)^0,w,c
 10336  012E4E  6E16               	movwf	(atoi@n+1)^0,c
 10337  012E50  D7C5               	goto	l4754
 10338  012E52                     l4762:
 10339  012E52  0ED0               	movlw	208
 10340  012E54  6E0A               	movwf	??_atoi^0,c
 10341  012E56  0EFF               	movlw	255
 10342  012E58  6E0B               	movwf	(??_atoi+1)^0,c
 10343  012E5A  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10344  012E60  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
 10345  012E66                     	if	0	;tblptru may be non-zero
 10346  012E66                     	endif
 10347  012E66                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10348  012E66  0E00               	movlw	low (__mediumconst shr (0+16))
 10349  012E68  6EF8               	movwf	tblptru,c
 10350  012E6A                     	endif
 10351  012E6A  0008               	tblrd		*
 10352  012E6C  50F5               	movf	tablat,w,c
 10353  012E6E  6E0C               	movwf	(??_atoi+2)^0,c
 10354  012E70  6A0D               	clrf	(??_atoi+3)^0,c
 10355  012E72  500A               	movf	??_atoi^0,w,c
 10356  012E74  260C               	addwf	(??_atoi+2)^0,f,c
 10357  012E76  500B               	movf	(??_atoi+1)^0,w,c
 10358  012E78  220D               	addwfc	(??_atoi+3)^0,f,c
 10359  012E7A  500D               	movf	(??_atoi+3)^0,w,c
 10360  012E7C  E106               	bnz	u5660
 10361  012E7E  0E0A               	movlw	10
 10362  012E80  5C0C               	subwf	(??_atoi+2)^0,w,c
 10363  012E82  B0D8               	btfsc	status,0,c
 10364  012E84  D002               	goto	u5660
 10365  012E86  0E01               	movlw	1
 10366  012E88  D001               	goto	u5670
 10367  012E8A                     u5660:
 10368  012E8A  0E00               	movlw	0
 10369  012E8C                     u5670:
 10370  012E8C  6E12               	movwf	_atoi$1132^0,c
 10371  012E8E  6A13               	clrf	(_atoi$1132+1)^0,c
 10372  012E90  5012               	movf	_atoi$1132^0,w,c
 10373  012E92  1013               	iorwf	(_atoi$1132+1)^0,w,c
 10374  012E94  A4D8               	btfss	status,2,c
 10375  012E96  D7BD               	goto	l4758
 10376  012E98  500E               	movf	atoi@neg^0,w,c
 10377  012E9A  100F               	iorwf	(atoi@neg+1)^0,w,c
 10378  012E9C  A4D8               	btfss	status,2,c
 10379  012E9E  D011               	goto	l1438
 10380  012EA0  0060  F054  F00A   	movff	atoi@n,??_atoi
 10381  012EA6  0060  F058  F00B   	movff	atoi@n+1,??_atoi+1
 10382  012EAC  1E0A               	comf	??_atoi^0,f,c
 10383  012EAE  1E0B               	comf	(??_atoi+1)^0,f,c
 10384  012EB0  4A0A               	infsnz	??_atoi^0,f,c
 10385  012EB2  2A0B               	incf	(??_atoi+1)^0,f,c
 10386  012EB4  0060  F028  F008   	movff	??_atoi,?_atoi
 10387  012EBA  0060  F02C  F009   	movff	??_atoi+1,?_atoi+1
 10388  012EC0  0012               	return	
 10389  012EC2                     l1438:
 10390  012EC2  0060  F054  F008   	movff	atoi@n,?_atoi
 10391  012EC8  0060  F058  F009   	movff	atoi@n+1,?_atoi+1
 10392  012ECE  0012               	return		;funcret
 10393  012ED0                     __end_of_atoi:
 10394                           	opt callstack 0
 10395                           
 10396 ;; *************** function _isspace *****************
 10397 ;; Defined at:
 10398 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10399 ;; Parameters:    Size  Location     Type
 10400 ;;  c               2    0[COMRAM] int 
 10401 ;; Auto vars:     Size  Location     Type
 10402 ;;		None
 10403 ;; Return value:  Size  Location     Type
 10404 ;;                  2    0[COMRAM] int 
 10405 ;; Registers used:
 10406 ;;		wreg, status,2, status,0
 10407 ;; Tracked objects:
 10408 ;;		On entry : 0/0
 10409 ;;		On exit  : 0/0
 10410 ;;		Unchanged: 0/0
 10411 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10413 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10414 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10415 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10416 ;;Total ram usage:        7 bytes
 10417 ;; Hardware stack levels used:    1
 10418 ;; This function calls:
 10419 ;;		Nothing
 10420 ;; This function is called by:
 10421 ;;		_atoi
 10422 ;; This function uses a non-reentrant model
 10423 ;;
 10424                           
 10425                           	psect	text34
 10426  01427A                     __ptext34:
 10427                           	opt callstack 0
 10428  01427A                     _isspace:
 10429                           	opt callstack 25
 10430                           
 10431                           ;incstack = 0
 10432  01427A  0E01               	movlw	1
 10433  01427C  6E07               	movwf	_isspace$1161^0,c
 10434  01427E  0E20               	movlw	32
 10435  014280  1801               	xorwf	isspace@c^0,w,c
 10436  014282  1002               	iorwf	(isspace@c+1)^0,w,c
 10437  014284  B4D8               	btfsc	status,2,c
 10438  014286  D016               	goto	l4414
 10439  014288  0EF7               	movlw	247
 10440  01428A  6E03               	movwf	??_isspace^0,c
 10441  01428C  0EFF               	movlw	255
 10442  01428E  6E04               	movwf	(??_isspace+1)^0,c
 10443  014290  0060  F004  F005   	movff	isspace@c,??_isspace+2
 10444  014296  0060  F008  F006   	movff	isspace@c+1,??_isspace+3
 10445  01429C  5003               	movf	??_isspace^0,w,c
 10446  01429E  2605               	addwf	(??_isspace+2)^0,f,c
 10447  0142A0  5004               	movf	(??_isspace+1)^0,w,c
 10448  0142A2  2206               	addwfc	(??_isspace+3)^0,f,c
 10449  0142A4  5006               	movf	(??_isspace+3)^0,w,c
 10450  0142A6  E104               	bnz	u5070
 10451  0142A8  0E05               	movlw	5
 10452  0142AA  5C05               	subwf	(??_isspace+2)^0,w,c
 10453  0142AC  A0D8               	btfss	status,0,c
 10454  0142AE  D002               	goto	l4414
 10455  0142B0                     u5070:
 10456  0142B0  0E00               	movlw	0
 10457  0142B2  6E07               	movwf	_isspace$1161^0,c
 10458  0142B4                     l4414:
 10459  0142B4  0060  F01C  F001   	movff	_isspace$1161,?_isspace
 10460  0142BA  6A02               	clrf	(?_isspace+1)^0,c
 10461  0142BC  0012               	return		;funcret
 10462  0142BE                     __end_of_isspace:
 10463                           	opt callstack 0
 10464                           
 10465 ;; *************** function _isdigit *****************
 10466 ;; Defined at:
 10467 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10468 ;; Parameters:    Size  Location     Type
 10469 ;;  c               2    0[COMRAM] int 
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;		None
 10472 ;; Return value:  Size  Location     Type
 10473 ;;                  2    0[COMRAM] int 
 10474 ;; Registers used:
 10475 ;;		wreg, status,2, status,0
 10476 ;; Tracked objects:
 10477 ;;		On entry : 0/0
 10478 ;;		On exit  : 0/0
 10479 ;;		Unchanged: 0/0
 10480 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10481 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10483 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10484 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10485 ;;Total ram usage:        6 bytes
 10486 ;; Hardware stack levels used:    1
 10487 ;; This function calls:
 10488 ;;		Nothing
 10489 ;; This function is called by:
 10490 ;;		_vfpfcnvrt
 10491 ;;		_atoi
 10492 ;; This function uses a non-reentrant model
 10493 ;;
 10494                           
 10495                           	psect	text35
 10496  0143A0                     __ptext35:
 10497                           	opt callstack 0
 10498  0143A0                     _isdigit:
 10499                           	opt callstack 26
 10500                           
 10501                           ;incstack = 0
 10502  0143A0  0ED0               	movlw	208
 10503  0143A2  6E03               	movwf	??_isdigit^0,c
 10504  0143A4  0EFF               	movlw	255
 10505  0143A6  6E04               	movwf	(??_isdigit+1)^0,c
 10506  0143A8  0060  F004  F005   	movff	isdigit@c,??_isdigit+2
 10507  0143AE  0060  F008  F006   	movff	isdigit@c+1,??_isdigit+3
 10508  0143B4  5003               	movf	??_isdigit^0,w,c
 10509  0143B6  2605               	addwf	(??_isdigit+2)^0,f,c
 10510  0143B8  5004               	movf	(??_isdigit+1)^0,w,c
 10511  0143BA  2206               	addwfc	(??_isdigit+3)^0,f,c
 10512  0143BC  5006               	movf	(??_isdigit+3)^0,w,c
 10513  0143BE  E106               	bnz	u4350
 10514  0143C0  0E0A               	movlw	10
 10515  0143C2  5C05               	subwf	(??_isdigit+2)^0,w,c
 10516  0143C4  B0D8               	btfsc	status,0,c
 10517  0143C6  D002               	goto	u4350
 10518  0143C8  0E01               	movlw	1
 10519  0143CA  D001               	goto	u4360
 10520  0143CC                     u4350:
 10521  0143CC  0E00               	movlw	0
 10522  0143CE                     u4360:
 10523  0143CE  6E01               	movwf	?_isdigit^0,c
 10524  0143D0  6A02               	clrf	(?_isdigit+1)^0,c
 10525  0143D2  0012               	return		;funcret
 10526  0143D4                     __end_of_isdigit:
 10527                           	opt callstack 0
 10528                           
 10529 ;; *************** function ___wmul *****************
 10530 ;; Defined at:
 10531 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10532 ;; Parameters:    Size  Location     Type
 10533 ;;  multiplier      2    0[COMRAM] unsigned int 
 10534 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10535 ;; Auto vars:     Size  Location     Type
 10536 ;;  product         2    4[COMRAM] unsigned int 
 10537 ;; Return value:  Size  Location     Type
 10538 ;;                  2    0[COMRAM] unsigned int 
 10539 ;; Registers used:
 10540 ;;		wreg, status,2, status,0, prodl, prodh
 10541 ;; Tracked objects:
 10542 ;;		On entry : 0/0
 10543 ;;		On exit  : 0/0
 10544 ;;		Unchanged: 0/0
 10545 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10546 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10547 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10549 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10550 ;;Total ram usage:        6 bytes
 10551 ;; Hardware stack levels used:    1
 10552 ;; This function calls:
 10553 ;;		Nothing
 10554 ;; This function is called by:
 10555 ;;		_atoi
 10556 ;; This function uses a non-reentrant model
 10557 ;;
 10558                           
 10559                           	psect	text36
 10560  014406                     __ptext36:
 10561                           	opt callstack 0
 10562  014406                     ___wmul:
 10563                           	opt callstack 25
 10564                           
 10565                           ;incstack = 0
 10566  014406  5001               	movf	___wmul@multiplier^0,w,c
 10567  014408  0203               	mulwf	___wmul@multiplicand^0,c
 10568  01440A  006F FFCC  F005    	movff	prodl,___wmul@product
 10569  014410  006F FFD0  F006    	movff	prodh,___wmul@product+1
 10570  014416  5001               	movf	___wmul@multiplier^0,w,c
 10571  014418  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10572  01441A  50F3               	movf	243,w,c
 10573  01441C  2606               	addwf	(___wmul@product+1)^0,f,c
 10574  01441E  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10575  014420  0203               	mulwf	___wmul@multiplicand^0,c
 10576  014422  50F3               	movf	243,w,c
 10577  014424  2606               	addwf	(___wmul@product+1)^0,f,c
 10578  014426  0060  F014  F001   	movff	___wmul@product,?___wmul
 10579  01442C  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
 10580  014432  0012               	return		;funcret
 10581  014434                     __end_of___wmul:
 10582                           	opt callstack 0
 10583                           
 10584 ;; *************** function _setLED *****************
 10585 ;; Defined at:
 10586 ;;		line 117 in file "main.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;  mod             4    0[BANK0 ] long 
 10589 ;;  step            4    4[BANK0 ] long 
 10590 ;; Auto vars:     Size  Location     Type
 10591 ;;  shift           4   58[BANK0 ] long 
 10592 ;;  sr              4   54[BANK0 ] long 
 10593 ;;  sb              4   50[BANK0 ] long 
 10594 ;;  sg              4   46[BANK0 ] long 
 10595 ;;  b               4   42[BANK0 ] long 
 10596 ;;  g               4   38[BANK0 ] long 
 10597 ;;  r               4   16[BANK0 ] long 
 10598 ;;  trueMod         2   36[BANK0 ] unsigned short 
 10599 ;; Return value:  Size  Location     Type
 10600 ;;                  1    wreg      void 
 10601 ;; Registers used:
 10602 ;;		wreg, status,2, status,0, cstack
 10603 ;; Tracked objects:
 10604 ;;		On entry : 3F/0
 10605 ;;		On exit  : 0/0
 10606 ;;		Unchanged: 0/0
 10607 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10608 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10609 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10610 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10611 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10612 ;;Total ram usage:       62 bytes
 10613 ;; Hardware stack levels used:    1
 10614 ;; Hardware stack levels required when called:    1
 10615 ;; This function calls:
 10616 ;;		___aldiv
 10617 ;;		___almod
 10618 ;;		___flge
 10619 ;;		___lmul
 10620 ;; This function is called by:
 10621 ;;		_main_loop
 10622 ;; This function uses a non-reentrant model
 10623 ;;
 10624                           
 10625                           	psect	text37
 10626  0116CE                     __ptext37:
 10627                           	opt callstack 0
 10628  0116CE                     _setLED:
 10629                           	opt callstack 28
 10630                           
 10631                           ; BSR set to: 0
 10632                           ;main.c: 118:     uint16_t trueMod = (mod < 0 ? 0 : (mod > 4095 ? 4095 : mod));
 10633                           
 10634                           ;incstack = 0
 10635  0116CE  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10636  0116D0  D02B               	goto	l5114
 10637                           
 10638                           ; BSR set to: 0
 10639  0116D2  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10640  0116D4  D007               	goto	u6320
 10641  0116D6  5163               	movf	(setLED@mod+3)& (0+255),w,b
 10642  0116D8  1162               	iorwf	(setLED@mod+2)& (0+255),w,b
 10643  0116DA  E111               	bnz	l5110
 10644  0116DC  0E10               	movlw	16
 10645  0116DE  5D61               	subwf	(setLED@mod+1)& (0+255),w,b
 10646  0116E0  B0D8               	btfsc	status,0,c
 10647  0116E2  D00D               	goto	l5110
 10648  0116E4                     u6320:
 10649                           
 10650                           ; BSR set to: 0
 10651  0116E4  0060  F180  F078   	movff	setLED@mod,_setLED$290
 10652  0116EA  0060  F184  F079   	movff	setLED@mod+1,_setLED$290+1
 10653  0116F0  0060  F188  F07A   	movff	setLED@mod+2,_setLED$290+2
 10654  0116F6  0060  F18C  F07B   	movff	setLED@mod+3,_setLED$290+3
 10655  0116FC  D008               	goto	l5112
 10656  0116FE                     l5110:
 10657                           
 10658                           ; BSR set to: 0
 10659  0116FE  0EFF               	movlw	255
 10660  011700  6F78               	movwf	_setLED$290& (0+255),b
 10661  011702  0E0F               	movlw	15
 10662  011704  6F79               	movwf	(_setLED$290+1)& (0+255),b
 10663  011706  0E00               	movlw	0
 10664  011708  6F7A               	movwf	(_setLED$290+2)& (0+255),b
 10665  01170A  0E00               	movlw	0
 10666  01170C  6F7B               	movwf	(_setLED$290+3)& (0+255),b
 10667  01170E                     l5112:
 10668                           
 10669                           ; BSR set to: 0
 10670  01170E  0060  F1E0  F074   	movff	_setLED$290,_setLED$289
 10671  011714  0060  F1E4  F075   	movff	_setLED$290+1,_setLED$289+1
 10672  01171A  0060  F1E8  F076   	movff	_setLED$290+2,_setLED$289+2
 10673  011720  0060  F1EC  F077   	movff	_setLED$290+3,_setLED$289+3
 10674  011726  D008               	goto	l5116
 10675  011728                     l5114:
 10676                           
 10677                           ; BSR set to: 0
 10678  011728  0E00               	movlw	0
 10679  01172A  6F74               	movwf	_setLED$289& (0+255),b
 10680  01172C  0E00               	movlw	0
 10681  01172E  6F75               	movwf	(_setLED$289+1)& (0+255),b
 10682  011730  0E00               	movlw	0
 10683  011732  6F76               	movwf	(_setLED$289+2)& (0+255),b
 10684  011734  0E00               	movlw	0
 10685  011736  6F77               	movwf	(_setLED$289+3)& (0+255),b
 10686  011738                     l5116:
 10687                           
 10688                           ; BSR set to: 0
 10689  011738  0060  F1D0  F084   	movff	_setLED$289,setLED@trueMod
 10690  01173E  0060  F1D4  F085   	movff	_setLED$289+1,setLED@trueMod+1
 10691                           
 10692                           ; BSR set to: 0
 10693                           ;main.c: 119:     int32_t r = trueMod;
 10694  011744  0060  F210  F070   	movff	setLED@trueMod,setLED@r
 10695  01174A  0060  F214  F071   	movff	setLED@trueMod+1,setLED@r+1
 10696  011750  6B72               	clrf	(setLED@r+2)& (0+255),b
 10697  011752  6B73               	clrf	(setLED@r+3)& (0+255),b
 10698                           
 10699                           ; BSR set to: 0
 10700                           ;main.c: 120:     int32_t g = 2047 - trueMod / 2;
 10701  011754  90D8               	bcf	status,0,c
 10702  011756  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10703  011758  6F69               	movwf	(??_setLED+1)& (0+255),b
 10704  01175A  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10705  01175C  6F68               	movwf	??_setLED& (0+255),b
 10706  01175E  0EFF               	movlw	255
 10707  011760  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10708  011762  0E07               	movlw	7
 10709  011764  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10710  011766  5168               	movf	??_setLED& (0+255),w,b
 10711  011768  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10712  01176A  5169               	movf	(??_setLED+1)& (0+255),w,b
 10713  01176C  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10714  01176E  0060  F1A8  F086   	movff	??_setLED+2,setLED@g
 10715  011774  0060  F1AC  F087   	movff	??_setLED+3,setLED@g+1
 10716  01177A  6B88               	clrf	(setLED@g+2)& (0+255),b
 10717  01177C  6B89               	clrf	(setLED@g+3)& (0+255),b
 10718                           
 10719                           ; BSR set to: 0
 10720                           ;main.c: 121:     int32_t b = 2047 - trueMod / 2;
 10721  01177E  90D8               	bcf	status,0,c
 10722  011780  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10723  011782  6F69               	movwf	(??_setLED+1)& (0+255),b
 10724  011784  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10725  011786  6F68               	movwf	??_setLED& (0+255),b
 10726  011788  0EFF               	movlw	255
 10727  01178A  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10728  01178C  0E07               	movlw	7
 10729  01178E  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10730  011790  5168               	movf	??_setLED& (0+255),w,b
 10731  011792  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10732  011794  5169               	movf	(??_setLED+1)& (0+255),w,b
 10733  011796  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10734  011798  0060  F1A8  F08A   	movff	??_setLED+2,setLED@b
 10735  01179E  0060  F1AC  F08B   	movff	??_setLED+3,setLED@b+1
 10736  0117A4  6B8C               	clrf	(setLED@b+2)& (0+255),b
 10737  0117A6  6B8D               	clrf	(setLED@b+3)& (0+255),b
 10738                           
 10739                           ; BSR set to: 0
 10740                           ;main.c: 123:     int32_t shift;;main.c: 124:     if (step < 25000) shift = step / 40;
 10741  0117A8  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10742  0117AA  D009               	goto	u6330
 10743  0117AC  5167               	movf	(setLED@step+3)& (0+255),w,b
 10744  0117AE  1166               	iorwf	(setLED@step+2)& (0+255),w,b
 10745  0117B0  E11D               	bnz	l5128
 10746  0117B2  0EA8               	movlw	168
 10747  0117B4  5D64               	subwf	setLED@step& (0+255),w,b
 10748  0117B6  0E61               	movlw	97
 10749  0117B8  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10750  0117BA  B0D8               	btfsc	status,0,c
 10751  0117BC  D017               	goto	l5128
 10752  0117BE                     u6330:
 10753                           
 10754                           ; BSR set to: 0
 10755  0117BE  0060  F190  F00D   	movff	setLED@step,___aldiv@dividend
 10756  0117C4  0060  F194  F00E   	movff	setLED@step+1,___aldiv@dividend+1
 10757  0117CA  0060  F198  F00F   	movff	setLED@step+2,___aldiv@dividend+2
 10758  0117D0  0060  F19C  F010   	movff	setLED@step+3,___aldiv@dividend+3
 10759  0117D6  0E28               	movlw	40
 10760  0117D8  6E11               	movwf	___aldiv@divisor^0,c
 10761  0117DA  0E00               	movlw	0
 10762  0117DC  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10763  0117DE  0E00               	movlw	0
 10764  0117E0  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10765  0117E2  0E00               	movlw	0
 10766  0117E4  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10767  0117E6  ECF5  F09A         	call	___aldiv	;wreg free
 10768  0117EA  D039               	goto	L15
 10769  0117EC                     l5128:
 10770                           
 10771                           ; BSR set to: 0
 10772  0117EC  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10773  0117EE  D00A               	goto	u6340
 10774  0117F0  5167               	movf	(setLED@step+3)& (0+255),w,b
 10775  0117F2  E11F               	bnz	l5132
 10776  0117F4  0EF8               	movlw	248
 10777  0117F6  5D64               	subwf	setLED@step& (0+255),w,b
 10778  0117F8  0E24               	movlw	36
 10779  0117FA  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10780  0117FC  0E01               	movlw	1
 10781  0117FE  5966               	subwfb	(setLED@step+2)& (0+255),w,b
 10782  011800  B0D8               	btfsc	status,0,c
 10783  011802  D017               	goto	l5132
 10784  011804                     u6340:
 10785                           
 10786                           ; BSR set to: 0
 10787  011804  5164               	movf	setLED@step& (0+255),w,b
 10788  011806  0850               	sublw	80
 10789  011808  6E0D               	movwf	___aldiv@dividend^0,c
 10790  01180A  0EC3               	movlw	195
 10791  01180C  5565               	subfwb	(setLED@step+1)& (0+255),w,b
 10792  01180E  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10793  011810  0E00               	movlw	0
 10794  011812  5566               	subfwb	(setLED@step+2)& (0+255),w,b
 10795  011814  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10796  011816  0E00               	movlw	0
 10797  011818  5567               	subfwb	(setLED@step+3)& (0+255),w,b
 10798  01181A  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10799  01181C  0E28               	movlw	40
 10800  01181E  6E11               	movwf	___aldiv@divisor^0,c
 10801  011820  0E00               	movlw	0
 10802  011822  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10803  011824  0E00               	movlw	0
 10804  011826  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10805  011828  0E00               	movlw	0
 10806  01182A  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10807  01182C  ECF5  F09A         	call	___aldiv	;wreg free
 10808  011830  D016               	goto	L15
 10809  011832                     l5132:
 10810                           
 10811                           ; BSR set to: 0
 10812  011832  0E60               	movlw	96
 10813  011834  2564               	addwf	setLED@step& (0+255),w,b
 10814  011836  6E0D               	movwf	___aldiv@dividend^0,c
 10815  011838  0E79               	movlw	121
 10816  01183A  2165               	addwfc	(setLED@step+1)& (0+255),w,b
 10817  01183C  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10818  01183E  0EFE               	movlw	254
 10819  011840  2166               	addwfc	(setLED@step+2)& (0+255),w,b
 10820  011842  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10821  011844  0EFF               	movlw	255
 10822  011846  2167               	addwfc	(setLED@step+3)& (0+255),w,b
 10823  011848  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10824  01184A  0E28               	movlw	40
 10825  01184C  6E11               	movwf	___aldiv@divisor^0,c
 10826  01184E  0E00               	movlw	0
 10827  011850  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10828  011852  0E00               	movlw	0
 10829  011854  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10830  011856  0E00               	movlw	0
 10831  011858  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10832  01185A  ECF5  F09A         	call	___aldiv	;wreg free
 10833  01185E                     L15:
 10834  01185E  0060  F034  F09A   	movff	?___aldiv,setLED@shift
 10835  011864  0060  F038  F09B   	movff	?___aldiv+1,setLED@shift+1
 10836  01186A  0060  F03C  F09C   	movff	?___aldiv+2,setLED@shift+2
 10837  011870  0060  F040  F09D   	movff	?___aldiv+3,setLED@shift+3
 10838                           
 10839                           ;main.c: 127:     g = (g + shift - 625 < 0 ? 0 : (g + shift - 625 > 4095 ? 4095 : g + sh
      +                          ift - 625));
 10840  011876  0100               	movlb	0	; () banked
 10841  011878  519A               	movf	setLED@shift& (0+255),w,b
 10842  01187A  2586               	addwf	setLED@g& (0+255),w,b
 10843  01187C  6F68               	movwf	??_setLED& (0+255),b
 10844  01187E  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10845  011880  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10846  011882  6F69               	movwf	(??_setLED+1)& (0+255),b
 10847  011884  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10848  011886  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10849  011888  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10850  01188A  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10851  01188C  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10852  01188E  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10853  011890  0E8F               	movlw	143
 10854  011892  2568               	addwf	??_setLED& (0+255),w,b
 10855  011894  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10856  011896  0EFD               	movlw	253
 10857  011898  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10858  01189A  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10859  01189C  0EFF               	movlw	255
 10860  01189E  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10861  0118A0  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10862  0118A2  0EFF               	movlw	255
 10863  0118A4  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10864  0118A6  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10865  0118A8  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10866  0118AA  D04E               	goto	l5144
 10867                           
 10868                           ; BSR set to: 0
 10869  0118AC  519A               	movf	setLED@shift& (0+255),w,b
 10870  0118AE  2586               	addwf	setLED@g& (0+255),w,b
 10871  0118B0  6F68               	movwf	??_setLED& (0+255),b
 10872  0118B2  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10873  0118B4  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10874  0118B6  6F69               	movwf	(??_setLED+1)& (0+255),b
 10875  0118B8  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10876  0118BA  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10877  0118BC  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10878  0118BE  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10879  0118C0  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10880  0118C2  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10881  0118C4  0E8F               	movlw	143
 10882  0118C6  2568               	addwf	??_setLED& (0+255),w,b
 10883  0118C8  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10884  0118CA  0EFD               	movlw	253
 10885  0118CC  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10886  0118CE  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10887  0118D0  0EFF               	movlw	255
 10888  0118D2  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10889  0118D4  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10890  0118D6  0EFF               	movlw	255
 10891  0118D8  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10892  0118DA  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10893  0118DC  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10894  0118DE  D007               	goto	u6360
 10895  0118E0  516F               	movf	(??_setLED+7)& (0+255),w,b
 10896  0118E2  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 10897  0118E4  E11C               	bnz	l5140
 10898  0118E6  0E10               	movlw	16
 10899  0118E8  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 10900  0118EA  B0D8               	btfsc	status,0,c
 10901  0118EC  D018               	goto	l5140
 10902  0118EE                     u6360:
 10903                           
 10904                           ; BSR set to: 0
 10905  0118EE  519A               	movf	setLED@shift& (0+255),w,b
 10906  0118F0  2586               	addwf	setLED@g& (0+255),w,b
 10907  0118F2  6F68               	movwf	??_setLED& (0+255),b
 10908  0118F4  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10909  0118F6  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10910  0118F8  6F69               	movwf	(??_setLED+1)& (0+255),b
 10911  0118FA  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10912  0118FC  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10913  0118FE  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10914  011900  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10915  011902  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10916  011904  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10917  011906  0E8F               	movlw	143
 10918  011908  2568               	addwf	??_setLED& (0+255),w,b
 10919  01190A  6F7C               	movwf	_setLED$295& (0+255),b
 10920  01190C  0EFD               	movlw	253
 10921  01190E  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10922  011910  6F7D               	movwf	(_setLED$295+1)& (0+255),b
 10923  011912  0EFF               	movlw	255
 10924  011914  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10925  011916  6F7E               	movwf	(_setLED$295+2)& (0+255),b
 10926  011918  0EFF               	movlw	255
 10927  01191A  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10928  01191C  D007               	goto	L16
 10929  01191E                     l5140:
 10930                           
 10931                           ; BSR set to: 0
 10932  01191E  0EFF               	movlw	255
 10933  011920  6F7C               	movwf	_setLED$295& (0+255),b
 10934  011922  0E0F               	movlw	15
 10935  011924  6F7D               	movwf	(_setLED$295+1)& (0+255),b
 10936  011926  0E00               	movlw	0
 10937  011928  6F7E               	movwf	(_setLED$295+2)& (0+255),b
 10938  01192A  0E00               	movlw	0
 10939  01192C                     L16:
 10940  01192C  6F7F               	movwf	(_setLED$295+3)& (0+255),b
 10941                           
 10942                           ; BSR set to: 0
 10943  01192E  0060  F1F0  F086   	movff	_setLED$295,setLED@g
 10944  011934  0060  F1F4  F087   	movff	_setLED$295+1,setLED@g+1
 10945  01193A  0060  F1F8  F088   	movff	_setLED$295+2,setLED@g+2
 10946  011940  0060  F1FC  F089   	movff	_setLED$295+3,setLED@g+3
 10947  011946  D008               	goto	l5146
 10948  011948                     l5144:
 10949                           
 10950                           ; BSR set to: 0
 10951  011948  0E00               	movlw	0
 10952  01194A  6F86               	movwf	setLED@g& (0+255),b
 10953  01194C  0E00               	movlw	0
 10954  01194E  6F87               	movwf	(setLED@g+1)& (0+255),b
 10955  011950  0E00               	movlw	0
 10956  011952  6F88               	movwf	(setLED@g+2)& (0+255),b
 10957  011954  0E00               	movlw	0
 10958  011956  6F89               	movwf	(setLED@g+3)& (0+255),b
 10959  011958                     l5146:
 10960                           
 10961                           ; BSR set to: 0
 10962                           ;main.c: 128:     b = (b - shift - 625 < 0 ? 0 : (b - shift - 625 > 4095 ? 4095 : b - sh
      +                          ift - 625));
 10963  011958  519A               	movf	setLED@shift& (0+255),w,b
 10964  01195A  5D8A               	subwf	setLED@b& (0+255),w,b
 10965  01195C  6F68               	movwf	??_setLED& (0+255),b
 10966  01195E  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10967  011960  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10968  011962  6F69               	movwf	(??_setLED+1)& (0+255),b
 10969  011964  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10970  011966  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10971  011968  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10972  01196A  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10973  01196C  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10974  01196E  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10975  011970  0E8F               	movlw	143
 10976  011972  2568               	addwf	??_setLED& (0+255),w,b
 10977  011974  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10978  011976  0EFD               	movlw	253
 10979  011978  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10980  01197A  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10981  01197C  0EFF               	movlw	255
 10982  01197E  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10983  011980  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10984  011982  0EFF               	movlw	255
 10985  011984  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10986  011986  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10987  011988  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10988  01198A  D04E               	goto	l5156
 10989                           
 10990                           ; BSR set to: 0
 10991  01198C  519A               	movf	setLED@shift& (0+255),w,b
 10992  01198E  5D8A               	subwf	setLED@b& (0+255),w,b
 10993  011990  6F68               	movwf	??_setLED& (0+255),b
 10994  011992  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10995  011994  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10996  011996  6F69               	movwf	(??_setLED+1)& (0+255),b
 10997  011998  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10998  01199A  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10999  01199C  6F6A               	movwf	(??_setLED+2)& (0+255),b
 11000  01199E  519D               	movf	(setLED@shift+3)& (0+255),w,b
 11001  0119A0  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 11002  0119A2  6F6B               	movwf	(??_setLED+3)& (0+255),b
 11003  0119A4  0E8F               	movlw	143
 11004  0119A6  2568               	addwf	??_setLED& (0+255),w,b
 11005  0119A8  6F6C               	movwf	(??_setLED+4)& (0+255),b
 11006  0119AA  0EFD               	movlw	253
 11007  0119AC  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 11008  0119AE  6F6D               	movwf	(??_setLED+5)& (0+255),b
 11009  0119B0  0EFF               	movlw	255
 11010  0119B2  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 11011  0119B4  6F6E               	movwf	(??_setLED+6)& (0+255),b
 11012  0119B6  0EFF               	movlw	255
 11013  0119B8  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 11014  0119BA  6F6F               	movwf	(??_setLED+7)& (0+255),b
 11015  0119BC  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 11016  0119BE  D007               	goto	u6380
 11017  0119C0  516F               	movf	(??_setLED+7)& (0+255),w,b
 11018  0119C2  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 11019  0119C4  E11C               	bnz	l5152
 11020  0119C6  0E10               	movlw	16
 11021  0119C8  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 11022  0119CA  B0D8               	btfsc	status,0,c
 11023  0119CC  D018               	goto	l5152
 11024  0119CE                     u6380:
 11025                           
 11026                           ; BSR set to: 0
 11027  0119CE  519A               	movf	setLED@shift& (0+255),w,b
 11028  0119D0  5D8A               	subwf	setLED@b& (0+255),w,b
 11029  0119D2  6F68               	movwf	??_setLED& (0+255),b
 11030  0119D4  519B               	movf	(setLED@shift+1)& (0+255),w,b
 11031  0119D6  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 11032  0119D8  6F69               	movwf	(??_setLED+1)& (0+255),b
 11033  0119DA  519C               	movf	(setLED@shift+2)& (0+255),w,b
 11034  0119DC  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 11035  0119DE  6F6A               	movwf	(??_setLED+2)& (0+255),b
 11036  0119E0  519D               	movf	(setLED@shift+3)& (0+255),w,b
 11037  0119E2  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 11038  0119E4  6F6B               	movwf	(??_setLED+3)& (0+255),b
 11039  0119E6  0E8F               	movlw	143
 11040  0119E8  2568               	addwf	??_setLED& (0+255),w,b
 11041  0119EA  6F80               	movwf	_setLED$296& (0+255),b
 11042  0119EC  0EFD               	movlw	253
 11043  0119EE  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 11044  0119F0  6F81               	movwf	(_setLED$296+1)& (0+255),b
 11045  0119F2  0EFF               	movlw	255
 11046  0119F4  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 11047  0119F6  6F82               	movwf	(_setLED$296+2)& (0+255),b
 11048  0119F8  0EFF               	movlw	255
 11049  0119FA  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 11050  0119FC  D007               	goto	L17
 11051  0119FE                     l5152:
 11052                           
 11053                           ; BSR set to: 0
 11054  0119FE  0EFF               	movlw	255
 11055  011A00  6F80               	movwf	_setLED$296& (0+255),b
 11056  011A02  0E0F               	movlw	15
 11057  011A04  6F81               	movwf	(_setLED$296+1)& (0+255),b
 11058  011A06  0E00               	movlw	0
 11059  011A08  6F82               	movwf	(_setLED$296+2)& (0+255),b
 11060  011A0A  0E00               	movlw	0
 11061  011A0C                     L17:
 11062  011A0C  6F83               	movwf	(_setLED$296+3)& (0+255),b
 11063                           
 11064                           ; BSR set to: 0
 11065  011A0E  0060  F200  F08A   	movff	_setLED$296,setLED@b
 11066  011A14  0060  F204  F08B   	movff	_setLED$296+1,setLED@b+1
 11067  011A1A  0060  F208  F08C   	movff	_setLED$296+2,setLED@b+2
 11068  011A20  0060  F20C  F08D   	movff	_setLED$296+3,setLED@b+3
 11069  011A26  D008               	goto	l235
 11070  011A28                     l5156:
 11071                           
 11072                           ; BSR set to: 0
 11073  011A28  0E00               	movlw	0
 11074  011A2A  6F8A               	movwf	setLED@b& (0+255),b
 11075  011A2C  0E00               	movlw	0
 11076  011A2E  6F8B               	movwf	(setLED@b+1)& (0+255),b
 11077  011A30  0E00               	movlw	0
 11078  011A32  6F8C               	movwf	(setLED@b+2)& (0+255),b
 11079  011A34  0E00               	movlw	0
 11080  011A36  6F8D               	movwf	(setLED@b+3)& (0+255),b
 11081  011A38                     l235:
 11082                           
 11083                           ; BSR set to: 0
 11084                           ;main.c: 130:     int32_t sr, sg, sb;;main.c: 131:     if (on) {
 11085  011A38  51E5               	movf	_on& (0+255),w,b
 11086  011A3A  B4D8               	btfsc	status,2,c
 11087  011A3C  D0FE               	goto	l5188
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;main.c: 132:         sr = r * ledBrightness / 300;
 11091  011A3E  0060  F1C0  F001   	movff	setLED@r,___lmul@multiplier
 11092  011A44  0060  F1C4  F002   	movff	setLED@r+1,___lmul@multiplier+1
 11093  011A4A  0060  F1C8  F003   	movff	setLED@r+2,___lmul@multiplier+2
 11094  011A50  0060  F1CC  F004   	movff	setLED@r+3,___lmul@multiplier+3
 11095  011A56  0060  F398  F005   	movff	_ledBrightness,___lmul@multiplicand
 11096  011A5C  0060  F39C  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 11097  011A62  0060  F3A0  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 11098  011A68  0060  F3A4  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 11099  011A6E  EC68  F0A0         	call	___lmul	;wreg free
 11100  011A72  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 11101  011A78  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 11102  011A7E  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 11103  011A84  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 11104  011A8A  0E2C               	movlw	44
 11105  011A8C  6E11               	movwf	___aldiv@divisor^0,c
 11106  011A8E  0E01               	movlw	1
 11107  011A90  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11108  011A92  0E00               	movlw	0
 11109  011A94  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11110  011A96  0E00               	movlw	0
 11111  011A98  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11112  011A9A  ECF5  F09A         	call	___aldiv	;wreg free
 11113  011A9E  0060  F034  F096   	movff	?___aldiv,setLED@sr
 11114  011AA4  0060  F038  F097   	movff	?___aldiv+1,setLED@sr+1
 11115  011AAA  0060  F03C  F098   	movff	?___aldiv+2,setLED@sr+2
 11116  011AB0  0060  F040  F099   	movff	?___aldiv+3,setLED@sr+3
 11117                           
 11118                           ;main.c: 133:         if (sr < 0) sr = 0;
 11119  011AB6  0100               	movlb	0	; () banked
 11120  011AB8  AF99               	btfss	(setLED@sr+3)& (0+255),7,b
 11121  011ABA  D004               	goto	l5164
 11122                           
 11123                           ; BSR set to: 0
 11124  011ABC  0E00               	movlw	0
 11125  011ABE  6F96               	movwf	setLED@sr& (0+255),b
 11126  011AC0  0E00               	movlw	0
 11127  011AC2  D00C               	goto	L18
 11128  011AC4                     l5164:
 11129                           
 11130                           ; BSR set to: 0
 11131  011AC4  BF99               	btfsc	(setLED@sr+3)& (0+255),7,b
 11132  011AC6  D00F               	goto	l5168
 11133  011AC8  5199               	movf	(setLED@sr+3)& (0+255),w,b
 11134  011ACA  1198               	iorwf	(setLED@sr+2)& (0+255),w,b
 11135  011ACC  E104               	bnz	u6410
 11136  011ACE  0E10               	movlw	16
 11137  011AD0  5D97               	subwf	(setLED@sr+1)& (0+255),w,b
 11138  011AD2  A0D8               	btfss	status,0,c
 11139  011AD4  D008               	goto	l5168
 11140  011AD6                     u6410:
 11141                           
 11142                           ; BSR set to: 0
 11143  011AD6  0EFF               	movlw	255
 11144  011AD8  6F96               	movwf	setLED@sr& (0+255),b
 11145  011ADA  0E0F               	movlw	15
 11146  011ADC                     L18:
 11147  011ADC  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11148  011ADE  0E00               	movlw	0
 11149  011AE0  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11150  011AE2  0E00               	movlw	0
 11151  011AE4  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11152  011AE6                     l5168:
 11153                           
 11154                           ; BSR set to: 0
 11155                           ;main.c: 135:         sg = g * ledBrightness / 300;
 11156  011AE6  0060  F218  F001   	movff	setLED@g,___lmul@multiplier
 11157  011AEC  0060  F21C  F002   	movff	setLED@g+1,___lmul@multiplier+1
 11158  011AF2  0060  F220  F003   	movff	setLED@g+2,___lmul@multiplier+2
 11159  011AF8  0060  F224  F004   	movff	setLED@g+3,___lmul@multiplier+3
 11160  011AFE  0060  F398  F005   	movff	_ledBrightness,___lmul@multiplicand
 11161  011B04  0060  F39C  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 11162  011B0A  0060  F3A0  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 11163  011B10  0060  F3A4  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 11164  011B16  EC68  F0A0         	call	___lmul	;wreg free
 11165  011B1A  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 11166  011B20  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 11167  011B26  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 11168  011B2C  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 11169  011B32  0E2C               	movlw	44
 11170  011B34  6E11               	movwf	___aldiv@divisor^0,c
 11171  011B36  0E01               	movlw	1
 11172  011B38  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11173  011B3A  0E00               	movlw	0
 11174  011B3C  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11175  011B3E  0E00               	movlw	0
 11176  011B40  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11177  011B42  ECF5  F09A         	call	___aldiv	;wreg free
 11178  011B46  0060  F034  F08E   	movff	?___aldiv,setLED@sg
 11179  011B4C  0060  F038  F08F   	movff	?___aldiv+1,setLED@sg+1
 11180  011B52  0060  F03C  F090   	movff	?___aldiv+2,setLED@sg+2
 11181  011B58  0060  F040  F091   	movff	?___aldiv+3,setLED@sg+3
 11182                           
 11183                           ;main.c: 136:         if (sg < 0) sg = 0;
 11184  011B5E  0100               	movlb	0	; () banked
 11185  011B60  AF91               	btfss	(setLED@sg+3)& (0+255),7,b
 11186  011B62  D009               	goto	l5174
 11187                           
 11188                           ; BSR set to: 0
 11189  011B64  0E00               	movlw	0
 11190  011B66  6F8E               	movwf	setLED@sg& (0+255),b
 11191  011B68  0E00               	movlw	0
 11192  011B6A  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11193  011B6C  0E00               	movlw	0
 11194  011B6E  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11195  011B70  0E00               	movlw	0
 11196  011B72  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11197  011B74  D011               	goto	l5178
 11198  011B76                     l5174:
 11199                           
 11200                           ; BSR set to: 0
 11201  011B76  BF91               	btfsc	(setLED@sg+3)& (0+255),7,b
 11202  011B78  D00F               	goto	l5178
 11203  011B7A  5191               	movf	(setLED@sg+3)& (0+255),w,b
 11204  011B7C  1190               	iorwf	(setLED@sg+2)& (0+255),w,b
 11205  011B7E  E104               	bnz	u6430
 11206  011B80  0E10               	movlw	16
 11207  011B82  5D8F               	subwf	(setLED@sg+1)& (0+255),w,b
 11208  011B84  A0D8               	btfss	status,0,c
 11209  011B86  D008               	goto	l5178
 11210  011B88                     u6430:
 11211                           
 11212                           ; BSR set to: 0
 11213  011B88  0EFF               	movlw	255
 11214  011B8A  6F96               	movwf	setLED@sr& (0+255),b
 11215  011B8C  0E0F               	movlw	15
 11216  011B8E  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11217  011B90  0E00               	movlw	0
 11218  011B92  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11219  011B94  0E00               	movlw	0
 11220  011B96  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11221  011B98                     l5178:
 11222                           
 11223                           ; BSR set to: 0
 11224                           ;main.c: 138:         sb = b * ledBrightness / 300;
 11225  011B98  0060  F228  F001   	movff	setLED@b,___lmul@multiplier
 11226  011B9E  0060  F22C  F002   	movff	setLED@b+1,___lmul@multiplier+1
 11227  011BA4  0060  F230  F003   	movff	setLED@b+2,___lmul@multiplier+2
 11228  011BAA  0060  F234  F004   	movff	setLED@b+3,___lmul@multiplier+3
 11229  011BB0  0060  F398  F005   	movff	_ledBrightness,___lmul@multiplicand
 11230  011BB6  0060  F39C  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 11231  011BBC  0060  F3A0  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 11232  011BC2  0060  F3A4  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 11233  011BC8  EC68  F0A0         	call	___lmul	;wreg free
 11234  011BCC  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 11235  011BD2  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 11236  011BD8  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 11237  011BDE  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 11238  011BE4  0E2C               	movlw	44
 11239  011BE6  6E11               	movwf	___aldiv@divisor^0,c
 11240  011BE8  0E01               	movlw	1
 11241  011BEA  6E12               	movwf	(___aldiv@divisor+1)^0,c
 11242  011BEC  0E00               	movlw	0
 11243  011BEE  6E13               	movwf	(___aldiv@divisor+2)^0,c
 11244  011BF0  0E00               	movlw	0
 11245  011BF2  6E14               	movwf	(___aldiv@divisor+3)^0,c
 11246  011BF4  ECF5  F09A         	call	___aldiv	;wreg free
 11247  011BF8  0060  F034  F092   	movff	?___aldiv,setLED@sb
 11248  011BFE  0060  F038  F093   	movff	?___aldiv+1,setLED@sb+1
 11249  011C04  0060  F03C  F094   	movff	?___aldiv+2,setLED@sb+2
 11250  011C0A  0060  F040  F095   	movff	?___aldiv+3,setLED@sb+3
 11251                           
 11252                           ;main.c: 139:         if (sb < 0) sb = 0;
 11253  011C10  0100               	movlb	0	; () banked
 11254  011C12  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 11255  011C14  D022               	goto	L19
 11256                           
 11257                           ; BSR set to: 0
 11258                           
 11259                           ; BSR set to: 0
 11260  011C16  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 11261  011C18  D028               	goto	l5190
 11262  011C1A  5195               	movf	(setLED@sb+3)& (0+255),w,b
 11263  011C1C  1194               	iorwf	(setLED@sb+2)& (0+255),w,b
 11264  011C1E  E104               	bnz	u6450
 11265  011C20  0E10               	movlw	16
 11266  011C22  5D93               	subwf	(setLED@sb+1)& (0+255),w,b
 11267  011C24  A0D8               	btfss	status,0,c
 11268  011C26  D021               	goto	l5190
 11269  011C28                     u6450:
 11270                           
 11271                           ; BSR set to: 0
 11272  011C28  0EFF               	movlw	255
 11273  011C2A  6F96               	movwf	setLED@sr& (0+255),b
 11274  011C2C  0E0F               	movlw	15
 11275  011C2E  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11276  011C30  0E00               	movlw	0
 11277  011C32  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11278  011C34  0E00               	movlw	0
 11279  011C36  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11280  011C38  D018               	goto	l5190
 11281  011C3A                     l5188:
 11282                           
 11283                           ; BSR set to: 0
 11284                           ;main.c: 142:         sr = 0;
 11285  011C3A  0E00               	movlw	0
 11286  011C3C  6F96               	movwf	setLED@sr& (0+255),b
 11287  011C3E  0E00               	movlw	0
 11288  011C40  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11289  011C42  0E00               	movlw	0
 11290  011C44  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11291  011C46  0E00               	movlw	0
 11292  011C48  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11293                           
 11294                           ;main.c: 143:         sg = 0;
 11295  011C4A  0E00               	movlw	0
 11296  011C4C  6F8E               	movwf	setLED@sg& (0+255),b
 11297  011C4E  0E00               	movlw	0
 11298  011C50  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11299  011C52  0E00               	movlw	0
 11300  011C54  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11301  011C56  0E00               	movlw	0
 11302  011C58  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11303  011C5A                     L19:
 11304                           
 11305                           ;main.c: 144:         sb = 0;
 11306  011C5A  0E00               	movlw	0
 11307  011C5C  6F92               	movwf	setLED@sb& (0+255),b
 11308  011C5E  0E00               	movlw	0
 11309  011C60  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11310  011C62  0E00               	movlw	0
 11311  011C64  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11312  011C66  0E00               	movlw	0
 11313  011C68  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11314  011C6A                     l5190:
 11315                           
 11316                           ; BSR set to: 0
 11317                           ;main.c: 147:     if (bat_percent < 5.0f && step % 10000 < 1000) {
 11318  011C6A  0060  F3A8  F051   	movff	_bat_percent,___flge@ff1
 11319  011C70  0060  F3AC  F052   	movff	_bat_percent+1,___flge@ff1+1
 11320  011C76  0060  F3B0  F053   	movff	_bat_percent+2,___flge@ff1+2
 11321  011C7C  0060  F3B4  F054   	movff	_bat_percent+3,___flge@ff1+3
 11322  011C82  0E00               	movlw	0
 11323  011C84  6E55               	movwf	___flge@ff2^0,c
 11324  011C86  0E00               	movlw	0
 11325  011C88  6E56               	movwf	(___flge@ff2+1)^0,c
 11326  011C8A  0EA0               	movlw	160
 11327  011C8C  6E57               	movwf	(___flge@ff2+2)^0,c
 11328  011C8E  0E40               	movlw	64
 11329  011C90  6E58               	movwf	(___flge@ff2+3)^0,c
 11330  011C92  EC5F  F09B         	call	___flge	;wreg free
 11331  011C96  B0D8               	btfsc	status,0,c
 11332  011C98  D03A               	goto	l5196
 11333  011C9A  0060  F190  F001   	movff	setLED@step,___almod@dividend
 11334  011CA0  0060  F194  F002   	movff	setLED@step+1,___almod@dividend+1
 11335  011CA6  0060  F198  F003   	movff	setLED@step+2,___almod@dividend+2
 11336  011CAC  0060  F19C  F004   	movff	setLED@step+3,___almod@dividend+3
 11337  011CB2  0E10               	movlw	16
 11338  011CB4  6E05               	movwf	___almod@divisor^0,c
 11339  011CB6  0E27               	movlw	39
 11340  011CB8  6E06               	movwf	(___almod@divisor+1)^0,c
 11341  011CBA  0E00               	movlw	0
 11342  011CBC  6E07               	movwf	(___almod@divisor+2)^0,c
 11343  011CBE  0E00               	movlw	0
 11344  011CC0  6E08               	movwf	(___almod@divisor+3)^0,c
 11345  011CC2  EC86  F09C         	call	___almod	;wreg free
 11346  011CC6  BE04               	btfsc	(?___almod+3)^0,7,c
 11347  011CC8  D009               	goto	u6470
 11348  011CCA  5004               	movf	(?___almod+3)^0,w,c
 11349  011CCC  1003               	iorwf	(?___almod+2)^0,w,c
 11350  011CCE  E11F               	bnz	l5196
 11351  011CD0  0EE8               	movlw	232
 11352  011CD2  5C01               	subwf	?___almod^0,w,c
 11353  011CD4  0E03               	movlw	3
 11354  011CD6  5802               	subwfb	(?___almod+1)^0,w,c
 11355  011CD8  B0D8               	btfsc	status,0,c
 11356  011CDA  D019               	goto	l5196
 11357  011CDC                     u6470:
 11358                           
 11359                           ;main.c: 148:         sr = 4095;
 11360  011CDC  0EFF               	movlw	255
 11361  011CDE  0100               	movlb	0	; () banked
 11362  011CE0  6F96               	movwf	setLED@sr& (0+255),b
 11363  011CE2  0E0F               	movlw	15
 11364  011CE4  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11365  011CE6  0E00               	movlw	0
 11366  011CE8  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11367  011CEA  0E00               	movlw	0
 11368  011CEC  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11369                           
 11370                           ;main.c: 149:         sg = 0;
 11371  011CEE  0E00               	movlw	0
 11372  011CF0  6F8E               	movwf	setLED@sg& (0+255),b
 11373  011CF2  0E00               	movlw	0
 11374  011CF4  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11375  011CF6  0E00               	movlw	0
 11376  011CF8  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11377  011CFA  0E00               	movlw	0
 11378  011CFC  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11379                           
 11380                           ;main.c: 150:         sb = 0;
 11381  011CFE  0E00               	movlw	0
 11382  011D00  6F92               	movwf	setLED@sb& (0+255),b
 11383  011D02  0E00               	movlw	0
 11384  011D04  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11385  011D06  0E00               	movlw	0
 11386  011D08  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11387  011D0A  0E00               	movlw	0
 11388  011D0C  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11389  011D0E                     l5196:
 11390                           
 11391                           ;main.c: 153:     CCPR3H = sr >> 8;
 11392  011D0E  0060  F25F  FF75   	movff	setLED@sr+1,16245	;volatile
 11393                           
 11394                           ;main.c: 154:     CCPR3L = sr & 0xff;
 11395  011D14  0060  F25B  FF74   	movff	setLED@sr,16244	;volatile
 11396                           
 11397                           ;main.c: 155:     CCPR2H = sg >> 8;
 11398  011D1A  0060  F23F  FF79   	movff	setLED@sg+1,16249	;volatile
 11399                           
 11400                           ;main.c: 156:     CCPR2L = sg & 0xff;
 11401  011D20  0060  F23B  FF78   	movff	setLED@sg,16248	;volatile
 11402                           
 11403                           ;main.c: 157:     CCPR4H = sb >> 8;
 11404  011D26  0060  F24F  FF71   	movff	setLED@sb+1,16241	;volatile
 11405                           
 11406                           ;main.c: 158:     CCPR4L = sb & 0xff;
 11407  011D2C  0060  F24B  FF70   	movff	setLED@sb,16240	;volatile
 11408  011D32  0012               	return		;funcret
 11409  011D34                     __end_of_setLED:
 11410                           	opt callstack 0
 11411                           
 11412 ;; *************** function ___lmul *****************
 11413 ;; Defined at:
 11414 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 11415 ;; Parameters:    Size  Location     Type
 11416 ;;  multiplier      4    0[COMRAM] unsigned long 
 11417 ;;  multiplicand    4    4[COMRAM] unsigned long 
 11418 ;; Auto vars:     Size  Location     Type
 11419 ;;  product         4    8[COMRAM] unsigned long 
 11420 ;; Return value:  Size  Location     Type
 11421 ;;                  4    0[COMRAM] unsigned long 
 11422 ;; Registers used:
 11423 ;;		wreg, status,2, status,0
 11424 ;; Tracked objects:
 11425 ;;		On entry : 3B/4
 11426 ;;		On exit  : 3B/0
 11427 ;;		Unchanged: 3B/0
 11428 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11429 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11430 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11432 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11433 ;;Total ram usage:       12 bytes
 11434 ;; Hardware stack levels used:    1
 11435 ;; This function calls:
 11436 ;;		Nothing
 11437 ;; This function is called by:
 11438 ;;		_setLED
 11439 ;;		_main_loop
 11440 ;; This function uses a non-reentrant model
 11441 ;;
 11442                           
 11443                           	psect	text38
 11444  0140D0                     __ptext38:
 11445                           	opt callstack 0
 11446  0140D0                     ___lmul:
 11447                           	opt callstack 28
 11448                           
 11449                           ;incstack = 0
 11450  0140D0  0E00               	movlw	0
 11451  0140D2  6E09               	movwf	___lmul@product^0,c
 11452  0140D4  0E00               	movlw	0
 11453  0140D6  6E0A               	movwf	(___lmul@product+1)^0,c
 11454  0140D8  0E00               	movlw	0
 11455  0140DA  6E0B               	movwf	(___lmul@product+2)^0,c
 11456  0140DC  0E00               	movlw	0
 11457  0140DE  6E0C               	movwf	(___lmul@product+3)^0,c
 11458  0140E0                     l4992:
 11459  0140E0  A001               	btfss	___lmul@multiplier^0,0,c
 11460  0140E2  D008               	goto	l4996
 11461  0140E4  5005               	movf	___lmul@multiplicand^0,w,c
 11462  0140E6  2609               	addwf	___lmul@product^0,f,c
 11463  0140E8  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 11464  0140EA  220A               	addwfc	(___lmul@product+1)^0,f,c
 11465  0140EC  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 11466  0140EE  220B               	addwfc	(___lmul@product+2)^0,f,c
 11467  0140F0  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 11468  0140F2  220C               	addwfc	(___lmul@product+3)^0,f,c
 11469  0140F4                     l4996:
 11470  0140F4  90D8               	bcf	status,0,c
 11471  0140F6  3605               	rlcf	___lmul@multiplicand^0,f,c
 11472  0140F8  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11473  0140FA  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11474  0140FC  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11475  0140FE  90D8               	bcf	status,0,c
 11476  014100  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 11477  014102  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 11478  014104  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 11479  014106  3201               	rrcf	___lmul@multiplier^0,f,c
 11480  014108  5001               	movf	___lmul@multiplier^0,w,c
 11481  01410A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 11482  01410C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 11483  01410E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 11484  014110  A4D8               	btfss	status,2,c
 11485  014112  D7E6               	goto	l4992
 11486  014114  0060  F024  F001   	movff	___lmul@product,?___lmul
 11487  01411A  0060  F028  F002   	movff	___lmul@product+1,?___lmul+1
 11488  014120  0060  F02C  F003   	movff	___lmul@product+2,?___lmul+2
 11489  014126  0060  F030  F004   	movff	___lmul@product+3,?___lmul+3
 11490  01412C  0012               	return		;funcret
 11491  01412E                     __end_of___lmul:
 11492                           	opt callstack 0
 11493                           
 11494 ;; *************** function ___flge *****************
 11495 ;; Defined at:
 11496 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11497 ;; Parameters:    Size  Location     Type
 11498 ;;  ff1             4   80[COMRAM] unsigned long 
 11499 ;;  ff2             4   84[COMRAM] unsigned long 
 11500 ;; Auto vars:     Size  Location     Type
 11501 ;;		None
 11502 ;; Return value:  Size  Location     Type
 11503 ;;		None               void
 11504 ;; Registers used:
 11505 ;;		wreg, status,2, status,0
 11506 ;; Tracked objects:
 11507 ;;		On entry : 0/4
 11508 ;;		On exit  : 0/0
 11509 ;;		Unchanged: 0/0
 11510 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11511 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11513 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11514 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11515 ;;Total ram usage:       12 bytes
 11516 ;; Hardware stack levels used:    1
 11517 ;; This function calls:
 11518 ;;		Nothing
 11519 ;; This function is called by:
 11520 ;;		_setLED
 11521 ;;		_main_loop
 11522 ;;		_efgtoa
 11523 ;; This function uses a non-reentrant model
 11524 ;;
 11525                           
 11526                           	psect	text39
 11527  0136BE                     __ptext39:
 11528                           	opt callstack 0
 11529  0136BE                     ___flge:
 11530                           	opt callstack 25
 11531                           
 11532                           ;incstack = 0
 11533  0136BE  0E00               	movlw	0
 11534  0136C0  1451               	andwf	___flge@ff1^0,w,c
 11535  0136C2  6E59               	movwf	??___flge^0,c
 11536  0136C4  0E00               	movlw	0
 11537  0136C6  1452               	andwf	(___flge@ff1+1)^0,w,c
 11538  0136C8  6E5A               	movwf	(??___flge+1)^0,c
 11539  0136CA  0E80               	movlw	128
 11540  0136CC  1453               	andwf	(___flge@ff1+2)^0,w,c
 11541  0136CE  6E5B               	movwf	(??___flge+2)^0,c
 11542  0136D0  0E7F               	movlw	127
 11543  0136D2  1454               	andwf	(___flge@ff1+3)^0,w,c
 11544  0136D4  6E5C               	movwf	(??___flge+3)^0,c
 11545  0136D6  5059               	movf	??___flge^0,w,c
 11546  0136D8  105A               	iorwf	(??___flge+1)^0,w,c
 11547  0136DA  105B               	iorwf	(??___flge+2)^0,w,c
 11548  0136DC  105C               	iorwf	(??___flge+3)^0,w,c
 11549  0136DE  A4D8               	btfss	status,2,c
 11550  0136E0  D008               	goto	l4336
 11551  0136E2  0E00               	movlw	0
 11552  0136E4  6E51               	movwf	___flge@ff1^0,c
 11553  0136E6  0E00               	movlw	0
 11554  0136E8  6E52               	movwf	(___flge@ff1+1)^0,c
 11555  0136EA  0E00               	movlw	0
 11556  0136EC  6E53               	movwf	(___flge@ff1+2)^0,c
 11557  0136EE  0E00               	movlw	0
 11558  0136F0  6E54               	movwf	(___flge@ff1+3)^0,c
 11559  0136F2                     l4336:
 11560  0136F2  0E00               	movlw	0
 11561  0136F4  1455               	andwf	___flge@ff2^0,w,c
 11562  0136F6  6E59               	movwf	??___flge^0,c
 11563  0136F8  0E00               	movlw	0
 11564  0136FA  1456               	andwf	(___flge@ff2+1)^0,w,c
 11565  0136FC  6E5A               	movwf	(??___flge+1)^0,c
 11566  0136FE  0E80               	movlw	128
 11567  013700  1457               	andwf	(___flge@ff2+2)^0,w,c
 11568  013702  6E5B               	movwf	(??___flge+2)^0,c
 11569  013704  0E7F               	movlw	127
 11570  013706  1458               	andwf	(___flge@ff2+3)^0,w,c
 11571  013708  6E5C               	movwf	(??___flge+3)^0,c
 11572  01370A  5059               	movf	??___flge^0,w,c
 11573  01370C  105A               	iorwf	(??___flge+1)^0,w,c
 11574  01370E  105B               	iorwf	(??___flge+2)^0,w,c
 11575  013710  105C               	iorwf	(??___flge+3)^0,w,c
 11576  013712  A4D8               	btfss	status,2,c
 11577  013714  D008               	goto	l4340
 11578  013716  0E00               	movlw	0
 11579  013718  6E55               	movwf	___flge@ff2^0,c
 11580  01371A  0E00               	movlw	0
 11581  01371C  6E56               	movwf	(___flge@ff2+1)^0,c
 11582  01371E  0E00               	movlw	0
 11583  013720  6E57               	movwf	(___flge@ff2+2)^0,c
 11584  013722  0E00               	movlw	0
 11585  013724  6E58               	movwf	(___flge@ff2+3)^0,c
 11586  013726                     l4340:
 11587  013726  AE54               	btfss	(___flge@ff1+3)^0,7,c
 11588  013728  D009               	goto	l4344
 11589  01372A  6C51               	negf	___flge@ff1^0,c
 11590  01372C  1E52               	comf	(___flge@ff1+1)^0,f,c
 11591  01372E  B0D8               	btfsc	status,0,c
 11592  013730  2A52               	incf	(___flge@ff1+1)^0,f,c
 11593  013732  1E53               	comf	(___flge@ff1+2)^0,f,c
 11594  013734  B0D8               	btfsc	status,0,c
 11595  013736  2A53               	incf	(___flge@ff1+2)^0,f,c
 11596  013738  0E80               	movlw	128
 11597  01373A  5654               	subfwb	(___flge@ff1+3)^0,f,c
 11598  01373C                     l4344:
 11599  01373C  AE58               	btfss	(___flge@ff2+3)^0,7,c
 11600  01373E  D009               	goto	l993
 11601  013740  6C55               	negf	___flge@ff2^0,c
 11602  013742  1E56               	comf	(___flge@ff2+1)^0,f,c
 11603  013744  B0D8               	btfsc	status,0,c
 11604  013746  2A56               	incf	(___flge@ff2+1)^0,f,c
 11605  013748  1E57               	comf	(___flge@ff2+2)^0,f,c
 11606  01374A  B0D8               	btfsc	status,0,c
 11607  01374C  2A57               	incf	(___flge@ff2+2)^0,f,c
 11608  01374E  0E80               	movlw	128
 11609  013750  5658               	subfwb	(___flge@ff2+3)^0,f,c
 11610  013752                     l993:
 11611  013752  0E00               	movlw	0
 11612  013754  1A51               	xorwf	___flge@ff1^0,f,c
 11613  013756  0E00               	movlw	0
 11614  013758  1A52               	xorwf	(___flge@ff1+1)^0,f,c
 11615  01375A  0E00               	movlw	0
 11616  01375C  1A53               	xorwf	(___flge@ff1+2)^0,f,c
 11617  01375E  0E80               	movlw	128
 11618  013760  1A54               	xorwf	(___flge@ff1+3)^0,f,c
 11619  013762  0E00               	movlw	0
 11620  013764  1A55               	xorwf	___flge@ff2^0,f,c
 11621  013766  0E00               	movlw	0
 11622  013768  1A56               	xorwf	(___flge@ff2+1)^0,f,c
 11623  01376A  0E00               	movlw	0
 11624  01376C  1A57               	xorwf	(___flge@ff2+2)^0,f,c
 11625  01376E  0E80               	movlw	128
 11626  013770  1A58               	xorwf	(___flge@ff2+3)^0,f,c
 11627  013772  5055               	movf	___flge@ff2^0,w,c
 11628  013774  5C51               	subwf	___flge@ff1^0,w,c
 11629  013776  5056               	movf	(___flge@ff2+1)^0,w,c
 11630  013778  5852               	subwfb	(___flge@ff1+1)^0,w,c
 11631  01377A  5057               	movf	(___flge@ff2+2)^0,w,c
 11632  01377C  5853               	subwfb	(___flge@ff1+2)^0,w,c
 11633  01377E  5058               	movf	(___flge@ff2+3)^0,w,c
 11634  013780  5854               	subwfb	(___flge@ff1+3)^0,w,c
 11635  013782  B0D8               	btfsc	status,0,c
 11636  013784  D002               	goto	l4350
 11637  013786  90D8               	bcf	status,0,c
 11638  013788  0012               	return	
 11639  01378A                     l4350:
 11640  01378A  80D8               	bsf	status,0,c
 11641  01378C  0012               	return		;funcret
 11642  01378E                     __end_of___flge:
 11643                           	opt callstack 0
 11644                           
 11645 ;; *************** function ___almod *****************
 11646 ;; Defined at:
 11647 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
 11648 ;; Parameters:    Size  Location     Type
 11649 ;;  dividend        4    0[COMRAM] long 
 11650 ;;  divisor         4    4[COMRAM] long 
 11651 ;; Auto vars:     Size  Location     Type
 11652 ;;  sign            1    9[COMRAM] unsigned char 
 11653 ;;  counter         1    8[COMRAM] unsigned char 
 11654 ;; Return value:  Size  Location     Type
 11655 ;;                  4    0[COMRAM] long 
 11656 ;; Registers used:
 11657 ;;		wreg, status,2, status,0
 11658 ;; Tracked objects:
 11659 ;;		On entry : 0/0
 11660 ;;		On exit  : 0/0
 11661 ;;		Unchanged: 0/0
 11662 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11663 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11664 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;Total ram usage:       10 bytes
 11668 ;; Hardware stack levels used:    1
 11669 ;; This function calls:
 11670 ;;		Nothing
 11671 ;; This function is called by:
 11672 ;;		_setLED
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           	psect	text40
 11677  01390C                     __ptext40:
 11678                           	opt callstack 0
 11679  01390C                     ___almod:
 11680                           	opt callstack 28
 11681                           
 11682                           ;incstack = 0
 11683  01390C  0E00               	movlw	0
 11684  01390E  6E0A               	movwf	___almod@sign^0,c
 11685  013910  AE04               	btfss	(___almod@dividend+3)^0,7,c
 11686  013912  D00A               	goto	l5052
 11687  013914  1E04               	comf	(___almod@dividend+3)^0,f,c
 11688  013916  1E03               	comf	(___almod@dividend+2)^0,f,c
 11689  013918  1E02               	comf	(___almod@dividend+1)^0,f,c
 11690  01391A  6C01               	negf	___almod@dividend^0,c
 11691  01391C  0E00               	movlw	0
 11692  01391E  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11693  013920  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11694  013922  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11695  013924  0E01               	movlw	1
 11696  013926  6E0A               	movwf	___almod@sign^0,c
 11697  013928                     l5052:
 11698  013928  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11699  01392A  D008               	goto	l5056
 11700  01392C  1E08               	comf	(___almod@divisor+3)^0,f,c
 11701  01392E  1E07               	comf	(___almod@divisor+2)^0,f,c
 11702  013930  1E06               	comf	(___almod@divisor+1)^0,f,c
 11703  013932  6C05               	negf	___almod@divisor^0,c
 11704  013934  0E00               	movlw	0
 11705  013936  2206               	addwfc	(___almod@divisor+1)^0,f,c
 11706  013938  2207               	addwfc	(___almod@divisor+2)^0,f,c
 11707  01393A  2208               	addwfc	(___almod@divisor+3)^0,f,c
 11708  01393C                     l5056:
 11709  01393C  5005               	movf	___almod@divisor^0,w,c
 11710  01393E  1006               	iorwf	(___almod@divisor+1)^0,w,c
 11711  013940  1007               	iorwf	(___almod@divisor+2)^0,w,c
 11712  013942  1008               	iorwf	(___almod@divisor+3)^0,w,c
 11713  013944  B4D8               	btfsc	status,2,c
 11714  013946  D024               	goto	l5072
 11715  013948  0E01               	movlw	1
 11716  01394A  6E09               	movwf	___almod@counter^0,c
 11717  01394C  D006               	goto	l5062
 11718  01394E                     l5060:
 11719  01394E  90D8               	bcf	status,0,c
 11720  013950  3605               	rlcf	___almod@divisor^0,f,c
 11721  013952  3606               	rlcf	(___almod@divisor+1)^0,f,c
 11722  013954  3607               	rlcf	(___almod@divisor+2)^0,f,c
 11723  013956  3608               	rlcf	(___almod@divisor+3)^0,f,c
 11724  013958  2A09               	incf	___almod@counter^0,f,c
 11725  01395A                     l5062:
 11726  01395A  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11727  01395C  D7F8               	goto	l5060
 11728  01395E                     u6250:
 11729  01395E  5005               	movf	___almod@divisor^0,w,c
 11730  013960  5C01               	subwf	___almod@dividend^0,w,c
 11731  013962  5006               	movf	(___almod@divisor+1)^0,w,c
 11732  013964  5802               	subwfb	(___almod@dividend+1)^0,w,c
 11733  013966  5007               	movf	(___almod@divisor+2)^0,w,c
 11734  013968  5803               	subwfb	(___almod@dividend+2)^0,w,c
 11735  01396A  5008               	movf	(___almod@divisor+3)^0,w,c
 11736  01396C  5804               	subwfb	(___almod@dividend+3)^0,w,c
 11737  01396E  A0D8               	btfss	status,0,c
 11738  013970  D008               	goto	l5068
 11739  013972  5005               	movf	___almod@divisor^0,w,c
 11740  013974  5E01               	subwf	___almod@dividend^0,f,c
 11741  013976  5006               	movf	(___almod@divisor+1)^0,w,c
 11742  013978  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 11743  01397A  5007               	movf	(___almod@divisor+2)^0,w,c
 11744  01397C  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 11745  01397E  5008               	movf	(___almod@divisor+3)^0,w,c
 11746  013980  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 11747  013982                     l5068:
 11748  013982  90D8               	bcf	status,0,c
 11749  013984  3208               	rrcf	(___almod@divisor+3)^0,f,c
 11750  013986  3207               	rrcf	(___almod@divisor+2)^0,f,c
 11751  013988  3206               	rrcf	(___almod@divisor+1)^0,f,c
 11752  01398A  3205               	rrcf	___almod@divisor^0,f,c
 11753  01398C  2E09               	decfsz	___almod@counter^0,f,c
 11754  01398E  D7E7               	goto	u6250
 11755  013990                     l5072:
 11756  013990  500A               	movf	___almod@sign^0,w,c
 11757  013992  B4D8               	btfsc	status,2,c
 11758  013994  D008               	goto	l5076
 11759  013996  1E04               	comf	(___almod@dividend+3)^0,f,c
 11760  013998  1E03               	comf	(___almod@dividend+2)^0,f,c
 11761  01399A  1E02               	comf	(___almod@dividend+1)^0,f,c
 11762  01399C  6C01               	negf	___almod@dividend^0,c
 11763  01399E  0E00               	movlw	0
 11764  0139A0  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11765  0139A2  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11766  0139A4  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11767  0139A6                     l5076:
 11768  0139A6  0060  F004  F001   	movff	___almod@dividend,?___almod
 11769  0139AC  0060  F008  F002   	movff	___almod@dividend+1,?___almod+1
 11770  0139B2  0060  F00C  F003   	movff	___almod@dividend+2,?___almod+2
 11771  0139B8  0060  F010  F004   	movff	___almod@dividend+3,?___almod+3
 11772  0139BE  0012               	return		;funcret
 11773  0139C0                     __end_of___almod:
 11774                           	opt callstack 0
 11775                           
 11776 ;; *************** function ___aldiv *****************
 11777 ;; Defined at:
 11778 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  dividend        4   12[COMRAM] long 
 11781 ;;  divisor         4   16[COMRAM] long 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  quotient        4   22[COMRAM] long 
 11784 ;;  sign            1   21[COMRAM] unsigned char 
 11785 ;;  counter         1   20[COMRAM] unsigned char 
 11786 ;; Return value:  Size  Location     Type
 11787 ;;                  4   12[COMRAM] long 
 11788 ;; Registers used:
 11789 ;;		wreg, status,2, status,0
 11790 ;; Tracked objects:
 11791 ;;		On entry : 3B/4
 11792 ;;		On exit  : 3B/0
 11793 ;;		Unchanged: 3B/0
 11794 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11795 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11796 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11798 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11799 ;;Total ram usage:       14 bytes
 11800 ;; Hardware stack levels used:    1
 11801 ;; This function calls:
 11802 ;;		Nothing
 11803 ;; This function is called by:
 11804 ;;		_updateButtonLight
 11805 ;;		_setLED
 11806 ;; This function uses a non-reentrant model
 11807 ;;
 11808                           
 11809                           	psect	text41
 11810  0135EA                     __ptext41:
 11811                           	opt callstack 0
 11812  0135EA                     ___aldiv:
 11813                           	opt callstack 28
 11814                           
 11815                           ;incstack = 0
 11816  0135EA  0E00               	movlw	0
 11817  0135EC  6E16               	movwf	___aldiv@sign^0,c
 11818  0135EE  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11819  0135F0  D00A               	goto	l5008
 11820  0135F2  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 11821  0135F4  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 11822  0135F6  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 11823  0135F8  6C11               	negf	___aldiv@divisor^0,c
 11824  0135FA  0E00               	movlw	0
 11825  0135FC  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 11826  0135FE  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 11827  013600  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 11828  013602  0E01               	movlw	1
 11829  013604  6E16               	movwf	___aldiv@sign^0,c
 11830  013606                     l5008:
 11831  013606  AE10               	btfss	(___aldiv@dividend+3)^0,7,c
 11832  013608  D00A               	goto	l5014
 11833  01360A  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 11834  01360C  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 11835  01360E  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 11836  013610  6C0D               	negf	___aldiv@dividend^0,c
 11837  013612  0E00               	movlw	0
 11838  013614  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 11839  013616  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 11840  013618  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 11841  01361A  0E01               	movlw	1
 11842  01361C  1A16               	xorwf	___aldiv@sign^0,f,c
 11843  01361E                     l5014:
 11844  01361E  0E00               	movlw	0
 11845  013620  6E17               	movwf	___aldiv@quotient^0,c
 11846  013622  0E00               	movlw	0
 11847  013624  6E18               	movwf	(___aldiv@quotient+1)^0,c
 11848  013626  0E00               	movlw	0
 11849  013628  6E19               	movwf	(___aldiv@quotient+2)^0,c
 11850  01362A  0E00               	movlw	0
 11851  01362C  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 11852  01362E  5011               	movf	___aldiv@divisor^0,w,c
 11853  013630  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 11854  013632  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 11855  013634  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 11856  013636  B4D8               	btfsc	status,2,c
 11857  013638  D02A               	goto	l5036
 11858  01363A  0E01               	movlw	1
 11859  01363C  6E15               	movwf	___aldiv@counter^0,c
 11860  01363E  D006               	goto	l5022
 11861  013640                     l5020:
 11862  013640  90D8               	bcf	status,0,c
 11863  013642  3611               	rlcf	___aldiv@divisor^0,f,c
 11864  013644  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 11865  013646  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 11866  013648  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 11867  01364A  2A15               	incf	___aldiv@counter^0,f,c
 11868  01364C                     l5022:
 11869  01364C  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11870  01364E  D7F8               	goto	l5020
 11871  013650                     u6190:
 11872  013650  90D8               	bcf	status,0,c
 11873  013652  3617               	rlcf	___aldiv@quotient^0,f,c
 11874  013654  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 11875  013656  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 11876  013658  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 11877  01365A  5011               	movf	___aldiv@divisor^0,w,c
 11878  01365C  5C0D               	subwf	___aldiv@dividend^0,w,c
 11879  01365E  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11880  013660  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 11881  013662  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11882  013664  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 11883  013666  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11884  013668  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 11885  01366A  A0D8               	btfss	status,0,c
 11886  01366C  D009               	goto	l5032
 11887  01366E  5011               	movf	___aldiv@divisor^0,w,c
 11888  013670  5E0D               	subwf	___aldiv@dividend^0,f,c
 11889  013672  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11890  013674  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 11891  013676  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11892  013678  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 11893  01367A  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11894  01367C  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 11895  01367E  8017               	bsf	___aldiv@quotient^0,0,c
 11896  013680                     l5032:
 11897  013680  90D8               	bcf	status,0,c
 11898  013682  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 11899  013684  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 11900  013686  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 11901  013688  3211               	rrcf	___aldiv@divisor^0,f,c
 11902  01368A  2E15               	decfsz	___aldiv@counter^0,f,c
 11903  01368C  D7E1               	goto	u6190
 11904  01368E                     l5036:
 11905  01368E  5016               	movf	___aldiv@sign^0,w,c
 11906  013690  B4D8               	btfsc	status,2,c
 11907  013692  D008               	goto	l5040
 11908  013694  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 11909  013696  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 11910  013698  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 11911  01369A  6C17               	negf	___aldiv@quotient^0,c
 11912  01369C  0E00               	movlw	0
 11913  01369E  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 11914  0136A0  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 11915  0136A2  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 11916  0136A4                     l5040:
 11917  0136A4  0060  F05C  F00D   	movff	___aldiv@quotient,?___aldiv
 11918  0136AA  0060  F060  F00E   	movff	___aldiv@quotient+1,?___aldiv+1
 11919  0136B0  0060  F064  F00F   	movff	___aldiv@quotient+2,?___aldiv+2
 11920  0136B6  0060  F068  F010   	movff	___aldiv@quotient+3,?___aldiv+3
 11921  0136BC  0012               	return		;funcret
 11922  0136BE                     __end_of___aldiv:
 11923                           	opt callstack 0
 11924                           
 11925 ;; *************** function _lcd_set_data_addr *****************
 11926 ;; Defined at:
 11927 ;;		line 39 in file "char_lcd.c"
 11928 ;; Parameters:    Size  Location     Type
 11929 ;;  addr            1    wreg     unsigned char 
 11930 ;; Auto vars:     Size  Location     Type
 11931 ;;  addr            1    4[COMRAM] unsigned char 
 11932 ;; Return value:  Size  Location     Type
 11933 ;;                  1    wreg      void 
 11934 ;; Registers used:
 11935 ;;		wreg, status,2, status,0, cstack
 11936 ;; Tracked objects:
 11937 ;;		On entry : 0/3B
 11938 ;;		On exit  : 0/0
 11939 ;;		Unchanged: 0/0
 11940 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11945 ;;Total ram usage:        1 bytes
 11946 ;; Hardware stack levels used:    1
 11947 ;; Hardware stack levels required when called:    1
 11948 ;; This function calls:
 11949 ;;		_lcd_write
 11950 ;; This function is called by:
 11951 ;;		_main_loop
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           	psect	text42
 11956  014434                     __ptext42:
 11957                           	opt callstack 0
 11958  014434                     _lcd_set_data_addr:
 11959                           	opt callstack 28
 11960                           
 11961                           ;incstack = 0
 11962                           ;lcd_set_data_addr@addr stored from wreg
 11963  014434  6E05               	movwf	lcd_set_data_addr@addr^0,c
 11964                           
 11965                           ;char_lcd.c: 40:     lcd_write(0, 0b10000000 | (addr & 0b01111111), 0);
 11966  014436  5005               	movf	lcd_set_data_addr@addr^0,w,c
 11967  014438  0B7F               	andlw	127
 11968  01443A  0980               	iorlw	128
 11969  01443C  6E01               	movwf	lcd_write@data^0,c
 11970  01443E  0E00               	movlw	0
 11971  014440  6E02               	movwf	lcd_write@longdelay^0,c
 11972  014442  0E00               	movlw	0
 11973  014444  ECEF  F0A0         	call	_lcd_write
 11974  014448  0012               	return		;funcret
 11975  01444A                     __end_of_lcd_set_data_addr:
 11976                           	opt callstack 0
 11977                           
 11978 ;; *************** function _lcd_print *****************
 11979 ;; Defined at:
 11980 ;;		line 54 in file "char_lcd.c"
 11981 ;; Parameters:    Size  Location     Type
 11982 ;;  string          2    4[COMRAM] PTR unsigned char 
 11983 ;;		 -> STR_14(13), main_loop@batmsg(17), STR_6(17), STR_5(17), 
 11984 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
 11985 ;; Auto vars:     Size  Location     Type
 11986 ;;  i               1    8[COMRAM] unsigned char 
 11987 ;; Return value:  Size  Location     Type
 11988 ;;                  1    wreg      void 
 11989 ;; Registers used:
 11990 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11991 ;; Tracked objects:
 11992 ;;		On entry : 0/3F
 11993 ;;		On exit  : 0/0
 11994 ;;		Unchanged: 0/0
 11995 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11996 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11997 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11998 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11999 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12000 ;;Total ram usage:        5 bytes
 12001 ;; Hardware stack levels used:    1
 12002 ;; Hardware stack levels required when called:    1
 12003 ;; This function calls:
 12004 ;;		_lcd_write
 12005 ;; This function is called by:
 12006 ;;		_main_loop
 12007 ;;		_main
 12008 ;; This function uses a non-reentrant model
 12009 ;;
 12010                           
 12011                           	psect	text43
 12012  013B9A                     __ptext43:
 12013                           	opt callstack 0
 12014  013B9A                     _lcd_print:
 12015                           	opt callstack 28
 12016                           
 12017                           ;char_lcd.c: 55:     uint8_t i = 0;
 12018                           
 12019                           ;incstack = 0
 12020  013B9A  0E00               	movlw	0
 12021  013B9C  6E09               	movwf	lcd_print@i^0,c
 12022                           
 12023                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 12024  013B9E  D022               	goto	l5216
 12025  013BA0                     l5212:
 12026                           
 12027                           ;char_lcd.c: 57:         lcd_write(1, string[i++], 0);
 12028  013BA0  5009               	movf	lcd_print@i^0,w,c
 12029  013BA2  2405               	addwf	lcd_print@string^0,w,c
 12030  013BA4  6E07               	movwf	??_lcd_print^0,c
 12031  013BA6  0E00               	movlw	0
 12032  013BA8  2006               	addwfc	(lcd_print@string+1)^0,w,c
 12033  013BAA  6E08               	movwf	(??_lcd_print+1)^0,c
 12034  013BAC  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 12035  013BB2  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 12036  013BB8  0E00               	movlw	low (__mediumconst shr (0+16))
 12037  013BBA  6EF8               	movwf	tblptru,c
 12038  013BBC  0E1F               	movlw	(high __ramtop+-1)
 12039  013BBE  64F7               	cpfsgt	tblptrh,c
 12040  013BC0  D003               	bra	u6487
 12041  013BC2  0008               	tblrd		*
 12042  013BC4  50F5               	movf	tablat,w,c
 12043  013BC6  D007               	bra	u6480
 12044  013BC8                     u6487:
 12045  013BC8  006F FFDB FFE1     	movff	tblptrl,fsr1l
 12046  013BCE  006F FFDF FFE2     	movff	tblptrh,fsr1h
 12047  013BD4  50E7               	movf	indf1,w,c
 12048  013BD6                     u6480:
 12049  013BD6  6E01               	movwf	lcd_write@data^0,c
 12050  013BD8  0E00               	movlw	0
 12051  013BDA  6E02               	movwf	lcd_write@longdelay^0,c
 12052  013BDC  0E01               	movlw	1
 12053  013BDE  ECEF  F0A0         	call	_lcd_write
 12054  013BE2  2A09               	incf	lcd_print@i^0,f,c
 12055  013BE4                     l5216:
 12056                           
 12057                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 12058  013BE4  5009               	movf	lcd_print@i^0,w,c
 12059  013BE6  2405               	addwf	lcd_print@string^0,w,c
 12060  013BE8  6E07               	movwf	??_lcd_print^0,c
 12061  013BEA  0E00               	movlw	0
 12062  013BEC  2006               	addwfc	(lcd_print@string+1)^0,w,c
 12063  013BEE  6E08               	movwf	(??_lcd_print+1)^0,c
 12064  013BF0  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 12065  013BF6  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 12066  013BFC  0E00               	movlw	low (__mediumconst shr (0+16))
 12067  013BFE  6EF8               	movwf	tblptru,c
 12068  013C00  0E1F               	movlw	(high __ramtop+-1)
 12069  013C02  64F7               	cpfsgt	tblptrh,c
 12070  013C04  D003               	bra	u6497
 12071  013C06  0008               	tblrd		*
 12072  013C08  50F5               	movf	tablat,w,c
 12073  013C0A  D007               	bra	u6490
 12074  013C0C                     u6497:
 12075  013C0C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 12076  013C12  006F FFDF FFE2     	movff	tblptrh,fsr1h
 12077  013C18  50E7               	movf	indf1,w,c
 12078  013C1A                     u6490:
 12079  013C1A  0900               	iorlw	0
 12080  013C1C  B4D8               	btfsc	status,2,c
 12081  013C1E  0012               	return	
 12082  013C20  2809               	incf	lcd_print@i^0,w,c
 12083  013C22  B4D8               	btfsc	status,2,c
 12084  013C24  0012               	return	
 12085  013C26  D7BC               	goto	l5212
 12086  013C28                     __end_of_lcd_print:
 12087                           	opt callstack 0
 12088                           
 12089 ;; *************** function ___xxtofl *****************
 12090 ;; Defined at:
 12091 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 12092 ;; Parameters:    Size  Location     Type
 12093 ;;  sign            1    wreg     unsigned char 
 12094 ;;  val             4    0[COMRAM] long 
 12095 ;; Auto vars:     Size  Location     Type
 12096 ;;  sign            1    8[COMRAM] unsigned char 
 12097 ;;  arg             4   10[COMRAM] unsigned long 
 12098 ;;  exp             1    9[COMRAM] unsigned char 
 12099 ;; Return value:  Size  Location     Type
 12100 ;;                  4    0[COMRAM] unsigned char 
 12101 ;; Registers used:
 12102 ;;		wreg, status,2, status,0
 12103 ;; Tracked objects:
 12104 ;;		On entry : 0/4
 12105 ;;		On exit  : 0/0
 12106 ;;		Unchanged: 0/0
 12107 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12108 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12109 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12110 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12111 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12112 ;;Total ram usage:       14 bytes
 12113 ;; Hardware stack levels used:    1
 12114 ;; This function calls:
 12115 ;;		Nothing
 12116 ;; This function is called by:
 12117 ;;		_main_loop
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           	psect	text44
 12122  0131A8                     __ptext44:
 12123                           	opt callstack 0
 12124  0131A8                     ___xxtofl:
 12125                           	opt callstack 29
 12126                           
 12127                           ;incstack = 0
 12128                           ;___xxtofl@sign stored from wreg
 12129  0131A8  6E09               	movwf	___xxtofl@sign^0,c
 12130  0131AA  5009               	movf	___xxtofl@sign^0,w,c
 12131  0131AC  A4D8               	btfss	status,2,c
 12132  0131AE  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 12133  0131B0  D022               	goto	l1383
 12134  0131B2  0060  F004  F005   	movff	___xxtofl@val,??___xxtofl
 12135  0131B8  0060  F008  F006   	movff	___xxtofl@val+1,??___xxtofl+1
 12136  0131BE  0060  F00C  F007   	movff	___xxtofl@val+2,??___xxtofl+2
 12137  0131C4  0060  F010  F008   	movff	___xxtofl@val+3,??___xxtofl+3
 12138  0131CA  1E05               	comf	??___xxtofl^0,f,c
 12139  0131CC  1E06               	comf	(??___xxtofl+1)^0,f,c
 12140  0131CE  1E07               	comf	(??___xxtofl+2)^0,f,c
 12141  0131D0  1E08               	comf	(??___xxtofl+3)^0,f,c
 12142  0131D2  2A05               	incf	??___xxtofl^0,f,c
 12143  0131D4  0E00               	movlw	0
 12144  0131D6  2206               	addwfc	(??___xxtofl+1)^0,f,c
 12145  0131D8  2207               	addwfc	(??___xxtofl+2)^0,f,c
 12146  0131DA  2208               	addwfc	(??___xxtofl+3)^0,f,c
 12147  0131DC  0060  F014  F00B   	movff	??___xxtofl,___xxtofl@arg
 12148  0131E2  0060  F018  F00C   	movff	??___xxtofl+1,___xxtofl@arg+1
 12149  0131E8  0060  F01C  F00D   	movff	??___xxtofl+2,___xxtofl@arg+2
 12150  0131EE  0060  F020  F00E   	movff	??___xxtofl+3,___xxtofl@arg+3
 12151  0131F4  D00C               	goto	l5362
 12152  0131F6                     l1383:
 12153  0131F6  0060  F004  F00B   	movff	___xxtofl@val,___xxtofl@arg
 12154  0131FC  0060  F008  F00C   	movff	___xxtofl@val+1,___xxtofl@arg+1
 12155  013202  0060  F00C  F00D   	movff	___xxtofl@val+2,___xxtofl@arg+2
 12156  013208  0060  F010  F00E   	movff	___xxtofl@val+3,___xxtofl@arg+3
 12157  01320E                     l5362:
 12158  01320E  5001               	movf	___xxtofl@val^0,w,c
 12159  013210  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 12160  013212  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 12161  013214  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 12162  013216  A4D8               	btfss	status,2,c
 12163  013218  D009               	goto	l5368
 12164  01321A  0E00               	movlw	0
 12165  01321C  6E01               	movwf	?___xxtofl^0,c
 12166  01321E  0E00               	movlw	0
 12167  013220  6E02               	movwf	(?___xxtofl+1)^0,c
 12168  013222  0E00               	movlw	0
 12169  013224  6E03               	movwf	(?___xxtofl+2)^0,c
 12170  013226  0E00               	movlw	0
 12171  013228  6E04               	movwf	(?___xxtofl+3)^0,c
 12172  01322A  0012               	return	
 12173  01322C                     l5368:
 12174  01322C  0E96               	movlw	150
 12175  01322E  6E0A               	movwf	___xxtofl@exp^0,c
 12176  013230  D006               	goto	l5372
 12177  013232                     l5370:
 12178  013232  2A0A               	incf	___xxtofl@exp^0,f,c
 12179  013234  90D8               	bcf	status,0,c
 12180  013236  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12181  013238  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12182  01323A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12183  01323C  320B               	rrcf	___xxtofl@arg^0,f,c
 12184  01323E                     l5372:
 12185  01323E  0E00               	movlw	0
 12186  013240  140B               	andwf	___xxtofl@arg^0,w,c
 12187  013242  6E05               	movwf	??___xxtofl^0,c
 12188  013244  0E00               	movlw	0
 12189  013246  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12190  013248  6E06               	movwf	(??___xxtofl+1)^0,c
 12191  01324A  0E00               	movlw	0
 12192  01324C  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12193  01324E  6E07               	movwf	(??___xxtofl+2)^0,c
 12194  013250  0EFE               	movlw	254
 12195  013252  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12196  013254  6E08               	movwf	(??___xxtofl+3)^0,c
 12197  013256  5005               	movf	??___xxtofl^0,w,c
 12198  013258  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12199  01325A  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12200  01325C  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12201  01325E  B4D8               	btfsc	status,2,c
 12202  013260  D00D               	goto	l1390
 12203  013262  D7E7               	goto	l5370
 12204  013264                     l5374:
 12205  013264  2A0A               	incf	___xxtofl@exp^0,f,c
 12206  013266  0E01               	movlw	1
 12207  013268  260B               	addwf	___xxtofl@arg^0,f,c
 12208  01326A  0E00               	movlw	0
 12209  01326C  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 12210  01326E  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 12211  013270  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 12212  013272  90D8               	bcf	status,0,c
 12213  013274  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 12214  013276  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 12215  013278  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 12216  01327A  320B               	rrcf	___xxtofl@arg^0,f,c
 12217  01327C                     l1390:
 12218  01327C  0E00               	movlw	0
 12219  01327E  140B               	andwf	___xxtofl@arg^0,w,c
 12220  013280  6E05               	movwf	??___xxtofl^0,c
 12221  013282  0E00               	movlw	0
 12222  013284  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 12223  013286  6E06               	movwf	(??___xxtofl+1)^0,c
 12224  013288  0E00               	movlw	0
 12225  01328A  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 12226  01328C  6E07               	movwf	(??___xxtofl+2)^0,c
 12227  01328E  0EFF               	movlw	255
 12228  013290  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 12229  013292  6E08               	movwf	(??___xxtofl+3)^0,c
 12230  013294  5005               	movf	??___xxtofl^0,w,c
 12231  013296  1006               	iorwf	(??___xxtofl+1)^0,w,c
 12232  013298  1007               	iorwf	(??___xxtofl+2)^0,w,c
 12233  01329A  1008               	iorwf	(??___xxtofl+3)^0,w,c
 12234  01329C  B4D8               	btfsc	status,2,c
 12235  01329E  D007               	goto	l5382
 12236  0132A0  D7E1               	goto	l5374
 12237  0132A2                     l5380:
 12238  0132A2  060A               	decf	___xxtofl@exp^0,f,c
 12239  0132A4  90D8               	bcf	status,0,c
 12240  0132A6  360B               	rlcf	___xxtofl@arg^0,f,c
 12241  0132A8  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 12242  0132AA  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 12243  0132AC  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 12244  0132AE                     l5382:
 12245  0132AE  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12246  0132B0  D003               	goto	u6770
 12247  0132B2  0E02               	movlw	2
 12248  0132B4  600A               	cpfslt	___xxtofl@exp^0,c
 12249  0132B6  D7F5               	goto	l5380
 12250  0132B8                     u6770:
 12251  0132B8  A00A               	btfss	___xxtofl@exp^0,0,c
 12252  0132BA  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12253  0132BC  90D8               	bcf	status,0,c
 12254  0132BE  320A               	rrcf	___xxtofl@exp^0,f,c
 12255  0132C0  0060  F028  F005   	movff	___xxtofl@exp,??___xxtofl
 12256  0132C6  6A06               	clrf	(??___xxtofl+1)^0,c
 12257  0132C8  6A07               	clrf	(??___xxtofl+2)^0,c
 12258  0132CA  6A08               	clrf	(??___xxtofl+3)^0,c
 12259  0132CC  0060  F014  F008   	movff	??___xxtofl,??___xxtofl+3
 12260  0132D2  6A07               	clrf	(??___xxtofl+2)^0,c
 12261  0132D4  6A06               	clrf	(??___xxtofl+1)^0,c
 12262  0132D6  6A05               	clrf	??___xxtofl^0,c
 12263  0132D8  5005               	movf	??___xxtofl^0,w,c
 12264  0132DA  120B               	iorwf	___xxtofl@arg^0,f,c
 12265  0132DC  5006               	movf	(??___xxtofl+1)^0,w,c
 12266  0132DE  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12267  0132E0  5007               	movf	(??___xxtofl+2)^0,w,c
 12268  0132E2  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12269  0132E4  5008               	movf	(??___xxtofl+3)^0,w,c
 12270  0132E6  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12271  0132E8  5009               	movf	___xxtofl@sign^0,w,c
 12272  0132EA  A4D8               	btfss	status,2,c
 12273  0132EC  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 12274  0132EE  D001               	goto	l5398
 12275  0132F0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12276  0132F2                     l5398:
 12277  0132F2  0060  F02C  F001   	movff	___xxtofl@arg,?___xxtofl
 12278  0132F8  0060  F030  F002   	movff	___xxtofl@arg+1,?___xxtofl+1
 12279  0132FE  0060  F034  F003   	movff	___xxtofl@arg+2,?___xxtofl+2
 12280  013304  0060  F038  F004   	movff	___xxtofl@arg+3,?___xxtofl+3
 12281  01330A  0012               	return		;funcret
 12282  01330C                     __end_of___xxtofl:
 12283                           	opt callstack 0
 12284                           
 12285 ;; *************** function ___llmod *****************
 12286 ;; Defined at:
 12287 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 12288 ;; Parameters:    Size  Location     Type
 12289 ;;  dividend        4   13[COMRAM] unsigned long 
 12290 ;;  divisor         4   17[COMRAM] unsigned long 
 12291 ;; Auto vars:     Size  Location     Type
 12292 ;;  counter         1   21[COMRAM] unsigned char 
 12293 ;; Return value:  Size  Location     Type
 12294 ;;                  4   13[COMRAM] unsigned long 
 12295 ;; Registers used:
 12296 ;;		wreg, status,2, status,0
 12297 ;; Tracked objects:
 12298 ;;		On entry : 0/4
 12299 ;;		On exit  : 0/0
 12300 ;;		Unchanged: 0/0
 12301 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12302 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12303 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12305 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12306 ;;Total ram usage:        9 bytes
 12307 ;; Hardware stack levels used:    1
 12308 ;; This function calls:
 12309 ;;		Nothing
 12310 ;; This function is called by:
 12311 ;;		_main_loop
 12312 ;; This function uses a non-reentrant model
 12313 ;;
 12314                           
 12315                           	psect	text45
 12316  013F9C                     __ptext45:
 12317                           	opt callstack 0
 12318  013F9C                     ___llmod:
 12319                           	opt callstack 29
 12320                           
 12321                           ;incstack = 0
 12322  013F9C  5012               	movf	___llmod@divisor^0,w,c
 12323  013F9E  1013               	iorwf	(___llmod@divisor+1)^0,w,c
 12324  013FA0  1014               	iorwf	(___llmod@divisor+2)^0,w,c
 12325  013FA2  1015               	iorwf	(___llmod@divisor+3)^0,w,c
 12326  013FA4  B4D8               	btfsc	status,2,c
 12327  013FA6  D024               	goto	l1148
 12328  013FA8  0E01               	movlw	1
 12329  013FAA  6E16               	movwf	___llmod@counter^0,c
 12330  013FAC  D006               	goto	l5346
 12331  013FAE                     l5344:
 12332  013FAE  90D8               	bcf	status,0,c
 12333  013FB0  3612               	rlcf	___llmod@divisor^0,f,c
 12334  013FB2  3613               	rlcf	(___llmod@divisor+1)^0,f,c
 12335  013FB4  3614               	rlcf	(___llmod@divisor+2)^0,f,c
 12336  013FB6  3615               	rlcf	(___llmod@divisor+3)^0,f,c
 12337  013FB8  2A16               	incf	___llmod@counter^0,f,c
 12338  013FBA                     l5346:
 12339  013FBA  AE15               	btfss	(___llmod@divisor+3)^0,7,c
 12340  013FBC  D7F8               	goto	l5344
 12341  013FBE                     u6690:
 12342  013FBE  5012               	movf	___llmod@divisor^0,w,c
 12343  013FC0  5C0E               	subwf	___llmod@dividend^0,w,c
 12344  013FC2  5013               	movf	(___llmod@divisor+1)^0,w,c
 12345  013FC4  580F               	subwfb	(___llmod@dividend+1)^0,w,c
 12346  013FC6  5014               	movf	(___llmod@divisor+2)^0,w,c
 12347  013FC8  5810               	subwfb	(___llmod@dividend+2)^0,w,c
 12348  013FCA  5015               	movf	(___llmod@divisor+3)^0,w,c
 12349  013FCC  5811               	subwfb	(___llmod@dividend+3)^0,w,c
 12350  013FCE  A0D8               	btfss	status,0,c
 12351  013FD0  D008               	goto	l5352
 12352  013FD2  5012               	movf	___llmod@divisor^0,w,c
 12353  013FD4  5E0E               	subwf	___llmod@dividend^0,f,c
 12354  013FD6  5013               	movf	(___llmod@divisor+1)^0,w,c
 12355  013FD8  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
 12356  013FDA  5014               	movf	(___llmod@divisor+2)^0,w,c
 12357  013FDC  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
 12358  013FDE  5015               	movf	(___llmod@divisor+3)^0,w,c
 12359  013FE0  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
 12360  013FE2                     l5352:
 12361  013FE2  90D8               	bcf	status,0,c
 12362  013FE4  3215               	rrcf	(___llmod@divisor+3)^0,f,c
 12363  013FE6  3214               	rrcf	(___llmod@divisor+2)^0,f,c
 12364  013FE8  3213               	rrcf	(___llmod@divisor+1)^0,f,c
 12365  013FEA  3212               	rrcf	___llmod@divisor^0,f,c
 12366  013FEC  2E16               	decfsz	___llmod@counter^0,f,c
 12367  013FEE  D7E7               	goto	u6690
 12368  013FF0                     l1148:
 12369  013FF0  0060  F038  F00E   	movff	___llmod@dividend,?___llmod
 12370  013FF6  0060  F03C  F00F   	movff	___llmod@dividend+1,?___llmod+1
 12371  013FFC  0060  F040  F010   	movff	___llmod@dividend+2,?___llmod+2
 12372  014002  0060  F044  F011   	movff	___llmod@dividend+3,?___llmod+3
 12373  014008  0012               	return		;funcret
 12374  01400A                     __end_of___llmod:
 12375                           	opt callstack 0
 12376                           
 12377 ;; *************** function ___lldiv *****************
 12378 ;; Defined at:
 12379 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 12380 ;; Parameters:    Size  Location     Type
 12381 ;;  dividend        4    0[COMRAM] unsigned long 
 12382 ;;  divisor         4    4[COMRAM] unsigned long 
 12383 ;; Auto vars:     Size  Location     Type
 12384 ;;  quotient        4    8[COMRAM] unsigned long 
 12385 ;;  counter         1   12[COMRAM] unsigned char 
 12386 ;; Return value:  Size  Location     Type
 12387 ;;                  4    0[COMRAM] unsigned long 
 12388 ;; Registers used:
 12389 ;;		wreg, status,2, status,0
 12390 ;; Tracked objects:
 12391 ;;		On entry : 3F/4
 12392 ;;		On exit  : 3F/4
 12393 ;;		Unchanged: 3F/0
 12394 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12395 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12396 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12398 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12399 ;;Total ram usage:       13 bytes
 12400 ;; Hardware stack levels used:    1
 12401 ;; This function calls:
 12402 ;;		Nothing
 12403 ;; This function is called by:
 12404 ;;		_main_loop
 12405 ;; This function uses a non-reentrant model
 12406 ;;
 12407                           
 12408                           	psect	text46
 12409  013CB2                     __ptext46:
 12410                           	opt callstack 0
 12411  013CB2                     ___lldiv:
 12412                           	opt callstack 29
 12413                           
 12414                           ; BSR set to: 4
 12415                           
 12416                           ;incstack = 0
 12417  013CB2  0E00               	movlw	0
 12418  013CB4  6E09               	movwf	___lldiv@quotient^0,c
 12419  013CB6  0E00               	movlw	0
 12420  013CB8  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12421  013CBA  0E00               	movlw	0
 12422  013CBC  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12423  013CBE  0E00               	movlw	0
 12424  013CC0  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12425                           
 12426                           ; BSR set to: 4
 12427  013CC2  5005               	movf	___lldiv@divisor^0,w,c
 12428  013CC4  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12429  013CC6  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12430  013CC8  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12431  013CCA  B4D8               	btfsc	status,2,c
 12432  013CCC  D02A               	goto	l755
 12433                           
 12434                           ; BSR set to: 4
 12435  013CCE  0E01               	movlw	1
 12436  013CD0  6E0D               	movwf	___lldiv@counter^0,c
 12437  013CD2  D006               	goto	l5326
 12438  013CD4                     l5324:
 12439                           
 12440                           ; BSR set to: 4
 12441  013CD4  90D8               	bcf	status,0,c
 12442  013CD6  3605               	rlcf	___lldiv@divisor^0,f,c
 12443  013CD8  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12444  013CDA  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12445  013CDC  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12446  013CDE  2A0D               	incf	___lldiv@counter^0,f,c
 12447  013CE0                     l5326:
 12448                           
 12449                           ; BSR set to: 4
 12450  013CE0  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12451  013CE2  D7F8               	goto	l5324
 12452  013CE4                     u6660:
 12453                           
 12454                           ; BSR set to: 4
 12455  013CE4  90D8               	bcf	status,0,c
 12456  013CE6  3609               	rlcf	___lldiv@quotient^0,f,c
 12457  013CE8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12458  013CEA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12459  013CEC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12460                           
 12461                           ; BSR set to: 4
 12462  013CEE  5005               	movf	___lldiv@divisor^0,w,c
 12463  013CF0  5C01               	subwf	___lldiv@dividend^0,w,c
 12464  013CF2  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12465  013CF4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12466  013CF6  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12467  013CF8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12468  013CFA  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12469  013CFC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12470  013CFE  A0D8               	btfss	status,0,c
 12471  013D00  D009               	goto	l5336
 12472                           
 12473                           ; BSR set to: 4
 12474  013D02  5005               	movf	___lldiv@divisor^0,w,c
 12475  013D04  5E01               	subwf	___lldiv@dividend^0,f,c
 12476  013D06  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12477  013D08  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12478  013D0A  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12479  013D0C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12480  013D0E  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12481  013D10  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12482                           
 12483                           ; BSR set to: 4
 12484  013D12  8009               	bsf	___lldiv@quotient^0,0,c
 12485  013D14                     l5336:
 12486                           
 12487                           ; BSR set to: 4
 12488  013D14  90D8               	bcf	status,0,c
 12489  013D16  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12490  013D18  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12491  013D1A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12492  013D1C  3205               	rrcf	___lldiv@divisor^0,f,c
 12493                           
 12494                           ; BSR set to: 4
 12495  013D1E  2E0D               	decfsz	___lldiv@counter^0,f,c
 12496  013D20  D7E1               	goto	u6660
 12497  013D22                     l755:
 12498                           
 12499                           ; BSR set to: 4
 12500  013D22  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
 12501  013D28  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
 12502  013D2E  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
 12503  013D34  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
 12504                           
 12505                           ; BSR set to: 4
 12506  013D3A  0012               	return		;funcret
 12507  013D3C                     __end_of___lldiv:
 12508                           	opt callstack 0
 12509                           
 12510 ;; *************** function _lcd_init *****************
 12511 ;; Defined at:
 12512 ;;		line 17 in file "char_lcd.c"
 12513 ;; Parameters:    Size  Location     Type
 12514 ;;  inc             1    wreg     _Bool 
 12515 ;;  shift           1    4[COMRAM] _Bool 
 12516 ;;  cursor          1    5[COMRAM] _Bool 
 12517 ;;  cursorblink     1    6[COMRAM] _Bool 
 12518 ;;  on              1    7[COMRAM] _Bool 
 12519 ;; Auto vars:     Size  Location     Type
 12520 ;;  inc             1    9[COMRAM] _Bool 
 12521 ;; Return value:  Size  Location     Type
 12522 ;;                  1    wreg      void 
 12523 ;; Registers used:
 12524 ;;		wreg, status,2, status,0, cstack
 12525 ;; Tracked objects:
 12526 ;;		On entry : 0/3F
 12527 ;;		On exit  : 0/0
 12528 ;;		Unchanged: 0/0
 12529 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12530 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12532 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12533 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12534 ;;Total ram usage:        6 bytes
 12535 ;; Hardware stack levels used:    1
 12536 ;; Hardware stack levels required when called:    1
 12537 ;; This function calls:
 12538 ;;		_lcd_write
 12539 ;; This function is called by:
 12540 ;;		_main
 12541 ;; This function uses a non-reentrant model
 12542 ;;
 12543                           
 12544                           	psect	text47
 12545  013DC4                     __ptext47:
 12546                           	opt callstack 0
 12547  013DC4                     _lcd_init:
 12548                           	opt callstack 29
 12549                           
 12550                           ; BSR set to: 4
 12551                           ;incstack = 0
 12552                           ;lcd_init@inc stored from wreg
 12553  013DC4  6E0A               	movwf	lcd_init@inc^0,c
 12554                           
 12555                           ;char_lcd.c: 18:     lcd_write(0, 0b00110011, 0);
 12556  013DC6  0E33               	movlw	51
 12557  013DC8  6E01               	movwf	lcd_write@data^0,c
 12558  013DCA  0E00               	movlw	0
 12559  013DCC  6E02               	movwf	lcd_write@longdelay^0,c
 12560  013DCE  0E00               	movlw	0
 12561  013DD0  ECEF  F0A0         	call	_lcd_write
 12562                           
 12563                           ;char_lcd.c: 19:     lcd_write(0, 0b00110011, 0);
 12564  013DD4  0E33               	movlw	51
 12565  013DD6  6E01               	movwf	lcd_write@data^0,c
 12566  013DD8  0E00               	movlw	0
 12567  013DDA  6E02               	movwf	lcd_write@longdelay^0,c
 12568  013DDC  0E00               	movlw	0
 12569  013DDE  ECEF  F0A0         	call	_lcd_write
 12570                           
 12571                           ;char_lcd.c: 20:     lcd_write(0, 0b00110011, 0);
 12572  013DE2  0E33               	movlw	51
 12573  013DE4  6E01               	movwf	lcd_write@data^0,c
 12574  013DE6  0E00               	movlw	0
 12575  013DE8  6E02               	movwf	lcd_write@longdelay^0,c
 12576  013DEA  0E00               	movlw	0
 12577  013DEC  ECEF  F0A0         	call	_lcd_write
 12578                           
 12579                           ;char_lcd.c: 21:     lcd_write(0, 0b00111011, 0);
 12580  013DF0  0E3B               	movlw	59
 12581  013DF2  6E01               	movwf	lcd_write@data^0,c
 12582  013DF4  0E00               	movlw	0
 12583  013DF6  6E02               	movwf	lcd_write@longdelay^0,c
 12584  013DF8  0E00               	movlw	0
 12585  013DFA  ECEF  F0A0         	call	_lcd_write
 12586                           
 12587                           ;char_lcd.c: 22:     lcd_write(0, 0b00000100 | (inc << 1) | shift, 0);
 12588  013DFE  500A               	movf	lcd_init@inc^0,w,c
 12589  013E00  240A               	addwf	lcd_init@inc^0,w,c
 12590  013E02  1005               	iorwf	lcd_init@shift^0,w,c
 12591  013E04  0904               	iorlw	4
 12592  013E06  6E01               	movwf	lcd_write@data^0,c
 12593  013E08  0E00               	movlw	0
 12594  013E0A  6E02               	movwf	lcd_write@longdelay^0,c
 12595  013E0C  0E00               	movlw	0
 12596  013E0E  ECEF  F0A0         	call	_lcd_write
 12597                           
 12598                           ;char_lcd.c: 23:     lcd_write(0, 0b00001000 | (on << 2) | (cursor << 1) | cursorblink ,
      +                           0);
 12599  013E12  90D8               	bcf	status,0,c
 12600  013E14  3406               	rlcf	lcd_init@cursor^0,w,c
 12601  013E16  6E09               	movwf	??_lcd_init^0,c
 12602  013E18  4408               	rlncf	lcd_init@on^0,w,c
 12603  013E1A  46E8               	rlncf	wreg,f,c
 12604  013E1C  0BFC               	andlw	252
 12605  013E1E  1009               	iorwf	??_lcd_init^0,w,c
 12606  013E20  1007               	iorwf	lcd_init@cursorblink^0,w,c
 12607  013E22  0908               	iorlw	8
 12608  013E24  6E01               	movwf	lcd_write@data^0,c
 12609  013E26  0E00               	movlw	0
 12610  013E28  6E02               	movwf	lcd_write@longdelay^0,c
 12611  013E2A  0E00               	movlw	0
 12612  013E2C  ECEF  F0A0         	call	_lcd_write
 12613                           
 12614                           ;char_lcd.c: 24:     lcd_write(0, 0b00000001, 1);
 12615  013E30  0E01               	movlw	1
 12616  013E32  6E01               	movwf	lcd_write@data^0,c
 12617  013E34  0E01               	movlw	1
 12618  013E36  6E02               	movwf	lcd_write@longdelay^0,c
 12619  013E38  0E00               	movlw	0
 12620  013E3A  ECEF  F0A0         	call	_lcd_write
 12621  013E3E  0012               	return		;funcret
 12622  013E40                     __end_of_lcd_init:
 12623                           	opt callstack 0
 12624                           
 12625 ;; *************** function _lcd_write *****************
 12626 ;; Defined at:
 12627 ;;		line 3 in file "char_lcd.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;  rs              1    wreg     _Bool 
 12630 ;;  data            1    0[COMRAM] unsigned char 
 12631 ;;  longdelay       1    1[COMRAM] _Bool 
 12632 ;; Auto vars:     Size  Location     Type
 12633 ;;  rs              1    3[COMRAM] _Bool 
 12634 ;; Return value:  Size  Location     Type
 12635 ;;                  1    wreg      void 
 12636 ;; Registers used:
 12637 ;;		wreg, status,2
 12638 ;; Tracked objects:
 12639 ;;		On entry : 0/3B
 12640 ;;		On exit  : 0/0
 12641 ;;		Unchanged: 0/0
 12642 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12644 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12645 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12646 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12647 ;;Total ram usage:        4 bytes
 12648 ;; Hardware stack levels used:    1
 12649 ;; This function calls:
 12650 ;;		Nothing
 12651 ;; This function is called by:
 12652 ;;		_lcd_init
 12653 ;;		_lcd_set_data_addr
 12654 ;;		_lcd_print
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           	psect	text48
 12659  0141DE                     __ptext48:
 12660                           	opt callstack 0
 12661  0141DE                     _lcd_write:
 12662                           	opt callstack 28
 12663                           
 12664                           ;incstack = 0
 12665                           ;lcd_write@rs stored from wreg
 12666  0141DE  6E04               	movwf	lcd_write@rs^0,c
 12667                           
 12668                           ;char_lcd.c: 4:     LATE2 = 1;
 12669  0141E0  84BE               	bsf	16318,2,c	;volatile
 12670                           
 12671                           ;char_lcd.c: 5:     LATE1 = 0;
 12672  0141E2  92BE               	bcf	16318,1,c	;volatile
 12673                           
 12674                           ;char_lcd.c: 6:     LATE0 = rs;
 12675  0141E4  B004               	btfsc	lcd_write@rs^0,0,c
 12676  0141E6  D002               	bra	u5965
 12677  0141E8  90BE               	bcf	16318,0,c	;volatile
 12678  0141EA  D001               	bra	u5966
 12679  0141EC                     u5965:
 12680  0141EC  80BE               	bsf	16318,0,c	;volatile
 12681  0141EE                     u5966:
 12682                           
 12683                           ;char_lcd.c: 7:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12684  0141EE  0E35               	movlw	53
 12685  0141F0                     u8517:
 12686  0141F0  2EE8               	decfsz	wreg,f,c
 12687  0141F2  D7FE               	bra	u8517
 12688  0141F4  F000               	nop	
 12689                           
 12690                           ;char_lcd.c: 8:     PORTA = data;
 12691  0141F6  0060  F007  FFCA   	movff	lcd_write@data,16330	;volatile
 12692                           
 12693                           ;char_lcd.c: 9:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12694  0141FC  0E35               	movlw	53
 12695  0141FE                     u8527:
 12696  0141FE  2EE8               	decfsz	wreg,f,c
 12697  014200  D7FE               	bra	u8527
 12698  014202  F000               	nop	
 12699                           
 12700                           ;char_lcd.c: 10:     LATE2 = 0;
 12701  014204  94BE               	bcf	16318,2,c	;volatile
 12702                           
 12703                           ;char_lcd.c: 11:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12704  014206  0E35               	movlw	53
 12705  014208                     u8537:
 12706  014208  2EE8               	decfsz	wreg,f,c
 12707  01420A  D7FE               	bra	u8537
 12708  01420C  F000               	nop	
 12709                           
 12710                           ;char_lcd.c: 12:     LATE2 = 1;
 12711  01420E  84BE               	bsf	16318,2,c	;volatile
 12712                           
 12713                           ;char_lcd.c: 13:     if (longdelay) _delay((unsigned long)((2)*(64000000/4000.0)));
 12714  014210  5002               	movf	lcd_write@longdelay^0,w,c
 12715  014212  B4D8               	btfsc	status,2,c
 12716  014214  D008               	goto	l4956
 12717  014216  0E2A               	movlw	42
 12718  014218  6E03               	movwf	??_lcd_write^0,c
 12719  01421A  0E8E               	movlw	142
 12720  01421C                     u8547:
 12721  01421C  2EE8               	decfsz	wreg,f,c
 12722  01421E  D7FE               	bra	u8547
 12723  014220  2E03               	decfsz	??_lcd_write^0,f,c
 12724  014222  D7FC               	bra	u8547
 12725  014224  0012               	return	
 12726  014226                     l4956:
 12727  014226  0EA0               	movlw	160
 12728  014228                     u8557:
 12729  014228  D000               	nop2	
 12730  01422A  2EE8               	decfsz	wreg,f,c
 12731  01422C  D7FD               	bra	u8557
 12732  01422E  0012               	return		;funcret
 12733  014230                     __end_of_lcd_write:
 12734                           	opt callstack 0
 12735                           
 12736                           	psect	rparam
 12737  0000                     tosu	equ	0x3FFF
 12738                           tosh	equ	0x3FFE
 12739                           tosl	equ	0x3FFD
 12740                           stkptr	equ	0x3FFC
 12741                           pclatu	equ	0x3FFB
 12742                           pclath	equ	0x3FFA
 12743                           pcl	equ	0x3FF9
 12744                           tblptru	equ	0x3FF8
 12745                           tblptrh	equ	0x3FF7
 12746                           tblptrl	equ	0x3FF6
 12747                           tablat	equ	0x3FF5
 12748                           prodh	equ	0x3FF4
 12749                           prodl	equ	0x3FF3
 12750                           indf0	equ	0x3FEF
 12751                           postinc0	equ	0x3FEE
 12752                           postdec0	equ	0x3FED
 12753                           preinc0	equ	0x3FEC
 12754                           plusw0	equ	0x3FEB
 12755                           fsr0h	equ	0x3FEA
 12756                           fsr0l	equ	0x3FE9
 12757                           wreg	equ	0x3FE8
 12758                           indf1	equ	0x3FE7
 12759                           postinc1	equ	0x3FE6
 12760                           postdec1	equ	0x3FE5
 12761                           preinc1	equ	0x3FE4
 12762                           plusw1	equ	0x3FE3
 12763                           fsr1h	equ	0x3FE2
 12764                           fsr1l	equ	0x3FE1
 12765                           bsr	equ	0x3FE0
 12766                           indf2	equ	0x3FDF
 12767                           postinc2	equ	0x3FDE
 12768                           postdec2	equ	0x3FDD
 12769                           preinc2	equ	0x3FDC
 12770                           plusw2	equ	0x3FDB
 12771                           fsr2h	equ	0x3FDA
 12772                           fsr2l	equ	0x3FD9
 12773                           status	equ	0x3FD8


Data Sizes:
    Strings     248
    Constant    37
    Data        10
    BSS         159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    116     144
    BANK3           256    256     256
    BANK4           256     53     194
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1181_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main_loop@batmsg(BANK4[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 20
		 -> STR_13(CODE[17]), STR_12(CODE[20]), STR_11(CODE[20]), STR_10(CODE[20]), 
		 -> STR_9(CODE[20]), STR_8(CODE[17]), STR_7(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    uart_send@buf	PTR unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK0[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    handle_message@message	PTR unsigned char  size(2) Largest target is 256
		 -> uart_tasks@message(BANK3[256]), 

    lcd_print@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_14(CODE[13]), main_loop@batmsg(BANK4[17]), STR_6(CODE[17]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _updateButtonLight->___aldiv
    _uart_tasks->_handle_message
    _handle_message->_uart_send
    _uart_send->_memcpy
    _vfprintf->_vfpfcnvrt
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___fladd
    _atoi->_isspace
    _setLED->___flge
    ___flge->___flmul
    ___aldiv->___lmul
    _lcd_set_data_addr->_lcd_write
    _lcd_print->_lcd_write
    ___llmod->___lldiv
    _lcd_init->_lcd_write

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    _main_loop->_uart_tasks

Critical Paths under _main in BANK4

    _main->_main_loop

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   67549
                                            114 BANK0      2     2      0
                           _lcd_init
                          _lcd_print
                          _main_loop
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           59    59      0   62287
                                            108 BANK0      6     6      0
                                              0 BANK4     53    53      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___lldiv
                            ___llmod
                             ___lmul
                           ___xxtofl
                          _lcd_print
                  _lcd_set_data_addr
                             _setLED
                            _sprintf
                          _uart_send
                         _uart_tasks
                  _updateButtonLight
 ---------------------------------------------------------------------------------
 (2) _updateButtonLight                                   12     8      4    1683
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _uart_tasks                                         271   271      0    2294
                                             20 COMRAM    15    15      0
                                              0 BANK3    256   256      0
                     _handle_message
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _handle_message                                       4     1      3    1375
                                             16 COMRAM     4     1      3
                          _uart_send
 ---------------------------------------------------------------------------------
 (4) _uart_send                                            5     2      3     937
                                             11 COMRAM     5     2      3
                             _memcpy
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _transmitChecksum                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             17     9      8   33436
                                             91 BANK0     17     9      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     2      4   31846
                                             85 BANK0      6     2      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    44      3   31295
                                             92 COMRAM     3     0      3
                                             67 BANK0     18    18      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              9     4      5     453
                                              0 COMRAM     9     4      5
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              67    61      6   25040
                                              0 BANK0     67    61      6
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 10     5      5    3551
                                             14 COMRAM    10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1334
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             55 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2505
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                              62    54      8    5320
                                              0 BANK0     62    54      8
                            ___aldiv
                            ___almod
                             ___flge
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     826
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1398
                                             80 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1516
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_set_data_addr                                    1     1      0    2086
                                              4 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2784
                                              4 COMRAM     5     3      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     2      4    2478
                                              4 COMRAM     6     2      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            4     2      2    2064
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_write
   _lcd_print
     _lcd_write
   _main_loop
     ___awdiv
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lmul
     ___xxtofl
     _lcd_print
       _lcd_write
     _lcd_set_data_addr
       _lcd_write
     _setLED
       ___aldiv
         ___lmul (ARG)
       ___almod
       ___flge
         ___flmul (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _uart_send
       _memcpy
       _transmitChecksum
     _uart_tasks
       _handle_message
         _uart_send
           _memcpy
           _transmitChecksum
       _transmitChecksum
     _updateButtonLight
       ___aldiv
         ___lmul (ARG)
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh           1D00      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      62        0.0%
BANK31             100      0       0      63        0.0%
BITBANK30          100      0       0      60        0.0%
BANK30             100      0       0      61        0.0%
BITBANK29          100      0       0      58        0.0%
BANK29             100      0       0      59        0.0%
BITBANK28          100      0       0      56        0.0%
BANK28             100      0       0      57        0.0%
BITBANK27          100      0       0      54        0.0%
BANK27             100      0       0      55        0.0%
BITBANK26          100      0       0      52        0.0%
BANK26             100      0       0      53        0.0%
BITBANK25          100      0       0      50        0.0%
BANK25             100      0       0      51        0.0%
BITBANK24          100      0       0      48        0.0%
BANK24             100      0       0      49        0.0%
BITBANK23          100      0       0      46        0.0%
BANK23             100      0       0      47        0.0%
BITBANK22          100      0       0      44        0.0%
BANK22             100      0       0      45        0.0%
BITBANK21          100      0       0      42        0.0%
BANK21             100      0       0      43        0.0%
BITBANK20          100      0       0      40        0.0%
BANK20             100      0       0      41        0.0%
BITBANK19          100      0       0      38        0.0%
BANK19             100      0       0      39        0.0%
BITBANK18          100      0       0      36        0.0%
BANK18             100      0       0      37        0.0%
BITBANK17          100      0       0      34        0.0%
BANK17             100      0       0      35        0.0%
BITBANK16          100      0       0      32        0.0%
BANK16             100      0       0      33        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK6           100      0       0      12        0.0%
BANK6              100      0       0      13        0.0%
BITBANK5           100      0       0      10        0.0%
BANK5              100      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100     35      C2       9       75.8%
BITBANK3           100      0       0       6        0.0%
BANK3              100    100     100       7      100.0%
BIGRAMl             FF      0       0      66        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     74      90       5       90.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B1      64        0.0%
DATA                 0      0     2B1       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Tue Dec 31 16:06:24 2019

     lcd_set_data_addr@addr 0005                ___fldiv@aexp 0037                ___fldiv@bexp 0036  
              ___fldiv@sign 002F                 __CFG_CP$OFF 000000                ___awdiv@sign 0006  
                        _on 00E5  __size_of_updateButtonLight 00E8         ___wmul@multiplicand 0003  
               __CFG_LVP$ON 000000                         l205 35E0                         l301 0654  
                       l235 1A38                         l333 0A3E                         l335 0A72  
                       l273 0056                         l279 0244                         l629 0F46  
                       l655 12FC                         l755 3D22                         l588 39F6  
                       l993 3752                         _pad 39C0                 lcd_init@inc 000A  
              ___awmod@sign 0006                         wreg 003FE8                ___flmul@aexp 0045  
              ___flmul@bexp 004A                ___flmul@sign 0044                ___flmul@temp 004F  
              ___flmul@prod 004B               __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000  
              ___fltol@exp1 000A                        l1312 2A44                        l1323 2AB2  
                      l1148 3FF0                        l1324 2AAE                        l1342 2274  
                      l1351 24A4                        l1352 24A0                        l1273 27AE  
                      l1257 26DC                        l1282 2816                        l1258 26BA  
                      l1450 2CAE                        l1283 2812                        l4020 299A  
                      l4012 2982                        l1390 327C                        l1438 2EC2  
                      l4030 29F4                        l4006 2964                        l1383 31F6  
                      l1359 253A                        l4112 2220                        l1536 41D0  
                      l4050 2A5A                        l4130 2260                        l4114 2224  
                      l5020 3640                        l4044 2A42                        l4212 2516  
                      l4140 2292                        l4132 2264                        l4116 2234  
                      l5022 364C                        l5014 361E                        l5110 16FE  
                      l4038 2A1C                        l5040 36A4                        l5032 3680  
                      l5008 3606                        l5112 170E                        l4312 3F1C  
                      l4304 3F04                        l4080 2B2A                        l4056 2A78  
                      l4320 3C5C                        l4224 255A                        l4208 24F8  
                      l6000 1600                        l5114 1728                        l4250 3D60  
                      l4090 2B62                        l4402 383E                        l6010 162C  
                      l5212 3BA0                        l5036 368E                        l5060 394E  
                      l5052 3928                        l4340 3726                        l5140 191E  
                      l5132 1832                        l5116 1738                        l4244 3D50  
                      l4308 3F0E                        l4092 2B64                        l4084 2B54  
                      l4076 2B06                        l4324 3C90                        l3700 25EC  
                      l5062 395A                        l4350 378A                        l4414 42B4  
                      l4182 244C                        l6110 2088                        l5216 3BE4  
                      l5072 3990                        l5056 393C                        l4344 373C  
                      l4336 36F2                        l5152 19FE                        l5144 1948  
                      l5128 17EC                        l4256 3D76                        l4272 3DA8  
                      l4328 3CAE                        l3712 2610                        l3704 25F0  
                      l5146 1958                        l4258 3D7E                        l3634 3B14  
                      l6026 168E                        l6106 2052                        l4426 3F44  
                      l4434 3F8A                        l5306 3188                        l5314 3196  
                      l5324 3CD4                        l5076 39A6                        l5068 3982  
                      l5164 1AC4                        l5156 1A28                        l4276 3DB6  
                      l4268 3D9E                        l4292 3ED6                        l4188 246A  
                      l3900 34B0                        l6060 1DFC                        l5316 3198  
                      l6220 02CC                        l5326 3CE0                        l5190 1C6A  
                      l5174 1B76                        l4358 4352                        l3806 27D2  
                      l3822 27F2                        l3742 266A                        l6134 219E  
                      l5254 307C                        l5086 3514                        l6302 0718  
                      l6230 036C                        ?_pad 000F                        l5336 3D14  
                      l5352 3FE2                        l5344 3FAE                        l5168 1AE6  
                      l4296 3EE4                        l4288 3ECA                        l3816 27E8  
                      l3680 25A8                        l4384 37FE                        l4368 37AC  
                      l6128 2160                        l6080 1EEC                        l6056 1DCC  
                      l6144 21BE                        l5088 3518                        l6304 0726  
                      l6240 0414                        l6232 037C                        l5346 3FBA  
                      l5370 3232                        l5362 320E                        l5178 1B98  
                      l4298 3EEC                        l3850 2892                        l3842 286C  
                      l3770 2700                        l3754 26C8                        l4394 3816  
                      l3906 34F8                        l3930 2C04                        l6138 21A8  
                      l6082 1EF8                        l6058 1DF0                        l5290 312E  
                      l5274 30CC                        l5098 357C                        l6330 084E  
                      l6314 07A0                        l6242 0452                        l6226 033A  
                      l6218 02B4                        l6234 0388                        l5380 32A2  
                      l5372 323E                        l5196 1D0E                        l5188 1C3A  
                      l3780 2726                        l3756 26CC                        l3676 25A4  
                      l4396 3822                        l4388 380E                        l3940 2CD0  
                      l6156 4144                        l5292 3134                        l5268 30BA  
                      l6340 08C4                        l6316 07A8                        l6308 0774  
                      l6228 0352                        l6252 05A6                        l5382 32AE  
                      l5374 3264                        l3854 289A                        l5702 431E  
                      l6078 1EC8                        l6158 4162                        l5278 30F4  
                      l6350 09CE                        l6262 0618                        l5368 322C  
                      l4752 2DD4                        l4736 2D68                        l3856 289C  
                      l3944 2D0E                        l6352 09E0                        l6264 0620  
                      l6184 0078                        l6176 000A                        l4762 2E52  
                      l4754 2DDC                        l4746 2DC2                        l4738 2D6C  
                      l3778 2722                        l5706 43E2                        l5722 39EE  
                      l6098 1FF2                        l5298 3160                        l6354 09FA  
                      l6338 08C0                        l6290 06DA                        l6178 0012  
                      l6426 303E                        l4756 2DE2                        l3788 2738  
                      l3948 2D3C                        l5708 43E6                        l5732 3A46  
                      l5724 3A00                        l5812 0DCA                        l6364 0AA6  
                      l6356 0A0A                        l6380 0B76                        l6276 065C  
                      l6196 014C                        l5398 32F2                        l4758 2E12  
                      l3974 28EC                        l3798 279E                        l5718 39DC  
                      l5910 12F4                        l5902 1278                        l5822 0EC6  
                      l5806 0D7E                        l5750 0BE6                        l4782 3884  
                      l6366 0AD6                        l6374 0B52                        l6294 06EE  
                      l6286 06C6                        l3896 34A6                        l5728 3A16  
                      l5912 1316                        l5816 0E14                        l4784 3890  
                      l3994 292C                        l3978 28F0                        l5738 4022  
                      l5834 0F2E                        l5818 0E7A                        l5762 0C16  
                      l5770 0C2E                        l6298 0702                        l4956 4226  
                      l5924 13C4                        l5852 0FA6                        l5844 0F5A  
                      l5780 0CA2                        l4972 33DA                        l3998 2930  
                      l5870 0FF0                        l5854 0FAA                        l5838 0F54  
                      l5782 0CBA                        l4966 3352                        l4992 40E0  
                      l5936 13F2                        l5944 1412                        l5952 1436  
                      l5960 1506                        l5880 103A                        l5864 0FCC  
                      l5784 0CC4                        l5698 4308                        l5874 1000  
                      l4996 40F4                        l5972 1548                        l5788 0CF0  
                      l5990 15A0                        l5798 0D64                        l5896 122A  
                      l5888 1194                        l5988 1596                        STR_1 FFAB  
                      STR_2 FFBC                        STR_3 FF67                        STR_4 FF78  
                      STR_5 FF9A                        STR_6 FF56                        STR_7 FF89  
                      STR_8 FFCD                        STR_9 FF42                        u5000 37D2  
                      u4050 2878                        u4130 346C                        _T2PR 003FAB  
                      u4300 2C94                        u4220 41B6                        u5005 37C8  
                      u4230 41B8                        u4135 3462                        u5040 3828  
                      u4320 2CF6                        u4305 2C8A                        u4250 2BCA  
                      u4180 34F0                        u4260 2BEA                        u6100 33D6  
                      u4325 2CEC                        u4350 43CC                        u5070 42B0  
                      u4190 34F2                        u3630 3B0C                        u6030 3384  
                      u4175 34D2                        u4255 2BC0                        u4360 43CE  
                      u3800 269E                        u6120 33F4                        u6040 3386  
                      u4530 2AA8                        u3810 26A0                        u3650 3B4E  
                      u5090 3F6E                        u6050 339E                        u6060 33A0  
                      u6300 354E                        _PMD0 0039C0                        u4285 2C1E  
                      _PMD1 0039C1                        u4710 249A                        u4286 2C24  
                      u6070 33BA                        _PMD2 0039C2                        u4287 2C32  
                      _PMD3 0039C3                        u6320 16E4                        u3840 26E4  
                      u3680 4398                        u6080 33BC                        _PMD4 0039C4  
                      u5097 3F60                        _PMD5 0039C5                        u6250 395E  
                      u6410 1AD6                        u6330 17BE                        u4810 3D82  
                      u4570 2B14                        u3690 439A                        u6090 33D4  
                      _PMD6 0039C6                        _PMD7 0039C7                        u6340 1804  
                      u4580 2B38                        u8100 0228                        u6190 3650  
                      u6430 1B88                        u4750 2506                        u4670 2280  
                      u3790 268E                        u8110 0240                        u6360 18EE  
                      u5640 2DBE                        u4920 3CAA                        u4760 2524  
                      u7400 0D3C                        u8200 05F0                        u8120 0250  
                      u6450 1C28                        u3970 27F6                        u7410 0D3E  
                      u7330 0C06                        u8130 0252                        u6380 19CE  
                      u5660 2E8A                        u5740 38E2                        u6470 1CDC  
                      u5670 2E8C                        u4870 3EF0                        u3990 280C  
                      u7510 0F72                        u6480 3BD6                        u7360 0C7A  
                      u8320 0796                        u8160 02E0                        u6490 3C1A  
                      u7290 4068                        u7450 0EFE                        u7370 0C7C  
                      u8218 05F4                        u6660 3CE4                        u6580 30EE  
                      u8180 0408                        u4990 379A                        u7550 0FC8  
                      u6487 3BC8                        u7800 1678                        u7720 152A  
                      u7480 0F3C                        u6497 3C0C                        u7297 405A  
                      u6690 3FBE                        u6770 32B8                        u7810 167A  
                      u8507 0B7E                        u8355 084A                        u8356 084C  
                      u8517 41F0                        u5965 41EC                        u8445 0B2A  
                      u5966 41EE                        u7910 1F38                        u8446 0B2C  
                      u8527 41FE                        u7920 1F3A                        u8537 4208  
                      u8457 2FF2                        u7930 1F46                        u8547 421C  
                      u8467 300C                        u7780 1616                        u7860 1E3C  
                      u8557 4228                        u8477 000C                        u7870 1E3E  
                      u8487 061A                        u7880 1E4A                        u8497 07A2  
                      u7980 2118                        u7990 211A                        _WPUA 003A41  
                      _WPUB 003A51                        _WPUC 003A61                        _WPUD 003A71  
                      _WPUE 003A81               __CFG_FCMEN$ON 000000                        _dbuf 043D  
                      _atoi 2D56                        _main 2ED0                        _prec 00E0  
                      _nout 00DC                        pad@i 0015                        pad@p 0012  
                      fsr1h 003FE2                        fsr2h 003FDA                        indf1 003FE7  
                      indf2 003FDF                        fsr1l 003FE1                        pad@w 0017  
                      fsr2l 003FD9                _soundAmplify FEE1               ___fpclassifyf 3416  
                      prodh 003FF4                        prodl 003FF3                        start FFFC  
           ___fldiv@new_exp 0030                 lcd_write@rs 0004                _tolower$1253 000D  
             __CFG_CSWEN$ON 000000                ___param_bank 000000                       ??_pad 0014  
             ___fltol@sign1 0009             __end_of___aldiv 36BE                       ?_atoi 0008  
           __end_of___almod 39C0             __end_of___fladd 28C0                       ?_main 0001  
                     _ADCLK 003EFF               _main_loop$321 04B5               _main_loop$322 04A2  
             _main_loop$323 04A6               _main_loop$324 04AA               _main_loop$345 04AE  
                     _ADPCH 003EF1             __end_of___fldiv 2B6C                       _ADREF 003EFD  
           __end_of___awdiv 3DC4             __end_of___flneg 436C                       STR_10 FF1A  
                     STR_11 FF2E                       STR_20 FFF7                       STR_12 FF06  
                     STR_13 FFCD                       STR_14 FFDE                       STR_23 FFFB  
                     STR_15 FFEB                       STR_16 FFF3                       STR_25 FFFB  
             __CFG_WDTE$OFF 000000                       STR_19 FFEF             __end_of___awmod 3F2A  
           __end_of___flmul 2578             __end_of___flsub 40D0             __end_of___fltol 3858  
           __end_of___lldiv 3D3C             ___awdiv@divisor 0003                       _T2CLK 003FAE  
           __end_of___llmod 400A                       _T2CON 003FAC                       _LATB4 01FDDC  
                     _LATC4 01FDE4                       _LATE0 01FDF0                       _LATE1 01FDF1  
                     _LATE2 01FDF2              __CFG_DEBUG$OFF 000000                       _U1TXB 003DEA  
           ___awdiv@counter 0005                vfpfcnvrt@fmt 005E                       _PORTA 003FCA  
                     _PORTB 003FCB                       _PORTC 003FCC                       _PORTD 003FCD  
                     _PORTE 003FCE                       _TRISA 003FC2                       _TRISB 003FC3  
                     _TRISC 003FC4                       _TRISD 003FC5                       _TRISE 003FC6  
       ___lmul@multiplicand 0005               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000                       _flags 00E2                _DMA2CON0bits 003BDC  
                     _fputc 3B00                       _fputs 42FE             __end_of_isdigit 43D4  
                     _rxBuf 000100                       _txBuf 000200          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0015                       pad@fp 000F                       atoi@s 0008  
                     _width 00DE                       _putch 4468             __end_of_isspace 42BE  
           __end_of_isupper 43A0               lcd_init@shift 0005                       tablat 003FF5  
                     status 003FD8             __end_of_sprintf 427A              ?___fpclassifyf 0001  
           __end_of_tolower 41DE             __end_of_strncmp 390C             __initialization 42BE  
              __end_of_atoi 2ED0                __end_of_main 3044              __CFG_SAFEN$OFF 000000  
                    ??_atoi 000A                      ??_main 00D2               __activetblptr 000003  
              _volume_level 043C              __CFG_MVECEN$ON 000000         lcd_init@cursorblink 0007  
                    _ADCON0 003EF8                      _ADCON1 003EF9                      _ADCON2 003EFA  
                    _ADCON3 003EFB                      ?_fputc 0001            ___llmod@dividend 000E  
                    ?_fputs 0009                      _ADRESH 003EF0                      _ADRESL 003EEF  
                    _CCPR2H 003F79                      _CCPR3H 003F75                      _CCPR2L 003F78  
                    _CCPR4H 003F71                      _CCPR3L 003F74                      _CCPR4L 003F70  
          ___awdiv@dividend 0001                      _ANSELA 003A40                      ?_putch 0001  
                    _ANSELB 003A50                      _ANSELC 003A60                      _ANSELD 003A70  
                    _ANSELE 003A80                      _U1CON0 003DF2                      _U1CON1 003DF3  
                    _U1CON2 003DF4                      _U1BRGH 003DF6                      _U1BRGL 003DF5  
                    _RB0PPS 003A08                      _ODCONA 003A42                      _ODCONB 003A52  
                    _ODCONC 003A62                      _RD4PPS 003A1C                      _ODCOND 003A72  
                    _ODCONE 003A82                      _RC7PPS 003A17                      _RD5PPS 003A1D  
                    _RD6PPS 003A1E                      _RD7PPS 003A1F              __CFG_WDTCCS$SC 000000  
                    _U1TXIF 01CD1C                      _INLVLA 003A44                      _INLVLB 003A54  
                    _INLVLC 003A64                      _INLVLD 003A74                      _INLVLE 003A84  
                    _PRLOCK 0039EF            __end_of___xxtofl 330C          lcd_write@longdelay 0002  
         ?_transmitChecksum 0001              __CFG_XINST$OFF 000000                vfprintf@cfmt 00B9  
          __end_of_lcd_init 3E40                      ___flge 36BE                      ___fleq 3C28  
                    _ackCmd 00EE                      ___lmul 40D0          ??_transmitChecksum 0001  
                 ??___aldiv 0015                   ??___almod 0009                   ??___fladd 0017  
                    ___wmul 4406                   ??___fldiv 0027                   ??___awdiv 0005  
                 ??___flneg 0005              __CFG_STVREN$ON 000000                   ??___awmod 0005  
                 ??___flmul 0040                   ??___flsub 0059                   ??___fltol 0005  
                 ??___lldiv 0009                   ??___llmod 0016                      _efgtoa 0B86  
                    _floorf 2B6C                      _memcpy 3F2A                      _setLED 16CE  
                    clear_0 42E6                      clear_1 42F2            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                 setLED@shift 009A             ___awmod@counter 0005  
                    pad@buf 0010                      _strcpy 400A                      _strlen 43D4  
            lcd_init@cursor 0006                      fputc@c 0001                      fputs@c 000C  
                    fputs@i 000D                      fputs@s 0009                   ??_isdigit 0003  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst FEE0                   ??_isspace 0003                main_loop@rel 04BE  
              main_loop@res 04B6                main_loop@pos 0434                main_loop@sum 042C  
                    tblptrh 003FF7                   ??_isupper 0003                      tblptrl 003FF6  
                    tblptru 003FF8                      putch@c 0001            __end_of_vfprintf 418A  
                 ??_sprintf 0060                   ??_tolower 0009                   ??_strncmp 0006  
         _lcd_set_data_addr 4434                  ___flge@ff1 0051                  ___flge@ff2 0055  
           ??___fpclassifyf 0005                ___xxtofl@arg 000B                ___xxtofl@exp 000A  
              ___xxtofl@val 0001                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 42F8                  ___flneg@f1 0001  
             lcd_write@data 0001          ?_lcd_set_data_addr 0001               ___rparam_used 000001  
                ___fltol@f1 0001              __pcstackCOMRAM 0001         ??_lcd_set_data_addr 0005  
              __pidataBANK0 445E               __end_of_fputc 3B9A               __end_of_fputs 4336  
             __end_of_putch 446A          __size_of_lcd_print 008E   __end_of_lcd_set_data_addr 444A  
        __size_of_lcd_write 0052                     ??_fputc 0004                     ??_fputs 000C  
           __CFG_PR1WAY$OFF 000000                     ??_putch 0001                  __pbssBANK0 00D4  
                __pbssBANK4 0400          __size_of_main_loop 0B86                  _efgtoa$640 0079  
                _efgtoa$634 0073                  _efgtoa$628 006F                  _efgtoa$629 0071  
                _efgtoa$638 0075                  _efgtoa$639 0077                     ?___flge 0051  
                   ?___fleq 0001                     ?___lmul 0001                     ?___wmul 0001  
                   ?_efgtoa 0060                     _CCP2CON 003F7A                     _CCP3CON 003F76  
                   _CCP4CON 003F72                     ?_floorf 0038                     ?_memcpy 0001  
                   ?_setLED 0060              ___lmul@product 0009                     ?_strcpy 0001  
                   ?_strlen 0001          __size_of_uart_init 009C         __CFG_PWRTS$PWRT_OFF 000000  
        __size_of_uart_send 0076                     _U1TXCHK 003DEB                     _U1RXPPS 003AE5  
                 ?___xxtofl 0001          __size_of_vfpfcnvrt 04C0                     _PWM6DCH 003F69  
                   _PWM6DCL 003F68                     _PWM8DCH 003F61                     _PWM8DCL 003F60  
                   _PWM6CON 003F6A                     _PWM8CON 003F62                     _SLRCONA 003A43  
                   _SLRCONB 003A53                     _SLRCONC 003A63                     _SLRCOND 003A73  
                   _SLRCONE 003A83     __size_of_handle_message 010A                   ?_lcd_init 0005  
         main_loop@ampFault 0437                   _DMA1DPTRL 003BEC                     __Hparam 0000  
                   __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                  _setLED$290 0078  
                _setLED$295 007C                  _setLED$296 0080                  _setLED$289 0074  
                   ___aldiv 35EA             __size_of___flge 00D0             __size_of___fleq 008A  
                   ___almod 390C           __end_of_lcd_print 3C28                     ___fladd 2578  
                   ___fldiv 28C0                     ___awdiv 3D3C                     ___flneg 4336  
           __size_of___lmul 005E                     ___awmod 3EB6                     ___flmul 21F4  
                   ___flsub 4072                     ___fltol 378E           __end_of_lcd_write 4230  
                   ___lldiv 3CB2             __size_of___wmul 002E                     ___llmod 3F9C  
                 ?_vfprintf 00B5             __size_of_efgtoa 0B48           handle_message@len 0013  
         __end_of_main_loop 0B86             __size_of_floorf 01EA                     __pcinit 42BE  
           __size_of_memcpy 0072             __size_of_setLED 0666                     __ramtop 2000  
                   __ptext0 2ED0                     __ptext1 3A64                     __ptext2 0000  
                   __ptext3 3502                     __ptext4 3044                     __ptext5 330C  
                   __ptext6 3E40                     __ptext7 444A                     __ptext8 3F2A  
                   __ptext9 4230             __CFG_WRTAPP$OFF 000000             __size_of_strcpy 0068  
           __size_of_strlen 0032                __size_of_pad 00A4                     _isdigit 43A0  
                   _pairing 043B                  ??___xxtofl 0005            ___awmod@dividend 0001  
          ___aldiv@dividend 000D                     _isspace 427A             __CFG_WRTSAF$OFF 000000  
                   _isupper 436C                     efgtoa@c 0065                     efgtoa@d 0083  
                   efgtoa@e 009B                     efgtoa@f 0061                     efgtoa@g 0097  
                   efgtoa@h 008D                     efgtoa@i 0095                     efgtoa@l 0091  
                   efgtoa@m 007F                     efgtoa@n 009D                     efgtoa@p 0087  
                   efgtoa@t 007B                     efgtoa@u 009F                     efgtoa@w 008A  
                   atoi@neg 000E  __size_of_lcd_set_data_addr 0016                     _sprintf 4230  
                   _tolower 418A                  ??_lcd_init 0009                     _strncmp 3858  
      end_of_initialization 42F8                     floorf@e 0046                     floorf@m 0042  
                   floorf@u 0048                     floorf@x 0038                     memcpy@d 0007  
                   memcpy@n 0005                     memcpy@s 0009                     setLED@b 008A  
                   setLED@g 0086                     setLED@r 0070                     fputc@fp 0003  
     updateButtonLight@step 001B                     fputs@fp 000B           __end_of_uart_init 3B00  
         __end_of_uart_send 3EB6             ___lldiv@divisor 0005               main_loop@last 0400  
           ___lldiv@counter 000D           uart_tasks@bytePos 001F           __end_of_vfpfcnvrt 21F4  
                efgtoa@mode 008C           uart_tasks@message 0300                  efgtoa@sign 0085  
          ___aldiv@quotient 0017                     postdec1 003FE5                     postdec2 003FDD  
                   postinc0 003FEE                     postinc1 003FE6                     postinc2 003FDE  
                ??_vfprintf 0060       __CFG_WDTCPS$WDTCPS_31 000000                     strcpy@d 0009  
                   strlen@a 0003                     strcpy@s 0007                     strlen@s 0001  
                _uart_tasks 3044                   _PORTCbits 003FCC                   _PORTDbits 003FCD  
               uart_tasks@i 001E                 ___fladd@grs 001E   __size_of_transmitChecksum 0014  
             ___xxtofl@sign 0009                 ___fldiv@grs 0032                 ___fldiv@rem 002B  
          __CFG_FEXTOSC$OFF 000000                  lcd_init@on 0008       __end_of_stateCheckCmd FF06  
               ___flmul@grs 0046                  lcd_print@i 0009              __end_of___flge 378E  
            __end_of___fleq 3CB2       uart_tasks@posInRawMsg 001D              __end_of___lmul 412E  
               vfpfcnvrt@ap 005F                 vfpfcnvrt@ct 00AD                 vfpfcnvrt@fp 005D  
            __end_of___wmul 4434              __end_of_efgtoa 16CE              __end_of_floorf 2D56  
            __end_of_memcpy 3F9C              __end_of_setLED 1D34                  floorf@F524 00D4  
            __end_of_strcpy 4072              __end_of_strlen 4406         start_initialization 42BE  
            _handle_message 330C                 __end_of_pad 3A64       __end_of___fpclassifyf 3502  
           ___llmod@divisor 0012             ___llmod@counter 0016            __CFG_LPBOREN$OFF 000000  
     handle_message@message 0011                 vfprintf@fmt 00B6                    ??___flge 0059  
                  ??___fleq 0009                    ??___lmul 0009                    ??___wmul 0005  
                setLED@step 0064                    ??_efgtoa 0066                 __pdataBANK0 00E6  
                  ??_floorf 003C                    ??_memcpy 0007                    ??_setLED 0068  
               ?_uart_tasks 0001            __CFG_IVT1WAY$OFF 000000                 _bat_percent 00EA  
                  ??_strcpy 0005                    ??_strlen 0003                   ___fladd@a 0013  
                 ___fladd@b 000F                   ___fldiv@a 0023                   ___fldiv@b 001F  
    __end_of_handle_message 3416                   ___flmul@a 003C                   ___flmul@b 0038  
                 ___flsub@a 0055                   ___flsub@b 0051               __pcstackBANK0 0060  
             __pcstackBANK3 0300               __pcstackBANK4 048D           __size_of___xxtofl 0164  
         __size_of_lcd_init 007C                   _atoi$1130 0010                   _atoi$1131 0014  
                 _atoi$1132 0012               __pmediumconst FEE0                    ?___aldiv 000D  
                  ?___almod 0001                    ?___fladd 000F                    ?___fldiv 001F  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 0038                    ?___flsub 0051                    ?___fltol 0001  
                  ?___lldiv 0001                    ?___llmod 000E            __CFG_PPS1WAY$OFF 000000  
          ___almod@dividend 0001                   _lcd_print 3B9A                   _connected 0439  
         __size_of_vfprintf 005C                   _lcd_write 41DE      __CFG_BBSIZE$BBSIZE_512 000000  
          _transmitChecksum 444A                    ?_isdigit 0001                   _main_loop 0000  
                  _DMA1CON0 003BFC                    _DMA1CON1 003BFD                    _DMA1AIRQ 003BFE  
                  _DMA2CON0 003BDC                    _DMA2CON1 003BDD                    _DMA2AIRQ 003BDE  
                  _DMA1DSAH 003BF1                    _DMA1DSAL 003BF0             ?_handle_message 0011  
                  _DMA2DSAH 003BD1                    _DMA2DSAL 003BD0                    _DMA1DSZH 003BEF  
                  _DMA1DSZL 003BEE                    _DMA2DSZH 003BCF                    _DMA2DSZL 003BCE  
                  _DMA1SSAH 003BFA                    _DMA1SIRQ 003BFF                    _DMA1SSAL 003BF9  
                  _DMA1SSAU 003BFB                    _DMA2SSAH 003BDA                    _DMA2SIRQ 003BDF  
                  _DMA2SSAL 003BD9                    _DMA2SSAU 003BDB                    _DMA1SSZH 003BF8  
                  _DMA1SSZL 003BF7                    _DMA2SSZH 003BD8                    _DMA2SSZL 003BD7  
                  ?_isspace 0001                    ?_isupper 0001                    _CCPTMRS0 003F5E  
                 _lightMode 0438            main_loop@lastAvg 049E            main_loop@counter 0430  
          main_loop@lastSum 0428                    ?_sprintf 00BB                    ?_tolower 0007  
            __size_of_fputc 009A              __size_of_fputs 0038                    ?_strncmp 0001  
            __size_of_putch 0002             ___aldiv@divisor 0011             ___aldiv@counter 0015  
       __size_of_uart_tasks 0164              ___wmul@product 0005        updateButtonLight@dch 0023  
          uart_tasks@intPos 0020            uart_tasks@msgLen 0021                   _uart_init 3A64  
                 _uart_send 3E40                   _vfpfcnvrt 1D34                  ?_lcd_print 0005  
                _ADCON0bits 003EF8                  ?_lcd_write 0001           ___wmul@multiplier 0001  
                ?_main_loop 0001          main_loop@batCutoff 0436                   _streaming 043A  
              _isspace$1161 0007                  vfpfcnvrt@c 00B4                  vfpfcnvrt@f 00B0  
         ___lmul@multiplier 0001                   copy_data0 42D2               _ledBrightness 00E6  
                _DMA2SCNTIF 01CD2A                    __Hrparam 0000             lcd_print@string 0005  
                 memcpy@tmp 000B                  vfprintf@ap 00B8                    __Lrparam 0000  
                vfprintf@fp 00B5          __CFG_BOREN$SBORDIS 000000                   setLED@mod 0060  
                ?_uart_init 0001                  ?_uart_send 000C            __size_of___aldiv 00D4  
          __size_of___almod 00B4            __size_of___fladd 0348            __size_of___fldiv 02AC  
          __size_of___awdiv 0088            __size_of___flneg 0036            __size_of___awmod 0074  
          __size_of___flmul 0384            __size_of___flsub 005E            __size_of___fltol 00CA  
          __size_of___lldiv 008A            __size_of___llmod 006E                  ?_vfpfcnvrt 005D  
      __end_of_soundAmplify FF01           _updateButtonLight 3502          ___fpclassifyf@F463 00D8  
                sprintf@fmt 00BD                    ___xxtofl 31A8          ?_updateButtonLight 001B  
          __size_of_isdigit 0034            __size_of_isspace 0044                    __ptext10 412E  
                  __ptext11 1D34                    __ptext20 3B00                    __ptext12 3858  
                  __ptext21 4468                    __ptext13 0B86                    __ptext30 28C0  
                  __ptext22 2B6C                    __ptext14 418A                    __ptext31 3EB6  
                  __ptext23 3416                    __ptext15 436C                    __ptext40 390C  
                  __ptext32 3D3C                    __ptext24 378E                    __ptext16 400A  
                  __ptext41 35EA                    __ptext33 2D56                    __ptext25 4072  
                  __ptext17 39C0                    __ptext42 4434                    __ptext34 427A  
                  __ptext26 2578                    __ptext18 43D4                    __ptext43 3B9A  
                  __ptext35 43A0                    __ptext27 4336                    __ptext19 42FE  
                  __ptext44 31A8                    __ptext36 4406                    __ptext28 21F4  
                  __ptext45 3F9C                    __ptext37 16CE                    __ptext29 3C28  
                  __ptext46 3CB2                    __ptext38 40D0                    __ptext47 3DC4  
                  __ptext39 36BE                    __ptext48 41DE            __size_of_isupper 0034  
                  _lcd_init 3DC4             ___almod@divisor 0005            __size_of_sprintf 004A  
          __size_of_tolower 0054             main_loop@absRes 04B3             ___almod@counter 0009  
       ??_updateButtonLight 001F                  strcpy@dest 0001            __size_of_strncmp 00B4  
           main_loop@batmsg 048D             main_loop@batlvl 04B8         __end_of_volCheckCmd FF04  
             __size_of_atoi 017A               __size_of_main 0174             main_loop@sample 04BA  
           main_loop@update 04B2        __CFG_WDTCWS$WDTCWS_7 000000          __CFG_BORV$VBOR_190 000000  
                  efgtoa@fp 0060                    efgtoa@ne 0081                    efgtoa@pp 007D  
                  efgtoa@ou 006B             uart_tasks@rxLen 0019             uart_tasks@rxPos 00E4  
             setLED@trueMod 0084         uart_tasks@msgOffset 001C                    _vfprintf 412E  
              ??_uart_tasks 0015   __end_of_updateButtonLight 35EA                 ??_lcd_print 0007  
               ??_lcd_write 0003                 ??_main_loop 00CC                    memcpy@d1 0001  
                  memcpy@s1 0003                    setLED@sb 0092                    setLED@sg 008E  
                  setLED@sr 0096                    isdigit@c 0001          uart_tasks@checksum 001B  
                 sprintf@ap 00C5                    isspace@c 0001            ___lldiv@dividend 0001  
        __end_of_uart_tasks 31A8           __CFG_CLKOUTEN$OFF 000000                   strcpy@src 0003  
                  isupper@c 0001    __end_of_transmitChecksum 445E                   strncmp@_l 0001  
                 strncmp@_r 0002                 efgtoa@nmode 0089                 ??_uart_init 0001  
               ??_uart_send 000F            ??_handle_message 0014                 ??_vfpfcnvrt 00A3  
             _vfpfcnvrt$654 00A7               _vfpfcnvrt$655 00A9               _vfpfcnvrt$659 00AB  
                  sprintf@f 00C6                    tolower@c 0007                    sprintf@s 00BB  
    __size_of___fpclassifyf 00EC                  _PRLOCKbits 0039EF            ___lldiv@quotient 0009  
        uart_tasks@zeroByte 0022                    strncmp@l 0009                    strncmp@n 0004  
                  strncmp@r 0007                ___aldiv@sign 0016               uart_tasks@val 0023  
               _volCheckCmd FF01               ___fladd@signs 001B                uart_send@buf 000C  
              uart_send@len 000E                ___almod@sign 000A                ___fladd@aexp 001C  
              ___fladd@bexp 001D               _stateCheckCmd FF04      uart_tasks@rawMsgOffset 001A  
