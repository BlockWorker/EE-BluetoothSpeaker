

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Oct 16 19:52:53 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18LF47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK4,global,class=BANK4,space=1,delta=1,noexec
    11                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text42,global,reloc=2,class=CODE,delta=1
    57                           	psect	text43,global,reloc=2,class=CODE,delta=1
    58                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    59                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text47,global,reloc=2,class=CODE,delta=1
    62                           	psect	text48,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	dabs	1,0x100,256,_rxBuf
    66                           	dabs	1,0x200,256,_txBuf
    67  0000                     
    68                           ; Version 2.10
    69                           ; Generated 31/07/2019 GMT
    70                           ; 
    71                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    72                           ; All rights reserved.
    73                           ; 
    74                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    75                           ; 
    76                           ; Redistribution and use in source and binary forms, with or without modification, are
    77                           ; permitted provided that the following conditions are met:
    78                           ; 
    79                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    80                           ;        conditions and the following disclaimer.
    81                           ; 
    82                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    83                           ;        of conditions and the following disclaimer in the documentation and/or other
    84                           ;        materials provided with the distribution.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC18LF47K42 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     
   103                           	psect	idataBANK4
   104  006334                     __pidataBANK4:
   105                           	opt callstack 0
   106                           
   107                           ;initializer for _ledBrightness
   108  006334  0040               	dw	64
   109  006336  0000               	dw	0
   110                           
   111                           ;initializer for _bat_percent
   112  006338  0000               	dw	0
   113  00633A  42C8               	dw	17096
   114                           
   115                           ;initializer for _ackCmd
   116  00633C  14                 	db	20
   117  00633D  00                 	db	0
   118                           
   119                           	psect	smallconst
   120  002000                     __psmallconst:
   121                           	opt callstack 0
   122  002000  00                 	db	0
   123  002001                     _soundAmplify:
   124                           	opt callstack 0
   125  002001  0000               	dw	0
   126  002003  0000               	dw	0
   127  002005  0000               	dw	0
   128  002007  0276               	dw	630
   129  002009  01E0               	dw	480
   130  00200B  0186               	dw	390
   131  00200D  0104               	dw	260
   132  00200F  00B4               	dw	180
   133  002011  0064               	dw	100
   134  002013  0041               	dw	65
   135  002015  0032               	dw	50
   136  002017  0023               	dw	35
   137  002019  0016               	dw	22
   138  00201B  000F               	dw	15
   139  00201D  0009               	dw	9
   140  00201F  0007               	dw	7
   141  002021                     __end_of_soundAmplify:
   142                           	opt callstack 0
   143  002021                     _volCheckCmd:
   144                           	opt callstack 0
   145  002021  16                 	db	22
   146  002022  00                 	db	0
   147  002023  04                 	db	4
   148  002024                     __end_of_volCheckCmd:
   149                           	opt callstack 0
   150  002024                     _stateCheckCmd:
   151                           	opt callstack 0
   152  002024  0D                 	db	13
   153  002025  00                 	db	0
   154  002026                     __end_of_stateCheckCmd:
   155                           	opt callstack 0
   156  0000                     _PRLOCKbits	set	14831
   157  0000                     _PRLOCK	set	14831
   158  0000                     _PMD7	set	14791
   159  0000                     _PMD6	set	14790
   160  0000                     _PMD5	set	14789
   161  0000                     _PMD4	set	14788
   162  0000                     _PMD3	set	14787
   163  0000                     _PMD2	set	14786
   164  0000                     _PMD1	set	14785
   165  0000                     _PMD0	set	14784
   166  0000                     _DMA2SCNTIF	set	118058
   167  0000                     _U1TXIF	set	118044
   168  0000                     _RB0PPS	set	14856
   169  0000                     _U1RXPPS	set	15077
   170  0000                     _RD7PPS	set	14879
   171  0000                     _RD6PPS	set	14878
   172  0000                     _RD5PPS	set	14877
   173  0000                     _RD4PPS	set	14876
   174  0000                     _RC7PPS	set	14871
   175  0000                     _ODCONE	set	14978
   176  0000                     _SLRCONE	set	14979
   177  0000                     _INLVLE	set	14980
   178  0000                     _WPUE	set	14977
   179  0000                     _ANSELE	set	14976
   180  0000                     _ODCOND	set	14962
   181  0000                     _SLRCOND	set	14963
   182  0000                     _INLVLD	set	14964
   183  0000                     _WPUD	set	14961
   184  0000                     _ANSELD	set	14960
   185  0000                     _ODCONC	set	14946
   186  0000                     _SLRCONC	set	14947
   187  0000                     _INLVLC	set	14948
   188  0000                     _WPUC	set	14945
   189  0000                     _ANSELC	set	14944
   190  0000                     _ODCONB	set	14930
   191  0000                     _SLRCONB	set	14931
   192  0000                     _INLVLB	set	14932
   193  0000                     _WPUB	set	14929
   194  0000                     _ANSELB	set	14928
   195  0000                     _ODCONA	set	14914
   196  0000                     _SLRCONA	set	14915
   197  0000                     _INLVLA	set	14916
   198  0000                     _WPUA	set	14913
   199  0000                     _ANSELA	set	14912
   200  0000                     _DMA2CON0bits	set	15324
   201  0000                     _DMA1DPTRL	set	15340
   202  0000                     _DMA2CON0	set	15324
   203  0000                     _DMA2AIRQ	set	15326
   204  0000                     _DMA2SIRQ	set	15327
   205  0000                     _DMA2DSAL	set	15312
   206  0000                     _DMA2DSAH	set	15313
   207  0000                     _DMA2DSZL	set	15310
   208  0000                     _DMA2DSZH	set	15311
   209  0000                     _DMA2SSAL	set	15321
   210  0000                     _DMA2SSAH	set	15322
   211  0000                     _DMA2SSAU	set	15323
   212  0000                     _DMA2SSZL	set	15319
   213  0000                     _DMA2SSZH	set	15320
   214  0000                     _DMA2CON1	set	15325
   215  0000                     _DMA1CON0	set	15356
   216  0000                     _DMA1AIRQ	set	15358
   217  0000                     _DMA1SIRQ	set	15359
   218  0000                     _DMA1DSAL	set	15344
   219  0000                     _DMA1DSAH	set	15345
   220  0000                     _DMA1DSZL	set	15342
   221  0000                     _DMA1DSZH	set	15343
   222  0000                     _DMA1SSAL	set	15353
   223  0000                     _DMA1SSAH	set	15354
   224  0000                     _DMA1SSAU	set	15355
   225  0000                     _DMA1SSZL	set	15351
   226  0000                     _DMA1SSZH	set	15352
   227  0000                     _DMA1CON1	set	15357
   228  0000                     _U1TXCHK	set	15851
   229  0000                     _U1TXB	set	15850
   230  0000                     _U1CON2	set	15860
   231  0000                     _U1CON1	set	15859
   232  0000                     _U1CON0	set	15858
   233  0000                     _U1BRGL	set	15861
   234  0000                     _U1BRGH	set	15862
   235  0000                     _ADREF	set	16125
   236  0000                     _ADCLK	set	16127
   237  0000                     _ADCON3	set	16123
   238  0000                     _ADCON2	set	16122
   239  0000                     _ADCON1	set	16121
   240  0000                     _ADCON0	set	16120
   241  0000                     _ADRESL	set	16111
   242  0000                     _ADRESH	set	16112
   243  0000                     _ADCON0bits	set	16120
   244  0000                     _ADPCH	set	16113
   245  0000                     _CCPTMRS0	set	16222
   246  0000                     _T2CON	set	16300
   247  0000                     _T2CLK	set	16302
   248  0000                     _T2PR	set	16299
   249  0000                     _PWM8CON	set	16226
   250  0000                     _PWM6CON	set	16234
   251  0000                     _CCP4CON	set	16242
   252  0000                     _CCP3CON	set	16246
   253  0000                     _CCP2CON	set	16250
   254  0000                     _PORTE	set	16334
   255  0000                     _TRISE	set	16326
   256  0000                     _PORTD	set	16333
   257  0000                     _TRISD	set	16325
   258  0000                     _PORTC	set	16332
   259  0000                     _TRISC	set	16324
   260  0000                     _PORTB	set	16331
   261  0000                     _TRISB	set	16323
   262  0000                     _PORTA	set	16330
   263  0000                     _TRISA	set	16322
   264  0000                     _PORTDbits	set	16333
   265  0000                     _PORTCbits	set	16332
   266  0000                     _CCPR4L	set	16240
   267  0000                     _CCPR4H	set	16241
   268  0000                     _CCPR2L	set	16248
   269  0000                     _CCPR2H	set	16249
   270  0000                     _CCPR3L	set	16244
   271  0000                     _CCPR3H	set	16245
   272  0000                     _PWM8DCL	set	16224
   273  0000                     _PWM8DCH	set	16225
   274  0000                     _PWM6DCL	set	16232
   275  0000                     _PWM6DCH	set	16233
   276  0000                     _LATE0	set	130544
   277  0000                     _LATE1	set	130545
   278  0000                     _LATE2	set	130546
   279  0000                     _LATB4	set	130524
   280  0000                     _LATC4	set	130532
   281  002026                     STR_10:
   282  002026  42                 	db	66	;'B'
   283  002027  61                 	db	97	;'a'
   284  002028  74                 	db	116	;'t'
   285  002029  74                 	db	116	;'t'
   286  00202A  65                 	db	101	;'e'
   287  00202B  72                 	db	114	;'r'
   288  00202C  79                 	db	121	;'y'
   289  00202D  3A                 	db	58	;':'
   290  00202E  20                 	db	32
   291  00202F  25                 	db	37
   292  002030  33                 	db	51	;'3'
   293  002031  2E                 	db	46
   294  002032  30                 	db	48	;'0'
   295  002033  66                 	db	102	;'f'
   296  002034  25                 	db	37
   297  002035  25                 	db	37
   298  002036  20                 	db	32
   299  002037  20                 	db	32
   300  002038  20                 	db	32
   301  002039  00                 	db	0
   302  00203A                     STR_8:
   303  00203A  46                 	db	70	;'F'
   304  00203B  75                 	db	117	;'u'
   305  00203C  6C                 	db	108	;'l'
   306  00203D  6C                 	db	108	;'l'
   307  00203E  20                 	db	32
   308  00203F  43                 	db	67	;'C'
   309  002040  68                 	db	104	;'h'
   310  002041  67                 	db	103	;'g'
   311  002042  3A                 	db	58	;':'
   312  002043  20                 	db	32
   313  002044  25                 	db	37
   314  002045  33                 	db	51	;'3'
   315  002046  2E                 	db	46
   316  002047  30                 	db	48	;'0'
   317  002048  66                 	db	102	;'f'
   318  002049  25                 	db	37
   319  00204A  25                 	db	37
   320  00204B  20                 	db	32
   321  00204C  20                 	db	32
   322  00204D  00                 	db	0
   323  00204E                     STR_9:
   324  00204E  46                 	db	70	;'F'
   325  00204F  61                 	db	97	;'a'
   326  002050  73                 	db	115	;'s'
   327  002051  74                 	db	116	;'t'
   328  002052  20                 	db	32
   329  002053  43                 	db	67	;'C'
   330  002054  68                 	db	104	;'h'
   331  002055  67                 	db	103	;'g'
   332  002056  3A                 	db	58	;':'
   333  002057  20                 	db	32
   334  002058  25                 	db	37
   335  002059  33                 	db	51	;'3'
   336  00205A  2E                 	db	46
   337  00205B  30                 	db	48	;'0'
   338  00205C  66                 	db	102	;'f'
   339  00205D  25                 	db	37
   340  00205E  25                 	db	37
   341  00205F  20                 	db	32
   342  002060  20                 	db	32
   343  002061  00                 	db	0
   344  002062                     STR_7:
   345  002062  43                 	db	67	;'C'
   346  002063  68                 	db	104	;'h'
   347  002064  67                 	db	103	;'g'
   348  002065  20                 	db	32
   349  002066  66                 	db	102	;'f'
   350  002067  61                 	db	97	;'a'
   351  002068  75                 	db	117	;'u'
   352  002069  6C                 	db	108	;'l'
   353  00206A  74                 	db	116	;'t'
   354  00206B  3A                 	db	58	;':'
   355  00206C  20                 	db	32
   356  00206D  25                 	db	37
   357  00206E  33                 	db	51	;'3'
   358  00206F  2E                 	db	46
   359  002070  30                 	db	48	;'0'
   360  002071  66                 	db	102	;'f'
   361  002072  25                 	db	37
   362  002073  25                 	db	37
   363  002074  20                 	db	32
   364  002075  00                 	db	0
   365  002076                     STR_5:
   366  002076  4F                 	db	79	;'O'
   367  002077  66                 	db	102	;'f'
   368  002078  66                 	db	102	;'f'
   369  002079  20                 	db	32
   370  00207A  20                 	db	32
   371  00207B  20                 	db	32
   372  00207C  20                 	db	32
   373  00207D  20                 	db	32
   374  00207E  20                 	db	32
   375  00207F  20                 	db	32
   376  002080  20                 	db	32
   377  002081  20                 	db	32
   378  002082  20                 	db	32
   379  002083  20                 	db	32
   380  002084  20                 	db	32
   381  002085  20                 	db	32
   382  002086  00                 	db	0
   383  002087                     STR_2:
   384  002087  50                 	db	80	;'P'
   385  002088  61                 	db	97	;'a'
   386  002089  69                 	db	105	;'i'
   387  00208A  72                 	db	114	;'r'
   388  00208B  69                 	db	105	;'i'
   389  00208C  6E                 	db	110	;'n'
   390  00208D  67                 	db	103	;'g'
   391  00208E  20                 	db	32
   392  00208F  20                 	db	32
   393  002090  20                 	db	32
   394  002091  20                 	db	32
   395  002092  20                 	db	32
   396  002093  20                 	db	32
   397  002094  20                 	db	32
   398  002095  20                 	db	32
   399  002096  20                 	db	32
   400  002097  00                 	db	0
   401  002098                     STR_3:
   402  002098  43                 	db	67	;'C'
   403  002099  6F                 	db	111	;'o'
   404  00209A  6E                 	db	110	;'n'
   405  00209B  6E                 	db	110	;'n'
   406  00209C  65                 	db	101	;'e'
   407  00209D  63                 	db	99	;'c'
   408  00209E  74                 	db	116	;'t'
   409  00209F  65                 	db	101	;'e'
   410  0020A0  64                 	db	100	;'d'
   411  0020A1  20                 	db	32
   412  0020A2  20                 	db	32
   413  0020A3  20                 	db	32
   414  0020A4  20                 	db	32
   415  0020A5  20                 	db	32
   416  0020A6  20                 	db	32
   417  0020A7  20                 	db	32
   418  0020A8  00                 	db	0
   419  0020A9                     STR_6:
   420  0020A9  4E                 	db	78	;'N'
   421  0020AA  6F                 	db	111	;'o'
   422  0020AB  20                 	db	32
   423  0020AC  42                 	db	66	;'B'
   424  0020AD  61                 	db	97	;'a'
   425  0020AE  74                 	db	116	;'t'
   426  0020AF  74                 	db	116	;'t'
   427  0020B0  65                 	db	101	;'e'
   428  0020B1  72                 	db	114	;'r'
   429  0020B2  79                 	db	121	;'y'
   430  0020B3  20                 	db	32
   431  0020B4  20                 	db	32
   432  0020B5  20                 	db	32
   433  0020B6  20                 	db	32
   434  0020B7  20                 	db	32
   435  0020B8  20                 	db	32
   436  0020B9  00                 	db	0
   437  0020BA                     STR_4:
   438  0020BA  4E                 	db	78	;'N'
   439  0020BB  6F                 	db	111	;'o'
   440  0020BC  74                 	db	116	;'t'
   441  0020BD  20                 	db	32
   442  0020BE  63                 	db	99	;'c'
   443  0020BF  6F                 	db	111	;'o'
   444  0020C0  6E                 	db	110	;'n'
   445  0020C1  6E                 	db	110	;'n'
   446  0020C2  65                 	db	101	;'e'
   447  0020C3  63                 	db	99	;'c'
   448  0020C4  74                 	db	116	;'t'
   449  0020C5  65                 	db	101	;'e'
   450  0020C6  64                 	db	100	;'d'
   451  0020C7  20                 	db	32
   452  0020C8  20                 	db	32
   453  0020C9  20                 	db	32
   454  0020CA  00                 	db	0
   455  0020CB                     STR_1:
   456  0020CB  41                 	db	65	;'A'
   457  0020CC  4D                 	db	77	;'M'
   458  0020CD  50                 	db	80	;'P'
   459  0020CE  4C                 	db	76	;'L'
   460  0020CF  49                 	db	73	;'I'
   461  0020D0  46                 	db	70	;'F'
   462  0020D1  49                 	db	73	;'I'
   463  0020D2  45                 	db	69	;'E'
   464  0020D3  52                 	db	82	;'R'
   465  0020D4  20                 	db	32
   466  0020D5  46                 	db	70	;'F'
   467  0020D6  41                 	db	65	;'A'
   468  0020D7  55                 	db	85	;'U'
   469  0020D8  4C                 	db	76	;'L'
   470  0020D9  54                 	db	84	;'T'
   471  0020DA  21                 	db	33
   472  0020DB  00                 	db	0
   473  0020DC                     STR_11:
   474  0020DC  48                 	db	72	;'H'
   475  0020DD  65                 	db	101	;'e'
   476  0020DE  6C                 	db	108	;'l'
   477  0020DF  6C                 	db	108	;'l'
   478  0020E0  6F                 	db	111	;'o'
   479  0020E1  20                 	db	32
   480  0020E2  57                 	db	87	;'W'
   481  0020E3  6F                 	db	111	;'o'
   482  0020E4  72                 	db	114	;'r'
   483  0020E5  6C                 	db	108	;'l'
   484  0020E6  64                 	db	100	;'d'
   485  0020E7  21                 	db	33
   486  0020E8  00                 	db	0
   487  0020E9                     STR_12:
   488  0020E9  49                 	db	73	;'I'
   489  0020EA  4E                 	db	78	;'N'
   490  0020EB  46                 	db	70	;'F'
   491  0020EC  00                 	db	0
   492  0020ED                     STR_16:
   493  0020ED  4E                 	db	78	;'N'
   494  0020EE  41                 	db	65	;'A'
   495  0020EF  4E                 	db	78	;'N'
   496  0020F0  00                 	db	0
   497  0020F1                     STR_13:
   498  0020F1  69                 	db	105	;'i'
   499  0020F2  6E                 	db	110	;'n'
   500  0020F3  66                 	db	102	;'f'
   501  0020F4  00                 	db	0
   502  0020F5                     STR_17:
   503  0020F5  6E                 	db	110	;'n'
   504  0020F6  61                 	db	97	;'a'
   505  0020F7  6E                 	db	110	;'n'
   506  0020F8  00                 	db	0
   507  0020F9                     STR_20:
   508  0020F9  6C                 	db	108	;'l'
   509  0020FA  66                 	db	102	;'f'
   510  0020FB  00                 	db	0
   511  0000                     
   512                           ; #config settings
   513  0020FC  00                 	db	0	; dummy byte at the end
   514  0000                     
   515                           	psect	cinit
   516  00620E                     __pcinit:
   517                           	opt callstack 0
   518  00620E                     start_initialization:
   519                           	opt callstack 0
   520  00620E                     __initialization:
   521                           	opt callstack 0
   522                           
   523                           ; Initialize objects allocated to BANK4 (10 bytes)
   524                           ; load TBLPTR registers with __pidataBANK4
   525  00620E  0E34               	movlw	low __pidataBANK4
   526  006210  6EF6               	movwf	tblptrl,c
   527  006212  0E63               	movlw	high __pidataBANK4
   528  006214  6EF7               	movwf	tblptrh,c
   529  006216  0E00               	movlw	low (__pidataBANK4 shr (0+16))
   530  006218  6EF8               	movwf	tblptru,c
   531  00621A  EE01  F09C         	lfsr	0,__pdataBANK4
   532  00621E  EE10 F00A          	lfsr	1,10
   533  006222                     copy_data0:
   534  006222  0009               	tblrd		*+
   535  006224  006F FFD7 FFEE     	movff	tablat,postinc0
   536  00622A  50E5               	movf	postdec1,w,c
   537  00622C  50E1               	movf	fsr1l,w,c
   538  00622E  E1F9               	bnz	copy_data0
   539                           
   540                           ; Clear objects allocated to BANK4 (156 bytes)
   541  006230  EE01  F000         	lfsr	0,__pbssBANK4
   542  006234  0E9C               	movlw	156
   543  006236                     clear_0:
   544  006236  6AEE               	clrf	postinc0,c
   545  006238  06E8               	decf	wreg,f,c
   546  00623A  E1FD               	bnz	clear_0
   547  00623C                     end_of_initialization:
   548                           	opt callstack 0
   549  00623C                     __end_of__initialization:
   550                           	opt callstack 0
   551  00623C  0100               	movlb	0
   552  00623E  EF41  F026         	goto	_main	;jump to C main() function
   553                           
   554                           	psect	bssBANK4
   555  000400                     __pbssBANK4:
   556                           	opt callstack 0
   557  000400                     main_loop@last:
   558                           	opt callstack 0
   559  000400                     	ds	40
   560  000428                     floorf@F524:
   561                           	opt callstack 0
   562  000428                     	ds	4
   563  00042C                     ___fpclassifyf@F463:
   564                           	opt callstack 0
   565  00042C                     	ds	4
   566  000430                     main_loop@lastSum:
   567                           	opt callstack 0
   568  000430                     	ds	4
   569  000434                     main_loop@sum:
   570                           	opt callstack 0
   571  000434                     	ds	4
   572  000438                     main_loop@counter:
   573                           	opt callstack 0
   574  000438                     	ds	4
   575  00043C                     _nout:
   576                           	opt callstack 0
   577  00043C                     	ds	2
   578  00043E                     _width:
   579                           	opt callstack 0
   580  00043E                     	ds	2
   581  000440                     _prec:
   582                           	opt callstack 0
   583  000440                     	ds	2
   584  000442                     _flags:
   585                           	opt callstack 0
   586  000442                     	ds	2
   587  000444                     main_loop@pos:
   588                           	opt callstack 0
   589  000444                     	ds	2
   590  000446                     uart_tasks@rxPos:
   591                           	opt callstack 0
   592  000446                     	ds	1
   593  000447                     _on:
   594                           	opt callstack 0
   595  000447                     	ds	1
   596  000448                     _connected:
   597                           	opt callstack 0
   598  000448                     	ds	1
   599  000449                     _streaming:
   600                           	opt callstack 0
   601  000449                     	ds	1
   602  00044A                     _pairing:
   603                           	opt callstack 0
   604  00044A                     	ds	1
   605  00044B                     _volume_level:
   606                           	opt callstack 0
   607  00044B                     	ds	1
   608  00044C                     _dbuf:
   609                           	opt callstack 0
   610  00044C                     	ds	80
   611                           
   612                           	psect	dataBANK4
   613  00049C                     __pdataBANK4:
   614                           	opt callstack 0
   615  00049C                     _ledBrightness:
   616                           	opt callstack 0
   617  00049C                     	ds	4
   618  0004A0                     _bat_percent:
   619                           	opt callstack 0
   620  0004A0                     	ds	4
   621  0004A4                     _ackCmd:
   622                           	opt callstack 0
   623  0004A4                     	ds	2
   624                           
   625                           	psect	cstackBANK4
   626  0004A6                     __pcstackBANK4:
   627                           	opt callstack 0
   628  0004A6                     ??_main:
   629                           
   630                           ; 1 bytes @ 0x0
   631  0004A6                     	ds	2
   632                           
   633                           	psect	cstackBANK3
   634  000300                     __pcstackBANK3:
   635                           	opt callstack 0
   636  000300                     uart_tasks@message:
   637                           	opt callstack 0
   638                           
   639                           ; 256 bytes @ 0x0
   640  000300                     	ds	256
   641                           
   642                           	psect	cstackBANK0
   643  000060                     __pcstackBANK0:
   644                           	opt callstack 0
   645  000060                     ?_efgtoa:
   646                           	opt callstack 0
   647  000060                     efgtoa@fp:
   648                           	opt callstack 0
   649  000060                     setLED@mod:
   650                           	opt callstack 0
   651                           
   652                           ; 4 bytes @ 0x0
   653  000060                     	ds	1
   654  000061                     efgtoa@f:
   655                           	opt callstack 0
   656                           
   657                           ; 4 bytes @ 0x1
   658  000061                     	ds	3
   659  000064                     setLED@step:
   660                           	opt callstack 0
   661                           
   662                           ; 4 bytes @ 0x4
   663  000064                     	ds	1
   664  000065                     efgtoa@c:
   665                           	opt callstack 0
   666                           
   667                           ; 1 bytes @ 0x5
   668  000065                     	ds	1
   669  000066                     ??_efgtoa:
   670                           
   671                           ; 1 bytes @ 0x6
   672  000066                     	ds	2
   673  000068                     ??_setLED:
   674                           
   675                           ; 1 bytes @ 0x8
   676  000068                     	ds	3
   677  00006B                     efgtoa@ou:
   678                           	opt callstack 0
   679                           
   680                           ; 4 bytes @ 0xB
   681  00006B                     	ds	4
   682  00006F                     _efgtoa$620:
   683                           	opt callstack 0
   684                           
   685                           ; 2 bytes @ 0xF
   686  00006F                     	ds	1
   687  000070                     setLED@r:
   688                           	opt callstack 0
   689                           
   690                           ; 4 bytes @ 0x10
   691  000070                     	ds	1
   692  000071                     _efgtoa$621:
   693                           	opt callstack 0
   694                           
   695                           ; 2 bytes @ 0x11
   696  000071                     	ds	2
   697  000073                     _efgtoa$626:
   698                           	opt callstack 0
   699                           
   700                           ; 2 bytes @ 0x13
   701  000073                     	ds	1
   702  000074                     _setLED$288:
   703                           	opt callstack 0
   704                           
   705                           ; 4 bytes @ 0x14
   706  000074                     	ds	1
   707  000075                     _efgtoa$630:
   708                           	opt callstack 0
   709                           
   710                           ; 2 bytes @ 0x15
   711  000075                     	ds	2
   712  000077                     _efgtoa$631:
   713                           	opt callstack 0
   714                           
   715                           ; 2 bytes @ 0x17
   716  000077                     	ds	1
   717  000078                     _setLED$289:
   718                           	opt callstack 0
   719                           
   720                           ; 4 bytes @ 0x18
   721  000078                     	ds	1
   722  000079                     _efgtoa$632:
   723                           	opt callstack 0
   724                           
   725                           ; 2 bytes @ 0x19
   726  000079                     	ds	2
   727  00007B                     efgtoa@t:
   728                           	opt callstack 0
   729                           
   730                           ; 2 bytes @ 0x1B
   731  00007B                     	ds	1
   732  00007C                     _setLED$294:
   733                           	opt callstack 0
   734                           
   735                           ; 4 bytes @ 0x1C
   736  00007C                     	ds	1
   737  00007D                     efgtoa@pp:
   738                           	opt callstack 0
   739                           
   740                           ; 2 bytes @ 0x1D
   741  00007D                     	ds	2
   742  00007F                     efgtoa@m:
   743                           	opt callstack 0
   744                           
   745                           ; 2 bytes @ 0x1F
   746  00007F                     	ds	1
   747  000080                     _setLED$295:
   748                           	opt callstack 0
   749                           
   750                           ; 4 bytes @ 0x20
   751  000080                     	ds	1
   752  000081                     efgtoa@ne:
   753                           	opt callstack 0
   754                           
   755                           ; 2 bytes @ 0x21
   756  000081                     	ds	2
   757  000083                     efgtoa@d:
   758                           	opt callstack 0
   759                           
   760                           ; 2 bytes @ 0x23
   761  000083                     	ds	1
   762  000084                     setLED@trueMod:
   763                           	opt callstack 0
   764                           
   765                           ; 2 bytes @ 0x24
   766  000084                     	ds	1
   767  000085                     efgtoa@sign:
   768                           	opt callstack 0
   769                           
   770                           ; 2 bytes @ 0x25
   771  000085                     	ds	1
   772  000086                     setLED@g:
   773                           	opt callstack 0
   774                           
   775                           ; 4 bytes @ 0x26
   776  000086                     	ds	1
   777  000087                     efgtoa@p:
   778                           	opt callstack 0
   779                           
   780                           ; 2 bytes @ 0x27
   781  000087                     	ds	2
   782  000089                     efgtoa@nmode:
   783                           	opt callstack 0
   784                           
   785                           ; 1 bytes @ 0x29
   786  000089                     	ds	1
   787  00008A                     efgtoa@w:
   788                           	opt callstack 0
   789  00008A                     setLED@b:
   790                           	opt callstack 0
   791                           
   792                           ; 4 bytes @ 0x2A
   793  00008A                     	ds	2
   794  00008C                     efgtoa@mode:
   795                           	opt callstack 0
   796                           
   797                           ; 1 bytes @ 0x2C
   798  00008C                     	ds	1
   799  00008D                     efgtoa@h:
   800                           	opt callstack 0
   801                           
   802                           ; 4 bytes @ 0x2D
   803  00008D                     	ds	1
   804  00008E                     setLED@sg:
   805                           	opt callstack 0
   806                           
   807                           ; 4 bytes @ 0x2E
   808  00008E                     	ds	3
   809  000091                     efgtoa@l:
   810                           	opt callstack 0
   811                           
   812                           ; 4 bytes @ 0x31
   813  000091                     	ds	1
   814  000092                     setLED@sb:
   815                           	opt callstack 0
   816                           
   817                           ; 4 bytes @ 0x32
   818  000092                     	ds	3
   819  000095                     efgtoa@i:
   820                           	opt callstack 0
   821                           
   822                           ; 2 bytes @ 0x35
   823  000095                     	ds	1
   824  000096                     setLED@sr:
   825                           	opt callstack 0
   826                           
   827                           ; 4 bytes @ 0x36
   828  000096                     	ds	1
   829  000097                     efgtoa@g:
   830                           	opt callstack 0
   831                           
   832                           ; 4 bytes @ 0x37
   833  000097                     	ds	3
   834  00009A                     setLED@shift:
   835                           	opt callstack 0
   836                           
   837                           ; 4 bytes @ 0x3A
   838  00009A                     	ds	1
   839  00009B                     efgtoa@e:
   840                           	opt callstack 0
   841                           
   842                           ; 2 bytes @ 0x3B
   843  00009B                     	ds	2
   844  00009D                     efgtoa@n:
   845                           	opt callstack 0
   846                           
   847                           ; 2 bytes @ 0x3D
   848  00009D                     	ds	2
   849  00009F                     efgtoa@u:
   850                           	opt callstack 0
   851                           
   852                           ; 4 bytes @ 0x3F
   853  00009F                     	ds	4
   854  0000A3                     ??_vfpfcnvrt:
   855                           
   856                           ; 1 bytes @ 0x43
   857  0000A3                     	ds	4
   858  0000A7                     _vfpfcnvrt$646:
   859                           	opt callstack 0
   860                           
   861                           ; 2 bytes @ 0x47
   862  0000A7                     	ds	2
   863  0000A9                     _vfpfcnvrt$647:
   864                           	opt callstack 0
   865                           
   866                           ; 2 bytes @ 0x49
   867  0000A9                     	ds	2
   868  0000AB                     _vfpfcnvrt$651:
   869                           	opt callstack 0
   870                           
   871                           ; 2 bytes @ 0x4B
   872  0000AB                     	ds	2
   873  0000AD                     vfpfcnvrt@ct:
   874                           	opt callstack 0
   875                           
   876                           ; 3 bytes @ 0x4D
   877  0000AD                     	ds	3
   878  0000B0                     vfpfcnvrt@f:
   879                           	opt callstack 0
   880                           
   881                           ; 4 bytes @ 0x50
   882  0000B0                     	ds	4
   883  0000B4                     vfpfcnvrt@c:
   884                           	opt callstack 0
   885                           
   886                           ; 1 bytes @ 0x54
   887  0000B4                     	ds	1
   888  0000B5                     ?_vfprintf:
   889                           	opt callstack 0
   890  0000B5                     vfprintf@fp:
   891                           	opt callstack 0
   892                           
   893                           ; 1 bytes @ 0x55
   894  0000B5                     	ds	1
   895  0000B6                     vfprintf@fmt:
   896                           	opt callstack 0
   897                           
   898                           ; 1 bytes @ 0x56
   899  0000B6                     	ds	1
   900  0000B7                     vfprintf@ap:
   901                           	opt callstack 0
   902                           
   903                           ; 1 bytes @ 0x57
   904  0000B7                     	ds	1
   905  0000B8                     vfprintf@cfmt:
   906                           	opt callstack 0
   907                           
   908                           ; 1 bytes @ 0x58
   909  0000B8                     	ds	1
   910  0000B9                     ?_sprintf:
   911                           	opt callstack 0
   912  0000B9                     sprintf@s:
   913                           	opt callstack 0
   914                           
   915                           ; 1 bytes @ 0x59
   916  0000B9                     	ds	1
   917  0000BA                     sprintf@fmt:
   918                           	opt callstack 0
   919                           
   920                           ; 1 bytes @ 0x5A
   921  0000BA                     	ds	7
   922  0000C1                     sprintf@ap:
   923                           	opt callstack 0
   924                           
   925                           ; 1 bytes @ 0x61
   926  0000C1                     	ds	1
   927  0000C2                     sprintf@f:
   928                           	opt callstack 0
   929                           
   930                           ; 5 bytes @ 0x62
   931  0000C2                     	ds	5
   932  0000C7                     ??_main_loop:
   933                           
   934                           ; 1 bytes @ 0x67
   935  0000C7                     	ds	6
   936  0000CD                     main_loop@batmsg:
   937                           	opt callstack 0
   938                           
   939                           ; 17 bytes @ 0x6D
   940  0000CD                     	ds	17
   941  0000DE                     main_loop@lastAvg:
   942                           	opt callstack 0
   943                           
   944                           ; 4 bytes @ 0x7E
   945  0000DE                     	ds	4
   946  0000E2                     _main_loop$317:
   947                           	opt callstack 0
   948                           
   949                           ; 4 bytes @ 0x82
   950  0000E2                     	ds	4
   951  0000E6                     _main_loop$318:
   952                           	opt callstack 0
   953                           
   954                           ; 4 bytes @ 0x86
   955  0000E6                     	ds	4
   956  0000EA                     _main_loop$319:
   957                           	opt callstack 0
   958                           
   959                           ; 4 bytes @ 0x8A
   960  0000EA                     	ds	4
   961  0000EE                     _main_loop$338:
   962                           	opt callstack 0
   963                           
   964                           ; 4 bytes @ 0x8E
   965  0000EE                     	ds	4
   966  0000F2                     main_loop@absRes:
   967                           	opt callstack 0
   968                           
   969                           ; 2 bytes @ 0x92
   970  0000F2                     	ds	2
   971  0000F4                     main_loop@batlvl:
   972                           	opt callstack 0
   973                           
   974                           ; 2 bytes @ 0x94
   975  0000F4                     	ds	2
   976  0000F6                     main_loop@res:
   977                           	opt callstack 0
   978                           
   979                           ; 2 bytes @ 0x96
   980  0000F6                     	ds	2
   981  0000F8                     main_loop@sample:
   982                           	opt callstack 0
   983                           
   984                           ; 4 bytes @ 0x98
   985  0000F8                     	ds	4
   986  0000FC                     main_loop@rel:
   987                           	opt callstack 0
   988                           
   989                           ; 4 bytes @ 0x9C
   990  0000FC                     	ds	4
   991                           
   992                           	psect	cstackCOMRAM
   993  000001                     __pcstackCOMRAM:
   994                           	opt callstack 0
   995  000001                     ?_strlen:
   996                           	opt callstack 0
   997  000001                     ?___fpclassifyf:
   998                           	opt callstack 0
   999  000001                     ?_isupper:
  1000                           	opt callstack 0
  1001  000001                     ?_isdigit:
  1002                           	opt callstack 0
  1003  000001                     ?_strncmp:
  1004                           	opt callstack 0
  1005  000001                     ?_isspace:
  1006                           	opt callstack 0
  1007  000001                     ?___wmul:
  1008                           	opt callstack 0
  1009  000001                     ?___awdiv:
  1010                           	opt callstack 0
  1011  000001                     ?___awmod:
  1012                           	opt callstack 0
  1013  000001                     ?___lmul:
  1014                           	opt callstack 0
  1015  000001                     ?___lldiv:
  1016                           	opt callstack 0
  1017  000001                     ?___almod:
  1018                           	opt callstack 0
  1019  000001                     ?___flneg:
  1020                           	opt callstack 0
  1021  000001                     ?___fltol:
  1022                           	opt callstack 0
  1023  000001                     ?___xxtofl:
  1024                           	opt callstack 0
  1025  000001                     lcd_write@data:
  1026                           	opt callstack 0
  1027  000001                     strncmp@_l:
  1028                           	opt callstack 0
  1029  000001                     ___wmul@multiplier:
  1030                           	opt callstack 0
  1031  000001                     ___awdiv@dividend:
  1032                           	opt callstack 0
  1033  000001                     ___awmod@dividend:
  1034                           	opt callstack 0
  1035  000001                     isdigit@c:
  1036                           	opt callstack 0
  1037  000001                     isspace@c:
  1038                           	opt callstack 0
  1039  000001                     isupper@c:
  1040                           	opt callstack 0
  1041  000001                     memcpy@d1:
  1042                           	opt callstack 0
  1043  000001                     fputc@c:
  1044                           	opt callstack 0
  1045  000001                     strcpy@dest:
  1046                           	opt callstack 0
  1047  000001                     strlen@s:
  1048                           	opt callstack 0
  1049  000001                     ___lmul@multiplier:
  1050                           	opt callstack 0
  1051  000001                     ___lldiv@dividend:
  1052                           	opt callstack 0
  1053  000001                     ___almod@dividend:
  1054                           	opt callstack 0
  1055  000001                     ___fleq@ff1:
  1056                           	opt callstack 0
  1057  000001                     ___flneg@f1:
  1058                           	opt callstack 0
  1059  000001                     ___fltol@f1:
  1060                           	opt callstack 0
  1061  000001                     ___xxtofl@val:
  1062                           	opt callstack 0
  1063  000001                     ___fpclassifyf@x:
  1064                           	opt callstack 0
  1065                           
  1066                           ; 4 bytes @ 0x0
  1067  000001                     	ds	1
  1068  000002                     lcd_write@longdelay:
  1069                           	opt callstack 0
  1070  000002                     strncmp@_r:
  1071                           	opt callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x1
  1074  000002                     	ds	1
  1075  000003                     ??_isupper:
  1076  000003                     ??_isdigit:
  1077  000003                     ??_isspace:
  1078  000003                     ??_lcd_write:
  1079  000003                     fputc@fp:
  1080                           	opt callstack 0
  1081  000003                     ___wmul@multiplicand:
  1082                           	opt callstack 0
  1083  000003                     ___awdiv@divisor:
  1084                           	opt callstack 0
  1085  000003                     ___awmod@divisor:
  1086                           	opt callstack 0
  1087  000003                     memcpy@s1:
  1088                           	opt callstack 0
  1089  000003                     strcpy@src:
  1090                           	opt callstack 0
  1091  000003                     strlen@a:
  1092                           	opt callstack 0
  1093  000003                     strncmp@n:
  1094                           	opt callstack 0
  1095                           
  1096                           ; 2 bytes @ 0x2
  1097  000003                     	ds	1
  1098  000004                     ??_fputc:
  1099  000004                     lcd_write@rs:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x3
  1103  000004                     	ds	1
  1104  000005                     ??___fpclassifyf:
  1105  000005                     ??_strcpy:
  1106  000005                     ??_strncmp:
  1107  000005                     ??___fltol:
  1108  000005                     ??___xxtofl:
  1109  000005                     lcd_init@shift:
  1110                           	opt callstack 0
  1111  000005                     lcd_set_data_addr@addr:
  1112                           	opt callstack 0
  1113  000005                     ___awdiv@counter:
  1114                           	opt callstack 0
  1115  000005                     ___awmod@counter:
  1116                           	opt callstack 0
  1117  000005                     lcd_print@string:
  1118                           	opt callstack 0
  1119  000005                     ___wmul@product:
  1120                           	opt callstack 0
  1121  000005                     memcpy@n:
  1122                           	opt callstack 0
  1123  000005                     ___lmul@multiplicand:
  1124                           	opt callstack 0
  1125  000005                     ___lldiv@divisor:
  1126                           	opt callstack 0
  1127  000005                     ___almod@divisor:
  1128                           	opt callstack 0
  1129  000005                     ___fleq@ff2:
  1130                           	opt callstack 0
  1131                           
  1132                           ; 4 bytes @ 0x4
  1133  000005                     	ds	1
  1134  000006                     lcd_init@cursor:
  1135                           	opt callstack 0
  1136  000006                     ___awdiv@sign:
  1137                           	opt callstack 0
  1138  000006                     ___awmod@sign:
  1139                           	opt callstack 0
  1140  000006                     strncmp@l:
  1141                           	opt callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x5
  1144  000006                     	ds	1
  1145  000007                     ??_lcd_print:
  1146  000007                     ?_tolower:
  1147                           	opt callstack 0
  1148  000007                     lcd_init@cursorblink:
  1149                           	opt callstack 0
  1150  000007                     _isspace$1153:
  1151                           	opt callstack 0
  1152  000007                     strncmp@r:
  1153                           	opt callstack 0
  1154  000007                     ___awdiv@quotient:
  1155                           	opt callstack 0
  1156  000007                     memcpy@d:
  1157                           	opt callstack 0
  1158  000007                     strcpy@s:
  1159                           	opt callstack 0
  1160  000007                     tolower@c:
  1161                           	opt callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x6
  1164  000007                     	ds	1
  1165  000008                     ?_atoi:
  1166                           	opt callstack 0
  1167  000008                     lcd_init@on:
  1168                           	opt callstack 0
  1169  000008                     atoi@s:
  1170                           	opt callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x7
  1173  000008                     	ds	1
  1174  000009                     ??_lcd_init:
  1175  000009                     ??_tolower:
  1176  000009                     ??___fleq:
  1177  000009                     lcd_print@i:
  1178                           	opt callstack 0
  1179  000009                     ___almod@counter:
  1180                           	opt callstack 0
  1181  000009                     ___fltol@sign1:
  1182                           	opt callstack 0
  1183  000009                     ___xxtofl@sign:
  1184                           	opt callstack 0
  1185  000009                     ___fpclassifyf@e:
  1186                           	opt callstack 0
  1187  000009                     memcpy@s:
  1188                           	opt callstack 0
  1189  000009                     fputs@s:
  1190                           	opt callstack 0
  1191  000009                     strcpy@d:
  1192                           	opt callstack 0
  1193  000009                     ___lmul@product:
  1194                           	opt callstack 0
  1195  000009                     ___lldiv@quotient:
  1196                           	opt callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x8
  1199  000009                     	ds	1
  1200  00000A                     ??_atoi:
  1201  00000A                     lcd_init@inc:
  1202                           	opt callstack 0
  1203  00000A                     ___almod@sign:
  1204                           	opt callstack 0
  1205  00000A                     ___fltol@exp1:
  1206                           	opt callstack 0
  1207  00000A                     ___xxtofl@exp:
  1208                           	opt callstack 0
  1209                           
  1210                           ; 1 bytes @ 0x9
  1211  00000A                     	ds	1
  1212  00000B                     memcpy@tmp:
  1213                           	opt callstack 0
  1214  00000B                     fputs@fp:
  1215                           	opt callstack 0
  1216  00000B                     ___xxtofl@arg:
  1217                           	opt callstack 0
  1218  00000B                     ___fpclassifyf@u:
  1219                           	opt callstack 0
  1220                           
  1221                           ; 4 bytes @ 0xA
  1222  00000B                     	ds	1
  1223  00000C                     fputs@c:
  1224                           	opt callstack 0
  1225  00000C                     uart_send@buf:
  1226                           	opt callstack 0
  1227                           
  1228                           ; 2 bytes @ 0xB
  1229  00000C                     	ds	1
  1230  00000D                     ?___aldiv:
  1231                           	opt callstack 0
  1232  00000D                     ___lldiv@counter:
  1233                           	opt callstack 0
  1234  00000D                     fputs@i:
  1235                           	opt callstack 0
  1236  00000D                     _tolower$1245:
  1237                           	opt callstack 0
  1238  00000D                     ___aldiv@dividend:
  1239                           	opt callstack 0
  1240                           
  1241                           ; 4 bytes @ 0xC
  1242  00000D                     	ds	1
  1243  00000E                     ?___llmod:
  1244                           	opt callstack 0
  1245  00000E                     uart_send@len:
  1246                           	opt callstack 0
  1247  00000E                     atoi@neg:
  1248                           	opt callstack 0
  1249  00000E                     ___llmod@dividend:
  1250                           	opt callstack 0
  1251                           
  1252                           ; 4 bytes @ 0xD
  1253  00000E                     	ds	1
  1254  00000F                     ??_uart_send:
  1255  00000F                     ?_pad:
  1256                           	opt callstack 0
  1257  00000F                     ?___fladd:
  1258                           	opt callstack 0
  1259  00000F                     pad@fp:
  1260                           	opt callstack 0
  1261  00000F                     ___fladd@b:
  1262                           	opt callstack 0
  1263                           
  1264                           ; 4 bytes @ 0xE
  1265  00000F                     	ds	1
  1266  000010                     pad@buf:
  1267                           	opt callstack 0
  1268  000010                     _atoi$1122:
  1269                           	opt callstack 0
  1270                           
  1271                           ; 2 bytes @ 0xF
  1272  000010                     	ds	1
  1273  000011                     handle_message@message:
  1274                           	opt callstack 0
  1275  000011                     ___aldiv@divisor:
  1276                           	opt callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x10
  1279  000011                     	ds	1
  1280  000012                     pad@p:
  1281                           	opt callstack 0
  1282  000012                     _atoi$1124:
  1283                           	opt callstack 0
  1284  000012                     ___llmod@divisor:
  1285                           	opt callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x11
  1288  000012                     	ds	1
  1289  000013                     handle_message@len:
  1290                           	opt callstack 0
  1291  000013                     ___fladd@a:
  1292                           	opt callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x12
  1295  000013                     	ds	1
  1296  000014                     ??_pad:
  1297  000014                     _atoi$1123:
  1298                           	opt callstack 0
  1299                           
  1300                           ; 1 bytes @ 0x13
  1301  000014                     	ds	1
  1302  000015                     ??_uart_tasks:
  1303  000015                     ___aldiv@counter:
  1304                           	opt callstack 0
  1305  000015                     pad@i:
  1306                           	opt callstack 0
  1307  000015                     atoi@n:
  1308                           	opt callstack 0
  1309                           
  1310                           ; 2 bytes @ 0x14
  1311  000015                     	ds	1
  1312  000016                     ___aldiv@sign:
  1313                           	opt callstack 0
  1314  000016                     ___llmod@counter:
  1315                           	opt callstack 0
  1316                           
  1317                           ; 1 bytes @ 0x15
  1318  000016                     	ds	1
  1319  000017                     ??___fladd:
  1320  000017                     pad@w:
  1321                           	opt callstack 0
  1322  000017                     ___aldiv@quotient:
  1323                           	opt callstack 0
  1324                           
  1325                           ; 4 bytes @ 0x16
  1326  000017                     	ds	2
  1327  000019                     uart_tasks@rxLen:
  1328                           	opt callstack 0
  1329                           
  1330                           ; 1 bytes @ 0x18
  1331  000019                     	ds	1
  1332  00001A                     uart_tasks@rawMsgOffset:
  1333                           	opt callstack 0
  1334                           
  1335                           ; 1 bytes @ 0x19
  1336  00001A                     	ds	1
  1337  00001B                     uart_tasks@checksum:
  1338                           	opt callstack 0
  1339  00001B                     ___fladd@signs:
  1340                           	opt callstack 0
  1341  00001B                     updateButtonLight@step:
  1342                           	opt callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x1A
  1345  00001B                     	ds	1
  1346  00001C                     uart_tasks@msgOffset:
  1347                           	opt callstack 0
  1348  00001C                     ___fladd@aexp:
  1349                           	opt callstack 0
  1350                           
  1351                           ; 1 bytes @ 0x1B
  1352  00001C                     	ds	1
  1353  00001D                     uart_tasks@posInRawMsg:
  1354                           	opt callstack 0
  1355  00001D                     ___fladd@bexp:
  1356                           	opt callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x1C
  1359  00001D                     	ds	1
  1360  00001E                     uart_tasks@i:
  1361                           	opt callstack 0
  1362  00001E                     ___fladd@grs:
  1363                           	opt callstack 0
  1364                           
  1365                           ; 1 bytes @ 0x1D
  1366  00001E                     	ds	1
  1367  00001F                     ??_updateButtonLight:
  1368  00001F                     ?___fldiv:
  1369                           	opt callstack 0
  1370  00001F                     uart_tasks@bytePos:
  1371                           	opt callstack 0
  1372  00001F                     ___fldiv@b:
  1373                           	opt callstack 0
  1374                           
  1375                           ; 4 bytes @ 0x1E
  1376  00001F                     	ds	1
  1377  000020                     uart_tasks@intPos:
  1378                           	opt callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x1F
  1381  000020                     	ds	1
  1382  000021                     uart_tasks@msgLen:
  1383                           	opt callstack 0
  1384                           
  1385                           ; 1 bytes @ 0x20
  1386  000021                     	ds	1
  1387  000022                     uart_tasks@zeroByte:
  1388                           	opt callstack 0
  1389                           
  1390                           ; 1 bytes @ 0x21
  1391  000022                     	ds	1
  1392  000023                     uart_tasks@val:
  1393                           	opt callstack 0
  1394  000023                     updateButtonLight@dch:
  1395                           	opt callstack 0
  1396  000023                     ___fldiv@a:
  1397                           	opt callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x22
  1400  000023                     	ds	4
  1401  000027                     ??___fldiv:
  1402                           
  1403                           ; 1 bytes @ 0x26
  1404  000027                     	ds	4
  1405  00002B                     ___fldiv@rem:
  1406                           	opt callstack 0
  1407                           
  1408                           ; 4 bytes @ 0x2A
  1409  00002B                     	ds	4
  1410  00002F                     ___fldiv@sign:
  1411                           	opt callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x2E
  1414  00002F                     	ds	1
  1415  000030                     ___fldiv@new_exp:
  1416                           	opt callstack 0
  1417                           
  1418                           ; 2 bytes @ 0x2F
  1419  000030                     	ds	2
  1420  000032                     ___fldiv@grs:
  1421                           	opt callstack 0
  1422                           
  1423                           ; 4 bytes @ 0x31
  1424  000032                     	ds	4
  1425  000036                     ___fldiv@bexp:
  1426                           	opt callstack 0
  1427                           
  1428                           ; 1 bytes @ 0x35
  1429  000036                     	ds	1
  1430  000037                     ___fldiv@aexp:
  1431                           	opt callstack 0
  1432                           
  1433                           ; 1 bytes @ 0x36
  1434  000037                     	ds	1
  1435  000038                     ?_floorf:
  1436                           	opt callstack 0
  1437  000038                     ?___flmul:
  1438                           	opt callstack 0
  1439  000038                     ___flmul@b:
  1440                           	opt callstack 0
  1441  000038                     floorf@x:
  1442                           	opt callstack 0
  1443                           
  1444                           ; 4 bytes @ 0x37
  1445  000038                     	ds	4
  1446  00003C                     ??_floorf:
  1447  00003C                     ___flmul@a:
  1448                           	opt callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x3B
  1451  00003C                     	ds	4
  1452  000040                     ??___flmul:
  1453                           
  1454                           ; 1 bytes @ 0x3F
  1455  000040                     	ds	2
  1456  000042                     floorf@m:
  1457                           	opt callstack 0
  1458                           
  1459                           ; 4 bytes @ 0x41
  1460  000042                     	ds	2
  1461  000044                     ___flmul@sign:
  1462                           	opt callstack 0
  1463                           
  1464                           ; 1 bytes @ 0x43
  1465  000044                     	ds	1
  1466  000045                     ___flmul@aexp:
  1467                           	opt callstack 0
  1468                           
  1469                           ; 1 bytes @ 0x44
  1470  000045                     	ds	1
  1471  000046                     floorf@e:
  1472                           	opt callstack 0
  1473  000046                     ___flmul@grs:
  1474                           	opt callstack 0
  1475                           
  1476                           ; 4 bytes @ 0x45
  1477  000046                     	ds	2
  1478  000048                     floorf@u:
  1479                           	opt callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x47
  1482  000048                     	ds	2
  1483  00004A                     ___flmul@bexp:
  1484                           	opt callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x49
  1487  00004A                     	ds	1
  1488  00004B                     ___flmul@prod:
  1489                           	opt callstack 0
  1490                           
  1491                           ; 4 bytes @ 0x4A
  1492  00004B                     	ds	4
  1493  00004F                     ___flmul@temp:
  1494                           	opt callstack 0
  1495                           
  1496                           ; 2 bytes @ 0x4E
  1497  00004F                     	ds	2
  1498  000051                     ?___flsub:
  1499                           	opt callstack 0
  1500  000051                     ___flge@ff1:
  1501                           	opt callstack 0
  1502  000051                     ___flsub@b:
  1503                           	opt callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x50
  1506  000051                     	ds	4
  1507  000055                     ___flge@ff2:
  1508                           	opt callstack 0
  1509  000055                     ___flsub@a:
  1510                           	opt callstack 0
  1511                           
  1512                           ; 4 bytes @ 0x54
  1513  000055                     	ds	4
  1514  000059                     ??___flge:
  1515                           
  1516                           ; 1 bytes @ 0x58
  1517  000059                     	ds	4
  1518  00005D                     ?_vfpfcnvrt:
  1519                           	opt callstack 0
  1520  00005D                     vfpfcnvrt@fp:
  1521                           	opt callstack 0
  1522                           
  1523                           ; 1 bytes @ 0x5C
  1524  00005D                     	ds	1
  1525  00005E                     vfpfcnvrt@fmt:
  1526                           	opt callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x5D
  1529  00005E                     	ds	1
  1530  00005F                     vfpfcnvrt@ap:
  1531                           	opt callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x5E
  1534  00005F                     	ds	1
  1535  000060                     
  1536                           ; 1 bytes @ 0x5F
  1537 ;;
  1538 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1539 ;;
  1540 ;; *************** function _main *****************
  1541 ;; Defined at:
  1542 ;;		line 257 in file "main.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;		None
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;		None
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1558 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1559 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1560 ;;Total ram usage:        2 bytes
  1561 ;; Hardware stack levels required when called:    9
  1562 ;; This function calls:
  1563 ;;		_lcd_init
  1564 ;;		_lcd_print
  1565 ;;		_main_loop
  1566 ;;		_uart_init
  1567 ;; This function is called by:
  1568 ;;		Startup code after reset
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text0
  1573  004C82                     __ptext0:
  1574                           	opt callstack 0
  1575  004C82                     _main:
  1576                           	opt callstack 22
  1577                           
  1578                           ;main.c: 258:     TRISA = 0b00000000;
  1579                           
  1580                           ;incstack = 0
  1581  004C82  0E00               	movlw	0
  1582  004C84  6EC2               	movwf	194,c	;volatile
  1583                           
  1584                           ;main.c: 259:     PORTA = 0b00000000;
  1585  004C86  0E00               	movlw	0
  1586  004C88  6ECA               	movwf	202,c	;volatile
  1587                           
  1588                           ;main.c: 260:     ANSELA = 0b00000000;
  1589  004C8A  0E00               	movlw	0
  1590  004C8C  013A               	movlb	58	; () banked
  1591  004C8E  6F40               	movwf	64,b	;volatile
  1592                           
  1593                           ;main.c: 261:     WPUA = 0b00000000;
  1594  004C90  0E00               	movlw	0
  1595  004C92  6F41               	movwf	65,b	;volatile
  1596                           
  1597                           ; BSR set to: 58
  1598                           ;main.c: 262:     INLVLA = 0b11111111;
  1599  004C94  6944               	setf	68,b	;volatile
  1600                           
  1601                           ; BSR set to: 58
  1602                           ;main.c: 263:     SLRCONA = 0b11111111;
  1603  004C96  6943               	setf	67,b	;volatile
  1604                           
  1605                           ;main.c: 264:     ODCONA = 0b00000000;
  1606  004C98  0E00               	movlw	0
  1607  004C9A  6F42               	movwf	66,b	;volatile
  1608                           
  1609                           ;main.c: 266:     TRISB = 0b11001110;
  1610  004C9C  0ECE               	movlw	206
  1611  004C9E  6EC3               	movwf	195,c	;volatile
  1612                           
  1613                           ;main.c: 267:     PORTB = 0b00010000;
  1614  004CA0  0E10               	movlw	16
  1615  004CA2  6ECB               	movwf	203,c	;volatile
  1616                           
  1617                           ;main.c: 268:     ANSELB = 0b00000000;
  1618  004CA4  0E00               	movlw	0
  1619  004CA6  6F50               	movwf	80,b	;volatile
  1620                           
  1621                           ;main.c: 269:     WPUB = 0b11000000;
  1622  004CA8  0EC0               	movlw	192
  1623  004CAA  6F51               	movwf	81,b	;volatile
  1624                           
  1625                           ; BSR set to: 58
  1626                           ;main.c: 270:     INLVLB = 0b11111111;
  1627  004CAC  6954               	setf	84,b	;volatile
  1628                           
  1629                           ; BSR set to: 58
  1630                           ;main.c: 271:     SLRCONB = 0b11111111;
  1631  004CAE  6953               	setf	83,b	;volatile
  1632                           
  1633                           ;main.c: 272:     ODCONB = 0b00000000;
  1634  004CB0  0E00               	movlw	0
  1635  004CB2  6F52               	movwf	82,b	;volatile
  1636                           
  1637                           ;main.c: 274:     TRISC = 0b01101110;
  1638  004CB4  0E6E               	movlw	110
  1639  004CB6  6EC4               	movwf	196,c	;volatile
  1640                           
  1641                           ;main.c: 275:     PORTC = 0b00000000;
  1642  004CB8  0E00               	movlw	0
  1643  004CBA  6ECC               	movwf	204,c	;volatile
  1644                           
  1645                           ;main.c: 276:     ANSELC = 0b01100000;
  1646  004CBC  0E60               	movlw	96
  1647  004CBE  6F60               	movwf	96,b	;volatile
  1648                           
  1649                           ;main.c: 277:     WPUC = 0b00001110;
  1650  004CC0  0E0E               	movlw	14
  1651  004CC2  6F61               	movwf	97,b	;volatile
  1652                           
  1653                           ; BSR set to: 58
  1654                           ;main.c: 278:     INLVLC = 0b11111111;
  1655  004CC4  6964               	setf	100,b	;volatile
  1656                           
  1657                           ; BSR set to: 58
  1658                           ;main.c: 279:     SLRCONC = 0b11111111;
  1659  004CC6  6963               	setf	99,b	;volatile
  1660                           
  1661                           ;main.c: 280:     ODCONC = 0b00000000;
  1662  004CC8  0E00               	movlw	0
  1663  004CCA  6F62               	movwf	98,b	;volatile
  1664                           
  1665                           ;main.c: 282:     TRISD = 0b00001111;
  1666  004CCC  0E0F               	movlw	15
  1667  004CCE  6EC5               	movwf	197,c	;volatile
  1668                           
  1669                           ;main.c: 283:     PORTD = 0b00000000;
  1670  004CD0  0E00               	movlw	0
  1671  004CD2  6ECD               	movwf	205,c	;volatile
  1672                           
  1673                           ;main.c: 284:     ANSELD = 0b00001000;
  1674  004CD4  0E08               	movlw	8
  1675  004CD6  6F70               	movwf	112,b	;volatile
  1676                           
  1677                           ;main.c: 285:     WPUD = 0b00000111;
  1678  004CD8  0E07               	movlw	7
  1679  004CDA  6F71               	movwf	113,b	;volatile
  1680                           
  1681                           ; BSR set to: 58
  1682                           ;main.c: 286:     INLVLD = 0b11111111;
  1683  004CDC  6974               	setf	116,b	;volatile
  1684                           
  1685                           ; BSR set to: 58
  1686                           ;main.c: 287:     SLRCOND = 0b11111111;
  1687  004CDE  6973               	setf	115,b	;volatile
  1688                           
  1689                           ;main.c: 288:     ODCOND = 0b00000000;
  1690  004CE0  0E00               	movlw	0
  1691  004CE2  6F72               	movwf	114,b	;volatile
  1692                           
  1693                           ;main.c: 290:     TRISE = 0b11111000;
  1694  004CE4  0EF8               	movlw	248
  1695  004CE6  6EC6               	movwf	198,c	;volatile
  1696                           
  1697                           ;main.c: 291:     PORTE = 0b00000100;
  1698  004CE8  0E04               	movlw	4
  1699  004CEA  6ECE               	movwf	206,c	;volatile
  1700                           
  1701                           ;main.c: 292:     ANSELE = 0b11110000;
  1702  004CEC  0EF0               	movlw	240
  1703  004CEE  6F80               	movwf	128,b	;volatile
  1704                           
  1705                           ;main.c: 293:     WPUE = 0b00001000;
  1706  004CF0  0E08               	movlw	8
  1707  004CF2  6F81               	movwf	129,b	;volatile
  1708                           
  1709                           ; BSR set to: 58
  1710                           ;main.c: 294:     INLVLE = 0b11111111;
  1711  004CF4  6984               	setf	132,b	;volatile
  1712                           
  1713                           ; BSR set to: 58
  1714                           ;main.c: 295:     SLRCONE = 0b11111111;
  1715  004CF6  6983               	setf	131,b	;volatile
  1716                           
  1717                           ;main.c: 296:     ODCONE = 0b00000000;
  1718  004CF8  0E00               	movlw	0
  1719  004CFA  6F82               	movwf	130,b	;volatile
  1720                           
  1721                           ;main.c: 298:     PMD0 = 0b01111111;
  1722  004CFC  0E7F               	movlw	127
  1723  004CFE  0139               	movlb	57	; () banked
  1724  004D00  6FC0               	movwf	192,b	;volatile
  1725                           
  1726                           ;main.c: 299:     PMD1 = 0b11111011;
  1727  004D02  0EFB               	movlw	251
  1728  004D04  6FC1               	movwf	193,b	;volatile
  1729                           
  1730                           ;main.c: 300:     PMD2 = 0b01000111;
  1731  004D06  0E47               	movlw	71
  1732  004D08  6FC2               	movwf	194,b	;volatile
  1733                           
  1734                           ;main.c: 301:     PMD3 = 0b01010001;
  1735  004D0A  0E51               	movlw	81
  1736  004D0C  6FC3               	movwf	195,b	;volatile
  1737                           
  1738                           ;main.c: 302:     PMD4 = 0b11100000;
  1739  004D0E  0EE0               	movlw	224
  1740  004D10  6FC4               	movwf	196,b	;volatile
  1741                           
  1742                           ;main.c: 303:     PMD5 = 0b00100111;
  1743  004D12  0E27               	movlw	39
  1744  004D14  6FC5               	movwf	197,b	;volatile
  1745                           
  1746                           ;main.c: 304:     PMD6 = 0b00111111;
  1747  004D16  0E3F               	movlw	63
  1748  004D18  6FC6               	movwf	198,b	;volatile
  1749                           
  1750                           ;main.c: 305:     PMD7 = 0b00000000;
  1751  004D1A  0E00               	movlw	0
  1752  004D1C  6FC7               	movwf	199,b	;volatile
  1753                           
  1754                           ;main.c: 307:     ADCON0 = 0b10000100;
  1755  004D1E  0E84               	movlw	132
  1756  004D20  013E               	movlb	62	; () banked
  1757  004D22  6FF8               	movwf	248,b	;volatile
  1758                           
  1759                           ;main.c: 308:     ADCON1 = 0b00000000;
  1760  004D24  0E00               	movlw	0
  1761  004D26  6FF9               	movwf	249,b	;volatile
  1762                           
  1763                           ;main.c: 309:     ADCON2 = 0b00000000;
  1764  004D28  0E00               	movlw	0
  1765  004D2A  6FFA               	movwf	250,b	;volatile
  1766                           
  1767                           ;main.c: 310:     ADCON3 = 0b00000000;
  1768  004D2C  0E00               	movlw	0
  1769  004D2E  6FFB               	movwf	251,b	;volatile
  1770                           
  1771                           ;main.c: 311:     ADCLK = 0b00011111;
  1772  004D30  0E1F               	movlw	31
  1773  004D32  6FFF               	movwf	255,b	;volatile
  1774                           
  1775                           ;main.c: 312:     ADREF = 0b00000000;
  1776  004D34  0E00               	movlw	0
  1777  004D36  6FFD               	movwf	253,b	;volatile
  1778                           
  1779                           ;main.c: 314:     RC7PPS = 0b001010;
  1780  004D38  0E0A               	movlw	10
  1781  004D3A  013A               	movlb	58	; () banked
  1782  004D3C  6F17               	movwf	23,b	;volatile
  1783                           
  1784                           ;main.c: 315:     RD4PPS = 0b001011;
  1785  004D3E  0E0B               	movlw	11
  1786  004D40  6F1C               	movwf	28,b	;volatile
  1787                           
  1788                           ;main.c: 316:     RD5PPS = 0b001100;
  1789  004D42  0E0C               	movlw	12
  1790  004D44  6F1D               	movwf	29,b	;volatile
  1791                           
  1792                           ;main.c: 317:     RD6PPS = 0b001110;
  1793  004D46  0E0E               	movlw	14
  1794  004D48  6F1E               	movwf	30,b	;volatile
  1795                           
  1796                           ;main.c: 318:     RD7PPS = 0b010000;
  1797  004D4A  0E10               	movlw	16
  1798  004D4C  6F1F               	movwf	31,b	;volatile
  1799                           
  1800                           ;main.c: 320:     CCPTMRS0 = 0b01010101;
  1801  004D4E  0E55               	movlw	85
  1802  004D50  013F               	movlb	63	; () banked
  1803  004D52  6F5E               	movwf	94,b	;volatile
  1804                           
  1805                           ;main.c: 321:     CCP2CON = 0b10001111;
  1806  004D54  0E8F               	movlw	143
  1807  004D56  6E7A               	movwf	122,c	;volatile
  1808                           
  1809                           ;main.c: 322:     CCP3CON = 0b10001111;
  1810  004D58  0E8F               	movlw	143
  1811  004D5A  6E76               	movwf	118,c	;volatile
  1812                           
  1813                           ;main.c: 323:     CCP4CON = 0b10001111;
  1814  004D5C  0E8F               	movlw	143
  1815  004D5E  6E72               	movwf	114,c	;volatile
  1816                           
  1817                           ;main.c: 324:     PWM6CON = 0b10000000;
  1818  004D60  0E80               	movlw	128
  1819  004D62  6E6A               	movwf	106,c	;volatile
  1820                           
  1821                           ;main.c: 325:     PWM8CON = 0b10000000;
  1822  004D64  0E80               	movlw	128
  1823  004D66  6E62               	movwf	98,c	;volatile
  1824                           
  1825                           ; BSR set to: 63
  1826                           ;main.c: 327:     T2PR = 255;
  1827  004D68  68AB               	setf	171,c	;volatile
  1828                           
  1829                           ;main.c: 328:     T2CLK = 0b0001;
  1830  004D6A  0E01               	movlw	1
  1831  004D6C  6EAE               	movwf	174,c	;volatile
  1832                           
  1833                           ;main.c: 329:     T2CON = 0b10010000;
  1834  004D6E  0E90               	movlw	144
  1835  004D70  6EAC               	movwf	172,c	;volatile
  1836                           
  1837                           ;main.c: 331:     CCPR2L = 0;
  1838  004D72  0E00               	movlw	0
  1839  004D74  6E78               	movwf	120,c	;volatile
  1840                           
  1841                           ;main.c: 332:     CCPR2H = 0;
  1842  004D76  0E00               	movlw	0
  1843  004D78  6E79               	movwf	121,c	;volatile
  1844                           
  1845                           ;main.c: 333:     CCPR3L = 0;
  1846  004D7A  0E00               	movlw	0
  1847  004D7C  6E74               	movwf	116,c	;volatile
  1848                           
  1849                           ;main.c: 334:     CCPR3H = 0;
  1850  004D7E  0E00               	movlw	0
  1851  004D80  6E75               	movwf	117,c	;volatile
  1852                           
  1853                           ;main.c: 335:     CCPR4L = 0;
  1854  004D82  0E00               	movlw	0
  1855  004D84  6E70               	movwf	112,c	;volatile
  1856                           
  1857                           ;main.c: 336:     CCPR4H = 0;
  1858  004D86  0E00               	movlw	0
  1859  004D88  6E71               	movwf	113,c	;volatile
  1860                           
  1861                           ;main.c: 337:     PWM6DCH = 0;
  1862  004D8A  0E00               	movlw	0
  1863  004D8C  6E69               	movwf	105,c	;volatile
  1864                           
  1865                           ;main.c: 338:     PWM6DCL = 0;
  1866  004D8E  0E00               	movlw	0
  1867  004D90  6E68               	movwf	104,c	;volatile
  1868                           
  1869                           ; BSR set to: 63
  1870                           ;main.c: 339:     PWM8DCH = 255;
  1871  004D92  6861               	setf	97,c	;volatile
  1872                           
  1873                           ; BSR set to: 63
  1874                           ;main.c: 340:     PWM8DCL = 255;
  1875  004D94  6860               	setf	96,c	;volatile
  1876                           
  1877                           ; BSR set to: 63
  1878                           ;main.c: 342:     LATB4 = 0;
  1879  004D96  98BB               	bcf	16315,4,c	;volatile
  1880                           
  1881                           ; BSR set to: 63
  1882                           ;main.c: 343:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1883  004D98  0E05               	movlw	5
  1884  004D9A  0104               	movlb	4	; () banked
  1885  004D9C  6FA7               	movwf	(??_main+1)& (0+255),b
  1886  004D9E  0E0F               	movlw	15
  1887  004DA0  6FA6               	movwf	??_main& (0+255),b
  1888  004DA2  0EF1               	movlw	241
  1889  004DA4                     u8157:
  1890  004DA4  2EE8               	decfsz	wreg,f,c
  1891  004DA6  D7FE               	bra	u8157
  1892  004DA8  2FA6               	decfsz	??_main& (0+255),f,b
  1893  004DAA  D7FC               	bra	u8157
  1894  004DAC  2FA7               	decfsz	(??_main+1)& (0+255),f,b
  1895  004DAE  D7FA               	bra	u8157
  1896                           
  1897                           ;main.c: 344:     LATB4 = 1;
  1898  004DB0  88BB               	bsf	16315,4,c	;volatile
  1899                           
  1900                           ;main.c: 346:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1901  004DB2  0E05               	movlw	5
  1902  004DB4  0104               	movlb	4	; () banked
  1903  004DB6  6FA7               	movwf	(??_main+1)& (0+255),b
  1904  004DB8  0E0F               	movlw	15
  1905  004DBA  6FA6               	movwf	??_main& (0+255),b
  1906  004DBC  0EF1               	movlw	241
  1907  004DBE                     u8167:
  1908  004DBE  2EE8               	decfsz	wreg,f,c
  1909  004DC0  D7FE               	bra	u8167
  1910  004DC2  2FA6               	decfsz	??_main& (0+255),f,b
  1911  004DC4  D7FC               	bra	u8167
  1912  004DC6  2FA7               	decfsz	(??_main+1)& (0+255),f,b
  1913  004DC8  D7FA               	bra	u8167
  1914                           
  1915                           ;main.c: 347:     lcd_init(1, 0, 0, 0, 1);
  1916  004DCA  0E00               	movlw	0
  1917  004DCC  6E05               	movwf	lcd_init@shift^0,c
  1918  004DCE  0E00               	movlw	0
  1919  004DD0  6E06               	movwf	lcd_init@cursor^0,c
  1920  004DD2  0E00               	movlw	0
  1921  004DD4  6E07               	movwf	lcd_init@cursorblink^0,c
  1922  004DD6  0E01               	movlw	1
  1923  004DD8  6E08               	movwf	lcd_init@on^0,c
  1924  004DDA  0E01               	movlw	1
  1925  004DDC  EC5D  F02E         	call	_lcd_init
  1926                           
  1927                           ;main.c: 348:     lcd_print("Hello World!");
  1928  004DE0  0EDC               	movlw	low STR_11
  1929  004DE2  6E05               	movwf	lcd_print@string^0,c
  1930  004DE4  5005               	movf	lcd_print@string^0,w,c
  1931  004DE6  A4D8               	btfss	status,2,c
  1932  004DE8  0E20               	movlw	high __smallconst
  1933  004DEA  6E06               	movwf	(lcd_print@string+1)^0,c
  1934  004DEC  EC07  F02D         	call	_lcd_print	;wreg free
  1935                           
  1936                           ;main.c: 350:     uart_init();
  1937  004DF0  ECB9  F02C         	call	_uart_init	;wreg free
  1938  004DF4                     l6276:
  1939  004DF4  EC38  F016         	call	_main_loop	;wreg free
  1940  004DF8  D7FD               	goto	l6276
  1941  004DFA                     __end_of_main:
  1942                           	opt callstack 0
  1943                           
  1944 ;; *************** function _uart_init *****************
  1945 ;; Defined at:
  1946 ;;		line 16 in file "uart.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2
  1955 ;; Tracked objects:
  1956 ;;		On entry : 0/3F
  1957 ;;		On exit  : 3F/3A
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1964 ;;Total ram usage:        0 bytes
  1965 ;; Hardware stack levels used:    1
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text1
  1974  005972                     __ptext1:
  1975                           	opt callstack 0
  1976  005972                     _uart_init:
  1977                           	opt callstack 30
  1978                           
  1979                           ;uart.c: 17:     DMA1CON1 = 0b01000000;
  1980                           
  1981                           ;incstack = 0
  1982  005972  0E40               	movlw	64
  1983  005974  013B               	movlb	59	; () banked
  1984  005976  6FFD               	movwf	253,b	;volatile
  1985                           
  1986                           ;uart.c: 18:     DMA1SSZH = 0x00;
  1987  005978  0E00               	movlw	0
  1988  00597A  6FF8               	movwf	248,b	;volatile
  1989                           
  1990                           ;uart.c: 19:     DMA1SSZL = 0x01;
  1991  00597C  0E01               	movlw	1
  1992  00597E  6FF7               	movwf	247,b	;volatile
  1993                           
  1994                           ;uart.c: 20:     DMA1SSAU = 0x00;
  1995  005980  0E00               	movlw	0
  1996  005982  6FFB               	movwf	251,b	;volatile
  1997                           
  1998                           ;uart.c: 21:     DMA1SSAH = 0x3d;
  1999  005984  0E3D               	movlw	61
  2000  005986  6FFA               	movwf	250,b	;volatile
  2001                           
  2002                           ;uart.c: 22:     DMA1SSAL = 0xe8;
  2003  005988  0EE8               	movlw	232
  2004  00598A  6FF9               	movwf	249,b	;volatile
  2005                           
  2006                           ;uart.c: 23:     DMA1DSZH = 0x01;
  2007  00598C  0E01               	movlw	1
  2008  00598E  6FEF               	movwf	239,b	;volatile
  2009                           
  2010                           ;uart.c: 24:     DMA1DSZL = 0x00;
  2011  005990  0E00               	movlw	0
  2012  005992  6FEE               	movwf	238,b	;volatile
  2013                           
  2014                           ;uart.c: 25:     DMA1DSAH = 0x01;
  2015  005994  0E01               	movlw	1
  2016  005996  6FF1               	movwf	241,b	;volatile
  2017                           
  2018                           ;uart.c: 26:     DMA1DSAL = 0x00;
  2019  005998  0E00               	movlw	0
  2020  00599A  6FF0               	movwf	240,b	;volatile
  2021                           
  2022                           ;uart.c: 27:     DMA1SIRQ = 0x1b;
  2023  00599C  0E1B               	movlw	27
  2024  00599E  6FFF               	movwf	255,b	;volatile
  2025                           
  2026                           ;uart.c: 28:     DMA1AIRQ = 0x1d;
  2027  0059A0  0E1D               	movlw	29
  2028  0059A2  6FFE               	movwf	254,b	;volatile
  2029                           
  2030                           ;uart.c: 29:     DMA1CON0 = 0b11000100;
  2031  0059A4  0EC4               	movlw	196
  2032  0059A6  6FFC               	movwf	252,b	;volatile
  2033                           
  2034                           ;uart.c: 31:     DMA2CON1 = 0b00000011;
  2035  0059A8  0E03               	movlw	3
  2036  0059AA  6FDD               	movwf	221,b	;volatile
  2037                           
  2038                           ;uart.c: 32:     DMA2SSZH = 0x00;
  2039  0059AC  0E00               	movlw	0
  2040  0059AE  6FD8               	movwf	216,b	;volatile
  2041                           
  2042                           ;uart.c: 33:     DMA2SSZL = 0x01;
  2043  0059B0  0E01               	movlw	1
  2044  0059B2  6FD7               	movwf	215,b	;volatile
  2045                           
  2046                           ;uart.c: 34:     DMA2SSAU = 0x00;
  2047  0059B4  0E00               	movlw	0
  2048  0059B6  6FDB               	movwf	219,b	;volatile
  2049                           
  2050                           ;uart.c: 35:     DMA2SSAH = 0x02;
  2051  0059B8  0E02               	movlw	2
  2052  0059BA  6FDA               	movwf	218,b	;volatile
  2053                           
  2054                           ;uart.c: 36:     DMA2SSAL = 0x00;
  2055  0059BC  0E00               	movlw	0
  2056  0059BE  6FD9               	movwf	217,b	;volatile
  2057                           
  2058                           ;uart.c: 37:     DMA2DSZH = 0x00;
  2059  0059C0  0E00               	movlw	0
  2060  0059C2  6FCF               	movwf	207,b	;volatile
  2061                           
  2062                           ;uart.c: 38:     DMA2DSZL = 0x01;
  2063  0059C4  0E01               	movlw	1
  2064  0059C6  6FCE               	movwf	206,b	;volatile
  2065                           
  2066                           ;uart.c: 39:     DMA2DSAH = 0x3d;
  2067  0059C8  0E3D               	movlw	61
  2068  0059CA  6FD1               	movwf	209,b	;volatile
  2069                           
  2070                           ;uart.c: 40:     DMA2DSAL = 0xea;
  2071  0059CC  0EEA               	movlw	234
  2072  0059CE  6FD0               	movwf	208,b	;volatile
  2073                           
  2074                           ;uart.c: 41:     DMA2SIRQ = 0x1c;
  2075  0059D0  0E1C               	movlw	28
  2076  0059D2  6FDF               	movwf	223,b	;volatile
  2077                           
  2078                           ;uart.c: 42:     DMA2AIRQ = 0x1d;
  2079  0059D4  0E1D               	movlw	29
  2080  0059D6  6FDE               	movwf	222,b	;volatile
  2081                           
  2082                           ;uart.c: 43:     DMA2CON0 = 0b00000100;
  2083  0059D8  0E04               	movlw	4
  2084  0059DA  6FDC               	movwf	220,b	;volatile
  2085                           
  2086                           ;uart.c: 45:     PRLOCK = 0x55;
  2087  0059DC  0E55               	movlw	85
  2088  0059DE  0139               	movlb	57	; () banked
  2089  0059E0  6FEF               	movwf	239,b	;volatile
  2090                           
  2091                           ;uart.c: 46:     PRLOCK = 0xAA;
  2092  0059E2  0EAA               	movlw	170
  2093  0059E4  6FEF               	movwf	239,b	;volatile
  2094                           
  2095                           ; BSR set to: 57
  2096                           ;uart.c: 47:     PRLOCKbits.PRLOCKED = 1;
  2097  0059E6  81EF               	bsf	239,0,b	;volatile
  2098                           
  2099                           ;uart.c: 49:     U1BRGH = 0;
  2100  0059E8  0E00               	movlw	0
  2101  0059EA  013D               	movlb	61	; () banked
  2102  0059EC  6FF6               	movwf	246,b	;volatile
  2103                           
  2104                           ;uart.c: 50:     U1BRGL = 34;
  2105  0059EE  0E22               	movlw	34
  2106  0059F0  6FF5               	movwf	245,b	;volatile
  2107                           
  2108                           ;uart.c: 51:     U1RXPPS = 0b001001;
  2109  0059F2  0E09               	movlw	9
  2110  0059F4  013A               	movlb	58	; () banked
  2111  0059F6  6FE5               	movwf	229,b	;volatile
  2112                           
  2113                           ;uart.c: 52:     U1CON0 = 0b00110000;
  2114  0059F8  0E30               	movlw	48
  2115  0059FA  013D               	movlb	61	; () banked
  2116  0059FC  6FF2               	movwf	242,b	;volatile
  2117                           
  2118                           ;uart.c: 53:     U1CON1 = 0b10000000;
  2119  0059FE  0E80               	movlw	128
  2120  005A00  6FF3               	movwf	243,b	;volatile
  2121                           
  2122                           ;uart.c: 54:     U1CON2 = 0b00001000;
  2123  005A02  0E08               	movlw	8
  2124  005A04  6FF4               	movwf	244,b	;volatile
  2125                           
  2126                           ;uart.c: 55:     RB0PPS = 0b010011;
  2127  005A06  0E13               	movlw	19
  2128  005A08  013A               	movlb	58	; () banked
  2129  005A0A  6F08               	movwf	8,b	;volatile
  2130                           
  2131                           ; BSR set to: 58
  2132  005A0C  0012               	return		;funcret
  2133  005A0E                     __end_of_uart_init:
  2134                           	opt callstack 0
  2135                           
  2136 ;; *************** function _main_loop *****************
  2137 ;; Defined at:
  2138 ;;		line 159 in file "main.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  batmsg         17  109[BANK0 ] unsigned char [17]
  2143 ;;  batlvl          2  148[BANK0 ] unsigned short 
  2144 ;;  rel             4  156[BANK0 ] long 
  2145 ;;  sample          4  152[BANK0 ] long 
  2146 ;;  lastAvg         4  126[BANK0 ] unsigned long 
  2147 ;;  res             2  150[BANK0 ] short 
  2148 ;;  absRes          2  146[BANK0 ] short 
  2149 ;; Return value:  Size  Location     Type
  2150 ;;                  1    wreg      void 
  2151 ;; Registers used:
  2152 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2153 ;; Tracked objects:
  2154 ;;		On entry : 0/3A
  2155 ;;		On exit  : 0/0
  2156 ;;		Unchanged: 0/0
  2157 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  2158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2159 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2160 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2161 ;;      Totals:         0      57       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2162 ;;Total ram usage:       57 bytes
  2163 ;; Hardware stack levels used:    1
  2164 ;; Hardware stack levels required when called:    8
  2165 ;; This function calls:
  2166 ;;		___awdiv
  2167 ;;		___fladd
  2168 ;;		___fldiv
  2169 ;;		___flge
  2170 ;;		___flmul
  2171 ;;		___lldiv
  2172 ;;		___llmod
  2173 ;;		___lmul
  2174 ;;		___xxtofl
  2175 ;;		_lcd_print
  2176 ;;		_lcd_set_data_addr
  2177 ;;		_setLED
  2178 ;;		_sprintf
  2179 ;;		_uart_send
  2180 ;;		_uart_tasks
  2181 ;;		_updateButtonLight
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text2
  2188  002C70                     __ptext2:
  2189                           	opt callstack 0
  2190  002C70                     _main_loop:
  2191                           	opt callstack 22
  2192                           
  2193                           ;main.c: 160:     static uint32_t counter = 0;;main.c: 161:     static uint32_t sum = 0;
      +                          ;main.c: 162:     static uint16_t last[20];;main.c: 163:     static uint32_t lastSum = 0
      +                          ;;main.c: 164:     static int16_t pos = 0;;main.c: 166:     ADPCH = 0b010101;
  2194                           
  2195                           ; BSR set to: 58
  2196                           ;incstack = 0
  2197  002C70  0E15               	movlw	21
  2198  002C72  013E               	movlb	62	; () banked
  2199  002C74  6FF1               	movwf	241,b	;volatile
  2200                           
  2201                           ; BSR set to: 62
  2202                           ;main.c: 167:     ADCON0bits.GO = 1;
  2203  002C76  81F8               	bsf	248,0,b	;volatile
  2204                           
  2205                           ;main.c: 168:     while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000.0))
      +                          );
  2206  002C78  D004               	goto	l6064
  2207  002C7A                     l6062:
  2208                           
  2209                           ; BSR set to: 62
  2210  002C7A  0E05               	movlw	5
  2211  002C7C                     u8177:
  2212  002C7C  2EE8               	decfsz	wreg,f,c
  2213  002C7E  D7FE               	bra	u8177
  2214  002C80  F000               	nop	
  2215  002C82                     l6064:
  2216  002C82  013E               	movlb	62	; () banked
  2217  002C84  B1F8               	btfsc	248,0,b	;volatile
  2218  002C86  D7F9               	goto	l6062
  2219                           
  2220                           ; BSR set to: 62
  2221                           ;main.c: 169:     int16_t res = ((ADRESH << 8) | ADRESL) - 1545;
  2222  002C88  51EF               	movf	239,w,b	;volatile
  2223  002C8A  006F FBC0  F0C7    	movff	16112,??_main_loop	;volatile
  2224  002C90  0100               	movlb	0	; () banked
  2225  002C92  6BC8               	clrf	(??_main_loop+1)& (0+255),b
  2226  002C94  0060  F31C  F0C8   	movff	??_main_loop,??_main_loop+1
  2227  002C9A  6BC7               	clrf	??_main_loop& (0+255),b
  2228  002C9C  13C7               	iorwf	??_main_loop& (0+255),f,b
  2229  002C9E  0E00               	movlw	0
  2230  002CA0  13C8               	iorwf	(??_main_loop+1)& (0+255),f,b
  2231  002CA2  0EF7               	movlw	247
  2232  002CA4  25C7               	addwf	??_main_loop& (0+255),w,b
  2233  002CA6  6FF6               	movwf	main_loop@res& (0+255),b
  2234  002CA8  0EF9               	movlw	249
  2235  002CAA  21C8               	addwfc	(??_main_loop+1)& (0+255),w,b
  2236  002CAC  6FF7               	movwf	(main_loop@res+1)& (0+255),b
  2237                           
  2238                           ;main.c: 170:     int16_t absRes = res < 0 ? -res : res;
  2239  002CAE  BFF7               	btfsc	(main_loop@res+1)& (0+255),7,b
  2240  002CB0  D007               	goto	l267
  2241                           
  2242                           ; BSR set to: 0
  2243  002CB2  0060  F3D8  F0F2   	movff	main_loop@res,main_loop@absRes
  2244  002CB8  0060  F3DC  F0F3   	movff	main_loop@res+1,main_loop@absRes+1
  2245  002CBE  D010               	goto	l6070
  2246  002CC0                     l267:
  2247                           
  2248                           ; BSR set to: 0
  2249  002CC0  0060  F3D8  F0C7   	movff	main_loop@res,??_main_loop
  2250  002CC6  0060  F3DC  F0C8   	movff	main_loop@res+1,??_main_loop+1
  2251  002CCC  1FC7               	comf	??_main_loop& (0+255),f,b
  2252  002CCE  1FC8               	comf	(??_main_loop+1)& (0+255),f,b
  2253  002CD0  4BC7               	infsnz	??_main_loop& (0+255),f,b
  2254  002CD2  2BC8               	incf	(??_main_loop+1)& (0+255),f,b
  2255  002CD4  0060  F31C  F0F2   	movff	??_main_loop,main_loop@absRes
  2256  002CDA  0060  F320  F0F3   	movff	??_main_loop+1,main_loop@absRes+1
  2257  002CE0                     l6070:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;main.c: 171:     sum += absRes;
  2261  002CE0  0060  F3C8  F0C7   	movff	main_loop@absRes,??_main_loop
  2262  002CE6  0060  F3CC  F0C8   	movff	main_loop@absRes+1,??_main_loop+1
  2263  002CEC  0E00               	movlw	0
  2264  002CEE  BFC8               	btfsc	(??_main_loop+1)& (0+255),7,b
  2265  002CF0  0EFF               	movlw	255
  2266  002CF2  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2267  002CF4  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2268  002CF6  51C7               	movf	??_main_loop& (0+255),w,b
  2269  002CF8  0104               	movlb	4	; () banked
  2270  002CFA  2734               	addwf	main_loop@sum& (0+255),f,b
  2271  002CFC  0100               	movlb	0	; () banked
  2272  002CFE  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2273  002D00  0104               	movlb	4	; () banked
  2274  002D02  2335               	addwfc	(main_loop@sum+1)& (0+255),f,b
  2275  002D04  0100               	movlb	0	; () banked
  2276  002D06  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2277  002D08  0104               	movlb	4	; () banked
  2278  002D0A  2336               	addwfc	(main_loop@sum+2)& (0+255),f,b
  2279  002D0C  0100               	movlb	0	; () banked
  2280  002D0E  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2281  002D10  0104               	movlb	4	; () banked
  2282  002D12  2337               	addwfc	(main_loop@sum+3)& (0+255),f,b
  2283                           
  2284                           ; BSR set to: 4
  2285                           ;main.c: 173:     if (counter % 50 == 50 - 1) {
  2286  002D14  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  2287  002D1A  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2288  002D20  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2289  002D26  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2290  002D2C  0E32               	movlw	50
  2291  002D2E  6E12               	movwf	___llmod@divisor^0,c
  2292  002D30  0E00               	movlw	0
  2293  002D32  6E13               	movwf	(___llmod@divisor+1)^0,c
  2294  002D34  0E00               	movlw	0
  2295  002D36  6E14               	movwf	(___llmod@divisor+2)^0,c
  2296  002D38  0E00               	movlw	0
  2297  002D3A  6E15               	movwf	(___llmod@divisor+3)^0,c
  2298  002D3C  EC49  F02F         	call	___llmod	;wreg free
  2299  002D40  0E31               	movlw	49
  2300  002D42  180E               	xorwf	?___llmod^0,w,c
  2301  002D44  100F               	iorwf	(?___llmod+1)^0,w,c
  2302  002D46  1010               	iorwf	(?___llmod+2)^0,w,c
  2303  002D48  1011               	iorwf	(?___llmod+3)^0,w,c
  2304  002D4A  A4D8               	btfss	status,2,c
  2305  002D4C  D248               	goto	l6132
  2306                           
  2307                           ;main.c: 174:         int32_t sample = sum * 2 / 50;
  2308  002D4E  90D8               	bcf	status,0,c
  2309  002D50  0104               	movlb	4	; () banked
  2310  002D52  3534               	rlcf	main_loop@sum& (0+255),w,b
  2311  002D54  6E01               	movwf	___lldiv@dividend^0,c
  2312  002D56  3535               	rlcf	(main_loop@sum+1)& (0+255),w,b
  2313  002D58  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2314  002D5A  3536               	rlcf	(main_loop@sum+2)& (0+255),w,b
  2315  002D5C  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2316  002D5E  3537               	rlcf	(main_loop@sum+3)& (0+255),w,b
  2317  002D60  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2318  002D62  0E32               	movlw	50
  2319  002D64  6E05               	movwf	___lldiv@divisor^0,c
  2320  002D66  0E00               	movlw	0
  2321  002D68  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2322  002D6A  0E00               	movlw	0
  2323  002D6C  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2324  002D6E  0E00               	movlw	0
  2325  002D70  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2326  002D72  EC93  F02D         	call	___lldiv	;wreg free
  2327  002D76  0060  F004  F0F8   	movff	?___lldiv,main_loop@sample
  2328  002D7C  0060  F008  F0F9   	movff	?___lldiv+1,main_loop@sample+1
  2329  002D82  0060  F00C  F0FA   	movff	?___lldiv+2,main_loop@sample+2
  2330  002D88  0060  F010  F0FB   	movff	?___lldiv+3,main_loop@sample+3
  2331                           
  2332                           ;main.c: 175:         sample -= 9;
  2333  002D8E  0EF7               	movlw	247
  2334  002D90  0100               	movlb	0	; () banked
  2335  002D92  27F8               	addwf	main_loop@sample& (0+255),f,b
  2336  002D94  0EFF               	movlw	255
  2337  002D96  23F9               	addwfc	(main_loop@sample+1)& (0+255),f,b
  2338  002D98  0EFF               	movlw	255
  2339  002D9A  23FA               	addwfc	(main_loop@sample+2)& (0+255),f,b
  2340  002D9C  0EFF               	movlw	255
  2341  002D9E  23FB               	addwfc	(main_loop@sample+3)& (0+255),f,b
  2342                           
  2343                           ; BSR set to: 0
  2344                           ;main.c: 176:         if (sample < 0) sample = 0;
  2345  002DA0  AFFB               	btfss	(main_loop@sample+3)& (0+255),7,b
  2346  002DA2  D008               	goto	l6082
  2347                           
  2348                           ; BSR set to: 0
  2349  002DA4  0E00               	movlw	0
  2350  002DA6  6FF8               	movwf	main_loop@sample& (0+255),b
  2351  002DA8  0E00               	movlw	0
  2352  002DAA  6FF9               	movwf	(main_loop@sample+1)& (0+255),b
  2353  002DAC  0E00               	movlw	0
  2354  002DAE  6FFA               	movwf	(main_loop@sample+2)& (0+255),b
  2355  002DB0  0E00               	movlw	0
  2356  002DB2  6FFB               	movwf	(main_loop@sample+3)& (0+255),b
  2357  002DB4                     l6082:
  2358                           
  2359                           ; BSR set to: 0
  2360                           ;main.c: 178:         uint32_t lastAvg = lastSum / 20;
  2361  002DB4  0061  F0C0  F001   	movff	main_loop@lastSum,___lldiv@dividend
  2362  002DBA  0061  F0C4  F002   	movff	main_loop@lastSum+1,___lldiv@dividend+1
  2363  002DC0  0061  F0C8  F003   	movff	main_loop@lastSum+2,___lldiv@dividend+2
  2364  002DC6  0061  F0CC  F004   	movff	main_loop@lastSum+3,___lldiv@dividend+3
  2365  002DCC  0E14               	movlw	20
  2366  002DCE  6E05               	movwf	___lldiv@divisor^0,c
  2367  002DD0  0E00               	movlw	0
  2368  002DD2  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2369  002DD4  0E00               	movlw	0
  2370  002DD6  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2371  002DD8  0E00               	movlw	0
  2372  002DDA  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2373  002DDC  EC93  F02D         	call	___lldiv	;wreg free
  2374  002DE0  0060  F004  F0DE   	movff	?___lldiv,main_loop@lastAvg
  2375  002DE6  0060  F008  F0DF   	movff	?___lldiv+1,main_loop@lastAvg+1
  2376  002DEC  0060  F00C  F0E0   	movff	?___lldiv+2,main_loop@lastAvg+2
  2377  002DF2  0060  F010  F0E1   	movff	?___lldiv+3,main_loop@lastAvg+3
  2378                           
  2379                           ;main.c: 179:         int32_t rel = (sample - lastAvg) * soundAmplify[volume_level];
  2380  002DF8  0100               	movlb	0	; () banked
  2381  002DFA  51DE               	movf	main_loop@lastAvg& (0+255),w,b
  2382  002DFC  5DF8               	subwf	main_loop@sample& (0+255),w,b
  2383  002DFE  6E01               	movwf	___lmul@multiplier^0,c
  2384  002E00  51DF               	movf	(main_loop@lastAvg+1)& (0+255),w,b
  2385  002E02  59F9               	subwfb	(main_loop@sample+1)& (0+255),w,b
  2386  002E04  6E02               	movwf	(___lmul@multiplier+1)^0,c
  2387  002E06  51E0               	movf	(main_loop@lastAvg+2)& (0+255),w,b
  2388  002E08  59FA               	subwfb	(main_loop@sample+2)& (0+255),w,b
  2389  002E0A  6E03               	movwf	(___lmul@multiplier+2)^0,c
  2390  002E0C  51E1               	movf	(main_loop@lastAvg+3)& (0+255),w,b
  2391  002E0E  59FB               	subwfb	(main_loop@sample+3)& (0+255),w,b
  2392  002E10  6E04               	movwf	(___lmul@multiplier+3)^0,c
  2393  002E12  0104               	movlb	4	; () banked
  2394  002E14  514B               	movf	_volume_level& (0+255),w,b
  2395  002E16  0D02               	mullw	2
  2396  002E18  50F3               	movf	243,w,c
  2397  002E1A  0F01               	addlw	low _soundAmplify
  2398  002E1C  0100               	movlb	0	; () banked
  2399  002E1E  6FC7               	movwf	??_main_loop& (0+255),b
  2400  002E20  0060  F31F  FFF6   	movff	??_main_loop,tblptrl
  2401  002E26                     	if	1	;There is more than 1 active tblptr byte
  2402  002E26  0E20               	movlw	high __smallconst
  2403  002E28  6EF7               	movwf	tblptrh,c
  2404  002E2A                     	endif
  2405  002E2A                     	if	0	;tblptru may be non-zero
  2406  002E2A                     	endif
  2407  002E2A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2408  002E2A  0E00               	movlw	low (__smallconst shr (0+16))
  2409  002E2C  6EF8               	movwf	tblptru,c
  2410  002E2E                     	endif
  2411  002E2E  0009               	tblrd		*+
  2412  002E30  006F FFD4  F0C8    	movff	tablat,??_main_loop+1
  2413  002E36  0009               	tblrd		*+
  2414  002E38  006F FFD4  F0C9    	movff	tablat,??_main_loop+2
  2415  002E3E  0060  F320  F005   	movff	??_main_loop+1,___lmul@multiplicand
  2416  002E44  0060  F324  F006   	movff	??_main_loop+2,___lmul@multiplicand+1
  2417  002E4A  6A07               	clrf	(___lmul@multiplicand+2)^0,c
  2418  002E4C  6A08               	clrf	(___lmul@multiplicand+3)^0,c
  2419  002E4E  ECE3  F02F         	call	___lmul	;wreg free
  2420  002E52  0060  F004  F0FC   	movff	?___lmul,main_loop@rel
  2421  002E58  0060  F008  F0FD   	movff	?___lmul+1,main_loop@rel+1
  2422  002E5E  0060  F00C  F0FE   	movff	?___lmul+2,main_loop@rel+2
  2423  002E64  0060  F010  F0FF   	movff	?___lmul+3,main_loop@rel+3
  2424                           
  2425                           ;main.c: 182:         if (streaming && (volume_level >= 4 || ledBrightness <= 24) && rel
      +                           > 1800) pos = (4095 < (pos > rel ? pos : rel) ? 4095 : (pos > rel ? pos : rel));
  2426  002E6A  0104               	movlb	4	; () banked
  2427  002E6C  5149               	movf	_streaming& (0+255),w,b
  2428  002E6E  B4D8               	btfsc	status,2,c
  2429  002E70  D09F               	goto	l6114
  2430                           
  2431                           ; BSR set to: 4
  2432  002E72  0E04               	movlw	4
  2433  002E74  614B               	cpfslt	_volume_level& (0+255),b
  2434  002E76  D00A               	goto	u7890
  2435                           
  2436                           ; BSR set to: 4
  2437  002E78  BF9F               	btfsc	(_ledBrightness+3)& (0+255),7,b
  2438  002E7A  D008               	goto	u7890
  2439  002E7C  519F               	movf	(_ledBrightness+3)& (0+255),w,b
  2440  002E7E  119E               	iorwf	(_ledBrightness+2)& (0+255),w,b
  2441  002E80  119D               	iorwf	(_ledBrightness+1)& (0+255),w,b
  2442  002E82  E103               	bnz	u7891
  2443  002E84  0E19               	movlw	25
  2444  002E86  5D9C               	subwf	_ledBrightness& (0+255),w,b
  2445  002E88  B0D8               	btfsc	status,0,c
  2446  002E8A                     u7891:
  2447  002E8A  D092               	goto	l6114
  2448  002E8C                     u7890:
  2449                           
  2450                           ; BSR set to: 4
  2451  002E8C  0100               	movlb	0	; () banked
  2452  002E8E  BFFF               	btfsc	(main_loop@rel+3)& (0+255),7,b
  2453  002E90  D08F               	goto	l6114
  2454  002E92  51FF               	movf	(main_loop@rel+3)& (0+255),w,b
  2455  002E94  11FE               	iorwf	(main_loop@rel+2)& (0+255),w,b
  2456  002E96  E106               	bnz	u7900
  2457  002E98  0E09               	movlw	9
  2458  002E9A  5DFC               	subwf	main_loop@rel& (0+255),w,b
  2459  002E9C  0E07               	movlw	7
  2460  002E9E  59FD               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2461  002EA0  A0D8               	btfss	status,0,c
  2462  002EA2  D086               	goto	l6114
  2463  002EA4                     u7900:
  2464                           
  2465                           ; BSR set to: 0
  2466  002EA4  0061  F110  F0C7   	movff	main_loop@pos,??_main_loop
  2467  002EAA  0061  F114  F0C8   	movff	main_loop@pos+1,??_main_loop+1
  2468  002EB0  0E00               	movlw	0
  2469  002EB2  BFC8               	btfsc	(??_main_loop+1)& (0+255),7,b
  2470  002EB4  0EFF               	movlw	255
  2471  002EB6  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2472  002EB8  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2473  002EBA  51C7               	movf	??_main_loop& (0+255),w,b
  2474  002EBC  5DFC               	subwf	main_loop@rel& (0+255),w,b
  2475  002EBE  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2476  002EC0  59FD               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2477  002EC2  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2478  002EC4  59FE               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2479  002EC6  51FF               	movf	(main_loop@rel+3)& (0+255),w,b
  2480  002EC8  0A80               	xorlw	128
  2481  002ECA  6FCB               	movwf	(??_main_loop+4)& (0+255),b
  2482  002ECC  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2483  002ECE  0A80               	xorlw	128
  2484  002ED0  59CB               	subwfb	(??_main_loop+4)& (0+255),w,b
  2485  002ED2  A0D8               	btfss	status,0,c
  2486  002ED4  D00D               	goto	l6098
  2487                           
  2488                           ; BSR set to: 0
  2489  002ED6  0060  F3F0  F0E6   	movff	main_loop@rel,_main_loop$318
  2490  002EDC  0060  F3F4  F0E7   	movff	main_loop@rel+1,_main_loop$318+1
  2491  002EE2  0060  F3F8  F0E8   	movff	main_loop@rel+2,_main_loop$318+2
  2492  002EE8  0060  F3FC  F0E9   	movff	main_loop@rel+3,_main_loop$318+3
  2493  002EEE  D00B               	goto	l6100
  2494  002EF0                     l6098:
  2495                           
  2496                           ; BSR set to: 0
  2497  002EF0  0061  F110  F0E6   	movff	main_loop@pos,_main_loop$318
  2498  002EF6  0061  F114  F0E7   	movff	main_loop@pos+1,_main_loop$318+1
  2499  002EFC  0E00               	movlw	0
  2500  002EFE  BFE7               	btfsc	(_main_loop$318+1)& (0+255),7,b
  2501  002F00  0EFF               	movlw	-1
  2502  002F02  6FE8               	movwf	(_main_loop$318+2)& (0+255),b
  2503  002F04  6FE9               	movwf	(_main_loop$318+3)& (0+255),b
  2504  002F06                     l6100:
  2505                           
  2506                           ; BSR set to: 0
  2507  002F06  BFE9               	btfsc	(_main_loop$318+3)& (0+255),7,b
  2508  002F08  D007               	goto	u7920
  2509  002F0A  51E9               	movf	(_main_loop$318+3)& (0+255),w,b
  2510  002F0C  11E8               	iorwf	(_main_loop$318+2)& (0+255),w,b
  2511  002F0E  E142               	bnz	l6110
  2512  002F10  0E10               	movlw	16
  2513  002F12  5DE7               	subwf	(_main_loop$318+1)& (0+255),w,b
  2514  002F14  B0D8               	btfsc	status,0,c
  2515  002F16  D03E               	goto	l6110
  2516  002F18                     u7920:
  2517                           
  2518                           ; BSR set to: 0
  2519  002F18  0061  F110  F0C7   	movff	main_loop@pos,??_main_loop
  2520  002F1E  0061  F114  F0C8   	movff	main_loop@pos+1,??_main_loop+1
  2521  002F24  0E00               	movlw	0
  2522  002F26  BFC8               	btfsc	(??_main_loop+1)& (0+255),7,b
  2523  002F28  0EFF               	movlw	255
  2524  002F2A  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2525  002F2C  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2526  002F2E  51C7               	movf	??_main_loop& (0+255),w,b
  2527  002F30  5DFC               	subwf	main_loop@rel& (0+255),w,b
  2528  002F32  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2529  002F34  59FD               	subwfb	(main_loop@rel+1)& (0+255),w,b
  2530  002F36  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2531  002F38  59FE               	subwfb	(main_loop@rel+2)& (0+255),w,b
  2532  002F3A  51FF               	movf	(main_loop@rel+3)& (0+255),w,b
  2533  002F3C  0A80               	xorlw	128
  2534  002F3E  6FCB               	movwf	(??_main_loop+4)& (0+255),b
  2535  002F40  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2536  002F42  0A80               	xorlw	128
  2537  002F44  59CB               	subwfb	(??_main_loop+4)& (0+255),w,b
  2538  002F46  A0D8               	btfss	status,0,c
  2539  002F48  D00D               	goto	l6106
  2540                           
  2541                           ; BSR set to: 0
  2542  002F4A  0060  F3F0  F0EA   	movff	main_loop@rel,_main_loop$319
  2543  002F50  0060  F3F4  F0EB   	movff	main_loop@rel+1,_main_loop$319+1
  2544  002F56  0060  F3F8  F0EC   	movff	main_loop@rel+2,_main_loop$319+2
  2545  002F5C  0060  F3FC  F0ED   	movff	main_loop@rel+3,_main_loop$319+3
  2546  002F62  D00B               	goto	l6108
  2547  002F64                     l6106:
  2548                           
  2549                           ; BSR set to: 0
  2550  002F64  0061  F110  F0EA   	movff	main_loop@pos,_main_loop$319
  2551  002F6A  0061  F114  F0EB   	movff	main_loop@pos+1,_main_loop$319+1
  2552  002F70  0E00               	movlw	0
  2553  002F72  BFEB               	btfsc	(_main_loop$319+1)& (0+255),7,b
  2554  002F74  0EFF               	movlw	-1
  2555  002F76  6FEC               	movwf	(_main_loop$319+2)& (0+255),b
  2556  002F78  6FED               	movwf	(_main_loop$319+3)& (0+255),b
  2557  002F7A                     l6108:
  2558                           
  2559                           ; BSR set to: 0
  2560  002F7A  0060  F3A8  F0E2   	movff	_main_loop$319,_main_loop$317
  2561  002F80  0060  F3AC  F0E3   	movff	_main_loop$319+1,_main_loop$317+1
  2562  002F86  0060  F3B0  F0E4   	movff	_main_loop$319+2,_main_loop$317+2
  2563  002F8C  0060  F3B4  F0E5   	movff	_main_loop$319+3,_main_loop$317+3
  2564  002F92  D008               	goto	l6112
  2565  002F94                     l6110:
  2566                           
  2567                           ; BSR set to: 0
  2568  002F94  0EFF               	movlw	255
  2569  002F96  6FE2               	movwf	_main_loop$317& (0+255),b
  2570  002F98  0E0F               	movlw	15
  2571  002F9A  6FE3               	movwf	(_main_loop$317+1)& (0+255),b
  2572  002F9C  0E00               	movlw	0
  2573  002F9E  6FE4               	movwf	(_main_loop$317+2)& (0+255),b
  2574  002FA0  0E00               	movlw	0
  2575  002FA2  6FE5               	movwf	(_main_loop$317+3)& (0+255),b
  2576  002FA4                     l6112:
  2577                           
  2578                           ; BSR set to: 0
  2579  002FA4  0060  F388  F444   	movff	_main_loop$317,main_loop@pos
  2580  002FAA  0060  F38C  F445   	movff	_main_loop$317+1,main_loop@pos+1
  2581  002FB0                     l6114:
  2582                           
  2583                           ;main.c: 184:         setLED(pos, counter);
  2584  002FB0  0061  F110  F060   	movff	main_loop@pos,setLED@mod
  2585  002FB6  0061  F114  F061   	movff	main_loop@pos+1,setLED@mod+1
  2586  002FBC  0100               	movlb	0	; () banked
  2587  002FBE  0E00               	movlw	0
  2588  002FC0  BF61               	btfsc	(setLED@mod+1)& (0+255),7,b
  2589  002FC2  0EFF               	movlw	-1
  2590  002FC4  6F62               	movwf	(setLED@mod+2)& (0+255),b
  2591  002FC6  6F63               	movwf	(setLED@mod+3)& (0+255),b
  2592  002FC8  0061  F0E0  F064   	movff	main_loop@counter,setLED@step
  2593  002FCE  0061  F0E4  F065   	movff	main_loop@counter+1,setLED@step+1
  2594  002FD4  0061  F0E8  F066   	movff	main_loop@counter+2,setLED@step+2
  2595  002FDA  0061  F0EC  F067   	movff	main_loop@counter+3,setLED@step+3
  2596  002FE0  EC39  F01B         	call	_setLED	;wreg free
  2597                           
  2598                           ;main.c: 186:         pos = (pos - (pos / 70 + 1) > 0 ? pos - (pos / 70 + 1) : 0);
  2599  002FE4  0EFF               	movlw	255
  2600  002FE6  0100               	movlb	0	; () banked
  2601  002FE8  6FC7               	movwf	??_main_loop& (0+255),b
  2602  002FEA  0EFF               	movlw	255
  2603  002FEC  6FC8               	movwf	(??_main_loop+1)& (0+255),b
  2604  002FEE  0061  F110  F001   	movff	main_loop@pos,___awdiv@dividend
  2605  002FF4  0061  F114  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2606  002FFA  0E00               	movlw	0
  2607  002FFC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2608  002FFE  0E46               	movlw	70
  2609  003000  6E03               	movwf	___awdiv@divisor^0,c
  2610  003002  ECD8  F02D         	call	___awdiv	;wreg free
  2611  003006  0061  F110  F0C9   	movff	main_loop@pos,??_main_loop+2
  2612  00300C  0061  F114  F0CA   	movff	main_loop@pos+1,??_main_loop+3
  2613  003012  5001               	movf	?___awdiv^0,w,c
  2614  003014  5FC9               	subwf	(??_main_loop+2)& (0+255),f,b
  2615  003016  5002               	movf	(?___awdiv+1)^0,w,c
  2616  003018  5BCA               	subwfb	(??_main_loop+3)& (0+255),f,b
  2617  00301A  51C7               	movf	??_main_loop& (0+255),w,b
  2618  00301C  27C9               	addwf	(??_main_loop+2)& (0+255),f,b
  2619  00301E  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2620  003020  23CA               	addwfc	(??_main_loop+3)& (0+255),f,b
  2621  003022  BFCA               	btfsc	(??_main_loop+3)& (0+255),7,b
  2622  003024  D005               	goto	u7940
  2623  003026  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2624  003028  E109               	bnz	l6120
  2625  00302A  05C9               	decf	(??_main_loop+2)& (0+255),w,b
  2626  00302C  B0D8               	btfsc	status,0,c
  2627  00302E  D006               	goto	l6120
  2628  003030                     u7940:
  2629                           
  2630                           ; BSR set to: 0
  2631  003030  0E00               	movlw	0
  2632  003032  0104               	movlb	4	; () banked
  2633  003034  6F45               	movwf	(main_loop@pos+1)& (0+255),b
  2634  003036  0E00               	movlw	0
  2635  003038  6F44               	movwf	main_loop@pos& (0+255),b
  2636  00303A  D01F               	goto	l6122
  2637  00303C                     l6120:
  2638                           
  2639                           ; BSR set to: 0
  2640  00303C  0061  F110  F001   	movff	main_loop@pos,___awdiv@dividend
  2641  003042  0061  F114  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2642  003048  0E00               	movlw	0
  2643  00304A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2644  00304C  0E46               	movlw	70
  2645  00304E  6E03               	movwf	___awdiv@divisor^0,c
  2646  003050  ECD8  F02D         	call	___awdiv	;wreg free
  2647  003054  0061  F110  F0C7   	movff	main_loop@pos,??_main_loop
  2648  00305A  0061  F114  F0C8   	movff	main_loop@pos+1,??_main_loop+1
  2649  003060  5001               	movf	?___awdiv^0,w,c
  2650  003062  5FC7               	subwf	??_main_loop& (0+255),f,b
  2651  003064  5002               	movf	(?___awdiv+1)^0,w,c
  2652  003066  5BC8               	subwfb	(??_main_loop+1)& (0+255),f,b
  2653  003068  0EFF               	movlw	255
  2654  00306A  25C7               	addwf	??_main_loop& (0+255),w,b
  2655  00306C  0104               	movlb	4	; () banked
  2656  00306E  6F44               	movwf	main_loop@pos& (0+255),b
  2657  003070  0EFF               	movlw	255
  2658  003072  0100               	movlb	0	; () banked
  2659  003074  21C8               	addwfc	(??_main_loop+1)& (0+255),w,b
  2660  003076  0104               	movlb	4	; () banked
  2661  003078  6F45               	movwf	(main_loop@pos+1)& (0+255),b
  2662  00307A                     l6122:
  2663                           
  2664                           ; BSR set to: 4
  2665                           ;main.c: 188:         sum = 0;
  2666  00307A  0E00               	movlw	0
  2667  00307C  6F34               	movwf	main_loop@sum& (0+255),b
  2668  00307E  0E00               	movlw	0
  2669  003080  6F35               	movwf	(main_loop@sum+1)& (0+255),b
  2670  003082  0E00               	movlw	0
  2671  003084  6F36               	movwf	(main_loop@sum+2)& (0+255),b
  2672  003086  0E00               	movlw	0
  2673  003088  6F37               	movwf	(main_loop@sum+3)& (0+255),b
  2674                           
  2675                           ; BSR set to: 4
  2676                           ;main.c: 190:         lastSum -= last[(counter / 50) % 20];
  2677  00308A  0E32               	movlw	50
  2678  00308C  6E05               	movwf	___lldiv@divisor^0,c
  2679  00308E  0E00               	movlw	0
  2680  003090  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2681  003092  0E00               	movlw	0
  2682  003094  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2683  003096  0E00               	movlw	0
  2684  003098  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2685  00309A  0061  F0E0  F001   	movff	main_loop@counter,___lldiv@dividend
  2686  0030A0  0061  F0E4  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2687  0030A6  0061  F0E8  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2688  0030AC  0061  F0EC  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2689  0030B2  EC93  F02D         	call	___lldiv	;wreg free
  2690  0030B6  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2691  0030BC  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2692  0030C2  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2693  0030C8  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2694  0030CE  0E14               	movlw	20
  2695  0030D0  6E12               	movwf	___llmod@divisor^0,c
  2696  0030D2  0E00               	movlw	0
  2697  0030D4  6E13               	movwf	(___llmod@divisor+1)^0,c
  2698  0030D6  0E00               	movlw	0
  2699  0030D8  6E14               	movwf	(___llmod@divisor+2)^0,c
  2700  0030DA  0E00               	movlw	0
  2701  0030DC  6E15               	movwf	(___llmod@divisor+3)^0,c
  2702  0030DE  EC49  F02F         	call	___llmod	;wreg free
  2703  0030E2  90D8               	bcf	status,0,c
  2704  0030E4  360E               	rlcf	?___llmod^0,f,c
  2705  0030E6  360F               	rlcf	(?___llmod+1)^0,f,c
  2706  0030E8  0E00               	movlw	low main_loop@last
  2707  0030EA  240E               	addwf	?___llmod^0,w,c
  2708  0030EC  6ED9               	movwf	fsr2l,c
  2709  0030EE  0E04               	movlw	high main_loop@last
  2710  0030F0  200F               	addwfc	(?___llmod+1)^0,w,c
  2711  0030F2  6EDA               	movwf	fsr2h,c
  2712  0030F4  006F FF78  F0C7    	movff	postinc2,??_main_loop
  2713  0030FA  006F FF74  F0C8    	movff	postdec2,??_main_loop+1
  2714  003100  0100               	movlb	0	; () banked
  2715  003102  51C7               	movf	??_main_loop& (0+255),w,b
  2716  003104  6FC9               	movwf	(??_main_loop+2)& (0+255),b
  2717  003106  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  2718  003108  6FCA               	movwf	(??_main_loop+3)& (0+255),b
  2719  00310A  6BCB               	clrf	(??_main_loop+4)& (0+255),b
  2720  00310C  6BCC               	clrf	(??_main_loop+5)& (0+255),b
  2721  00310E  51C9               	movf	(??_main_loop+2)& (0+255),w,b
  2722  003110  0104               	movlb	4	; () banked
  2723  003112  5F30               	subwf	main_loop@lastSum& (0+255),f,b
  2724  003114  0100               	movlb	0	; () banked
  2725  003116  51CA               	movf	(??_main_loop+3)& (0+255),w,b
  2726  003118  0104               	movlb	4	; () banked
  2727  00311A  5B31               	subwfb	(main_loop@lastSum+1)& (0+255),f,b
  2728  00311C  0100               	movlb	0	; () banked
  2729  00311E  51CB               	movf	(??_main_loop+4)& (0+255),w,b
  2730  003120  0104               	movlb	4	; () banked
  2731  003122  5B32               	subwfb	(main_loop@lastSum+2)& (0+255),f,b
  2732  003124  0100               	movlb	0	; () banked
  2733  003126  51CC               	movf	(??_main_loop+5)& (0+255),w,b
  2734  003128  0104               	movlb	4	; () banked
  2735  00312A  5B33               	subwfb	(main_loop@lastSum+3)& (0+255),f,b
  2736                           
  2737                           ; BSR set to: 4
  2738                           ;main.c: 191:         lastSum += sample;
  2739  00312C  0100               	movlb	0	; () banked
  2740  00312E  51F8               	movf	main_loop@sample& (0+255),w,b
  2741  003130  0104               	movlb	4	; () banked
  2742  003132  2730               	addwf	main_loop@lastSum& (0+255),f,b
  2743  003134  0100               	movlb	0	; () banked
  2744  003136  51F9               	movf	(main_loop@sample+1)& (0+255),w,b
  2745  003138  0104               	movlb	4	; () banked
  2746  00313A  2331               	addwfc	(main_loop@lastSum+1)& (0+255),f,b
  2747  00313C  0100               	movlb	0	; () banked
  2748  00313E  51FA               	movf	(main_loop@sample+2)& (0+255),w,b
  2749  003140  0104               	movlb	4	; () banked
  2750  003142  2332               	addwfc	(main_loop@lastSum+2)& (0+255),f,b
  2751  003144  0100               	movlb	0	; () banked
  2752  003146  51FB               	movf	(main_loop@sample+3)& (0+255),w,b
  2753  003148  0104               	movlb	4	; () banked
  2754  00314A  2333               	addwfc	(main_loop@lastSum+3)& (0+255),f,b
  2755                           
  2756                           ; BSR set to: 4
  2757                           ;main.c: 192:         last[(counter / 50) % 20] = sample;
  2758  00314C  0E32               	movlw	50
  2759  00314E  6E05               	movwf	___lldiv@divisor^0,c
  2760  003150  0E00               	movlw	0
  2761  003152  6E06               	movwf	(___lldiv@divisor+1)^0,c
  2762  003154  0E00               	movlw	0
  2763  003156  6E07               	movwf	(___lldiv@divisor+2)^0,c
  2764  003158  0E00               	movlw	0
  2765  00315A  6E08               	movwf	(___lldiv@divisor+3)^0,c
  2766  00315C  0061  F0E0  F001   	movff	main_loop@counter,___lldiv@dividend
  2767  003162  0061  F0E4  F002   	movff	main_loop@counter+1,___lldiv@dividend+1
  2768  003168  0061  F0E8  F003   	movff	main_loop@counter+2,___lldiv@dividend+2
  2769  00316E  0061  F0EC  F004   	movff	main_loop@counter+3,___lldiv@dividend+3
  2770  003174  EC93  F02D         	call	___lldiv	;wreg free
  2771  003178  0060  F004  F00E   	movff	?___lldiv,___llmod@dividend
  2772  00317E  0060  F008  F00F   	movff	?___lldiv+1,___llmod@dividend+1
  2773  003184  0060  F00C  F010   	movff	?___lldiv+2,___llmod@dividend+2
  2774  00318A  0060  F010  F011   	movff	?___lldiv+3,___llmod@dividend+3
  2775  003190  0E14               	movlw	20
  2776  003192  6E12               	movwf	___llmod@divisor^0,c
  2777  003194  0E00               	movlw	0
  2778  003196  6E13               	movwf	(___llmod@divisor+1)^0,c
  2779  003198  0E00               	movlw	0
  2780  00319A  6E14               	movwf	(___llmod@divisor+2)^0,c
  2781  00319C  0E00               	movlw	0
  2782  00319E  6E15               	movwf	(___llmod@divisor+3)^0,c
  2783  0031A0  EC49  F02F         	call	___llmod	;wreg free
  2784  0031A4  90D8               	bcf	status,0,c
  2785  0031A6  360E               	rlcf	?___llmod^0,f,c
  2786  0031A8  360F               	rlcf	(?___llmod+1)^0,f,c
  2787  0031AA  0E00               	movlw	low main_loop@last
  2788  0031AC  240E               	addwf	?___llmod^0,w,c
  2789  0031AE  6ED9               	movwf	fsr2l,c
  2790  0031B0  0E04               	movlw	high main_loop@last
  2791  0031B2  200F               	addwfc	(?___llmod+1)^0,w,c
  2792  0031B4  6EDA               	movwf	fsr2h,c
  2793  0031B6  0060  F3E3  FFDE   	movff	main_loop@sample,postinc2
  2794  0031BC  0060  F3E7  FFDD   	movff	main_loop@sample+1,postdec2
  2795                           
  2796                           ;main.c: 194:         updateButtonLight(counter);
  2797  0031C2  0061  F0E0  F01B   	movff	main_loop@counter,updateButtonLight@step
  2798  0031C8  0061  F0E4  F01C   	movff	main_loop@counter+1,updateButtonLight@step+1
  2799  0031CE  0061  F0E8  F01D   	movff	main_loop@counter+2,updateButtonLight@step+2
  2800  0031D4  0061  F0EC  F01E   	movff	main_loop@counter+3,updateButtonLight@step+3
  2801  0031DA  EC10  F02A         	call	_updateButtonLight	;wreg free
  2802  0031DE                     l6132:
  2803                           
  2804                           ;main.c: 197:     if (counter % 1000 == 999) {
  2805  0031DE  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  2806  0031E4  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2807  0031EA  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2808  0031F0  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2809  0031F6  0EE8               	movlw	232
  2810  0031F8  6E12               	movwf	___llmod@divisor^0,c
  2811  0031FA  0E03               	movlw	3
  2812  0031FC  6E13               	movwf	(___llmod@divisor+1)^0,c
  2813  0031FE  0E00               	movlw	0
  2814  003200  6E14               	movwf	(___llmod@divisor+2)^0,c
  2815  003202  0E00               	movlw	0
  2816  003204  6E15               	movwf	(___llmod@divisor+3)^0,c
  2817  003206  EC49  F02F         	call	___llmod	;wreg free
  2818  00320A  0EE7               	movlw	231
  2819  00320C  180E               	xorwf	?___llmod^0,w,c
  2820  00320E  E137               	bnz	l6154
  2821  003210  0E03               	movlw	3
  2822  003212  180F               	xorwf	(?___llmod+1)^0,w,c
  2823  003214  1010               	iorwf	(?___llmod+2)^0,w,c
  2824  003216  1011               	iorwf	(?___llmod+3)^0,w,c
  2825  003218  A4D8               	btfss	status,2,c
  2826  00321A  D031               	goto	l6154
  2827                           
  2828                           ;main.c: 198:         PORTCbits.RC0 = !PORTCbits.RC1;
  2829  00321C  B2CC               	btfsc	204,1,c	;volatile
  2830  00321E  D004               	goto	u7960
  2831  003220  0100               	movlb	0	; () banked
  2832  003222  6BC7               	clrf	??_main_loop& (0+255),b
  2833  003224  2BC7               	incf	??_main_loop& (0+255),f,b
  2834  003226  D002               	goto	u7978
  2835  003228                     u7960:
  2836  003228  0100               	movlb	0	; () banked
  2837  00322A  6BC7               	clrf	??_main_loop& (0+255),b
  2838  00322C                     u7978:
  2839  00322C  50CC               	movf	204,w,c	;volatile
  2840  00322E  19C7               	xorwf	??_main_loop& (0+255),w,b
  2841  003230  0BFE               	andlw	-2
  2842  003232  19C7               	xorwf	??_main_loop& (0+255),w,b
  2843  003234  6ECC               	movwf	204,c	;volatile
  2844                           
  2845                           ; BSR set to: 0
  2846                           ;main.c: 200:         ADPCH = 0b010110;
  2847  003236  0E16               	movlw	22
  2848  003238  013E               	movlb	62	; () banked
  2849  00323A  6FF1               	movwf	241,b	;volatile
  2850                           
  2851                           ; BSR set to: 62
  2852                           ;main.c: 201:         ADCON0bits.FM = 0;
  2853  00323C  0EF3               	movlw	-13
  2854  00323E  17F8               	andwf	248,f,b	;volatile
  2855                           
  2856                           ; BSR set to: 62
  2857                           ;main.c: 202:         ADCON0bits.GO = 1;
  2858  003240  81F8               	bsf	248,0,b	;volatile
  2859                           
  2860                           ;main.c: 203:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  2861  003242  D004               	goto	l6144
  2862  003244                     l6142:
  2863                           
  2864                           ; BSR set to: 62
  2865  003244  0E05               	movlw	5
  2866  003246                     u8187:
  2867  003246  2EE8               	decfsz	wreg,f,c
  2868  003248  D7FE               	bra	u8187
  2869  00324A  F000               	nop	
  2870  00324C                     l6144:
  2871  00324C  013E               	movlb	62	; () banked
  2872  00324E  B1F8               	btfsc	248,0,b	;volatile
  2873  003250  D7F9               	goto	l6142
  2874                           
  2875                           ; BSR set to: 62
  2876                           ;main.c: 204:         ledBrightness = ADRESH / 4;
  2877  003252  006F FBC0  F0C7    	movff	16112,??_main_loop	;volatile
  2878  003258  0100               	movlb	0	; () banked
  2879  00325A  90D8               	bcf	status,0,c
  2880  00325C  33C7               	rrcf	??_main_loop& (0+255),f,b
  2881  00325E  90D8               	bcf	status,0,c
  2882  003260  33C7               	rrcf	??_main_loop& (0+255),f,b
  2883  003262  51C7               	movf	??_main_loop& (0+255),w,b
  2884  003264  0104               	movlb	4	; () banked
  2885  003266  6F9C               	movwf	_ledBrightness& (0+255),b
  2886  003268  6B9D               	clrf	(_ledBrightness+1)& (0+255),b
  2887  00326A  6B9E               	clrf	(_ledBrightness+2)& (0+255),b
  2888  00326C  6B9F               	clrf	(_ledBrightness+3)& (0+255),b
  2889                           
  2890                           ; BSR set to: 4
  2891                           ;main.c: 205:         ADCON0bits.FM = 1;
  2892  00326E  013E               	movlb	62	; () banked
  2893  003270  51F8               	movf	248,w,b	;volatile
  2894  003272  0BF3               	andlw	-13
  2895  003274  0904               	iorlw	4
  2896  003276  6FF8               	movwf	248,b	;volatile
  2897                           
  2898                           ; BSR set to: 62
  2899                           ;main.c: 207:         if (!PORTCbits.RC2 || !PORTCbits.RC3) LATC4 = 1;
  2900  003278  B4CC               	btfsc	204,2,c	;volatile
  2901                           
  2902                           ; BSR set to: 62
  2903  00327A  A6CC               	btfss	204,3,c	;volatile
  2904                           
  2905                           ; BSR set to: 62
  2906  00327C  88BC               	bsf	16316,4,c	;volatile
  2907  00327E                     l6154:
  2908                           
  2909                           ;main.c: 215:     if (counter % 10000 == 9999) {
  2910  00327E  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  2911  003284  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  2912  00328A  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  2913  003290  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  2914  003296  0E10               	movlw	16
  2915  003298  6E12               	movwf	___llmod@divisor^0,c
  2916  00329A  0E27               	movlw	39
  2917  00329C  6E13               	movwf	(___llmod@divisor+1)^0,c
  2918  00329E  0E00               	movlw	0
  2919  0032A0  6E14               	movwf	(___llmod@divisor+2)^0,c
  2920  0032A2  0E00               	movlw	0
  2921  0032A4  6E15               	movwf	(___llmod@divisor+3)^0,c
  2922  0032A6  EC49  F02F         	call	___llmod	;wreg free
  2923  0032AA  0E0F               	movlw	15
  2924  0032AC  180E               	xorwf	?___llmod^0,w,c
  2925  0032AE  E14C               	bnz	l6178
  2926  0032B0  0E27               	movlw	39
  2927  0032B2  180F               	xorwf	(?___llmod+1)^0,w,c
  2928  0032B4  1010               	iorwf	(?___llmod+2)^0,w,c
  2929  0032B6  1011               	iorwf	(?___llmod+3)^0,w,c
  2930  0032B8  A4D8               	btfss	status,2,c
  2931  0032BA  D046               	goto	l6178
  2932                           
  2933                           ;main.c: 216:         uart_send(volCheckCmd, 3);
  2934  0032BC  0E21               	movlw	low _volCheckCmd
  2935  0032BE  6E0C               	movwf	uart_send@buf^0,c
  2936  0032C0  500C               	movf	uart_send@buf^0,w,c
  2937  0032C2  A4D8               	btfss	status,2,c
  2938  0032C4  0E20               	movlw	high __smallconst
  2939  0032C6  6E0D               	movwf	(uart_send@buf+1)^0,c
  2940  0032C8  0E03               	movlw	3
  2941  0032CA  6E0E               	movwf	uart_send@len^0,c
  2942  0032CC  EC9B  F02E         	call	_uart_send	;wreg free
  2943                           
  2944                           ; BSR set to: 59
  2945                           ;main.c: 218:         lcd_set_data_addr(0x40);
  2946  0032D0  0E40               	movlw	64
  2947  0032D2  EC85  F031         	call	_lcd_set_data_addr
  2948                           
  2949                           ;main.c: 219:         if (LATC4) lcd_print("AMPLIFIER FAULT!");
  2950  0032D6  A8BC               	btfss	16316,4,c	;volatile
  2951  0032D8  D009               	goto	l6164
  2952  0032DA  0ECB               	movlw	low STR_1
  2953  0032DC  6E05               	movwf	lcd_print@string^0,c
  2954  0032DE  5005               	movf	lcd_print@string^0,w,c
  2955  0032E0  A4D8               	btfss	status,2,c
  2956  0032E2  0E20               	movlw	high __smallconst
  2957  0032E4  6E06               	movwf	(lcd_print@string+1)^0,c
  2958  0032E6  EC07  F02D         	call	_lcd_print	;wreg free
  2959  0032EA  D057               	goto	l6182
  2960  0032EC                     l6164:
  2961  0032EC  0104               	movlb	4	; () banked
  2962  0032EE  514A               	movf	_pairing& (0+255),w,b
  2963  0032F0  B4D8               	btfsc	status,2,c
  2964  0032F2  D009               	goto	l6168
  2965                           
  2966                           ; BSR set to: 4
  2967  0032F4  0E87               	movlw	low STR_2
  2968  0032F6  6E05               	movwf	lcd_print@string^0,c
  2969  0032F8  5005               	movf	lcd_print@string^0,w,c
  2970  0032FA  A4D8               	btfss	status,2,c
  2971  0032FC  0E20               	movlw	high __smallconst
  2972  0032FE  6E06               	movwf	(lcd_print@string+1)^0,c
  2973  003300  EC07  F02D         	call	_lcd_print	;wreg free
  2974  003304  D04A               	goto	l6182
  2975  003306                     l6168:
  2976                           
  2977                           ; BSR set to: 4
  2978  003306  5148               	movf	_connected& (0+255),w,b
  2979  003308  B4D8               	btfsc	status,2,c
  2980  00330A  D009               	goto	l6172
  2981                           
  2982                           ; BSR set to: 4
  2983  00330C  0E98               	movlw	low STR_3
  2984  00330E  6E05               	movwf	lcd_print@string^0,c
  2985  003310  5005               	movf	lcd_print@string^0,w,c
  2986  003312  A4D8               	btfss	status,2,c
  2987  003314  0E20               	movlw	high __smallconst
  2988  003316  6E06               	movwf	(lcd_print@string+1)^0,c
  2989  003318  EC07  F02D         	call	_lcd_print	;wreg free
  2990  00331C  D03E               	goto	l6182
  2991  00331E                     l6172:
  2992                           
  2993                           ; BSR set to: 4
  2994  00331E  5147               	movf	_on& (0+255),w,b
  2995  003320  B4D8               	btfsc	status,2,c
  2996  003322  D009               	goto	l6176
  2997                           
  2998                           ; BSR set to: 4
  2999  003324  0EBA               	movlw	low STR_4
  3000  003326  6E05               	movwf	lcd_print@string^0,c
  3001  003328  5005               	movf	lcd_print@string^0,w,c
  3002  00332A  A4D8               	btfss	status,2,c
  3003  00332C  0E20               	movlw	high __smallconst
  3004  00332E  6E06               	movwf	(lcd_print@string+1)^0,c
  3005  003330  EC07  F02D         	call	_lcd_print	;wreg free
  3006  003334  D032               	goto	l6182
  3007  003336                     l6176:
  3008                           
  3009                           ; BSR set to: 4
  3010  003336  0E76               	movlw	low STR_5
  3011  003338  6E05               	movwf	lcd_print@string^0,c
  3012  00333A  5005               	movf	lcd_print@string^0,w,c
  3013  00333C  A4D8               	btfss	status,2,c
  3014  00333E  0E20               	movlw	high __smallconst
  3015  003340  6E06               	movwf	(lcd_print@string+1)^0,c
  3016  003342  EC07  F02D         	call	_lcd_print	;wreg free
  3017  003346  D029               	goto	l6182
  3018  003348                     l6178:
  3019  003348  0061  F0E0  F00E   	movff	main_loop@counter,___llmod@dividend
  3020  00334E  0061  F0E4  F00F   	movff	main_loop@counter+1,___llmod@dividend+1
  3021  003354  0061  F0E8  F010   	movff	main_loop@counter+2,___llmod@dividend+2
  3022  00335A  0061  F0EC  F011   	movff	main_loop@counter+3,___llmod@dividend+3
  3023  003360  0E10               	movlw	16
  3024  003362  6E12               	movwf	___llmod@divisor^0,c
  3025  003364  0E27               	movlw	39
  3026  003366  6E13               	movwf	(___llmod@divisor+1)^0,c
  3027  003368  0E00               	movlw	0
  3028  00336A  6E14               	movwf	(___llmod@divisor+2)^0,c
  3029  00336C  0E00               	movlw	0
  3030  00336E  6E15               	movwf	(___llmod@divisor+3)^0,c
  3031  003370  EC49  F02F         	call	___llmod	;wreg free
  3032  003374  0E87               	movlw	135
  3033  003376  180E               	xorwf	?___llmod^0,w,c
  3034  003378  E110               	bnz	l6182
  3035  00337A  0E13               	movlw	19
  3036  00337C  180F               	xorwf	(?___llmod+1)^0,w,c
  3037  00337E  1010               	iorwf	(?___llmod+2)^0,w,c
  3038  003380  1011               	iorwf	(?___llmod+3)^0,w,c
  3039  003382  A4D8               	btfss	status,2,c
  3040  003384  D00A               	goto	l6182
  3041                           
  3042                           ;main.c: 225:         uart_send(stateCheckCmd, 2);
  3043  003386  0E24               	movlw	low _stateCheckCmd
  3044  003388  6E0C               	movwf	uart_send@buf^0,c
  3045  00338A  500C               	movf	uart_send@buf^0,w,c
  3046  00338C  A4D8               	btfss	status,2,c
  3047  00338E  0E20               	movlw	high __smallconst
  3048  003390  6E0D               	movwf	(uart_send@buf+1)^0,c
  3049  003392  0E02               	movlw	2
  3050  003394  6E0E               	movwf	uart_send@len^0,c
  3051  003396  EC9B  F02E         	call	_uart_send	;wreg free
  3052  00339A                     l6182:
  3053                           
  3054                           ;main.c: 228:     if (++counter >= 100000) {
  3055  00339A  0E01               	movlw	1
  3056  00339C  0104               	movlb	4	; () banked
  3057  00339E  2738               	addwf	main_loop@counter& (0+255),f,b
  3058  0033A0  0E00               	movlw	0
  3059  0033A2  2339               	addwfc	(main_loop@counter+1)& (0+255),f,b
  3060  0033A4  233A               	addwfc	(main_loop@counter+2)& (0+255),f,b
  3061  0033A6  233B               	addwfc	(main_loop@counter+3)& (0+255),f,b
  3062  0033A8  513B               	movf	(main_loop@counter+3)& (0+255),w,b
  3063  0033AA  E108               	bnz	u8070
  3064  0033AC  0EA0               	movlw	160
  3065  0033AE  5D38               	subwf	main_loop@counter& (0+255),w,b
  3066  0033B0  0E86               	movlw	134
  3067  0033B2  5939               	subwfb	(main_loop@counter+1)& (0+255),w,b
  3068  0033B4  0E01               	movlw	1
  3069  0033B6  593A               	subwfb	(main_loop@counter+2)& (0+255),w,b
  3070  0033B8  A0D8               	btfss	status,0,c
  3071  0033BA  D153               	goto	l6230
  3072  0033BC                     u8070:
  3073                           
  3074                           ; BSR set to: 4
  3075                           ;main.c: 229:         ADPCH = 0b011011;
  3076  0033BC  0E1B               	movlw	27
  3077  0033BE  013E               	movlb	62	; () banked
  3078  0033C0  6FF1               	movwf	241,b	;volatile
  3079                           
  3080                           ; BSR set to: 62
  3081                           ;main.c: 230:         ADCON0bits.GO = 1;
  3082  0033C2  81F8               	bsf	248,0,b	;volatile
  3083                           
  3084                           ;main.c: 231:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  3085  0033C4  D004               	goto	l6190
  3086  0033C6                     l6188:
  3087                           
  3088                           ; BSR set to: 62
  3089  0033C6  0E05               	movlw	5
  3090  0033C8                     u8197:
  3091  0033C8  2EE8               	decfsz	wreg,f,c
  3092  0033CA  D7FE               	bra	u8197
  3093  0033CC  F000               	nop	
  3094  0033CE                     l6190:
  3095  0033CE  013E               	movlb	62	; () banked
  3096  0033D0  B1F8               	btfsc	248,0,b	;volatile
  3097  0033D2  D7F9               	goto	l6188
  3098                           
  3099                           ; BSR set to: 62
  3100                           ;main.c: 232:         uint16_t batlvl = ((ADRESH << 8) | ADRESL);
  3101  0033D4  51EF               	movf	239,w,b	;volatile
  3102  0033D6  006F FBC0  F0C7    	movff	16112,??_main_loop	;volatile
  3103  0033DC  0100               	movlb	0	; () banked
  3104  0033DE  6BC8               	clrf	(??_main_loop+1)& (0+255),b
  3105  0033E0  0060  F31C  F0C8   	movff	??_main_loop,??_main_loop+1
  3106  0033E6  6BC7               	clrf	??_main_loop& (0+255),b
  3107  0033E8  11C7               	iorwf	??_main_loop& (0+255),w,b
  3108  0033EA  6FF4               	movwf	main_loop@batlvl& (0+255),b
  3109  0033EC  51C8               	movf	(??_main_loop+1)& (0+255),w,b
  3110  0033EE  6FF5               	movwf	(main_loop@batlvl+1)& (0+255),b
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;main.c: 233:         char batmsg[17];;main.c: 234:         if (batlvl < 2090.0f - 100) 
      +                          {
  3114  0033F0  0060  F3D0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3115  0033F6  0060  F3D4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3116  0033FC  6A03               	clrf	(___xxtofl@val+2)^0,c
  3117  0033FE  6A04               	clrf	(___xxtofl@val+3)^0,c
  3118  003400  0E00               	movlw	0
  3119  003402  EC65  F028         	call	___xxtofl
  3120  003406  0060  F004  F051   	movff	?___xxtofl,___flge@ff1
  3121  00340C  0060  F008  F052   	movff	?___xxtofl+1,___flge@ff1+1
  3122  003412  0060  F00C  F053   	movff	?___xxtofl+2,___flge@ff1+2
  3123  003418  0060  F010  F054   	movff	?___xxtofl+3,___flge@ff1+3
  3124  00341E  0E00               	movlw	0
  3125  003420  6E55               	movwf	___flge@ff2^0,c
  3126  003422  0EC0               	movlw	192
  3127  003424  6E56               	movwf	(___flge@ff2+1)^0,c
  3128  003426  0EF8               	movlw	248
  3129  003428  6E57               	movwf	(___flge@ff2+2)^0,c
  3130  00342A  0E44               	movlw	68
  3131  00342C  6E58               	movwf	(___flge@ff2+3)^0,c
  3132  00342E  ECED  F02A         	call	___flge	;wreg free
  3133  003432  B0D8               	btfsc	status,0,c
  3134  003434  D011               	goto	l6200
  3135                           
  3136                           ;main.c: 235:             bat_percent = 100.0f;
  3137  003436  0E00               	movlw	0
  3138  003438  0104               	movlb	4	; () banked
  3139  00343A  6FA0               	movwf	_bat_percent& (0+255),b
  3140  00343C  0E00               	movlw	0
  3141  00343E  6FA1               	movwf	(_bat_percent+1)& (0+255),b
  3142  003440  0EC8               	movlw	200
  3143  003442  6FA2               	movwf	(_bat_percent+2)& (0+255),b
  3144  003444  0E42               	movlw	66
  3145  003446  6FA3               	movwf	(_bat_percent+3)& (0+255),b
  3146                           
  3147                           ; BSR set to: 4
  3148                           ;main.c: 236:             sprintf(batmsg, "No Battery      ");
  3149  003448  0ECD               	movlw	low main_loop@batmsg
  3150  00344A  0100               	movlb	0	; () banked
  3151  00344C  6FB9               	movwf	sprintf@s& (0+255),b
  3152  00344E  0EA9               	movlw	low STR_6
  3153  003450  6FBA               	movwf	sprintf@fmt& (0+255),b
  3154  003452  ECB2  F030         	call	_sprintf	;wreg free
  3155                           
  3156                           ;main.c: 237:         } else {
  3157  003456  D0F4               	goto	l6224
  3158  003458                     l6200:
  3159                           
  3160                           ;main.c: 238:             bat_percent = (batlvl - 2090.0f) / (2996.0f - 2090.0f) * 100.0
      +                          f;
  3161  003458  0E00               	movlw	0
  3162  00345A  6E23               	movwf	___fldiv@a^0,c
  3163  00345C  0E80               	movlw	128
  3164  00345E  6E24               	movwf	(___fldiv@a+1)^0,c
  3165  003460  0E62               	movlw	98
  3166  003462  6E25               	movwf	(___fldiv@a+2)^0,c
  3167  003464  0E44               	movlw	68
  3168  003466  6E26               	movwf	(___fldiv@a+3)^0,c
  3169  003468  0E00               	movlw	0
  3170  00346A  6E13               	movwf	___fladd@a^0,c
  3171  00346C  0EA0               	movlw	160
  3172  00346E  6E14               	movwf	(___fladd@a+1)^0,c
  3173  003470  0E02               	movlw	2
  3174  003472  6E15               	movwf	(___fladd@a+2)^0,c
  3175  003474  0EC5               	movlw	197
  3176  003476  6E16               	movwf	(___fladd@a+3)^0,c
  3177  003478  0060  F3D0  F001   	movff	main_loop@batlvl,___xxtofl@val
  3178  00347E  0060  F3D4  F002   	movff	main_loop@batlvl+1,___xxtofl@val+1
  3179  003484  6A03               	clrf	(___xxtofl@val+2)^0,c
  3180  003486  6A04               	clrf	(___xxtofl@val+3)^0,c
  3181  003488  0E00               	movlw	0
  3182  00348A  EC65  F028         	call	___xxtofl
  3183  00348E  0060  F004  F00F   	movff	?___xxtofl,___fladd@b
  3184  003494  0060  F008  F010   	movff	?___xxtofl+1,___fladd@b+1
  3185  00349A  0060  F00C  F011   	movff	?___xxtofl+2,___fladd@b+2
  3186  0034A0  0060  F010  F012   	movff	?___xxtofl+3,___fladd@b+3
  3187  0034A6  EC52  F022         	call	___fladd	;wreg free
  3188  0034AA  0060  F03C  F01F   	movff	?___fladd,___fldiv@b
  3189  0034B0  0060  F040  F020   	movff	?___fladd+1,___fldiv@b+1
  3190  0034B6  0060  F044  F021   	movff	?___fladd+2,___fldiv@b+2
  3191  0034BC  0060  F048  F022   	movff	?___fladd+3,___fldiv@b+3
  3192  0034C2  ECF6  F023         	call	___fldiv	;wreg free
  3193  0034C6  0060  F07C  F038   	movff	?___fldiv,___flmul@b
  3194  0034CC  0060  F080  F039   	movff	?___fldiv+1,___flmul@b+1
  3195  0034D2  0060  F084  F03A   	movff	?___fldiv+2,___flmul@b+2
  3196  0034D8  0060  F088  F03B   	movff	?___fldiv+3,___flmul@b+3
  3197  0034DE  0E00               	movlw	0
  3198  0034E0  6E3C               	movwf	___flmul@a^0,c
  3199  0034E2  0E00               	movlw	0
  3200  0034E4  6E3D               	movwf	(___flmul@a+1)^0,c
  3201  0034E6  0EC8               	movlw	200
  3202  0034E8  6E3E               	movwf	(___flmul@a+2)^0,c
  3203  0034EA  0E42               	movlw	66
  3204  0034EC  6E3F               	movwf	(___flmul@a+3)^0,c
  3205  0034EE  EC90  F020         	call	___flmul	;wreg free
  3206  0034F2  0060  F0E0  F4A0   	movff	?___flmul,_bat_percent
  3207  0034F8  0060  F0E4  F4A1   	movff	?___flmul+1,_bat_percent+1
  3208  0034FE  0060  F0E8  F4A2   	movff	?___flmul+2,_bat_percent+2
  3209  003504  0060  F0EC  F4A3   	movff	?___flmul+3,_bat_percent+3
  3210                           
  3211                           ;main.c: 239:             bat_percent = (bat_percent < 0.0f ? 0.0f : (bat_percent > 100.
      +                          0f ? 100.0f : bat_percent));
  3212  00350A  0104               	movlb	4	; () banked
  3213  00350C  BFA3               	btfsc	(_bat_percent+3)& (0+255),7,b
  3214  00350E  D03B               	goto	l6212
  3215                           
  3216                           ; BSR set to: 4
  3217  003510  0E00               	movlw	0
  3218  003512  6E51               	movwf	___flge@ff1^0,c
  3219  003514  0E00               	movlw	0
  3220  003516  6E52               	movwf	(___flge@ff1+1)^0,c
  3221  003518  0EC8               	movlw	200
  3222  00351A  6E53               	movwf	(___flge@ff1+2)^0,c
  3223  00351C  0E42               	movlw	66
  3224  00351E  6E54               	movwf	(___flge@ff1+3)^0,c
  3225  003520  0061  F280  F055   	movff	_bat_percent,___flge@ff2
  3226  003526  0061  F284  F056   	movff	_bat_percent+1,___flge@ff2+1
  3227  00352C  0061  F288  F057   	movff	_bat_percent+2,___flge@ff2+2
  3228  003532  0061  F28C  F058   	movff	_bat_percent+3,___flge@ff2+3
  3229  003538  ECED  F02A         	call	___flge	;wreg free
  3230  00353C  A0D8               	btfss	status,0,c
  3231  00353E  D00D               	goto	l6208
  3232  003540  0061  F280  F0EE   	movff	_bat_percent,_main_loop$338
  3233  003546  0061  F284  F0EF   	movff	_bat_percent+1,_main_loop$338+1
  3234  00354C  0061  F288  F0F0   	movff	_bat_percent+2,_main_loop$338+2
  3235  003552  0061  F28C  F0F1   	movff	_bat_percent+3,_main_loop$338+3
  3236  003558  D009               	goto	l6210
  3237  00355A                     l6208:
  3238  00355A  0E00               	movlw	0
  3239  00355C  0100               	movlb	0	; () banked
  3240  00355E  6FEE               	movwf	_main_loop$338& (0+255),b
  3241  003560  0E00               	movlw	0
  3242  003562  6FEF               	movwf	(_main_loop$338+1)& (0+255),b
  3243  003564  0EC8               	movlw	200
  3244  003566  6FF0               	movwf	(_main_loop$338+2)& (0+255),b
  3245  003568  0E42               	movlw	66
  3246  00356A  6FF1               	movwf	(_main_loop$338+3)& (0+255),b
  3247  00356C                     l6210:
  3248  00356C  0060  F3B8  F4A0   	movff	_main_loop$338,_bat_percent
  3249  003572  0060  F3BC  F4A1   	movff	_main_loop$338+1,_bat_percent+1
  3250  003578  0060  F3C0  F4A2   	movff	_main_loop$338+2,_bat_percent+2
  3251  00357E  0060  F3C4  F4A3   	movff	_main_loop$338+3,_bat_percent+3
  3252  003584  D008               	goto	l6214
  3253  003586                     l6212:
  3254                           
  3255                           ; BSR set to: 4
  3256  003586  0E00               	movlw	0
  3257  003588  6FA0               	movwf	_bat_percent& (0+255),b
  3258  00358A  0E00               	movlw	0
  3259  00358C  6FA1               	movwf	(_bat_percent+1)& (0+255),b
  3260  00358E  0E00               	movlw	0
  3261  003590  6FA2               	movwf	(_bat_percent+2)& (0+255),b
  3262  003592  0E00               	movlw	0
  3263  003594  6FA3               	movwf	(_bat_percent+3)& (0+255),b
  3264  003596                     l6214:
  3265                           
  3266                           ;main.c: 240:             if (!PORTDbits.RD2) sprintf(batmsg, "Chg fault: %3.0f%% ", bat
      +                          _percent);
  3267  003596  B4CD               	btfsc	205,2,c	;volatile
  3268  003598  D014               	goto	l323
  3269  00359A  0ECD               	movlw	low main_loop@batmsg
  3270  00359C  0100               	movlb	0	; () banked
  3271  00359E  6FB9               	movwf	sprintf@s& (0+255),b
  3272  0035A0  0E62               	movlw	low STR_7
  3273  0035A2  6FBA               	movwf	sprintf@fmt& (0+255),b
  3274  0035A4  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3275  0035AA  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3276  0035B0  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3277  0035B6  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3278  0035BC  ECB2  F030         	call	_sprintf	;wreg free
  3279  0035C0  D03F               	goto	l6224
  3280  0035C2                     l323:
  3281  0035C2  B2CD               	btfsc	205,1,c	;volatile
  3282  0035C4  D014               	goto	l325
  3283  0035C6  0ECD               	movlw	low main_loop@batmsg
  3284  0035C8  0100               	movlb	0	; () banked
  3285  0035CA  6FB9               	movwf	sprintf@s& (0+255),b
  3286  0035CC  0E3A               	movlw	low STR_8
  3287  0035CE  6FBA               	movwf	sprintf@fmt& (0+255),b
  3288  0035D0  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3289  0035D6  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3290  0035DC  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3291  0035E2  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3292  0035E8  ECB2  F030         	call	_sprintf	;wreg free
  3293  0035EC  D029               	goto	l6224
  3294  0035EE                     l325:
  3295  0035EE  B0CD               	btfsc	205,0,c	;volatile
  3296  0035F0  D014               	goto	l6222
  3297  0035F2  0ECD               	movlw	low main_loop@batmsg
  3298  0035F4  0100               	movlb	0	; () banked
  3299  0035F6  6FB9               	movwf	sprintf@s& (0+255),b
  3300  0035F8  0E4E               	movlw	low STR_9
  3301  0035FA  6FBA               	movwf	sprintf@fmt& (0+255),b
  3302  0035FC  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3303  003602  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3304  003608  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3305  00360E  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3306  003614  ECB2  F030         	call	_sprintf	;wreg free
  3307  003618  D013               	goto	l6224
  3308  00361A                     l6222:
  3309  00361A  0ECD               	movlw	low main_loop@batmsg
  3310  00361C  0100               	movlb	0	; () banked
  3311  00361E  6FB9               	movwf	sprintf@s& (0+255),b
  3312  003620  0E26               	movlw	low STR_10
  3313  003622  6FBA               	movwf	sprintf@fmt& (0+255),b
  3314  003624  0061  F280  F0BB   	movff	_bat_percent,?_sprintf+2
  3315  00362A  0061  F284  F0BC   	movff	_bat_percent+1,?_sprintf+3
  3316  003630  0061  F288  F0BD   	movff	_bat_percent+2,?_sprintf+4
  3317  003636  0061  F28C  F0BE   	movff	_bat_percent+3,?_sprintf+5
  3318  00363C  ECB2  F030         	call	_sprintf	;wreg free
  3319  003640                     l6224:
  3320                           
  3321                           ; BSR set to: 0
  3322                           ;main.c: 245:         lcd_set_data_addr(0);
  3323  003640  0E00               	movlw	0
  3324  003642  EC85  F031         	call	_lcd_set_data_addr
  3325                           
  3326                           ;main.c: 246:         lcd_print(batmsg);
  3327  003646  0ECD               	movlw	low main_loop@batmsg
  3328  003648  6E05               	movwf	lcd_print@string^0,c
  3329  00364A  6A06               	clrf	(lcd_print@string+1)^0,c
  3330  00364C  EC07  F02D         	call	_lcd_print	;wreg free
  3331                           
  3332                           ;main.c: 248:         counter = 0;
  3333  003650  0E00               	movlw	0
  3334  003652  0104               	movlb	4	; () banked
  3335  003654  6F38               	movwf	main_loop@counter& (0+255),b
  3336  003656  0E00               	movlw	0
  3337  003658  6F39               	movwf	(main_loop@counter+1)& (0+255),b
  3338  00365A  0E00               	movlw	0
  3339  00365C  6F3A               	movwf	(main_loop@counter+2)& (0+255),b
  3340  00365E  0E00               	movlw	0
  3341  003660  6F3B               	movwf	(main_loop@counter+3)& (0+255),b
  3342  003662                     l6230:
  3343                           
  3344                           ; BSR set to: 4
  3345                           ;main.c: 251:     uart_tasks();
  3346  003662  ECB3  F027         	call	_uart_tasks	;wreg free
  3347  003666  0004               	clrwdt		;# 
  3348                           
  3349                           ;main.c: 254:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  3350  003668  0E35               	movlw	53
  3351  00366A                     u8207:
  3352  00366A  2EE8               	decfsz	wreg,f,c
  3353  00366C  D7FE               	bra	u8207
  3354  00366E  F000               	nop	
  3355  003670  0012               	return		;funcret
  3356  003672                     __end_of_main_loop:
  3357                           	opt callstack 0
  3358                           
  3359 ;; *************** function _updateButtonLight *****************
  3360 ;; Defined at:
  3361 ;;		line 93 in file "main.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  step            4   26[COMRAM] long 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;  dch             4   34[COMRAM] long 
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/4
  3372 ;;		On exit  : 3B/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3376 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3377 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3378 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3379 ;;Total ram usage:       12 bytes
  3380 ;; Hardware stack levels used:    1
  3381 ;; Hardware stack levels required when called:    1
  3382 ;; This function calls:
  3383 ;;		___aldiv
  3384 ;; This function is called by:
  3385 ;;		_main_loop
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389                           	psect	text3
  3390  005420                     __ptext3:
  3391                           	opt callstack 0
  3392  005420                     _updateButtonLight:
  3393                           	opt callstack 28
  3394                           
  3395                           ;main.c: 94:     if (!on) {
  3396                           
  3397                           ;incstack = 0
  3398  005420  0104               	movlb	4	; () banked
  3399  005422  5147               	movf	_on& (0+255),w,b
  3400  005424  A4D8               	btfss	status,2,c
  3401  005426  D007               	goto	l5014
  3402                           
  3403                           ; BSR set to: 4
  3404                           ;main.c: 95:         PWM6DCH = 0;
  3405  005428  0E00               	movlw	0
  3406  00542A  6E69               	movwf	105,c	;volatile
  3407                           
  3408                           ;main.c: 96:         PWM6DCL = 0;
  3409  00542C  0E00               	movlw	0
  3410  00542E  6E68               	movwf	104,c	;volatile
  3411                           
  3412                           ; BSR set to: 4
  3413                           ;main.c: 97:         PWM8DCH = 255;
  3414  005430  6861               	setf	97,c	;volatile
  3415  005432                     l5012:
  3416                           
  3417                           ;main.c: 98:         PWM8DCL = 255;
  3418  005432  6860               	setf	96,c	;volatile
  3419                           
  3420                           ;main.c: 99:     } else if (pairing) {
  3421  005434  0012               	return	
  3422  005436                     l5014:
  3423                           
  3424                           ; BSR set to: 4
  3425  005436  514A               	movf	_pairing& (0+255),w,b
  3426  005438  B4D8               	btfsc	status,2,c
  3427  00543A  D060               	goto	l203
  3428                           
  3429                           ; BSR set to: 4
  3430                           ;main.c: 100:         PWM6DCH = 255;
  3431  00543C  6869               	setf	105,c	;volatile
  3432                           
  3433                           ;main.c: 101:         PWM6DCL = 255;
  3434  00543E  6868               	setf	104,c	;volatile
  3435                           
  3436                           ; BSR set to: 4
  3437                           ;main.c: 103:         if (step % 4096 < 2048) dch = (step % 2048) / 8;
  3438                           
  3439                           ; BSR set to: 4
  3440  005440  0EFF               	movlw	255
  3441  005442  141B               	andwf	updateButtonLight@step^0,w,c
  3442  005444  6E1F               	movwf	??_updateButtonLight^0,c
  3443  005446  0E0F               	movlw	15
  3444  005448  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3445  00544A  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3446  00544C  0E00               	movlw	0
  3447  00544E  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3448  005450  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3449  005452  0E00               	movlw	0
  3450  005454  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3451  005456  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3452  005458  BE22               	btfsc	(??_updateButtonLight+3)^0,7,c
  3453  00545A  D007               	goto	u6200
  3454  00545C  5022               	movf	(??_updateButtonLight+3)^0,w,c
  3455  00545E  1021               	iorwf	(??_updateButtonLight+2)^0,w,c
  3456  005460  E11B               	bnz	l5024
  3457  005462  0E08               	movlw	8
  3458  005464  5C20               	subwf	(??_updateButtonLight+1)^0,w,c
  3459  005466  B0D8               	btfsc	status,0,c
  3460  005468  D017               	goto	l5024
  3461  00546A                     u6200:
  3462                           
  3463                           ; BSR set to: 4
  3464  00546A  0EFF               	movlw	255
  3465  00546C  141B               	andwf	updateButtonLight@step^0,w,c
  3466  00546E  6E0D               	movwf	___aldiv@dividend^0,c
  3467  005470  0E07               	movlw	7
  3468  005472  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3469  005474  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3470  005476  0E00               	movlw	0
  3471  005478  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3472  00547A  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3473  00547C  0E00               	movlw	0
  3474  00547E  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3475  005480  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3476  005482  0E08               	movlw	8
  3477  005484  6E11               	movwf	___aldiv@divisor^0,c
  3478  005486  0E00               	movlw	0
  3479  005488  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3480  00548A  0E00               	movlw	0
  3481  00548C  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3482  00548E  0E00               	movlw	0
  3483  005490  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3484  005492  EC83  F02A         	call	___aldiv	;wreg free
  3485  005496  D022               	goto	L1
  3486  005498                     l5024:
  3487                           
  3488                           ; BSR set to: 4
  3489  005498  0EFF               	movlw	255
  3490  00549A  141B               	andwf	updateButtonLight@step^0,w,c
  3491  00549C  6E1F               	movwf	??_updateButtonLight^0,c
  3492  00549E  0E07               	movlw	7
  3493  0054A0  141C               	andwf	(updateButtonLight@step+1)^0,w,c
  3494  0054A2  6E20               	movwf	(??_updateButtonLight+1)^0,c
  3495  0054A4  0E00               	movlw	0
  3496  0054A6  141D               	andwf	(updateButtonLight@step+2)^0,w,c
  3497  0054A8  6E21               	movwf	(??_updateButtonLight+2)^0,c
  3498  0054AA  0E00               	movlw	0
  3499  0054AC  141E               	andwf	(updateButtonLight@step+3)^0,w,c
  3500  0054AE  6E22               	movwf	(??_updateButtonLight+3)^0,c
  3501  0054B0  501F               	movf	??_updateButtonLight^0,w,c
  3502  0054B2  0800               	sublw	0
  3503  0054B4  6E0D               	movwf	___aldiv@dividend^0,c
  3504  0054B6  0E08               	movlw	8
  3505  0054B8  5420               	subfwb	(??_updateButtonLight+1)^0,w,c
  3506  0054BA  6E0E               	movwf	(___aldiv@dividend+1)^0,c
  3507  0054BC  0E00               	movlw	0
  3508  0054BE  5421               	subfwb	(??_updateButtonLight+2)^0,w,c
  3509  0054C0  6E0F               	movwf	(___aldiv@dividend+2)^0,c
  3510  0054C2  0E00               	movlw	0
  3511  0054C4  5422               	subfwb	(??_updateButtonLight+3)^0,w,c
  3512  0054C6  6E10               	movwf	(___aldiv@dividend+3)^0,c
  3513  0054C8  0E08               	movlw	8
  3514  0054CA  6E11               	movwf	___aldiv@divisor^0,c
  3515  0054CC  0E00               	movlw	0
  3516  0054CE  6E12               	movwf	(___aldiv@divisor+1)^0,c
  3517  0054D0  0E00               	movlw	0
  3518  0054D2  6E13               	movwf	(___aldiv@divisor+2)^0,c
  3519  0054D4  0E00               	movlw	0
  3520  0054D6  6E14               	movwf	(___aldiv@divisor+3)^0,c
  3521  0054D8  EC83  F02A         	call	___aldiv	;wreg free
  3522  0054DC                     L1:
  3523  0054DC  0060  F034  F023   	movff	?___aldiv,updateButtonLight@dch
  3524  0054E2  0060  F038  F024   	movff	?___aldiv+1,updateButtonLight@dch+1
  3525  0054E8  0060  F03C  F025   	movff	?___aldiv+2,updateButtonLight@dch+2
  3526  0054EE  0060  F040  F026   	movff	?___aldiv+3,updateButtonLight@dch+3
  3527                           
  3528                           ;main.c: 105:         PWM8DCH = dch;
  3529  0054F4  0060  F08F  FF61   	movff	updateButtonLight@dch,16225	;volatile
  3530  0054FA  D79B               	goto	l5012
  3531  0054FC                     l203:
  3532                           
  3533                           ; BSR set to: 4
  3534                           ;main.c: 108:         PWM6DCH = 255;
  3535  0054FC  6869               	setf	105,c	;volatile
  3536                           
  3537                           ;main.c: 109:         PWM6DCL = 255;
  3538  0054FE  6868               	setf	104,c	;volatile
  3539                           
  3540                           ;main.c: 110:         PWM8DCH = 255;
  3541  005500  6861               	setf	97,c	;volatile
  3542                           
  3543                           ;main.c: 111:         PWM8DCL = 255;
  3544  005502  6860               	setf	96,c	;volatile
  3545  005504  0012               	return		;funcret
  3546  005506                     __end_of_updateButtonLight:
  3547                           	opt callstack 0
  3548                           
  3549 ;; *************** function _uart_tasks *****************
  3550 ;; Defined at:
  3551 ;;		line 80 in file "uart.c"
  3552 ;; Parameters:    Size  Location     Type
  3553 ;;		None
  3554 ;; Auto vars:     Size  Location     Type
  3555 ;;  val             1   34[COMRAM] unsigned char 
  3556 ;;  intPos          1   31[COMRAM] unsigned char 
  3557 ;;  bytePos         1   30[COMRAM] unsigned char 
  3558 ;;  posInRawMsg     1   28[COMRAM] unsigned char 
  3559 ;;  message       256    0[BANK3 ] unsigned char [256]
  3560 ;;  zeroByte        1   33[COMRAM] _Bool 
  3561 ;;  msgLen          1   32[COMRAM] unsigned char 
  3562 ;;  i               1   29[COMRAM] unsigned char 
  3563 ;;  msgOffset       1   27[COMRAM] unsigned char 
  3564 ;;  checksum        1   26[COMRAM] unsigned char 
  3565 ;;  rawMsgOffset    1   25[COMRAM] unsigned char 
  3566 ;;  rxLen           1   24[COMRAM] unsigned char 
  3567 ;; Return value:  Size  Location     Type
  3568 ;;                  1    wreg      void 
  3569 ;; Registers used:
  3570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3571 ;; Tracked objects:
  3572 ;;		On entry : 3F/4
  3573 ;;		On exit  : 0/0
  3574 ;;		Unchanged: 0/0
  3575 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3577 ;;      Locals:        11       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;      Totals:        15       0     256       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;Total ram usage:      271 bytes
  3581 ;; Hardware stack levels used:    1
  3582 ;; Hardware stack levels required when called:    3
  3583 ;; This function calls:
  3584 ;;		_handle_message
  3585 ;;		_transmitChecksum
  3586 ;; This function is called by:
  3587 ;;		_main_loop
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text4
  3592  004F66                     __ptext4:
  3593                           	opt callstack 0
  3594  004F66                     _uart_tasks:
  3595                           	opt callstack 26
  3596                           
  3597                           ; BSR set to: 4
  3598                           ;uart.c: 81:     static uint8_t rxPos = 0;;uart.c: 83:     if (DMA2SCNTIF) transmitCheck
      +                          sum();
  3599                           
  3600                           ;incstack = 0
  3601  004F66  0139               	movlb	57	; () banked
  3602  004F68  B5A5               	btfsc	165,2,b	;volatile
  3603                           
  3604                           ; BSR set to: 57
  3605  004F6A  EC90  F031         	call	_transmitChecksum	;wreg free
  3606                           
  3607                           ; BSR set to: 57
  3608                           ;uart.c: 85:     if (DMA1DPTRL == rxPos) return;
  3609  004F6E  0104               	movlb	4	; () banked
  3610  004F70  5146               	movf	uart_tasks@rxPos& (0+255),w,b
  3611  004F72  013B               	movlb	59	; () banked
  3612  004F74  19EC               	xorwf	236,w,b	;volatile
  3613  004F76  B4D8               	btfsc	status,2,c
  3614  004F78  0012               	return	
  3615                           
  3616                           ; BSR set to: 59
  3617                           ;uart.c: 86:     uint8_t rxLen = DMA1DPTRL - rxPos;
  3618  004F7A  0104               	movlb	4	; () banked
  3619  004F7C  5146               	movf	uart_tasks@rxPos& (0+255),w,b
  3620  004F7E  013B               	movlb	59	; () banked
  3621  004F80  5DEC               	subwf	236,w,b	;volatile
  3622  004F82  6E19               	movwf	uart_tasks@rxLen^0,c
  3623                           
  3624                           ; BSR set to: 59
  3625                           ;uart.c: 87:     uint8_t i;;uart.c: 88:     _Bool zeroByte = 0;
  3626  004F84  0E00               	movlw	0
  3627  004F86  6E22               	movwf	uart_tasks@zeroByte^0,c
  3628                           
  3629                           ; BSR set to: 59
  3630                           ;uart.c: 89:     uint8_t msgLen = 0;
  3631  004F88  0E00               	movlw	0
  3632  004F8A  6E21               	movwf	uart_tasks@msgLen^0,c
  3633                           
  3634                           ; BSR set to: 59
  3635                           ;uart.c: 90:     uint8_t checksum = 0;
  3636  004F8C  0E00               	movlw	0
  3637  004F8E  6E1B               	movwf	uart_tasks@checksum^0,c
  3638                           
  3639                           ; BSR set to: 59
  3640                           ;uart.c: 91:     uint8_t message[256];;uart.c: 92:     uint8_t msgOffset = 0;
  3641  004F90  0E00               	movlw	0
  3642  004F92  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3643                           
  3644                           ; BSR set to: 59
  3645                           ;uart.c: 93:     uint8_t rawMsgOffset = 0;
  3646  004F94  0E00               	movlw	0
  3647  004F96  6E1A               	movwf	uart_tasks@rawMsgOffset^0,c
  3648                           
  3649                           ; BSR set to: 59
  3650                           ;uart.c: 94:     for (i = 0; i < rxLen; i++) {
  3651  004F98  0E00               	movlw	0
  3652  004F9A  6E1E               	movwf	uart_tasks@i^0,c
  3653  004F9C  D08E               	goto	l5242
  3654  004F9E                     l5180:
  3655                           
  3656                           ;uart.c: 95:         uint8_t bytePos = i - msgOffset;
  3657  004F9E  501C               	movf	uart_tasks@msgOffset^0,w,c
  3658  004FA0  5C1E               	subwf	uart_tasks@i^0,w,c
  3659  004FA2  6E1F               	movwf	uart_tasks@bytePos^0,c
  3660                           
  3661                           ;uart.c: 96:         uint8_t intPos = rxPos + i;
  3662  004FA4  0104               	movlb	4	; () banked
  3663  004FA6  5146               	movf	uart_tasks@rxPos& (0+255),w,b
  3664  004FA8  241E               	addwf	uart_tasks@i^0,w,c
  3665  004FAA  6E20               	movwf	uart_tasks@intPos^0,c
  3666                           
  3667                           ; BSR set to: 4
  3668                           ;uart.c: 97:         uint8_t val = rxBuf[intPos];
  3669  004FAC  0E00               	movlw	0
  3670  004FAE  2420               	addwf	uart_tasks@intPos^0,w,c
  3671  004FB0  6ED9               	movwf	fsr2l,c
  3672  004FB2  6ADA               	clrf	fsr2h,c
  3673  004FB4  0E01               	movlw	1
  3674  004FB6  22DA               	addwfc	fsr2h,f,c
  3675  004FB8  50DF               	movf	indf2,w,c
  3676  004FBA  6E23               	movwf	uart_tasks@val^0,c
  3677                           
  3678                           ; BSR set to: 4
  3679                           ;uart.c: 98:         uint8_t posInRawMsg = bytePos - (3 + zeroByte);
  3680  004FBC  5022               	movf	uart_tasks@zeroByte^0,w,c
  3681  004FBE  5C1F               	subwf	uart_tasks@bytePos^0,w,c
  3682  004FC0  0FFD               	addlw	253
  3683  004FC2  6E1D               	movwf	uart_tasks@posInRawMsg^0,c
  3684                           
  3685                           ; BSR set to: 4
  3686                           ;uart.c: 99:         if (bytePos == zeroByte) {
  3687  004FC4  5022               	movf	uart_tasks@zeroByte^0,w,c
  3688  004FC6  181F               	xorwf	uart_tasks@bytePos^0,w,c
  3689  004FC8  A4D8               	btfss	status,2,c
  3690  004FCA  D011               	goto	l5200
  3691                           
  3692                           ; BSR set to: 4
  3693                           ;uart.c: 100:             if (val == 0x00 && !zeroByte) {
  3694  004FCC  5023               	movf	uart_tasks@val^0,w,c
  3695  004FCE  A4D8               	btfss	status,2,c
  3696  004FD0  D005               	goto	l5194
  3697                           
  3698                           ; BSR set to: 4
  3699  004FD2  5022               	movf	uart_tasks@zeroByte^0,w,c
  3700  004FD4  A4D8               	btfss	status,2,c
  3701  004FD6  D002               	goto	l5194
  3702                           
  3703                           ; BSR set to: 4
  3704                           ;uart.c: 101:                 zeroByte = 1;
  3705  004FD8  0E01               	movlw	1
  3706  004FDA  D007               	goto	L2
  3707  004FDC                     l5194:
  3708                           
  3709                           ; BSR set to: 4
  3710  004FDC  0EAA               	movlw	170
  3711  004FDE  1823               	xorwf	uart_tasks@val^0,w,c
  3712  004FE0  B4D8               	btfsc	status,2,c
  3713  004FE2  D06A               	goto	l5240
  3714                           
  3715                           ; BSR set to: 4
  3716                           ;uart.c: 103:                 msgOffset = intPos + 1;
  3717  004FE4  2820               	incf	uart_tasks@intPos^0,w,c
  3718  004FE6  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3719                           
  3720                           ; BSR set to: 4
  3721                           ;uart.c: 104:                 zeroByte = 0;
  3722  004FE8  0E00               	movlw	0
  3723  004FEA                     L2:
  3724  004FEA  6E22               	movwf	uart_tasks@zeroByte^0,c
  3725                           
  3726                           ; BSR set to: 4
  3727                           ;uart.c: 106:         } else if (bytePos == 1 + zeroByte) {
  3728  004FEC  D065               	goto	l5240
  3729  004FEE                     l5200:
  3730                           
  3731                           ; BSR set to: 4
  3732  004FEE  501F               	movf	uart_tasks@bytePos^0,w,c
  3733  004FF0  6E15               	movwf	??_uart_tasks^0,c
  3734  004FF2  6A16               	clrf	(??_uart_tasks+1)^0,c
  3735  004FF4  5022               	movf	uart_tasks@zeroByte^0,w,c
  3736  004FF6  6E17               	movwf	(??_uart_tasks+2)^0,c
  3737  004FF8  6A18               	clrf	(??_uart_tasks+3)^0,c
  3738  004FFA  0E01               	movlw	1
  3739  004FFC  2617               	addwf	(??_uart_tasks+2)^0,f,c
  3740  004FFE  0E00               	movlw	0
  3741  005000  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  3742  005002  5015               	movf	??_uart_tasks^0,w,c
  3743  005004  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  3744  005006  E107               	bnz	l5204
  3745  005008  5016               	movf	(??_uart_tasks+1)^0,w,c
  3746  00500A  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  3747  00500C  A4D8               	btfss	status,2,c
  3748  00500E  D003               	goto	l5204
  3749  005010                     u6480:
  3750                           
  3751                           ; BSR set to: 4
  3752                           ;uart.c: 107:             checksum += val;
  3753  005010  5023               	movf	uart_tasks@val^0,w,c
  3754  005012  261B               	addwf	uart_tasks@checksum^0,f,c
  3755                           
  3756                           ;uart.c: 108:         } else if (bytePos == 2 + zeroByte) {
  3757  005014  D051               	goto	l5240
  3758  005016                     l5204:
  3759                           
  3760                           ; BSR set to: 4
  3761  005016  501F               	movf	uart_tasks@bytePos^0,w,c
  3762  005018  6E15               	movwf	??_uart_tasks^0,c
  3763  00501A  6A16               	clrf	(??_uart_tasks+1)^0,c
  3764  00501C  5022               	movf	uart_tasks@zeroByte^0,w,c
  3765  00501E  6E17               	movwf	(??_uart_tasks+2)^0,c
  3766  005020  6A18               	clrf	(??_uart_tasks+3)^0,c
  3767  005022  0E02               	movlw	2
  3768  005024  2617               	addwf	(??_uart_tasks+2)^0,f,c
  3769  005026  0E00               	movlw	0
  3770  005028  2218               	addwfc	(??_uart_tasks+3)^0,f,c
  3771  00502A  5015               	movf	??_uart_tasks^0,w,c
  3772  00502C  1817               	xorwf	(??_uart_tasks+2)^0,w,c
  3773  00502E  E113               	bnz	l5218
  3774  005030  5016               	movf	(??_uart_tasks+1)^0,w,c
  3775  005032  1818               	xorwf	(??_uart_tasks+3)^0,w,c
  3776  005034  A4D8               	btfss	status,2,c
  3777  005036  D00F               	goto	l5218
  3778                           
  3779                           ; BSR set to: 4
  3780                           ;uart.c: 109:             msgLen = val;
  3781  005038  0060  F08C  F021   	movff	uart_tasks@val,uart_tasks@msgLen
  3782                           
  3783                           ; BSR set to: 4
  3784                           ;uart.c: 110:             checksum += val;
  3785  00503E  5023               	movf	uart_tasks@val^0,w,c
  3786  005040  261B               	addwf	uart_tasks@checksum^0,f,c
  3787                           
  3788                           ; BSR set to: 4
  3789                           ;uart.c: 111:             if (msgLen == 0) {
  3790  005042  5021               	movf	uart_tasks@msgLen^0,w,c
  3791  005044  A4D8               	btfss	status,2,c
  3792  005046  D038               	goto	l5240
  3793                           
  3794                           ; BSR set to: 4
  3795                           ;uart.c: 112:                 msgOffset = intPos + 1;
  3796  005048  2820               	incf	uart_tasks@intPos^0,w,c
  3797  00504A  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3798                           
  3799                           ; BSR set to: 4
  3800                           ;uart.c: 113:                 zeroByte = 0;
  3801  00504C  0E00               	movlw	0
  3802  00504E  6E22               	movwf	uart_tasks@zeroByte^0,c
  3803  005050                     l5216:
  3804                           
  3805                           ;uart.c: 114:                 checksum = 0;
  3806  005050  0E00               	movlw	0
  3807  005052  6E1B               	movwf	uart_tasks@checksum^0,c
  3808  005054  D031               	goto	l5240
  3809  005056                     l5218:
  3810                           
  3811                           ; BSR set to: 4
  3812  005056  5021               	movf	uart_tasks@msgLen^0,w,c
  3813  005058  5C1D               	subwf	uart_tasks@posInRawMsg^0,w,c
  3814  00505A  B0D8               	btfsc	status,0,c
  3815  00505C  D012               	goto	l5224
  3816                           
  3817                           ; BSR set to: 4
  3818                           ;uart.c: 117:             message[rawMsgOffset + posInRawMsg] = val;
  3819  00505E  0E00               	movlw	low uart_tasks@message
  3820  005060  6E15               	movwf	??_uart_tasks^0,c
  3821  005062  0E03               	movlw	high uart_tasks@message
  3822  005064  6E16               	movwf	(??_uart_tasks+1)^0,c
  3823  005066  501A               	movf	uart_tasks@rawMsgOffset^0,w,c
  3824  005068  2615               	addwf	??_uart_tasks^0,f,c
  3825  00506A  0E00               	movlw	0
  3826  00506C  2216               	addwfc	(??_uart_tasks+1)^0,f,c
  3827  00506E  501D               	movf	uart_tasks@posInRawMsg^0,w,c
  3828  005070  2415               	addwf	??_uart_tasks^0,w,c
  3829  005072  6ED9               	movwf	fsr2l,c
  3830  005074  0E00               	movlw	0
  3831  005076  2016               	addwfc	(??_uart_tasks+1)^0,w,c
  3832  005078  6EDA               	movwf	fsr2h,c
  3833  00507A  0060  F08F  FFDF   	movff	uart_tasks@val,indf2
  3834  005080  D7C7               	goto	u6480
  3835  005082                     l5224:
  3836                           
  3837                           ; BSR set to: 4
  3838  005082  5021               	movf	uart_tasks@msgLen^0,w,c
  3839  005084  181D               	xorwf	uart_tasks@posInRawMsg^0,w,c
  3840  005086  A4D8               	btfss	status,2,c
  3841  005088  D017               	goto	l5240
  3842                           
  3843                           ; BSR set to: 4
  3844                           ;uart.c: 120:             checksum += val;
  3845  00508A  5023               	movf	uart_tasks@val^0,w,c
  3846  00508C  261B               	addwf	uart_tasks@checksum^0,f,c
  3847                           
  3848                           ; BSR set to: 4
  3849                           ;uart.c: 121:             if (checksum == 0x00) {
  3850  00508E  501B               	movf	uart_tasks@checksum^0,w,c
  3851  005090  A4D8               	btfss	status,2,c
  3852  005092  D00B               	goto	l5232
  3853                           
  3854                           ; BSR set to: 4
  3855                           ;uart.c: 122:                 handle_message(message + rawMsgOffset, msgLen);
  3856  005094  0E00               	movlw	low uart_tasks@message
  3857  005096  241A               	addwf	uart_tasks@rawMsgOffset^0,w,c
  3858  005098  6E11               	movwf	handle_message@message^0,c
  3859  00509A  6A12               	clrf	(handle_message@message+1)^0,c
  3860  00509C  0E03               	movlw	high uart_tasks@message
  3861  00509E  2212               	addwfc	(handle_message@message+1)^0,f,c
  3862  0050A0  0060  F084  F013   	movff	uart_tasks@msgLen,handle_message@len
  3863  0050A6  EC17  F029         	call	_handle_message	;wreg free
  3864  0050AA                     l5232:
  3865                           
  3866                           ;uart.c: 124:             msgOffset = intPos + 1;
  3867  0050AA  2820               	incf	uart_tasks@intPos^0,w,c
  3868  0050AC  6E1C               	movwf	uart_tasks@msgOffset^0,c
  3869                           
  3870                           ;uart.c: 125:             zeroByte = 0;
  3871  0050AE  0E00               	movlw	0
  3872  0050B0  6E22               	movwf	uart_tasks@zeroByte^0,c
  3873                           
  3874                           ;uart.c: 126:             rawMsgOffset += msgLen;
  3875  0050B2  5021               	movf	uart_tasks@msgLen^0,w,c
  3876  0050B4  261A               	addwf	uart_tasks@rawMsgOffset^0,f,c
  3877  0050B6  D7CC               	goto	l5216
  3878  0050B8                     l5240:
  3879                           
  3880                           ;uart.c: 129:     }
  3881  0050B8  2A1E               	incf	uart_tasks@i^0,f,c
  3882  0050BA                     l5242:
  3883  0050BA  5019               	movf	uart_tasks@rxLen^0,w,c
  3884  0050BC  5C1E               	subwf	uart_tasks@i^0,w,c
  3885  0050BE  A0D8               	btfss	status,0,c
  3886  0050C0  D76E               	goto	l5180
  3887                           
  3888                           ;uart.c: 130:     rxPos = msgOffset;
  3889  0050C2  0060  F070  F446   	movff	uart_tasks@msgOffset,uart_tasks@rxPos
  3890  0050C8  0012               	return		;funcret
  3891  0050CA                     __end_of_uart_tasks:
  3892                           	opt callstack 0
  3893                           
  3894 ;; *************** function _handle_message *****************
  3895 ;; Defined at:
  3896 ;;		line 58 in file "uart.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  message         2   16[COMRAM] PTR unsigned char 
  3899 ;;		 -> uart_tasks@message(256), 
  3900 ;;  len             1   18[COMRAM] unsigned char 
  3901 ;; Auto vars:     Size  Location     Type
  3902 ;;		None
  3903 ;; Return value:  Size  Location     Type
  3904 ;;                  1    wreg      void 
  3905 ;; Registers used:
  3906 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3907 ;; Tracked objects:
  3908 ;;		On entry : 3F/4
  3909 ;;		On exit  : 0/0
  3910 ;;		Unchanged: 0/0
  3911 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  3912 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3914 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3916 ;;Total ram usage:        4 bytes
  3917 ;; Hardware stack levels used:    1
  3918 ;; Hardware stack levels required when called:    2
  3919 ;; This function calls:
  3920 ;;		_uart_send
  3921 ;; This function is called by:
  3922 ;;		_uart_tasks
  3923 ;; This function uses a non-reentrant model
  3924 ;;
  3925                           
  3926                           	psect	text5
  3927  00522E                     __ptext5:
  3928                           	opt callstack 0
  3929  00522E                     _handle_message:
  3930                           	opt callstack 26
  3931                           
  3932                           ; BSR set to: 4
  3933                           ;uart.c: 59:     if (message[0] == 0x17 && message[2] == 0x04 && len == 4) {
  3934                           
  3935                           ;incstack = 0
  3936  00522E  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  3937  005234  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  3938  00523A  0E17               	movlw	23
  3939  00523C  18DE               	xorwf	postinc2,w,c
  3940  00523E  A4D8               	btfss	status,2,c
  3941  005240  D018               	goto	l4892
  3942                           
  3943                           ; BSR set to: 4
  3944  005242  EE20 F002          	lfsr	2,2
  3945  005246  5011               	movf	handle_message@message^0,w,c
  3946  005248  26D9               	addwf	fsr2l,f,c
  3947  00524A  5012               	movf	(handle_message@message+1)^0,w,c
  3948  00524C  22DA               	addwfc	fsr2h,f,c
  3949  00524E  0E04               	movlw	4
  3950  005250  18DE               	xorwf	postinc2,w,c
  3951  005252  A4D8               	btfss	status,2,c
  3952  005254  D00E               	goto	l4892
  3953                           
  3954                           ; BSR set to: 4
  3955  005256  0E04               	movlw	4
  3956  005258  1813               	xorwf	handle_message@len^0,w,c
  3957  00525A  A4D8               	btfss	status,2,c
  3958  00525C  D00A               	goto	l4892
  3959                           
  3960                           ; BSR set to: 4
  3961                           ;uart.c: 60:         volume_level = message[3] & 0x0f;
  3962  00525E  EE20 F003          	lfsr	2,3
  3963  005262  5011               	movf	handle_message@message^0,w,c
  3964  005264  26D9               	addwf	fsr2l,f,c
  3965  005266  5012               	movf	(handle_message@message+1)^0,w,c
  3966  005268  22DA               	addwfc	fsr2h,f,c
  3967  00526A  50DF               	movf	indf2,w,c
  3968  00526C  0B0F               	andlw	15
  3969  00526E  6F4B               	movwf	_volume_level& (0+255),b
  3970                           
  3971                           ;uart.c: 61:     } else if (message[0] == 0x1E && len == 8) {
  3972  005270  D050               	goto	u6020
  3973  005272                     l4892:
  3974                           
  3975                           ; BSR set to: 4
  3976  005272  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  3977  005278  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  3978  00527E  0E1E               	movlw	30
  3979  005280  18DE               	xorwf	postinc2,w,c
  3980  005282  A4D8               	btfss	status,2,c
  3981  005284  D039               	goto	l4898
  3982                           
  3983                           ; BSR set to: 4
  3984  005286  0E08               	movlw	8
  3985  005288  1813               	xorwf	handle_message@len^0,w,c
  3986  00528A  A4D8               	btfss	status,2,c
  3987  00528C  D035               	goto	l4898
  3988                           
  3989                           ; BSR set to: 4
  3990                           ;uart.c: 62:         on = message[1] != 0x00;
  3991  00528E  EE20 F001          	lfsr	2,1
  3992  005292  5011               	movf	handle_message@message^0,w,c
  3993  005294  26D9               	addwf	fsr2l,f,c
  3994  005296  5012               	movf	(handle_message@message+1)^0,w,c
  3995  005298  22DA               	addwfc	fsr2h,f,c
  3996  00529A  50DF               	movf	indf2,w,c
  3997  00529C  B4D8               	btfsc	status,2,c
  3998  00529E  D002               	goto	u5930
  3999  0052A0  0E01               	movlw	1
  4000  0052A2  D001               	goto	u5940
  4001  0052A4                     u5930:
  4002  0052A4  0E00               	movlw	0
  4003  0052A6                     u5940:
  4004  0052A6  6F47               	movwf	_on& (0+255),b
  4005                           
  4006                           ;uart.c: 63:         connected = message[2] != 0x00;
  4007  0052A8  EE20 F002          	lfsr	2,2
  4008  0052AC  5011               	movf	handle_message@message^0,w,c
  4009  0052AE  26D9               	addwf	fsr2l,f,c
  4010  0052B0  5012               	movf	(handle_message@message+1)^0,w,c
  4011  0052B2  22DA               	addwfc	fsr2h,f,c
  4012  0052B4  50DF               	movf	indf2,w,c
  4013  0052B6  B4D8               	btfsc	status,2,c
  4014  0052B8  D002               	goto	u5950
  4015  0052BA  0E01               	movlw	1
  4016  0052BC  D001               	goto	u5960
  4017  0052BE                     u5950:
  4018  0052BE  0E00               	movlw	0
  4019  0052C0                     u5960:
  4020  0052C0  6F48               	movwf	_connected& (0+255),b
  4021                           
  4022                           ;uart.c: 64:         pairing = message[1] == 0x01;
  4023  0052C2  EE20 F001          	lfsr	2,1
  4024  0052C6  5011               	movf	handle_message@message^0,w,c
  4025  0052C8  26D9               	addwf	fsr2l,f,c
  4026  0052CA  5012               	movf	(handle_message@message+1)^0,w,c
  4027  0052CC  22DA               	addwfc	fsr2h,f,c
  4028  0052CE  04DE               	decf	postinc2,w,c
  4029  0052D0  A4D8               	btfss	status,2,c
  4030  0052D2  D002               	goto	u5970
  4031  0052D4  0E01               	movlw	1
  4032  0052D6  D001               	goto	u5980
  4033  0052D8                     u5970:
  4034  0052D8  0E00               	movlw	0
  4035  0052DA                     u5980:
  4036  0052DA  6F4A               	movwf	_pairing& (0+255),b
  4037                           
  4038                           ;uart.c: 65:         streaming = message[6];
  4039  0052DC  EE20 F006          	lfsr	2,6
  4040  0052E0  5011               	movf	handle_message@message^0,w,c
  4041  0052E2  26D9               	addwf	fsr2l,f,c
  4042  0052E4  5012               	movf	(handle_message@message+1)^0,w,c
  4043  0052E6  22DA               	addwfc	fsr2h,f,c
  4044  0052E8  50DF               	movf	indf2,w,c
  4045  0052EA  B4D8               	btfsc	status,2,c
  4046  0052EC  D002               	goto	u5990
  4047  0052EE  0E01               	movlw	1
  4048  0052F0  D001               	goto	u6000
  4049  0052F2                     u5990:
  4050  0052F2  0E00               	movlw	0
  4051  0052F4                     u6000:
  4052  0052F4  6F49               	movwf	_streaming& (0+255),b
  4053                           
  4054                           ;uart.c: 66:     } else if (message[0] == 0x00 && len == 3) {
  4055  0052F6  D00D               	goto	u6020
  4056  0052F8                     l4898:
  4057                           
  4058                           ; BSR set to: 4
  4059  0052F8  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4060  0052FE  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4061  005304  50DF               	movf	indf2,w,c
  4062  005306  A4D8               	btfss	status,2,c
  4063  005308  0012               	return	
  4064                           
  4065                           ; BSR set to: 4
  4066  00530A  0E03               	movlw	3
  4067  00530C  1813               	xorwf	handle_message@len^0,w,c
  4068  00530E  A4D8               	btfss	status,2,c
  4069  005310  0012               	return	
  4070  005312                     u6020:
  4071                           
  4072                           ; BSR set to: 4
  4073                           ;uart.c: 70:     ackCmd[1] = message[0];
  4074  005312  0060  F047  FFD9   	movff	handle_message@message,fsr2l
  4075  005318  0060  F04B  FFDA   	movff	handle_message@message+1,fsr2h
  4076  00531E  50DF               	movf	indf2,w,c
  4077  005320  6FA5               	movwf	(_ackCmd+1)& (0+255),b
  4078                           
  4079                           ; BSR set to: 4
  4080                           ;uart.c: 71:     uart_send(ackCmd, 2);
  4081  005322  0EA4               	movlw	low _ackCmd
  4082  005324  6E0C               	movwf	uart_send@buf^0,c
  4083  005326  0E04               	movlw	high _ackCmd
  4084  005328  6E0D               	movwf	(uart_send@buf+1)^0,c
  4085  00532A  0E02               	movlw	2
  4086  00532C  6E0E               	movwf	uart_send@len^0,c
  4087  00532E  EC9B  F02E         	call	_uart_send	;wreg free
  4088  005332  0012               	return		;funcret
  4089  005334                     __end_of_handle_message:
  4090                           	opt callstack 0
  4091                           
  4092 ;; *************** function _uart_send *****************
  4093 ;; Defined at:
  4094 ;;		line 133 in file "uart.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  buf             2   11[COMRAM] PTR unsigned char 
  4097 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4098 ;;  len             1   13[COMRAM] unsigned char 
  4099 ;; Auto vars:     Size  Location     Type
  4100 ;;		None
  4101 ;; Return value:  Size  Location     Type
  4102 ;;                  1    wreg      void 
  4103 ;; Registers used:
  4104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4105 ;; Tracked objects:
  4106 ;;		On entry : 0/4
  4107 ;;		On exit  : 3F/3B
  4108 ;;		Unchanged: 0/0
  4109 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4110 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4112 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4113 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4114 ;;Total ram usage:        5 bytes
  4115 ;; Hardware stack levels used:    1
  4116 ;; Hardware stack levels required when called:    1
  4117 ;; This function calls:
  4118 ;;		_memcpy
  4119 ;;		_transmitChecksum
  4120 ;; This function is called by:
  4121 ;;		_main_loop
  4122 ;;		_handle_message
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text6
  4127  005D36                     __ptext6:
  4128                           	opt callstack 0
  4129  005D36                     _uart_send:
  4130                           	opt callstack 26
  4131                           
  4132                           ;uart.c: 134:     while (DMA2CON0bits.SIRQEN);
  4133                           
  4134                           ;incstack = 0
  4135  005D36  013B               	movlb	59	; () banked
  4136  005D38  BDDC               	btfsc	220,6,b	;volatile
  4137  005D3A  D7FD               	goto	_uart_send
  4138                           
  4139                           ; BSR set to: 59
  4140                           ;uart.c: 135:     if (DMA2SCNTIF) transmitChecksum();
  4141  005D3C  0139               	movlb	57	; () banked
  4142  005D3E  B5A5               	btfsc	165,2,b	;volatile
  4143                           
  4144                           ; BSR set to: 57
  4145  005D40  EC90  F031         	call	_transmitChecksum	;wreg free
  4146                           
  4147                           ; BSR set to: 57
  4148                           ;uart.c: 136:     DMA2CON0bits.EN = 0;
  4149  005D44  013B               	movlb	59	; () banked
  4150  005D46  9FDC               	bcf	220,7,b	;volatile
  4151                           
  4152                           ; BSR set to: 59
  4153                           ;uart.c: 137:     txBuf[0] = 0xAA;
  4154  005D48  0EAA               	movlw	170
  4155  005D4A  0102               	movlb	2	; () banked
  4156  005D4C  6F00               	movwf	0,b
  4157                           
  4158                           ; BSR set to: 2
  4159                           ;uart.c: 138:     txBuf[1] = 0x00;
  4160  005D4E  0E00               	movlw	0
  4161  005D50  6F01               	movwf	1,b
  4162                           
  4163                           ; BSR set to: 2
  4164                           ;uart.c: 139:     txBuf[2] = len;
  4165  005D52  0060  F038  F202   	movff	uart_send@len,514
  4166                           
  4167                           ; BSR set to: 2
  4168                           ;uart.c: 140:     memcpy(txBuf + 3, buf, len);
  4169  005D58  0E03               	movlw	3
  4170  005D5A  6E01               	movwf	memcpy@d1^0,c
  4171  005D5C  0E02               	movlw	2
  4172  005D5E  6E02               	movwf	(memcpy@d1+1)^0,c
  4173  005D60  0060  F030  F003   	movff	uart_send@buf,memcpy@s1
  4174  005D66  0060  F034  F004   	movff	uart_send@buf+1,memcpy@s1+1
  4175  005D6C  0060  F038  F005   	movff	uart_send@len,memcpy@n
  4176  005D72  6A06               	clrf	(memcpy@n+1)^0,c
  4177  005D74  EC10  F02F         	call	_memcpy	;wreg free
  4178                           
  4179                           ;uart.c: 141:     DMA2SSZH = ((uint16_t)len + 3) >> 8;
  4180  005D78  500E               	movf	uart_send@len^0,w,c
  4181  005D7A  6E0F               	movwf	??_uart_send^0,c
  4182  005D7C  6A10               	clrf	(??_uart_send+1)^0,c
  4183  005D7E  0E03               	movlw	3
  4184  005D80  260F               	addwf	??_uart_send^0,f,c
  4185  005D82  0E00               	movlw	0
  4186  005D84  2210               	addwfc	(??_uart_send+1)^0,f,c
  4187  005D86  0060  F040  F00F   	movff	??_uart_send+1,??_uart_send
  4188  005D8C  6A10               	clrf	(??_uart_send+1)^0,c
  4189  005D8E  500F               	movf	??_uart_send^0,w,c
  4190  005D90  013B               	movlb	59	; () banked
  4191  005D92  6FD8               	movwf	216,b	;volatile
  4192                           
  4193                           ; BSR set to: 59
  4194                           ;uart.c: 142:     DMA2SSZL = (len + 3) & 0xff;
  4195  005D94  500E               	movf	uart_send@len^0,w,c
  4196  005D96  0F03               	addlw	3
  4197  005D98  6FD7               	movwf	215,b	;volatile
  4198                           
  4199                           ; BSR set to: 59
  4200                           ;uart.c: 143:     U1TXCHK = 0;
  4201  005D9A  0E00               	movlw	0
  4202  005D9C  013D               	movlb	61	; () banked
  4203  005D9E  6FEB               	movwf	235,b	;volatile
  4204                           
  4205                           ; BSR set to: 61
  4206                           ;uart.c: 144:     DMA2SCNTIF = 0;
  4207  005DA0  0139               	movlb	57	; () banked
  4208  005DA2  95A5               	bcf	165,2,b	;volatile
  4209                           
  4210                           ; BSR set to: 57
  4211                           ;uart.c: 145:     DMA2CON0bits.EN = 1;
  4212  005DA4  013B               	movlb	59	; () banked
  4213  005DA6  8FDC               	bsf	220,7,b	;volatile
  4214                           
  4215                           ; BSR set to: 59
  4216                           ;uart.c: 146:     DMA2CON0bits.SIRQEN = 1;
  4217  005DA8  8DDC               	bsf	220,6,b	;volatile
  4218                           
  4219                           ; BSR set to: 59
  4220  005DAA  0012               	return		;funcret
  4221  005DAC                     __end_of_uart_send:
  4222                           	opt callstack 0
  4223                           
  4224 ;; *************** function _transmitChecksum *****************
  4225 ;; Defined at:
  4226 ;;		line 74 in file "uart.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;		None
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;		None
  4231 ;; Return value:  Size  Location     Type
  4232 ;;                  1    wreg      void 
  4233 ;; Registers used:
  4234 ;;		wreg, status,2, status,0
  4235 ;; Tracked objects:
  4236 ;;		On entry : 3F/39
  4237 ;;		On exit  : 3F/39
  4238 ;;		Unchanged: 0/0
  4239 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4244 ;;Total ram usage:        0 bytes
  4245 ;; Hardware stack levels used:    1
  4246 ;; This function calls:
  4247 ;;		Nothing
  4248 ;; This function is called by:
  4249 ;;		_uart_tasks
  4250 ;;		_uart_send
  4251 ;; This function uses a non-reentrant model
  4252 ;;
  4253                           
  4254                           	psect	text7
  4255  006320                     __ptext7:
  4256                           	opt callstack 0
  4257  006320                     _transmitChecksum:
  4258                           	opt callstack 28
  4259                           
  4260                           ; BSR set to: 57
  4261                           
  4262                           ; BSR set to: 57
  4263                           ;uart.c: 75:     while (!U1TXIF);
  4264                           
  4265                           ; BSR set to: 59
  4266                           ;incstack = 0
  4267  006320  A9A3               	btfss	163,4,b	;volatile
  4268  006322  D7FE               	goto	_transmitChecksum
  4269                           
  4270                           ; BSR set to: 57
  4271                           ;uart.c: 76:     U1TXB = -(U1TXCHK - 0xaa);
  4272  006324  013D               	movlb	61	; () banked
  4273  006326  51EB               	movf	235,w,b	;volatile
  4274  006328  0F56               	addlw	86
  4275  00632A  0800               	sublw	0
  4276  00632C  6FEA               	movwf	234,b	;volatile
  4277                           
  4278                           ; BSR set to: 61
  4279                           ;uart.c: 77:     DMA2SCNTIF = 0;
  4280  00632E  0139               	movlb	57	; () banked
  4281  006330  95A5               	bcf	165,2,b	;volatile
  4282                           
  4283                           ; BSR set to: 57
  4284  006332  0012               	return		;funcret
  4285  006334                     __end_of_transmitChecksum:
  4286                           	opt callstack 0
  4287                           
  4288 ;; *************** function _memcpy *****************
  4289 ;; Defined at:
  4290 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\memcpy.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  d1              2    0[COMRAM] PTR void 
  4293 ;;		 -> txBuf(256), 
  4294 ;;  s1              2    2[COMRAM] PTR const void 
  4295 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4296 ;;  n               2    4[COMRAM] unsigned int 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4299 ;;		 -> ackCmd(2), stateCheckCmd(2), volCheckCmd(3), 
  4300 ;;  d               2    6[COMRAM] PTR unsigned char 
  4301 ;;		 -> txBuf(256), 
  4302 ;;  tmp             1   10[COMRAM] unsigned char 
  4303 ;; Return value:  Size  Location     Type
  4304 ;;                  2    0[COMRAM] PTR void 
  4305 ;; Registers used:
  4306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4307 ;; Tracked objects:
  4308 ;;		On entry : 3F/2
  4309 ;;		On exit  : 0/0
  4310 ;;		Unchanged: 0/0
  4311 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4312 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4313 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4315 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4316 ;;Total ram usage:       11 bytes
  4317 ;; Hardware stack levels used:    1
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_uart_send
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           	psect	text8
  4326  005E20                     __ptext8:
  4327                           	opt callstack 0
  4328  005E20                     _memcpy:
  4329                           	opt callstack 26
  4330                           
  4331                           ; BSR set to: 2
  4332                           
  4333                           ; BSR set to: 57
  4334                           ;incstack = 0
  4335  005E20  0060  F00C  F009   	movff	memcpy@s1,memcpy@s
  4336  005E26  0060  F010  F00A   	movff	memcpy@s1+1,memcpy@s+1
  4337  005E2C  0060  F004  F007   	movff	memcpy@d1,memcpy@d
  4338  005E32  0060  F008  F008   	movff	memcpy@d1+1,memcpy@d+1
  4339  005E38  D023               	goto	l4362
  4340  005E3A                     l4354:
  4341  005E3A  0060  F027  FFF6   	movff	memcpy@s,tblptrl
  4342  005E40  0060  F02B  FFF7   	movff	memcpy@s+1,tblptrh
  4343  005E46  0E00               	movlw	low (__smallconst shr (0+16))
  4344  005E48  6EF8               	movwf	tblptru,c
  4345  005E4A  0E1F               	movlw	(high __ramtop+-1)
  4346  005E4C  64F7               	cpfsgt	tblptrh,c
  4347  005E4E  D003               	bra	u4997
  4348  005E50  0008               	tblrd		*
  4349  005E52  50F5               	movf	tablat,w,c
  4350  005E54  D007               	bra	u4990
  4351  005E56                     u4997:
  4352  005E56  006F FFDB FFE1     	movff	tblptrl,fsr1l
  4353  005E5C  006F FFDF FFE2     	movff	tblptrh,fsr1h
  4354  005E62  50E7               	movf	indf1,w,c
  4355  005E64                     u4990:
  4356  005E64  6E0B               	movwf	memcpy@tmp^0,c
  4357  005E66  4A09               	infsnz	memcpy@s^0,f,c
  4358  005E68  2A0A               	incf	(memcpy@s+1)^0,f,c
  4359  005E6A  0060  F01F  FFD9   	movff	memcpy@d,fsr2l
  4360  005E70  0060  F023  FFDA   	movff	memcpy@d+1,fsr2h
  4361  005E76  0060  F02F  FFDF   	movff	memcpy@tmp,indf2
  4362  005E7C  4A07               	infsnz	memcpy@d^0,f,c
  4363  005E7E  2A08               	incf	(memcpy@d+1)^0,f,c
  4364  005E80                     l4362:
  4365  005E80  0605               	decf	memcpy@n^0,f,c
  4366  005E82  A0D8               	btfss	status,0,c
  4367  005E84  0606               	decf	(memcpy@n+1)^0,f,c
  4368  005E86  2805               	incf	memcpy@n^0,w,c
  4369  005E88  E1D8               	bnz	l4354
  4370  005E8A  2806               	incf	(memcpy@n+1)^0,w,c
  4371  005E8C  B4D8               	btfsc	status,2,c
  4372  005E8E  0012               	return	
  4373  005E90  D7D4               	goto	l4354
  4374  005E92                     __end_of_memcpy:
  4375                           	opt callstack 0
  4376                           
  4377 ;; *************** function _sprintf *****************
  4378 ;; Defined at:
  4379 ;;		line 9 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  s               1   89[BANK0 ] PTR unsigned char 
  4382 ;;		 -> main_loop@batmsg(17), 
  4383 ;;  fmt             1   90[BANK0 ] PTR const unsigned char 
  4384 ;;		 -> STR_10(20), STR_9(20), STR_8(20), STR_7(20), 
  4385 ;;		 -> STR_6(17), 
  4386 ;; Auto vars:     Size  Location     Type
  4387 ;;  f               5   98[BANK0 ] struct _IO_FILE
  4388 ;;  ret             2    0        int 
  4389 ;;  ap              1   97[BANK0 ] PTR void [1]
  4390 ;;		 -> ?_sprintf(2), 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  2   89[BANK0 ] int 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 3F/0
  4397 ;;		On exit  : 3F/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4400 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4401 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4403 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4404 ;;Total ram usage:       14 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    7
  4407 ;; This function calls:
  4408 ;;		_vfprintf
  4409 ;; This function is called by:
  4410 ;;		_main_loop
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text9
  4415  006164                     __ptext9:
  4416                           	opt callstack 0
  4417  006164                     _sprintf:
  4418                           	opt callstack 22
  4419                           
  4420                           ; BSR set to: 0
  4421                           
  4422                           ;incstack = 0
  4423  006164  0EBB               	movlw	low (?_sprintf+2)
  4424  006166  6FC1               	movwf	sprintf@ap& (0+255),b
  4425  006168  0060  F2E4  F0C2   	movff	sprintf@s,sprintf@f
  4426                           
  4427                           ; BSR set to: 0
  4428  00616E  0E00               	movlw	0
  4429  006170  6FC4               	movwf	(sprintf@f+2)& (0+255),b
  4430  006172  0E00               	movlw	0
  4431  006174  6FC3               	movwf	(sprintf@f+1)& (0+255),b
  4432                           
  4433                           ; BSR set to: 0
  4434  006176  0E00               	movlw	0
  4435  006178  6FC6               	movwf	(sprintf@f+4)& (0+255),b
  4436  00617A  0E00               	movlw	0
  4437  00617C  6FC5               	movwf	(sprintf@f+3)& (0+255),b
  4438                           
  4439                           ; BSR set to: 0
  4440  00617E  0EC2               	movlw	low sprintf@f
  4441  006180  6FB5               	movwf	vfprintf@fp& (0+255),b
  4442  006182  0060  F2E8  F0B6   	movff	sprintf@fmt,vfprintf@fmt
  4443  006188  0EC1               	movlw	low sprintf@ap
  4444  00618A  6FB7               	movwf	vfprintf@ap& (0+255),b
  4445  00618C  EC12  F030         	call	_vfprintf	;wreg free
  4446                           
  4447                           ; BSR set to: 4
  4448  006190  0100               	movlb	0	; () banked
  4449  006192  51B9               	movf	sprintf@s& (0+255),w,b
  4450  006194  25C3               	addwf	(sprintf@f+1)& (0+255),w,b
  4451  006196  6ED9               	movwf	fsr2l,c
  4452  006198  6ADA               	clrf	fsr2h,c
  4453  00619A  0E00               	movlw	0
  4454  00619C  6EDF               	movwf	indf2,c
  4455                           
  4456                           ; BSR set to: 0
  4457  00619E  0012               	return		;funcret
  4458  0061A0                     __end_of_sprintf:
  4459                           	opt callstack 0
  4460                           
  4461 ;; *************** function _vfprintf *****************
  4462 ;; Defined at:
  4463 ;;		line 1368 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4464 ;; Parameters:    Size  Location     Type
  4465 ;;  fp              1   85[BANK0 ] PTR struct _IO_FILE
  4466 ;;		 -> sprintf@f(5), 
  4467 ;;  fmt             1   86[BANK0 ] PTR const unsigned char 
  4468 ;;		 -> STR_10(20), STR_9(20), STR_8(20), STR_7(20), 
  4469 ;;		 -> STR_6(17), 
  4470 ;;  ap              1   87[BANK0 ] PTR PTR void 
  4471 ;;		 -> sprintf@ap(1), 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  cfmt            1   88[BANK0 ] PTR unsigned char 
  4474 ;;		 -> STR_10(20), STR_9(20), STR_8(20), STR_7(20), 
  4475 ;;		 -> STR_6(17), 
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  2   85[BANK0 ] int 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 3F/0
  4482 ;;		On exit  : 3F/4
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4485 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4486 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4488 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4489 ;;Total ram usage:        4 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    6
  4492 ;; This function calls:
  4493 ;;		_vfpfcnvrt
  4494 ;; This function is called by:
  4495 ;;		_sprintf
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text10
  4500  006024                     __ptext10:
  4501                           	opt callstack 0
  4502  006024                     _vfprintf:
  4503                           	opt callstack 22
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FI
      +                          LE *fp, const char *fmt, va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1369: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1371:     char *cfmt;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1373:     cfmt = (char *)fmt;
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;incstack = 0
  4510  006024  0060  F2D8  F0B8   	movff	vfprintf@fmt,vfprintf@cfmt
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  4514  00602A  0E00               	movlw	0
  4515  00602C  0104               	movlb	4	; () banked
  4516  00602E  6F3D               	movwf	(_nout+1)& (0+255),b
  4517  006030  0E00               	movlw	0
  4518  006032  6F3C               	movwf	_nout& (0+255),b
  4519                           
  4520                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4521  006034  D00F               	goto	l6044
  4522  006036                     l6042:
  4523                           
  4524                           ; BSR set to: 4
  4525                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:         nout +=
      +                           vfpfcnvrt(fp, &cfmt, ap);
  4526  006036  0060  F2D4  F05D   	movff	vfprintf@fp,vfpfcnvrt@fp
  4527  00603C  0EB8               	movlw	low vfprintf@cfmt
  4528  00603E  6E5E               	movwf	vfpfcnvrt@fmt^0,c
  4529  006040  0060  F2DC  F05F   	movff	vfprintf@ap,vfpfcnvrt@ap
  4530  006046  EC6E  F01E         	call	_vfpfcnvrt	;wreg free
  4531  00604A  505D               	movf	?_vfpfcnvrt^0,w,c
  4532  00604C  0104               	movlb	4	; () banked
  4533  00604E  273C               	addwf	_nout& (0+255),f,b
  4534  006050  505E               	movf	(?_vfpfcnvrt+1)^0,w,c
  4535  006052  233D               	addwfc	(_nout+1)& (0+255),f,b
  4536  006054                     l6044:
  4537                           
  4538                           ; BSR set to: 4
  4539                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  4540  006054  0060  F2E3  FFF6   	movff	vfprintf@cfmt,tblptrl
  4541  00605A                     	if	1	;There is more than 1 active tblptr byte
  4542  00605A  0E20               	movlw	high __smallconst
  4543  00605C  6EF7               	movwf	tblptrh,c
  4544  00605E                     	endif
  4545  00605E                     	if	0	;tblptru may be non-zero
  4546  00605E                     	endif
  4547  00605E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4548  00605E  0E00               	movlw	low (__smallconst shr (0+16))
  4549  006060  6EF8               	movwf	tblptru,c
  4550  006062                     	endif
  4551  006062  0008               	tblrd		*
  4552  006064  50F5               	movf	tablat,w,c
  4553  006066  0900               	iorlw	0
  4554  006068  A4D8               	btfss	status,2,c
  4555  00606A  D7E5               	goto	l6042
  4556                           
  4557                           ; BSR set to: 4
  4558                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     return nout
      +                          ;
  4559  00606C  0061  F0F0  F0B5   	movff	_nout,?_vfprintf
  4560  006072  0061  F0F4  F0B6   	movff	_nout+1,?_vfprintf+1
  4561                           
  4562                           ; BSR set to: 4
  4563  006078  0012               	return		;funcret
  4564  00607A                     __end_of_vfprintf:
  4565                           	opt callstack 0
  4566                           
  4567 ;; *************** function _vfpfcnvrt *****************
  4568 ;; Defined at:
  4569 ;;		line 670 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  fp              1   92[COMRAM] PTR struct _IO_FILE
  4572 ;;		 -> sprintf@f(5), 
  4573 ;;  fmt             1   93[COMRAM] PTR PTR unsigned char 
  4574 ;;		 -> vfprintf@cfmt(1), 
  4575 ;;  ap              1   94[COMRAM] PTR PTR void 
  4576 ;;		 -> sprintf@ap(1), 
  4577 ;; Auto vars:     Size  Location     Type
  4578 ;;  llu             8    0        unsigned long long 
  4579 ;;  ll              8    0        long long 
  4580 ;;  f               4   80[BANK0 ] long long 
  4581 ;;  ct              3   77[BANK0 ] unsigned char [3]
  4582 ;;  vp              3    0        PTR void 
  4583 ;;  cp              3    0        PTR unsigned char 
  4584 ;;  i               2    0        int 
  4585 ;;  done            2    0        int 
  4586 ;;  c               1   84[BANK0 ] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  2   92[COMRAM] int 
  4589 ;; Registers used:
  4590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 3B/4
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  4596 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4597 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4598 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4599 ;;      Totals:         3      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4600 ;;Total ram usage:       21 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    5
  4603 ;; This function calls:
  4604 ;;		_atoi
  4605 ;;		_efgtoa
  4606 ;;		_fputc
  4607 ;;		_isdigit
  4608 ;;		_isupper
  4609 ;;		_strncmp
  4610 ;;		_tolower
  4611 ;; This function is called by:
  4612 ;;		_vfprintf
  4613 ;; This function uses a non-reentrant model
  4614 ;;
  4615                           
  4616                           	psect	text11
  4617  003CDC                     __ptext11:
  4618                           	opt callstack 0
  4619  003CDC                     _vfpfcnvrt:
  4620                           	opt callstack 22
  4621                           
  4622                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static int vfpfc
      +                          nvrt(FILE *fp, char *fmt[], va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 671: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 672:     char c, *cp, ct[3];;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 673:     int done, i;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 674:     long long ll;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 675:     unsigned long long llu;
  4623                           
  4624                           ; BSR set to: 4
  4625                           ;incstack = 0
  4626  003CDC  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4627  003CDE  6ED9               	movwf	fsr2l,c
  4628  003CE0  6ADA               	clrf	fsr2h,c
  4629  003CE2  006F FF7F FFF6     	movff	indf2,tblptrl
  4630  003CE8                     	if	1	;There is more than 1 active tblptr byte
  4631  003CE8  0E20               	movlw	high __smallconst
  4632  003CEA  6EF7               	movwf	tblptrh,c
  4633  003CEC                     	endif
  4634  003CEC                     	if	0	;tblptru may be non-zero
  4635  003CEC                     	endif
  4636  003CEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4637  003CEC  0E00               	movlw	low (__smallconst shr (0+16))
  4638  003CEE  6EF8               	movwf	tblptru,c
  4639  003CF0                     	endif
  4640  003CF0  0008               	tblrd		*
  4641  003CF2  50F5               	movf	tablat,w,c
  4642  003CF4  0A25               	xorlw	37
  4643  003CF6  A4D8               	btfss	status,2,c
  4644  003CF8  D1FB               	goto	l6030
  4645                           
  4646                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  4647  003CFA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4648  003CFC  6ED9               	movwf	fsr2l,c
  4649  003CFE  6ADA               	clrf	fsr2h,c
  4650  003D00  2ADF               	incf	indf2,f,c
  4651                           
  4652                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:         flags = 
      +                          width = 0;
  4653  003D02  0E00               	movlw	0
  4654  003D04  0104               	movlb	4	; () banked
  4655  003D06  6F3F               	movwf	(_width+1)& (0+255),b
  4656  003D08  0E00               	movlw	0
  4657  003D0A  6F3E               	movwf	_width& (0+255),b
  4658  003D0C  C43E  F442         	movff	_width,_flags
  4659  003D10  C43F  F443         	movff	_width+1,_flags+1
  4660                           
  4661                           ; BSR set to: 4
  4662                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:         prec = -
      +                          1;
  4663  003D14  6940               	setf	_prec& (0+255),b
  4664  003D16  6941               	setf	(_prec+1)& (0+255),b
  4665                           
  4666                           ; BSR set to: 4
  4667                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:         if ((*fm
      +                          t)[0] == '*') {
  4668  003D18  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4669  003D1A  6ED9               	movwf	fsr2l,c
  4670  003D1C  6ADA               	clrf	fsr2h,c
  4671  003D1E  006F FF7F FFF6     	movff	indf2,tblptrl
  4672  003D24                     	if	1	;There is more than 1 active tblptr byte
  4673  003D24  0E20               	movlw	high __smallconst
  4674  003D26  6EF7               	movwf	tblptrh,c
  4675  003D28                     	endif
  4676  003D28                     	if	0	;tblptru may be non-zero
  4677  003D28                     	endif
  4678  003D28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4679  003D28  0E00               	movlw	low (__smallconst shr (0+16))
  4680  003D2A  6EF8               	movwf	tblptru,c
  4681  003D2C                     	endif
  4682  003D2C  0008               	tblrd		*
  4683  003D2E  50F5               	movf	tablat,w,c
  4684  003D30  0A2A               	xorlw	42
  4685  003D32  A4D8               	btfss	status,2,c
  4686  003D34  D01A               	goto	l5944
  4687                           
  4688                           ; BSR set to: 4
  4689                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:             ++*f
      +                          mt;
  4690  003D36  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4691  003D38  6ED9               	movwf	fsr2l,c
  4692  003D3A  6ADA               	clrf	fsr2h,c
  4693  003D3C  2ADF               	incf	indf2,f,c
  4694                           
  4695                           ; BSR set to: 4
  4696                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:             widt
      +                          h = (*(int *)__va_arg(*(int **)ap, (int)0));
  4697  003D3E  505F               	movf	vfpfcnvrt@ap^0,w,c
  4698  003D40  6ED9               	movwf	fsr2l,c
  4699  003D42  6ADA               	clrf	fsr2h,c
  4700  003D44  0E02               	movlw	2
  4701  003D46  26DF               	addwf	indf2,f,c
  4702  003D48  5CDF               	subwf	indf2,w,c
  4703  003D4A  6ED9               	movwf	fsr2l,c
  4704  003D4C  6ADA               	clrf	fsr2h,c
  4705  003D4E  006F FF78  F43E    	movff	postinc2,_width
  4706  003D54  006F FF78  F43F    	movff	postinc2,_width+1
  4707                           
  4708                           ; BSR set to: 4
  4709                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:             if (
      +                          width < 0) {
  4710  003D5A  AF3F               	btfss	(_width+1)& (0+255),7,b
  4711  003D5C  D03E               	goto	u7680
  4712                           
  4713                           ; BSR set to: 4
  4714                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:                 
      +                          flags |= (1 << 0);
  4715  003D5E  8142               	bsf	_flags& (0+255),0,b
  4716                           
  4717                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:                 
      +                          width = -width;
  4718  003D60  6D3E               	negf	_width& (0+255),b
  4719  003D62  1F3F               	comf	(_width+1)& (0+255),f,b
  4720  003D64  B0D8               	btfsc	status,0,c
  4721  003D66  2B3F               	incf	(_width+1)& (0+255),f,b
  4722  003D68  D038               	goto	u7680
  4723  003D6A                     l5944:
  4724                           
  4725                           ; BSR set to: 4
  4726                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:             widt
      +                          h = atoi(*fmt);
  4727  003D6A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4728  003D6C  6ED9               	movwf	fsr2l,c
  4729  003D6E  6ADA               	clrf	fsr2h,c
  4730  003D70  50DF               	movf	indf2,w,c
  4731  003D72  6E08               	movwf	atoi@s^0,c
  4732  003D74  ECFD  F026         	call	_atoi	;wreg free
  4733  003D78  0060  F020  F43E   	movff	?_atoi,_width
  4734  003D7E  0060  F024  F43F   	movff	?_atoi+1,_width+1
  4735                           
  4736                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:             whil
      +                          e ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4737  003D84  D004               	goto	l5948
  4738  003D86                     l5946:
  4739                           
  4740                           ; BSR set to: 0
  4741                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:                 
      +                          ++*fmt;
  4742  003D86  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4743  003D88  6ED9               	movwf	fsr2l,c
  4744  003D8A  6ADA               	clrf	fsr2h,c
  4745  003D8C  2ADF               	incf	indf2,f,c
  4746  003D8E                     l5948:
  4747  003D8E  0ED0               	movlw	208
  4748  003D90  0100               	movlb	0	; () banked
  4749  003D92  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4750  003D94  0EFF               	movlw	255
  4751  003D96  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4752  003D98  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4753  003D9A  6ED9               	movwf	fsr2l,c
  4754  003D9C  6ADA               	clrf	fsr2h,c
  4755  003D9E  006F FF7F FFF6     	movff	indf2,tblptrl
  4756  003DA4                     	if	1	;There is more than 1 active tblptr byte
  4757  003DA4  0E20               	movlw	high __smallconst
  4758  003DA6  6EF7               	movwf	tblptrh,c
  4759  003DA8                     	endif
  4760  003DA8                     	if	0	;tblptru may be non-zero
  4761  003DA8                     	endif
  4762  003DA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4763  003DA8  0E00               	movlw	low (__smallconst shr (0+16))
  4764  003DAA  6EF8               	movwf	tblptru,c
  4765  003DAC                     	endif
  4766  003DAC  0008               	tblrd		*
  4767  003DAE  50F5               	movf	tablat,w,c
  4768  003DB0  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4769  003DB2  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4770  003DB4  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4771  003DB6  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4772  003DB8  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4773  003DBA  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4774  003DBC  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4775  003DBE  E106               	bnz	u7660
  4776  003DC0  0E0A               	movlw	10
  4777  003DC2  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4778  003DC4  B0D8               	btfsc	status,0,c
  4779  003DC6  D002               	goto	u7660
  4780  003DC8  0E01               	movlw	1
  4781  003DCA  D001               	goto	u7670
  4782  003DCC                     u7660:
  4783  003DCC  0E00               	movlw	0
  4784  003DCE                     u7670:
  4785  003DCE  6FA7               	movwf	_vfpfcnvrt$646& (0+255),b
  4786  003DD0  6BA8               	clrf	(_vfpfcnvrt$646+1)& (0+255),b
  4787                           
  4788                           ; BSR set to: 0
  4789  003DD2  51A7               	movf	_vfpfcnvrt$646& (0+255),w,b
  4790  003DD4  11A8               	iorwf	(_vfpfcnvrt$646+1)& (0+255),w,b
  4791  003DD6  A4D8               	btfss	status,2,c
  4792  003DD8  D7D6               	goto	l5946
  4793  003DDA                     u7680:
  4794                           
  4795                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:         if ((*fm
      +                          t)[0] == '.') {
  4796  003DDA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4797  003DDC  6ED9               	movwf	fsr2l,c
  4798  003DDE  6ADA               	clrf	fsr2h,c
  4799  003DE0  006F FF7F FFF6     	movff	indf2,tblptrl
  4800  003DE6                     	if	1	;There is more than 1 active tblptr byte
  4801  003DE6  0E20               	movlw	high __smallconst
  4802  003DE8  6EF7               	movwf	tblptrh,c
  4803  003DEA                     	endif
  4804  003DEA                     	if	0	;tblptru may be non-zero
  4805  003DEA                     	endif
  4806  003DEA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4807  003DEA  0E00               	movlw	low (__smallconst shr (0+16))
  4808  003DEC  6EF8               	movwf	tblptru,c
  4809  003DEE                     	endif
  4810  003DEE  0008               	tblrd		*
  4811  003DF0  50F5               	movf	tablat,w,c
  4812  003DF2  0A2E               	xorlw	46
  4813  003DF4  A4D8               	btfss	status,2,c
  4814  003DF6  D063               	goto	u7730
  4815                           
  4816                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:             prec
      +                           = 0;
  4817  003DF8  0E00               	movlw	0
  4818  003DFA  0104               	movlb	4	; () banked
  4819  003DFC  6F41               	movwf	(_prec+1)& (0+255),b
  4820  003DFE  0E00               	movlw	0
  4821  003E00  6F40               	movwf	_prec& (0+255),b
  4822                           
  4823                           ; BSR set to: 4
  4824                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:             ++*f
      +                          mt;
  4825  003E02  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4826  003E04  6ED9               	movwf	fsr2l,c
  4827  003E06  6ADA               	clrf	fsr2h,c
  4828  003E08  2ADF               	incf	indf2,f,c
  4829                           
  4830                           ; BSR set to: 4
  4831                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:             if (
      +                          (*fmt)[0] == '*') {
  4832  003E0A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4833  003E0C  6ED9               	movwf	fsr2l,c
  4834  003E0E  6ADA               	clrf	fsr2h,c
  4835  003E10  006F FF7F FFF6     	movff	indf2,tblptrl
  4836  003E16                     	if	1	;There is more than 1 active tblptr byte
  4837  003E16  0E20               	movlw	high __smallconst
  4838  003E18  6EF7               	movwf	tblptrh,c
  4839  003E1A                     	endif
  4840  003E1A                     	if	0	;tblptru may be non-zero
  4841  003E1A                     	endif
  4842  003E1A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4843  003E1A  0E00               	movlw	low (__smallconst shr (0+16))
  4844  003E1C  6EF8               	movwf	tblptru,c
  4845  003E1E                     	endif
  4846  003E1E  0008               	tblrd		*
  4847  003E20  50F5               	movf	tablat,w,c
  4848  003E22  0A2A               	xorlw	42
  4849  003E24  A4D8               	btfss	status,2,c
  4850  003E26  D013               	goto	l5966
  4851                           
  4852                           ; BSR set to: 4
  4853                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:                 
      +                          ++*fmt;
  4854  003E28  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4855  003E2A  6ED9               	movwf	fsr2l,c
  4856  003E2C  6ADA               	clrf	fsr2h,c
  4857  003E2E  2ADF               	incf	indf2,f,c
  4858                           
  4859                           ; BSR set to: 4
  4860                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:                 
      +                          prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  4861  003E30  505F               	movf	vfpfcnvrt@ap^0,w,c
  4862  003E32  6ED9               	movwf	fsr2l,c
  4863  003E34  6ADA               	clrf	fsr2h,c
  4864  003E36  0E02               	movlw	2
  4865  003E38  26DF               	addwf	indf2,f,c
  4866  003E3A  5CDF               	subwf	indf2,w,c
  4867  003E3C  6ED9               	movwf	fsr2l,c
  4868  003E3E  6ADA               	clrf	fsr2h,c
  4869  003E40  006F FF78  F440    	movff	postinc2,_prec
  4870  003E46  006F FF78  F441    	movff	postinc2,_prec+1
  4871                           
  4872                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:             } el
      +                          se {
  4873  003E4C  D038               	goto	u7730
  4874  003E4E                     l5966:
  4875                           
  4876                           ; BSR set to: 4
  4877                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:                 
      +                          prec = atoi(*fmt);
  4878  003E4E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4879  003E50  6ED9               	movwf	fsr2l,c
  4880  003E52  6ADA               	clrf	fsr2h,c
  4881  003E54  50DF               	movf	indf2,w,c
  4882  003E56  6E08               	movwf	atoi@s^0,c
  4883  003E58  ECFD  F026         	call	_atoi	;wreg free
  4884  003E5C  0060  F020  F440   	movff	?_atoi,_prec
  4885  003E62  0060  F024  F441   	movff	?_atoi+1,_prec+1
  4886                           
  4887                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:                 
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  4888  003E68  D004               	goto	l5970
  4889  003E6A                     l5968:
  4890                           
  4891                           ; BSR set to: 0
  4892                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:                 
      +                              ++*fmt;
  4893  003E6A  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4894  003E6C  6ED9               	movwf	fsr2l,c
  4895  003E6E  6ADA               	clrf	fsr2h,c
  4896  003E70  2ADF               	incf	indf2,f,c
  4897  003E72                     l5970:
  4898  003E72  0ED0               	movlw	208
  4899  003E74  0100               	movlb	0	; () banked
  4900  003E76  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4901  003E78  0EFF               	movlw	255
  4902  003E7A  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  4903  003E7C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4904  003E7E  6ED9               	movwf	fsr2l,c
  4905  003E80  6ADA               	clrf	fsr2h,c
  4906  003E82  006F FF7F FFF6     	movff	indf2,tblptrl
  4907  003E88                     	if	1	;There is more than 1 active tblptr byte
  4908  003E88  0E20               	movlw	high __smallconst
  4909  003E8A  6EF7               	movwf	tblptrh,c
  4910  003E8C                     	endif
  4911  003E8C                     	if	0	;tblptru may be non-zero
  4912  003E8C                     	endif
  4913  003E8C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4914  003E8C  0E00               	movlw	low (__smallconst shr (0+16))
  4915  003E8E  6EF8               	movwf	tblptru,c
  4916  003E90                     	endif
  4917  003E90  0008               	tblrd		*
  4918  003E92  50F5               	movf	tablat,w,c
  4919  003E94  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  4920  003E96  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  4921  003E98  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  4922  003E9A  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  4923  003E9C  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  4924  003E9E  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  4925  003EA0  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  4926  003EA2  E106               	bnz	u7710
  4927  003EA4  0E0A               	movlw	10
  4928  003EA6  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  4929  003EA8  B0D8               	btfsc	status,0,c
  4930  003EAA  D002               	goto	u7710
  4931  003EAC  0E01               	movlw	1
  4932  003EAE  D001               	goto	u7720
  4933  003EB0                     u7710:
  4934  003EB0  0E00               	movlw	0
  4935  003EB2                     u7720:
  4936  003EB2  6FA9               	movwf	_vfpfcnvrt$647& (0+255),b
  4937  003EB4  6BAA               	clrf	(_vfpfcnvrt$647+1)& (0+255),b
  4938                           
  4939                           ; BSR set to: 0
  4940  003EB6  51A9               	movf	_vfpfcnvrt$647& (0+255),w,b
  4941  003EB8  11AA               	iorwf	(_vfpfcnvrt$647+1)& (0+255),w,b
  4942  003EBA  A4D8               	btfss	status,2,c
  4943  003EBC  D7D6               	goto	l5968
  4944  003EBE                     u7730:
  4945                           
  4946                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:         ct[0] = 
      +                          tolower((int)(*fmt)[0]);
  4947  003EBE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4948  003EC0  6ED9               	movwf	fsr2l,c
  4949  003EC2  6ADA               	clrf	fsr2h,c
  4950  003EC4  006F FF7F FFF6     	movff	indf2,tblptrl
  4951  003ECA                     	if	1	;There is more than 1 active tblptr byte
  4952  003ECA  0E20               	movlw	high __smallconst
  4953  003ECC  6EF7               	movwf	tblptrh,c
  4954  003ECE                     	endif
  4955  003ECE                     	if	0	;tblptru may be non-zero
  4956  003ECE                     	endif
  4957  003ECE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4958  003ECE  0E00               	movlw	low (__smallconst shr (0+16))
  4959  003ED0  6EF8               	movwf	tblptru,c
  4960  003ED2                     	endif
  4961  003ED2  0008               	tblrd		*
  4962  003ED4  50F5               	movf	tablat,w,c
  4963  003ED6  6E07               	movwf	tolower@c^0,c
  4964  003ED8  6A08               	clrf	(tolower@c+1)^0,c
  4965  003EDA  EC3D  F030         	call	_tolower	;wreg free
  4966  003EDE  5007               	movf	?_tolower^0,w,c
  4967  003EE0  0100               	movlb	0	; () banked
  4968  003EE2  6FAD               	movwf	vfpfcnvrt@ct& (0+255),b
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:         if (ct[0
      +                          ]) {
  4972  003EE4  51AD               	movf	vfpfcnvrt@ct& (0+255),w,b
  4973  003EE6  B4D8               	btfsc	status,2,c
  4974  003EE8  D031               	goto	l5986
  4975                           
  4976                           ; BSR set to: 0
  4977                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:             ct[1
      +                          ] = tolower((int)(*fmt)[1]);
  4978  003EEA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  4979  003EEC  6ED9               	movwf	fsr2l,c
  4980  003EEE  6ADA               	clrf	fsr2h,c
  4981  003EF0  50DF               	movf	indf2,w,c
  4982  003EF2  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  4983  003EF4  0E01               	movlw	1
  4984  003EF6  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  4985  003EF8  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  4986  003EFE                     	if	1	;There is more than 1 active tblptr byte
  4987  003EFE  0E20               	movlw	high __smallconst
  4988  003F00  6EF7               	movwf	tblptrh,c
  4989  003F02                     	endif
  4990  003F02                     	if	0	;tblptru may be non-zero
  4991  003F02                     	endif
  4992  003F02                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  4993  003F02  0E00               	movlw	low (__smallconst shr (0+16))
  4994  003F04  6EF8               	movwf	tblptru,c
  4995  003F06                     	endif
  4996  003F06  0008               	tblrd		*
  4997  003F08  50F5               	movf	tablat,w,c
  4998  003F0A  6E07               	movwf	tolower@c^0,c
  4999  003F0C  6A08               	clrf	(tolower@c+1)^0,c
  5000  003F0E  EC3D  F030         	call	_tolower	;wreg free
  5001  003F12  5007               	movf	?_tolower^0,w,c
  5002  003F14  0100               	movlb	0	; () banked
  5003  003F16  6FAE               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  5004                           
  5005                           ; BSR set to: 0
  5006                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:             if (
      +                          ct[1]) {
  5007  003F18  51AE               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  5008  003F1A  B4D8               	btfsc	status,2,c
  5009  003F1C  D017               	goto	l5986
  5010                           
  5011                           ; BSR set to: 0
  5012                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:                 
      +                          ct[2] = tolower((int)(*fmt)[2]);
  5013  003F1E  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5014  003F20  6ED9               	movwf	fsr2l,c
  5015  003F22  6ADA               	clrf	fsr2h,c
  5016  003F24  50DF               	movf	indf2,w,c
  5017  003F26  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5018  003F28  0E02               	movlw	2
  5019  003F2A  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5020  003F2C  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5021  003F32                     	if	1	;There is more than 1 active tblptr byte
  5022  003F32  0E20               	movlw	high __smallconst
  5023  003F34  6EF7               	movwf	tblptrh,c
  5024  003F36                     	endif
  5025  003F36                     	if	0	;tblptru may be non-zero
  5026  003F36                     	endif
  5027  003F36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5028  003F36  0E00               	movlw	low (__smallconst shr (0+16))
  5029  003F38  6EF8               	movwf	tblptru,c
  5030  003F3A                     	endif
  5031  003F3A  0008               	tblrd		*
  5032  003F3C  50F5               	movf	tablat,w,c
  5033  003F3E  6E07               	movwf	tolower@c^0,c
  5034  003F40  6A08               	clrf	(tolower@c+1)^0,c
  5035  003F42  EC3D  F030         	call	_tolower	;wreg free
  5036  003F46  5007               	movf	?_tolower^0,w,c
  5037  003F48  0100               	movlb	0	; () banked
  5038  003F4A  6FAF               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  5039  003F4C                     l5986:
  5040                           
  5041                           ; BSR set to: 0
  5042                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:         if (ct[0
      +                          ] == 'f') {
  5043  003F4C  0E66               	movlw	102
  5044  003F4E  19AD               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  5045  003F50  A4D8               	btfss	status,2,c
  5046  003F52  D044               	goto	l5998
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:             c = 
      +                          (*fmt)[0];
  5050  003F54  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5051  003F56  6ED9               	movwf	fsr2l,c
  5052  003F58  6ADA               	clrf	fsr2h,c
  5053  003F5A  006F FF7F FFF6     	movff	indf2,tblptrl
  5054  003F60                     	if	1	;There is more than 1 active tblptr byte
  5055  003F60  0E20               	movlw	high __smallconst
  5056  003F62  6EF7               	movwf	tblptrh,c
  5057  003F64                     	endif
  5058  003F64                     	if	0	;tblptru may be non-zero
  5059  003F64                     	endif
  5060  003F64                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5061  003F64  0E00               	movlw	low (__smallconst shr (0+16))
  5062  003F66  6EF8               	movwf	tblptru,c
  5063  003F68                     	endif
  5064  003F68  0008               	tblrd		*
  5065  003F6A  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5066                           
  5067                           ; BSR set to: 0
  5068                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:             ++*f
      +                          mt;
  5069  003F70  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5070  003F72  6ED9               	movwf	fsr2l,c
  5071  003F74  6ADA               	clrf	fsr2h,c
  5072  003F76  2ADF               	incf	indf2,f,c
  5073                           
  5074                           ; BSR set to: 0
  5075                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:             f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5076  003F78  505F               	movf	vfpfcnvrt@ap^0,w,c
  5077  003F7A  6ED9               	movwf	fsr2l,c
  5078  003F7C  6ADA               	clrf	fsr2h,c
  5079  003F7E  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5080  003F84  0E04               	movlw	4
  5081  003F86  26DF               	addwf	indf2,f,c
  5082  003F88  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5083  003F8A  6ED9               	movwf	fsr2l,c
  5084  003F8C  6ADA               	clrf	fsr2h,c
  5085  003F8E  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5086  003F94  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5087  003F9A  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5088  003FA0  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5089  003FA6                     l5994:
  5090                           
  5091                           ; BSR set to: 0
  5092                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:             retu
      +                          rn efgtoa(fp, f, c);
  5093  003FA6  0060  F174  F060   	movff	vfpfcnvrt@fp,efgtoa@fp
  5094  003FAC  0060  F2C0  F061   	movff	vfpfcnvrt@f,efgtoa@f
  5095  003FB2  0060  F2C4  F062   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  5096  003FB8  0060  F2C8  F063   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  5097  003FBE  0060  F2CC  F064   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  5098  003FC4  0060  F2D0  F065   	movff	vfpfcnvrt@c,efgtoa@c
  5099  003FCA  EC7F  F010         	call	_efgtoa	;wreg free
  5100  003FCE  0060  F180  F05D   	movff	?_efgtoa,?_vfpfcnvrt
  5101  003FD4  0060  F184  F05E   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  5102  003FDA  0012               	return	
  5103  003FDC                     l5998:
  5104                           
  5105                           ; BSR set to: 0
  5106                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:         if (!str
      +                          ncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  5107  003FDC  0EAD               	movlw	low vfpfcnvrt@ct
  5108  003FDE  6E01               	movwf	strncmp@_l^0,c
  5109  003FE0  0EF9               	movlw	low STR_20
  5110  003FE2  6E02               	movwf	strncmp@_r^0,c
  5111  003FE4  0E00               	movlw	0
  5112  003FE6  6E04               	movwf	(strncmp@n+1)^0,c
  5113  003FE8  0E02               	movlw	2
  5114  003FEA  6E03               	movwf	strncmp@n^0,c
  5115  003FEC  EC14  F02C         	call	_strncmp	;wreg free
  5116  003FF0  5001               	movf	?_strncmp^0,w,c
  5117  003FF2  1002               	iorwf	(?_strncmp+1)^0,w,c
  5118  003FF4  A4D8               	btfss	status,2,c
  5119  003FF6  D052               	goto	l6014
  5120                           
  5121                           ; BSR set to: 0
  5122                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:             if (
      +                          (0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  5123  003FF8  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5124  003FFA  6ED9               	movwf	fsr2l,c
  5125  003FFC  6ADA               	clrf	fsr2h,c
  5126  003FFE  50DF               	movf	indf2,w,c
  5127  004000  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5128  004002  0E01               	movlw	1
  5129  004004  27A3               	addwf	??_vfpfcnvrt& (0+255),f,b
  5130  004006  0060  F28F  FFF6   	movff	??_vfpfcnvrt,tblptrl
  5131  00400C                     	if	1	;There is more than 1 active tblptr byte
  5132  00400C  0E20               	movlw	high __smallconst
  5133  00400E  6EF7               	movwf	tblptrh,c
  5134  004010                     	endif
  5135  004010                     	if	0	;tblptru may be non-zero
  5136  004010                     	endif
  5137  004010                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5138  004010  0E00               	movlw	low (__smallconst shr (0+16))
  5139  004012  6EF8               	movwf	tblptru,c
  5140  004014                     	endif
  5141  004014  0008               	tblrd		*
  5142  004016  006F FFD4  F0B4    	movff	tablat,vfpfcnvrt@c
  5143  00401C  0EBF               	movlw	191
  5144  00401E  6FA3               	movwf	??_vfpfcnvrt& (0+255),b
  5145  004020  0EFF               	movlw	255
  5146  004022  6FA4               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5147  004024  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5148  004026  6ED9               	movwf	fsr2l,c
  5149  004028  6ADA               	clrf	fsr2h,c
  5150  00402A  006F FF7F FFF6     	movff	indf2,tblptrl
  5151  004030                     	if	1	;There is more than 1 active tblptr byte
  5152  004030  0E20               	movlw	high __smallconst
  5153  004032  6EF7               	movwf	tblptrh,c
  5154  004034                     	endif
  5155  004034                     	if	0	;tblptru may be non-zero
  5156  004034                     	endif
  5157  004034                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5158  004034  0E00               	movlw	low (__smallconst shr (0+16))
  5159  004036  6EF8               	movwf	tblptru,c
  5160  004038                     	endif
  5161  004038  0008               	tblrd		*
  5162  00403A  50F5               	movf	tablat,w,c
  5163  00403C  6FA5               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5164  00403E  6BA6               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5165  004040  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5166  004042  27A5               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5167  004044  51A4               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5168  004046  23A6               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5169  004048  51A6               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5170  00404A  E106               	bnz	u7780
  5171  00404C  0E1A               	movlw	26
  5172  00404E  5DA5               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5173  004050  B0D8               	btfsc	status,0,c
  5174  004052  D002               	goto	u7780
  5175  004054  0E01               	movlw	1
  5176  004056  D001               	goto	u7790
  5177  004058                     u7780:
  5178  004058  0E00               	movlw	0
  5179  00405A                     u7790:
  5180  00405A  6FAB               	movwf	_vfpfcnvrt$651& (0+255),b
  5181  00405C  6BAC               	clrf	(_vfpfcnvrt$651+1)& (0+255),b
  5182                           
  5183                           ; BSR set to: 0
  5184  00405E  51AB               	movf	_vfpfcnvrt$651& (0+255),w,b
  5185  004060  11AC               	iorwf	(_vfpfcnvrt$651+1)& (0+255),w,b
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:                 
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  5189                           
  5190                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:             } el
      +                          se {
  5191                           
  5192                           ; BSR set to: 0
  5193                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:                 
      +                          f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  5194  004062  505F               	movf	vfpfcnvrt@ap^0,w,c
  5195  004064  6ED9               	movwf	fsr2l,c
  5196  004066  6ADA               	clrf	fsr2h,c
  5197  004068  006F FF7C  F0A3    	movff	indf2,??_vfpfcnvrt
  5198  00406E  0E04               	movlw	4
  5199  004070  26DF               	addwf	indf2,f,c
  5200  004072  51A3               	movf	??_vfpfcnvrt& (0+255),w,b
  5201  004074  6ED9               	movwf	fsr2l,c
  5202  004076  6ADA               	clrf	fsr2h,c
  5203  004078  006F FF78  F0B0    	movff	postinc2,vfpfcnvrt@f
  5204  00407E  006F FF78  F0B1    	movff	postinc2,vfpfcnvrt@f+1
  5205  004084  006F FF78  F0B2    	movff	postinc2,vfpfcnvrt@f+2
  5206  00408A  006F FF78  F0B3    	movff	postinc2,vfpfcnvrt@f+3
  5207                           
  5208                           ; BSR set to: 0
  5209                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:             *fmt
      +                           += ((sizeof("lf")/sizeof("lf"[0]))-1);
  5210                           
  5211                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 935:             }
  5212  004090  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5213  004092  6ED9               	movwf	fsr2l,c
  5214  004094  6ADA               	clrf	fsr2h,c
  5215  004096  0E02               	movlw	2
  5216  004098  26DF               	addwf	indf2,f,c
  5217  00409A  D785               	goto	l5994
  5218  00409C                     l6014:
  5219                           
  5220                           ; BSR set to: 0
  5221                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:         if ((*f
      +                          mt)[0] == '%') {
  5222  00409C  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5223  00409E  6ED9               	movwf	fsr2l,c
  5224  0040A0  6ADA               	clrf	fsr2h,c
  5225  0040A2  006F FF7F FFF6     	movff	indf2,tblptrl
  5226  0040A8                     	if	1	;There is more than 1 active tblptr byte
  5227  0040A8  0E20               	movlw	high __smallconst
  5228  0040AA  6EF7               	movwf	tblptrh,c
  5229  0040AC                     	endif
  5230  0040AC                     	if	0	;tblptru may be non-zero
  5231  0040AC                     	endif
  5232  0040AC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5233  0040AC  0E00               	movlw	low (__smallconst shr (0+16))
  5234  0040AE  6EF8               	movwf	tblptru,c
  5235  0040B0                     	endif
  5236  0040B0  0008               	tblrd		*
  5237  0040B2  50F5               	movf	tablat,w,c
  5238  0040B4  0A25               	xorlw	37
  5239  0040B6  A4D8               	btfss	status,2,c
  5240  0040B8  D012               	goto	l6024
  5241                           
  5242                           ; BSR set to: 0
  5243                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:             ++*
      +                          fmt;
  5244  0040BA  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5245  0040BC  6ED9               	movwf	fsr2l,c
  5246  0040BE  6ADA               	clrf	fsr2h,c
  5247  0040C0  2ADF               	incf	indf2,f,c
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:             fpu
      +                          tc((int)'%', fp);
  5251  0040C2  0E00               	movlw	0
  5252  0040C4  6E02               	movwf	(fputc@c+1)^0,c
  5253  0040C6  0E25               	movlw	37
  5254  0040C8  6E01               	movwf	fputc@c^0,c
  5255  0040CA  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5256  0040D0  EC1C  F02E         	call	_fputc	;wreg free
  5257  0040D4                     l6020:
  5258                           
  5259                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:             ret
      +                          urn 1;
  5260  0040D4  0E00               	movlw	0
  5261  0040D6  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5262  0040D8  0E01               	movlw	1
  5263  0040DA  6E5D               	movwf	?_vfpfcnvrt^0,c
  5264  0040DC  0012               	return	
  5265  0040DE                     l6024:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  5269  0040DE  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5270  0040E0  6ED9               	movwf	fsr2l,c
  5271  0040E2  6ADA               	clrf	fsr2h,c
  5272  0040E4  2ADF               	incf	indf2,f,c
  5273                           
  5274                           ; BSR set to: 0
  5275                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:         return 
      +                          0;
  5276  0040E6  0E00               	movlw	0
  5277  0040E8  6E5E               	movwf	(?_vfpfcnvrt+1)^0,c
  5278  0040EA  0E00               	movlw	0
  5279  0040EC  6E5D               	movwf	?_vfpfcnvrt^0,c
  5280  0040EE  0012               	return	
  5281  0040F0                     l6030:
  5282                           
  5283                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)
      +                          (*fmt)[0], fp);
  5284  0040F0  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5285  0040F2  6ED9               	movwf	fsr2l,c
  5286  0040F4  6ADA               	clrf	fsr2h,c
  5287  0040F6  006F FF7F FFF6     	movff	indf2,tblptrl
  5288  0040FC                     	if	1	;There is more than 1 active tblptr byte
  5289  0040FC  0E20               	movlw	high __smallconst
  5290  0040FE  6EF7               	movwf	tblptrh,c
  5291  004100                     	endif
  5292  004100                     	if	0	;tblptru may be non-zero
  5293  004100                     	endif
  5294  004100                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5295  004100  0E00               	movlw	low (__smallconst shr (0+16))
  5296  004102  6EF8               	movwf	tblptru,c
  5297  004104                     	endif
  5298  004104  0008               	tblrd		*
  5299  004106  50F5               	movf	tablat,w,c
  5300  004108  6E01               	movwf	fputc@c^0,c
  5301  00410A  6A02               	clrf	(fputc@c+1)^0,c
  5302  00410C  0060  F174  F003   	movff	vfpfcnvrt@fp,fputc@fp
  5303  004112  EC1C  F02E         	call	_fputc	;wreg free
  5304                           
  5305                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5306  004116  505E               	movf	vfpfcnvrt@fmt^0,w,c
  5307  004118  6ED9               	movwf	fsr2l,c
  5308  00411A  6ADA               	clrf	fsr2h,c
  5309  00411C  2ADF               	incf	indf2,f,c
  5310  00411E  D7DA               	goto	l6020
  5311  004120                     __end_of_vfpfcnvrt:
  5312                           	opt callstack 0
  5313                           
  5314 ;; *************** function _strncmp *****************
  5315 ;; Defined at:
  5316 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  _l              1    0[COMRAM] PTR const unsigned char 
  5319 ;;		 -> vfpfcnvrt@ct(3), 
  5320 ;;  _r              1    1[COMRAM] PTR const unsigned char 
  5321 ;;		 -> STR_22(3), 
  5322 ;;  n               2    2[COMRAM] unsigned int 
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;  r               1    6[COMRAM] PTR const unsigned char 
  5325 ;;		 -> STR_22(3), 
  5326 ;;  l               1    5[COMRAM] PTR const unsigned char 
  5327 ;;		 -> vfpfcnvrt@ct(3), 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  2    0[COMRAM] int 
  5330 ;; Registers used:
  5331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5332 ;; Tracked objects:
  5333 ;;		On entry : 3F/0
  5334 ;;		On exit  : 3F/0
  5335 ;;		Unchanged: 3F/0
  5336 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5337 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5339 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5340 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5341 ;;Total ram usage:        7 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; This function calls:
  5344 ;;		Nothing
  5345 ;; This function is called by:
  5346 ;;		_vfpfcnvrt
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text12
  5351  005828                     __ptext12:
  5352                           	opt callstack 0
  5353  005828                     _strncmp:
  5354                           	opt callstack 26
  5355                           
  5356                           ; BSR set to: 0
  5357                           
  5358                           ;incstack = 0
  5359  005828  0060  F004  F006   	movff	strncmp@_l,strncmp@l
  5360  00582E  0060  F008  F007   	movff	strncmp@_r,strncmp@r
  5361  005834  0603               	decf	strncmp@n^0,f,c
  5362  005836  A0D8               	btfss	status,0,c
  5363  005838  0604               	decf	(strncmp@n+1)^0,f,c
  5364  00583A  2803               	incf	strncmp@n^0,w,c
  5365  00583C  E10D               	bnz	l4712
  5366  00583E  2804               	incf	(strncmp@n+1)^0,w,c
  5367  005840  A4D8               	btfss	status,2,c
  5368  005842  D00A               	goto	l4712
  5369                           
  5370                           ; BSR set to: 0
  5371  005844  0E00               	movlw	0
  5372  005846  6E02               	movwf	(?_strncmp+1)^0,c
  5373  005848  0E00               	movlw	0
  5374  00584A  6E01               	movwf	?_strncmp^0,c
  5375  00584C  0012               	return	
  5376  00584E                     l4710:
  5377                           
  5378                           ; BSR set to: 0
  5379  00584E  2A06               	incf	strncmp@l^0,f,c
  5380  005850  2A07               	incf	strncmp@r^0,f,c
  5381  005852  0603               	decf	strncmp@n^0,f,c
  5382  005854  A0D8               	btfss	status,0,c
  5383  005856  0604               	decf	(strncmp@n+1)^0,f,c
  5384  005858                     l4712:
  5385                           
  5386                           ; BSR set to: 0
  5387  005858  5006               	movf	strncmp@l^0,w,c
  5388  00585A  6ED9               	movwf	fsr2l,c
  5389  00585C  6ADA               	clrf	fsr2h,c
  5390  00585E  50DF               	movf	indf2,w,c
  5391  005860  B4D8               	btfsc	status,2,c
  5392  005862  D021               	goto	u5640
  5393                           
  5394                           ; BSR set to: 0
  5395  005864  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5396  00586A                     	if	1	;There is more than 1 active tblptr byte
  5397  00586A  0E20               	movlw	high __smallconst
  5398  00586C  6EF7               	movwf	tblptrh,c
  5399  00586E                     	endif
  5400  00586E                     	if	0	;tblptru may be non-zero
  5401  00586E                     	endif
  5402  00586E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5403  00586E  0E00               	movlw	low (__smallconst shr (0+16))
  5404  005870  6EF8               	movwf	tblptru,c
  5405  005872                     	endif
  5406  005872  0008               	tblrd		*
  5407  005874  50F5               	movf	tablat,w,c
  5408  005876  0900               	iorlw	0
  5409  005878  B4D8               	btfsc	status,2,c
  5410  00587A  D015               	goto	u5640
  5411                           
  5412                           ; BSR set to: 0
  5413  00587C  5003               	movf	strncmp@n^0,w,c
  5414  00587E  1004               	iorwf	(strncmp@n+1)^0,w,c
  5415  005880  B4D8               	btfsc	status,2,c
  5416  005882  D011               	goto	u5640
  5417                           
  5418                           ; BSR set to: 0
  5419  005884  5006               	movf	strncmp@l^0,w,c
  5420  005886  6ED9               	movwf	fsr2l,c
  5421  005888  6ADA               	clrf	fsr2h,c
  5422  00588A  50DF               	movf	indf2,w,c
  5423  00588C  6E05               	movwf	??_strncmp^0,c
  5424  00588E  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5425  005894                     	if	1	;There is more than 1 active tblptr byte
  5426  005894  0E20               	movlw	high __smallconst
  5427  005896  6EF7               	movwf	tblptrh,c
  5428  005898                     	endif
  5429  005898                     	if	0	;tblptru may be non-zero
  5430  005898                     	endif
  5431  005898                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5432  005898  0E00               	movlw	low (__smallconst shr (0+16))
  5433  00589A  6EF8               	movwf	tblptru,c
  5434  00589C                     	endif
  5435  00589C  0008               	tblrd		*
  5436  00589E  50F5               	movf	tablat,w,c
  5437  0058A0  1805               	xorwf	??_strncmp^0,w,c
  5438  0058A2  B4D8               	btfsc	status,2,c
  5439  0058A4  D7D4               	goto	l4710
  5440  0058A6                     u5640:
  5441                           
  5442                           ; BSR set to: 0
  5443  0058A6  5006               	movf	strncmp@l^0,w,c
  5444  0058A8  6ED9               	movwf	fsr2l,c
  5445  0058AA  6ADA               	clrf	fsr2h,c
  5446  0058AC  50DF               	movf	indf2,w,c
  5447  0058AE  6E05               	movwf	??_strncmp^0,c
  5448  0058B0  0060  F01F  FFF6   	movff	strncmp@r,tblptrl
  5449  0058B6                     	if	1	;There is more than 1 active tblptr byte
  5450  0058B6  0E20               	movlw	high __smallconst
  5451  0058B8  6EF7               	movwf	tblptrh,c
  5452  0058BA                     	endif
  5453  0058BA                     	if	0	;tblptru may be non-zero
  5454  0058BA                     	endif
  5455  0058BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  5456  0058BA  0E00               	movlw	low (__smallconst shr (0+16))
  5457  0058BC  6EF8               	movwf	tblptru,c
  5458  0058BE                     	endif
  5459  0058BE  0008               	tblrd		*
  5460  0058C0  50F5               	movf	tablat,w,c
  5461  0058C2  5C05               	subwf	??_strncmp^0,w,c
  5462  0058C4  6E01               	movwf	?_strncmp^0,c
  5463  0058C6  6A02               	clrf	(?_strncmp+1)^0,c
  5464  0058C8  A0D8               	btfss	status,0,c
  5465  0058CA  0602               	decf	(?_strncmp+1)^0,f,c
  5466                           
  5467                           ; BSR set to: 0
  5468  0058CC  0012               	return		;funcret
  5469  0058CE                     __end_of_strncmp:
  5470                           	opt callstack 0
  5471                           
  5472 ;; *************** function _efgtoa *****************
  5473 ;; Defined at:
  5474 ;;		line 319 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;  fp              1    0[BANK0 ] PTR struct _IO_FILE
  5477 ;;		 -> sprintf@f(5), 
  5478 ;;  f               4    1[BANK0 ] PTR struct _IO_FILE
  5479 ;;  c               1    5[BANK0 ] unsigned char 
  5480 ;; Auto vars:     Size  Location     Type
  5481 ;;  u               4   63[BANK0 ] unsigned char 
  5482 ;;  g               4   55[BANK0 ] unsigned char 
  5483 ;;  l               4   49[BANK0 ] unsigned char 
  5484 ;;  h               4   45[BANK0 ] unsigned char 
  5485 ;;  ou              4   11[BANK0 ] unsigned char 
  5486 ;;  n               2   61[BANK0 ] int 
  5487 ;;  e               2   59[BANK0 ] int 
  5488 ;;  i               2   53[BANK0 ] int 
  5489 ;;  w               2   42[BANK0 ] int 
  5490 ;;  p               2   39[BANK0 ] int 
  5491 ;;  sign            2   37[BANK0 ] int 
  5492 ;;  d               2   35[BANK0 ] int 
  5493 ;;  ne              2   33[BANK0 ] int 
  5494 ;;  m               2   31[BANK0 ] int 
  5495 ;;  pp              2   29[BANK0 ] int 
  5496 ;;  t               2   27[BANK0 ] int 
  5497 ;;  mode            1   44[BANK0 ] unsigned char 
  5498 ;;  nmode           1   41[BANK0 ] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  2    0[BANK0 ] int 
  5501 ;; Registers used:
  5502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5503 ;; Tracked objects:
  5504 ;;		On entry : 3B/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  5508 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5509 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5510 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5511 ;;      Totals:         0      67       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5512 ;;Total ram usage:       67 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    4
  5515 ;; This function calls:
  5516 ;;		___awdiv
  5517 ;;		___awmod
  5518 ;;		___fladd
  5519 ;;		___fldiv
  5520 ;;		___fleq
  5521 ;;		___flge
  5522 ;;		___flmul
  5523 ;;		___flneg
  5524 ;;		___flsub
  5525 ;;		___fltol
  5526 ;;		___fpclassifyf
  5527 ;;		_floorf
  5528 ;;		_isupper
  5529 ;;		_pad
  5530 ;;		_strcpy
  5531 ;;		_tolower
  5532 ;; This function is called by:
  5533 ;;		_vfpfcnvrt
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           	psect	text13
  5538  0020FE                     __ptext13:
  5539                           	opt callstack 0
  5540  0020FE                     _efgtoa:
  5541                           	opt callstack 22
  5542                           
  5543                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static int efgto
      +                          a(FILE *fp, long double f, char c);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\comm
      +                          on\doprnt.c: 320: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 32
      +                          1:     char mode, nmode;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;F:\Programme\Microchip\xc8\v2.10\p
      +                          ic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;F:\Programme\Microc
      +                          hip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  5544                           
  5545                           ; BSR set to: 0
  5546                           ;incstack = 0
  5547  0020FE  0E00               	movlw	0
  5548  002100  0100               	movlb	0	; () banked
  5549  002102  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5550  002104  0E00               	movlw	0
  5551  002106  6F85               	movwf	efgtoa@sign& (0+255),b
  5552                           
  5553                           ; BSR set to: 0
  5554                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g = f;
  5555  002108  0060  F184  F097   	movff	efgtoa@f,efgtoa@g
  5556  00210E  0060  F188  F098   	movff	efgtoa@f+1,efgtoa@g+1
  5557  002114  0060  F18C  F099   	movff	efgtoa@f+2,efgtoa@g+2
  5558  00211A  0060  F190  F09A   	movff	efgtoa@f+3,efgtoa@g+3
  5559                           
  5560                           ; BSR set to: 0
  5561                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0)
      +                           {
  5562  002120  AF9A               	btfss	(efgtoa@g+3)& (0+255),7,b
  5563  002122  D01E               	goto	l5638
  5564                           
  5565                           ; BSR set to: 0
  5566                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:         sign = 1
      +                          ;
  5567  002124  0E00               	movlw	0
  5568  002126  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  5569  002128  0E01               	movlw	1
  5570  00212A  6F85               	movwf	efgtoa@sign& (0+255),b
  5571                           
  5572                           ; BSR set to: 0
  5573                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  5574  00212C  0060  F25C  F001   	movff	efgtoa@g,___flneg@f1
  5575  002132  0060  F260  F002   	movff	efgtoa@g+1,___flneg@f1+1
  5576  002138  0060  F264  F003   	movff	efgtoa@g+2,___flneg@f1+2
  5577  00213E  0060  F268  F004   	movff	efgtoa@g+3,___flneg@f1+3
  5578  002144  ECEC  F030         	call	___flneg	;wreg free
  5579  002148  0060  F004  F097   	movff	?___flneg,efgtoa@g
  5580  00214E  0060  F008  F098   	movff	?___flneg+1,efgtoa@g+1
  5581  002154  0060  F00C  F099   	movff	?___flneg+2,efgtoa@g+2
  5582  00215A  0060  F010  F09A   	movff	?___flneg+3,efgtoa@g+3
  5583  002160                     l5638:
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  5587  002160  0E00               	movlw	0
  5588  002162  6F9E               	movwf	(efgtoa@n+1)& (0+255),b
  5589  002164  0E00               	movlw	0
  5590  002166  6F9D               	movwf	efgtoa@n& (0+255),b
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w = width;
  5594  002168  0061  F0F8  F08A   	movff	_width,efgtoa@w
  5595  00216E  0061  F0FC  F08B   	movff	_width+1,efgtoa@w+1
  5596                           
  5597                           ; BSR set to: 0
  5598                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if (sign || 
      +                          (flags & (1 << 2))) {
  5599  002174  5185               	movf	efgtoa@sign& (0+255),w,b
  5600  002176  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5601  002178  A4D8               	btfss	status,2,c
  5602  00217A  D003               	goto	u7130
  5603                           
  5604                           ; BSR set to: 0
  5605  00217C  0104               	movlb	4	; () banked
  5606  00217E  A542               	btfss	_flags& (0+255),2,b
  5607  002180  D015               	goto	l5658
  5608  002182                     u7130:
  5609                           
  5610                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] 
      +                          = sign ? '-' : '+';
  5611  002182  0100               	movlb	0	; () banked
  5612  002184  5185               	movf	efgtoa@sign& (0+255),w,b
  5613  002186  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5614  002188  A4D8               	btfss	status,2,c
  5615  00218A  D004               	goto	l5650
  5616                           
  5617                           ; BSR set to: 0
  5618  00218C  0E00               	movlw	0
  5619  00218E  6F70               	movwf	(_efgtoa$620+1)& (0+255),b
  5620  002190  0E2B               	movlw	43
  5621  002192  D003               	goto	L3
  5622  002194                     l5650:
  5623                           
  5624                           ; BSR set to: 0
  5625  002194  0E00               	movlw	0
  5626  002196  6F70               	movwf	(_efgtoa$620+1)& (0+255),b
  5627  002198  0E2D               	movlw	45
  5628  00219A                     L3:
  5629  00219A  6F6F               	movwf	_efgtoa$620& (0+255),b
  5630                           
  5631                           ; BSR set to: 0
  5632  00219C  0060  F1BC  F44C   	movff	_efgtoa$620,_dbuf
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:         ++n;
  5636  0021A2  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  5637  0021A4  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:         --w;
  5641  0021A6  078A               	decf	efgtoa@w& (0+255),f,b
  5642  0021A8  A0D8               	btfss	status,0,c
  5643  0021AA  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  5644  0021AC                     l5658:
  5645                           
  5646                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5647  0021AC  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5648  0021B2  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5649  0021B8  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5650  0021BE  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5651  0021C4  EC9A  F029         	call	___fpclassifyf	;wreg free
  5652  0021C8  0401               	decf	?___fpclassifyf^0,w,c
  5653  0021CA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5654  0021CC  A4D8               	btfss	status,2,c
  5655  0021CE  D053               	goto	l5676
  5656  0021D0  0EBF               	movlw	191
  5657  0021D2  0100               	movlb	0	; () banked
  5658  0021D4  6F66               	movwf	??_efgtoa& (0+255),b
  5659  0021D6  0EFF               	movlw	255
  5660  0021D8  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5661  0021DA  5165               	movf	efgtoa@c& (0+255),w,b
  5662  0021DC  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5663  0021DE  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5664  0021E0  5166               	movf	??_efgtoa& (0+255),w,b
  5665  0021E2  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5666  0021E4  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5667  0021E6  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5668  0021E8  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5669  0021EA  E106               	bnz	u7160
  5670  0021EC  0E1A               	movlw	26
  5671  0021EE  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5672  0021F0  B0D8               	btfsc	status,0,c
  5673  0021F2  D002               	goto	u7160
  5674  0021F4  0E01               	movlw	1
  5675  0021F6  D001               	goto	u7170
  5676  0021F8                     u7160:
  5677  0021F8  0E00               	movlw	0
  5678  0021FA                     u7170:
  5679  0021FA  6F71               	movwf	_efgtoa$621& (0+255),b
  5680  0021FC  6B72               	clrf	(_efgtoa$621+1)& (0+255),b
  5681                           
  5682                           ; BSR set to: 0
  5683  0021FE  5171               	movf	_efgtoa$621& (0+255),w,b
  5684  002200  1172               	iorwf	(_efgtoa$621+1)& (0+255),w,b
  5685  002202  B4D8               	btfsc	status,2,c
  5686  002204  D00F               	goto	l5668
  5687                           
  5688                           ; BSR set to: 0
  5689                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:             strc
      +                          py(&dbuf[n], "INF");
  5690  002206  0E4C               	movlw	low _dbuf
  5691  002208  259D               	addwf	efgtoa@n& (0+255),w,b
  5692  00220A  6E01               	movwf	strcpy@dest^0,c
  5693  00220C  0E04               	movlw	high _dbuf
  5694  00220E  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5695  002210  6E02               	movwf	(strcpy@dest+1)^0,c
  5696  002212  0EE9               	movlw	low STR_12
  5697  002214  6E03               	movwf	strcpy@src^0,c
  5698  002216  5003               	movf	strcpy@src^0,w,c
  5699  002218  A4D8               	btfss	status,2,c
  5700  00221A  0E20               	movlw	high __smallconst
  5701  00221C  6E04               	movwf	(strcpy@src+1)^0,c
  5702  00221E  EC80  F02F         	call	_strcpy	;wreg free
  5703                           
  5704                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:         } else {
  5705  002222  D00E               	goto	l5670
  5706  002224                     l5668:
  5707                           
  5708                           ; BSR set to: 0
  5709                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:             strc
      +                          py(&dbuf[n], "inf");
  5710  002224  0E4C               	movlw	low _dbuf
  5711  002226  259D               	addwf	efgtoa@n& (0+255),w,b
  5712  002228  6E01               	movwf	strcpy@dest^0,c
  5713  00222A  0E04               	movlw	high _dbuf
  5714  00222C  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5715  00222E  6E02               	movwf	(strcpy@dest+1)^0,c
  5716  002230  0EF1               	movlw	low STR_13
  5717  002232  6E03               	movwf	strcpy@src^0,c
  5718  002234  5003               	movf	strcpy@src^0,w,c
  5719  002236  A4D8               	btfss	status,2,c
  5720  002238  0E20               	movlw	high __smallconst
  5721  00223A  6E04               	movwf	(strcpy@src+1)^0,c
  5722  00223C  EC80  F02F         	call	_strcpy	;wreg free
  5723  002240                     l5670:
  5724                           
  5725                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:         w -= ((s
      +                          izeof("inf")/sizeof("inf"[0]))-1);
  5726  002240  0100               	movlb	0	; () banked
  5727  002242  0EFD               	movlw	253
  5728  002244  278A               	addwf	efgtoa@w& (0+255),f,b
  5729  002246  0EFF               	movlw	255
  5730  002248  238B               	addwfc	(efgtoa@w+1)& (0+255),f,b
  5731  00224A                     l5672:
  5732                           
  5733                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:         return p
      +                          ad(fp, &dbuf[0], w);
  5734  00224A  0060  F180  F00F   	movff	efgtoa@fp,pad@fp
  5735  002250  0E4C               	movlw	low _dbuf
  5736  002252  6E10               	movwf	pad@buf^0,c
  5737  002254  0E04               	movlw	high _dbuf
  5738  002256  6E11               	movwf	(pad@buf+1)^0,c
  5739  002258  0060  F228  F012   	movff	efgtoa@w,pad@p
  5740  00225E  0060  F22C  F013   	movff	efgtoa@w+1,pad@p+1
  5741  002264  EC67  F02C         	call	_pad	;wreg free
  5742  002268  0060  F03C  F060   	movff	?_pad,?_efgtoa
  5743  00226E  0060  F040  F061   	movff	?_pad+1,?_efgtoa+1
  5744  002274  0012               	return	
  5745  002276                     l5676:
  5746                           
  5747                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  5748  002276  0060  F25C  F001   	movff	efgtoa@g,___fpclassifyf@x
  5749  00227C  0060  F260  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  5750  002282  0060  F264  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  5751  002288  0060  F268  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  5752  00228E  EC9A  F029         	call	___fpclassifyf	;wreg free
  5753  002292  5001               	movf	?___fpclassifyf^0,w,c
  5754  002294  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  5755  002296  A4D8               	btfss	status,2,c
  5756  002298  D039               	goto	l5694
  5757  00229A  0EBF               	movlw	191
  5758  00229C  0100               	movlb	0	; () banked
  5759  00229E  6F66               	movwf	??_efgtoa& (0+255),b
  5760  0022A0  0EFF               	movlw	255
  5761  0022A2  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  5762  0022A4  5165               	movf	efgtoa@c& (0+255),w,b
  5763  0022A6  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  5764  0022A8  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  5765  0022AA  5166               	movf	??_efgtoa& (0+255),w,b
  5766  0022AC  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  5767  0022AE  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  5768  0022B0  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5769  0022B2  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  5770  0022B4  E106               	bnz	u7200
  5771  0022B6  0E1A               	movlw	26
  5772  0022B8  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  5773  0022BA  B0D8               	btfsc	status,0,c
  5774  0022BC  D002               	goto	u7200
  5775  0022BE  0E01               	movlw	1
  5776  0022C0  D001               	goto	u7210
  5777  0022C2                     u7200:
  5778  0022C2  0E00               	movlw	0
  5779  0022C4                     u7210:
  5780  0022C4  6F73               	movwf	_efgtoa$626& (0+255),b
  5781  0022C6  6B74               	clrf	(_efgtoa$626+1)& (0+255),b
  5782                           
  5783                           ; BSR set to: 0
  5784  0022C8  5173               	movf	_efgtoa$626& (0+255),w,b
  5785  0022CA  1174               	iorwf	(_efgtoa$626+1)& (0+255),w,b
  5786  0022CC  B4D8               	btfsc	status,2,c
  5787  0022CE  D00F               	goto	l5686
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:             strc
      +                          py(&dbuf[n], "NAN");
  5791  0022D0  0E4C               	movlw	low _dbuf
  5792  0022D2  259D               	addwf	efgtoa@n& (0+255),w,b
  5793  0022D4  6E01               	movwf	strcpy@dest^0,c
  5794  0022D6  0E04               	movlw	high _dbuf
  5795  0022D8  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5796  0022DA  6E02               	movwf	(strcpy@dest+1)^0,c
  5797  0022DC  0EED               	movlw	low STR_16
  5798  0022DE  6E03               	movwf	strcpy@src^0,c
  5799  0022E0  5003               	movf	strcpy@src^0,w,c
  5800  0022E2  A4D8               	btfss	status,2,c
  5801  0022E4  0E20               	movlw	high __smallconst
  5802  0022E6  6E04               	movwf	(strcpy@src+1)^0,c
  5803  0022E8  EC80  F02F         	call	_strcpy	;wreg free
  5804                           
  5805                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:         } else {
  5806  0022EC  D7A9               	goto	l5670
  5807  0022EE                     l5686:
  5808                           
  5809                           ; BSR set to: 0
  5810                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:             strc
      +                          py(&dbuf[n], "nan");
  5811  0022EE  0E4C               	movlw	low _dbuf
  5812  0022F0  259D               	addwf	efgtoa@n& (0+255),w,b
  5813  0022F2  6E01               	movwf	strcpy@dest^0,c
  5814  0022F4  0E04               	movlw	high _dbuf
  5815  0022F6  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5816  0022F8  6E02               	movwf	(strcpy@dest+1)^0,c
  5817  0022FA  0EF5               	movlw	low STR_17
  5818  0022FC  6E03               	movwf	strcpy@src^0,c
  5819  0022FE  5003               	movf	strcpy@src^0,w,c
  5820  002300  A4D8               	btfss	status,2,c
  5821  002302  0E20               	movlw	high __smallconst
  5822  002304  6E04               	movwf	(strcpy@src+1)^0,c
  5823  002306  EC80  F02F         	call	_strcpy	;wreg free
  5824  00230A  D79A               	goto	l5670
  5825  00230C                     l5694:
  5826                           
  5827                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  5828  00230C  0E00               	movlw	0
  5829  00230E  0100               	movlb	0	; () banked
  5830  002310  6F9F               	movwf	efgtoa@u& (0+255),b
  5831  002312  0E00               	movlw	0
  5832  002314  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  5833  002316  0E80               	movlw	128
  5834  002318  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  5835  00231A  0E3F               	movlw	63
  5836  00231C  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  5837                           
  5838                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  5839  00231E  0E00               	movlw	0
  5840  002320  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  5841  002322  0E00               	movlw	0
  5842  002324  6F9B               	movwf	efgtoa@e& (0+255),b
  5843                           
  5844                           ; BSR set to: 0
  5845                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0
      +                          .0)) {
  5846  002326  0060  F25C  F001   	movff	efgtoa@g,___fleq@ff1
  5847  00232C  0060  F260  F002   	movff	efgtoa@g+1,___fleq@ff1+1
  5848  002332  0060  F264  F003   	movff	efgtoa@g+2,___fleq@ff1+2
  5849  002338  0060  F268  F004   	movff	efgtoa@g+3,___fleq@ff1+3
  5850  00233E  0E00               	movlw	0
  5851  002340  6E05               	movwf	___fleq@ff2^0,c
  5852  002342  0E00               	movlw	0
  5853  002344  6E06               	movwf	(___fleq@ff2+1)^0,c
  5854  002346  0E00               	movlw	0
  5855  002348  6E07               	movwf	(___fleq@ff2+2)^0,c
  5856  00234A  0E00               	movlw	0
  5857  00234C  6E08               	movwf	(___fleq@ff2+3)^0,c
  5858  00234E  EC4E  F02D         	call	___fleq	;wreg free
  5859  002352  A0D8               	btfss	status,0,c
  5860  002354  D026               	goto	l5704
  5861  002356  D09A               	goto	u7250
  5862  002358                     l5700:
  5863                           
  5864                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:             u = 
      +                          u*10.0;
  5865  002358  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  5866  00235E  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  5867  002364  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  5868  00236A  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  5869  002370  0E00               	movlw	0
  5870  002372  6E3C               	movwf	___flmul@a^0,c
  5871  002374  0E00               	movlw	0
  5872  002376  6E3D               	movwf	(___flmul@a+1)^0,c
  5873  002378  0E20               	movlw	32
  5874  00237A  6E3E               	movwf	(___flmul@a+2)^0,c
  5875  00237C  0E41               	movlw	65
  5876  00237E  6E3F               	movwf	(___flmul@a+3)^0,c
  5877  002380  EC90  F020         	call	___flmul	;wreg free
  5878  002384  0060  F0E0  F09F   	movff	?___flmul,efgtoa@u
  5879  00238A  0060  F0E4  F0A0   	movff	?___flmul+1,efgtoa@u+1
  5880  002390  0060  F0E8  F0A1   	movff	?___flmul+2,efgtoa@u+2
  5881  002396  0060  F0EC  F0A2   	movff	?___flmul+3,efgtoa@u+3
  5882                           
  5883                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:             ++e;
  5884  00239C  0100               	movlb	0	; () banked
  5885  00239E  4B9B               	infsnz	efgtoa@e& (0+255),f,b
  5886  0023A0  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  5887  0023A2                     l5704:
  5888                           
  5889                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:         while (!
      +                          (g < (u*10.0))) {
  5890  0023A2  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  5891  0023A8  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  5892  0023AE  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  5893  0023B4  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  5894  0023BA  0E00               	movlw	0
  5895  0023BC  6E3C               	movwf	___flmul@a^0,c
  5896  0023BE  0E00               	movlw	0
  5897  0023C0  6E3D               	movwf	(___flmul@a+1)^0,c
  5898  0023C2  0E20               	movlw	32
  5899  0023C4  6E3E               	movwf	(___flmul@a+2)^0,c
  5900  0023C6  0E41               	movlw	65
  5901  0023C8  6E3F               	movwf	(___flmul@a+3)^0,c
  5902  0023CA  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  5903  0023D0  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  5904  0023D6  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  5905  0023DC  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  5906  0023E2  EC90  F020         	call	___flmul	;wreg free
  5907  0023E6  0060  F0E0  F055   	movff	?___flmul,___flge@ff2
  5908  0023EC  0060  F0E4  F056   	movff	?___flmul+1,___flge@ff2+1
  5909  0023F2  0060  F0E8  F057   	movff	?___flmul+2,___flge@ff2+2
  5910  0023F8  0060  F0EC  F058   	movff	?___flmul+3,___flge@ff2+3
  5911  0023FE  ECED  F02A         	call	___flge	;wreg free
  5912  002402  A0D8               	btfss	status,0,c
  5913  002404  D027               	goto	l5710
  5914  002406  D7A8               	goto	l5700
  5915  002408                     l5706:
  5916                           
  5917                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:             u = 
      +                          u/10.0;
  5918  002408  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  5919  00240E  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  5920  002414  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  5921  00241A  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  5922  002420  0E00               	movlw	0
  5923  002422  6E23               	movwf	___fldiv@a^0,c
  5924  002424  0E00               	movlw	0
  5925  002426  6E24               	movwf	(___fldiv@a+1)^0,c
  5926  002428  0E20               	movlw	32
  5927  00242A  6E25               	movwf	(___fldiv@a+2)^0,c
  5928  00242C  0E41               	movlw	65
  5929  00242E  6E26               	movwf	(___fldiv@a+3)^0,c
  5930  002430  ECF6  F023         	call	___fldiv	;wreg free
  5931  002434  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  5932  00243A  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  5933  002440  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  5934  002446  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  5935                           
  5936                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:             --e;
  5937  00244C  0100               	movlb	0	; () banked
  5938  00244E  079B               	decf	efgtoa@e& (0+255),f,b
  5939  002450  A0D8               	btfss	status,0,c
  5940  002452  079C               	decf	(efgtoa@e+1)& (0+255),f,b
  5941  002454                     l5710:
  5942                           
  5943                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:         while (g
      +                           < u) {
  5944  002454  0060  F25C  F051   	movff	efgtoa@g,___flge@ff1
  5945  00245A  0060  F260  F052   	movff	efgtoa@g+1,___flge@ff1+1
  5946  002460  0060  F264  F053   	movff	efgtoa@g+2,___flge@ff1+2
  5947  002466  0060  F268  F054   	movff	efgtoa@g+3,___flge@ff1+3
  5948  00246C  0060  F27C  F055   	movff	efgtoa@u,___flge@ff2
  5949  002472  0060  F280  F056   	movff	efgtoa@u+1,___flge@ff2+1
  5950  002478  0060  F284  F057   	movff	efgtoa@u+2,___flge@ff2+2
  5951  00247E  0060  F288  F058   	movff	efgtoa@u+3,___flge@ff2+3
  5952  002484  ECED  F02A         	call	___flge	;wreg free
  5953  002488  A0D8               	btfss	status,0,c
  5954  00248A  D7BE               	goto	l5706
  5955  00248C                     u7250:
  5956                           
  5957                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mode = tolow
      +                          er((int)c);
  5958  00248C  0060  F194  F007   	movff	efgtoa@c,tolower@c
  5959  002492  6A08               	clrf	(tolower@c+1)^0,c
  5960  002494  EC3D  F030         	call	_tolower	;wreg free
  5961  002498  5007               	movf	?_tolower^0,w,c
  5962  00249A  0100               	movlb	0	; () banked
  5963  00249C  6F8C               	movwf	efgtoa@mode& (0+255),b
  5964                           
  5965                           ; BSR set to: 0
  5966                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nmode = mode
      +                          ;
  5967  00249E  0060  F230  F089   	movff	efgtoa@mode,efgtoa@nmode
  5968                           
  5969                           ; BSR set to: 0
  5970                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if (mode == 
      +                          'g') {
  5971  0024A4  0E67               	movlw	103
  5972  0024A6  198C               	xorwf	efgtoa@mode& (0+255),w,b
  5973  0024A8  A4D8               	btfss	status,2,c
  5974  0024AA  D01D               	goto	l5726
  5975                           
  5976                           ; BSR set to: 0
  5977                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0)
      +                           {
  5978  0024AC  0104               	movlb	4	; () banked
  5979  0024AE  5140               	movf	_prec& (0+255),w,b
  5980  0024B0  1141               	iorwf	(_prec+1)& (0+255),w,b
  5981  0024B2  A4D8               	btfss	status,2,c
  5982  0024B4  D004               	goto	l5722
  5983                           
  5984                           ; BSR set to: 4
  5985                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5986  0024B6  0E00               	movlw	0
  5987  0024B8  6F41               	movwf	(_prec+1)& (0+255),b
  5988  0024BA  0E01               	movlw	1
  5989  0024BC  6F40               	movwf	_prec& (0+255),b
  5990  0024BE                     l5722:
  5991                           
  5992                           ; BSR set to: 4
  5993                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:         p = (0 <
      +                           prec) ? prec : 6;
  5994  0024BE  BF41               	btfsc	(_prec+1)& (0+255),7,b
  5995  0024C0  D005               	goto	u7280
  5996  0024C2  5141               	movf	(_prec+1)& (0+255),w,b
  5997  0024C4  E109               	bnz	l617
  5998  0024C6  0540               	decf	_prec& (0+255),w,b
  5999  0024C8  B0D8               	btfsc	status,0,c
  6000  0024CA  D006               	goto	l617
  6001  0024CC                     u7280:
  6002                           
  6003                           ; BSR set to: 4
  6004  0024CC  0E00               	movlw	0
  6005  0024CE  0100               	movlb	0	; () banked
  6006  0024D0  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  6007  0024D2  0E06               	movlw	6
  6008  0024D4  6F87               	movwf	efgtoa@p& (0+255),b
  6009  0024D6  D00B               	goto	l5732
  6010  0024D8                     l617:
  6011                           
  6012                           ; BSR set to: 4
  6013  0024D8  0061  F100  F087   	movff	_prec,efgtoa@p
  6014  0024DE  0061  F104  F088   	movff	_prec+1,efgtoa@p+1
  6015  0024E4  D004               	goto	l5732
  6016  0024E6                     l5726:
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:         p = (pre
      +                          c < 0) ? 6 : prec;
  6020  0024E6  0104               	movlb	4	; () banked
  6021  0024E8  AF41               	btfss	(_prec+1)& (0+255),7,b
  6022  0024EA  D7F6               	goto	l617
  6023  0024EC  D7EF               	goto	u7280
  6024  0024EE                     l5732:
  6025                           
  6026                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if (mode == 
      +                          'g') {
  6027  0024EE  0E67               	movlw	103
  6028  0024F0  0100               	movlb	0	; () banked
  6029  0024F2  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6030  0024F4  A4D8               	btfss	status,2,c
  6031  0024F6  D024               	goto	l5742
  6032                           
  6033                           ; BSR set to: 0
  6034                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:         if (!(e 
      +                          < -4) && !((p - 1) < e)) {
  6035  0024F8  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6036  0024FA  D006               	goto	u7310
  6037  0024FC  0EFC               	movlw	252
  6038  0024FE  5D9B               	subwf	efgtoa@e& (0+255),w,b
  6039  002500  0EFF               	movlw	255
  6040  002502  599C               	subwfb	(efgtoa@e+1)& (0+255),w,b
  6041  002504  A0D8               	btfss	status,0,c
  6042  002506  D01A               	goto	l5740
  6043  002508                     u7310:
  6044                           
  6045                           ; BSR set to: 0
  6046  002508  0EFF               	movlw	255
  6047  00250A  6F66               	movwf	??_efgtoa& (0+255),b
  6048  00250C  0EFF               	movlw	255
  6049  00250E  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6050  002510  0060  F21C  F068   	movff	efgtoa@p,??_efgtoa+2
  6051  002516  0060  F220  F069   	movff	efgtoa@p+1,??_efgtoa+3
  6052  00251C  5166               	movf	??_efgtoa& (0+255),w,b
  6053  00251E  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6054  002520  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6055  002522  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6056  002524  519B               	movf	efgtoa@e& (0+255),w,b
  6057  002526  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6058  002528  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6059  00252A  0A80               	xorlw	128
  6060  00252C  6F6A               	movwf	(??_efgtoa+4)& (0+255),b
  6061  00252E  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6062  002530  0A80               	xorlw	128
  6063  002532  596A               	subwfb	(??_efgtoa+4)& (0+255),w,b
  6064  002534  A0D8               	btfss	status,0,c
  6065  002536  D002               	goto	l5740
  6066                           
  6067                           ; BSR set to: 0
  6068                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:             nmod
      +                          e = 'f';
  6069  002538  0E66               	movlw	102
  6070  00253A  D001               	goto	L4
  6071  00253C                     l5740:
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:             nmod
      +                          e = 'e';
  6075  00253C  0E65               	movlw	101
  6076  00253E                     L4:
  6077  00253E  6F89               	movwf	efgtoa@nmode& (0+255),b
  6078  002540                     l5742:
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m = p;
  6082  002540  0060  F21C  F07F   	movff	efgtoa@p,efgtoa@m
  6083  002546  0060  F220  F080   	movff	efgtoa@p+1,efgtoa@m+1
  6084                           
  6085                           ; BSR set to: 0
  6086                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if (!(mode =
      +                          = 'g') || ((nmode == 'f') && (e < 0))) {
  6087  00254C  0E67               	movlw	103
  6088  00254E  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6089  002550  A4D8               	btfss	status,2,c
  6090  002552  D005               	goto	u7350
  6091                           
  6092                           ; BSR set to: 0
  6093  002554  0E66               	movlw	102
  6094  002556  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6095  002558  B4D8               	btfsc	status,2,c
  6096                           
  6097                           ; BSR set to: 0
  6098  00255A  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6099  00255C  D002               	goto	l5752
  6100  00255E                     u7350:
  6101                           
  6102                           ; BSR set to: 0
  6103                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:         ++m;
  6104  00255E  4B7F               	infsnz	efgtoa@m& (0+255),f,b
  6105  002560  2B80               	incf	(efgtoa@m+1)& (0+255),f,b
  6106  002562                     l5752:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if (nmode ==
      +                           'f') {
  6110  002562  0E66               	movlw	102
  6111  002564  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6112  002566  A4D8               	btfss	status,2,c
  6113  002568  D016               	goto	l5762
  6114                           
  6115                           ; BSR set to: 0
  6116                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:         if (e < 
      +                          0) {
  6117  00256A  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6118  00256C  D00C               	goto	l5758
  6119                           
  6120                           ; BSR set to: 0
  6121                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:             u = 
      +                          1.0;
  6122  00256E  0E00               	movlw	0
  6123  002570  6F9F               	movwf	efgtoa@u& (0+255),b
  6124  002572  0E00               	movlw	0
  6125  002574  6FA0               	movwf	(efgtoa@u+1)& (0+255),b
  6126  002576  0E80               	movlw	128
  6127  002578  6FA1               	movwf	(efgtoa@u+2)& (0+255),b
  6128  00257A  0E3F               	movlw	63
  6129  00257C  6FA2               	movwf	(efgtoa@u+3)& (0+255),b
  6130                           
  6131                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:             e = 
      +                          0;
  6132  00257E  0E00               	movlw	0
  6133  002580  6F9C               	movwf	(efgtoa@e+1)& (0+255),b
  6134  002582  0E00               	movlw	0
  6135  002584  6F9B               	movwf	efgtoa@e& (0+255),b
  6136  002586                     l5758:
  6137                           
  6138                           ; BSR set to: 0
  6139                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:         if (!(mo
      +                          de == 'g')) {
  6140  002586  0E67               	movlw	103
  6141  002588  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6142  00258A  B4D8               	btfsc	status,2,c
  6143  00258C  D004               	goto	l5762
  6144                           
  6145                           ; BSR set to: 0
  6146                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:             m +=
      +                           e;
  6147  00258E  519B               	movf	efgtoa@e& (0+255),w,b
  6148  002590  277F               	addwf	efgtoa@m& (0+255),f,b
  6149  002592  519C               	movf	(efgtoa@e+1)& (0+255),w,b
  6150  002594  2380               	addwfc	(efgtoa@m+1)& (0+255),f,b
  6151  002596                     l5762:
  6152                           
  6153                           ; BSR set to: 0
  6154                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  6155  002596  0E00               	movlw	0
  6156  002598  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6157  00259A  0E00               	movlw	0
  6158  00259C  6F95               	movwf	efgtoa@i& (0+255),b
  6159                           
  6160                           ; BSR set to: 0
  6161                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h = g;
  6162  00259E  0060  F25C  F08D   	movff	efgtoa@g,efgtoa@h
  6163  0025A4  0060  F260  F08E   	movff	efgtoa@g+1,efgtoa@h+1
  6164  0025AA  0060  F264  F08F   	movff	efgtoa@g+2,efgtoa@h+2
  6165  0025B0  0060  F268  F090   	movff	efgtoa@g+3,efgtoa@h+3
  6166                           
  6167                           ; BSR set to: 0
  6168                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  6169  0025B6  0060  F27C  F06B   	movff	efgtoa@u,efgtoa@ou
  6170  0025BC  0060  F280  F06C   	movff	efgtoa@u+1,efgtoa@ou+1
  6171  0025C2  0060  F284  F06D   	movff	efgtoa@u+2,efgtoa@ou+2
  6172  0025C8  0060  F288  F06E   	movff	efgtoa@u+3,efgtoa@ou+3
  6173                           
  6174                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6175  0025CE  D0AD               	goto	l5776
  6176  0025D0                     l5768:
  6177                           
  6178                           ; BSR set to: 0
  6179                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:         l = floo
      +                          rf(h/u);
  6180  0025D0  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6181  0025D6  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6182  0025DC  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6183  0025E2  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6184  0025E8  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6185  0025EE  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6186  0025F4  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6187  0025FA  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6188  002600  ECF6  F023         	call	___fldiv	;wreg free
  6189  002604  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6190  00260A  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6191  002610  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6192  002616  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6193  00261C  EC4C  F025         	call	_floorf	;wreg free
  6194  002620  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6195  002626  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6196  00262C  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6197  002632  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6198                           
  6199                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:         d = (int
      +                          )l;
  6200  002638  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6201  00263E  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6202  002644  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6203  00264A  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6204  002650  EC55  F02B         	call	___fltol	;wreg free
  6205  002654  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6206  00265A  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6207                           
  6208                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:         h -= l*u
      +                          ;
  6209  002660  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6210  002666  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6211  00266C  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6212  002672  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6213  002678  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6214  00267E  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6215  002684  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6216  00268A  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6217  002690  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6218  002696  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6219  00269C  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6220  0026A2  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6221  0026A8  EC90  F020         	call	___flmul	;wreg free
  6222  0026AC  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6223  0026B2  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6224  0026B8  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6225  0026BE  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6226  0026C4  ECB4  F02F         	call	___flsub	;wreg free
  6227  0026C8  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6228  0026CE  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6229  0026D4  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6230  0026DA  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6231                           
  6232                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:         u = u/10
      +                          .0;
  6233  0026E0  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6234  0026E6  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6235  0026EC  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6236  0026F2  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6237  0026F8  0E00               	movlw	0
  6238  0026FA  6E23               	movwf	___fldiv@a^0,c
  6239  0026FC  0E00               	movlw	0
  6240  0026FE  6E24               	movwf	(___fldiv@a+1)^0,c
  6241  002700  0E20               	movlw	32
  6242  002702  6E25               	movwf	(___fldiv@a+2)^0,c
  6243  002704  0E41               	movlw	65
  6244  002706  6E26               	movwf	(___fldiv@a+3)^0,c
  6245  002708  ECF6  F023         	call	___fldiv	;wreg free
  6246  00270C  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6247  002712  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6248  002718  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6249  00271E  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6250                           
  6251                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:         ++i;
  6252  002724  0100               	movlb	0	; () banked
  6253  002726  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6254  002728  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6255  00272A                     l5776:
  6256                           
  6257                           ; BSR set to: 0
  6258                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  6259  00272A  517F               	movf	efgtoa@m& (0+255),w,b
  6260  00272C  5D95               	subwf	efgtoa@i& (0+255),w,b
  6261  00272E  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6262  002730  0A80               	xorlw	128
  6263  002732  6F66               	movwf	??_efgtoa& (0+255),b
  6264  002734  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6265  002736  0A80               	xorlw	128
  6266  002738  5966               	subwfb	??_efgtoa& (0+255),w,b
  6267  00273A  A0D8               	btfss	status,0,c
  6268  00273C  D749               	goto	l5768
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  6272  00273E  0060  F27C  F038   	movff	efgtoa@u,___flmul@b
  6273  002744  0060  F280  F039   	movff	efgtoa@u+1,___flmul@b+1
  6274  00274A  0060  F284  F03A   	movff	efgtoa@u+2,___flmul@b+2
  6275  002750  0060  F288  F03B   	movff	efgtoa@u+3,___flmul@b+3
  6276  002756  0E00               	movlw	0
  6277  002758  6E3C               	movwf	___flmul@a^0,c
  6278  00275A  0E00               	movlw	0
  6279  00275C  6E3D               	movwf	(___flmul@a+1)^0,c
  6280  00275E  0EA0               	movlw	160
  6281  002760  6E3E               	movwf	(___flmul@a+2)^0,c
  6282  002762  0E40               	movlw	64
  6283  002764  6E3F               	movwf	(___flmul@a+3)^0,c
  6284  002766  EC90  F020         	call	___flmul	;wreg free
  6285  00276A  0060  F0E0  F091   	movff	?___flmul,efgtoa@l
  6286  002770  0060  F0E4  F092   	movff	?___flmul+1,efgtoa@l+1
  6287  002776  0060  F0E8  F093   	movff	?___flmul+2,efgtoa@l+2
  6288  00277C  0060  F0EC  F094   	movff	?___flmul+3,efgtoa@l+3
  6289                           
  6290                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  6291  002782  0060  F234  F051   	movff	efgtoa@h,___flge@ff1
  6292  002788  0060  F238  F052   	movff	efgtoa@h+1,___flge@ff1+1
  6293  00278E  0060  F23C  F053   	movff	efgtoa@h+2,___flge@ff1+2
  6294  002794  0060  F240  F054   	movff	efgtoa@h+3,___flge@ff1+3
  6295  00279A  0060  F244  F055   	movff	efgtoa@l,___flge@ff2
  6296  0027A0  0060  F248  F056   	movff	efgtoa@l+1,___flge@ff2+1
  6297  0027A6  0060  F24C  F057   	movff	efgtoa@l+2,___flge@ff2+2
  6298  0027AC  0060  F250  F058   	movff	efgtoa@l+3,___flge@ff2+3
  6299  0027B2  ECED  F02A         	call	___flge	;wreg free
  6300  0027B6  B0D8               	btfsc	status,0,c
  6301  0027B8  D003               	goto	l5784
  6302                           
  6303                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  6304  0027BA  0E00               	movlw	0
  6305  0027BC  0100               	movlb	0	; () banked
  6306  0027BE  D020               	goto	L5
  6307  0027C0                     l5784:
  6308                           
  6309                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:         if ((h =
      +                          = l) && !(d % 2)) {
  6310  0027C0  0060  F234  F001   	movff	efgtoa@h,___fleq@ff1
  6311  0027C6  0060  F238  F002   	movff	efgtoa@h+1,___fleq@ff1+1
  6312  0027CC  0060  F23C  F003   	movff	efgtoa@h+2,___fleq@ff1+2
  6313  0027D2  0060  F240  F004   	movff	efgtoa@h+3,___fleq@ff1+3
  6314  0027D8  0060  F244  F005   	movff	efgtoa@l,___fleq@ff2
  6315  0027DE  0060  F248  F006   	movff	efgtoa@l+1,___fleq@ff2+1
  6316  0027E4  0060  F24C  F007   	movff	efgtoa@l+2,___fleq@ff2+2
  6317  0027EA  0060  F250  F008   	movff	efgtoa@l+3,___fleq@ff2+3
  6318  0027F0  EC4E  F02D         	call	___fleq	;wreg free
  6319  0027F4  A0D8               	btfss	status,0,c
  6320  0027F6  D00B               	goto	l5790
  6321  0027F8  0100               	movlb	0	; () banked
  6322  0027FA  B183               	btfsc	efgtoa@d& (0+255),0,b
  6323  0027FC  D008               	goto	l5790
  6324                           
  6325                           ; BSR set to: 0
  6326                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:             l = 
      +                          0.0;
  6327  0027FE  0E00               	movlw	0
  6328  002800                     L5:
  6329  002800  6F91               	movwf	efgtoa@l& (0+255),b
  6330  002802  0E00               	movlw	0
  6331  002804  6F92               	movwf	(efgtoa@l+1)& (0+255),b
  6332  002806  0E00               	movlw	0
  6333  002808  6F93               	movwf	(efgtoa@l+2)& (0+255),b
  6334  00280A  0E00               	movlw	0
  6335  00280C  6F94               	movwf	(efgtoa@l+3)& (0+255),b
  6336  00280E                     l5790:
  6337                           
  6338                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  6339  00280E  0060  F25C  F00F   	movff	efgtoa@g,___fladd@b
  6340  002814  0060  F260  F010   	movff	efgtoa@g+1,___fladd@b+1
  6341  00281A  0060  F264  F011   	movff	efgtoa@g+2,___fladd@b+2
  6342  002820  0060  F268  F012   	movff	efgtoa@g+3,___fladd@b+3
  6343  002826  0060  F244  F013   	movff	efgtoa@l,___fladd@a
  6344  00282C  0060  F248  F014   	movff	efgtoa@l+1,___fladd@a+1
  6345  002832  0060  F24C  F015   	movff	efgtoa@l+2,___fladd@a+2
  6346  002838  0060  F250  F016   	movff	efgtoa@l+3,___fladd@a+3
  6347  00283E  EC52  F022         	call	___fladd	;wreg free
  6348  002842  0060  F03C  F08D   	movff	?___fladd,efgtoa@h
  6349  002848  0060  F040  F08E   	movff	?___fladd+1,efgtoa@h+1
  6350  00284E  0060  F044  F08F   	movff	?___fladd+2,efgtoa@h+2
  6351  002854  0060  F048  F090   	movff	?___fladd+3,efgtoa@h+3
  6352                           
  6353                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  6354  00285A  0060  F1AC  F09F   	movff	efgtoa@ou,efgtoa@u
  6355  002860  0060  F1B0  F0A0   	movff	efgtoa@ou+1,efgtoa@u+1
  6356  002866  0060  F1B4  F0A1   	movff	efgtoa@ou+2,efgtoa@u+2
  6357  00286C  0060  F1B8  F0A2   	movff	efgtoa@ou+3,efgtoa@u+3
  6358                           
  6359                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode 
      +                          == 'e') ? 0 : e;
  6360  002872  0E65               	movlw	101
  6361  002874  0100               	movlb	0	; () banked
  6362  002876  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6363  002878  B4D8               	btfsc	status,2,c
  6364  00287A  D007               	goto	l5798
  6365                           
  6366                           ; BSR set to: 0
  6367  00287C  0060  F26C  F081   	movff	efgtoa@e,efgtoa@ne
  6368  002882  0060  F270  F082   	movff	efgtoa@e+1,efgtoa@ne+1
  6369  002888  D004               	goto	l643
  6370  00288A                     l5798:
  6371                           
  6372                           ; BSR set to: 0
  6373  00288A  0E00               	movlw	0
  6374  00288C  6F82               	movwf	(efgtoa@ne+1)& (0+255),b
  6375  00288E  0E00               	movlw	0
  6376  002890  6F81               	movwf	efgtoa@ne& (0+255),b
  6377  002892                     l643:
  6378                           
  6379                           ; BSR set to: 0
  6380                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  6381  002892  0E00               	movlw	0
  6382  002894  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6383  002896  0E00               	movlw	0
  6384  002898  6F7D               	movwf	efgtoa@pp& (0+255),b
  6385                           
  6386                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  6387  00289A  0E00               	movlw	0
  6388  00289C  6F7C               	movwf	(efgtoa@t+1)& (0+255),b
  6389  00289E  0E00               	movlw	0
  6390  0028A0  6F7B               	movwf	efgtoa@t& (0+255),b
  6391                           
  6392                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  6393  0028A2  0E00               	movlw	0
  6394  0028A4  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6395  0028A6  0E00               	movlw	0
  6396  0028A8  6F95               	movwf	efgtoa@i& (0+255),b
  6397                           
  6398                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6399  0028AA  D0FA               	goto	l5848
  6400  0028AC                     l5800:
  6401                           
  6402                           ; BSR set to: 0
  6403                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:         l = floo
      +                          rf(h/u);
  6404  0028AC  0060  F234  F01F   	movff	efgtoa@h,___fldiv@b
  6405  0028B2  0060  F238  F020   	movff	efgtoa@h+1,___fldiv@b+1
  6406  0028B8  0060  F23C  F021   	movff	efgtoa@h+2,___fldiv@b+2
  6407  0028BE  0060  F240  F022   	movff	efgtoa@h+3,___fldiv@b+3
  6408  0028C4  0060  F27C  F023   	movff	efgtoa@u,___fldiv@a
  6409  0028CA  0060  F280  F024   	movff	efgtoa@u+1,___fldiv@a+1
  6410  0028D0  0060  F284  F025   	movff	efgtoa@u+2,___fldiv@a+2
  6411  0028D6  0060  F288  F026   	movff	efgtoa@u+3,___fldiv@a+3
  6412  0028DC  ECF6  F023         	call	___fldiv	;wreg free
  6413  0028E0  0060  F07C  F038   	movff	?___fldiv,floorf@x
  6414  0028E6  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  6415  0028EC  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  6416  0028F2  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  6417  0028F8  EC4C  F025         	call	_floorf	;wreg free
  6418  0028FC  0060  F0E0  F091   	movff	?_floorf,efgtoa@l
  6419  002902  0060  F0E4  F092   	movff	?_floorf+1,efgtoa@l+1
  6420  002908  0060  F0E8  F093   	movff	?_floorf+2,efgtoa@l+2
  6421  00290E  0060  F0EC  F094   	movff	?_floorf+3,efgtoa@l+3
  6422                           
  6423                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:         d = (int
      +                          )l;
  6424  002914  0060  F244  F001   	movff	efgtoa@l,___fltol@f1
  6425  00291A  0060  F248  F002   	movff	efgtoa@l+1,___fltol@f1+1
  6426  002920  0060  F24C  F003   	movff	efgtoa@l+2,___fltol@f1+2
  6427  002926  0060  F250  F004   	movff	efgtoa@l+3,___fltol@f1+3
  6428  00292C  EC55  F02B         	call	___fltol	;wreg free
  6429  002930  0060  F004  F083   	movff	?___fltol,efgtoa@d
  6430  002936  0060  F008  F084   	movff	?___fltol+1,efgtoa@d+1
  6431                           
  6432                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:         if (!(fl
      +                          ags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  6433  00293C  0104               	movlb	4	; () banked
  6434  00293E  B942               	btfsc	_flags& (0+255),4,b
  6435  002940  D00D               	goto	l5812
  6436                           
  6437                           ; BSR set to: 4
  6438  002942  0100               	movlb	0	; () banked
  6439  002944  5183               	movf	efgtoa@d& (0+255),w,b
  6440  002946  1184               	iorwf	(efgtoa@d+1)& (0+255),w,b
  6441  002948  A4D8               	btfss	status,2,c
  6442  00294A  D008               	goto	l5812
  6443                           
  6444                           ; BSR set to: 0
  6445  00294C  0E67               	movlw	103
  6446  00294E  198C               	xorwf	efgtoa@mode& (0+255),w,b
  6447  002950  B4D8               	btfsc	status,2,c
  6448                           
  6449                           ; BSR set to: 0
  6450  002952  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6451  002954  D003               	goto	l5812
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:             ++t;
  6455  002956  4B7B               	infsnz	efgtoa@t& (0+255),f,b
  6456  002958  2B7C               	incf	(efgtoa@t+1)& (0+255),f,b
  6457                           
  6458                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:         } else {
  6459  00295A  D03A               	goto	l5840
  6460  00295C                     l5812:
  6461                           
  6462                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:             if (
      +                          !pp && (ne < 0)) {
  6463  00295C  0100               	movlb	0	; () banked
  6464  00295E  517D               	movf	efgtoa@pp& (0+255),w,b
  6465  002960  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6466  002962  B4D8               	btfsc	status,2,c
  6467                           
  6468                           ; BSR set to: 0
  6469  002964  AF82               	btfss	(efgtoa@ne+1)& (0+255),7,b
  6470  002966  D022               	goto	l5832
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:                 
      +                          dbuf[n++] = '.';
  6474  002968  0E4C               	movlw	low _dbuf
  6475  00296A  259D               	addwf	efgtoa@n& (0+255),w,b
  6476  00296C  6ED9               	movwf	fsr2l,c
  6477  00296E  0E04               	movlw	high _dbuf
  6478  002970  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6479  002972  6EDA               	movwf	fsr2h,c
  6480  002974  0E2E               	movlw	46
  6481  002976  6EDF               	movwf	indf2,c
  6482                           
  6483                           ; BSR set to: 0
  6484  002978  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6485  00297A  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6486                           
  6487                           ; BSR set to: 0
  6488                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:                 
      +                          --w;
  6489  00297C  078A               	decf	efgtoa@w& (0+255),f,b
  6490  00297E  A0D8               	btfss	status,0,c
  6491  002980  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6492                           
  6493                           ; BSR set to: 0
  6494                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:                 
      +                          pp = 1;
  6495  002982  0E00               	movlw	0
  6496  002984  6F7E               	movwf	(efgtoa@pp+1)& (0+255),b
  6497  002986  0E01               	movlw	1
  6498  002988  6F7D               	movwf	efgtoa@pp& (0+255),b
  6499  00298A  D010               	goto	l5832
  6500  00298C                     l5824:
  6501                           
  6502                           ; BSR set to: 0
  6503                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:                 
      +                          dbuf[n++] = '0';
  6504  00298C  0E4C               	movlw	low _dbuf
  6505  00298E  259D               	addwf	efgtoa@n& (0+255),w,b
  6506  002990  6ED9               	movwf	fsr2l,c
  6507  002992  0E04               	movlw	high _dbuf
  6508  002994  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6509  002996  6EDA               	movwf	fsr2h,c
  6510  002998  0E30               	movlw	48
  6511  00299A  6EDF               	movwf	indf2,c
  6512                           
  6513                           ; BSR set to: 0
  6514  00299C  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6515  00299E  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6516                           
  6517                           ; BSR set to: 0
  6518                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:                 
      +                          --w;
  6519  0029A0  078A               	decf	efgtoa@w& (0+255),f,b
  6520  0029A2  A0D8               	btfss	status,0,c
  6521  0029A4  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6522                           
  6523                           ; BSR set to: 0
  6524                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:                 
      +                          --t;
  6525  0029A6  077B               	decf	efgtoa@t& (0+255),f,b
  6526  0029A8  A0D8               	btfss	status,0,c
  6527  0029AA  077C               	decf	(efgtoa@t+1)& (0+255),f,b
  6528  0029AC                     l5832:
  6529                           
  6530                           ; BSR set to: 0
  6531                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:             whil
      +                          e (t) {
  6532  0029AC  517B               	movf	efgtoa@t& (0+255),w,b
  6533  0029AE  117C               	iorwf	(efgtoa@t+1)& (0+255),w,b
  6534  0029B0  A4D8               	btfss	status,2,c
  6535  0029B2  D7EC               	goto	l5824
  6536                           
  6537                           ; BSR set to: 0
  6538                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:             dbuf
      +                          [n++] = '0' + d;
  6539  0029B4  0E4C               	movlw	low _dbuf
  6540  0029B6  259D               	addwf	efgtoa@n& (0+255),w,b
  6541  0029B8  6ED9               	movwf	fsr2l,c
  6542  0029BA  0E04               	movlw	high _dbuf
  6543  0029BC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6544  0029BE  6EDA               	movwf	fsr2h,c
  6545  0029C0  5183               	movf	efgtoa@d& (0+255),w,b
  6546  0029C2  0F30               	addlw	48
  6547  0029C4  6EDF               	movwf	indf2,c
  6548                           
  6549                           ; BSR set to: 0
  6550  0029C6  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6551  0029C8  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6552                           
  6553                           ; BSR set to: 0
  6554                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:             --w;
  6555  0029CA  078A               	decf	efgtoa@w& (0+255),f,b
  6556  0029CC  A0D8               	btfss	status,0,c
  6557  0029CE  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6558  0029D0                     l5840:
  6559                           
  6560                           ; BSR set to: 0
  6561                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:         h -= l*u
      +                          ;
  6562  0029D0  0060  F234  F051   	movff	efgtoa@h,___flsub@b
  6563  0029D6  0060  F238  F052   	movff	efgtoa@h+1,___flsub@b+1
  6564  0029DC  0060  F23C  F053   	movff	efgtoa@h+2,___flsub@b+2
  6565  0029E2  0060  F240  F054   	movff	efgtoa@h+3,___flsub@b+3
  6566  0029E8  0060  F27C  F03C   	movff	efgtoa@u,___flmul@a
  6567  0029EE  0060  F280  F03D   	movff	efgtoa@u+1,___flmul@a+1
  6568  0029F4  0060  F284  F03E   	movff	efgtoa@u+2,___flmul@a+2
  6569  0029FA  0060  F288  F03F   	movff	efgtoa@u+3,___flmul@a+3
  6570  002A00  0060  F244  F038   	movff	efgtoa@l,___flmul@b
  6571  002A06  0060  F248  F039   	movff	efgtoa@l+1,___flmul@b+1
  6572  002A0C  0060  F24C  F03A   	movff	efgtoa@l+2,___flmul@b+2
  6573  002A12  0060  F250  F03B   	movff	efgtoa@l+3,___flmul@b+3
  6574  002A18  EC90  F020         	call	___flmul	;wreg free
  6575  002A1C  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  6576  002A22  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  6577  002A28  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  6578  002A2E  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  6579  002A34  ECB4  F02F         	call	___flsub	;wreg free
  6580  002A38  0060  F144  F08D   	movff	?___flsub,efgtoa@h
  6581  002A3E  0060  F148  F08E   	movff	?___flsub+1,efgtoa@h+1
  6582  002A44  0060  F14C  F08F   	movff	?___flsub+2,efgtoa@h+2
  6583  002A4A  0060  F150  F090   	movff	?___flsub+3,efgtoa@h+3
  6584                           
  6585                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:         u = u/10
      +                          .0;
  6586  002A50  0060  F27C  F01F   	movff	efgtoa@u,___fldiv@b
  6587  002A56  0060  F280  F020   	movff	efgtoa@u+1,___fldiv@b+1
  6588  002A5C  0060  F284  F021   	movff	efgtoa@u+2,___fldiv@b+2
  6589  002A62  0060  F288  F022   	movff	efgtoa@u+3,___fldiv@b+3
  6590  002A68  0E00               	movlw	0
  6591  002A6A  6E23               	movwf	___fldiv@a^0,c
  6592  002A6C  0E00               	movlw	0
  6593  002A6E  6E24               	movwf	(___fldiv@a+1)^0,c
  6594  002A70  0E20               	movlw	32
  6595  002A72  6E25               	movwf	(___fldiv@a+2)^0,c
  6596  002A74  0E41               	movlw	65
  6597  002A76  6E26               	movwf	(___fldiv@a+3)^0,c
  6598  002A78  ECF6  F023         	call	___fldiv	;wreg free
  6599  002A7C  0060  F07C  F09F   	movff	?___fldiv,efgtoa@u
  6600  002A82  0060  F080  F0A0   	movff	?___fldiv+1,efgtoa@u+1
  6601  002A88  0060  F084  F0A1   	movff	?___fldiv+2,efgtoa@u+2
  6602  002A8E  0060  F088  F0A2   	movff	?___fldiv+3,efgtoa@u+3
  6603                           
  6604                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:         --ne;
  6605  002A94  0100               	movlb	0	; () banked
  6606  002A96  0781               	decf	efgtoa@ne& (0+255),f,b
  6607  002A98  A0D8               	btfss	status,0,c
  6608  002A9A  0782               	decf	(efgtoa@ne+1)& (0+255),f,b
  6609                           
  6610                           ; BSR set to: 0
  6611                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:         ++i;
  6612  002A9C  4B95               	infsnz	efgtoa@i& (0+255),f,b
  6613  002A9E  2B96               	incf	(efgtoa@i+1)& (0+255),f,b
  6614  002AA0                     l5848:
  6615                           
  6616                           ; BSR set to: 0
  6617                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  6618  002AA0  517F               	movf	efgtoa@m& (0+255),w,b
  6619  002AA2  5D95               	subwf	efgtoa@i& (0+255),w,b
  6620  002AA4  5196               	movf	(efgtoa@i+1)& (0+255),w,b
  6621  002AA6  0A80               	xorlw	128
  6622  002AA8  6F66               	movwf	??_efgtoa& (0+255),b
  6623  002AAA  5180               	movf	(efgtoa@m+1)& (0+255),w,b
  6624  002AAC  0A80               	xorlw	128
  6625  002AAE  5966               	subwfb	??_efgtoa& (0+255),w,b
  6626  002AB0  B0D8               	btfsc	status,0,c
  6627  002AB2  D008               	goto	u7520
  6628                           
  6629                           ; BSR set to: 0
  6630  002AB4  BF9E               	btfsc	(efgtoa@n+1)& (0+255),7,b
  6631  002AB6  D6FA               	goto	l5800
  6632  002AB8  519E               	movf	(efgtoa@n+1)& (0+255),w,b
  6633  002ABA  E104               	bnz	u7520
  6634  002ABC  0E4B               	movlw	75
  6635  002ABE  5D9D               	subwf	efgtoa@n& (0+255),w,b
  6636  002AC0  A0D8               	btfss	status,0,c
  6637  002AC2  D6F4               	goto	l5800
  6638  002AC4                     u7520:
  6639                           
  6640                           ; BSR set to: 0
  6641                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (
      +                          flags & (1 << 4))) {
  6642  002AC4  517D               	movf	efgtoa@pp& (0+255),w,b
  6643  002AC6  117E               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  6644  002AC8  A4D8               	btfss	status,2,c
  6645  002ACA  D00E               	goto	l5860
  6646                           
  6647                           ; BSR set to: 0
  6648  002ACC  0104               	movlb	4	; () banked
  6649  002ACE  A942               	btfss	_flags& (0+255),4,b
  6650  002AD0  D00B               	goto	l5860
  6651                           
  6652                           ; BSR set to: 4
  6653                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++
      +                          ] = '.';
  6654  002AD2  0E4C               	movlw	low _dbuf
  6655  002AD4  0100               	movlb	0	; () banked
  6656  002AD6  259D               	addwf	efgtoa@n& (0+255),w,b
  6657  002AD8  6ED9               	movwf	fsr2l,c
  6658  002ADA  0E04               	movlw	high _dbuf
  6659  002ADC  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6660  002ADE  6EDA               	movwf	fsr2h,c
  6661  002AE0  0E2E               	movlw	46
  6662  002AE2  6EDF               	movwf	indf2,c
  6663                           
  6664                           ; BSR set to: 0
  6665  002AE4  4B9D               	infsnz	efgtoa@n& (0+255),f,b
  6666  002AE6  2B9E               	incf	(efgtoa@n+1)& (0+255),f,b
  6667  002AE8                     l5860:
  6668                           
  6669                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\
      +                          0';
  6670  002AE8  0E4C               	movlw	low _dbuf
  6671  002AEA  0100               	movlb	0	; () banked
  6672  002AEC  259D               	addwf	efgtoa@n& (0+255),w,b
  6673  002AEE  6ED9               	movwf	fsr2l,c
  6674  002AF0  0E04               	movlw	high _dbuf
  6675  002AF2  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6676  002AF4  6EDA               	movwf	fsr2h,c
  6677  002AF6  0E00               	movlw	0
  6678  002AF8  6EDF               	movwf	indf2,c
  6679                           
  6680                           ; BSR set to: 0
  6681                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if (nmode ==
      +                           'e') {
  6682  002AFA  0E65               	movlw	101
  6683  002AFC  1989               	xorwf	efgtoa@nmode& (0+255),w,b
  6684  002AFE  A4D8               	btfss	status,2,c
  6685  002B00  EF25  F011         	goto	l5672
  6686                           
  6687                           ; BSR set to: 0
  6688                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:         i = size
      +                          of(dbuf) - 1;
  6689  002B04  0E00               	movlw	0
  6690  002B06  6F96               	movwf	(efgtoa@i+1)& (0+255),b
  6691  002B08  0E4F               	movlw	79
  6692  002B0A  6F95               	movwf	efgtoa@i& (0+255),b
  6693                           
  6694                           ; BSR set to: 0
  6695                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] 
      +                          = '\0';
  6696  002B0C  0E4C               	movlw	low _dbuf
  6697  002B0E  2595               	addwf	efgtoa@i& (0+255),w,b
  6698  002B10  6ED9               	movwf	fsr2l,c
  6699  002B12  0E04               	movlw	high _dbuf
  6700  002B14  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6701  002B16  6EDA               	movwf	fsr2h,c
  6702  002B18  0E00               	movlw	0
  6703  002B1A  6EDF               	movwf	indf2,c
  6704                           
  6705                           ; BSR set to: 0
  6706                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:         sign = 0
      +                          ;
  6707  002B1C  0E00               	movlw	0
  6708  002B1E  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6709  002B20  0E00               	movlw	0
  6710  002B22  6F85               	movwf	efgtoa@sign& (0+255),b
  6711                           
  6712                           ; BSR set to: 0
  6713                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:         if (e < 
      +                          0) {
  6714  002B24  AF9C               	btfss	(efgtoa@e+1)& (0+255),7,b
  6715  002B26  D008               	goto	l5876
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:             sign
      +                           = 1;
  6719  002B28  0E00               	movlw	0
  6720  002B2A  6F86               	movwf	(efgtoa@sign+1)& (0+255),b
  6721  002B2C  0E01               	movlw	1
  6722  002B2E  6F85               	movwf	efgtoa@sign& (0+255),b
  6723                           
  6724                           ; BSR set to: 0
  6725                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:             e = 
      +                          -e;
  6726  002B30  6D9B               	negf	efgtoa@e& (0+255),b
  6727  002B32  1F9C               	comf	(efgtoa@e+1)& (0+255),f,b
  6728  002B34  B0D8               	btfsc	status,0,c
  6729  002B36  2B9C               	incf	(efgtoa@e+1)& (0+255),f,b
  6730  002B38                     l5876:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  6734  002B38  0E00               	movlw	0
  6735  002B3A  6F88               	movwf	(efgtoa@p+1)& (0+255),b
  6736  002B3C  0E02               	movlw	2
  6737  002B3E  6F87               	movwf	efgtoa@p& (0+255),b
  6738                           
  6739                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  6740  002B40  D030               	goto	l5888
  6741  002B42                     l5878:
  6742                           
  6743                           ; BSR set to: 0
  6744                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:             --i;
  6745  002B42  0795               	decf	efgtoa@i& (0+255),f,b
  6746  002B44  A0D8               	btfss	status,0,c
  6747  002B46  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6748                           
  6749                           ; BSR set to: 0
  6750                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:             dbuf
      +                          [i] = '0' + (e % 10);
  6751  002B48  0E4C               	movlw	low _dbuf
  6752  002B4A  2595               	addwf	efgtoa@i& (0+255),w,b
  6753  002B4C  6ED9               	movwf	fsr2l,c
  6754  002B4E  0E04               	movlw	high _dbuf
  6755  002B50  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6756  002B52  6EDA               	movwf	fsr2h,c
  6757  002B54  0060  F26C  F001   	movff	efgtoa@e,___awmod@dividend
  6758  002B5A  0060  F270  F002   	movff	efgtoa@e+1,___awmod@dividend+1
  6759  002B60  0E00               	movlw	0
  6760  002B62  6E04               	movwf	(___awmod@divisor+1)^0,c
  6761  002B64  0E0A               	movlw	10
  6762  002B66  6E03               	movwf	___awmod@divisor^0,c
  6763  002B68  ECD6  F02E         	call	___awmod	;wreg free
  6764  002B6C  5001               	movf	?___awmod^0,w,c
  6765  002B6E  0F30               	addlw	48
  6766  002B70  6EDF               	movwf	indf2,c
  6767                           
  6768                           ; BSR set to: 0
  6769                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:             e = 
      +                          e / 10;
  6770  002B72  0060  F26C  F001   	movff	efgtoa@e,___awdiv@dividend
  6771  002B78  0060  F270  F002   	movff	efgtoa@e+1,___awdiv@dividend+1
  6772  002B7E  0E00               	movlw	0
  6773  002B80  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6774  002B82  0E0A               	movlw	10
  6775  002B84  6E03               	movwf	___awdiv@divisor^0,c
  6776  002B86  ECD8  F02D         	call	___awdiv	;wreg free
  6777  002B8A  0060  F004  F09B   	movff	?___awdiv,efgtoa@e
  6778  002B90  0060  F008  F09C   	movff	?___awdiv+1,efgtoa@e+1
  6779                           
  6780                           ; BSR set to: 0
  6781                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:             --p;
  6782  002B96  0787               	decf	efgtoa@p& (0+255),f,b
  6783  002B98  A0D8               	btfss	status,0,c
  6784  002B9A  0788               	decf	(efgtoa@p+1)& (0+255),f,b
  6785                           
  6786                           ; BSR set to: 0
  6787                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:             --w;
  6788  002B9C  078A               	decf	efgtoa@w& (0+255),f,b
  6789  002B9E  A0D8               	btfss	status,0,c
  6790  002BA0  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6791  002BA2                     l5888:
  6792                           
  6793                           ; BSR set to: 0
  6794                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  6795  002BA2  519B               	movf	efgtoa@e& (0+255),w,b
  6796  002BA4  119C               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6797  002BA6  A4D8               	btfss	status,2,c
  6798  002BA8  D7CC               	goto	l5878
  6799                           
  6800                           ; BSR set to: 0
  6801  002BAA  BF88               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6802  002BAC  D005               	goto	u7580
  6803  002BAE  5188               	movf	(efgtoa@p+1)& (0+255),w,b
  6804  002BB0  E1C8               	bnz	l5878
  6805  002BB2  0587               	decf	efgtoa@p& (0+255),w,b
  6806  002BB4  B0D8               	btfsc	status,0,c
  6807  002BB6  D7C5               	goto	l5878
  6808  002BB8                     u7580:
  6809                           
  6810                           ; BSR set to: 0
  6811                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:         --i;
  6812  002BB8  0795               	decf	efgtoa@i& (0+255),f,b
  6813  002BBA  A0D8               	btfss	status,0,c
  6814  002BBC  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6815                           
  6816                           ; BSR set to: 0
  6817                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] 
      +                          = sign ? '-' : '+';
  6818  002BBE  5185               	movf	efgtoa@sign& (0+255),w,b
  6819  002BC0  1186               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6820  002BC2  A4D8               	btfss	status,2,c
  6821  002BC4  D004               	goto	l5898
  6822                           
  6823                           ; BSR set to: 0
  6824  002BC6  0E00               	movlw	0
  6825  002BC8  6F76               	movwf	(_efgtoa$630+1)& (0+255),b
  6826  002BCA  0E2B               	movlw	43
  6827  002BCC  D003               	goto	L6
  6828  002BCE                     l5898:
  6829                           
  6830                           ; BSR set to: 0
  6831  002BCE  0E00               	movlw	0
  6832  002BD0  6F76               	movwf	(_efgtoa$630+1)& (0+255),b
  6833  002BD2  0E2D               	movlw	45
  6834  002BD4                     L6:
  6835  002BD4  6F75               	movwf	_efgtoa$630& (0+255),b
  6836                           
  6837                           ; BSR set to: 0
  6838  002BD6  0E4C               	movlw	low _dbuf
  6839  002BD8  2595               	addwf	efgtoa@i& (0+255),w,b
  6840  002BDA  6ED9               	movwf	fsr2l,c
  6841  002BDC  0E04               	movlw	high _dbuf
  6842  002BDE  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6843  002BE0  6EDA               	movwf	fsr2h,c
  6844  002BE2  0060  F1D7  FFDF   	movff	_efgtoa$630,indf2
  6845                           
  6846                           ; BSR set to: 0
  6847                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:         --w;
  6848  002BE8  078A               	decf	efgtoa@w& (0+255),f,b
  6849  002BEA  A0D8               	btfss	status,0,c
  6850  002BEC  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] 
      +                          = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6854  002BEE  0795               	decf	efgtoa@i& (0+255),f,b
  6855  002BF0  A0D8               	btfss	status,0,c
  6856  002BF2  0796               	decf	(efgtoa@i+1)& (0+255),f,b
  6857                           
  6858                           ; BSR set to: 0
  6859  002BF4  0EBF               	movlw	191
  6860  002BF6  6F66               	movwf	??_efgtoa& (0+255),b
  6861  002BF8  0EFF               	movlw	255
  6862  002BFA  6F67               	movwf	(??_efgtoa+1)& (0+255),b
  6863  002BFC  5165               	movf	efgtoa@c& (0+255),w,b
  6864  002BFE  6F68               	movwf	(??_efgtoa+2)& (0+255),b
  6865  002C00  6B69               	clrf	(??_efgtoa+3)& (0+255),b
  6866  002C02  5166               	movf	??_efgtoa& (0+255),w,b
  6867  002C04  2768               	addwf	(??_efgtoa+2)& (0+255),f,b
  6868  002C06  5167               	movf	(??_efgtoa+1)& (0+255),w,b
  6869  002C08  2369               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6870  002C0A  5169               	movf	(??_efgtoa+3)& (0+255),w,b
  6871  002C0C  E106               	bnz	u7600
  6872  002C0E  0E1A               	movlw	26
  6873  002C10  5D68               	subwf	(??_efgtoa+2)& (0+255),w,b
  6874  002C12  B0D8               	btfsc	status,0,c
  6875  002C14  D002               	goto	u7600
  6876  002C16  0E01               	movlw	1
  6877  002C18  D001               	goto	u7610
  6878  002C1A                     u7600:
  6879  002C1A  0E00               	movlw	0
  6880  002C1C                     u7610:
  6881  002C1C  6F79               	movwf	_efgtoa$632& (0+255),b
  6882  002C1E  6B7A               	clrf	(_efgtoa$632+1)& (0+255),b
  6883                           
  6884                           ; BSR set to: 0
  6885  002C20  5179               	movf	_efgtoa$632& (0+255),w,b
  6886  002C22  117A               	iorwf	(_efgtoa$632+1)& (0+255),w,b
  6887  002C24  A4D8               	btfss	status,2,c
  6888  002C26  D004               	goto	l5914
  6889                           
  6890                           ; BSR set to: 0
  6891  002C28  0E00               	movlw	0
  6892  002C2A  6F78               	movwf	(_efgtoa$631+1)& (0+255),b
  6893  002C2C  0E65               	movlw	101
  6894  002C2E  D003               	goto	L7
  6895  002C30                     l5914:
  6896                           
  6897                           ; BSR set to: 0
  6898  002C30  0E00               	movlw	0
  6899  002C32  6F78               	movwf	(_efgtoa$631+1)& (0+255),b
  6900  002C34  0E45               	movlw	69
  6901  002C36                     L7:
  6902  002C36  6F77               	movwf	_efgtoa$631& (0+255),b
  6903                           
  6904                           ; BSR set to: 0
  6905  002C38  0E4C               	movlw	low _dbuf
  6906  002C3A  2595               	addwf	efgtoa@i& (0+255),w,b
  6907  002C3C  6ED9               	movwf	fsr2l,c
  6908  002C3E  0E04               	movlw	high _dbuf
  6909  002C40  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6910  002C42  6EDA               	movwf	fsr2h,c
  6911  002C44  0060  F1DF  FFDF   	movff	_efgtoa$631,indf2
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:         --w;
  6915  002C4A  078A               	decf	efgtoa@w& (0+255),f,b
  6916  002C4C  A0D8               	btfss	status,0,c
  6917  002C4E  078B               	decf	(efgtoa@w+1)& (0+255),f,b
  6918                           
  6919                           ; BSR set to: 0
  6920                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:         strcpy(&
      +                          dbuf[n], &dbuf[i]);
  6921  002C50  0E4C               	movlw	low _dbuf
  6922  002C52  259D               	addwf	efgtoa@n& (0+255),w,b
  6923  002C54  6E01               	movwf	strcpy@dest^0,c
  6924  002C56  0E04               	movlw	high _dbuf
  6925  002C58  219E               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6926  002C5A  6E02               	movwf	(strcpy@dest+1)^0,c
  6927  002C5C  0E4C               	movlw	low _dbuf
  6928  002C5E  2595               	addwf	efgtoa@i& (0+255),w,b
  6929  002C60  6E03               	movwf	strcpy@src^0,c
  6930  002C62  0E04               	movlw	high _dbuf
  6931  002C64  2196               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6932  002C66  6E04               	movwf	(strcpy@src+1)^0,c
  6933  002C68  EC80  F02F         	call	_strcpy	;wreg free
  6934  002C6C  EF25  F011         	goto	l5672
  6935  002C70                     __end_of_efgtoa:
  6936                           	opt callstack 0
  6937                           
  6938 ;; *************** function _tolower *****************
  6939 ;; Defined at:
  6940 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  c               2    6[COMRAM] int 
  6943 ;; Auto vars:     Size  Location     Type
  6944 ;;		None
  6945 ;; Return value:  Size  Location     Type
  6946 ;;                  2    6[COMRAM] int 
  6947 ;; Registers used:
  6948 ;;		wreg, status,2, status,0
  6949 ;; Tracked objects:
  6950 ;;		On entry : 0/4
  6951 ;;		On exit  : 0/0
  6952 ;;		Unchanged: 0/0
  6953 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  6954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6956 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6958 ;;Total ram usage:        8 bytes
  6959 ;; Hardware stack levels used:    1
  6960 ;; Hardware stack levels required when called:    1
  6961 ;; This function calls:
  6962 ;;		_isupper
  6963 ;; This function is called by:
  6964 ;;		_efgtoa
  6965 ;;		_vfpfcnvrt
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           	psect	text14
  6970  00607A                     __ptext14:
  6971                           	opt callstack 0
  6972  00607A                     _tolower:
  6973                           	opt callstack 25
  6974                           
  6975                           ;incstack = 0
  6976  00607A  0EBF               	movlw	191
  6977  00607C  6E09               	movwf	??_tolower^0,c
  6978  00607E  0EFF               	movlw	255
  6979  006080  6E0A               	movwf	(??_tolower+1)^0,c
  6980  006082  0060  F01C  F00B   	movff	tolower@c,??_tolower+2
  6981  006088  0060  F020  F00C   	movff	tolower@c+1,??_tolower+3
  6982  00608E  5009               	movf	??_tolower^0,w,c
  6983  006090  260B               	addwf	(??_tolower+2)^0,f,c
  6984  006092  500A               	movf	(??_tolower+1)^0,w,c
  6985  006094  220C               	addwfc	(??_tolower+3)^0,f,c
  6986  006096  500C               	movf	(??_tolower+3)^0,w,c
  6987  006098  E106               	bnz	u4120
  6988  00609A  0E1A               	movlw	26
  6989  00609C  5C0B               	subwf	(??_tolower+2)^0,w,c
  6990  00609E  B0D8               	btfsc	status,0,c
  6991  0060A0  D002               	goto	u4120
  6992  0060A2  0E01               	movlw	1
  6993  0060A4  D001               	goto	u4130
  6994  0060A6                     u4120:
  6995  0060A6  0E00               	movlw	0
  6996  0060A8                     u4130:
  6997  0060A8  6E0D               	movwf	_tolower$1245^0,c
  6998  0060AA  6A0E               	clrf	(_tolower$1245+1)^0,c
  6999  0060AC  500D               	movf	_tolower$1245^0,w,c
  7000  0060AE  100E               	iorwf	(_tolower$1245+1)^0,w,c
  7001  0060B0  B4D8               	btfsc	status,2,c
  7002  0060B2  D006               	goto	l1524
  7003  0060B4  0E20               	movlw	32
  7004  0060B6  1007               	iorwf	tolower@c^0,w,c
  7005  0060B8  6E07               	movwf	?_tolower^0,c
  7006  0060BA  5008               	movf	(tolower@c+1)^0,w,c
  7007  0060BC  6E08               	movwf	(?_tolower+1)^0,c
  7008  0060BE  0012               	return	
  7009  0060C0                     l1524:
  7010  0060C0  0060  F01C  F007   	movff	tolower@c,?_tolower
  7011  0060C6  0060  F020  F008   	movff	tolower@c+1,?_tolower+1
  7012  0060CC  0012               	return		;funcret
  7013  0060CE                     __end_of_tolower:
  7014                           	opt callstack 0
  7015                           
  7016 ;; *************** function _isupper *****************
  7017 ;; Defined at:
  7018 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;  c               2    0[COMRAM] int 
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;		None
  7023 ;; Return value:  Size  Location     Type
  7024 ;;                  2    0[COMRAM] int 
  7025 ;; Registers used:
  7026 ;;		wreg, status,2, status,0
  7027 ;; Tracked objects:
  7028 ;;		On entry : 0/0
  7029 ;;		On exit  : 0/0
  7030 ;;		Unchanged: 0/0
  7031 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7032 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7035 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7036 ;;Total ram usage:        6 bytes
  7037 ;; Hardware stack levels used:    1
  7038 ;; This function calls:
  7039 ;;		Nothing
  7040 ;; This function is called by:
  7041 ;;		_efgtoa
  7042 ;;		_vfpfcnvrt
  7043 ;;		_tolower
  7044 ;; This function uses a non-reentrant model
  7045 ;;
  7046                           
  7047                           	psect	text15
  7048  006242                     __ptext15:
  7049                           	opt callstack 0
  7050  006242                     _isupper:
  7051                           	opt callstack 25
  7052                           
  7053                           ;incstack = 0
  7054  006242  0EBF               	movlw	191
  7055  006244  6E03               	movwf	??_isupper^0,c
  7056  006246  0EFF               	movlw	255
  7057  006248  6E04               	movwf	(??_isupper+1)^0,c
  7058  00624A  0060  F004  F005   	movff	isupper@c,??_isupper+2
  7059  006250  0060  F008  F006   	movff	isupper@c+1,??_isupper+3
  7060  006256  5003               	movf	??_isupper^0,w,c
  7061  006258  2605               	addwf	(??_isupper+2)^0,f,c
  7062  00625A  5004               	movf	(??_isupper+1)^0,w,c
  7063  00625C  2206               	addwfc	(??_isupper+3)^0,f,c
  7064  00625E  5006               	movf	(??_isupper+3)^0,w,c
  7065  006260  E106               	bnz	u3580
  7066  006262  0E1A               	movlw	26
  7067  006264  5C05               	subwf	(??_isupper+2)^0,w,c
  7068  006266  B0D8               	btfsc	status,0,c
  7069  006268  D002               	goto	u3580
  7070  00626A  0E01               	movlw	1
  7071  00626C  D001               	goto	u3590
  7072  00626E                     u3580:
  7073  00626E  0E00               	movlw	0
  7074  006270                     u3590:
  7075  006270  6E01               	movwf	?_isupper^0,c
  7076  006272  6A02               	clrf	(?_isupper+1)^0,c
  7077  006274  0012               	return		;funcret
  7078  006276                     __end_of_isupper:
  7079                           	opt callstack 0
  7080                           
  7081 ;; *************** function _strcpy *****************
  7082 ;; Defined at:
  7083 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  7084 ;; Parameters:    Size  Location     Type
  7085 ;;  dest            2    0[COMRAM] PTR unsigned char 
  7086 ;;		 -> dbuf(80), 
  7087 ;;  src             2    2[COMRAM] PTR const unsigned char 
  7088 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  7089 ;;		 -> dbuf(80), 
  7090 ;; Auto vars:     Size  Location     Type
  7091 ;;  d               2    8[COMRAM] PTR unsigned char 
  7092 ;;		 -> dbuf(80), 
  7093 ;;  s               2    6[COMRAM] PTR const unsigned char 
  7094 ;;		 -> STR_17(4), STR_16(4), STR_13(4), STR_12(4), 
  7095 ;;		 -> dbuf(80), 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  2    0[COMRAM] PTR unsigned char 
  7098 ;; Registers used:
  7099 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7100 ;; Tracked objects:
  7101 ;;		On entry : 3F/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7105 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7106 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7107 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7108 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7109 ;;Total ram usage:       10 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; This function calls:
  7112 ;;		Nothing
  7113 ;; This function is called by:
  7114 ;;		_efgtoa
  7115 ;; This function uses a non-reentrant model
  7116 ;;
  7117                           
  7118                           	psect	text16
  7119  005F00                     __ptext16:
  7120                           	opt callstack 0
  7121  005F00                     _strcpy:
  7122                           	opt callstack 25
  7123                           
  7124                           ; BSR set to: 0
  7125                           
  7126                           ;incstack = 0
  7127  005F00  0060  F00C  F007   	movff	strcpy@src,strcpy@s
  7128  005F06  0060  F010  F008   	movff	strcpy@src+1,strcpy@s+1
  7129  005F0C  0060  F004  F009   	movff	strcpy@dest,strcpy@d
  7130  005F12  0060  F008  F00A   	movff	strcpy@dest+1,strcpy@d+1
  7131  005F18                     l5626:
  7132  005F18  5007               	movf	strcpy@s^0,w,c
  7133  005F1A  6E05               	movwf	??_strcpy^0,c
  7134  005F1C  5008               	movf	(strcpy@s+1)^0,w,c
  7135  005F1E  6E06               	movwf	(??_strcpy+1)^0,c
  7136  005F20  4A07               	infsnz	strcpy@s^0,f,c
  7137  005F22  2A08               	incf	(strcpy@s+1)^0,f,c
  7138  005F24  0060  F017  FFF6   	movff	??_strcpy,tblptrl
  7139  005F2A  0060  F01B  FFF7   	movff	??_strcpy+1,tblptrh
  7140  005F30  0E00               	movlw	low (__smallconst shr (0+16))
  7141  005F32  6EF8               	movwf	tblptru,c
  7142  005F34  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  7143  005F3A  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  7144  005F40  4A09               	infsnz	strcpy@d^0,f,c
  7145  005F42  2A0A               	incf	(strcpy@d+1)^0,f,c
  7146  005F44  0E1F               	movlw	(high __ramtop+-1)
  7147  005F46  64F7               	cpfsgt	tblptrh,c
  7148  005F48  D003               	bra	u7097
  7149  005F4A  0008               	tblrd		*
  7150  005F4C  50F5               	movf	tablat,w,c
  7151  005F4E  D007               	bra	u7090
  7152  005F50                     u7097:
  7153  005F50  006F FFDB FFE1     	movff	tblptrl,fsr1l
  7154  005F56  006F FFDF FFE2     	movff	tblptrh,fsr1h
  7155  005F5C  50E7               	movf	indf1,w,c
  7156  005F5E                     u7090:
  7157  005F5E  6EDF               	movwf	indf2,c
  7158  005F60  50DF               	movf	indf2,w,c
  7159  005F62  B4D8               	btfsc	status,2,c
  7160  005F64  0012               	return	
  7161  005F66  D7D8               	goto	l5626
  7162  005F68                     __end_of_strcpy:
  7163                           	opt callstack 0
  7164                           
  7165 ;; *************** function _pad *****************
  7166 ;; Defined at:
  7167 ;;		line 72 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  7170 ;;		 -> sprintf@f(5), 
  7171 ;;  buf             2   15[COMRAM] PTR unsigned char 
  7172 ;;		 -> dbuf(80), 
  7173 ;;  p               2   17[COMRAM] int 
  7174 ;; Auto vars:     Size  Location     Type
  7175 ;;  w               2   22[COMRAM] int 
  7176 ;;  i               2   20[COMRAM] int 
  7177 ;; Return value:  Size  Location     Type
  7178 ;;                  2   14[COMRAM] int 
  7179 ;; Registers used:
  7180 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7181 ;; Tracked objects:
  7182 ;;		On entry : 0/0
  7183 ;;		On exit  : 0/0
  7184 ;;		Unchanged: 0/0
  7185 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7186 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7188 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7189 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7190 ;;Total ram usage:       10 bytes
  7191 ;; Hardware stack levels used:    1
  7192 ;; Hardware stack levels required when called:    3
  7193 ;; This function calls:
  7194 ;;		_fputc
  7195 ;;		_fputs
  7196 ;;		_strlen
  7197 ;; This function is called by:
  7198 ;;		_efgtoa
  7199 ;; This function uses a non-reentrant model
  7200 ;;
  7201                           
  7202                           	psect	text17
  7203  0058CE                     __ptext17:
  7204                           	opt callstack 0
  7205  0058CE                     _pad:
  7206                           	opt callstack 22
  7207                           
  7208                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static int pad(FI
      +                          LE *fp, char *buf, int p);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt
      +                          .c: 73: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 74:     int 
      +                          i, w;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 77:     if (flag
      +                          s & (1 << 0)) {
  7209                           
  7210                           ;incstack = 0
  7211  0058CE  0104               	movlb	4	; () banked
  7212  0058D0  A142               	btfss	_flags& (0+255),0,b
  7213  0058D2  D00B               	goto	l5606
  7214                           
  7215                           ; BSR set to: 4
  7216                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:         fputs((co
      +                          nst char *)buf, fp);
  7217  0058D4  0060  F040  F009   	movff	pad@buf,fputs@s
  7218  0058DA  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7219  0058E0  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7220  0058E6  ECD0  F030         	call	_fputs	;wreg free
  7221  0058EA                     l5606:
  7222                           
  7223                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ?
      +                           0 : p;
  7224  0058EA  BE13               	btfsc	(pad@p+1)^0,7,c
  7225  0058EC  D007               	goto	l5610
  7226  0058EE  0060  F048  F017   	movff	pad@p,pad@w
  7227  0058F4  0060  F04C  F018   	movff	pad@p+1,pad@w+1
  7228  0058FA  D004               	goto	l576
  7229  0058FC                     l5610:
  7230  0058FC  0E00               	movlw	0
  7231  0058FE  6E18               	movwf	(pad@w+1)^0,c
  7232  005900  0E00               	movlw	0
  7233  005902  6E17               	movwf	pad@w^0,c
  7234  005904                     l576:
  7235                           
  7236                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  7237  005904  0E00               	movlw	0
  7238  005906  6E16               	movwf	(pad@i+1)^0,c
  7239  005908  0E00               	movlw	0
  7240  00590A  6E15               	movwf	pad@i^0,c
  7241                           
  7242                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7243  00590C  D00B               	goto	l5616
  7244  00590E                     l5612:
  7245                           
  7246                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:         fputc(' '
      +                          , fp);
  7247  00590E  0E00               	movlw	0
  7248  005910  6E02               	movwf	(fputc@c+1)^0,c
  7249  005912  0E20               	movlw	32
  7250  005914  6E01               	movwf	fputc@c^0,c
  7251  005916  0060  F03C  F003   	movff	pad@fp,fputc@fp
  7252  00591C  EC1C  F02E         	call	_fputc	;wreg free
  7253                           
  7254                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:         ++i;
  7255  005920  4A15               	infsnz	pad@i^0,f,c
  7256  005922  2A16               	incf	(pad@i+1)^0,f,c
  7257  005924                     l5616:
  7258                           
  7259                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  7260  005924  5017               	movf	pad@w^0,w,c
  7261  005926  5C15               	subwf	pad@i^0,w,c
  7262  005928  5016               	movf	(pad@i+1)^0,w,c
  7263  00592A  0A80               	xorlw	128
  7264  00592C  6E14               	movwf	??_pad^0,c
  7265  00592E  5018               	movf	(pad@w+1)^0,w,c
  7266  005930  0A80               	xorlw	128
  7267  005932  5814               	subwfb	??_pad^0,w,c
  7268  005934  A0D8               	btfss	status,0,c
  7269  005936  D7EB               	goto	l5612
  7270                           
  7271                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if (!(flags &
      +                           (1 << 0))) {
  7272  005938  0104               	movlb	4	; () banked
  7273  00593A  B142               	btfsc	_flags& (0+255),0,b
  7274  00593C  D00B               	goto	l5620
  7275                           
  7276                           ; BSR set to: 4
  7277                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:         fputs((co
      +                          nst char *)buf, fp);
  7278  00593E  0060  F040  F009   	movff	pad@buf,fputs@s
  7279  005944  0060  F044  F00A   	movff	pad@buf+1,fputs@s+1
  7280  00594A  0060  F03C  F00B   	movff	pad@fp,fputs@fp
  7281  005950  ECD0  F030         	call	_fputs	;wreg free
  7282  005954                     l5620:
  7283                           
  7284                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     return strlen
      +                          (buf) + w;
  7285  005954  0060  F040  F001   	movff	pad@buf,strlen@s
  7286  00595A  0060  F044  F002   	movff	pad@buf+1,strlen@s+1
  7287  005960  EC55  F031         	call	_strlen	;wreg free
  7288  005964  5017               	movf	pad@w^0,w,c
  7289  005966  2401               	addwf	?_strlen^0,w,c
  7290  005968  6E0F               	movwf	?_pad^0,c
  7291  00596A  5018               	movf	(pad@w+1)^0,w,c
  7292  00596C  2002               	addwfc	(?_strlen+1)^0,w,c
  7293  00596E  6E10               	movwf	(?_pad+1)^0,c
  7294  005970  0012               	return		;funcret
  7295  005972                     __end_of_pad:
  7296                           	opt callstack 0
  7297                           
  7298 ;; *************** function _strlen *****************
  7299 ;; Defined at:
  7300 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  7301 ;; Parameters:    Size  Location     Type
  7302 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7303 ;;		 -> dbuf(80), 
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7306 ;;		 -> dbuf(80), 
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  2    0[COMRAM] unsigned int 
  7309 ;; Registers used:
  7310 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/4
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7317 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7320 ;;Total ram usage:        4 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_pad
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text18
  7330  0062AA                     __ptext18:
  7331                           	opt callstack 0
  7332  0062AA                     _strlen:
  7333                           	opt callstack 24
  7334                           
  7335                           ;incstack = 0
  7336  0062AA  0060  F004  F003   	movff	strlen@s,strlen@a
  7337  0062B0  0060  F008  F004   	movff	strlen@s+1,strlen@a+1
  7338  0062B6  D002               	goto	l5596
  7339  0062B8                     l5594:
  7340  0062B8  4A01               	infsnz	strlen@s^0,f,c
  7341  0062BA  2A02               	incf	(strlen@s+1)^0,f,c
  7342  0062BC                     l5596:
  7343  0062BC  0060  F007  FFD9   	movff	strlen@s,fsr2l
  7344  0062C2  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  7345  0062C8  50DF               	movf	indf2,w,c
  7346  0062CA  A4D8               	btfss	status,2,c
  7347  0062CC  D7F5               	goto	l5594
  7348  0062CE  5003               	movf	strlen@a^0,w,c
  7349  0062D0  5C01               	subwf	strlen@s^0,w,c
  7350  0062D2  6E01               	movwf	?_strlen^0,c
  7351  0062D4  5004               	movf	(strlen@a+1)^0,w,c
  7352  0062D6  5802               	subwfb	(strlen@s+1)^0,w,c
  7353  0062D8  6E02               	movwf	(?_strlen+1)^0,c
  7354  0062DA  0012               	return		;funcret
  7355  0062DC                     __end_of_strlen:
  7356                           	opt callstack 0
  7357                           
  7358 ;; *************** function _fputs *****************
  7359 ;; Defined at:
  7360 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7363 ;;		 -> dbuf(80), 
  7364 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  7365 ;;		 -> sprintf@f(5), 
  7366 ;; Auto vars:     Size  Location     Type
  7367 ;;  i               2   12[COMRAM] int 
  7368 ;;  c               1   11[COMRAM] unsigned char 
  7369 ;; Return value:  Size  Location     Type
  7370 ;;                  2    8[COMRAM] int 
  7371 ;; Registers used:
  7372 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7373 ;; Tracked objects:
  7374 ;;		On entry : 3F/4
  7375 ;;		On exit  : 0/0
  7376 ;;		Unchanged: 0/0
  7377 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7378 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7379 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7381 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7382 ;;Total ram usage:        6 bytes
  7383 ;; Hardware stack levels used:    1
  7384 ;; Hardware stack levels required when called:    2
  7385 ;; This function calls:
  7386 ;;		_fputc
  7387 ;; This function is called by:
  7388 ;;		_pad
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           	psect	text19
  7393  0061A0                     __ptext19:
  7394                           	opt callstack 0
  7395  0061A0                     _fputs:
  7396                           	opt callstack 22
  7397                           
  7398                           ; BSR set to: 4
  7399                           
  7400                           ;incstack = 0
  7401  0061A0  0E00               	movlw	0
  7402  0061A2  6E0E               	movwf	(fputs@i+1)^0,c
  7403  0061A4  0E00               	movlw	0
  7404  0061A6  6E0D               	movwf	fputs@i^0,c
  7405  0061A8  D00B               	goto	l5590
  7406  0061AA                     l5586:
  7407  0061AA  0060  F030  F001   	movff	fputs@c,fputc@c
  7408  0061B0  6A02               	clrf	(fputc@c+1)^0,c
  7409  0061B2  0060  F02C  F003   	movff	fputs@fp,fputc@fp
  7410  0061B8  EC1C  F02E         	call	_fputc	;wreg free
  7411  0061BC  4A0D               	infsnz	fputs@i^0,f,c
  7412  0061BE  2A0E               	incf	(fputs@i+1)^0,f,c
  7413  0061C0                     l5590:
  7414  0061C0  500D               	movf	fputs@i^0,w,c
  7415  0061C2  2409               	addwf	fputs@s^0,w,c
  7416  0061C4  6ED9               	movwf	fsr2l,c
  7417  0061C6  500E               	movf	(fputs@i+1)^0,w,c
  7418  0061C8  200A               	addwfc	(fputs@s+1)^0,w,c
  7419  0061CA  6EDA               	movwf	fsr2h,c
  7420  0061CC  50DF               	movf	indf2,w,c
  7421  0061CE  6E0C               	movwf	fputs@c^0,c
  7422  0061D0  500C               	movf	fputs@c^0,w,c
  7423  0061D2  B4D8               	btfsc	status,2,c
  7424  0061D4  0012               	return	
  7425  0061D6  D7E9               	goto	l5586
  7426  0061D8                     __end_of_fputs:
  7427                           	opt callstack 0
  7428                           
  7429 ;; *************** function _fputc *****************
  7430 ;; Defined at:
  7431 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  c               2    0[COMRAM] int 
  7434 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7435 ;;		 -> sprintf@f(5), 
  7436 ;; Auto vars:     Size  Location     Type
  7437 ;;		None
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  2    0[COMRAM] int 
  7440 ;; Registers used:
  7441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7447 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7451 ;;Total ram usage:        8 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    1
  7454 ;; This function calls:
  7455 ;;		_putch
  7456 ;; This function is called by:
  7457 ;;		_pad
  7458 ;;		_vfpfcnvrt
  7459 ;;		_fputs
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text20
  7464  005C38                     __ptext20:
  7465                           	opt callstack 0
  7466  005C38                     _fputc:
  7467                           	opt callstack 25
  7468                           
  7469                           ;incstack = 0
  7470  005C38  5003               	movf	fputc@fp^0,w,c
  7471  005C3A  B4D8               	btfsc	status,2,c
  7472  005C3C  D003               	goto	u3530
  7473  005C3E  5003               	movf	fputc@fp^0,w,c
  7474  005C40  A4D8               	btfss	status,2,c
  7475  005C42  D004               	goto	l3562
  7476  005C44                     u3530:
  7477  005C44  5001               	movf	fputc@c^0,w,c
  7478  005C46  EC9F  F031         	call	_putch
  7479  005C4A  0012               	return	
  7480  005C4C                     l3562:
  7481  005C4C  5003               	movf	fputc@fp^0,w,c
  7482  005C4E  6ED9               	movwf	fsr2l,c
  7483  005C50  6ADA               	clrf	fsr2h,c
  7484  005C52  0E03               	movlw	3
  7485  005C54  26D9               	addwf	fsr2l,f,c
  7486  005C56  50DE               	movf	postinc2,w,c
  7487  005C58  10DE               	iorwf	postinc2,w,c
  7488  005C5A  B4D8               	btfsc	status,2,c
  7489  005C5C  D014               	goto	u3550
  7490  005C5E  5003               	movf	fputc@fp^0,w,c
  7491  005C60  6ED9               	movwf	fsr2l,c
  7492  005C62  6ADA               	clrf	fsr2h,c
  7493  005C64  0E03               	movlw	3
  7494  005C66  26D9               	addwf	fsr2l,f,c
  7495  005C68  5003               	movf	fputc@fp^0,w,c
  7496  005C6A  6EE1               	movwf	fsr1l,c
  7497  005C6C  6AE2               	clrf	fsr1h,c
  7498  005C6E  0E01               	movlw	1
  7499  005C70  26E1               	addwf	fsr1l,f,c
  7500  005C72  50DE               	movf	postinc2,w,c
  7501  005C74  5CE6               	subwf	postinc1,w,c
  7502  005C76  50E6               	movf	postinc1,w,c
  7503  005C78  0A80               	xorlw	128
  7504  005C7A  6E08               	movwf	(??_fputc+4)^0,c
  7505  005C7C  50DE               	movf	postinc2,w,c
  7506  005C7E  0A80               	xorlw	128
  7507  005C80  5808               	subwfb	(??_fputc+4)^0,w,c
  7508  005C82  B0D8               	btfsc	status,0,c
  7509  005C84  0012               	return	
  7510  005C86                     u3550:
  7511  005C86  5003               	movf	fputc@fp^0,w,c
  7512  005C88  6ED9               	movwf	fsr2l,c
  7513  005C8A  6ADA               	clrf	fsr2h,c
  7514  005C8C  0E01               	movlw	1
  7515  005C8E  26D9               	addwf	fsr2l,f,c
  7516  005C90  50DF               	movf	indf2,w,c
  7517  005C92  6E04               	movwf	??_fputc^0,c
  7518  005C94  5003               	movf	fputc@fp^0,w,c
  7519  005C96  6ED9               	movwf	fsr2l,c
  7520  005C98  6ADA               	clrf	fsr2h,c
  7521  005C9A  50DF               	movf	indf2,w,c
  7522  005C9C  2404               	addwf	??_fputc^0,w,c
  7523  005C9E  6ED9               	movwf	fsr2l,c
  7524  005CA0  6ADA               	clrf	fsr2h,c
  7525  005CA2  0060  F007  FFDF   	movff	fputc@c,indf2
  7526  005CA8  5003               	movf	fputc@fp^0,w,c
  7527  005CAA  6ED9               	movwf	fsr2l,c
  7528  005CAC  6ADA               	clrf	fsr2h,c
  7529  005CAE  0E01               	movlw	1
  7530  005CB0  26D9               	addwf	fsr2l,f,c
  7531  005CB2  2ADE               	incf	postinc2,f,c
  7532  005CB4  0E00               	movlw	0
  7533  005CB6  22DD               	addwfc	postdec2,f,c
  7534  005CB8  0012               	return		;funcret
  7535  005CBA                     __end_of_fputc:
  7536                           	opt callstack 0
  7537                           
  7538 ;; *************** function _putch *****************
  7539 ;; Defined at:
  7540 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  7541 ;; Parameters:    Size  Location     Type
  7542 ;;  c               1    wreg     unsigned char 
  7543 ;; Auto vars:     Size  Location     Type
  7544 ;;  c               1    0[COMRAM] unsigned char 
  7545 ;; Return value:  Size  Location     Type
  7546 ;;                  1    wreg      void 
  7547 ;; Registers used:
  7548 ;;		wreg
  7549 ;; Tracked objects:
  7550 ;;		On entry : 0/0
  7551 ;;		On exit  : 0/0
  7552 ;;		Unchanged: 0/0
  7553 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7558 ;;Total ram usage:        0 bytes
  7559 ;; Hardware stack levels used:    1
  7560 ;; This function calls:
  7561 ;;		Nothing
  7562 ;; This function is called by:
  7563 ;;		_fputc
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           	psect	text21
  7568  00633E                     __ptext21:
  7569                           	opt callstack 0
  7570  00633E                     _putch:
  7571                           	opt callstack 25
  7572                           
  7573                           ;incstack = 0
  7574  00633E  0012               	return		;funcret
  7575  006340                     __end_of_putch:
  7576                           	opt callstack 0
  7577                           
  7578 ;; *************** function _floorf *****************
  7579 ;; Defined at:
  7580 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  7581 ;; Parameters:    Size  Location     Type
  7582 ;;  x               4   55[COMRAM] float 
  7583 ;; Auto vars:     Size  Location     Type
  7584 ;;  u               4   71[COMRAM] struct .
  7585 ;;  m               4   65[COMRAM] unsigned long 
  7586 ;;  e               2   69[COMRAM] int 
  7587 ;; Return value:  Size  Location     Type
  7588 ;;                  4   55[COMRAM] float 
  7589 ;; Registers used:
  7590 ;;		wreg, status,2, status,0
  7591 ;; Tracked objects:
  7592 ;;		On entry : 0/0
  7593 ;;		On exit  : 0/0
  7594 ;;		Unchanged: 0/0
  7595 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7596 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7597 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7598 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7599 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7600 ;;Total ram usage:       20 bytes
  7601 ;; Hardware stack levels used:    1
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_efgtoa
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           	psect	text22
  7610  004A98                     __ptext22:
  7611                           	opt callstack 0
  7612  004A98                     _floorf:
  7613                           	opt callstack 25
  7614                           
  7615                           ;incstack = 0
  7616  004A98  0061  F0A0  F048   	movff	floorf@F524,floorf@u
  7617  004A9E  0061  F0A4  F049   	movff	floorf@F524+1,floorf@u+1
  7618  004AA4  0061  F0A8  F04A   	movff	floorf@F524+2,floorf@u+2
  7619  004AAA  0061  F0AC  F04B   	movff	floorf@F524+3,floorf@u+3
  7620  004AB0  0060  F0E0  F048   	movff	floorf@x,floorf@u
  7621  004AB6  0060  F0E4  F049   	movff	floorf@x+1,floorf@u+1
  7622  004ABC  0060  F0E8  F04A   	movff	floorf@x+2,floorf@u+2
  7623  004AC2  0060  F0EC  F04B   	movff	floorf@x+3,floorf@u+3
  7624  004AC8  0E81               	movlw	129
  7625  004ACA  6E3C               	movwf	??_floorf^0,c
  7626  004ACC  0EFF               	movlw	255
  7627  004ACE  6E3D               	movwf	(??_floorf+1)^0,c
  7628  004AD0  0060  F120  F03E   	movff	floorf@u,??_floorf+2
  7629  004AD6  0060  F124  F03F   	movff	floorf@u+1,??_floorf+3
  7630  004ADC  0060  F128  F040   	movff	floorf@u+2,??_floorf+4
  7631  004AE2  0060  F12C  F041   	movff	floorf@u+3,??_floorf+5
  7632  004AE8  0E18               	movlw	24
  7633  004AEA  D005               	goto	u4150
  7634  004AEC                     u4155:
  7635  004AEC  90D8               	bcf	status,0,c
  7636  004AEE  3241               	rrcf	(??_floorf+5)^0,f,c
  7637  004AF0  3240               	rrcf	(??_floorf+4)^0,f,c
  7638  004AF2  323F               	rrcf	(??_floorf+3)^0,f,c
  7639  004AF4  323E               	rrcf	(??_floorf+2)^0,f,c
  7640  004AF6                     u4150:
  7641  004AF6  2EE8               	decfsz	wreg,f,c
  7642  004AF8  D7F9               	goto	u4155
  7643  004AFA  503E               	movf	(??_floorf+2)^0,w,c
  7644  004AFC  243C               	addwf	??_floorf^0,w,c
  7645  004AFE  6E46               	movwf	floorf@e^0,c
  7646  004B00  0E00               	movlw	0
  7647  004B02  203D               	addwfc	(??_floorf+1)^0,w,c
  7648  004B04  6E47               	movwf	(floorf@e+1)^0,c
  7649  004B06  BE47               	btfsc	(floorf@e+1)^0,7,c
  7650  004B08  D013               	goto	l3858
  7651  004B0A  5047               	movf	(floorf@e+1)^0,w,c
  7652  004B0C  E104               	bnz	u4160
  7653  004B0E  0E17               	movlw	23
  7654  004B10  5C46               	subwf	floorf@e^0,w,c
  7655  004B12  A0D8               	btfss	status,0,c
  7656  004B14  D00D               	goto	l3858
  7657  004B16                     u4160:
  7658  004B16  0060  F0E0  F038   	movff	floorf@x,?_floorf
  7659  004B1C  0060  F0E4  F039   	movff	floorf@x+1,?_floorf+1
  7660  004B22  0060  F0E8  F03A   	movff	floorf@x+2,?_floorf+2
  7661  004B28  0060  F0EC  F03B   	movff	floorf@x+3,?_floorf+3
  7662  004B2E  0012               	return	
  7663  004B30                     l3858:
  7664  004B30  BE47               	btfsc	(floorf@e+1)^0,7,c
  7665  004B32  D064               	goto	l3868
  7666  004B34  0060  F118  F03C   	movff	floorf@e,??_floorf
  7667  004B3A  0EFF               	movlw	255
  7668  004B3C  6E3D               	movwf	(??_floorf+1)^0,c
  7669  004B3E  0EFF               	movlw	255
  7670  004B40  6E3E               	movwf	(??_floorf+2)^0,c
  7671  004B42  0E7F               	movlw	127
  7672  004B44  6E3F               	movwf	(??_floorf+3)^0,c
  7673  004B46  0E00               	movlw	0
  7674  004B48  6E40               	movwf	(??_floorf+4)^0,c
  7675  004B4A                     u4185:
  7676  004B4A  663C               	tstfsz	??_floorf^0,c
  7677  004B4C  D001               	goto	u4186
  7678  004B4E  D007               	goto	u4187
  7679  004B50                     u4186:
  7680  004B50  3440               	rlcf	(??_floorf+4)^0,w,c
  7681  004B52  3240               	rrcf	(??_floorf+4)^0,f,c
  7682  004B54  323F               	rrcf	(??_floorf+3)^0,f,c
  7683  004B56  323E               	rrcf	(??_floorf+2)^0,f,c
  7684  004B58  323D               	rrcf	(??_floorf+1)^0,f,c
  7685  004B5A  2E3C               	decfsz	??_floorf^0,f,c
  7686  004B5C  D7F6               	goto	u4185
  7687  004B5E                     u4187:
  7688  004B5E  0060  F0F4  F042   	movff	??_floorf+1,floorf@m
  7689  004B64  0060  F0F8  F043   	movff	??_floorf+2,floorf@m+1
  7690  004B6A  0060  F0FC  F044   	movff	??_floorf+3,floorf@m+2
  7691  004B70  0060  F100  F045   	movff	??_floorf+4,floorf@m+3
  7692  004B76  5042               	movf	floorf@m^0,w,c
  7693  004B78  1448               	andwf	floorf@u^0,w,c
  7694  004B7A  6E3C               	movwf	??_floorf^0,c
  7695  004B7C  5043               	movf	(floorf@m+1)^0,w,c
  7696  004B7E  1449               	andwf	(floorf@u+1)^0,w,c
  7697  004B80  6E3D               	movwf	(??_floorf+1)^0,c
  7698  004B82  5044               	movf	(floorf@m+2)^0,w,c
  7699  004B84  144A               	andwf	(floorf@u+2)^0,w,c
  7700  004B86  6E3E               	movwf	(??_floorf+2)^0,c
  7701  004B88  5045               	movf	(floorf@m+3)^0,w,c
  7702  004B8A  144B               	andwf	(floorf@u+3)^0,w,c
  7703  004B8C  6E3F               	movwf	(??_floorf+3)^0,c
  7704  004B8E  503C               	movf	??_floorf^0,w,c
  7705  004B90  103D               	iorwf	(??_floorf+1)^0,w,c
  7706  004B92  103E               	iorwf	(??_floorf+2)^0,w,c
  7707  004B94  103F               	iorwf	(??_floorf+3)^0,w,c
  7708  004B96  B4D8               	btfsc	status,2,c
  7709  004B98  D7BE               	goto	u4160
  7710  004B9A  0060  F120  F03C   	movff	floorf@u,??_floorf
  7711  004BA0  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7712  004BA6  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7713  004BAC  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7714  004BB2  0E20               	movlw	32
  7715  004BB4  D005               	goto	u4200
  7716  004BB6                     u4205:
  7717  004BB6  90D8               	bcf	status,0,c
  7718  004BB8  323F               	rrcf	(??_floorf+3)^0,f,c
  7719  004BBA  323E               	rrcf	(??_floorf+2)^0,f,c
  7720  004BBC  323D               	rrcf	(??_floorf+1)^0,f,c
  7721  004BBE  323C               	rrcf	??_floorf^0,f,c
  7722  004BC0                     u4200:
  7723  004BC0  2EE8               	decfsz	wreg,f,c
  7724  004BC2  D7F9               	goto	u4205
  7725  004BC4  503C               	movf	??_floorf^0,w,c
  7726  004BC6  B4D8               	btfsc	status,2,c
  7727  004BC8  D008               	goto	l1438
  7728  004BCA  5042               	movf	floorf@m^0,w,c
  7729  004BCC  2648               	addwf	floorf@u^0,f,c
  7730  004BCE  5043               	movf	(floorf@m+1)^0,w,c
  7731  004BD0  2249               	addwfc	(floorf@u+1)^0,f,c
  7732  004BD2  5044               	movf	(floorf@m+2)^0,w,c
  7733  004BD4  224A               	addwfc	(floorf@u+2)^0,f,c
  7734  004BD6  5045               	movf	(floorf@m+3)^0,w,c
  7735  004BD8  224B               	addwfc	(floorf@u+3)^0,f,c
  7736  004BDA                     l1438:
  7737  004BDA  1C42               	comf	floorf@m^0,w,c
  7738  004BDC  6E3C               	movwf	??_floorf^0,c
  7739  004BDE  1C43               	comf	(floorf@m+1)^0,w,c
  7740  004BE0  6E3D               	movwf	(??_floorf+1)^0,c
  7741  004BE2  1C44               	comf	(floorf@m+2)^0,w,c
  7742  004BE4  6E3E               	movwf	(??_floorf+2)^0,c
  7743  004BE6  1C45               	comf	(floorf@m+3)^0,w,c
  7744  004BE8  6E3F               	movwf	(??_floorf+3)^0,c
  7745  004BEA  503C               	movf	??_floorf^0,w,c
  7746  004BEC  1648               	andwf	floorf@u^0,f,c
  7747  004BEE  503D               	movf	(??_floorf+1)^0,w,c
  7748  004BF0  1649               	andwf	(floorf@u+1)^0,f,c
  7749  004BF2  503E               	movf	(??_floorf+2)^0,w,c
  7750  004BF4  164A               	andwf	(floorf@u+2)^0,f,c
  7751  004BF6  503F               	movf	(??_floorf+3)^0,w,c
  7752  004BF8  164B               	andwf	(floorf@u+3)^0,f,c
  7753  004BFA  D036               	goto	l3876
  7754  004BFC                     l3868:
  7755  004BFC  0060  F120  F03C   	movff	floorf@u,??_floorf
  7756  004C02  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  7757  004C08  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  7758  004C0E  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  7759  004C14  0E20               	movlw	32
  7760  004C16  D005               	goto	u4220
  7761  004C18                     u4225:
  7762  004C18  90D8               	bcf	status,0,c
  7763  004C1A  323F               	rrcf	(??_floorf+3)^0,f,c
  7764  004C1C  323E               	rrcf	(??_floorf+2)^0,f,c
  7765  004C1E  323D               	rrcf	(??_floorf+1)^0,f,c
  7766  004C20  323C               	rrcf	??_floorf^0,f,c
  7767  004C22                     u4220:
  7768  004C22  2EE8               	decfsz	wreg,f,c
  7769  004C24  D7F9               	goto	u4225
  7770  004C26  663C               	tstfsz	??_floorf^0,c
  7771  004C28  D008               	goto	l3872
  7772  004C2A  0E00               	movlw	0
  7773  004C2C  6E48               	movwf	floorf@u^0,c
  7774  004C2E  0E00               	movlw	0
  7775  004C30  6E49               	movwf	(floorf@u+1)^0,c
  7776  004C32  0E00               	movlw	0
  7777  004C34  6E4A               	movwf	(floorf@u+2)^0,c
  7778  004C36  0E00               	movlw	0
  7779  004C38  D016               	goto	L8
  7780  004C3A                     l3872:
  7781  004C3A  90D8               	bcf	status,0,c
  7782  004C3C  3448               	rlcf	floorf@u^0,w,c
  7783  004C3E  6E3C               	movwf	??_floorf^0,c
  7784  004C40  3449               	rlcf	(floorf@u+1)^0,w,c
  7785  004C42  6E3D               	movwf	(??_floorf+1)^0,c
  7786  004C44  344A               	rlcf	(floorf@u+2)^0,w,c
  7787  004C46  6E3E               	movwf	(??_floorf+2)^0,c
  7788  004C48  344B               	rlcf	(floorf@u+3)^0,w,c
  7789  004C4A  6E3F               	movwf	(??_floorf+3)^0,c
  7790  004C4C  503C               	movf	??_floorf^0,w,c
  7791  004C4E  103D               	iorwf	(??_floorf+1)^0,w,c
  7792  004C50  103E               	iorwf	(??_floorf+2)^0,w,c
  7793  004C52  103F               	iorwf	(??_floorf+3)^0,w,c
  7794  004C54  B4D8               	btfsc	status,2,c
  7795  004C56  D008               	goto	l3876
  7796  004C58  0E00               	movlw	0
  7797  004C5A  6E48               	movwf	floorf@u^0,c
  7798  004C5C  0E00               	movlw	0
  7799  004C5E  6E49               	movwf	(floorf@u+1)^0,c
  7800  004C60  0E80               	movlw	128
  7801  004C62  6E4A               	movwf	(floorf@u+2)^0,c
  7802  004C64  0EBF               	movlw	191
  7803  004C66                     L8:
  7804  004C66  6E4B               	movwf	(floorf@u+3)^0,c
  7805  004C68                     l3876:
  7806  004C68  0060  F120  F038   	movff	floorf@u,?_floorf
  7807  004C6E  0060  F124  F039   	movff	floorf@u+1,?_floorf+1
  7808  004C74  0060  F128  F03A   	movff	floorf@u+2,?_floorf+2
  7809  004C7A  0060  F12C  F03B   	movff	floorf@u+3,?_floorf+3
  7810  004C80  0012               	return		;funcret
  7811  004C82                     __end_of_floorf:
  7812                           	opt callstack 0
  7813                           
  7814 ;; *************** function ___fpclassifyf *****************
  7815 ;; Defined at:
  7816 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  7817 ;; Parameters:    Size  Location     Type
  7818 ;;  x               4    0[COMRAM] float 
  7819 ;; Auto vars:     Size  Location     Type
  7820 ;;  u               4   10[COMRAM] struct .
  7821 ;;  e               2    8[COMRAM] int 
  7822 ;; Return value:  Size  Location     Type
  7823 ;;                  2    0[COMRAM] int 
  7824 ;; Registers used:
  7825 ;;		wreg, status,2, status,0
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/4
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7831 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7832 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7833 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7834 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;Total ram usage:       14 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_efgtoa
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text23
  7845  005334                     __ptext23:
  7846                           	opt callstack 0
  7847  005334                     ___fpclassifyf:
  7848                           	opt callstack 25
  7849                           
  7850                           ;incstack = 0
  7851  005334  0061  F0B0  F00B   	movff	___fpclassifyf@F463,___fpclassifyf@u
  7852  00533A  0061  F0B4  F00C   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  7853  005340  0061  F0B8  F00D   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  7854  005346  0061  F0BC  F00E   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  7855  00534C  0060  F004  F00B   	movff	___fpclassifyf@x,___fpclassifyf@u
  7856  005352  0060  F008  F00C   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  7857  005358  0060  F00C  F00D   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  7858  00535E  0060  F010  F00E   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  7859  005364  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  7860  00536A  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7861  005370  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7862  005376  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7863  00537C  0E18               	movlw	24
  7864  00537E  D005               	goto	u4030
  7865  005380                     u4035:
  7866  005380  90D8               	bcf	status,0,c
  7867  005382  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  7868  005384  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  7869  005386  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  7870  005388  3205               	rrcf	??___fpclassifyf^0,f,c
  7871  00538A                     u4030:
  7872  00538A  2EE8               	decfsz	wreg,f,c
  7873  00538C  D7F9               	goto	u4035
  7874  00538E  5005               	movf	??___fpclassifyf^0,w,c
  7875  005390  6E09               	movwf	___fpclassifyf@e^0,c
  7876  005392  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  7877  005394  5009               	movf	___fpclassifyf@e^0,w,c
  7878  005396  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7879  005398  A4D8               	btfss	status,2,c
  7880  00539A  D019               	goto	l3828
  7881  00539C  90D8               	bcf	status,0,c
  7882  00539E  340B               	rlcf	___fpclassifyf@u^0,w,c
  7883  0053A0  6E05               	movwf	??___fpclassifyf^0,c
  7884  0053A2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  7885  0053A4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  7886  0053A6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  7887  0053A8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  7888  0053AA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  7889  0053AC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  7890  0053AE  5005               	movf	??___fpclassifyf^0,w,c
  7891  0053B0  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7892  0053B2  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7893  0053B4  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7894  0053B6  A4D8               	btfss	status,2,c
  7895  0053B8  D005               	goto	l3824
  7896  0053BA  0E00               	movlw	0
  7897  0053BC  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7898  0053BE  0E02               	movlw	2
  7899  0053C0  6E01               	movwf	?___fpclassifyf^0,c
  7900  0053C2  0012               	return	
  7901  0053C4                     l3824:
  7902  0053C4  0E00               	movlw	0
  7903  0053C6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7904  0053C8  0E03               	movlw	3
  7905  0053CA  6E01               	movwf	?___fpclassifyf^0,c
  7906  0053CC  0012               	return	
  7907  0053CE                     l3828:
  7908  0053CE  2809               	incf	___fpclassifyf@e^0,w,c
  7909  0053D0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  7910  0053D2  A4D8               	btfss	status,2,c
  7911  0053D4  D020               	goto	l3834
  7912  0053D6  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  7913  0053DC  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  7914  0053E2  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  7915  0053E8  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  7916  0053EE  0E09               	movlw	9
  7917  0053F0                     u4075:
  7918  0053F0  90D8               	bcf	status,0,c
  7919  0053F2  3605               	rlcf	??___fpclassifyf^0,f,c
  7920  0053F4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  7921  0053F6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  7922  0053F8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  7923  0053FA  2EE8               	decfsz	wreg,f,c
  7924  0053FC  D7F9               	goto	u4075
  7925  0053FE  5005               	movf	??___fpclassifyf^0,w,c
  7926  005400  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  7927  005402  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  7928  005404  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  7929  005406  A4D8               	btfss	status,2,c
  7930  005408  D002               	goto	u4080
  7931  00540A  0E01               	movlw	1
  7932  00540C  D001               	goto	u4090
  7933  00540E                     u4080:
  7934  00540E  0E00               	movlw	0
  7935  005410                     u4090:
  7936  005410  6E01               	movwf	?___fpclassifyf^0,c
  7937  005412  6A02               	clrf	(?___fpclassifyf+1)^0,c
  7938  005414  0012               	return	
  7939  005416                     l3834:
  7940  005416  0E00               	movlw	0
  7941  005418  6E02               	movwf	(?___fpclassifyf+1)^0,c
  7942  00541A  0E04               	movlw	4
  7943  00541C  6E01               	movwf	?___fpclassifyf^0,c
  7944  00541E  0012               	return		;funcret
  7945  005420                     __end_of___fpclassifyf:
  7946                           	opt callstack 0
  7947                           
  7948 ;; *************** function ___fltol *****************
  7949 ;; Defined at:
  7950 ;;		line 43 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  7951 ;; Parameters:    Size  Location     Type
  7952 ;;  f1              4    0[COMRAM] int 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  exp1            1    9[COMRAM] unsigned char 
  7955 ;;  sign1           1    8[COMRAM] unsigned char 
  7956 ;; Return value:  Size  Location     Type
  7957 ;;                  4    0[COMRAM] long 
  7958 ;; Registers used:
  7959 ;;		wreg, status,2, status,0
  7960 ;; Tracked objects:
  7961 ;;		On entry : 0/0
  7962 ;;		On exit  : 0/0
  7963 ;;		Unchanged: 0/0
  7964 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  7965 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7967 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7968 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7969 ;;Total ram usage:       10 bytes
  7970 ;; Hardware stack levels used:    1
  7971 ;; This function calls:
  7972 ;;		Nothing
  7973 ;; This function is called by:
  7974 ;;		_efgtoa
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           	psect	text24
  7979  0056AA                     __ptext24:
  7980                           	opt callstack 0
  7981  0056AA                     ___fltol:
  7982                           	opt callstack 25
  7983                           
  7984                           ;incstack = 0
  7985  0056AA  3403               	rlcf	(___fltol@f1+2)^0,w,c
  7986  0056AC  3404               	rlcf	(___fltol@f1+3)^0,w,c
  7987  0056AE  6E0A               	movwf	___fltol@exp1^0,c
  7988  0056B0  500A               	movf	___fltol@exp1^0,w,c
  7989  0056B2  A4D8               	btfss	status,2,c
  7990  0056B4  D009               	goto	l4296
  7991  0056B6                     u4890:
  7992  0056B6  0E00               	movlw	0
  7993  0056B8  6E01               	movwf	?___fltol^0,c
  7994  0056BA  0E00               	movlw	0
  7995  0056BC  6E02               	movwf	(?___fltol+1)^0,c
  7996  0056BE  0E00               	movlw	0
  7997  0056C0  6E03               	movwf	(?___fltol+2)^0,c
  7998  0056C2  0E00               	movlw	0
  7999  0056C4  6E04               	movwf	(?___fltol+3)^0,c
  8000  0056C6  0012               	return	
  8001  0056C8                     l4296:
  8002  0056C8  0060  F004  F005   	movff	___fltol@f1,??___fltol
  8003  0056CE  0060  F008  F006   	movff	___fltol@f1+1,??___fltol+1
  8004  0056D4  0060  F00C  F007   	movff	___fltol@f1+2,??___fltol+2
  8005  0056DA  0060  F010  F008   	movff	___fltol@f1+3,??___fltol+3
  8006  0056E0  0E20               	movlw	32
  8007  0056E2  D005               	goto	u4900
  8008  0056E4                     u4905:
  8009  0056E4  90D8               	bcf	status,0,c
  8010  0056E6  3208               	rrcf	(??___fltol+3)^0,f,c
  8011  0056E8  3207               	rrcf	(??___fltol+2)^0,f,c
  8012  0056EA  3206               	rrcf	(??___fltol+1)^0,f,c
  8013  0056EC  3205               	rrcf	??___fltol^0,f,c
  8014  0056EE                     u4900:
  8015  0056EE  2EE8               	decfsz	wreg,f,c
  8016  0056F0  D7F9               	goto	u4905
  8017  0056F2  5005               	movf	??___fltol^0,w,c
  8018  0056F4  6E09               	movwf	___fltol@sign1^0,c
  8019  0056F6  8E03               	bsf	(___fltol@f1+2)^0,7,c
  8020  0056F8  0EFF               	movlw	255
  8021  0056FA  1601               	andwf	___fltol@f1^0,f,c
  8022  0056FC  0EFF               	movlw	255
  8023  0056FE  1602               	andwf	(___fltol@f1+1)^0,f,c
  8024  005700  0EFF               	movlw	255
  8025  005702  1603               	andwf	(___fltol@f1+2)^0,f,c
  8026  005704  0E00               	movlw	0
  8027  005706  1604               	andwf	(___fltol@f1+3)^0,f,c
  8028  005708  0E96               	movlw	150
  8029  00570A  5E0A               	subwf	___fltol@exp1^0,f,c
  8030  00570C  AE0A               	btfss	___fltol@exp1^0,7,c
  8031  00570E  D00D               	goto	l4316
  8032  005710  500A               	movf	___fltol@exp1^0,w,c
  8033  005712  0A80               	xorlw	128
  8034  005714  0F97               	addlw	151
  8035  005716  A0D8               	btfss	status,0,c
  8036  005718  D7CE               	goto	u4890
  8037  00571A                     l4312:
  8038  00571A  90D8               	bcf	status,0,c
  8039  00571C  3204               	rrcf	(___fltol@f1+3)^0,f,c
  8040  00571E  3203               	rrcf	(___fltol@f1+2)^0,f,c
  8041  005720  3202               	rrcf	(___fltol@f1+1)^0,f,c
  8042  005722  3201               	rrcf	___fltol@f1^0,f,c
  8043  005724  3E0A               	incfsz	___fltol@exp1^0,f,c
  8044  005726  D7F9               	goto	l4312
  8045  005728  D00D               	goto	u4940
  8046  00572A                     l4316:
  8047  00572A  0E1F               	movlw	31
  8048  00572C  640A               	cpfsgt	___fltol@exp1^0,c
  8049  00572E  D007               	goto	l4324
  8050  005730  D7C2               	goto	u4890
  8051  005732                     l4322:
  8052  005732  90D8               	bcf	status,0,c
  8053  005734  3601               	rlcf	___fltol@f1^0,f,c
  8054  005736  3602               	rlcf	(___fltol@f1+1)^0,f,c
  8055  005738  3603               	rlcf	(___fltol@f1+2)^0,f,c
  8056  00573A  3604               	rlcf	(___fltol@f1+3)^0,f,c
  8057  00573C  060A               	decf	___fltol@exp1^0,f,c
  8058  00573E                     l4324:
  8059  00573E  500A               	movf	___fltol@exp1^0,w,c
  8060  005740  A4D8               	btfss	status,2,c
  8061  005742  D7F7               	goto	l4322
  8062  005744                     u4940:
  8063  005744  5009               	movf	___fltol@sign1^0,w,c
  8064  005746  B4D8               	btfsc	status,2,c
  8065  005748  D008               	goto	l4330
  8066  00574A  1E04               	comf	(___fltol@f1+3)^0,f,c
  8067  00574C  1E03               	comf	(___fltol@f1+2)^0,f,c
  8068  00574E  1E02               	comf	(___fltol@f1+1)^0,f,c
  8069  005750  6C01               	negf	___fltol@f1^0,c
  8070  005752  0E00               	movlw	0
  8071  005754  2202               	addwfc	(___fltol@f1+1)^0,f,c
  8072  005756  2203               	addwfc	(___fltol@f1+2)^0,f,c
  8073  005758  2204               	addwfc	(___fltol@f1+3)^0,f,c
  8074  00575A                     l4330:
  8075  00575A  0060  F004  F001   	movff	___fltol@f1,?___fltol
  8076  005760  0060  F008  F002   	movff	___fltol@f1+1,?___fltol+1
  8077  005766  0060  F00C  F003   	movff	___fltol@f1+2,?___fltol+2
  8078  00576C  0060  F010  F004   	movff	___fltol@f1+3,?___fltol+3
  8079  005772  0012               	return		;funcret
  8080  005774                     __end_of___fltol:
  8081                           	opt callstack 0
  8082                           
  8083 ;; *************** function ___flsub *****************
  8084 ;; Defined at:
  8085 ;;		line 245 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8086 ;; Parameters:    Size  Location     Type
  8087 ;;  b               4   80[COMRAM] long 
  8088 ;;  a               4   84[COMRAM] long 
  8089 ;; Auto vars:     Size  Location     Type
  8090 ;;		None
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  4   80[COMRAM] long 
  8093 ;; Registers used:
  8094 ;;		wreg, status,2, status,0, cstack
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8100 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8103 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8104 ;;Total ram usage:        8 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; Hardware stack levels required when called:    1
  8107 ;; This function calls:
  8108 ;;		___fladd
  8109 ;; This function is called by:
  8110 ;;		_efgtoa
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text25
  8115  005F68                     __ptext25:
  8116                           	opt callstack 0
  8117  005F68                     ___flsub:
  8118                           	opt callstack 24
  8119                           
  8120                           ;incstack = 0
  8121  005F68  0E00               	movlw	0
  8122  005F6A  1A55               	xorwf	___flsub@a^0,f,c
  8123  005F6C  0E00               	movlw	0
  8124  005F6E  1A56               	xorwf	(___flsub@a+1)^0,f,c
  8125  005F70  0E00               	movlw	0
  8126  005F72  1A57               	xorwf	(___flsub@a+2)^0,f,c
  8127  005F74  0E80               	movlw	128
  8128  005F76  1A58               	xorwf	(___flsub@a+3)^0,f,c
  8129  005F78  0060  F144  F00F   	movff	___flsub@b,___fladd@b
  8130  005F7E  0060  F148  F010   	movff	___flsub@b+1,___fladd@b+1
  8131  005F84  0060  F14C  F011   	movff	___flsub@b+2,___fladd@b+2
  8132  005F8A  0060  F150  F012   	movff	___flsub@b+3,___fladd@b+3
  8133  005F90  0060  F154  F013   	movff	___flsub@a,___fladd@a
  8134  005F96  0060  F158  F014   	movff	___flsub@a+1,___fladd@a+1
  8135  005F9C  0060  F15C  F015   	movff	___flsub@a+2,___fladd@a+2
  8136  005FA2  0060  F160  F016   	movff	___flsub@a+3,___fladd@a+3
  8137  005FA8  EC52  F022         	call	___fladd	;wreg free
  8138  005FAC  0060  F03C  F051   	movff	?___fladd,?___flsub
  8139  005FB2  0060  F040  F052   	movff	?___fladd+1,?___flsub+1
  8140  005FB8  0060  F044  F053   	movff	?___fladd+2,?___flsub+2
  8141  005FBE  0060  F048  F054   	movff	?___fladd+3,?___flsub+3
  8142  005FC4  0012               	return		;funcret
  8143  005FC6                     __end_of___flsub:
  8144                           	opt callstack 0
  8145                           
  8146 ;; *************** function ___fladd *****************
  8147 ;; Defined at:
  8148 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  b               4   14[COMRAM] long 
  8151 ;;  a               4   18[COMRAM] long 
  8152 ;; Auto vars:     Size  Location     Type
  8153 ;;  grs             1   29[COMRAM] unsigned char 
  8154 ;;  bexp            1   28[COMRAM] unsigned char 
  8155 ;;  aexp            1   27[COMRAM] unsigned char 
  8156 ;;  signs           1   26[COMRAM] unsigned char 
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  4   14[COMRAM] unsigned char 
  8159 ;; Registers used:
  8160 ;;		wreg, status,2, status,0
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8166 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8167 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8168 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8169 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8170 ;;Total ram usage:       16 bytes
  8171 ;; Hardware stack levels used:    1
  8172 ;; This function calls:
  8173 ;;		Nothing
  8174 ;; This function is called by:
  8175 ;;		_main_loop
  8176 ;;		_efgtoa
  8177 ;;		___flsub
  8178 ;; This function uses a non-reentrant model
  8179 ;;
  8180                           
  8181                           	psect	text26
  8182  0044A4                     __ptext26:
  8183                           	opt callstack 0
  8184  0044A4                     ___fladd:
  8185                           	opt callstack 24
  8186                           
  8187                           ;incstack = 0
  8188  0044A4  5012               	movf	(___fladd@b+3)^0,w,c
  8189  0044A6  0B80               	andlw	128
  8190  0044A8  6E1B               	movwf	___fladd@signs^0,c
  8191  0044AA  5012               	movf	(___fladd@b+3)^0,w,c
  8192  0044AC  2412               	addwf	(___fladd@b+3)^0,w,c
  8193  0044AE  6E1D               	movwf	___fladd@bexp^0,c
  8194  0044B0  BE11               	btfsc	(___fladd@b+2)^0,7,c
  8195  0044B2  801D               	bsf	___fladd@bexp^0,0,c
  8196  0044B4  501D               	movf	___fladd@bexp^0,w,c
  8197  0044B6  B4D8               	btfsc	status,2,c
  8198  0044B8  D00D               	goto	l3608
  8199  0044BA  281D               	incf	___fladd@bexp^0,w,c
  8200  0044BC  A4D8               	btfss	status,2,c
  8201  0044BE  D008               	goto	l3604
  8202  0044C0  0E00               	movlw	0
  8203  0044C2  6E0F               	movwf	___fladd@b^0,c
  8204  0044C4  0E00               	movlw	0
  8205  0044C6  6E10               	movwf	(___fladd@b+1)^0,c
  8206  0044C8  0E00               	movlw	0
  8207  0044CA  6E11               	movwf	(___fladd@b+2)^0,c
  8208  0044CC  0E00               	movlw	0
  8209  0044CE  6E12               	movwf	(___fladd@b+3)^0,c
  8210  0044D0                     l3604:
  8211  0044D0  8E11               	bsf	(___fladd@b+2)^0,7,c
  8212  0044D2  D006               	goto	L9
  8213  0044D4                     l3608:
  8214  0044D4  0E00               	movlw	0
  8215  0044D6  6E0F               	movwf	___fladd@b^0,c
  8216  0044D8  0E00               	movlw	0
  8217  0044DA  6E10               	movwf	(___fladd@b+1)^0,c
  8218  0044DC  0E00               	movlw	0
  8219  0044DE  6E11               	movwf	(___fladd@b+2)^0,c
  8220  0044E0                     L9:
  8221  0044E0  0E00               	movlw	0
  8222  0044E2  6E12               	movwf	(___fladd@b+3)^0,c
  8223  0044E4  5016               	movf	(___fladd@a+3)^0,w,c
  8224  0044E6  0B80               	andlw	128
  8225  0044E8  6E1C               	movwf	___fladd@aexp^0,c
  8226  0044EA  501B               	movf	___fladd@signs^0,w,c
  8227  0044EC  181C               	xorwf	___fladd@aexp^0,w,c
  8228  0044EE  A4D8               	btfss	status,2,c
  8229  0044F0  8C1B               	bsf	___fladd@signs^0,6,c
  8230  0044F2  5016               	movf	(___fladd@a+3)^0,w,c
  8231  0044F4  2416               	addwf	(___fladd@a+3)^0,w,c
  8232  0044F6  6E1C               	movwf	___fladd@aexp^0,c
  8233  0044F8  BE15               	btfsc	(___fladd@a+2)^0,7,c
  8234  0044FA  801C               	bsf	___fladd@aexp^0,0,c
  8235  0044FC  501C               	movf	___fladd@aexp^0,w,c
  8236  0044FE  B4D8               	btfsc	status,2,c
  8237  004500  D00D               	goto	l3632
  8238  004502  281C               	incf	___fladd@aexp^0,w,c
  8239  004504  A4D8               	btfss	status,2,c
  8240  004506  D008               	goto	l3628
  8241  004508  0E00               	movlw	0
  8242  00450A  6E13               	movwf	___fladd@a^0,c
  8243  00450C  0E00               	movlw	0
  8244  00450E  6E14               	movwf	(___fladd@a+1)^0,c
  8245  004510  0E00               	movlw	0
  8246  004512  6E15               	movwf	(___fladd@a+2)^0,c
  8247  004514  0E00               	movlw	0
  8248  004516  6E16               	movwf	(___fladd@a+3)^0,c
  8249  004518                     l3628:
  8250  004518  8E15               	bsf	(___fladd@a+2)^0,7,c
  8251  00451A  D006               	goto	L10
  8252  00451C                     l3632:
  8253  00451C  0E00               	movlw	0
  8254  00451E  6E13               	movwf	___fladd@a^0,c
  8255  004520  0E00               	movlw	0
  8256  004522  6E14               	movwf	(___fladd@a+1)^0,c
  8257  004524  0E00               	movlw	0
  8258  004526  6E15               	movwf	(___fladd@a+2)^0,c
  8259  004528                     L10:
  8260  004528  0E00               	movlw	0
  8261  00452A  6E16               	movwf	(___fladd@a+3)^0,c
  8262  00452C  501D               	movf	___fladd@bexp^0,w,c
  8263  00452E  5C1C               	subwf	___fladd@aexp^0,w,c
  8264  004530  B0D8               	btfsc	status,0,c
  8265  004532  D031               	goto	l3670
  8266  004534  AC1B               	btfss	___fladd@signs^0,6,c
  8267  004536  D002               	goto	l3640
  8268  004538  0E80               	movlw	128
  8269  00453A  1A1B               	xorwf	___fladd@signs^0,f,c
  8270  00453C                     l3640:
  8271  00453C  0060  F074  F01E   	movff	___fladd@bexp,___fladd@grs
  8272  004542  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8273  004548  0060  F078  F01C   	movff	___fladd@grs,___fladd@aexp
  8274  00454E  0060  F03C  F01E   	movff	___fladd@b,___fladd@grs
  8275  004554  0060  F04C  F00F   	movff	___fladd@a,___fladd@b
  8276  00455A  0060  F078  F013   	movff	___fladd@grs,___fladd@a
  8277  004560  0060  F040  F01E   	movff	___fladd@b+1,___fladd@grs
  8278  004566  0060  F050  F010   	movff	___fladd@a+1,___fladd@b+1
  8279  00456C  0060  F078  F014   	movff	___fladd@grs,___fladd@a+1
  8280  004572  0060  F044  F01E   	movff	___fladd@b+2,___fladd@grs
  8281  004578  0060  F054  F011   	movff	___fladd@a+2,___fladd@b+2
  8282  00457E  0060  F078  F015   	movff	___fladd@grs,___fladd@a+2
  8283  004584  0060  F048  F01E   	movff	___fladd@b+3,___fladd@grs
  8284  00458A  0060  F058  F012   	movff	___fladd@a+3,___fladd@b+3
  8285  004590  0060  F078  F016   	movff	___fladd@grs,___fladd@a+3
  8286  004596                     l3670:
  8287  004596  0E00               	movlw	0
  8288  004598  6E1E               	movwf	___fladd@grs^0,c
  8289  00459A  501D               	movf	___fladd@bexp^0,w,c
  8290  00459C  0060  F070  F017   	movff	___fladd@aexp,??___fladd
  8291  0045A2  6A18               	clrf	(??___fladd+1)^0,c
  8292  0045A4  5E17               	subwf	??___fladd^0,f,c
  8293  0045A6  0E00               	movlw	0
  8294  0045A8  5A18               	subwfb	(??___fladd+1)^0,f,c
  8295  0045AA  BE18               	btfsc	(??___fladd+1)^0,7,c
  8296  0045AC  D02D               	goto	l1245
  8297  0045AE  5018               	movf	(??___fladd+1)^0,w,c
  8298  0045B0  E104               	bnz	u3690
  8299  0045B2  0E1A               	movlw	26
  8300  0045B4  5C17               	subwf	??___fladd^0,w,c
  8301  0045B6  A0D8               	btfss	status,0,c
  8302  0045B8  D027               	goto	l1245
  8303  0045BA                     u3690:
  8304  0045BA  500F               	movf	___fladd@b^0,w,c
  8305  0045BC  1010               	iorwf	(___fladd@b+1)^0,w,c
  8306  0045BE  1011               	iorwf	(___fladd@b+2)^0,w,c
  8307  0045C0  1012               	iorwf	(___fladd@b+3)^0,w,c
  8308  0045C2  B4D8               	btfsc	status,2,c
  8309  0045C4  D002               	goto	u3700
  8310  0045C6  0E01               	movlw	1
  8311  0045C8  D001               	goto	u3710
  8312  0045CA                     u3700:
  8313  0045CA  0E00               	movlw	0
  8314  0045CC                     u3710:
  8315  0045CC  6E1E               	movwf	___fladd@grs^0,c
  8316  0045CE  0E00               	movlw	0
  8317  0045D0  6E0F               	movwf	___fladd@b^0,c
  8318  0045D2  0E00               	movlw	0
  8319  0045D4  6E10               	movwf	(___fladd@b+1)^0,c
  8320  0045D6  0E00               	movlw	0
  8321  0045D8  6E11               	movwf	(___fladd@b+2)^0,c
  8322  0045DA  0E00               	movlw	0
  8323  0045DC  6E12               	movwf	(___fladd@b+3)^0,c
  8324  0045DE  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  8325  0045E4  D015               	goto	u3740
  8326  0045E6                     l1246:
  8327  0045E6  A01E               	btfss	___fladd@grs^0,0,c
  8328  0045E8  D005               	goto	l3682
  8329  0045EA  90D8               	bcf	status,0,c
  8330  0045EC  301E               	rrcf	___fladd@grs^0,w,c
  8331  0045EE  0901               	iorlw	1
  8332  0045F0  6E1E               	movwf	___fladd@grs^0,c
  8333  0045F2  D002               	goto	l3684
  8334  0045F4                     l3682:
  8335  0045F4  90D8               	bcf	status,0,c
  8336  0045F6  321E               	rrcf	___fladd@grs^0,f,c
  8337  0045F8                     l3684:
  8338  0045F8  B00F               	btfsc	___fladd@b^0,0,c
  8339  0045FA  8E1E               	bsf	___fladd@grs^0,7,c
  8340  0045FC  3412               	rlcf	(___fladd@b+3)^0,w,c
  8341  0045FE  3212               	rrcf	(___fladd@b+3)^0,f,c
  8342  004600  3211               	rrcf	(___fladd@b+2)^0,f,c
  8343  004602  3210               	rrcf	(___fladd@b+1)^0,f,c
  8344  004604  320F               	rrcf	___fladd@b^0,f,c
  8345  004606  2A1D               	incf	___fladd@bexp^0,f,c
  8346  004608                     l1245:
  8347  004608  501C               	movf	___fladd@aexp^0,w,c
  8348  00460A  5C1D               	subwf	___fladd@bexp^0,w,c
  8349  00460C  A0D8               	btfss	status,0,c
  8350  00460E  D7EB               	goto	l1246
  8351  004610                     u3740:
  8352  004610  BC1B               	btfsc	___fladd@signs^0,6,c
  8353  004612  D028               	goto	l3716
  8354  004614  501D               	movf	___fladd@bexp^0,w,c
  8355  004616  A4D8               	btfss	status,2,c
  8356  004618  D009               	goto	l3698
  8357  00461A  0E00               	movlw	0
  8358  00461C  6E0F               	movwf	?___fladd^0,c
  8359  00461E  0E00               	movlw	0
  8360  004620  6E10               	movwf	(?___fladd+1)^0,c
  8361  004622  0E00               	movlw	0
  8362  004624  6E11               	movwf	(?___fladd+2)^0,c
  8363  004626  0E00               	movlw	0
  8364  004628  6E12               	movwf	(?___fladd+3)^0,c
  8365  00462A  0012               	return	
  8366  00462C                     l3698:
  8367  00462C  5013               	movf	___fladd@a^0,w,c
  8368  00462E  260F               	addwf	___fladd@b^0,f,c
  8369  004630  5014               	movf	(___fladd@a+1)^0,w,c
  8370  004632  2210               	addwfc	(___fladd@b+1)^0,f,c
  8371  004634  5015               	movf	(___fladd@a+2)^0,w,c
  8372  004636  2211               	addwfc	(___fladd@b+2)^0,f,c
  8373  004638  5016               	movf	(___fladd@a+3)^0,w,c
  8374  00463A  2212               	addwfc	(___fladd@b+3)^0,f,c
  8375  00463C  A012               	btfss	(___fladd@b+3)^0,0,c
  8376  00463E  D071               	goto	u3870
  8377  004640  A01E               	btfss	___fladd@grs^0,0,c
  8378  004642  D005               	goto	l3706
  8379  004644  90D8               	bcf	status,0,c
  8380  004646  301E               	rrcf	___fladd@grs^0,w,c
  8381  004648  0901               	iorlw	1
  8382  00464A  6E1E               	movwf	___fladd@grs^0,c
  8383  00464C  D002               	goto	l3708
  8384  00464E                     l3706:
  8385  00464E  90D8               	bcf	status,0,c
  8386  004650  321E               	rrcf	___fladd@grs^0,f,c
  8387  004652                     l3708:
  8388  004652  B00F               	btfsc	___fladd@b^0,0,c
  8389  004654  8E1E               	bsf	___fladd@grs^0,7,c
  8390  004656  3412               	rlcf	(___fladd@b+3)^0,w,c
  8391  004658  3212               	rrcf	(___fladd@b+3)^0,f,c
  8392  00465A  3211               	rrcf	(___fladd@b+2)^0,f,c
  8393  00465C  3210               	rrcf	(___fladd@b+1)^0,f,c
  8394  00465E  320F               	rrcf	___fladd@b^0,f,c
  8395  004660  2A1D               	incf	___fladd@bexp^0,f,c
  8396  004662  D05F               	goto	u3870
  8397  004664                     l3716:
  8398  004664  5013               	movf	___fladd@a^0,w,c
  8399  004666  5C0F               	subwf	___fladd@b^0,w,c
  8400  004668  5014               	movf	(___fladd@a+1)^0,w,c
  8401  00466A  5810               	subwfb	(___fladd@b+1)^0,w,c
  8402  00466C  5015               	movf	(___fladd@a+2)^0,w,c
  8403  00466E  5811               	subwfb	(___fladd@b+2)^0,w,c
  8404  004670  5012               	movf	(___fladd@b+3)^0,w,c
  8405  004672  0A80               	xorlw	128
  8406  004674  6E17               	movwf	??___fladd^0,c
  8407  004676  5016               	movf	(___fladd@a+3)^0,w,c
  8408  004678  0A80               	xorlw	128
  8409  00467A  5817               	subwfb	??___fladd^0,w,c
  8410  00467C  B0D8               	btfsc	status,0,c
  8411  00467E  D025               	goto	l3726
  8412  004680  500F               	movf	___fladd@b^0,w,c
  8413  004682  5C13               	subwf	___fladd@a^0,w,c
  8414  004684  6E17               	movwf	??___fladd^0,c
  8415  004686  5010               	movf	(___fladd@b+1)^0,w,c
  8416  004688  5814               	subwfb	(___fladd@a+1)^0,w,c
  8417  00468A  6E18               	movwf	(??___fladd+1)^0,c
  8418  00468C  5011               	movf	(___fladd@b+2)^0,w,c
  8419  00468E  5815               	subwfb	(___fladd@a+2)^0,w,c
  8420  004690  6E19               	movwf	(??___fladd+2)^0,c
  8421  004692  5012               	movf	(___fladd@b+3)^0,w,c
  8422  004694  5816               	subwfb	(___fladd@a+3)^0,w,c
  8423  004696  6E1A               	movwf	(??___fladd+3)^0,c
  8424  004698  0EFF               	movlw	255
  8425  00469A  2417               	addwf	??___fladd^0,w,c
  8426  00469C  6E0F               	movwf	___fladd@b^0,c
  8427  00469E  0EFF               	movlw	255
  8428  0046A0  2018               	addwfc	(??___fladd+1)^0,w,c
  8429  0046A2  6E10               	movwf	(___fladd@b+1)^0,c
  8430  0046A4  0EFF               	movlw	255
  8431  0046A6  2019               	addwfc	(??___fladd+2)^0,w,c
  8432  0046A8  6E11               	movwf	(___fladd@b+2)^0,c
  8433  0046AA  0EFF               	movlw	255
  8434  0046AC  201A               	addwfc	(??___fladd+3)^0,w,c
  8435  0046AE  6E12               	movwf	(___fladd@b+3)^0,c
  8436  0046B0  0E80               	movlw	128
  8437  0046B2  1A1B               	xorwf	___fladd@signs^0,f,c
  8438  0046B4  6C1E               	negf	___fladd@grs^0,c
  8439  0046B6  501E               	movf	___fladd@grs^0,w,c
  8440  0046B8  A4D8               	btfss	status,2,c
  8441  0046BA  D00F               	goto	l1261
  8442  0046BC  0E01               	movlw	1
  8443  0046BE  260F               	addwf	___fladd@b^0,f,c
  8444  0046C0  0E00               	movlw	0
  8445  0046C2  2210               	addwfc	(___fladd@b+1)^0,f,c
  8446  0046C4  2211               	addwfc	(___fladd@b+2)^0,f,c
  8447  0046C6  2212               	addwfc	(___fladd@b+3)^0,f,c
  8448  0046C8  D008               	goto	l1261
  8449  0046CA                     l3726:
  8450  0046CA  5013               	movf	___fladd@a^0,w,c
  8451  0046CC  5E0F               	subwf	___fladd@b^0,f,c
  8452  0046CE  5014               	movf	(___fladd@a+1)^0,w,c
  8453  0046D0  5A10               	subwfb	(___fladd@b+1)^0,f,c
  8454  0046D2  5015               	movf	(___fladd@a+2)^0,w,c
  8455  0046D4  5A11               	subwfb	(___fladd@b+2)^0,f,c
  8456  0046D6  5016               	movf	(___fladd@a+3)^0,w,c
  8457  0046D8  5A12               	subwfb	(___fladd@b+3)^0,f,c
  8458  0046DA                     l1261:
  8459  0046DA  500F               	movf	___fladd@b^0,w,c
  8460  0046DC  1010               	iorwf	(___fladd@b+1)^0,w,c
  8461  0046DE  1011               	iorwf	(___fladd@b+2)^0,w,c
  8462  0046E0  1012               	iorwf	(___fladd@b+3)^0,w,c
  8463  0046E2  A4D8               	btfss	status,2,c
  8464  0046E4  D01C               	goto	l3750
  8465  0046E6  501E               	movf	___fladd@grs^0,w,c
  8466  0046E8  A4D8               	btfss	status,2,c
  8467  0046EA  D019               	goto	l3750
  8468  0046EC  0E00               	movlw	0
  8469  0046EE  6E0F               	movwf	?___fladd^0,c
  8470  0046F0  0E00               	movlw	0
  8471  0046F2  6E10               	movwf	(?___fladd+1)^0,c
  8472  0046F4  0E00               	movlw	0
  8473  0046F6  6E11               	movwf	(?___fladd+2)^0,c
  8474  0046F8  0E00               	movlw	0
  8475  0046FA  6E12               	movwf	(?___fladd+3)^0,c
  8476  0046FC  0012               	return	
  8477  0046FE                     l3734:
  8478  0046FE  90D8               	bcf	status,0,c
  8479  004700  360F               	rlcf	___fladd@b^0,f,c
  8480  004702  3610               	rlcf	(___fladd@b+1)^0,f,c
  8481  004704  3611               	rlcf	(___fladd@b+2)^0,f,c
  8482  004706  3612               	rlcf	(___fladd@b+3)^0,f,c
  8483  004708  BE1E               	btfsc	___fladd@grs^0,7,c
  8484  00470A  800F               	bsf	___fladd@b^0,0,c
  8485  00470C  A01E               	btfss	___fladd@grs^0,0,c
  8486  00470E  D002               	goto	l3744
  8487  004710  80D8               	bsf	status,0,c
  8488  004712  D001               	goto	L11
  8489  004714                     l3744:
  8490  004714  90D8               	bcf	status,0,c
  8491  004716                     L11:
  8492  004716  361E               	rlcf	___fladd@grs^0,f,c
  8493  004718  501D               	movf	___fladd@bexp^0,w,c
  8494  00471A  A4D8               	btfss	status,2,c
  8495  00471C  061D               	decf	___fladd@bexp^0,f,c
  8496  00471E                     l3750:
  8497  00471E  AE11               	btfss	(___fladd@b+2)^0,7,c
  8498  004720  D7EE               	goto	l3734
  8499  004722                     u3870:
  8500  004722  0E00               	movlw	0
  8501  004724  6E1C               	movwf	___fladd@aexp^0,c
  8502  004726  AE1E               	btfss	___fladd@grs^0,7,c
  8503  004728  D00C               	goto	l1270
  8504  00472A  0060  F078  F017   	movff	___fladd@grs,??___fladd
  8505  004730  0E7F               	movlw	127
  8506  004732  1617               	andwf	??___fladd^0,f,c
  8507  004734  B4D8               	btfsc	status,2,c
  8508  004736  D003               	goto	l1271
  8509  004738                     u3890:
  8510  004738  0E01               	movlw	1
  8511  00473A  6E1C               	movwf	___fladd@aexp^0,c
  8512  00473C  D002               	goto	l1270
  8513  00473E                     l1271:
  8514  00473E  B00F               	btfsc	___fladd@b^0,0,c
  8515  004740  D7FB               	goto	u3890
  8516  004742                     l1270:
  8517  004742  501C               	movf	___fladd@aexp^0,w,c
  8518  004744  B4D8               	btfsc	status,2,c
  8519  004746  D028               	goto	l3770
  8520  004748  0E01               	movlw	1
  8521  00474A  260F               	addwf	___fladd@b^0,f,c
  8522  00474C  0E00               	movlw	0
  8523  00474E  2210               	addwfc	(___fladd@b+1)^0,f,c
  8524  004750  2211               	addwfc	(___fladd@b+2)^0,f,c
  8525  004752  2212               	addwfc	(___fladd@b+3)^0,f,c
  8526  004754  A012               	btfss	(___fladd@b+3)^0,0,c
  8527  004756  D020               	goto	l3770
  8528  004758  0060  F03C  F017   	movff	___fladd@b,??___fladd
  8529  00475E  0060  F040  F018   	movff	___fladd@b+1,??___fladd+1
  8530  004764  0060  F044  F019   	movff	___fladd@b+2,??___fladd+2
  8531  00476A  0060  F048  F01A   	movff	___fladd@b+3,??___fladd+3
  8532  004770  341A               	rlcf	(??___fladd+3)^0,w,c
  8533  004772  321A               	rrcf	(??___fladd+3)^0,f,c
  8534  004774  3219               	rrcf	(??___fladd+2)^0,f,c
  8535  004776  3218               	rrcf	(??___fladd+1)^0,f,c
  8536  004778  3217               	rrcf	??___fladd^0,f,c
  8537  00477A  0060  F05C  F00F   	movff	??___fladd,___fladd@b
  8538  004780  0060  F060  F010   	movff	??___fladd+1,___fladd@b+1
  8539  004786  0060  F064  F011   	movff	??___fladd+2,___fladd@b+2
  8540  00478C  0060  F068  F012   	movff	??___fladd+3,___fladd@b+3
  8541  004792  281D               	incf	___fladd@bexp^0,w,c
  8542  004794  A4D8               	btfss	status,2,c
  8543  004796  2A1D               	incf	___fladd@bexp^0,f,c
  8544  004798                     l3770:
  8545  004798  281D               	incf	___fladd@bexp^0,w,c
  8546  00479A  B4D8               	btfsc	status,2,c
  8547  00479C  D003               	goto	u3950
  8548  00479E  501D               	movf	___fladd@bexp^0,w,c
  8549  0047A0  A4D8               	btfss	status,2,c
  8550  0047A2  D00D               	goto	l3778
  8551  0047A4                     u3950:
  8552  0047A4  0E00               	movlw	0
  8553  0047A6  6E0F               	movwf	___fladd@b^0,c
  8554  0047A8  0E00               	movlw	0
  8555  0047AA  6E10               	movwf	(___fladd@b+1)^0,c
  8556  0047AC  0E00               	movlw	0
  8557  0047AE  6E11               	movwf	(___fladd@b+2)^0,c
  8558  0047B0  0E00               	movlw	0
  8559  0047B2  6E12               	movwf	(___fladd@b+3)^0,c
  8560  0047B4  501D               	movf	___fladd@bexp^0,w,c
  8561  0047B6  A4D8               	btfss	status,2,c
  8562  0047B8  D002               	goto	l3778
  8563  0047BA  0E00               	movlw	0
  8564  0047BC  6E1B               	movwf	___fladd@signs^0,c
  8565  0047BE                     l3778:
  8566  0047BE  A01D               	btfss	___fladd@bexp^0,0,c
  8567  0047C0  D002               	goto	l3782
  8568  0047C2  8E11               	bsf	(___fladd@b+2)^0,7,c
  8569  0047C4  D001               	goto	l3784
  8570  0047C6                     l3782:
  8571  0047C6  9E11               	bcf	(___fladd@b+2)^0,7,c
  8572  0047C8                     l3784:
  8573  0047C8  90D8               	bcf	status,0,c
  8574  0047CA  301D               	rrcf	___fladd@bexp^0,w,c
  8575  0047CC  6E12               	movwf	(___fladd@b+3)^0,c
  8576  0047CE  BE1B               	btfsc	___fladd@signs^0,7,c
  8577  0047D0  8E12               	bsf	(___fladd@b+3)^0,7,c
  8578  0047D2  0060  F03C  F00F   	movff	___fladd@b,?___fladd
  8579  0047D8  0060  F040  F010   	movff	___fladd@b+1,?___fladd+1
  8580  0047DE  0060  F044  F011   	movff	___fladd@b+2,?___fladd+2
  8581  0047E4  0060  F048  F012   	movff	___fladd@b+3,?___fladd+3
  8582  0047EA  0012               	return		;funcret
  8583  0047EC                     __end_of___fladd:
  8584                           	opt callstack 0
  8585                           
  8586 ;; *************** function ___flneg *****************
  8587 ;; Defined at:
  8588 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  8589 ;; Parameters:    Size  Location     Type
  8590 ;;  f1              4    0[COMRAM] unsigned char 
  8591 ;; Auto vars:     Size  Location     Type
  8592 ;;		None
  8593 ;; Return value:  Size  Location     Type
  8594 ;;                  4    0[COMRAM] unsigned char 
  8595 ;; Registers used:
  8596 ;;		wreg, status,2, status,0
  8597 ;; Tracked objects:
  8598 ;;		On entry : 3F/0
  8599 ;;		On exit  : 3F/0
  8600 ;;		Unchanged: 3F/0
  8601 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8606 ;;Total ram usage:        4 bytes
  8607 ;; Hardware stack levels used:    1
  8608 ;; This function calls:
  8609 ;;		Nothing
  8610 ;; This function is called by:
  8611 ;;		_efgtoa
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text27
  8616  0061D8                     __ptext27:
  8617                           	opt callstack 0
  8618  0061D8                     ___flneg:
  8619                           	opt callstack 25
  8620                           
  8621                           ; BSR set to: 0
  8622                           
  8623                           ;incstack = 0
  8624  0061D8  5001               	movf	___flneg@f1^0,w,c
  8625  0061DA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  8626  0061DC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  8627  0061DE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  8628  0061E0  B4D8               	btfsc	status,2,c
  8629  0061E2  D008               	goto	l4286
  8630                           
  8631                           ; BSR set to: 0
  8632  0061E4  0E00               	movlw	0
  8633  0061E6  1A01               	xorwf	___flneg@f1^0,f,c
  8634  0061E8  0E00               	movlw	0
  8635  0061EA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  8636  0061EC  0E00               	movlw	0
  8637  0061EE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  8638  0061F0  0E80               	movlw	128
  8639  0061F2  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  8640  0061F4                     l4286:
  8641                           
  8642                           ; BSR set to: 0
  8643  0061F4  0060  F004  F001   	movff	___flneg@f1,?___flneg
  8644  0061FA  0060  F008  F002   	movff	___flneg@f1+1,?___flneg+1
  8645  006200  0060  F00C  F003   	movff	___flneg@f1+2,?___flneg+2
  8646  006206  0060  F010  F004   	movff	___flneg@f1+3,?___flneg+3
  8647                           
  8648                           ; BSR set to: 0
  8649  00620C  0012               	return		;funcret
  8650  00620E                     __end_of___flneg:
  8651                           	opt callstack 0
  8652                           
  8653 ;; *************** function ___flmul *****************
  8654 ;; Defined at:
  8655 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  8656 ;; Parameters:    Size  Location     Type
  8657 ;;  b               4   55[COMRAM] unsigned char 
  8658 ;;  a               4   59[COMRAM] unsigned char 
  8659 ;; Auto vars:     Size  Location     Type
  8660 ;;  prod            4   74[COMRAM] struct .
  8661 ;;  grs             4   69[COMRAM] unsigned long 
  8662 ;;  temp            2   78[COMRAM] struct .
  8663 ;;  bexp            1   73[COMRAM] unsigned char 
  8664 ;;  aexp            1   68[COMRAM] unsigned char 
  8665 ;;  sign            1   67[COMRAM] unsigned char 
  8666 ;; Return value:  Size  Location     Type
  8667 ;;                  4   55[COMRAM] unsigned char 
  8668 ;; Registers used:
  8669 ;;		wreg, status,2, status,0, prodl, prodh
  8670 ;; Tracked objects:
  8671 ;;		On entry : 0/0
  8672 ;;		On exit  : 0/0
  8673 ;;		Unchanged: 0/0
  8674 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  8675 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8676 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8677 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8678 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8679 ;;Total ram usage:       25 bytes
  8680 ;; Hardware stack levels used:    1
  8681 ;; This function calls:
  8682 ;;		Nothing
  8683 ;; This function is called by:
  8684 ;;		_main_loop
  8685 ;;		_efgtoa
  8686 ;; This function uses a non-reentrant model
  8687 ;;
  8688                           
  8689                           	psect	text28
  8690  004120                     __ptext28:
  8691                           	opt callstack 0
  8692  004120                     ___flmul:
  8693                           	opt callstack 25
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;incstack = 0
  8697  004120  503B               	movf	(___flmul@b+3)^0,w,c
  8698  004122  0B80               	andlw	128
  8699  004124  6E44               	movwf	___flmul@sign^0,c
  8700  004126  503B               	movf	(___flmul@b+3)^0,w,c
  8701  004128  243B               	addwf	(___flmul@b+3)^0,w,c
  8702  00412A  6E4A               	movwf	___flmul@bexp^0,c
  8703  00412C  BE3A               	btfsc	(___flmul@b+2)^0,7,c
  8704  00412E  804A               	bsf	___flmul@bexp^0,0,c
  8705  004130  504A               	movf	___flmul@bexp^0,w,c
  8706  004132  B4D8               	btfsc	status,2,c
  8707  004134  D00D               	goto	l4042
  8708  004136  284A               	incf	___flmul@bexp^0,w,c
  8709  004138  A4D8               	btfss	status,2,c
  8710  00413A  D008               	goto	l4040
  8711  00413C  0E00               	movlw	0
  8712  00413E  6E38               	movwf	___flmul@b^0,c
  8713  004140  0E00               	movlw	0
  8714  004142  6E39               	movwf	(___flmul@b+1)^0,c
  8715  004144  0E00               	movlw	0
  8716  004146  6E3A               	movwf	(___flmul@b+2)^0,c
  8717  004148  0E00               	movlw	0
  8718  00414A  6E3B               	movwf	(___flmul@b+3)^0,c
  8719  00414C                     l4040:
  8720  00414C  8E3A               	bsf	(___flmul@b+2)^0,7,c
  8721  00414E  D008               	goto	l4044
  8722  004150                     l4042:
  8723  004150  0E00               	movlw	0
  8724  004152  6E38               	movwf	___flmul@b^0,c
  8725  004154  0E00               	movlw	0
  8726  004156  6E39               	movwf	(___flmul@b+1)^0,c
  8727  004158  0E00               	movlw	0
  8728  00415A  6E3A               	movwf	(___flmul@b+2)^0,c
  8729  00415C  0E00               	movlw	0
  8730  00415E  6E3B               	movwf	(___flmul@b+3)^0,c
  8731  004160                     l4044:
  8732  004160  503F               	movf	(___flmul@a+3)^0,w,c
  8733  004162  0B80               	andlw	128
  8734  004164  1A44               	xorwf	___flmul@sign^0,f,c
  8735  004166  503F               	movf	(___flmul@a+3)^0,w,c
  8736  004168  243F               	addwf	(___flmul@a+3)^0,w,c
  8737  00416A  6E45               	movwf	___flmul@aexp^0,c
  8738  00416C  BE3E               	btfsc	(___flmul@a+2)^0,7,c
  8739  00416E  8045               	bsf	___flmul@aexp^0,0,c
  8740  004170  5045               	movf	___flmul@aexp^0,w,c
  8741  004172  B4D8               	btfsc	status,2,c
  8742  004174  D00D               	goto	l4060
  8743  004176  2845               	incf	___flmul@aexp^0,w,c
  8744  004178  A4D8               	btfss	status,2,c
  8745  00417A  D008               	goto	l4058
  8746  00417C  0E00               	movlw	0
  8747  00417E  6E3C               	movwf	___flmul@a^0,c
  8748  004180  0E00               	movlw	0
  8749  004182  6E3D               	movwf	(___flmul@a+1)^0,c
  8750  004184  0E00               	movlw	0
  8751  004186  6E3E               	movwf	(___flmul@a+2)^0,c
  8752  004188  0E00               	movlw	0
  8753  00418A  6E3F               	movwf	(___flmul@a+3)^0,c
  8754  00418C                     l4058:
  8755  00418C  8E3E               	bsf	(___flmul@a+2)^0,7,c
  8756  00418E  D008               	goto	l1330
  8757  004190                     l4060:
  8758  004190  0E00               	movlw	0
  8759  004192  6E3C               	movwf	___flmul@a^0,c
  8760  004194  0E00               	movlw	0
  8761  004196  6E3D               	movwf	(___flmul@a+1)^0,c
  8762  004198  0E00               	movlw	0
  8763  00419A  6E3E               	movwf	(___flmul@a+2)^0,c
  8764  00419C  0E00               	movlw	0
  8765  00419E  6E3F               	movwf	(___flmul@a+3)^0,c
  8766  0041A0                     l1330:
  8767  0041A0  5045               	movf	___flmul@aexp^0,w,c
  8768  0041A2  B4D8               	btfsc	status,2,c
  8769  0041A4  D003               	goto	u4570
  8770  0041A6  504A               	movf	___flmul@bexp^0,w,c
  8771  0041A8  A4D8               	btfss	status,2,c
  8772  0041AA  D009               	goto	l4068
  8773  0041AC                     u4570:
  8774  0041AC  0E00               	movlw	0
  8775  0041AE  6E38               	movwf	?___flmul^0,c
  8776  0041B0  0E00               	movlw	0
  8777  0041B2  6E39               	movwf	(?___flmul+1)^0,c
  8778  0041B4  0E00               	movlw	0
  8779  0041B6  6E3A               	movwf	(?___flmul+2)^0,c
  8780  0041B8  0E00               	movlw	0
  8781  0041BA  6E3B               	movwf	(?___flmul+3)^0,c
  8782  0041BC  0012               	return	
  8783  0041BE                     l4068:
  8784  0041BE  503E               	movf	(___flmul@a+2)^0,w,c
  8785  0041C0  0238               	mulwf	___flmul@b^0,c
  8786  0041C2  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8787  0041C8  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8788  0041CE  504F               	movf	___flmul@temp^0,w,c
  8789  0041D0  6E46               	movwf	___flmul@grs^0,c
  8790  0041D2  6A47               	clrf	(___flmul@grs+1)^0,c
  8791  0041D4  6A48               	clrf	(___flmul@grs+2)^0,c
  8792  0041D6  6A49               	clrf	(___flmul@grs+3)^0,c
  8793  0041D8  5050               	movf	(___flmul@temp+1)^0,w,c
  8794  0041DA  6E4B               	movwf	___flmul@prod^0,c
  8795  0041DC  6A4C               	clrf	(___flmul@prod+1)^0,c
  8796  0041DE  6A4D               	clrf	(___flmul@prod+2)^0,c
  8797  0041E0  6A4E               	clrf	(___flmul@prod+3)^0,c
  8798  0041E2  503D               	movf	(___flmul@a+1)^0,w,c
  8799  0041E4  0239               	mulwf	(___flmul@b+1)^0,c
  8800  0041E6  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8801  0041EC  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8802  0041F2  504F               	movf	___flmul@temp^0,w,c
  8803  0041F4  2646               	addwf	___flmul@grs^0,f,c
  8804  0041F6  0E00               	movlw	0
  8805  0041F8  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8806  0041FA  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8807  0041FC  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8808  0041FE  5050               	movf	(___flmul@temp+1)^0,w,c
  8809  004200  264B               	addwf	___flmul@prod^0,f,c
  8810  004202  0E00               	movlw	0
  8811  004204  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8812  004206  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8813  004208  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8814  00420A  503C               	movf	___flmul@a^0,w,c
  8815  00420C  023A               	mulwf	(___flmul@b+2)^0,c
  8816  00420E  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8817  004214  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8818  00421A  504F               	movf	___flmul@temp^0,w,c
  8819  00421C  2646               	addwf	___flmul@grs^0,f,c
  8820  00421E  0E00               	movlw	0
  8821  004220  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8822  004222  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8823  004224  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8824  004226  5050               	movf	(___flmul@temp+1)^0,w,c
  8825  004228  264B               	addwf	___flmul@prod^0,f,c
  8826  00422A  0E00               	movlw	0
  8827  00422C  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8828  00422E  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8829  004230  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8830  004232  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8831  004238  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8832  00423E  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8833  004244  6A46               	clrf	___flmul@grs^0,c
  8834  004246  503C               	movf	___flmul@a^0,w,c
  8835  004248  0239               	mulwf	(___flmul@b+1)^0,c
  8836  00424A  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8837  004250  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8838  004256  504F               	movf	___flmul@temp^0,w,c
  8839  004258  2646               	addwf	___flmul@grs^0,f,c
  8840  00425A  5050               	movf	(___flmul@temp+1)^0,w,c
  8841  00425C  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8842  00425E  0E00               	movlw	0
  8843  004260  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8844  004262  0E00               	movlw	0
  8845  004264  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8846  004266  503D               	movf	(___flmul@a+1)^0,w,c
  8847  004268  0238               	mulwf	___flmul@b^0,c
  8848  00426A  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8849  004270  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8850  004276  504F               	movf	___flmul@temp^0,w,c
  8851  004278  2646               	addwf	___flmul@grs^0,f,c
  8852  00427A  5050               	movf	(___flmul@temp+1)^0,w,c
  8853  00427C  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8854  00427E  0E00               	movlw	0
  8855  004280  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8856  004282  0E00               	movlw	0
  8857  004284  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8858  004286  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8859  00428C  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8860  004292  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8861  004298  6A46               	clrf	___flmul@grs^0,c
  8862  00429A  503C               	movf	___flmul@a^0,w,c
  8863  00429C  0238               	mulwf	___flmul@b^0,c
  8864  00429E  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8865  0042A4  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8866  0042AA  504F               	movf	___flmul@temp^0,w,c
  8867  0042AC  2646               	addwf	___flmul@grs^0,f,c
  8868  0042AE  5050               	movf	(___flmul@temp+1)^0,w,c
  8869  0042B0  2247               	addwfc	(___flmul@grs+1)^0,f,c
  8870  0042B2  0E00               	movlw	0
  8871  0042B4  2248               	addwfc	(___flmul@grs+2)^0,f,c
  8872  0042B6  0E00               	movlw	0
  8873  0042B8  2249               	addwfc	(___flmul@grs+3)^0,f,c
  8874  0042BA  503E               	movf	(___flmul@a+2)^0,w,c
  8875  0042BC  0239               	mulwf	(___flmul@b+1)^0,c
  8876  0042BE  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8877  0042C4  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8878  0042CA  504F               	movf	___flmul@temp^0,w,c
  8879  0042CC  264B               	addwf	___flmul@prod^0,f,c
  8880  0042CE  5050               	movf	(___flmul@temp+1)^0,w,c
  8881  0042D0  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8882  0042D2  0E00               	movlw	0
  8883  0042D4  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8884  0042D6  0E00               	movlw	0
  8885  0042D8  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8886  0042DA  503D               	movf	(___flmul@a+1)^0,w,c
  8887  0042DC  023A               	mulwf	(___flmul@b+2)^0,c
  8888  0042DE  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8889  0042E4  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8890  0042EA  504F               	movf	___flmul@temp^0,w,c
  8891  0042EC  264B               	addwf	___flmul@prod^0,f,c
  8892  0042EE  5050               	movf	(___flmul@temp+1)^0,w,c
  8893  0042F0  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8894  0042F2  0E00               	movlw	0
  8895  0042F4  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8896  0042F6  0E00               	movlw	0
  8897  0042F8  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8898  0042FA  503E               	movf	(___flmul@a+2)^0,w,c
  8899  0042FC  023A               	mulwf	(___flmul@b+2)^0,c
  8900  0042FE  006F FFCC  F04F    	movff	prodl,___flmul@temp
  8901  004304  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  8902  00430A  504F               	movf	___flmul@temp^0,w,c
  8903  00430C  6E40               	movwf	??___flmul^0,c
  8904  00430E  5050               	movf	(___flmul@temp+1)^0,w,c
  8905  004310  6E41               	movwf	(??___flmul+1)^0,c
  8906  004312  6A42               	clrf	(??___flmul+2)^0,c
  8907  004314  6A43               	clrf	(??___flmul+3)^0,c
  8908  004316  0060  F108  F043   	movff	??___flmul+2,??___flmul+3
  8909  00431C  0060  F104  F042   	movff	??___flmul+1,??___flmul+2
  8910  004322  0060  F100  F041   	movff	??___flmul,??___flmul+1
  8911  004328  6A40               	clrf	??___flmul^0,c
  8912  00432A  5040               	movf	??___flmul^0,w,c
  8913  00432C  264B               	addwf	___flmul@prod^0,f,c
  8914  00432E  5041               	movf	(??___flmul+1)^0,w,c
  8915  004330  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8916  004332  5042               	movf	(??___flmul+2)^0,w,c
  8917  004334  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8918  004336  5043               	movf	(??___flmul+3)^0,w,c
  8919  004338  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8920  00433A  5049               	movf	(___flmul@grs+3)^0,w,c
  8921  00433C  264B               	addwf	___flmul@prod^0,f,c
  8922  00433E  0E00               	movlw	0
  8923  004340  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8924  004342  224D               	addwfc	(___flmul@prod+2)^0,f,c
  8925  004344  224E               	addwfc	(___flmul@prod+3)^0,f,c
  8926  004346  0060  F120  F049   	movff	___flmul@grs+2,___flmul@grs+3
  8927  00434C  0060  F11C  F048   	movff	___flmul@grs+1,___flmul@grs+2
  8928  004352  0060  F118  F047   	movff	___flmul@grs,___flmul@grs+1
  8929  004358  6A46               	clrf	___flmul@grs^0,c
  8930  00435A  5045               	movf	___flmul@aexp^0,w,c
  8931  00435C  0060  F128  F040   	movff	___flmul@bexp,??___flmul
  8932  004362  6A41               	clrf	(??___flmul+1)^0,c
  8933  004364  2640               	addwf	??___flmul^0,f,c
  8934  004366  0E00               	movlw	0
  8935  004368  2241               	addwfc	(??___flmul+1)^0,f,c
  8936  00436A  0E82               	movlw	130
  8937  00436C  2440               	addwf	??___flmul^0,w,c
  8938  00436E  6E4F               	movwf	___flmul@temp^0,c
  8939  004370  0EFF               	movlw	255
  8940  004372  2041               	addwfc	(??___flmul+1)^0,w,c
  8941  004374  6E50               	movwf	(___flmul@temp+1)^0,c
  8942  004376  D00F               	goto	l4116
  8943  004378                     l4110:
  8944  004378  90D8               	bcf	status,0,c
  8945  00437A  364B               	rlcf	___flmul@prod^0,f,c
  8946  00437C  364C               	rlcf	(___flmul@prod+1)^0,f,c
  8947  00437E  364D               	rlcf	(___flmul@prod+2)^0,f,c
  8948  004380  364E               	rlcf	(___flmul@prod+3)^0,f,c
  8949  004382  BE49               	btfsc	(___flmul@grs+3)^0,7,c
  8950  004384  804B               	bsf	___flmul@prod^0,0,c
  8951  004386  90D8               	bcf	status,0,c
  8952  004388  3646               	rlcf	___flmul@grs^0,f,c
  8953  00438A  3647               	rlcf	(___flmul@grs+1)^0,f,c
  8954  00438C  3648               	rlcf	(___flmul@grs+2)^0,f,c
  8955  00438E  3649               	rlcf	(___flmul@grs+3)^0,f,c
  8956  004390  064F               	decf	___flmul@temp^0,f,c
  8957  004392  A0D8               	btfss	status,0,c
  8958  004394  0650               	decf	(___flmul@temp+1)^0,f,c
  8959  004396                     l4116:
  8960  004396  AE4D               	btfss	(___flmul@prod+2)^0,7,c
  8961  004398  D7EF               	goto	l4110
  8962  00439A  0E00               	movlw	0
  8963  00439C  6E45               	movwf	___flmul@aexp^0,c
  8964  00439E  AE49               	btfss	(___flmul@grs+3)^0,7,c
  8965  0043A0  D017               	goto	l1339
  8966  0043A2  0EFF               	movlw	255
  8967  0043A4  1446               	andwf	___flmul@grs^0,w,c
  8968  0043A6  6E40               	movwf	??___flmul^0,c
  8969  0043A8  0EFF               	movlw	255
  8970  0043AA  1447               	andwf	(___flmul@grs+1)^0,w,c
  8971  0043AC  6E41               	movwf	(??___flmul+1)^0,c
  8972  0043AE  0EFF               	movlw	255
  8973  0043B0  1448               	andwf	(___flmul@grs+2)^0,w,c
  8974  0043B2  6E42               	movwf	(??___flmul+2)^0,c
  8975  0043B4  0E7F               	movlw	127
  8976  0043B6  1449               	andwf	(___flmul@grs+3)^0,w,c
  8977  0043B8  6E43               	movwf	(??___flmul+3)^0,c
  8978  0043BA  5040               	movf	??___flmul^0,w,c
  8979  0043BC  1041               	iorwf	(??___flmul+1)^0,w,c
  8980  0043BE  1042               	iorwf	(??___flmul+2)^0,w,c
  8981  0043C0  1043               	iorwf	(??___flmul+3)^0,w,c
  8982  0043C2  B4D8               	btfsc	status,2,c
  8983  0043C4  D003               	goto	l1340
  8984  0043C6                     u4610:
  8985  0043C6  0E01               	movlw	1
  8986  0043C8  6E45               	movwf	___flmul@aexp^0,c
  8987  0043CA  D002               	goto	l1339
  8988  0043CC                     l1340:
  8989  0043CC  B04B               	btfsc	___flmul@prod^0,0,c
  8990  0043CE  D7FB               	goto	u4610
  8991  0043D0                     l1339:
  8992  0043D0  5045               	movf	___flmul@aexp^0,w,c
  8993  0043D2  B4D8               	btfsc	status,2,c
  8994  0043D4  D027               	goto	l4136
  8995  0043D6  0E01               	movlw	1
  8996  0043D8  264B               	addwf	___flmul@prod^0,f,c
  8997  0043DA  0E00               	movlw	0
  8998  0043DC  224C               	addwfc	(___flmul@prod+1)^0,f,c
  8999  0043DE  224D               	addwfc	(___flmul@prod+2)^0,f,c
  9000  0043E0  224E               	addwfc	(___flmul@prod+3)^0,f,c
  9001  0043E2  A04E               	btfss	(___flmul@prod+3)^0,0,c
  9002  0043E4  D01F               	goto	l4136
  9003  0043E6  0060  F12C  F040   	movff	___flmul@prod,??___flmul
  9004  0043EC  0060  F130  F041   	movff	___flmul@prod+1,??___flmul+1
  9005  0043F2  0060  F134  F042   	movff	___flmul@prod+2,??___flmul+2
  9006  0043F8  0060  F138  F043   	movff	___flmul@prod+3,??___flmul+3
  9007  0043FE  3443               	rlcf	(??___flmul+3)^0,w,c
  9008  004400  3243               	rrcf	(??___flmul+3)^0,f,c
  9009  004402  3242               	rrcf	(??___flmul+2)^0,f,c
  9010  004404  3241               	rrcf	(??___flmul+1)^0,f,c
  9011  004406  3240               	rrcf	??___flmul^0,f,c
  9012  004408  0060  F100  F04B   	movff	??___flmul,___flmul@prod
  9013  00440E  0060  F104  F04C   	movff	??___flmul+1,___flmul@prod+1
  9014  004414  0060  F108  F04D   	movff	??___flmul+2,___flmul@prod+2
  9015  00441A  0060  F10C  F04E   	movff	??___flmul+3,___flmul@prod+3
  9016  004420  4A4F               	infsnz	___flmul@temp^0,f,c
  9017  004422  2A50               	incf	(___flmul@temp+1)^0,f,c
  9018  004424                     l4136:
  9019  004424  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  9020  004426  D00D               	goto	l4140
  9021  004428  5050               	movf	(___flmul@temp+1)^0,w,c
  9022  00442A  E103               	bnz	u4650
  9023  00442C  284F               	incf	___flmul@temp^0,w,c
  9024  00442E  A0D8               	btfss	status,0,c
  9025  004430  D008               	goto	l4140
  9026  004432                     u4650:
  9027  004432  0E00               	movlw	0
  9028  004434  6E4B               	movwf	___flmul@prod^0,c
  9029  004436  0E00               	movlw	0
  9030  004438  6E4C               	movwf	(___flmul@prod+1)^0,c
  9031  00443A  0E80               	movlw	128
  9032  00443C  6E4D               	movwf	(___flmul@prod+2)^0,c
  9033  00443E  0E7F               	movlw	127
  9034  004440  D021               	goto	L12
  9035  004442                     l4140:
  9036  004442  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  9037  004444  D005               	goto	u4660
  9038  004446  5050               	movf	(___flmul@temp+1)^0,w,c
  9039  004448  E10E               	bnz	l1347
  9040  00444A  044F               	decf	___flmul@temp^0,w,c
  9041  00444C  B0D8               	btfsc	status,0,c
  9042  00444E  D00B               	goto	l1347
  9043  004450                     u4660:
  9044  004450  0E00               	movlw	0
  9045  004452  6E4B               	movwf	___flmul@prod^0,c
  9046  004454  0E00               	movlw	0
  9047  004456  6E4C               	movwf	(___flmul@prod+1)^0,c
  9048  004458  0E00               	movlw	0
  9049  00445A  6E4D               	movwf	(___flmul@prod+2)^0,c
  9050  00445C  0E00               	movlw	0
  9051  00445E  6E4E               	movwf	(___flmul@prod+3)^0,c
  9052  004460  0E00               	movlw	0
  9053  004462  6E44               	movwf	___flmul@sign^0,c
  9054  004464  D010               	goto	l4152
  9055  004466                     l1347:
  9056  004466  0060  F13C  F04A   	movff	___flmul@temp,___flmul@bexp
  9057  00446C  0EFF               	movlw	255
  9058  00446E  164B               	andwf	___flmul@prod^0,f,c
  9059  004470  0EFF               	movlw	255
  9060  004472  164C               	andwf	(___flmul@prod+1)^0,f,c
  9061  004474  0E7F               	movlw	127
  9062  004476  164D               	andwf	(___flmul@prod+2)^0,f,c
  9063  004478  0E00               	movlw	0
  9064  00447A  164E               	andwf	(___flmul@prod+3)^0,f,c
  9065  00447C  B04A               	btfsc	___flmul@bexp^0,0,c
  9066  00447E  8E4D               	bsf	(___flmul@prod+2)^0,7,c
  9067  004480  90D8               	bcf	status,0,c
  9068  004482  304A               	rrcf	___flmul@bexp^0,w,c
  9069  004484                     L12:
  9070  004484  6E4E               	movwf	(___flmul@prod+3)^0,c
  9071  004486                     l4152:
  9072  004486  5044               	movf	___flmul@sign^0,w,c
  9073  004488  124E               	iorwf	(___flmul@prod+3)^0,f,c
  9074  00448A  0060  F12C  F038   	movff	___flmul@prod,?___flmul
  9075  004490  0060  F130  F039   	movff	___flmul@prod+1,?___flmul+1
  9076  004496  0060  F134  F03A   	movff	___flmul@prod+2,?___flmul+2
  9077  00449C  0060  F138  F03B   	movff	___flmul@prod+3,?___flmul+3
  9078  0044A2  0012               	return		;funcret
  9079  0044A4                     __end_of___flmul:
  9080                           	opt callstack 0
  9081                           
  9082 ;; *************** function ___fleq *****************
  9083 ;; Defined at:
  9084 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  9085 ;; Parameters:    Size  Location     Type
  9086 ;;  ff1             4    0[COMRAM] unsigned char 
  9087 ;;  ff2             4    4[COMRAM] unsigned char 
  9088 ;; Auto vars:     Size  Location     Type
  9089 ;;		None
  9090 ;; Return value:  Size  Location     Type
  9091 ;;		None               void
  9092 ;; Registers used:
  9093 ;;		wreg, status,2, status,0
  9094 ;; Tracked objects:
  9095 ;;		On entry : 0/0
  9096 ;;		On exit  : 0/0
  9097 ;;		Unchanged: 0/0
  9098 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9101 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;Total ram usage:       12 bytes
  9104 ;; Hardware stack levels used:    1
  9105 ;; This function calls:
  9106 ;;		Nothing
  9107 ;; This function is called by:
  9108 ;;		_efgtoa
  9109 ;; This function uses a non-reentrant model
  9110 ;;
  9111                           
  9112                           	psect	text29
  9113  005A9C                     __ptext29:
  9114                           	opt callstack 0
  9115  005A9C                     ___fleq:
  9116                           	opt callstack 25
  9117                           
  9118                           ;incstack = 0
  9119  005A9C  0E00               	movlw	0
  9120  005A9E  1401               	andwf	___fleq@ff1^0,w,c
  9121  005AA0  6E09               	movwf	??___fleq^0,c
  9122  005AA2  0E00               	movlw	0
  9123  005AA4  1402               	andwf	(___fleq@ff1+1)^0,w,c
  9124  005AA6  6E0A               	movwf	(??___fleq+1)^0,c
  9125  005AA8  0E80               	movlw	128
  9126  005AAA  1403               	andwf	(___fleq@ff1+2)^0,w,c
  9127  005AAC  6E0B               	movwf	(??___fleq+2)^0,c
  9128  005AAE  0E7F               	movlw	127
  9129  005AB0  1404               	andwf	(___fleq@ff1+3)^0,w,c
  9130  005AB2  6E0C               	movwf	(??___fleq+3)^0,c
  9131  005AB4  5009               	movf	??___fleq^0,w,c
  9132  005AB6  100A               	iorwf	(??___fleq+1)^0,w,c
  9133  005AB8  100B               	iorwf	(??___fleq+2)^0,w,c
  9134  005ABA  100C               	iorwf	(??___fleq+3)^0,w,c
  9135  005ABC  A4D8               	btfss	status,2,c
  9136  005ABE  D008               	goto	l4248
  9137  005AC0  0E00               	movlw	0
  9138  005AC2  6E01               	movwf	___fleq@ff1^0,c
  9139  005AC4  0E00               	movlw	0
  9140  005AC6  6E02               	movwf	(___fleq@ff1+1)^0,c
  9141  005AC8  0E00               	movlw	0
  9142  005ACA  6E03               	movwf	(___fleq@ff1+2)^0,c
  9143  005ACC  0E00               	movlw	0
  9144  005ACE  6E04               	movwf	(___fleq@ff1+3)^0,c
  9145  005AD0                     l4248:
  9146  005AD0  0E00               	movlw	0
  9147  005AD2  1405               	andwf	___fleq@ff2^0,w,c
  9148  005AD4  6E09               	movwf	??___fleq^0,c
  9149  005AD6  0E00               	movlw	0
  9150  005AD8  1406               	andwf	(___fleq@ff2+1)^0,w,c
  9151  005ADA  6E0A               	movwf	(??___fleq+1)^0,c
  9152  005ADC  0E80               	movlw	128
  9153  005ADE  1407               	andwf	(___fleq@ff2+2)^0,w,c
  9154  005AE0  6E0B               	movwf	(??___fleq+2)^0,c
  9155  005AE2  0E7F               	movlw	127
  9156  005AE4  1408               	andwf	(___fleq@ff2+3)^0,w,c
  9157  005AE6  6E0C               	movwf	(??___fleq+3)^0,c
  9158  005AE8  5009               	movf	??___fleq^0,w,c
  9159  005AEA  100A               	iorwf	(??___fleq+1)^0,w,c
  9160  005AEC  100B               	iorwf	(??___fleq+2)^0,w,c
  9161  005AEE  100C               	iorwf	(??___fleq+3)^0,w,c
  9162  005AF0  A4D8               	btfss	status,2,c
  9163  005AF2  D008               	goto	l4252
  9164  005AF4  0E00               	movlw	0
  9165  005AF6  6E05               	movwf	___fleq@ff2^0,c
  9166  005AF8  0E00               	movlw	0
  9167  005AFA  6E06               	movwf	(___fleq@ff2+1)^0,c
  9168  005AFC  0E00               	movlw	0
  9169  005AFE  6E07               	movwf	(___fleq@ff2+2)^0,c
  9170  005B00  0E00               	movlw	0
  9171  005B02  6E08               	movwf	(___fleq@ff2+3)^0,c
  9172  005B04                     l4252:
  9173  005B04  5005               	movf	___fleq@ff2^0,w,c
  9174  005B06  1801               	xorwf	___fleq@ff1^0,w,c
  9175  005B08  E10A               	bnz	u4820
  9176  005B0A  5006               	movf	(___fleq@ff2+1)^0,w,c
  9177  005B0C  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  9178  005B0E  E107               	bnz	u4820
  9179  005B10  5007               	movf	(___fleq@ff2+2)^0,w,c
  9180  005B12  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  9181  005B14  E104               	bnz	u4820
  9182  005B16  5008               	movf	(___fleq@ff2+3)^0,w,c
  9183  005B18  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  9184  005B1A  B4D8               	btfsc	status,2,c
  9185  005B1C  D002               	goto	l4256
  9186  005B1E                     u4820:
  9187  005B1E  90D8               	bcf	status,0,c
  9188  005B20  0012               	return	
  9189  005B22                     l4256:
  9190  005B22  80D8               	bsf	status,0,c
  9191  005B24  0012               	return		;funcret
  9192  005B26                     __end_of___fleq:
  9193                           	opt callstack 0
  9194                           
  9195 ;; *************** function ___fldiv *****************
  9196 ;; Defined at:
  9197 ;;		line 11 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  9198 ;; Parameters:    Size  Location     Type
  9199 ;;  b               4   30[COMRAM] unsigned char 
  9200 ;;  a               4   34[COMRAM] unsigned char 
  9201 ;; Auto vars:     Size  Location     Type
  9202 ;;  grs             4   49[COMRAM] unsigned long 
  9203 ;;  rem             4   42[COMRAM] unsigned long 
  9204 ;;  new_exp         2   47[COMRAM] short 
  9205 ;;  aexp            1   54[COMRAM] unsigned char 
  9206 ;;  bexp            1   53[COMRAM] unsigned char 
  9207 ;;  sign            1   46[COMRAM] unsigned char 
  9208 ;; Return value:  Size  Location     Type
  9209 ;;                  4   30[COMRAM] unsigned char 
  9210 ;; Registers used:
  9211 ;;		wreg, status,2, status,0
  9212 ;; Tracked objects:
  9213 ;;		On entry : 0/0
  9214 ;;		On exit  : 0/0
  9215 ;;		Unchanged: 0/0
  9216 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9217 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9218 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9219 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9220 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9221 ;;Total ram usage:       25 bytes
  9222 ;; Hardware stack levels used:    1
  9223 ;; This function calls:
  9224 ;;		Nothing
  9225 ;; This function is called by:
  9226 ;;		_main_loop
  9227 ;;		_efgtoa
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           	psect	text30
  9232  0047EC                     __ptext30:
  9233                           	opt callstack 0
  9234  0047EC                     ___fldiv:
  9235                           	opt callstack 25
  9236                           
  9237                           ;incstack = 0
  9238  0047EC  5022               	movf	(___fldiv@b+3)^0,w,c
  9239  0047EE  0B80               	andlw	128
  9240  0047F0  6E2F               	movwf	___fldiv@sign^0,c
  9241  0047F2  5022               	movf	(___fldiv@b+3)^0,w,c
  9242  0047F4  2422               	addwf	(___fldiv@b+3)^0,w,c
  9243  0047F6  6E36               	movwf	___fldiv@bexp^0,c
  9244  0047F8  BE21               	btfsc	(___fldiv@b+2)^0,7,c
  9245  0047FA  8036               	bsf	___fldiv@bexp^0,0,c
  9246  0047FC  5036               	movf	___fldiv@bexp^0,w,c
  9247  0047FE  B4D8               	btfsc	status,2,c
  9248  004800  D00D               	goto	l3906
  9249  004802  2836               	incf	___fldiv@bexp^0,w,c
  9250  004804  A4D8               	btfss	status,2,c
  9251  004806  D008               	goto	l3902
  9252  004808  0E00               	movlw	0
  9253  00480A  6E1F               	movwf	___fldiv@b^0,c
  9254  00480C  0E00               	movlw	0
  9255  00480E  6E20               	movwf	(___fldiv@b+1)^0,c
  9256  004810  0E00               	movlw	0
  9257  004812  6E21               	movwf	(___fldiv@b+2)^0,c
  9258  004814  0E00               	movlw	0
  9259  004816  6E22               	movwf	(___fldiv@b+3)^0,c
  9260  004818                     l3902:
  9261  004818  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9262  00481A  D006               	goto	L13
  9263  00481C                     l3906:
  9264  00481C  0E00               	movlw	0
  9265  00481E  6E1F               	movwf	___fldiv@b^0,c
  9266  004820  0E00               	movlw	0
  9267  004822  6E20               	movwf	(___fldiv@b+1)^0,c
  9268  004824  0E00               	movlw	0
  9269  004826  6E21               	movwf	(___fldiv@b+2)^0,c
  9270  004828                     L13:
  9271  004828  0E00               	movlw	0
  9272  00482A  6E22               	movwf	(___fldiv@b+3)^0,c
  9273  00482C  5026               	movf	(___fldiv@a+3)^0,w,c
  9274  00482E  0B80               	andlw	128
  9275  004830  1A2F               	xorwf	___fldiv@sign^0,f,c
  9276  004832  5026               	movf	(___fldiv@a+3)^0,w,c
  9277  004834  2426               	addwf	(___fldiv@a+3)^0,w,c
  9278  004836  6E37               	movwf	___fldiv@aexp^0,c
  9279  004838  BE25               	btfsc	(___fldiv@a+2)^0,7,c
  9280  00483A  8037               	bsf	___fldiv@aexp^0,0,c
  9281  00483C  5037               	movf	___fldiv@aexp^0,w,c
  9282  00483E  B4D8               	btfsc	status,2,c
  9283  004840  D00D               	goto	l3926
  9284  004842  2837               	incf	___fldiv@aexp^0,w,c
  9285  004844  A4D8               	btfss	status,2,c
  9286  004846  D008               	goto	l3922
  9287  004848  0E00               	movlw	0
  9288  00484A  6E23               	movwf	___fldiv@a^0,c
  9289  00484C  0E00               	movlw	0
  9290  00484E  6E24               	movwf	(___fldiv@a+1)^0,c
  9291  004850  0E00               	movlw	0
  9292  004852  6E25               	movwf	(___fldiv@a+2)^0,c
  9293  004854  0E00               	movlw	0
  9294  004856  6E26               	movwf	(___fldiv@a+3)^0,c
  9295  004858                     l3922:
  9296  004858  8E25               	bsf	(___fldiv@a+2)^0,7,c
  9297  00485A  D006               	goto	L14
  9298  00485C                     l3926:
  9299  00485C  0E00               	movlw	0
  9300  00485E  6E23               	movwf	___fldiv@a^0,c
  9301  004860  0E00               	movlw	0
  9302  004862  6E24               	movwf	(___fldiv@a+1)^0,c
  9303  004864  0E00               	movlw	0
  9304  004866  6E25               	movwf	(___fldiv@a+2)^0,c
  9305  004868                     L14:
  9306  004868  0E00               	movlw	0
  9307  00486A  6E26               	movwf	(___fldiv@a+3)^0,c
  9308  00486C  5023               	movf	___fldiv@a^0,w,c
  9309  00486E  1024               	iorwf	(___fldiv@a+1)^0,w,c
  9310  004870  1025               	iorwf	(___fldiv@a+2)^0,w,c
  9311  004872  1026               	iorwf	(___fldiv@a+3)^0,w,c
  9312  004874  A4D8               	btfss	status,2,c
  9313  004876  D01B               	goto	l3940
  9314  004878  0E00               	movlw	0
  9315  00487A  6E1F               	movwf	___fldiv@b^0,c
  9316  00487C  0E00               	movlw	0
  9317  00487E  6E20               	movwf	(___fldiv@b+1)^0,c
  9318  004880  0E00               	movlw	0
  9319  004882  6E21               	movwf	(___fldiv@b+2)^0,c
  9320  004884  0E00               	movlw	0
  9321  004886  6E22               	movwf	(___fldiv@b+3)^0,c
  9322  004888  0E80               	movlw	128
  9323  00488A  1221               	iorwf	(___fldiv@b+2)^0,f,c
  9324  00488C  0E7F               	movlw	127
  9325  00488E  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9326  004890                     l3934:
  9327  004890  502F               	movf	___fldiv@sign^0,w,c
  9328  004892  1222               	iorwf	(___fldiv@b+3)^0,f,c
  9329  004894  0060  F07C  F01F   	movff	___fldiv@b,?___fldiv
  9330  00489A  0060  F080  F020   	movff	___fldiv@b+1,?___fldiv+1
  9331  0048A0  0060  F084  F021   	movff	___fldiv@b+2,?___fldiv+2
  9332  0048A6  0060  F088  F022   	movff	___fldiv@b+3,?___fldiv+3
  9333  0048AC  0012               	return	
  9334  0048AE                     l3940:
  9335  0048AE  5036               	movf	___fldiv@bexp^0,w,c
  9336  0048B0  A4D8               	btfss	status,2,c
  9337  0048B2  D009               	goto	l3948
  9338  0048B4  0E00               	movlw	0
  9339  0048B6  6E1F               	movwf	?___fldiv^0,c
  9340  0048B8  0E00               	movlw	0
  9341  0048BA  6E20               	movwf	(?___fldiv+1)^0,c
  9342  0048BC  0E00               	movlw	0
  9343  0048BE  6E21               	movwf	(?___fldiv+2)^0,c
  9344  0048C0  0E00               	movlw	0
  9345  0048C2  6E22               	movwf	(?___fldiv+3)^0,c
  9346  0048C4  0012               	return	
  9347  0048C6                     l3948:
  9348  0048C6  5037               	movf	___fldiv@aexp^0,w,c
  9349  0048C8  0060  F0D8  F027   	movff	___fldiv@bexp,??___fldiv
  9350  0048CE  6A28               	clrf	(??___fldiv+1)^0,c
  9351  0048D0  5E27               	subwf	??___fldiv^0,f,c
  9352  0048D2  0E00               	movlw	0
  9353  0048D4  5A28               	subwfb	(??___fldiv+1)^0,f,c
  9354  0048D6  0E7F               	movlw	127
  9355  0048D8  2427               	addwf	??___fldiv^0,w,c
  9356  0048DA  6E30               	movwf	___fldiv@new_exp^0,c
  9357  0048DC  0E00               	movlw	0
  9358  0048DE  2028               	addwfc	(??___fldiv+1)^0,w,c
  9359  0048E0  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9360  0048E2  0060  F07C  F02B   	movff	___fldiv@b,___fldiv@rem
  9361  0048E8  0060  F080  F02C   	movff	___fldiv@b+1,___fldiv@rem+1
  9362  0048EE  0060  F084  F02D   	movff	___fldiv@b+2,___fldiv@rem+2
  9363  0048F4  0060  F088  F02E   	movff	___fldiv@b+3,___fldiv@rem+3
  9364  0048FA  0E00               	movlw	0
  9365  0048FC  6E1F               	movwf	___fldiv@b^0,c
  9366  0048FE  0E00               	movlw	0
  9367  004900  6E20               	movwf	(___fldiv@b+1)^0,c
  9368  004902  0E00               	movlw	0
  9369  004904  6E21               	movwf	(___fldiv@b+2)^0,c
  9370  004906  0E00               	movlw	0
  9371  004908  6E22               	movwf	(___fldiv@b+3)^0,c
  9372  00490A  0E00               	movlw	0
  9373  00490C  6E32               	movwf	___fldiv@grs^0,c
  9374  00490E  0E00               	movlw	0
  9375  004910  6E33               	movwf	(___fldiv@grs+1)^0,c
  9376  004912  0E00               	movlw	0
  9377  004914  6E34               	movwf	(___fldiv@grs+2)^0,c
  9378  004916  0E00               	movlw	0
  9379  004918  6E35               	movwf	(___fldiv@grs+3)^0,c
  9380  00491A  0E00               	movlw	0
  9381  00491C  6E37               	movwf	___fldiv@aexp^0,c
  9382  00491E  D028               	goto	l1300
  9383  004920                     l3958:
  9384  004920  5037               	movf	___fldiv@aexp^0,w,c
  9385  004922  B4D8               	btfsc	status,2,c
  9386  004924  D011               	goto	l3966
  9387  004926  90D8               	bcf	status,0,c
  9388  004928  362B               	rlcf	___fldiv@rem^0,f,c
  9389  00492A  362C               	rlcf	(___fldiv@rem+1)^0,f,c
  9390  00492C  362D               	rlcf	(___fldiv@rem+2)^0,f,c
  9391  00492E  362E               	rlcf	(___fldiv@rem+3)^0,f,c
  9392  004930  90D8               	bcf	status,0,c
  9393  004932  361F               	rlcf	___fldiv@b^0,f,c
  9394  004934  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9395  004936  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9396  004938  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9397  00493A  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9398  00493C  801F               	bsf	___fldiv@b^0,0,c
  9399  00493E  90D8               	bcf	status,0,c
  9400  004940  3632               	rlcf	___fldiv@grs^0,f,c
  9401  004942  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9402  004944  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9403  004946  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9404  004948                     l3966:
  9405  004948  5023               	movf	___fldiv@a^0,w,c
  9406  00494A  5C2B               	subwf	___fldiv@rem^0,w,c
  9407  00494C  5024               	movf	(___fldiv@a+1)^0,w,c
  9408  00494E  582C               	subwfb	(___fldiv@rem+1)^0,w,c
  9409  004950  5025               	movf	(___fldiv@a+2)^0,w,c
  9410  004952  582D               	subwfb	(___fldiv@rem+2)^0,w,c
  9411  004954  5026               	movf	(___fldiv@a+3)^0,w,c
  9412  004956  582E               	subwfb	(___fldiv@rem+3)^0,w,c
  9413  004958  A0D8               	btfss	status,0,c
  9414  00495A  D009               	goto	l3972
  9415  00495C  8C35               	bsf	(___fldiv@grs+3)^0,6,c
  9416  00495E  5023               	movf	___fldiv@a^0,w,c
  9417  004960  5E2B               	subwf	___fldiv@rem^0,f,c
  9418  004962  5024               	movf	(___fldiv@a+1)^0,w,c
  9419  004964  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
  9420  004966  5025               	movf	(___fldiv@a+2)^0,w,c
  9421  004968  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
  9422  00496A  5026               	movf	(___fldiv@a+3)^0,w,c
  9423  00496C  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
  9424  00496E                     l3972:
  9425  00496E  2A37               	incf	___fldiv@aexp^0,f,c
  9426  004970                     l1300:
  9427  004970  0E19               	movlw	25
  9428  004972  6437               	cpfsgt	___fldiv@aexp^0,c
  9429  004974  D7D5               	goto	l3958
  9430  004976  502B               	movf	___fldiv@rem^0,w,c
  9431  004978  102C               	iorwf	(___fldiv@rem+1)^0,w,c
  9432  00497A  102D               	iorwf	(___fldiv@rem+2)^0,w,c
  9433  00497C  102E               	iorwf	(___fldiv@rem+3)^0,w,c
  9434  00497E  B4D8               	btfsc	status,2,c
  9435  004980  D011               	goto	l3984
  9436  004982  8032               	bsf	___fldiv@grs^0,0,c
  9437  004984  D00F               	goto	l3984
  9438  004986                     l3978:
  9439  004986  90D8               	bcf	status,0,c
  9440  004988  361F               	rlcf	___fldiv@b^0,f,c
  9441  00498A  3620               	rlcf	(___fldiv@b+1)^0,f,c
  9442  00498C  3621               	rlcf	(___fldiv@b+2)^0,f,c
  9443  00498E  3622               	rlcf	(___fldiv@b+3)^0,f,c
  9444  004990  BE35               	btfsc	(___fldiv@grs+3)^0,7,c
  9445  004992  801F               	bsf	___fldiv@b^0,0,c
  9446  004994  90D8               	bcf	status,0,c
  9447  004996  3632               	rlcf	___fldiv@grs^0,f,c
  9448  004998  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  9449  00499A  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  9450  00499C  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  9451  00499E  0630               	decf	___fldiv@new_exp^0,f,c
  9452  0049A0  A0D8               	btfss	status,0,c
  9453  0049A2  0631               	decf	(___fldiv@new_exp+1)^0,f,c
  9454  0049A4                     l3984:
  9455  0049A4  AE21               	btfss	(___fldiv@b+2)^0,7,c
  9456  0049A6  D7EF               	goto	l3978
  9457  0049A8  0E00               	movlw	0
  9458  0049AA  6E37               	movwf	___fldiv@aexp^0,c
  9459  0049AC  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  9460  0049AE  D017               	goto	l1311
  9461  0049B0  0EFF               	movlw	255
  9462  0049B2  1432               	andwf	___fldiv@grs^0,w,c
  9463  0049B4  6E27               	movwf	??___fldiv^0,c
  9464  0049B6  0EFF               	movlw	255
  9465  0049B8  1433               	andwf	(___fldiv@grs+1)^0,w,c
  9466  0049BA  6E28               	movwf	(??___fldiv+1)^0,c
  9467  0049BC  0EFF               	movlw	255
  9468  0049BE  1434               	andwf	(___fldiv@grs+2)^0,w,c
  9469  0049C0  6E29               	movwf	(??___fldiv+2)^0,c
  9470  0049C2  0E7F               	movlw	127
  9471  0049C4  1435               	andwf	(___fldiv@grs+3)^0,w,c
  9472  0049C6  6E2A               	movwf	(??___fldiv+3)^0,c
  9473  0049C8  5027               	movf	??___fldiv^0,w,c
  9474  0049CA  1028               	iorwf	(??___fldiv+1)^0,w,c
  9475  0049CC  1029               	iorwf	(??___fldiv+2)^0,w,c
  9476  0049CE  102A               	iorwf	(??___fldiv+3)^0,w,c
  9477  0049D0  B4D8               	btfsc	status,2,c
  9478  0049D2  D003               	goto	l1312
  9479  0049D4                     u4430:
  9480  0049D4  0E01               	movlw	1
  9481  0049D6  6E37               	movwf	___fldiv@aexp^0,c
  9482  0049D8  D002               	goto	l1311
  9483  0049DA                     l1312:
  9484  0049DA  B01F               	btfsc	___fldiv@b^0,0,c
  9485  0049DC  D7FB               	goto	u4430
  9486  0049DE                     l1311:
  9487  0049DE  5037               	movf	___fldiv@aexp^0,w,c
  9488  0049E0  B4D8               	btfsc	status,2,c
  9489  0049E2  D027               	goto	l4004
  9490  0049E4  0E01               	movlw	1
  9491  0049E6  261F               	addwf	___fldiv@b^0,f,c
  9492  0049E8  0E00               	movlw	0
  9493  0049EA  2220               	addwfc	(___fldiv@b+1)^0,f,c
  9494  0049EC  2221               	addwfc	(___fldiv@b+2)^0,f,c
  9495  0049EE  2222               	addwfc	(___fldiv@b+3)^0,f,c
  9496  0049F0  A022               	btfss	(___fldiv@b+3)^0,0,c
  9497  0049F2  D01F               	goto	l4004
  9498  0049F4  0060  F07C  F027   	movff	___fldiv@b,??___fldiv
  9499  0049FA  0060  F080  F028   	movff	___fldiv@b+1,??___fldiv+1
  9500  004A00  0060  F084  F029   	movff	___fldiv@b+2,??___fldiv+2
  9501  004A06  0060  F088  F02A   	movff	___fldiv@b+3,??___fldiv+3
  9502  004A0C  342A               	rlcf	(??___fldiv+3)^0,w,c
  9503  004A0E  322A               	rrcf	(??___fldiv+3)^0,f,c
  9504  004A10  3229               	rrcf	(??___fldiv+2)^0,f,c
  9505  004A12  3228               	rrcf	(??___fldiv+1)^0,f,c
  9506  004A14  3227               	rrcf	??___fldiv^0,f,c
  9507  004A16  0060  F09C  F01F   	movff	??___fldiv,___fldiv@b
  9508  004A1C  0060  F0A0  F020   	movff	??___fldiv+1,___fldiv@b+1
  9509  004A22  0060  F0A4  F021   	movff	??___fldiv+2,___fldiv@b+2
  9510  004A28  0060  F0A8  F022   	movff	??___fldiv+3,___fldiv@b+3
  9511  004A2E  4A30               	infsnz	___fldiv@new_exp^0,f,c
  9512  004A30  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
  9513  004A32                     l4004:
  9514  004A32  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9515  004A34  D010               	goto	l4008
  9516  004A36  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9517  004A38  E103               	bnz	u4470
  9518  004A3A  2830               	incf	___fldiv@new_exp^0,w,c
  9519  004A3C  A0D8               	btfss	status,0,c
  9520  004A3E  D00B               	goto	l4008
  9521  004A40                     u4470:
  9522  004A40  0E00               	movlw	0
  9523  004A42  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9524  004A44  6830               	setf	___fldiv@new_exp^0,c
  9525  004A46  0E00               	movlw	0
  9526  004A48  6E1F               	movwf	___fldiv@b^0,c
  9527  004A4A  0E00               	movlw	0
  9528  004A4C  6E20               	movwf	(___fldiv@b+1)^0,c
  9529  004A4E  0E00               	movlw	0
  9530  004A50  6E21               	movwf	(___fldiv@b+2)^0,c
  9531  004A52  0E00               	movlw	0
  9532  004A54  6E22               	movwf	(___fldiv@b+3)^0,c
  9533  004A56                     l4008:
  9534  004A56  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9535  004A58  D005               	goto	u4480
  9536  004A5A  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  9537  004A5C  E111               	bnz	l4012
  9538  004A5E  0430               	decf	___fldiv@new_exp^0,w,c
  9539  004A60  B0D8               	btfsc	status,0,c
  9540  004A62  D00E               	goto	l4012
  9541  004A64                     u4480:
  9542  004A64  0E00               	movlw	0
  9543  004A66  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  9544  004A68  0E00               	movlw	0
  9545  004A6A  6E30               	movwf	___fldiv@new_exp^0,c
  9546  004A6C  0E00               	movlw	0
  9547  004A6E  6E1F               	movwf	___fldiv@b^0,c
  9548  004A70  0E00               	movlw	0
  9549  004A72  6E20               	movwf	(___fldiv@b+1)^0,c
  9550  004A74  0E00               	movlw	0
  9551  004A76  6E21               	movwf	(___fldiv@b+2)^0,c
  9552  004A78  0E00               	movlw	0
  9553  004A7A  6E22               	movwf	(___fldiv@b+3)^0,c
  9554  004A7C  0E00               	movlw	0
  9555  004A7E  6E2F               	movwf	___fldiv@sign^0,c
  9556  004A80                     l4012:
  9557  004A80  0060  F0C0  F036   	movff	___fldiv@new_exp,___fldiv@bexp
  9558  004A86  A036               	btfss	___fldiv@bexp^0,0,c
  9559  004A88  D002               	goto	l4018
  9560  004A8A  8E21               	bsf	(___fldiv@b+2)^0,7,c
  9561  004A8C  D001               	goto	l4020
  9562  004A8E                     l4018:
  9563  004A8E  9E21               	bcf	(___fldiv@b+2)^0,7,c
  9564  004A90                     l4020:
  9565  004A90  90D8               	bcf	status,0,c
  9566  004A92  3036               	rrcf	___fldiv@bexp^0,w,c
  9567  004A94  6E22               	movwf	(___fldiv@b+3)^0,c
  9568  004A96  D6FC               	goto	l3934
  9569  004A98                     __end_of___fldiv:
  9570                           	opt callstack 0
  9571                           
  9572 ;; *************** function ___awmod *****************
  9573 ;; Defined at:
  9574 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  dividend        2    0[COMRAM] int 
  9577 ;;  divisor         2    2[COMRAM] int 
  9578 ;; Auto vars:     Size  Location     Type
  9579 ;;  sign            1    5[COMRAM] unsigned char 
  9580 ;;  counter         1    4[COMRAM] unsigned char 
  9581 ;; Return value:  Size  Location     Type
  9582 ;;                  2    0[COMRAM] int 
  9583 ;; Registers used:
  9584 ;;		wreg, status,2, status,0
  9585 ;; Tracked objects:
  9586 ;;		On entry : 3F/0
  9587 ;;		On exit  : 3F/0
  9588 ;;		Unchanged: 3F/0
  9589 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9590 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9591 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9593 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9594 ;;Total ram usage:        6 bytes
  9595 ;; Hardware stack levels used:    1
  9596 ;; This function calls:
  9597 ;;		Nothing
  9598 ;; This function is called by:
  9599 ;;		_efgtoa
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           	psect	text31
  9604  005DAC                     __ptext31:
  9605                           	opt callstack 0
  9606  005DAC                     ___awmod:
  9607                           	opt callstack 25
  9608                           
  9609                           ; BSR set to: 0
  9610                           
  9611                           ;incstack = 0
  9612  005DAC  0E00               	movlw	0
  9613  005DAE  6E06               	movwf	___awmod@sign^0,c
  9614                           
  9615                           ; BSR set to: 0
  9616  005DB0  AE02               	btfss	(___awmod@dividend+1)^0,7,c
  9617  005DB2  D006               	goto	l4216
  9618                           
  9619                           ; BSR set to: 0
  9620  005DB4  6C01               	negf	___awmod@dividend^0,c
  9621  005DB6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9622  005DB8  B0D8               	btfsc	status,0,c
  9623  005DBA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9624                           
  9625                           ; BSR set to: 0
  9626  005DBC  0E01               	movlw	1
  9627  005DBE  6E06               	movwf	___awmod@sign^0,c
  9628  005DC0                     l4216:
  9629                           
  9630                           ; BSR set to: 0
  9631  005DC0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9632  005DC2  D004               	goto	l4220
  9633                           
  9634                           ; BSR set to: 0
  9635  005DC4  6C03               	negf	___awmod@divisor^0,c
  9636  005DC6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9637  005DC8  B0D8               	btfsc	status,0,c
  9638  005DCA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9639  005DCC                     l4220:
  9640                           
  9641                           ; BSR set to: 0
  9642  005DCC  5003               	movf	___awmod@divisor^0,w,c
  9643  005DCE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9644  005DD0  B4D8               	btfsc	status,2,c
  9645  005DD2  D018               	goto	l4236
  9646                           
  9647                           ; BSR set to: 0
  9648  005DD4  0E01               	movlw	1
  9649  005DD6  6E05               	movwf	___awmod@counter^0,c
  9650  005DD8  D004               	goto	l4226
  9651  005DDA                     l4224:
  9652                           
  9653                           ; BSR set to: 0
  9654  005DDA  90D8               	bcf	status,0,c
  9655  005DDC  3603               	rlcf	___awmod@divisor^0,f,c
  9656  005DDE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9657  005DE0  2A05               	incf	___awmod@counter^0,f,c
  9658  005DE2                     l4226:
  9659                           
  9660                           ; BSR set to: 0
  9661  005DE2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9662  005DE4  D7FA               	goto	l4224
  9663  005DE6                     u4770:
  9664                           
  9665                           ; BSR set to: 0
  9666  005DE6  5003               	movf	___awmod@divisor^0,w,c
  9667  005DE8  5C01               	subwf	___awmod@dividend^0,w,c
  9668  005DEA  5004               	movf	(___awmod@divisor+1)^0,w,c
  9669  005DEC  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9670  005DEE  A0D8               	btfss	status,0,c
  9671  005DF0  D004               	goto	l4232
  9672                           
  9673                           ; BSR set to: 0
  9674  005DF2  5003               	movf	___awmod@divisor^0,w,c
  9675  005DF4  5E01               	subwf	___awmod@dividend^0,f,c
  9676  005DF6  5004               	movf	(___awmod@divisor+1)^0,w,c
  9677  005DF8  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9678  005DFA                     l4232:
  9679                           
  9680                           ; BSR set to: 0
  9681  005DFA  90D8               	bcf	status,0,c
  9682  005DFC  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9683  005DFE  3203               	rrcf	___awmod@divisor^0,f,c
  9684                           
  9685                           ; BSR set to: 0
  9686  005E00  2E05               	decfsz	___awmod@counter^0,f,c
  9687  005E02  D7F1               	goto	u4770
  9688  005E04                     l4236:
  9689                           
  9690                           ; BSR set to: 0
  9691  005E04  5006               	movf	___awmod@sign^0,w,c
  9692  005E06  B4D8               	btfsc	status,2,c
  9693  005E08  D004               	goto	l4240
  9694                           
  9695                           ; BSR set to: 0
  9696  005E0A  6C01               	negf	___awmod@dividend^0,c
  9697  005E0C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9698  005E0E  B0D8               	btfsc	status,0,c
  9699  005E10  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9700  005E12                     l4240:
  9701                           
  9702                           ; BSR set to: 0
  9703  005E12  0060  F004  F001   	movff	___awmod@dividend,?___awmod
  9704  005E18  0060  F008  F002   	movff	___awmod@dividend+1,?___awmod+1
  9705                           
  9706                           ; BSR set to: 0
  9707  005E1E  0012               	return		;funcret
  9708  005E20                     __end_of___awmod:
  9709                           	opt callstack 0
  9710                           
  9711 ;; *************** function ___awdiv *****************
  9712 ;; Defined at:
  9713 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  9714 ;; Parameters:    Size  Location     Type
  9715 ;;  dividend        2    0[COMRAM] int 
  9716 ;;  divisor         2    2[COMRAM] int 
  9717 ;; Auto vars:     Size  Location     Type
  9718 ;;  quotient        2    6[COMRAM] int 
  9719 ;;  sign            1    5[COMRAM] unsigned char 
  9720 ;;  counter         1    4[COMRAM] unsigned char 
  9721 ;; Return value:  Size  Location     Type
  9722 ;;                  2    0[COMRAM] int 
  9723 ;; Registers used:
  9724 ;;		wreg, status,2, status,0
  9725 ;; Tracked objects:
  9726 ;;		On entry : 3F/0
  9727 ;;		On exit  : 3F/0
  9728 ;;		Unchanged: 3F/0
  9729 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9731 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9733 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9734 ;;Total ram usage:        8 bytes
  9735 ;; Hardware stack levels used:    1
  9736 ;; This function calls:
  9737 ;;		Nothing
  9738 ;; This function is called by:
  9739 ;;		_main_loop
  9740 ;;		_efgtoa
  9741 ;; This function uses a non-reentrant model
  9742 ;;
  9743                           
  9744                           	psect	text32
  9745  005BB0                     __ptext32:
  9746                           	opt callstack 0
  9747  005BB0                     ___awdiv:
  9748                           	opt callstack 25
  9749                           
  9750                           ; BSR set to: 0
  9751                           
  9752                           ; BSR set to: 0
  9753                           ;incstack = 0
  9754  005BB0  0E00               	movlw	0
  9755  005BB2  6E06               	movwf	___awdiv@sign^0,c
  9756                           
  9757                           ; BSR set to: 0
  9758  005BB4  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9759  005BB6  D006               	goto	l4172
  9760                           
  9761                           ; BSR set to: 0
  9762  005BB8  6C03               	negf	___awdiv@divisor^0,c
  9763  005BBA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9764  005BBC  B0D8               	btfsc	status,0,c
  9765  005BBE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9766                           
  9767                           ; BSR set to: 0
  9768  005BC0  0E01               	movlw	1
  9769  005BC2  6E06               	movwf	___awdiv@sign^0,c
  9770  005BC4                     l4172:
  9771                           
  9772                           ; BSR set to: 0
  9773  005BC4  AE02               	btfss	(___awdiv@dividend+1)^0,7,c
  9774  005BC6  D006               	goto	l4178
  9775                           
  9776                           ; BSR set to: 0
  9777  005BC8  6C01               	negf	___awdiv@dividend^0,c
  9778  005BCA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9779  005BCC  B0D8               	btfsc	status,0,c
  9780  005BCE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9781                           
  9782                           ; BSR set to: 0
  9783  005BD0  0E01               	movlw	1
  9784  005BD2  1A06               	xorwf	___awdiv@sign^0,f,c
  9785  005BD4                     l4178:
  9786                           
  9787                           ; BSR set to: 0
  9788  005BD4  0E00               	movlw	0
  9789  005BD6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9790  005BD8  0E00               	movlw	0
  9791  005BDA  6E07               	movwf	___awdiv@quotient^0,c
  9792                           
  9793                           ; BSR set to: 0
  9794  005BDC  5003               	movf	___awdiv@divisor^0,w,c
  9795  005BDE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9796  005BE0  B4D8               	btfsc	status,2,c
  9797  005BE2  D01C               	goto	l4200
  9798                           
  9799                           ; BSR set to: 0
  9800  005BE4  0E01               	movlw	1
  9801  005BE6  6E05               	movwf	___awdiv@counter^0,c
  9802  005BE8  D004               	goto	l4186
  9803  005BEA                     l4184:
  9804                           
  9805                           ; BSR set to: 0
  9806  005BEA  90D8               	bcf	status,0,c
  9807  005BEC  3603               	rlcf	___awdiv@divisor^0,f,c
  9808  005BEE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9809  005BF0  2A05               	incf	___awdiv@counter^0,f,c
  9810  005BF2                     l4186:
  9811                           
  9812                           ; BSR set to: 0
  9813  005BF2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9814  005BF4  D7FA               	goto	l4184
  9815  005BF6                     u4710:
  9816                           
  9817                           ; BSR set to: 0
  9818  005BF6  90D8               	bcf	status,0,c
  9819  005BF8  3607               	rlcf	___awdiv@quotient^0,f,c
  9820  005BFA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9821                           
  9822                           ; BSR set to: 0
  9823  005BFC  5003               	movf	___awdiv@divisor^0,w,c
  9824  005BFE  5C01               	subwf	___awdiv@dividend^0,w,c
  9825  005C00  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9826  005C02  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9827  005C04  A0D8               	btfss	status,0,c
  9828  005C06  D005               	goto	l4196
  9829                           
  9830                           ; BSR set to: 0
  9831  005C08  5003               	movf	___awdiv@divisor^0,w,c
  9832  005C0A  5E01               	subwf	___awdiv@dividend^0,f,c
  9833  005C0C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9834  005C0E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9835                           
  9836                           ; BSR set to: 0
  9837  005C10  8007               	bsf	___awdiv@quotient^0,0,c
  9838  005C12                     l4196:
  9839                           
  9840                           ; BSR set to: 0
  9841  005C12  90D8               	bcf	status,0,c
  9842  005C14  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9843  005C16  3203               	rrcf	___awdiv@divisor^0,f,c
  9844                           
  9845                           ; BSR set to: 0
  9846  005C18  2E05               	decfsz	___awdiv@counter^0,f,c
  9847  005C1A  D7ED               	goto	u4710
  9848  005C1C                     l4200:
  9849                           
  9850                           ; BSR set to: 0
  9851  005C1C  5006               	movf	___awdiv@sign^0,w,c
  9852  005C1E  B4D8               	btfsc	status,2,c
  9853  005C20  D004               	goto	l4204
  9854                           
  9855                           ; BSR set to: 0
  9856  005C22  6C07               	negf	___awdiv@quotient^0,c
  9857  005C24  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9858  005C26  B0D8               	btfsc	status,0,c
  9859  005C28  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9860  005C2A                     l4204:
  9861                           
  9862                           ; BSR set to: 0
  9863  005C2A  0060  F01C  F001   	movff	___awdiv@quotient,?___awdiv
  9864  005C30  0060  F020  F002   	movff	___awdiv@quotient+1,?___awdiv+1
  9865                           
  9866                           ; BSR set to: 0
  9867  005C36  0012               	return		;funcret
  9868  005C38                     __end_of___awdiv:
  9869                           	opt callstack 0
  9870                           
  9871 ;; *************** function _atoi *****************
  9872 ;; Defined at:
  9873 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  9874 ;; Parameters:    Size  Location     Type
  9875 ;;  s               1    7[COMRAM] PTR const unsigned char 
  9876 ;;		 -> STR_10(20), STR_9(20), STR_8(20), STR_7(20), 
  9877 ;;		 -> STR_6(17), 
  9878 ;; Auto vars:     Size  Location     Type
  9879 ;;  n               2   20[COMRAM] int 
  9880 ;;  neg             2   13[COMRAM] int 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  2    7[COMRAM] int 
  9883 ;; Registers used:
  9884 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9885 ;; Tracked objects:
  9886 ;;		On entry : 3F/4
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
  9890 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9891 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9892 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9893 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9894 ;;Total ram usage:       15 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; Hardware stack levels required when called:    1
  9897 ;; This function calls:
  9898 ;;		___wmul
  9899 ;;		_isdigit
  9900 ;;		_isspace
  9901 ;; This function is called by:
  9902 ;;		_vfpfcnvrt
  9903 ;; This function uses a non-reentrant model
  9904 ;;
  9905                           
  9906                           	psect	text33
  9907  004DFA                     __ptext33:
  9908                           	opt callstack 0
  9909  004DFA                     _atoi:
  9910                           	opt callstack 25
  9911                           
  9912                           ; BSR set to: 4
  9913                           
  9914                           ; BSR set to: 0
  9915                           ;incstack = 0
  9916  004DFA  0E00               	movlw	0
  9917  004DFC  6E16               	movwf	(atoi@n+1)^0,c
  9918  004DFE  0E00               	movlw	0
  9919  004E00  6E15               	movwf	atoi@n^0,c
  9920  004E02  0E00               	movlw	0
  9921  004E04  6E0F               	movwf	(atoi@neg+1)^0,c
  9922  004E06  0E00               	movlw	0
  9923  004E08  6E0E               	movwf	atoi@neg^0,c
  9924  004E0A  D001               	goto	l4666
  9925  004E0C                     l4664:
  9926                           
  9927                           ; BSR set to: 4
  9928  004E0C  2A08               	incf	atoi@s^0,f,c
  9929  004E0E                     l4666:
  9930                           
  9931                           ; BSR set to: 4
  9932  004E0E  0E01               	movlw	1
  9933  004E10  6E14               	movwf	_atoi$1123^0,c
  9934                           
  9935                           ; BSR set to: 4
  9936  004E12  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9937  004E18                     	if	1	;There is more than 1 active tblptr byte
  9938  004E18  0E20               	movlw	high __smallconst
  9939  004E1A  6EF7               	movwf	tblptrh,c
  9940  004E1C                     	endif
  9941  004E1C                     	if	0	;tblptru may be non-zero
  9942  004E1C                     	endif
  9943  004E1C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9944  004E1C  0E00               	movlw	low (__smallconst shr (0+16))
  9945  004E1E  6EF8               	movwf	tblptru,c
  9946  004E20                     	endif
  9947  004E20  0008               	tblrd		*
  9948  004E22  50F5               	movf	tablat,w,c
  9949  004E24  0A20               	xorlw	32
  9950  004E26  B4D8               	btfsc	status,2,c
  9951  004E28  D01B               	goto	l4674
  9952                           
  9953                           ; BSR set to: 4
  9954  004E2A  0EF7               	movlw	247
  9955  004E2C  6E0A               	movwf	??_atoi^0,c
  9956  004E2E  0EFF               	movlw	255
  9957  004E30  6E0B               	movwf	(??_atoi+1)^0,c
  9958  004E32  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9959  004E38                     	if	1	;There is more than 1 active tblptr byte
  9960  004E38  0E20               	movlw	high __smallconst
  9961  004E3A  6EF7               	movwf	tblptrh,c
  9962  004E3C                     	endif
  9963  004E3C                     	if	0	;tblptru may be non-zero
  9964  004E3C                     	endif
  9965  004E3C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9966  004E3C  0E00               	movlw	low (__smallconst shr (0+16))
  9967  004E3E  6EF8               	movwf	tblptru,c
  9968  004E40                     	endif
  9969  004E40  0008               	tblrd		*
  9970  004E42  50F5               	movf	tablat,w,c
  9971  004E44  6E0C               	movwf	(??_atoi+2)^0,c
  9972  004E46  6A0D               	clrf	(??_atoi+3)^0,c
  9973  004E48  500A               	movf	??_atoi^0,w,c
  9974  004E4A  260C               	addwf	(??_atoi+2)^0,f,c
  9975  004E4C  500B               	movf	(??_atoi+1)^0,w,c
  9976  004E4E  220D               	addwfc	(??_atoi+3)^0,f,c
  9977  004E50  500D               	movf	(??_atoi+3)^0,w,c
  9978  004E52  E104               	bnz	u5540
  9979  004E54  0E05               	movlw	5
  9980  004E56  5C0C               	subwf	(??_atoi+2)^0,w,c
  9981  004E58  A0D8               	btfss	status,0,c
  9982  004E5A  D002               	goto	l4674
  9983  004E5C                     u5540:
  9984                           
  9985                           ; BSR set to: 4
  9986  004E5C  0E00               	movlw	0
  9987  004E5E  6E14               	movwf	_atoi$1123^0,c
  9988  004E60                     l4674:
  9989                           
  9990                           ; BSR set to: 4
  9991  004E60  0060  F050  F010   	movff	_atoi$1123,_atoi$1122
  9992  004E66  6A11               	clrf	(_atoi$1122+1)^0,c
  9993                           
  9994                           ; BSR set to: 4
  9995  004E68  5010               	movf	_atoi$1122^0,w,c
  9996  004E6A  1011               	iorwf	(_atoi$1122+1)^0,w,c
  9997  004E6C  B4D8               	btfsc	status,2,c
  9998  004E6E  D007               	goto	l4684
  9999  004E70  D7CD               	goto	l4664
 10000  004E72                     l4680:
 10001                           
 10002                           ; BSR set to: 4
 10003  004E72  0E00               	movlw	0
 10004  004E74  6E0F               	movwf	(atoi@neg+1)^0,c
 10005  004E76  0E01               	movlw	1
 10006  004E78  6E0E               	movwf	atoi@neg^0,c
 10007  004E7A                     l4682:
 10008  004E7A  2A08               	incf	atoi@s^0,f,c
 10009  004E7C  D036               	goto	l4690
 10010  004E7E                     l4684:
 10011                           
 10012                           ; BSR set to: 4
 10013  004E7E  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10014  004E84                     	if	1	;There is more than 1 active tblptr byte
 10015  004E84  0E20               	movlw	high __smallconst
 10016  004E86  6EF7               	movwf	tblptrh,c
 10017  004E88                     	endif
 10018  004E88                     	if	0	;tblptru may be non-zero
 10019  004E88                     	endif
 10020  004E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10021  004E88  0E00               	movlw	low (__smallconst shr (0+16))
 10022  004E8A  6EF8               	movwf	tblptru,c
 10023  004E8C                     	endif
 10024  004E8C  0008               	tblrd		*
 10025  004E8E  50F5               	movf	tablat,w,c
 10026  004E90  6E0A               	movwf	??_atoi^0,c
 10027  004E92  6A0B               	clrf	(??_atoi+1)^0,c
 10028                           
 10029                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10030                           ; Switch size 1, requested type "simple"
 10031                           ; Number of cases is 1, Range of values is 0 to 0
 10032                           ; switch strategies available:
 10033                           ; Name         Instructions Cycles
 10034                           ; simple_byte            4     3 (average)
 10035                           ;	Chosen strategy is simple_byte
 10036  004E94  500B               	movf	(??_atoi+1)^0,w,c
 10037  004E96  0A00               	xorlw	0	; case 0
 10038  004E98  A4D8               	btfss	status,2,c
 10039  004E9A  D027               	goto	l4690
 10040                           
 10041                           ; BSR set to: 4
 10042                           ; Switch size 1, requested type "simple"
 10043                           ; Number of cases is 2, Range of values is 43 to 45
 10044                           ; switch strategies available:
 10045                           ; Name         Instructions Cycles
 10046                           ; simple_byte            7     4 (average)
 10047                           ;	Chosen strategy is simple_byte
 10048  004E9C  500A               	movf	??_atoi^0,w,c
 10049  004E9E  0A2B               	xorlw	43	; case 43
 10050  004EA0  B4D8               	btfsc	status,2,c
 10051  004EA2  D7EB               	goto	l4682
 10052  004EA4  0A06               	xorlw	6	; case 45
 10053  004EA6  B4D8               	btfsc	status,2,c
 10054  004EA8  D7E4               	goto	l4680
 10055  004EAA  D01F               	goto	l4690
 10056  004EAC                     l4686:
 10057  004EAC  0060  F054  F001   	movff	atoi@n,___wmul@multiplier
 10058  004EB2  0060  F058  F002   	movff	atoi@n+1,___wmul@multiplier+1
 10059  004EB8  0E00               	movlw	0
 10060  004EBA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10061  004EBC  0E0A               	movlw	10
 10062  004EBE  6E03               	movwf	___wmul@multiplicand^0,c
 10063  004EC0  EC6E  F031         	call	___wmul	;wreg free
 10064  004EC4  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10065  004ECA                     	if	1	;There is more than 1 active tblptr byte
 10066  004ECA  0E20               	movlw	high __smallconst
 10067  004ECC  6EF7               	movwf	tblptrh,c
 10068  004ECE                     	endif
 10069  004ECE                     	if	0	;tblptru may be non-zero
 10070  004ECE                     	endif
 10071  004ECE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10072  004ECE  0E00               	movlw	low (__smallconst shr (0+16))
 10073  004ED0  6EF8               	movwf	tblptru,c
 10074  004ED2                     	endif
 10075  004ED2  0008               	tblrd		*
 10076  004ED4  50F5               	movf	tablat,w,c
 10077  004ED6  5E01               	subwf	?___wmul^0,f,c
 10078  004ED8  0E00               	movlw	0
 10079  004EDA  5A02               	subwfb	(?___wmul+1)^0,f,c
 10080  004EDC  0E30               	movlw	48
 10081  004EDE  2401               	addwf	?___wmul^0,w,c
 10082  004EE0  6E15               	movwf	atoi@n^0,c
 10083  004EE2  0E00               	movlw	0
 10084  004EE4  2002               	addwfc	(?___wmul+1)^0,w,c
 10085  004EE6  6E16               	movwf	(atoi@n+1)^0,c
 10086  004EE8  D7C8               	goto	l4682
 10087  004EEA                     l4690:
 10088  004EEA  0ED0               	movlw	208
 10089  004EEC  6E0A               	movwf	??_atoi^0,c
 10090  004EEE  0EFF               	movlw	255
 10091  004EF0  6E0B               	movwf	(??_atoi+1)^0,c
 10092  004EF2  0060  F023  FFF6   	movff	atoi@s,tblptrl
 10093  004EF8                     	if	1	;There is more than 1 active tblptr byte
 10094  004EF8  0E20               	movlw	high __smallconst
 10095  004EFA  6EF7               	movwf	tblptrh,c
 10096  004EFC                     	endif
 10097  004EFC                     	if	0	;tblptru may be non-zero
 10098  004EFC                     	endif
 10099  004EFC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10100  004EFC  0E00               	movlw	low (__smallconst shr (0+16))
 10101  004EFE  6EF8               	movwf	tblptru,c
 10102  004F00                     	endif
 10103  004F00  0008               	tblrd		*
 10104  004F02  50F5               	movf	tablat,w,c
 10105  004F04  6E0C               	movwf	(??_atoi+2)^0,c
 10106  004F06  6A0D               	clrf	(??_atoi+3)^0,c
 10107  004F08  500A               	movf	??_atoi^0,w,c
 10108  004F0A  260C               	addwf	(??_atoi+2)^0,f,c
 10109  004F0C  500B               	movf	(??_atoi+1)^0,w,c
 10110  004F0E  220D               	addwfc	(??_atoi+3)^0,f,c
 10111  004F10  500D               	movf	(??_atoi+3)^0,w,c
 10112  004F12  E106               	bnz	u5560
 10113  004F14  0E0A               	movlw	10
 10114  004F16  5C0C               	subwf	(??_atoi+2)^0,w,c
 10115  004F18  B0D8               	btfsc	status,0,c
 10116  004F1A  D002               	goto	u5560
 10117  004F1C  0E01               	movlw	1
 10118  004F1E  D001               	goto	u5570
 10119  004F20                     u5560:
 10120  004F20  0E00               	movlw	0
 10121  004F22                     u5570:
 10122  004F22  6E12               	movwf	_atoi$1124^0,c
 10123  004F24  6A13               	clrf	(_atoi$1124+1)^0,c
 10124  004F26  5012               	movf	_atoi$1124^0,w,c
 10125  004F28  1013               	iorwf	(_atoi$1124+1)^0,w,c
 10126  004F2A  A4D8               	btfss	status,2,c
 10127  004F2C  D7BF               	goto	l4686
 10128  004F2E  500E               	movf	atoi@neg^0,w,c
 10129  004F30  100F               	iorwf	(atoi@neg+1)^0,w,c
 10130  004F32  A4D8               	btfss	status,2,c
 10131  004F34  D011               	goto	l1426
 10132  004F36  0060  F054  F00A   	movff	atoi@n,??_atoi
 10133  004F3C  0060  F058  F00B   	movff	atoi@n+1,??_atoi+1
 10134  004F42  1E0A               	comf	??_atoi^0,f,c
 10135  004F44  1E0B               	comf	(??_atoi+1)^0,f,c
 10136  004F46  4A0A               	infsnz	??_atoi^0,f,c
 10137  004F48  2A0B               	incf	(??_atoi+1)^0,f,c
 10138  004F4A  0060  F028  F008   	movff	??_atoi,?_atoi
 10139  004F50  0060  F02C  F009   	movff	??_atoi+1,?_atoi+1
 10140  004F56  0012               	return	
 10141  004F58                     l1426:
 10142  004F58  0060  F054  F008   	movff	atoi@n,?_atoi
 10143  004F5E  0060  F058  F009   	movff	atoi@n+1,?_atoi+1
 10144  004F64  0012               	return		;funcret
 10145  004F66                     __end_of_atoi:
 10146                           	opt callstack 0
 10147                           
 10148 ;; *************** function _isspace *****************
 10149 ;; Defined at:
 10150 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
 10151 ;; Parameters:    Size  Location     Type
 10152 ;;  c               2    0[COMRAM] int 
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;		None
 10155 ;; Return value:  Size  Location     Type
 10156 ;;                  2    0[COMRAM] int 
 10157 ;; Registers used:
 10158 ;;		wreg, status,2, status,0
 10159 ;; Tracked objects:
 10160 ;;		On entry : 0/0
 10161 ;;		On exit  : 0/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10164 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10165 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10166 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10167 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10168 ;;Total ram usage:        7 bytes
 10169 ;; Hardware stack levels used:    1
 10170 ;; This function calls:
 10171 ;;		Nothing
 10172 ;; This function is called by:
 10173 ;;		_atoi
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text34
 10178  006120                     __ptext34:
 10179                           	opt callstack 0
 10180  006120                     _isspace:
 10181                           	opt callstack 25
 10182                           
 10183                           ;incstack = 0
 10184  006120  0E01               	movlw	1
 10185  006122  6E07               	movwf	_isspace$1153^0,c
 10186  006124  0E20               	movlw	32
 10187  006126  1801               	xorwf	isspace@c^0,w,c
 10188  006128  1002               	iorwf	(isspace@c+1)^0,w,c
 10189  00612A  B4D8               	btfsc	status,2,c
 10190  00612C  D016               	goto	l4342
 10191  00612E  0EF7               	movlw	247
 10192  006130  6E03               	movwf	??_isspace^0,c
 10193  006132  0EFF               	movlw	255
 10194  006134  6E04               	movwf	(??_isspace+1)^0,c
 10195  006136  0060  F004  F005   	movff	isspace@c,??_isspace+2
 10196  00613C  0060  F008  F006   	movff	isspace@c+1,??_isspace+3
 10197  006142  5003               	movf	??_isspace^0,w,c
 10198  006144  2605               	addwf	(??_isspace+2)^0,f,c
 10199  006146  5004               	movf	(??_isspace+1)^0,w,c
 10200  006148  2206               	addwfc	(??_isspace+3)^0,f,c
 10201  00614A  5006               	movf	(??_isspace+3)^0,w,c
 10202  00614C  E104               	bnz	u4970
 10203  00614E  0E05               	movlw	5
 10204  006150  5C05               	subwf	(??_isspace+2)^0,w,c
 10205  006152  A0D8               	btfss	status,0,c
 10206  006154  D002               	goto	l4342
 10207  006156                     u4970:
 10208  006156  0E00               	movlw	0
 10209  006158  6E07               	movwf	_isspace$1153^0,c
 10210  00615A                     l4342:
 10211  00615A  0060  F01C  F001   	movff	_isspace$1153,?_isspace
 10212  006160  6A02               	clrf	(?_isspace+1)^0,c
 10213  006162  0012               	return		;funcret
 10214  006164                     __end_of_isspace:
 10215                           	opt callstack 0
 10216                           
 10217 ;; *************** function _isdigit *****************
 10218 ;; Defined at:
 10219 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
 10220 ;; Parameters:    Size  Location     Type
 10221 ;;  c               2    0[COMRAM] int 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;		None
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  2    0[COMRAM] int 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10236 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10237 ;;Total ram usage:        6 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; This function calls:
 10240 ;;		Nothing
 10241 ;; This function is called by:
 10242 ;;		_vfpfcnvrt
 10243 ;;		_atoi
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           
 10247                           	psect	text35
 10248  006276                     __ptext35:
 10249                           	opt callstack 0
 10250  006276                     _isdigit:
 10251                           	opt callstack 26
 10252                           
 10253                           ;incstack = 0
 10254  006276  0ED0               	movlw	208
 10255  006278  6E03               	movwf	??_isdigit^0,c
 10256  00627A  0EFF               	movlw	255
 10257  00627C  6E04               	movwf	(??_isdigit+1)^0,c
 10258  00627E  0060  F004  F005   	movff	isdigit@c,??_isdigit+2
 10259  006284  0060  F008  F006   	movff	isdigit@c+1,??_isdigit+3
 10260  00628A  5003               	movf	??_isdigit^0,w,c
 10261  00628C  2605               	addwf	(??_isdigit+2)^0,f,c
 10262  00628E  5004               	movf	(??_isdigit+1)^0,w,c
 10263  006290  2206               	addwfc	(??_isdigit+3)^0,f,c
 10264  006292  5006               	movf	(??_isdigit+3)^0,w,c
 10265  006294  E106               	bnz	u4250
 10266  006296  0E0A               	movlw	10
 10267  006298  5C05               	subwf	(??_isdigit+2)^0,w,c
 10268  00629A  B0D8               	btfsc	status,0,c
 10269  00629C  D002               	goto	u4250
 10270  00629E  0E01               	movlw	1
 10271  0062A0  D001               	goto	u4260
 10272  0062A2                     u4250:
 10273  0062A2  0E00               	movlw	0
 10274  0062A4                     u4260:
 10275  0062A4  6E01               	movwf	?_isdigit^0,c
 10276  0062A6  6A02               	clrf	(?_isdigit+1)^0,c
 10277  0062A8  0012               	return		;funcret
 10278  0062AA                     __end_of_isdigit:
 10279                           	opt callstack 0
 10280                           
 10281 ;; *************** function ___wmul *****************
 10282 ;; Defined at:
 10283 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
 10284 ;; Parameters:    Size  Location     Type
 10285 ;;  multiplier      2    0[COMRAM] unsigned int 
 10286 ;;  multiplicand    2    2[COMRAM] unsigned int 
 10287 ;; Auto vars:     Size  Location     Type
 10288 ;;  product         2    4[COMRAM] unsigned int 
 10289 ;; Return value:  Size  Location     Type
 10290 ;;                  2    0[COMRAM] unsigned int 
 10291 ;; Registers used:
 10292 ;;		wreg, status,2, status,0, prodl, prodh
 10293 ;; Tracked objects:
 10294 ;;		On entry : 0/4
 10295 ;;		On exit  : 0/0
 10296 ;;		Unchanged: 0/0
 10297 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10298 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10299 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10301 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10302 ;;Total ram usage:        6 bytes
 10303 ;; Hardware stack levels used:    1
 10304 ;; This function calls:
 10305 ;;		Nothing
 10306 ;; This function is called by:
 10307 ;;		_atoi
 10308 ;; This function uses a non-reentrant model
 10309 ;;
 10310                           
 10311                           	psect	text36
 10312  0062DC                     __ptext36:
 10313                           	opt callstack 0
 10314  0062DC                     ___wmul:
 10315                           	opt callstack 25
 10316                           
 10317                           ;incstack = 0
 10318  0062DC  5001               	movf	___wmul@multiplier^0,w,c
 10319  0062DE  0203               	mulwf	___wmul@multiplicand^0,c
 10320  0062E0  006F FFCC  F005    	movff	prodl,___wmul@product
 10321  0062E6  006F FFD0  F006    	movff	prodh,___wmul@product+1
 10322  0062EC  5001               	movf	___wmul@multiplier^0,w,c
 10323  0062EE  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 10324  0062F0  50F3               	movf	243,w,c
 10325  0062F2  2606               	addwf	(___wmul@product+1)^0,f,c
 10326  0062F4  5002               	movf	(___wmul@multiplier+1)^0,w,c
 10327  0062F6  0203               	mulwf	___wmul@multiplicand^0,c
 10328  0062F8  50F3               	movf	243,w,c
 10329  0062FA  2606               	addwf	(___wmul@product+1)^0,f,c
 10330  0062FC  0060  F014  F001   	movff	___wmul@product,?___wmul
 10331  006302  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
 10332  006308  0012               	return		;funcret
 10333  00630A                     __end_of___wmul:
 10334                           	opt callstack 0
 10335                           
 10336 ;; *************** function _setLED *****************
 10337 ;; Defined at:
 10338 ;;		line 115 in file "main.c"
 10339 ;; Parameters:    Size  Location     Type
 10340 ;;  mod             4    0[BANK0 ] long 
 10341 ;;  step            4    4[BANK0 ] long 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  shift           4   58[BANK0 ] long 
 10344 ;;  sr              4   54[BANK0 ] long 
 10345 ;;  sb              4   50[BANK0 ] long 
 10346 ;;  sg              4   46[BANK0 ] long 
 10347 ;;  b               4   42[BANK0 ] long 
 10348 ;;  g               4   38[BANK0 ] long 
 10349 ;;  r               4   16[BANK0 ] long 
 10350 ;;  trueMod         2   36[BANK0 ] unsigned short 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  1    wreg      void 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0, cstack
 10355 ;; Tracked objects:
 10356 ;;		On entry : 3F/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 10360 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10361 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10362 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10363 ;;      Totals:         0      62       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10364 ;;Total ram usage:       62 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    1
 10367 ;; This function calls:
 10368 ;;		___aldiv
 10369 ;;		___almod
 10370 ;;		___flge
 10371 ;;		___lmul
 10372 ;; This function is called by:
 10373 ;;		_main_loop
 10374 ;; This function uses a non-reentrant model
 10375 ;;
 10376                           
 10377                           	psect	text37
 10378  003672                     __ptext37:
 10379                           	opt callstack 0
 10380  003672                     _setLED:
 10381                           	opt callstack 28
 10382                           
 10383                           ; BSR set to: 0
 10384                           ;main.c: 116:     uint16_t trueMod = (mod < 0 ? 0 : (mod > 4095 ? 4095 : mod));
 10385                           
 10386                           ;incstack = 0
 10387  003672  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10388  003674  D02B               	goto	l5040
 10389                           
 10390                           ; BSR set to: 0
 10391  003676  BF63               	btfsc	(setLED@mod+3)& (0+255),7,b
 10392  003678  D007               	goto	u6220
 10393  00367A  5163               	movf	(setLED@mod+3)& (0+255),w,b
 10394  00367C  1162               	iorwf	(setLED@mod+2)& (0+255),w,b
 10395  00367E  E111               	bnz	l5036
 10396  003680  0E10               	movlw	16
 10397  003682  5D61               	subwf	(setLED@mod+1)& (0+255),w,b
 10398  003684  B0D8               	btfsc	status,0,c
 10399  003686  D00D               	goto	l5036
 10400  003688                     u6220:
 10401                           
 10402                           ; BSR set to: 0
 10403  003688  0060  F180  F078   	movff	setLED@mod,_setLED$289
 10404  00368E  0060  F184  F079   	movff	setLED@mod+1,_setLED$289+1
 10405  003694  0060  F188  F07A   	movff	setLED@mod+2,_setLED$289+2
 10406  00369A  0060  F18C  F07B   	movff	setLED@mod+3,_setLED$289+3
 10407  0036A0  D008               	goto	l5038
 10408  0036A2                     l5036:
 10409                           
 10410                           ; BSR set to: 0
 10411  0036A2  0EFF               	movlw	255
 10412  0036A4  6F78               	movwf	_setLED$289& (0+255),b
 10413  0036A6  0E0F               	movlw	15
 10414  0036A8  6F79               	movwf	(_setLED$289+1)& (0+255),b
 10415  0036AA  0E00               	movlw	0
 10416  0036AC  6F7A               	movwf	(_setLED$289+2)& (0+255),b
 10417  0036AE  0E00               	movlw	0
 10418  0036B0  6F7B               	movwf	(_setLED$289+3)& (0+255),b
 10419  0036B2                     l5038:
 10420                           
 10421                           ; BSR set to: 0
 10422  0036B2  0060  F1E0  F074   	movff	_setLED$289,_setLED$288
 10423  0036B8  0060  F1E4  F075   	movff	_setLED$289+1,_setLED$288+1
 10424  0036BE  0060  F1E8  F076   	movff	_setLED$289+2,_setLED$288+2
 10425  0036C4  0060  F1EC  F077   	movff	_setLED$289+3,_setLED$288+3
 10426  0036CA  D008               	goto	l5042
 10427  0036CC                     l5040:
 10428                           
 10429                           ; BSR set to: 0
 10430  0036CC  0E00               	movlw	0
 10431  0036CE  6F74               	movwf	_setLED$288& (0+255),b
 10432  0036D0  0E00               	movlw	0
 10433  0036D2  6F75               	movwf	(_setLED$288+1)& (0+255),b
 10434  0036D4  0E00               	movlw	0
 10435  0036D6  6F76               	movwf	(_setLED$288+2)& (0+255),b
 10436  0036D8  0E00               	movlw	0
 10437  0036DA  6F77               	movwf	(_setLED$288+3)& (0+255),b
 10438  0036DC                     l5042:
 10439                           
 10440                           ; BSR set to: 0
 10441  0036DC  0060  F1D0  F084   	movff	_setLED$288,setLED@trueMod
 10442  0036E2  0060  F1D4  F085   	movff	_setLED$288+1,setLED@trueMod+1
 10443                           
 10444                           ; BSR set to: 0
 10445                           ;main.c: 117:     int32_t r = trueMod;
 10446  0036E8  0060  F210  F070   	movff	setLED@trueMod,setLED@r
 10447  0036EE  0060  F214  F071   	movff	setLED@trueMod+1,setLED@r+1
 10448  0036F4  6B72               	clrf	(setLED@r+2)& (0+255),b
 10449  0036F6  6B73               	clrf	(setLED@r+3)& (0+255),b
 10450                           
 10451                           ; BSR set to: 0
 10452                           ;main.c: 118:     int32_t g = 2047 - trueMod / 2;
 10453  0036F8  90D8               	bcf	status,0,c
 10454  0036FA  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10455  0036FC  6F69               	movwf	(??_setLED+1)& (0+255),b
 10456  0036FE  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10457  003700  6F68               	movwf	??_setLED& (0+255),b
 10458  003702  0EFF               	movlw	255
 10459  003704  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10460  003706  0E07               	movlw	7
 10461  003708  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10462  00370A  5168               	movf	??_setLED& (0+255),w,b
 10463  00370C  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10464  00370E  5169               	movf	(??_setLED+1)& (0+255),w,b
 10465  003710  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10466  003712  0060  F1A8  F086   	movff	??_setLED+2,setLED@g
 10467  003718  0060  F1AC  F087   	movff	??_setLED+3,setLED@g+1
 10468  00371E  6B88               	clrf	(setLED@g+2)& (0+255),b
 10469  003720  6B89               	clrf	(setLED@g+3)& (0+255),b
 10470                           
 10471                           ; BSR set to: 0
 10472                           ;main.c: 119:     int32_t b = 2047 - trueMod / 2;
 10473  003722  90D8               	bcf	status,0,c
 10474  003724  3185               	rrcf	(setLED@trueMod+1)& (0+255),w,b
 10475  003726  6F69               	movwf	(??_setLED+1)& (0+255),b
 10476  003728  3184               	rrcf	setLED@trueMod& (0+255),w,b
 10477  00372A  6F68               	movwf	??_setLED& (0+255),b
 10478  00372C  0EFF               	movlw	255
 10479  00372E  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10480  003730  0E07               	movlw	7
 10481  003732  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10482  003734  5168               	movf	??_setLED& (0+255),w,b
 10483  003736  5F6A               	subwf	(??_setLED+2)& (0+255),f,b
 10484  003738  5169               	movf	(??_setLED+1)& (0+255),w,b
 10485  00373A  5B6B               	subwfb	(??_setLED+3)& (0+255),f,b
 10486  00373C  0060  F1A8  F08A   	movff	??_setLED+2,setLED@b
 10487  003742  0060  F1AC  F08B   	movff	??_setLED+3,setLED@b+1
 10488  003748  6B8C               	clrf	(setLED@b+2)& (0+255),b
 10489  00374A  6B8D               	clrf	(setLED@b+3)& (0+255),b
 10490                           
 10491                           ; BSR set to: 0
 10492                           ;main.c: 121:     int32_t shift;;main.c: 122:     if (step < 25000) shift = step / 50;
 10493  00374C  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10494  00374E  D009               	goto	u6230
 10495  003750  5167               	movf	(setLED@step+3)& (0+255),w,b
 10496  003752  1166               	iorwf	(setLED@step+2)& (0+255),w,b
 10497  003754  E11D               	bnz	l5054
 10498  003756  0EA8               	movlw	168
 10499  003758  5D64               	subwf	setLED@step& (0+255),w,b
 10500  00375A  0E61               	movlw	97
 10501  00375C  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10502  00375E  B0D8               	btfsc	status,0,c
 10503  003760  D017               	goto	l5054
 10504  003762                     u6230:
 10505                           
 10506                           ; BSR set to: 0
 10507  003762  0060  F190  F00D   	movff	setLED@step,___aldiv@dividend
 10508  003768  0060  F194  F00E   	movff	setLED@step+1,___aldiv@dividend+1
 10509  00376E  0060  F198  F00F   	movff	setLED@step+2,___aldiv@dividend+2
 10510  003774  0060  F19C  F010   	movff	setLED@step+3,___aldiv@dividend+3
 10511  00377A  0E32               	movlw	50
 10512  00377C  6E11               	movwf	___aldiv@divisor^0,c
 10513  00377E  0E00               	movlw	0
 10514  003780  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10515  003782  0E00               	movlw	0
 10516  003784  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10517  003786  0E00               	movlw	0
 10518  003788  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10519  00378A  EC83  F02A         	call	___aldiv	;wreg free
 10520  00378E  D039               	goto	L15
 10521  003790                     l5054:
 10522                           
 10523                           ; BSR set to: 0
 10524  003790  BF67               	btfsc	(setLED@step+3)& (0+255),7,b
 10525  003792  D00A               	goto	u6240
 10526  003794  5167               	movf	(setLED@step+3)& (0+255),w,b
 10527  003796  E11F               	bnz	l5058
 10528  003798  0EF8               	movlw	248
 10529  00379A  5D64               	subwf	setLED@step& (0+255),w,b
 10530  00379C  0E24               	movlw	36
 10531  00379E  5965               	subwfb	(setLED@step+1)& (0+255),w,b
 10532  0037A0  0E01               	movlw	1
 10533  0037A2  5966               	subwfb	(setLED@step+2)& (0+255),w,b
 10534  0037A4  B0D8               	btfsc	status,0,c
 10535  0037A6  D017               	goto	l5058
 10536  0037A8                     u6240:
 10537                           
 10538                           ; BSR set to: 0
 10539  0037A8  5164               	movf	setLED@step& (0+255),w,b
 10540  0037AA  0850               	sublw	80
 10541  0037AC  6E0D               	movwf	___aldiv@dividend^0,c
 10542  0037AE  0EC3               	movlw	195
 10543  0037B0  5565               	subfwb	(setLED@step+1)& (0+255),w,b
 10544  0037B2  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10545  0037B4  0E00               	movlw	0
 10546  0037B6  5566               	subfwb	(setLED@step+2)& (0+255),w,b
 10547  0037B8  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10548  0037BA  0E00               	movlw	0
 10549  0037BC  5567               	subfwb	(setLED@step+3)& (0+255),w,b
 10550  0037BE  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10551  0037C0  0E32               	movlw	50
 10552  0037C2  6E11               	movwf	___aldiv@divisor^0,c
 10553  0037C4  0E00               	movlw	0
 10554  0037C6  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10555  0037C8  0E00               	movlw	0
 10556  0037CA  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10557  0037CC  0E00               	movlw	0
 10558  0037CE  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10559  0037D0  EC83  F02A         	call	___aldiv	;wreg free
 10560  0037D4  D016               	goto	L15
 10561  0037D6                     l5058:
 10562                           
 10563                           ; BSR set to: 0
 10564  0037D6  0E60               	movlw	96
 10565  0037D8  2564               	addwf	setLED@step& (0+255),w,b
 10566  0037DA  6E0D               	movwf	___aldiv@dividend^0,c
 10567  0037DC  0E79               	movlw	121
 10568  0037DE  2165               	addwfc	(setLED@step+1)& (0+255),w,b
 10569  0037E0  6E0E               	movwf	(___aldiv@dividend+1)^0,c
 10570  0037E2  0EFE               	movlw	254
 10571  0037E4  2166               	addwfc	(setLED@step+2)& (0+255),w,b
 10572  0037E6  6E0F               	movwf	(___aldiv@dividend+2)^0,c
 10573  0037E8  0EFF               	movlw	255
 10574  0037EA  2167               	addwfc	(setLED@step+3)& (0+255),w,b
 10575  0037EC  6E10               	movwf	(___aldiv@dividend+3)^0,c
 10576  0037EE  0E32               	movlw	50
 10577  0037F0  6E11               	movwf	___aldiv@divisor^0,c
 10578  0037F2  0E00               	movlw	0
 10579  0037F4  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10580  0037F6  0E00               	movlw	0
 10581  0037F8  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10582  0037FA  0E00               	movlw	0
 10583  0037FC  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10584  0037FE  EC83  F02A         	call	___aldiv	;wreg free
 10585  003802                     L15:
 10586  003802  0060  F034  F09A   	movff	?___aldiv,setLED@shift
 10587  003808  0060  F038  F09B   	movff	?___aldiv+1,setLED@shift+1
 10588  00380E  0060  F03C  F09C   	movff	?___aldiv+2,setLED@shift+2
 10589  003814  0060  F040  F09D   	movff	?___aldiv+3,setLED@shift+3
 10590                           
 10591                           ;main.c: 125:     g = (g + shift - 500 < 0 ? 0 : (g + shift - 500 > 4095 ? 4095 : g + sh
      +                          ift - 500));
 10592  00381A  0100               	movlb	0	; () banked
 10593  00381C  519A               	movf	setLED@shift& (0+255),w,b
 10594  00381E  2586               	addwf	setLED@g& (0+255),w,b
 10595  003820  6F68               	movwf	??_setLED& (0+255),b
 10596  003822  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10597  003824  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10598  003826  6F69               	movwf	(??_setLED+1)& (0+255),b
 10599  003828  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10600  00382A  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10601  00382C  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10602  00382E  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10603  003830  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10604  003832  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10605  003834  0E0C               	movlw	12
 10606  003836  2568               	addwf	??_setLED& (0+255),w,b
 10607  003838  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10608  00383A  0EFE               	movlw	254
 10609  00383C  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10610  00383E  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10611  003840  0EFF               	movlw	255
 10612  003842  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10613  003844  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10614  003846  0EFF               	movlw	255
 10615  003848  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10616  00384A  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10617  00384C  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10618  00384E  D04E               	goto	l5070
 10619                           
 10620                           ; BSR set to: 0
 10621  003850  519A               	movf	setLED@shift& (0+255),w,b
 10622  003852  2586               	addwf	setLED@g& (0+255),w,b
 10623  003854  6F68               	movwf	??_setLED& (0+255),b
 10624  003856  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10625  003858  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10626  00385A  6F69               	movwf	(??_setLED+1)& (0+255),b
 10627  00385C  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10628  00385E  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10629  003860  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10630  003862  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10631  003864  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10632  003866  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10633  003868  0E0C               	movlw	12
 10634  00386A  2568               	addwf	??_setLED& (0+255),w,b
 10635  00386C  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10636  00386E  0EFE               	movlw	254
 10637  003870  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10638  003872  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10639  003874  0EFF               	movlw	255
 10640  003876  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10641  003878  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10642  00387A  0EFF               	movlw	255
 10643  00387C  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10644  00387E  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10645  003880  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10646  003882  D007               	goto	u6260
 10647  003884  516F               	movf	(??_setLED+7)& (0+255),w,b
 10648  003886  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 10649  003888  E11C               	bnz	l5066
 10650  00388A  0E10               	movlw	16
 10651  00388C  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 10652  00388E  B0D8               	btfsc	status,0,c
 10653  003890  D018               	goto	l5066
 10654  003892                     u6260:
 10655                           
 10656                           ; BSR set to: 0
 10657  003892  519A               	movf	setLED@shift& (0+255),w,b
 10658  003894  2586               	addwf	setLED@g& (0+255),w,b
 10659  003896  6F68               	movwf	??_setLED& (0+255),b
 10660  003898  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10661  00389A  2187               	addwfc	(setLED@g+1)& (0+255),w,b
 10662  00389C  6F69               	movwf	(??_setLED+1)& (0+255),b
 10663  00389E  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10664  0038A0  2188               	addwfc	(setLED@g+2)& (0+255),w,b
 10665  0038A2  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10666  0038A4  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10667  0038A6  2189               	addwfc	(setLED@g+3)& (0+255),w,b
 10668  0038A8  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10669  0038AA  0E0C               	movlw	12
 10670  0038AC  2568               	addwf	??_setLED& (0+255),w,b
 10671  0038AE  6F7C               	movwf	_setLED$294& (0+255),b
 10672  0038B0  0EFE               	movlw	254
 10673  0038B2  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10674  0038B4  6F7D               	movwf	(_setLED$294+1)& (0+255),b
 10675  0038B6  0EFF               	movlw	255
 10676  0038B8  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10677  0038BA  6F7E               	movwf	(_setLED$294+2)& (0+255),b
 10678  0038BC  0EFF               	movlw	255
 10679  0038BE  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10680  0038C0  D007               	goto	L16
 10681  0038C2                     l5066:
 10682                           
 10683                           ; BSR set to: 0
 10684  0038C2  0EFF               	movlw	255
 10685  0038C4  6F7C               	movwf	_setLED$294& (0+255),b
 10686  0038C6  0E0F               	movlw	15
 10687  0038C8  6F7D               	movwf	(_setLED$294+1)& (0+255),b
 10688  0038CA  0E00               	movlw	0
 10689  0038CC  6F7E               	movwf	(_setLED$294+2)& (0+255),b
 10690  0038CE  0E00               	movlw	0
 10691  0038D0                     L16:
 10692  0038D0  6F7F               	movwf	(_setLED$294+3)& (0+255),b
 10693                           
 10694                           ; BSR set to: 0
 10695  0038D2  0060  F1F0  F086   	movff	_setLED$294,setLED@g
 10696  0038D8  0060  F1F4  F087   	movff	_setLED$294+1,setLED@g+1
 10697  0038DE  0060  F1F8  F088   	movff	_setLED$294+2,setLED@g+2
 10698  0038E4  0060  F1FC  F089   	movff	_setLED$294+3,setLED@g+3
 10699  0038EA  D008               	goto	l5072
 10700  0038EC                     l5070:
 10701                           
 10702                           ; BSR set to: 0
 10703  0038EC  0E00               	movlw	0
 10704  0038EE  6F86               	movwf	setLED@g& (0+255),b
 10705  0038F0  0E00               	movlw	0
 10706  0038F2  6F87               	movwf	(setLED@g+1)& (0+255),b
 10707  0038F4  0E00               	movlw	0
 10708  0038F6  6F88               	movwf	(setLED@g+2)& (0+255),b
 10709  0038F8  0E00               	movlw	0
 10710  0038FA  6F89               	movwf	(setLED@g+3)& (0+255),b
 10711  0038FC                     l5072:
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;main.c: 126:     b = (b - shift - 500 < 0 ? 0 : (b - shift - 500 > 4095 ? 4095 : b - sh
      +                          ift - 500));
 10715  0038FC  519A               	movf	setLED@shift& (0+255),w,b
 10716  0038FE  5D8A               	subwf	setLED@b& (0+255),w,b
 10717  003900  6F68               	movwf	??_setLED& (0+255),b
 10718  003902  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10719  003904  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10720  003906  6F69               	movwf	(??_setLED+1)& (0+255),b
 10721  003908  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10722  00390A  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10723  00390C  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10724  00390E  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10725  003910  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10726  003912  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10727  003914  0E0C               	movlw	12
 10728  003916  2568               	addwf	??_setLED& (0+255),w,b
 10729  003918  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10730  00391A  0EFE               	movlw	254
 10731  00391C  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10732  00391E  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10733  003920  0EFF               	movlw	255
 10734  003922  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10735  003924  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10736  003926  0EFF               	movlw	255
 10737  003928  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10738  00392A  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10739  00392C  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10740  00392E  D04E               	goto	l5082
 10741                           
 10742                           ; BSR set to: 0
 10743  003930  519A               	movf	setLED@shift& (0+255),w,b
 10744  003932  5D8A               	subwf	setLED@b& (0+255),w,b
 10745  003934  6F68               	movwf	??_setLED& (0+255),b
 10746  003936  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10747  003938  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10748  00393A  6F69               	movwf	(??_setLED+1)& (0+255),b
 10749  00393C  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10750  00393E  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10751  003940  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10752  003942  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10753  003944  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10754  003946  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10755  003948  0E0C               	movlw	12
 10756  00394A  2568               	addwf	??_setLED& (0+255),w,b
 10757  00394C  6F6C               	movwf	(??_setLED+4)& (0+255),b
 10758  00394E  0EFE               	movlw	254
 10759  003950  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10760  003952  6F6D               	movwf	(??_setLED+5)& (0+255),b
 10761  003954  0EFF               	movlw	255
 10762  003956  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10763  003958  6F6E               	movwf	(??_setLED+6)& (0+255),b
 10764  00395A  0EFF               	movlw	255
 10765  00395C  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10766  00395E  6F6F               	movwf	(??_setLED+7)& (0+255),b
 10767  003960  BF6F               	btfsc	(??_setLED+7)& (0+255),7,b
 10768  003962  D007               	goto	u6280
 10769  003964  516F               	movf	(??_setLED+7)& (0+255),w,b
 10770  003966  116E               	iorwf	(??_setLED+6)& (0+255),w,b
 10771  003968  E11C               	bnz	l5078
 10772  00396A  0E10               	movlw	16
 10773  00396C  5D6D               	subwf	(??_setLED+5)& (0+255),w,b
 10774  00396E  B0D8               	btfsc	status,0,c
 10775  003970  D018               	goto	l5078
 10776  003972                     u6280:
 10777                           
 10778                           ; BSR set to: 0
 10779  003972  519A               	movf	setLED@shift& (0+255),w,b
 10780  003974  5D8A               	subwf	setLED@b& (0+255),w,b
 10781  003976  6F68               	movwf	??_setLED& (0+255),b
 10782  003978  519B               	movf	(setLED@shift+1)& (0+255),w,b
 10783  00397A  598B               	subwfb	(setLED@b+1)& (0+255),w,b
 10784  00397C  6F69               	movwf	(??_setLED+1)& (0+255),b
 10785  00397E  519C               	movf	(setLED@shift+2)& (0+255),w,b
 10786  003980  598C               	subwfb	(setLED@b+2)& (0+255),w,b
 10787  003982  6F6A               	movwf	(??_setLED+2)& (0+255),b
 10788  003984  519D               	movf	(setLED@shift+3)& (0+255),w,b
 10789  003986  598D               	subwfb	(setLED@b+3)& (0+255),w,b
 10790  003988  6F6B               	movwf	(??_setLED+3)& (0+255),b
 10791  00398A  0E0C               	movlw	12
 10792  00398C  2568               	addwf	??_setLED& (0+255),w,b
 10793  00398E  6F80               	movwf	_setLED$295& (0+255),b
 10794  003990  0EFE               	movlw	254
 10795  003992  2169               	addwfc	(??_setLED+1)& (0+255),w,b
 10796  003994  6F81               	movwf	(_setLED$295+1)& (0+255),b
 10797  003996  0EFF               	movlw	255
 10798  003998  216A               	addwfc	(??_setLED+2)& (0+255),w,b
 10799  00399A  6F82               	movwf	(_setLED$295+2)& (0+255),b
 10800  00399C  0EFF               	movlw	255
 10801  00399E  216B               	addwfc	(??_setLED+3)& (0+255),w,b
 10802  0039A0  D007               	goto	L17
 10803  0039A2                     l5078:
 10804                           
 10805                           ; BSR set to: 0
 10806  0039A2  0EFF               	movlw	255
 10807  0039A4  6F80               	movwf	_setLED$295& (0+255),b
 10808  0039A6  0E0F               	movlw	15
 10809  0039A8  6F81               	movwf	(_setLED$295+1)& (0+255),b
 10810  0039AA  0E00               	movlw	0
 10811  0039AC  6F82               	movwf	(_setLED$295+2)& (0+255),b
 10812  0039AE  0E00               	movlw	0
 10813  0039B0                     L17:
 10814  0039B0  6F83               	movwf	(_setLED$295+3)& (0+255),b
 10815                           
 10816                           ; BSR set to: 0
 10817  0039B2  0060  F200  F08A   	movff	_setLED$295,setLED@b
 10818  0039B8  0060  F204  F08B   	movff	_setLED$295+1,setLED@b+1
 10819  0039BE  0060  F208  F08C   	movff	_setLED$295+2,setLED@b+2
 10820  0039C4  0060  F20C  F08D   	movff	_setLED$295+3,setLED@b+3
 10821  0039CA  D008               	goto	l233
 10822  0039CC                     l5082:
 10823                           
 10824                           ; BSR set to: 0
 10825  0039CC  0E00               	movlw	0
 10826  0039CE  6F8A               	movwf	setLED@b& (0+255),b
 10827  0039D0  0E00               	movlw	0
 10828  0039D2  6F8B               	movwf	(setLED@b+1)& (0+255),b
 10829  0039D4  0E00               	movlw	0
 10830  0039D6  6F8C               	movwf	(setLED@b+2)& (0+255),b
 10831  0039D8  0E00               	movlw	0
 10832  0039DA  6F8D               	movwf	(setLED@b+3)& (0+255),b
 10833  0039DC                     l233:
 10834                           
 10835                           ; BSR set to: 0
 10836                           ;main.c: 128:     int32_t sr, sg, sb;;main.c: 129:     if (on) {
 10837  0039DC  0104               	movlb	4	; () banked
 10838  0039DE  5147               	movf	_on& (0+255),w,b
 10839  0039E0  B4D8               	btfsc	status,2,c
 10840  0039E2  D0FE               	goto	l5114
 10841                           
 10842                           ; BSR set to: 4
 10843                           ;main.c: 130:         sr = r * ledBrightness / 300;
 10844  0039E4  0060  F1C0  F001   	movff	setLED@r,___lmul@multiplier
 10845  0039EA  0060  F1C4  F002   	movff	setLED@r+1,___lmul@multiplier+1
 10846  0039F0  0060  F1C8  F003   	movff	setLED@r+2,___lmul@multiplier+2
 10847  0039F6  0060  F1CC  F004   	movff	setLED@r+3,___lmul@multiplier+3
 10848  0039FC  0061  F270  F005   	movff	_ledBrightness,___lmul@multiplicand
 10849  003A02  0061  F274  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 10850  003A08  0061  F278  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 10851  003A0E  0061  F27C  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 10852  003A14  ECE3  F02F         	call	___lmul	;wreg free
 10853  003A18  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 10854  003A1E  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 10855  003A24  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 10856  003A2A  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 10857  003A30  0E2C               	movlw	44
 10858  003A32  6E11               	movwf	___aldiv@divisor^0,c
 10859  003A34  0E01               	movlw	1
 10860  003A36  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10861  003A38  0E00               	movlw	0
 10862  003A3A  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10863  003A3C  0E00               	movlw	0
 10864  003A3E  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10865  003A40  EC83  F02A         	call	___aldiv	;wreg free
 10866  003A44  0060  F034  F096   	movff	?___aldiv,setLED@sr
 10867  003A4A  0060  F038  F097   	movff	?___aldiv+1,setLED@sr+1
 10868  003A50  0060  F03C  F098   	movff	?___aldiv+2,setLED@sr+2
 10869  003A56  0060  F040  F099   	movff	?___aldiv+3,setLED@sr+3
 10870                           
 10871                           ;main.c: 131:         if (sr < 0) sr = 0;
 10872  003A5C  0100               	movlb	0	; () banked
 10873  003A5E  AF99               	btfss	(setLED@sr+3)& (0+255),7,b
 10874  003A60  D004               	goto	l5090
 10875                           
 10876                           ; BSR set to: 0
 10877  003A62  0E00               	movlw	0
 10878  003A64  6F96               	movwf	setLED@sr& (0+255),b
 10879  003A66  0E00               	movlw	0
 10880  003A68  D00C               	goto	L18
 10881  003A6A                     l5090:
 10882                           
 10883                           ; BSR set to: 0
 10884  003A6A  BF99               	btfsc	(setLED@sr+3)& (0+255),7,b
 10885  003A6C  D00F               	goto	l5094
 10886  003A6E  5199               	movf	(setLED@sr+3)& (0+255),w,b
 10887  003A70  1198               	iorwf	(setLED@sr+2)& (0+255),w,b
 10888  003A72  E104               	bnz	u6310
 10889  003A74  0E10               	movlw	16
 10890  003A76  5D97               	subwf	(setLED@sr+1)& (0+255),w,b
 10891  003A78  A0D8               	btfss	status,0,c
 10892  003A7A  D008               	goto	l5094
 10893  003A7C                     u6310:
 10894                           
 10895                           ; BSR set to: 0
 10896  003A7C  0EFF               	movlw	255
 10897  003A7E  6F96               	movwf	setLED@sr& (0+255),b
 10898  003A80  0E0F               	movlw	15
 10899  003A82                     L18:
 10900  003A82  6F97               	movwf	(setLED@sr+1)& (0+255),b
 10901  003A84  0E00               	movlw	0
 10902  003A86  6F98               	movwf	(setLED@sr+2)& (0+255),b
 10903  003A88  0E00               	movlw	0
 10904  003A8A  6F99               	movwf	(setLED@sr+3)& (0+255),b
 10905  003A8C                     l5094:
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;main.c: 133:         sg = g * ledBrightness / 300;
 10909  003A8C  0060  F218  F001   	movff	setLED@g,___lmul@multiplier
 10910  003A92  0060  F21C  F002   	movff	setLED@g+1,___lmul@multiplier+1
 10911  003A98  0060  F220  F003   	movff	setLED@g+2,___lmul@multiplier+2
 10912  003A9E  0060  F224  F004   	movff	setLED@g+3,___lmul@multiplier+3
 10913  003AA4  0061  F270  F005   	movff	_ledBrightness,___lmul@multiplicand
 10914  003AAA  0061  F274  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 10915  003AB0  0061  F278  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 10916  003AB6  0061  F27C  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 10917  003ABC  ECE3  F02F         	call	___lmul	;wreg free
 10918  003AC0  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 10919  003AC6  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 10920  003ACC  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 10921  003AD2  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 10922  003AD8  0E2C               	movlw	44
 10923  003ADA  6E11               	movwf	___aldiv@divisor^0,c
 10924  003ADC  0E01               	movlw	1
 10925  003ADE  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10926  003AE0  0E00               	movlw	0
 10927  003AE2  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10928  003AE4  0E00               	movlw	0
 10929  003AE6  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10930  003AE8  EC83  F02A         	call	___aldiv	;wreg free
 10931  003AEC  0060  F034  F08E   	movff	?___aldiv,setLED@sg
 10932  003AF2  0060  F038  F08F   	movff	?___aldiv+1,setLED@sg+1
 10933  003AF8  0060  F03C  F090   	movff	?___aldiv+2,setLED@sg+2
 10934  003AFE  0060  F040  F091   	movff	?___aldiv+3,setLED@sg+3
 10935                           
 10936                           ;main.c: 134:         if (sg < 0) sg = 0;
 10937  003B04  0100               	movlb	0	; () banked
 10938  003B06  AF91               	btfss	(setLED@sg+3)& (0+255),7,b
 10939  003B08  D009               	goto	l5100
 10940                           
 10941                           ; BSR set to: 0
 10942  003B0A  0E00               	movlw	0
 10943  003B0C  6F8E               	movwf	setLED@sg& (0+255),b
 10944  003B0E  0E00               	movlw	0
 10945  003B10  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 10946  003B12  0E00               	movlw	0
 10947  003B14  6F90               	movwf	(setLED@sg+2)& (0+255),b
 10948  003B16  0E00               	movlw	0
 10949  003B18  6F91               	movwf	(setLED@sg+3)& (0+255),b
 10950  003B1A  D011               	goto	l5104
 10951  003B1C                     l5100:
 10952                           
 10953                           ; BSR set to: 0
 10954  003B1C  BF91               	btfsc	(setLED@sg+3)& (0+255),7,b
 10955  003B1E  D00F               	goto	l5104
 10956  003B20  5191               	movf	(setLED@sg+3)& (0+255),w,b
 10957  003B22  1190               	iorwf	(setLED@sg+2)& (0+255),w,b
 10958  003B24  E104               	bnz	u6330
 10959  003B26  0E10               	movlw	16
 10960  003B28  5D8F               	subwf	(setLED@sg+1)& (0+255),w,b
 10961  003B2A  A0D8               	btfss	status,0,c
 10962  003B2C  D008               	goto	l5104
 10963  003B2E                     u6330:
 10964                           
 10965                           ; BSR set to: 0
 10966  003B2E  0EFF               	movlw	255
 10967  003B30  6F96               	movwf	setLED@sr& (0+255),b
 10968  003B32  0E0F               	movlw	15
 10969  003B34  6F97               	movwf	(setLED@sr+1)& (0+255),b
 10970  003B36  0E00               	movlw	0
 10971  003B38  6F98               	movwf	(setLED@sr+2)& (0+255),b
 10972  003B3A  0E00               	movlw	0
 10973  003B3C  6F99               	movwf	(setLED@sr+3)& (0+255),b
 10974  003B3E                     l5104:
 10975                           
 10976                           ; BSR set to: 0
 10977                           ;main.c: 136:         sb = b * ledBrightness / 300;
 10978  003B3E  0060  F228  F001   	movff	setLED@b,___lmul@multiplier
 10979  003B44  0060  F22C  F002   	movff	setLED@b+1,___lmul@multiplier+1
 10980  003B4A  0060  F230  F003   	movff	setLED@b+2,___lmul@multiplier+2
 10981  003B50  0060  F234  F004   	movff	setLED@b+3,___lmul@multiplier+3
 10982  003B56  0061  F270  F005   	movff	_ledBrightness,___lmul@multiplicand
 10983  003B5C  0061  F274  F006   	movff	_ledBrightness+1,___lmul@multiplicand+1
 10984  003B62  0061  F278  F007   	movff	_ledBrightness+2,___lmul@multiplicand+2
 10985  003B68  0061  F27C  F008   	movff	_ledBrightness+3,___lmul@multiplicand+3
 10986  003B6E  ECE3  F02F         	call	___lmul	;wreg free
 10987  003B72  0060  F004  F00D   	movff	?___lmul,___aldiv@dividend
 10988  003B78  0060  F008  F00E   	movff	?___lmul+1,___aldiv@dividend+1
 10989  003B7E  0060  F00C  F00F   	movff	?___lmul+2,___aldiv@dividend+2
 10990  003B84  0060  F010  F010   	movff	?___lmul+3,___aldiv@dividend+3
 10991  003B8A  0E2C               	movlw	44
 10992  003B8C  6E11               	movwf	___aldiv@divisor^0,c
 10993  003B8E  0E01               	movlw	1
 10994  003B90  6E12               	movwf	(___aldiv@divisor+1)^0,c
 10995  003B92  0E00               	movlw	0
 10996  003B94  6E13               	movwf	(___aldiv@divisor+2)^0,c
 10997  003B96  0E00               	movlw	0
 10998  003B98  6E14               	movwf	(___aldiv@divisor+3)^0,c
 10999  003B9A  EC83  F02A         	call	___aldiv	;wreg free
 11000  003B9E  0060  F034  F092   	movff	?___aldiv,setLED@sb
 11001  003BA4  0060  F038  F093   	movff	?___aldiv+1,setLED@sb+1
 11002  003BAA  0060  F03C  F094   	movff	?___aldiv+2,setLED@sb+2
 11003  003BB0  0060  F040  F095   	movff	?___aldiv+3,setLED@sb+3
 11004                           
 11005                           ;main.c: 137:         if (sb < 0) sb = 0;
 11006  003BB6  0100               	movlb	0	; () banked
 11007  003BB8  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 11008  003BBA  D023               	goto	L19
 11009                           
 11010                           ; BSR set to: 0
 11011                           
 11012                           ; BSR set to: 0
 11013  003BBC  BF95               	btfsc	(setLED@sb+3)& (0+255),7,b
 11014  003BBE  D029               	goto	l5116
 11015  003BC0  5195               	movf	(setLED@sb+3)& (0+255),w,b
 11016  003BC2  1194               	iorwf	(setLED@sb+2)& (0+255),w,b
 11017  003BC4  E104               	bnz	u6350
 11018  003BC6  0E10               	movlw	16
 11019  003BC8  5D93               	subwf	(setLED@sb+1)& (0+255),w,b
 11020  003BCA  A0D8               	btfss	status,0,c
 11021  003BCC  D022               	goto	l5116
 11022  003BCE                     u6350:
 11023                           
 11024                           ; BSR set to: 0
 11025  003BCE  0EFF               	movlw	255
 11026  003BD0  6F96               	movwf	setLED@sr& (0+255),b
 11027  003BD2  0E0F               	movlw	15
 11028  003BD4  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11029  003BD6  0E00               	movlw	0
 11030  003BD8  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11031  003BDA  0E00               	movlw	0
 11032  003BDC  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11033  003BDE  D019               	goto	l5116
 11034  003BE0                     l5114:
 11035                           
 11036                           ; BSR set to: 4
 11037                           ;main.c: 140:         sr = 0;
 11038  003BE0  0E00               	movlw	0
 11039  003BE2  0100               	movlb	0	; () banked
 11040  003BE4  6F96               	movwf	setLED@sr& (0+255),b
 11041  003BE6  0E00               	movlw	0
 11042  003BE8  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11043  003BEA  0E00               	movlw	0
 11044  003BEC  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11045  003BEE  0E00               	movlw	0
 11046  003BF0  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11047                           
 11048                           ;main.c: 141:         sg = 0;
 11049  003BF2  0E00               	movlw	0
 11050  003BF4  6F8E               	movwf	setLED@sg& (0+255),b
 11051  003BF6  0E00               	movlw	0
 11052  003BF8  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11053  003BFA  0E00               	movlw	0
 11054  003BFC  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11055  003BFE  0E00               	movlw	0
 11056  003C00  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11057  003C02                     L19:
 11058                           
 11059                           ;main.c: 142:         sb = 0;
 11060  003C02  0E00               	movlw	0
 11061  003C04  6F92               	movwf	setLED@sb& (0+255),b
 11062  003C06  0E00               	movlw	0
 11063  003C08  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11064  003C0A  0E00               	movlw	0
 11065  003C0C  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11066  003C0E  0E00               	movlw	0
 11067  003C10  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11068  003C12                     l5116:
 11069                           
 11070                           ; BSR set to: 0
 11071                           ;main.c: 145:     if (bat_percent < 5.0f && step % 10000 < 1000) {
 11072  003C12  0061  F280  F051   	movff	_bat_percent,___flge@ff1
 11073  003C18  0061  F284  F052   	movff	_bat_percent+1,___flge@ff1+1
 11074  003C1E  0061  F288  F053   	movff	_bat_percent+2,___flge@ff1+2
 11075  003C24  0061  F28C  F054   	movff	_bat_percent+3,___flge@ff1+3
 11076  003C2A  0E00               	movlw	0
 11077  003C2C  6E55               	movwf	___flge@ff2^0,c
 11078  003C2E  0E00               	movlw	0
 11079  003C30  6E56               	movwf	(___flge@ff2+1)^0,c
 11080  003C32  0EA0               	movlw	160
 11081  003C34  6E57               	movwf	(___flge@ff2+2)^0,c
 11082  003C36  0E40               	movlw	64
 11083  003C38  6E58               	movwf	(___flge@ff2+3)^0,c
 11084  003C3A  ECED  F02A         	call	___flge	;wreg free
 11085  003C3E  B0D8               	btfsc	status,0,c
 11086  003C40  D03A               	goto	l5122
 11087  003C42  0060  F190  F001   	movff	setLED@step,___almod@dividend
 11088  003C48  0060  F194  F002   	movff	setLED@step+1,___almod@dividend+1
 11089  003C4E  0060  F198  F003   	movff	setLED@step+2,___almod@dividend+2
 11090  003C54  0060  F19C  F004   	movff	setLED@step+3,___almod@dividend+3
 11091  003C5A  0E10               	movlw	16
 11092  003C5C  6E05               	movwf	___almod@divisor^0,c
 11093  003C5E  0E27               	movlw	39
 11094  003C60  6E06               	movwf	(___almod@divisor+1)^0,c
 11095  003C62  0E00               	movlw	0
 11096  003C64  6E07               	movwf	(___almod@divisor+2)^0,c
 11097  003C66  0E00               	movlw	0
 11098  003C68  6E08               	movwf	(___almod@divisor+3)^0,c
 11099  003C6A  ECBA  F02B         	call	___almod	;wreg free
 11100  003C6E  BE04               	btfsc	(?___almod+3)^0,7,c
 11101  003C70  D009               	goto	u6370
 11102  003C72  5004               	movf	(?___almod+3)^0,w,c
 11103  003C74  1003               	iorwf	(?___almod+2)^0,w,c
 11104  003C76  E11F               	bnz	l5122
 11105  003C78  0EE8               	movlw	232
 11106  003C7A  5C01               	subwf	?___almod^0,w,c
 11107  003C7C  0E03               	movlw	3
 11108  003C7E  5802               	subwfb	(?___almod+1)^0,w,c
 11109  003C80  B0D8               	btfsc	status,0,c
 11110  003C82  D019               	goto	l5122
 11111  003C84                     u6370:
 11112                           
 11113                           ;main.c: 146:         sr = 4095;
 11114  003C84  0EFF               	movlw	255
 11115  003C86  0100               	movlb	0	; () banked
 11116  003C88  6F96               	movwf	setLED@sr& (0+255),b
 11117  003C8A  0E0F               	movlw	15
 11118  003C8C  6F97               	movwf	(setLED@sr+1)& (0+255),b
 11119  003C8E  0E00               	movlw	0
 11120  003C90  6F98               	movwf	(setLED@sr+2)& (0+255),b
 11121  003C92  0E00               	movlw	0
 11122  003C94  6F99               	movwf	(setLED@sr+3)& (0+255),b
 11123                           
 11124                           ;main.c: 147:         sg = 0;
 11125  003C96  0E00               	movlw	0
 11126  003C98  6F8E               	movwf	setLED@sg& (0+255),b
 11127  003C9A  0E00               	movlw	0
 11128  003C9C  6F8F               	movwf	(setLED@sg+1)& (0+255),b
 11129  003C9E  0E00               	movlw	0
 11130  003CA0  6F90               	movwf	(setLED@sg+2)& (0+255),b
 11131  003CA2  0E00               	movlw	0
 11132  003CA4  6F91               	movwf	(setLED@sg+3)& (0+255),b
 11133                           
 11134                           ;main.c: 148:         sb = 0;
 11135  003CA6  0E00               	movlw	0
 11136  003CA8  6F92               	movwf	setLED@sb& (0+255),b
 11137  003CAA  0E00               	movlw	0
 11138  003CAC  6F93               	movwf	(setLED@sb+1)& (0+255),b
 11139  003CAE  0E00               	movlw	0
 11140  003CB0  6F94               	movwf	(setLED@sb+2)& (0+255),b
 11141  003CB2  0E00               	movlw	0
 11142  003CB4  6F95               	movwf	(setLED@sb+3)& (0+255),b
 11143  003CB6                     l5122:
 11144                           
 11145                           ;main.c: 151:     CCPR3H = sr >> 8;
 11146  003CB6  0060  F25F  FF75   	movff	setLED@sr+1,16245	;volatile
 11147                           
 11148                           ;main.c: 152:     CCPR3L = sr & 0xff;
 11149  003CBC  0060  F25B  FF74   	movff	setLED@sr,16244	;volatile
 11150                           
 11151                           ;main.c: 153:     CCPR2H = sg >> 8;
 11152  003CC2  0060  F23F  FF79   	movff	setLED@sg+1,16249	;volatile
 11153                           
 11154                           ;main.c: 154:     CCPR2L = sg & 0xff;
 11155  003CC8  0060  F23B  FF78   	movff	setLED@sg,16248	;volatile
 11156                           
 11157                           ;main.c: 155:     CCPR4H = sb >> 8;
 11158  003CCE  0060  F24F  FF71   	movff	setLED@sb+1,16241	;volatile
 11159                           
 11160                           ;main.c: 156:     CCPR4L = sb & 0xff;
 11161  003CD4  0060  F24B  FF70   	movff	setLED@sb,16240	;volatile
 11162  003CDA  0012               	return		;funcret
 11163  003CDC                     __end_of_setLED:
 11164                           	opt callstack 0
 11165                           
 11166 ;; *************** function ___lmul *****************
 11167 ;; Defined at:
 11168 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
 11169 ;; Parameters:    Size  Location     Type
 11170 ;;  multiplier      4    0[COMRAM] unsigned long 
 11171 ;;  multiplicand    4    4[COMRAM] unsigned long 
 11172 ;; Auto vars:     Size  Location     Type
 11173 ;;  product         4    8[COMRAM] unsigned long 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  4    0[COMRAM] unsigned long 
 11176 ;; Registers used:
 11177 ;;		wreg, status,2, status,0
 11178 ;; Tracked objects:
 11179 ;;		On entry : 3B/0
 11180 ;;		On exit  : 3B/0
 11181 ;;		Unchanged: 3B/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11183 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11184 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11186 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11187 ;;Total ram usage:       12 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; This function calls:
 11190 ;;		Nothing
 11191 ;; This function is called by:
 11192 ;;		_setLED
 11193 ;;		_main_loop
 11194 ;; This function uses a non-reentrant model
 11195 ;;
 11196                           
 11197                           	psect	text38
 11198  005FC6                     __ptext38:
 11199                           	opt callstack 0
 11200  005FC6                     ___lmul:
 11201                           	opt callstack 28
 11202                           
 11203                           ;incstack = 0
 11204  005FC6  0E00               	movlw	0
 11205  005FC8  6E09               	movwf	___lmul@product^0,c
 11206  005FCA  0E00               	movlw	0
 11207  005FCC  6E0A               	movwf	(___lmul@product+1)^0,c
 11208  005FCE  0E00               	movlw	0
 11209  005FD0  6E0B               	movwf	(___lmul@product+2)^0,c
 11210  005FD2  0E00               	movlw	0
 11211  005FD4  6E0C               	movwf	(___lmul@product+3)^0,c
 11212  005FD6                     l4918:
 11213  005FD6  A001               	btfss	___lmul@multiplier^0,0,c
 11214  005FD8  D008               	goto	l4922
 11215  005FDA  5005               	movf	___lmul@multiplicand^0,w,c
 11216  005FDC  2609               	addwf	___lmul@product^0,f,c
 11217  005FDE  5006               	movf	(___lmul@multiplicand+1)^0,w,c
 11218  005FE0  220A               	addwfc	(___lmul@product+1)^0,f,c
 11219  005FE2  5007               	movf	(___lmul@multiplicand+2)^0,w,c
 11220  005FE4  220B               	addwfc	(___lmul@product+2)^0,f,c
 11221  005FE6  5008               	movf	(___lmul@multiplicand+3)^0,w,c
 11222  005FE8  220C               	addwfc	(___lmul@product+3)^0,f,c
 11223  005FEA                     l4922:
 11224  005FEA  90D8               	bcf	status,0,c
 11225  005FEC  3605               	rlcf	___lmul@multiplicand^0,f,c
 11226  005FEE  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
 11227  005FF0  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
 11228  005FF2  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
 11229  005FF4  90D8               	bcf	status,0,c
 11230  005FF6  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
 11231  005FF8  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
 11232  005FFA  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
 11233  005FFC  3201               	rrcf	___lmul@multiplier^0,f,c
 11234  005FFE  5001               	movf	___lmul@multiplier^0,w,c
 11235  006000  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
 11236  006002  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
 11237  006004  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
 11238  006006  A4D8               	btfss	status,2,c
 11239  006008  D7E6               	goto	l4918
 11240  00600A  0060  F024  F001   	movff	___lmul@product,?___lmul
 11241  006010  0060  F028  F002   	movff	___lmul@product+1,?___lmul+1
 11242  006016  0060  F02C  F003   	movff	___lmul@product+2,?___lmul+2
 11243  00601C  0060  F030  F004   	movff	___lmul@product+3,?___lmul+3
 11244  006022  0012               	return		;funcret
 11245  006024                     __end_of___lmul:
 11246                           	opt callstack 0
 11247                           
 11248 ;; *************** function ___flge *****************
 11249 ;; Defined at:
 11250 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  ff1             4   80[COMRAM] unsigned long 
 11253 ;;  ff2             4   84[COMRAM] unsigned long 
 11254 ;; Auto vars:     Size  Location     Type
 11255 ;;		None
 11256 ;; Return value:  Size  Location     Type
 11257 ;;		None               void
 11258 ;; Registers used:
 11259 ;;		wreg, status,2, status,0
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11265 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11267 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11268 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11269 ;;Total ram usage:       12 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_setLED
 11275 ;;		_main_loop
 11276 ;;		_efgtoa
 11277 ;; This function uses a non-reentrant model
 11278 ;;
 11279                           
 11280                           	psect	text39
 11281  0055DA                     __ptext39:
 11282                           	opt callstack 0
 11283  0055DA                     ___flge:
 11284                           	opt callstack 25
 11285                           
 11286                           ;incstack = 0
 11287  0055DA  0E00               	movlw	0
 11288  0055DC  1451               	andwf	___flge@ff1^0,w,c
 11289  0055DE  6E59               	movwf	??___flge^0,c
 11290  0055E0  0E00               	movlw	0
 11291  0055E2  1452               	andwf	(___flge@ff1+1)^0,w,c
 11292  0055E4  6E5A               	movwf	(??___flge+1)^0,c
 11293  0055E6  0E80               	movlw	128
 11294  0055E8  1453               	andwf	(___flge@ff1+2)^0,w,c
 11295  0055EA  6E5B               	movwf	(??___flge+2)^0,c
 11296  0055EC  0E7F               	movlw	127
 11297  0055EE  1454               	andwf	(___flge@ff1+3)^0,w,c
 11298  0055F0  6E5C               	movwf	(??___flge+3)^0,c
 11299  0055F2  5059               	movf	??___flge^0,w,c
 11300  0055F4  105A               	iorwf	(??___flge+1)^0,w,c
 11301  0055F6  105B               	iorwf	(??___flge+2)^0,w,c
 11302  0055F8  105C               	iorwf	(??___flge+3)^0,w,c
 11303  0055FA  A4D8               	btfss	status,2,c
 11304  0055FC  D008               	goto	l4264
 11305  0055FE  0E00               	movlw	0
 11306  005600  6E51               	movwf	___flge@ff1^0,c
 11307  005602  0E00               	movlw	0
 11308  005604  6E52               	movwf	(___flge@ff1+1)^0,c
 11309  005606  0E00               	movlw	0
 11310  005608  6E53               	movwf	(___flge@ff1+2)^0,c
 11311  00560A  0E00               	movlw	0
 11312  00560C  6E54               	movwf	(___flge@ff1+3)^0,c
 11313  00560E                     l4264:
 11314  00560E  0E00               	movlw	0
 11315  005610  1455               	andwf	___flge@ff2^0,w,c
 11316  005612  6E59               	movwf	??___flge^0,c
 11317  005614  0E00               	movlw	0
 11318  005616  1456               	andwf	(___flge@ff2+1)^0,w,c
 11319  005618  6E5A               	movwf	(??___flge+1)^0,c
 11320  00561A  0E80               	movlw	128
 11321  00561C  1457               	andwf	(___flge@ff2+2)^0,w,c
 11322  00561E  6E5B               	movwf	(??___flge+2)^0,c
 11323  005620  0E7F               	movlw	127
 11324  005622  1458               	andwf	(___flge@ff2+3)^0,w,c
 11325  005624  6E5C               	movwf	(??___flge+3)^0,c
 11326  005626  5059               	movf	??___flge^0,w,c
 11327  005628  105A               	iorwf	(??___flge+1)^0,w,c
 11328  00562A  105B               	iorwf	(??___flge+2)^0,w,c
 11329  00562C  105C               	iorwf	(??___flge+3)^0,w,c
 11330  00562E  A4D8               	btfss	status,2,c
 11331  005630  D008               	goto	l4268
 11332  005632  0E00               	movlw	0
 11333  005634  6E55               	movwf	___flge@ff2^0,c
 11334  005636  0E00               	movlw	0
 11335  005638  6E56               	movwf	(___flge@ff2+1)^0,c
 11336  00563A  0E00               	movlw	0
 11337  00563C  6E57               	movwf	(___flge@ff2+2)^0,c
 11338  00563E  0E00               	movlw	0
 11339  005640  6E58               	movwf	(___flge@ff2+3)^0,c
 11340  005642                     l4268:
 11341  005642  AE54               	btfss	(___flge@ff1+3)^0,7,c
 11342  005644  D009               	goto	l4272
 11343  005646  6C51               	negf	___flge@ff1^0,c
 11344  005648  1E52               	comf	(___flge@ff1+1)^0,f,c
 11345  00564A  B0D8               	btfsc	status,0,c
 11346  00564C  2A52               	incf	(___flge@ff1+1)^0,f,c
 11347  00564E  1E53               	comf	(___flge@ff1+2)^0,f,c
 11348  005650  B0D8               	btfsc	status,0,c
 11349  005652  2A53               	incf	(___flge@ff1+2)^0,f,c
 11350  005654  0E80               	movlw	128
 11351  005656  5654               	subfwb	(___flge@ff1+3)^0,f,c
 11352  005658                     l4272:
 11353  005658  AE58               	btfss	(___flge@ff2+3)^0,7,c
 11354  00565A  D009               	goto	l981
 11355  00565C  6C55               	negf	___flge@ff2^0,c
 11356  00565E  1E56               	comf	(___flge@ff2+1)^0,f,c
 11357  005660  B0D8               	btfsc	status,0,c
 11358  005662  2A56               	incf	(___flge@ff2+1)^0,f,c
 11359  005664  1E57               	comf	(___flge@ff2+2)^0,f,c
 11360  005666  B0D8               	btfsc	status,0,c
 11361  005668  2A57               	incf	(___flge@ff2+2)^0,f,c
 11362  00566A  0E80               	movlw	128
 11363  00566C  5658               	subfwb	(___flge@ff2+3)^0,f,c
 11364  00566E                     l981:
 11365  00566E  0E00               	movlw	0
 11366  005670  1A51               	xorwf	___flge@ff1^0,f,c
 11367  005672  0E00               	movlw	0
 11368  005674  1A52               	xorwf	(___flge@ff1+1)^0,f,c
 11369  005676  0E00               	movlw	0
 11370  005678  1A53               	xorwf	(___flge@ff1+2)^0,f,c
 11371  00567A  0E80               	movlw	128
 11372  00567C  1A54               	xorwf	(___flge@ff1+3)^0,f,c
 11373  00567E  0E00               	movlw	0
 11374  005680  1A55               	xorwf	___flge@ff2^0,f,c
 11375  005682  0E00               	movlw	0
 11376  005684  1A56               	xorwf	(___flge@ff2+1)^0,f,c
 11377  005686  0E00               	movlw	0
 11378  005688  1A57               	xorwf	(___flge@ff2+2)^0,f,c
 11379  00568A  0E80               	movlw	128
 11380  00568C  1A58               	xorwf	(___flge@ff2+3)^0,f,c
 11381  00568E  5055               	movf	___flge@ff2^0,w,c
 11382  005690  5C51               	subwf	___flge@ff1^0,w,c
 11383  005692  5056               	movf	(___flge@ff2+1)^0,w,c
 11384  005694  5852               	subwfb	(___flge@ff1+1)^0,w,c
 11385  005696  5057               	movf	(___flge@ff2+2)^0,w,c
 11386  005698  5853               	subwfb	(___flge@ff1+2)^0,w,c
 11387  00569A  5058               	movf	(___flge@ff2+3)^0,w,c
 11388  00569C  5854               	subwfb	(___flge@ff1+3)^0,w,c
 11389  00569E  B0D8               	btfsc	status,0,c
 11390  0056A0  D002               	goto	l4278
 11391  0056A2  90D8               	bcf	status,0,c
 11392  0056A4  0012               	return	
 11393  0056A6                     l4278:
 11394  0056A6  80D8               	bsf	status,0,c
 11395  0056A8  0012               	return		;funcret
 11396  0056AA                     __end_of___flge:
 11397                           	opt callstack 0
 11398                           
 11399 ;; *************** function ___almod *****************
 11400 ;; Defined at:
 11401 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\almod.c"
 11402 ;; Parameters:    Size  Location     Type
 11403 ;;  dividend        4    0[COMRAM] long 
 11404 ;;  divisor         4    4[COMRAM] long 
 11405 ;; Auto vars:     Size  Location     Type
 11406 ;;  sign            1    9[COMRAM] unsigned char 
 11407 ;;  counter         1    8[COMRAM] unsigned char 
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  4    0[COMRAM] long 
 11410 ;; Registers used:
 11411 ;;		wreg, status,2, status,0
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11417 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11418 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11420 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11421 ;;Total ram usage:       10 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; This function calls:
 11424 ;;		Nothing
 11425 ;; This function is called by:
 11426 ;;		_setLED
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text40
 11431  005774                     __ptext40:
 11432                           	opt callstack 0
 11433  005774                     ___almod:
 11434                           	opt callstack 28
 11435                           
 11436                           ;incstack = 0
 11437  005774  0E00               	movlw	0
 11438  005776  6E0A               	movwf	___almod@sign^0,c
 11439  005778  AE04               	btfss	(___almod@dividend+3)^0,7,c
 11440  00577A  D00A               	goto	l4978
 11441  00577C  1E04               	comf	(___almod@dividend+3)^0,f,c
 11442  00577E  1E03               	comf	(___almod@dividend+2)^0,f,c
 11443  005780  1E02               	comf	(___almod@dividend+1)^0,f,c
 11444  005782  6C01               	negf	___almod@dividend^0,c
 11445  005784  0E00               	movlw	0
 11446  005786  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11447  005788  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11448  00578A  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11449  00578C  0E01               	movlw	1
 11450  00578E  6E0A               	movwf	___almod@sign^0,c
 11451  005790                     l4978:
 11452  005790  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11453  005792  D008               	goto	l4982
 11454  005794  1E08               	comf	(___almod@divisor+3)^0,f,c
 11455  005796  1E07               	comf	(___almod@divisor+2)^0,f,c
 11456  005798  1E06               	comf	(___almod@divisor+1)^0,f,c
 11457  00579A  6C05               	negf	___almod@divisor^0,c
 11458  00579C  0E00               	movlw	0
 11459  00579E  2206               	addwfc	(___almod@divisor+1)^0,f,c
 11460  0057A0  2207               	addwfc	(___almod@divisor+2)^0,f,c
 11461  0057A2  2208               	addwfc	(___almod@divisor+3)^0,f,c
 11462  0057A4                     l4982:
 11463  0057A4  5005               	movf	___almod@divisor^0,w,c
 11464  0057A6  1006               	iorwf	(___almod@divisor+1)^0,w,c
 11465  0057A8  1007               	iorwf	(___almod@divisor+2)^0,w,c
 11466  0057AA  1008               	iorwf	(___almod@divisor+3)^0,w,c
 11467  0057AC  B4D8               	btfsc	status,2,c
 11468  0057AE  D024               	goto	l4998
 11469  0057B0  0E01               	movlw	1
 11470  0057B2  6E09               	movwf	___almod@counter^0,c
 11471  0057B4  D006               	goto	l4988
 11472  0057B6                     l4986:
 11473  0057B6  90D8               	bcf	status,0,c
 11474  0057B8  3605               	rlcf	___almod@divisor^0,f,c
 11475  0057BA  3606               	rlcf	(___almod@divisor+1)^0,f,c
 11476  0057BC  3607               	rlcf	(___almod@divisor+2)^0,f,c
 11477  0057BE  3608               	rlcf	(___almod@divisor+3)^0,f,c
 11478  0057C0  2A09               	incf	___almod@counter^0,f,c
 11479  0057C2                     l4988:
 11480  0057C2  AE08               	btfss	(___almod@divisor+3)^0,7,c
 11481  0057C4  D7F8               	goto	l4986
 11482  0057C6                     u6150:
 11483  0057C6  5005               	movf	___almod@divisor^0,w,c
 11484  0057C8  5C01               	subwf	___almod@dividend^0,w,c
 11485  0057CA  5006               	movf	(___almod@divisor+1)^0,w,c
 11486  0057CC  5802               	subwfb	(___almod@dividend+1)^0,w,c
 11487  0057CE  5007               	movf	(___almod@divisor+2)^0,w,c
 11488  0057D0  5803               	subwfb	(___almod@dividend+2)^0,w,c
 11489  0057D2  5008               	movf	(___almod@divisor+3)^0,w,c
 11490  0057D4  5804               	subwfb	(___almod@dividend+3)^0,w,c
 11491  0057D6  A0D8               	btfss	status,0,c
 11492  0057D8  D008               	goto	l4994
 11493  0057DA  5005               	movf	___almod@divisor^0,w,c
 11494  0057DC  5E01               	subwf	___almod@dividend^0,f,c
 11495  0057DE  5006               	movf	(___almod@divisor+1)^0,w,c
 11496  0057E0  5A02               	subwfb	(___almod@dividend+1)^0,f,c
 11497  0057E2  5007               	movf	(___almod@divisor+2)^0,w,c
 11498  0057E4  5A03               	subwfb	(___almod@dividend+2)^0,f,c
 11499  0057E6  5008               	movf	(___almod@divisor+3)^0,w,c
 11500  0057E8  5A04               	subwfb	(___almod@dividend+3)^0,f,c
 11501  0057EA                     l4994:
 11502  0057EA  90D8               	bcf	status,0,c
 11503  0057EC  3208               	rrcf	(___almod@divisor+3)^0,f,c
 11504  0057EE  3207               	rrcf	(___almod@divisor+2)^0,f,c
 11505  0057F0  3206               	rrcf	(___almod@divisor+1)^0,f,c
 11506  0057F2  3205               	rrcf	___almod@divisor^0,f,c
 11507  0057F4  2E09               	decfsz	___almod@counter^0,f,c
 11508  0057F6  D7E7               	goto	u6150
 11509  0057F8                     l4998:
 11510  0057F8  500A               	movf	___almod@sign^0,w,c
 11511  0057FA  B4D8               	btfsc	status,2,c
 11512  0057FC  D008               	goto	l5002
 11513  0057FE  1E04               	comf	(___almod@dividend+3)^0,f,c
 11514  005800  1E03               	comf	(___almod@dividend+2)^0,f,c
 11515  005802  1E02               	comf	(___almod@dividend+1)^0,f,c
 11516  005804  6C01               	negf	___almod@dividend^0,c
 11517  005806  0E00               	movlw	0
 11518  005808  2202               	addwfc	(___almod@dividend+1)^0,f,c
 11519  00580A  2203               	addwfc	(___almod@dividend+2)^0,f,c
 11520  00580C  2204               	addwfc	(___almod@dividend+3)^0,f,c
 11521  00580E                     l5002:
 11522  00580E  0060  F004  F001   	movff	___almod@dividend,?___almod
 11523  005814  0060  F008  F002   	movff	___almod@dividend+1,?___almod+1
 11524  00581A  0060  F00C  F003   	movff	___almod@dividend+2,?___almod+2
 11525  005820  0060  F010  F004   	movff	___almod@dividend+3,?___almod+3
 11526  005826  0012               	return		;funcret
 11527  005828                     __end_of___almod:
 11528                           	opt callstack 0
 11529                           
 11530 ;; *************** function ___aldiv *****************
 11531 ;; Defined at:
 11532 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\aldiv.c"
 11533 ;; Parameters:    Size  Location     Type
 11534 ;;  dividend        4   12[COMRAM] long 
 11535 ;;  divisor         4   16[COMRAM] long 
 11536 ;; Auto vars:     Size  Location     Type
 11537 ;;  quotient        4   22[COMRAM] long 
 11538 ;;  sign            1   21[COMRAM] unsigned char 
 11539 ;;  counter         1   20[COMRAM] unsigned char 
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  4   12[COMRAM] long 
 11542 ;; Registers used:
 11543 ;;		wreg, status,2, status,0
 11544 ;; Tracked objects:
 11545 ;;		On entry : 3B/4
 11546 ;;		On exit  : 3B/0
 11547 ;;		Unchanged: 3B/0
 11548 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11549 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11550 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11552 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11553 ;;Total ram usage:       14 bytes
 11554 ;; Hardware stack levels used:    1
 11555 ;; This function calls:
 11556 ;;		Nothing
 11557 ;; This function is called by:
 11558 ;;		_updateButtonLight
 11559 ;;		_setLED
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           	psect	text41
 11564  005506                     __ptext41:
 11565                           	opt callstack 0
 11566  005506                     ___aldiv:
 11567                           	opt callstack 28
 11568                           
 11569                           ;incstack = 0
 11570  005506  0E00               	movlw	0
 11571  005508  6E16               	movwf	___aldiv@sign^0,c
 11572  00550A  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11573  00550C  D00A               	goto	l4934
 11574  00550E  1E14               	comf	(___aldiv@divisor+3)^0,f,c
 11575  005510  1E13               	comf	(___aldiv@divisor+2)^0,f,c
 11576  005512  1E12               	comf	(___aldiv@divisor+1)^0,f,c
 11577  005514  6C11               	negf	___aldiv@divisor^0,c
 11578  005516  0E00               	movlw	0
 11579  005518  2212               	addwfc	(___aldiv@divisor+1)^0,f,c
 11580  00551A  2213               	addwfc	(___aldiv@divisor+2)^0,f,c
 11581  00551C  2214               	addwfc	(___aldiv@divisor+3)^0,f,c
 11582  00551E  0E01               	movlw	1
 11583  005520  6E16               	movwf	___aldiv@sign^0,c
 11584  005522                     l4934:
 11585  005522  AE10               	btfss	(___aldiv@dividend+3)^0,7,c
 11586  005524  D00A               	goto	l4940
 11587  005526  1E10               	comf	(___aldiv@dividend+3)^0,f,c
 11588  005528  1E0F               	comf	(___aldiv@dividend+2)^0,f,c
 11589  00552A  1E0E               	comf	(___aldiv@dividend+1)^0,f,c
 11590  00552C  6C0D               	negf	___aldiv@dividend^0,c
 11591  00552E  0E00               	movlw	0
 11592  005530  220E               	addwfc	(___aldiv@dividend+1)^0,f,c
 11593  005532  220F               	addwfc	(___aldiv@dividend+2)^0,f,c
 11594  005534  2210               	addwfc	(___aldiv@dividend+3)^0,f,c
 11595  005536  0E01               	movlw	1
 11596  005538  1A16               	xorwf	___aldiv@sign^0,f,c
 11597  00553A                     l4940:
 11598  00553A  0E00               	movlw	0
 11599  00553C  6E17               	movwf	___aldiv@quotient^0,c
 11600  00553E  0E00               	movlw	0
 11601  005540  6E18               	movwf	(___aldiv@quotient+1)^0,c
 11602  005542  0E00               	movlw	0
 11603  005544  6E19               	movwf	(___aldiv@quotient+2)^0,c
 11604  005546  0E00               	movlw	0
 11605  005548  6E1A               	movwf	(___aldiv@quotient+3)^0,c
 11606  00554A  5011               	movf	___aldiv@divisor^0,w,c
 11607  00554C  1012               	iorwf	(___aldiv@divisor+1)^0,w,c
 11608  00554E  1013               	iorwf	(___aldiv@divisor+2)^0,w,c
 11609  005550  1014               	iorwf	(___aldiv@divisor+3)^0,w,c
 11610  005552  B4D8               	btfsc	status,2,c
 11611  005554  D02A               	goto	l4962
 11612  005556  0E01               	movlw	1
 11613  005558  6E15               	movwf	___aldiv@counter^0,c
 11614  00555A  D006               	goto	l4948
 11615  00555C                     l4946:
 11616  00555C  90D8               	bcf	status,0,c
 11617  00555E  3611               	rlcf	___aldiv@divisor^0,f,c
 11618  005560  3612               	rlcf	(___aldiv@divisor+1)^0,f,c
 11619  005562  3613               	rlcf	(___aldiv@divisor+2)^0,f,c
 11620  005564  3614               	rlcf	(___aldiv@divisor+3)^0,f,c
 11621  005566  2A15               	incf	___aldiv@counter^0,f,c
 11622  005568                     l4948:
 11623  005568  AE14               	btfss	(___aldiv@divisor+3)^0,7,c
 11624  00556A  D7F8               	goto	l4946
 11625  00556C                     u6090:
 11626  00556C  90D8               	bcf	status,0,c
 11627  00556E  3617               	rlcf	___aldiv@quotient^0,f,c
 11628  005570  3618               	rlcf	(___aldiv@quotient+1)^0,f,c
 11629  005572  3619               	rlcf	(___aldiv@quotient+2)^0,f,c
 11630  005574  361A               	rlcf	(___aldiv@quotient+3)^0,f,c
 11631  005576  5011               	movf	___aldiv@divisor^0,w,c
 11632  005578  5C0D               	subwf	___aldiv@dividend^0,w,c
 11633  00557A  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11634  00557C  580E               	subwfb	(___aldiv@dividend+1)^0,w,c
 11635  00557E  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11636  005580  580F               	subwfb	(___aldiv@dividend+2)^0,w,c
 11637  005582  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11638  005584  5810               	subwfb	(___aldiv@dividend+3)^0,w,c
 11639  005586  A0D8               	btfss	status,0,c
 11640  005588  D009               	goto	l4958
 11641  00558A  5011               	movf	___aldiv@divisor^0,w,c
 11642  00558C  5E0D               	subwf	___aldiv@dividend^0,f,c
 11643  00558E  5012               	movf	(___aldiv@divisor+1)^0,w,c
 11644  005590  5A0E               	subwfb	(___aldiv@dividend+1)^0,f,c
 11645  005592  5013               	movf	(___aldiv@divisor+2)^0,w,c
 11646  005594  5A0F               	subwfb	(___aldiv@dividend+2)^0,f,c
 11647  005596  5014               	movf	(___aldiv@divisor+3)^0,w,c
 11648  005598  5A10               	subwfb	(___aldiv@dividend+3)^0,f,c
 11649  00559A  8017               	bsf	___aldiv@quotient^0,0,c
 11650  00559C                     l4958:
 11651  00559C  90D8               	bcf	status,0,c
 11652  00559E  3214               	rrcf	(___aldiv@divisor+3)^0,f,c
 11653  0055A0  3213               	rrcf	(___aldiv@divisor+2)^0,f,c
 11654  0055A2  3212               	rrcf	(___aldiv@divisor+1)^0,f,c
 11655  0055A4  3211               	rrcf	___aldiv@divisor^0,f,c
 11656  0055A6  2E15               	decfsz	___aldiv@counter^0,f,c
 11657  0055A8  D7E1               	goto	u6090
 11658  0055AA                     l4962:
 11659  0055AA  5016               	movf	___aldiv@sign^0,w,c
 11660  0055AC  B4D8               	btfsc	status,2,c
 11661  0055AE  D008               	goto	l4966
 11662  0055B0  1E1A               	comf	(___aldiv@quotient+3)^0,f,c
 11663  0055B2  1E19               	comf	(___aldiv@quotient+2)^0,f,c
 11664  0055B4  1E18               	comf	(___aldiv@quotient+1)^0,f,c
 11665  0055B6  6C17               	negf	___aldiv@quotient^0,c
 11666  0055B8  0E00               	movlw	0
 11667  0055BA  2218               	addwfc	(___aldiv@quotient+1)^0,f,c
 11668  0055BC  2219               	addwfc	(___aldiv@quotient+2)^0,f,c
 11669  0055BE  221A               	addwfc	(___aldiv@quotient+3)^0,f,c
 11670  0055C0                     l4966:
 11671  0055C0  0060  F05C  F00D   	movff	___aldiv@quotient,?___aldiv
 11672  0055C6  0060  F060  F00E   	movff	___aldiv@quotient+1,?___aldiv+1
 11673  0055CC  0060  F064  F00F   	movff	___aldiv@quotient+2,?___aldiv+2
 11674  0055D2  0060  F068  F010   	movff	___aldiv@quotient+3,?___aldiv+3
 11675  0055D8  0012               	return		;funcret
 11676  0055DA                     __end_of___aldiv:
 11677                           	opt callstack 0
 11678                           
 11679 ;; *************** function _lcd_set_data_addr *****************
 11680 ;; Defined at:
 11681 ;;		line 39 in file "char_lcd.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  addr            1    wreg     unsigned char 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  addr            1    4[COMRAM] unsigned char 
 11686 ;; Return value:  Size  Location     Type
 11687 ;;                  1    wreg      void 
 11688 ;; Registers used:
 11689 ;;		wreg, status,2, status,0, cstack
 11690 ;; Tracked objects:
 11691 ;;		On entry : 4/3B
 11692 ;;		On exit  : 0/0
 11693 ;;		Unchanged: 0/0
 11694 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11696 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11698 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11699 ;;Total ram usage:        1 bytes
 11700 ;; Hardware stack levels used:    1
 11701 ;; Hardware stack levels required when called:    1
 11702 ;; This function calls:
 11703 ;;		_lcd_write
 11704 ;; This function is called by:
 11705 ;;		_main_loop
 11706 ;; This function uses a non-reentrant model
 11707 ;;
 11708                           
 11709                           	psect	text42
 11710  00630A                     __ptext42:
 11711                           	opt callstack 0
 11712  00630A                     _lcd_set_data_addr:
 11713                           	opt callstack 28
 11714                           
 11715                           ;incstack = 0
 11716                           ;lcd_set_data_addr@addr stored from wreg
 11717  00630A  6E05               	movwf	lcd_set_data_addr@addr^0,c
 11718                           
 11719                           ;char_lcd.c: 40:     lcd_write(0, 0b10000000 | (addr & 0b01111111), 0);
 11720  00630C  5005               	movf	lcd_set_data_addr@addr^0,w,c
 11721  00630E  0B7F               	andlw	127
 11722  006310  0980               	iorlw	128
 11723  006312  6E01               	movwf	lcd_write@data^0,c
 11724  006314  0E00               	movlw	0
 11725  006316  6E02               	movwf	lcd_write@longdelay^0,c
 11726  006318  0E00               	movlw	0
 11727  00631A  EC67  F030         	call	_lcd_write
 11728  00631E  0012               	return		;funcret
 11729  006320                     __end_of_lcd_set_data_addr:
 11730                           	opt callstack 0
 11731                           
 11732 ;; *************** function _lcd_print *****************
 11733 ;; Defined at:
 11734 ;;		line 54 in file "char_lcd.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;  string          2    4[COMRAM] PTR unsigned char 
 11737 ;;		 -> STR_11(13), main_loop@batmsg(17), STR_5(17), STR_4(17), 
 11738 ;;		 -> STR_3(17), STR_2(17), STR_1(17), 
 11739 ;; Auto vars:     Size  Location     Type
 11740 ;;  i               1    8[COMRAM] unsigned char 
 11741 ;; Return value:  Size  Location     Type
 11742 ;;                  1    wreg      void 
 11743 ;; Registers used:
 11744 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11745 ;; Tracked objects:
 11746 ;;		On entry : 0/3F
 11747 ;;		On exit  : 0/0
 11748 ;;		Unchanged: 0/0
 11749 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11750 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11751 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11752 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11753 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11754 ;;Total ram usage:        5 bytes
 11755 ;; Hardware stack levels used:    1
 11756 ;; Hardware stack levels required when called:    1
 11757 ;; This function calls:
 11758 ;;		_lcd_write
 11759 ;; This function is called by:
 11760 ;;		_main_loop
 11761 ;;		_main
 11762 ;; This function uses a non-reentrant model
 11763 ;;
 11764                           
 11765                           	psect	text43
 11766  005A0E                     __ptext43:
 11767                           	opt callstack 0
 11768  005A0E                     _lcd_print:
 11769                           	opt callstack 28
 11770                           
 11771                           ;char_lcd.c: 55:     uint8_t i = 0;
 11772                           
 11773                           ;incstack = 0
 11774  005A0E  0E00               	movlw	0
 11775  005A10  6E09               	movwf	lcd_print@i^0,c
 11776                           
 11777                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 11778  005A12  D022               	goto	l5142
 11779  005A14                     l5138:
 11780                           
 11781                           ;char_lcd.c: 57:         lcd_write(1, string[i++], 0);
 11782  005A14  5009               	movf	lcd_print@i^0,w,c
 11783  005A16  2405               	addwf	lcd_print@string^0,w,c
 11784  005A18  6E07               	movwf	??_lcd_print^0,c
 11785  005A1A  0E00               	movlw	0
 11786  005A1C  2006               	addwfc	(lcd_print@string+1)^0,w,c
 11787  005A1E  6E08               	movwf	(??_lcd_print+1)^0,c
 11788  005A20  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 11789  005A26  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 11790  005A2C  0E00               	movlw	low (__smallconst shr (0+16))
 11791  005A2E  6EF8               	movwf	tblptru,c
 11792  005A30  0E1F               	movlw	(high __ramtop+-1)
 11793  005A32  64F7               	cpfsgt	tblptrh,c
 11794  005A34  D003               	bra	u6387
 11795  005A36  0008               	tblrd		*
 11796  005A38  50F5               	movf	tablat,w,c
 11797  005A3A  D007               	bra	u6380
 11798  005A3C                     u6387:
 11799  005A3C  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11800  005A42  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11801  005A48  50E7               	movf	indf1,w,c
 11802  005A4A                     u6380:
 11803  005A4A  6E01               	movwf	lcd_write@data^0,c
 11804  005A4C  0E00               	movlw	0
 11805  005A4E  6E02               	movwf	lcd_write@longdelay^0,c
 11806  005A50  0E01               	movlw	1
 11807  005A52  EC67  F030         	call	_lcd_write
 11808  005A56  2A09               	incf	lcd_print@i^0,f,c
 11809  005A58                     l5142:
 11810                           
 11811                           ;char_lcd.c: 56:     while (string[i] != 0 && i < 255) {
 11812  005A58  5009               	movf	lcd_print@i^0,w,c
 11813  005A5A  2405               	addwf	lcd_print@string^0,w,c
 11814  005A5C  6E07               	movwf	??_lcd_print^0,c
 11815  005A5E  0E00               	movlw	0
 11816  005A60  2006               	addwfc	(lcd_print@string+1)^0,w,c
 11817  005A62  6E08               	movwf	(??_lcd_print+1)^0,c
 11818  005A64  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 11819  005A6A  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 11820  005A70  0E00               	movlw	low (__smallconst shr (0+16))
 11821  005A72  6EF8               	movwf	tblptru,c
 11822  005A74  0E1F               	movlw	(high __ramtop+-1)
 11823  005A76  64F7               	cpfsgt	tblptrh,c
 11824  005A78  D003               	bra	u6397
 11825  005A7A  0008               	tblrd		*
 11826  005A7C  50F5               	movf	tablat,w,c
 11827  005A7E  D007               	bra	u6390
 11828  005A80                     u6397:
 11829  005A80  006F FFDB FFE1     	movff	tblptrl,fsr1l
 11830  005A86  006F FFDF FFE2     	movff	tblptrh,fsr1h
 11831  005A8C  50E7               	movf	indf1,w,c
 11832  005A8E                     u6390:
 11833  005A8E  0900               	iorlw	0
 11834  005A90  B4D8               	btfsc	status,2,c
 11835  005A92  0012               	return	
 11836  005A94  2809               	incf	lcd_print@i^0,w,c
 11837  005A96  B4D8               	btfsc	status,2,c
 11838  005A98  0012               	return	
 11839  005A9A  D7BC               	goto	l5138
 11840  005A9C                     __end_of_lcd_print:
 11841                           	opt callstack 0
 11842                           
 11843 ;; *************** function ___xxtofl *****************
 11844 ;; Defined at:
 11845 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;  sign            1    wreg     unsigned char 
 11848 ;;  val             4    0[COMRAM] long 
 11849 ;; Auto vars:     Size  Location     Type
 11850 ;;  sign            1    8[COMRAM] unsigned char 
 11851 ;;  arg             4   10[COMRAM] unsigned long 
 11852 ;;  exp             1    9[COMRAM] unsigned char 
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  4    0[COMRAM] unsigned char 
 11855 ;; Registers used:
 11856 ;;		wreg, status,2, status,0
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 11862 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11863 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11864 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11865 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11866 ;;Total ram usage:       14 bytes
 11867 ;; Hardware stack levels used:    1
 11868 ;; This function calls:
 11869 ;;		Nothing
 11870 ;; This function is called by:
 11871 ;;		_main_loop
 11872 ;; This function uses a non-reentrant model
 11873 ;;
 11874                           
 11875                           	psect	text44
 11876  0050CA                     __ptext44:
 11877                           	opt callstack 0
 11878  0050CA                     ___xxtofl:
 11879                           	opt callstack 29
 11880                           
 11881                           ;incstack = 0
 11882                           ;___xxtofl@sign stored from wreg
 11883  0050CA  6E09               	movwf	___xxtofl@sign^0,c
 11884  0050CC  5009               	movf	___xxtofl@sign^0,w,c
 11885  0050CE  A4D8               	btfss	status,2,c
 11886  0050D0  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 11887  0050D2  D022               	goto	l1371
 11888  0050D4  0060  F004  F005   	movff	___xxtofl@val,??___xxtofl
 11889  0050DA  0060  F008  F006   	movff	___xxtofl@val+1,??___xxtofl+1
 11890  0050E0  0060  F00C  F007   	movff	___xxtofl@val+2,??___xxtofl+2
 11891  0050E6  0060  F010  F008   	movff	___xxtofl@val+3,??___xxtofl+3
 11892  0050EC  1E05               	comf	??___xxtofl^0,f,c
 11893  0050EE  1E06               	comf	(??___xxtofl+1)^0,f,c
 11894  0050F0  1E07               	comf	(??___xxtofl+2)^0,f,c
 11895  0050F2  1E08               	comf	(??___xxtofl+3)^0,f,c
 11896  0050F4  2A05               	incf	??___xxtofl^0,f,c
 11897  0050F6  0E00               	movlw	0
 11898  0050F8  2206               	addwfc	(??___xxtofl+1)^0,f,c
 11899  0050FA  2207               	addwfc	(??___xxtofl+2)^0,f,c
 11900  0050FC  2208               	addwfc	(??___xxtofl+3)^0,f,c
 11901  0050FE  0060  F014  F00B   	movff	??___xxtofl,___xxtofl@arg
 11902  005104  0060  F018  F00C   	movff	??___xxtofl+1,___xxtofl@arg+1
 11903  00510A  0060  F01C  F00D   	movff	??___xxtofl+2,___xxtofl@arg+2
 11904  005110  0060  F020  F00E   	movff	??___xxtofl+3,___xxtofl@arg+3
 11905  005116  D00C               	goto	l5288
 11906  005118                     l1371:
 11907  005118  0060  F004  F00B   	movff	___xxtofl@val,___xxtofl@arg
 11908  00511E  0060  F008  F00C   	movff	___xxtofl@val+1,___xxtofl@arg+1
 11909  005124  0060  F00C  F00D   	movff	___xxtofl@val+2,___xxtofl@arg+2
 11910  00512A  0060  F010  F00E   	movff	___xxtofl@val+3,___xxtofl@arg+3
 11911  005130                     l5288:
 11912  005130  5001               	movf	___xxtofl@val^0,w,c
 11913  005132  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 11914  005134  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 11915  005136  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 11916  005138  A4D8               	btfss	status,2,c
 11917  00513A  D009               	goto	l5294
 11918  00513C  0E00               	movlw	0
 11919  00513E  6E01               	movwf	?___xxtofl^0,c
 11920  005140  0E00               	movlw	0
 11921  005142  6E02               	movwf	(?___xxtofl+1)^0,c
 11922  005144  0E00               	movlw	0
 11923  005146  6E03               	movwf	(?___xxtofl+2)^0,c
 11924  005148  0E00               	movlw	0
 11925  00514A  6E04               	movwf	(?___xxtofl+3)^0,c
 11926  00514C  0012               	return	
 11927  00514E                     l5294:
 11928  00514E  0E96               	movlw	150
 11929  005150  6E0A               	movwf	___xxtofl@exp^0,c
 11930  005152  D006               	goto	l5298
 11931  005154                     l5296:
 11932  005154  2A0A               	incf	___xxtofl@exp^0,f,c
 11933  005156  90D8               	bcf	status,0,c
 11934  005158  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11935  00515A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11936  00515C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11937  00515E  320B               	rrcf	___xxtofl@arg^0,f,c
 11938  005160                     l5298:
 11939  005160  0E00               	movlw	0
 11940  005162  140B               	andwf	___xxtofl@arg^0,w,c
 11941  005164  6E05               	movwf	??___xxtofl^0,c
 11942  005166  0E00               	movlw	0
 11943  005168  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11944  00516A  6E06               	movwf	(??___xxtofl+1)^0,c
 11945  00516C  0E00               	movlw	0
 11946  00516E  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11947  005170  6E07               	movwf	(??___xxtofl+2)^0,c
 11948  005172  0EFE               	movlw	254
 11949  005174  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11950  005176  6E08               	movwf	(??___xxtofl+3)^0,c
 11951  005178  5005               	movf	??___xxtofl^0,w,c
 11952  00517A  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11953  00517C  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11954  00517E  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11955  005180  B4D8               	btfsc	status,2,c
 11956  005182  D00D               	goto	l1378
 11957  005184  D7E7               	goto	l5296
 11958  005186                     l5300:
 11959  005186  2A0A               	incf	___xxtofl@exp^0,f,c
 11960  005188  0E01               	movlw	1
 11961  00518A  260B               	addwf	___xxtofl@arg^0,f,c
 11962  00518C  0E00               	movlw	0
 11963  00518E  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 11964  005190  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 11965  005192  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 11966  005194  90D8               	bcf	status,0,c
 11967  005196  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 11968  005198  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 11969  00519A  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 11970  00519C  320B               	rrcf	___xxtofl@arg^0,f,c
 11971  00519E                     l1378:
 11972  00519E  0E00               	movlw	0
 11973  0051A0  140B               	andwf	___xxtofl@arg^0,w,c
 11974  0051A2  6E05               	movwf	??___xxtofl^0,c
 11975  0051A4  0E00               	movlw	0
 11976  0051A6  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 11977  0051A8  6E06               	movwf	(??___xxtofl+1)^0,c
 11978  0051AA  0E00               	movlw	0
 11979  0051AC  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 11980  0051AE  6E07               	movwf	(??___xxtofl+2)^0,c
 11981  0051B0  0EFF               	movlw	255
 11982  0051B2  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 11983  0051B4  6E08               	movwf	(??___xxtofl+3)^0,c
 11984  0051B6  5005               	movf	??___xxtofl^0,w,c
 11985  0051B8  1006               	iorwf	(??___xxtofl+1)^0,w,c
 11986  0051BA  1007               	iorwf	(??___xxtofl+2)^0,w,c
 11987  0051BC  1008               	iorwf	(??___xxtofl+3)^0,w,c
 11988  0051BE  B4D8               	btfsc	status,2,c
 11989  0051C0  D007               	goto	l5308
 11990  0051C2  D7E1               	goto	l5300
 11991  0051C4                     l5306:
 11992  0051C4  060A               	decf	___xxtofl@exp^0,f,c
 11993  0051C6  90D8               	bcf	status,0,c
 11994  0051C8  360B               	rlcf	___xxtofl@arg^0,f,c
 11995  0051CA  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 11996  0051CC  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 11997  0051CE  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 11998  0051D0                     l5308:
 11999  0051D0  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 12000  0051D2  D003               	goto	u6670
 12001  0051D4  0E02               	movlw	2
 12002  0051D6  600A               	cpfslt	___xxtofl@exp^0,c
 12003  0051D8  D7F5               	goto	l5306
 12004  0051DA                     u6670:
 12005  0051DA  A00A               	btfss	___xxtofl@exp^0,0,c
 12006  0051DC  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 12007  0051DE  90D8               	bcf	status,0,c
 12008  0051E0  320A               	rrcf	___xxtofl@exp^0,f,c
 12009  0051E2  0060  F028  F005   	movff	___xxtofl@exp,??___xxtofl
 12010  0051E8  6A06               	clrf	(??___xxtofl+1)^0,c
 12011  0051EA  6A07               	clrf	(??___xxtofl+2)^0,c
 12012  0051EC  6A08               	clrf	(??___xxtofl+3)^0,c
 12013  0051EE  0060  F014  F008   	movff	??___xxtofl,??___xxtofl+3
 12014  0051F4  6A07               	clrf	(??___xxtofl+2)^0,c
 12015  0051F6  6A06               	clrf	(??___xxtofl+1)^0,c
 12016  0051F8  6A05               	clrf	??___xxtofl^0,c
 12017  0051FA  5005               	movf	??___xxtofl^0,w,c
 12018  0051FC  120B               	iorwf	___xxtofl@arg^0,f,c
 12019  0051FE  5006               	movf	(??___xxtofl+1)^0,w,c
 12020  005200  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 12021  005202  5007               	movf	(??___xxtofl+2)^0,w,c
 12022  005204  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 12023  005206  5008               	movf	(??___xxtofl+3)^0,w,c
 12024  005208  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 12025  00520A  5009               	movf	___xxtofl@sign^0,w,c
 12026  00520C  A4D8               	btfss	status,2,c
 12027  00520E  AE04               	btfss	(___xxtofl@val+3)^0,7,c
 12028  005210  D001               	goto	l5324
 12029  005212  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 12030  005214                     l5324:
 12031  005214  0060  F02C  F001   	movff	___xxtofl@arg,?___xxtofl
 12032  00521A  0060  F030  F002   	movff	___xxtofl@arg+1,?___xxtofl+1
 12033  005220  0060  F034  F003   	movff	___xxtofl@arg+2,?___xxtofl+2
 12034  005226  0060  F038  F004   	movff	___xxtofl@arg+3,?___xxtofl+3
 12035  00522C  0012               	return		;funcret
 12036  00522E                     __end_of___xxtofl:
 12037                           	opt callstack 0
 12038                           
 12039 ;; *************** function ___llmod *****************
 12040 ;; Defined at:
 12041 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 12042 ;; Parameters:    Size  Location     Type
 12043 ;;  dividend        4   13[COMRAM] unsigned long 
 12044 ;;  divisor         4   17[COMRAM] unsigned long 
 12045 ;; Auto vars:     Size  Location     Type
 12046 ;;  counter         1   21[COMRAM] unsigned char 
 12047 ;; Return value:  Size  Location     Type
 12048 ;;                  4   13[COMRAM] unsigned long 
 12049 ;; Registers used:
 12050 ;;		wreg, status,2, status,0
 12051 ;; Tracked objects:
 12052 ;;		On entry : 0/4
 12053 ;;		On exit  : 0/0
 12054 ;;		Unchanged: 0/0
 12055 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12056 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12059 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12060 ;;Total ram usage:        9 bytes
 12061 ;; Hardware stack levels used:    1
 12062 ;; This function calls:
 12063 ;;		Nothing
 12064 ;; This function is called by:
 12065 ;;		_main_loop
 12066 ;; This function uses a non-reentrant model
 12067 ;;
 12068                           
 12069                           	psect	text45
 12070  005E92                     __ptext45:
 12071                           	opt callstack 0
 12072  005E92                     ___llmod:
 12073                           	opt callstack 29
 12074                           
 12075                           ;incstack = 0
 12076  005E92  5012               	movf	___llmod@divisor^0,w,c
 12077  005E94  1013               	iorwf	(___llmod@divisor+1)^0,w,c
 12078  005E96  1014               	iorwf	(___llmod@divisor+2)^0,w,c
 12079  005E98  1015               	iorwf	(___llmod@divisor+3)^0,w,c
 12080  005E9A  B4D8               	btfsc	status,2,c
 12081  005E9C  D024               	goto	l1136
 12082  005E9E  0E01               	movlw	1
 12083  005EA0  6E16               	movwf	___llmod@counter^0,c
 12084  005EA2  D006               	goto	l5272
 12085  005EA4                     l5270:
 12086  005EA4  90D8               	bcf	status,0,c
 12087  005EA6  3612               	rlcf	___llmod@divisor^0,f,c
 12088  005EA8  3613               	rlcf	(___llmod@divisor+1)^0,f,c
 12089  005EAA  3614               	rlcf	(___llmod@divisor+2)^0,f,c
 12090  005EAC  3615               	rlcf	(___llmod@divisor+3)^0,f,c
 12091  005EAE  2A16               	incf	___llmod@counter^0,f,c
 12092  005EB0                     l5272:
 12093  005EB0  AE15               	btfss	(___llmod@divisor+3)^0,7,c
 12094  005EB2  D7F8               	goto	l5270
 12095  005EB4                     u6590:
 12096  005EB4  5012               	movf	___llmod@divisor^0,w,c
 12097  005EB6  5C0E               	subwf	___llmod@dividend^0,w,c
 12098  005EB8  5013               	movf	(___llmod@divisor+1)^0,w,c
 12099  005EBA  580F               	subwfb	(___llmod@dividend+1)^0,w,c
 12100  005EBC  5014               	movf	(___llmod@divisor+2)^0,w,c
 12101  005EBE  5810               	subwfb	(___llmod@dividend+2)^0,w,c
 12102  005EC0  5015               	movf	(___llmod@divisor+3)^0,w,c
 12103  005EC2  5811               	subwfb	(___llmod@dividend+3)^0,w,c
 12104  005EC4  A0D8               	btfss	status,0,c
 12105  005EC6  D008               	goto	l5278
 12106  005EC8  5012               	movf	___llmod@divisor^0,w,c
 12107  005ECA  5E0E               	subwf	___llmod@dividend^0,f,c
 12108  005ECC  5013               	movf	(___llmod@divisor+1)^0,w,c
 12109  005ECE  5A0F               	subwfb	(___llmod@dividend+1)^0,f,c
 12110  005ED0  5014               	movf	(___llmod@divisor+2)^0,w,c
 12111  005ED2  5A10               	subwfb	(___llmod@dividend+2)^0,f,c
 12112  005ED4  5015               	movf	(___llmod@divisor+3)^0,w,c
 12113  005ED6  5A11               	subwfb	(___llmod@dividend+3)^0,f,c
 12114  005ED8                     l5278:
 12115  005ED8  90D8               	bcf	status,0,c
 12116  005EDA  3215               	rrcf	(___llmod@divisor+3)^0,f,c
 12117  005EDC  3214               	rrcf	(___llmod@divisor+2)^0,f,c
 12118  005EDE  3213               	rrcf	(___llmod@divisor+1)^0,f,c
 12119  005EE0  3212               	rrcf	___llmod@divisor^0,f,c
 12120  005EE2  2E16               	decfsz	___llmod@counter^0,f,c
 12121  005EE4  D7E7               	goto	u6590
 12122  005EE6                     l1136:
 12123  005EE6  0060  F038  F00E   	movff	___llmod@dividend,?___llmod
 12124  005EEC  0060  F03C  F00F   	movff	___llmod@dividend+1,?___llmod+1
 12125  005EF2  0060  F040  F010   	movff	___llmod@dividend+2,?___llmod+2
 12126  005EF8  0060  F044  F011   	movff	___llmod@dividend+3,?___llmod+3
 12127  005EFE  0012               	return		;funcret
 12128  005F00                     __end_of___llmod:
 12129                           	opt callstack 0
 12130                           
 12131 ;; *************** function ___lldiv *****************
 12132 ;; Defined at:
 12133 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
 12134 ;; Parameters:    Size  Location     Type
 12135 ;;  dividend        4    0[COMRAM] unsigned long 
 12136 ;;  divisor         4    4[COMRAM] unsigned long 
 12137 ;; Auto vars:     Size  Location     Type
 12138 ;;  quotient        4    8[COMRAM] unsigned long 
 12139 ;;  counter         1   12[COMRAM] unsigned char 
 12140 ;; Return value:  Size  Location     Type
 12141 ;;                  4    0[COMRAM] unsigned long 
 12142 ;; Registers used:
 12143 ;;		wreg, status,2, status,0
 12144 ;; Tracked objects:
 12145 ;;		On entry : 3B/4
 12146 ;;		On exit  : 3B/0
 12147 ;;		Unchanged: 3B/0
 12148 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12149 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12150 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12153 ;;Total ram usage:       13 bytes
 12154 ;; Hardware stack levels used:    1
 12155 ;; This function calls:
 12156 ;;		Nothing
 12157 ;; This function is called by:
 12158 ;;		_main_loop
 12159 ;; This function uses a non-reentrant model
 12160 ;;
 12161                           
 12162                           	psect	text46
 12163  005B26                     __ptext46:
 12164                           	opt callstack 0
 12165  005B26                     ___lldiv:
 12166                           	opt callstack 29
 12167                           
 12168                           ;incstack = 0
 12169  005B26  0E00               	movlw	0
 12170  005B28  6E09               	movwf	___lldiv@quotient^0,c
 12171  005B2A  0E00               	movlw	0
 12172  005B2C  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12173  005B2E  0E00               	movlw	0
 12174  005B30  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12175  005B32  0E00               	movlw	0
 12176  005B34  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12177  005B36  5005               	movf	___lldiv@divisor^0,w,c
 12178  005B38  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12179  005B3A  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12180  005B3C  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12181  005B3E  B4D8               	btfsc	status,2,c
 12182  005B40  D02A               	goto	l743
 12183  005B42  0E01               	movlw	1
 12184  005B44  6E0D               	movwf	___lldiv@counter^0,c
 12185  005B46  D006               	goto	l5252
 12186  005B48                     l5250:
 12187  005B48  90D8               	bcf	status,0,c
 12188  005B4A  3605               	rlcf	___lldiv@divisor^0,f,c
 12189  005B4C  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12190  005B4E  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12191  005B50  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12192  005B52  2A0D               	incf	___lldiv@counter^0,f,c
 12193  005B54                     l5252:
 12194  005B54  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12195  005B56  D7F8               	goto	l5250
 12196  005B58                     u6560:
 12197  005B58  90D8               	bcf	status,0,c
 12198  005B5A  3609               	rlcf	___lldiv@quotient^0,f,c
 12199  005B5C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12200  005B5E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12201  005B60  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12202  005B62  5005               	movf	___lldiv@divisor^0,w,c
 12203  005B64  5C01               	subwf	___lldiv@dividend^0,w,c
 12204  005B66  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12205  005B68  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12206  005B6A  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12207  005B6C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12208  005B6E  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12209  005B70  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12210  005B72  A0D8               	btfss	status,0,c
 12211  005B74  D009               	goto	l5262
 12212  005B76  5005               	movf	___lldiv@divisor^0,w,c
 12213  005B78  5E01               	subwf	___lldiv@dividend^0,f,c
 12214  005B7A  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12215  005B7C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12216  005B7E  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12217  005B80  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12218  005B82  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12219  005B84  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12220  005B86  8009               	bsf	___lldiv@quotient^0,0,c
 12221  005B88                     l5262:
 12222  005B88  90D8               	bcf	status,0,c
 12223  005B8A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12224  005B8C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12225  005B8E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12226  005B90  3205               	rrcf	___lldiv@divisor^0,f,c
 12227  005B92  2E0D               	decfsz	___lldiv@counter^0,f,c
 12228  005B94  D7E1               	goto	u6560
 12229  005B96                     l743:
 12230  005B96  0060  F024  F001   	movff	___lldiv@quotient,?___lldiv
 12231  005B9C  0060  F028  F002   	movff	___lldiv@quotient+1,?___lldiv+1
 12232  005BA2  0060  F02C  F003   	movff	___lldiv@quotient+2,?___lldiv+2
 12233  005BA8  0060  F030  F004   	movff	___lldiv@quotient+3,?___lldiv+3
 12234  005BAE  0012               	return		;funcret
 12235  005BB0                     __end_of___lldiv:
 12236                           	opt callstack 0
 12237                           
 12238 ;; *************** function _lcd_init *****************
 12239 ;; Defined at:
 12240 ;;		line 17 in file "char_lcd.c"
 12241 ;; Parameters:    Size  Location     Type
 12242 ;;  inc             1    wreg     _Bool 
 12243 ;;  shift           1    4[COMRAM] _Bool 
 12244 ;;  cursor          1    5[COMRAM] _Bool 
 12245 ;;  cursorblink     1    6[COMRAM] _Bool 
 12246 ;;  on              1    7[COMRAM] _Bool 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  inc             1    9[COMRAM] _Bool 
 12249 ;; Return value:  Size  Location     Type
 12250 ;;                  1    wreg      void 
 12251 ;; Registers used:
 12252 ;;		wreg, status,2, status,0, cstack
 12253 ;; Tracked objects:
 12254 ;;		On entry : 0/3F
 12255 ;;		On exit  : 0/0
 12256 ;;		Unchanged: 0/0
 12257 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12258 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12260 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12261 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12262 ;;Total ram usage:        6 bytes
 12263 ;; Hardware stack levels used:    1
 12264 ;; Hardware stack levels required when called:    1
 12265 ;; This function calls:
 12266 ;;		_lcd_write
 12267 ;; This function is called by:
 12268 ;;		_main
 12269 ;; This function uses a non-reentrant model
 12270 ;;
 12271                           
 12272                           	psect	text47
 12273  005CBA                     __ptext47:
 12274                           	opt callstack 0
 12275  005CBA                     _lcd_init:
 12276                           	opt callstack 29
 12277                           
 12278                           ;incstack = 0
 12279                           ;lcd_init@inc stored from wreg
 12280  005CBA  6E0A               	movwf	lcd_init@inc^0,c
 12281                           
 12282                           ;char_lcd.c: 18:     lcd_write(0, 0b00110011, 0);
 12283  005CBC  0E33               	movlw	51
 12284  005CBE  6E01               	movwf	lcd_write@data^0,c
 12285  005CC0  0E00               	movlw	0
 12286  005CC2  6E02               	movwf	lcd_write@longdelay^0,c
 12287  005CC4  0E00               	movlw	0
 12288  005CC6  EC67  F030         	call	_lcd_write
 12289                           
 12290                           ;char_lcd.c: 19:     lcd_write(0, 0b00110011, 0);
 12291  005CCA  0E33               	movlw	51
 12292  005CCC  6E01               	movwf	lcd_write@data^0,c
 12293  005CCE  0E00               	movlw	0
 12294  005CD0  6E02               	movwf	lcd_write@longdelay^0,c
 12295  005CD2  0E00               	movlw	0
 12296  005CD4  EC67  F030         	call	_lcd_write
 12297                           
 12298                           ;char_lcd.c: 20:     lcd_write(0, 0b00110011, 0);
 12299  005CD8  0E33               	movlw	51
 12300  005CDA  6E01               	movwf	lcd_write@data^0,c
 12301  005CDC  0E00               	movlw	0
 12302  005CDE  6E02               	movwf	lcd_write@longdelay^0,c
 12303  005CE0  0E00               	movlw	0
 12304  005CE2  EC67  F030         	call	_lcd_write
 12305                           
 12306                           ;char_lcd.c: 21:     lcd_write(0, 0b00111011, 0);
 12307  005CE6  0E3B               	movlw	59
 12308  005CE8  6E01               	movwf	lcd_write@data^0,c
 12309  005CEA  0E00               	movlw	0
 12310  005CEC  6E02               	movwf	lcd_write@longdelay^0,c
 12311  005CEE  0E00               	movlw	0
 12312  005CF0  EC67  F030         	call	_lcd_write
 12313                           
 12314                           ;char_lcd.c: 22:     lcd_write(0, 0b00000100 | (inc << 1) | shift, 0);
 12315  005CF4  500A               	movf	lcd_init@inc^0,w,c
 12316  005CF6  240A               	addwf	lcd_init@inc^0,w,c
 12317  005CF8  1005               	iorwf	lcd_init@shift^0,w,c
 12318  005CFA  0904               	iorlw	4
 12319  005CFC  6E01               	movwf	lcd_write@data^0,c
 12320  005CFE  0E00               	movlw	0
 12321  005D00  6E02               	movwf	lcd_write@longdelay^0,c
 12322  005D02  0E00               	movlw	0
 12323  005D04  EC67  F030         	call	_lcd_write
 12324                           
 12325                           ;char_lcd.c: 23:     lcd_write(0, 0b00001000 | (on << 2) | (cursor << 1) | cursorblink ,
      +                           0);
 12326  005D08  90D8               	bcf	status,0,c
 12327  005D0A  3406               	rlcf	lcd_init@cursor^0,w,c
 12328  005D0C  6E09               	movwf	??_lcd_init^0,c
 12329  005D0E  4408               	rlncf	lcd_init@on^0,w,c
 12330  005D10  46E8               	rlncf	wreg,f,c
 12331  005D12  0BFC               	andlw	252
 12332  005D14  1009               	iorwf	??_lcd_init^0,w,c
 12333  005D16  1007               	iorwf	lcd_init@cursorblink^0,w,c
 12334  005D18  0908               	iorlw	8
 12335  005D1A  6E01               	movwf	lcd_write@data^0,c
 12336  005D1C  0E00               	movlw	0
 12337  005D1E  6E02               	movwf	lcd_write@longdelay^0,c
 12338  005D20  0E00               	movlw	0
 12339  005D22  EC67  F030         	call	_lcd_write
 12340                           
 12341                           ;char_lcd.c: 24:     lcd_write(0, 0b00000001, 1);
 12342  005D26  0E01               	movlw	1
 12343  005D28  6E01               	movwf	lcd_write@data^0,c
 12344  005D2A  0E01               	movlw	1
 12345  005D2C  6E02               	movwf	lcd_write@longdelay^0,c
 12346  005D2E  0E00               	movlw	0
 12347  005D30  EC67  F030         	call	_lcd_write
 12348  005D34  0012               	return		;funcret
 12349  005D36                     __end_of_lcd_init:
 12350                           	opt callstack 0
 12351                           
 12352 ;; *************** function _lcd_write *****************
 12353 ;; Defined at:
 12354 ;;		line 3 in file "char_lcd.c"
 12355 ;; Parameters:    Size  Location     Type
 12356 ;;  rs              1    wreg     _Bool 
 12357 ;;  data            1    0[COMRAM] unsigned char 
 12358 ;;  longdelay       1    1[COMRAM] _Bool 
 12359 ;; Auto vars:     Size  Location     Type
 12360 ;;  rs              1    3[COMRAM] _Bool 
 12361 ;; Return value:  Size  Location     Type
 12362 ;;                  1    wreg      void 
 12363 ;; Registers used:
 12364 ;;		wreg, status,2
 12365 ;; Tracked objects:
 12366 ;;		On entry : 0/3B
 12367 ;;		On exit  : 0/0
 12368 ;;		Unchanged: 0/0
 12369 ;; Data sizes:     COMRAM   BANK0   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK1
      +3  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK2
      +8  BANK29  BANK30  BANK31
 12370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12371 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12372 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12374 ;;Total ram usage:        4 bytes
 12375 ;; Hardware stack levels used:    1
 12376 ;; This function calls:
 12377 ;;		Nothing
 12378 ;; This function is called by:
 12379 ;;		_lcd_init
 12380 ;;		_lcd_set_data_addr
 12381 ;;		_lcd_print
 12382 ;; This function uses a non-reentrant model
 12383 ;;
 12384                           
 12385                           	psect	text48
 12386  0060CE                     __ptext48:
 12387                           	opt callstack 0
 12388  0060CE                     _lcd_write:
 12389                           	opt callstack 28
 12390                           
 12391                           ;incstack = 0
 12392                           ;lcd_write@rs stored from wreg
 12393  0060CE  6E04               	movwf	lcd_write@rs^0,c
 12394                           
 12395                           ;char_lcd.c: 4:     LATE2 = 1;
 12396  0060D0  84BE               	bsf	16318,2,c	;volatile
 12397                           
 12398                           ;char_lcd.c: 5:     LATE1 = 0;
 12399  0060D2  92BE               	bcf	16318,1,c	;volatile
 12400                           
 12401                           ;char_lcd.c: 6:     LATE0 = rs;
 12402  0060D4  B004               	btfsc	lcd_write@rs^0,0,c
 12403  0060D6  D002               	bra	u5865
 12404  0060D8  90BE               	bcf	16318,0,c	;volatile
 12405  0060DA  D001               	bra	u5866
 12406  0060DC                     u5865:
 12407  0060DC  80BE               	bsf	16318,0,c	;volatile
 12408  0060DE                     u5866:
 12409                           
 12410                           ;char_lcd.c: 7:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12411  0060DE  0E35               	movlw	53
 12412  0060E0                     u8217:
 12413  0060E0  2EE8               	decfsz	wreg,f,c
 12414  0060E2  D7FE               	bra	u8217
 12415  0060E4  F000               	nop	
 12416                           
 12417                           ;char_lcd.c: 8:     PORTA = data;
 12418  0060E6  0060  F007  FFCA   	movff	lcd_write@data,16330	;volatile
 12419                           
 12420                           ;char_lcd.c: 9:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12421  0060EC  0E35               	movlw	53
 12422  0060EE                     u8227:
 12423  0060EE  2EE8               	decfsz	wreg,f,c
 12424  0060F0  D7FE               	bra	u8227
 12425  0060F2  F000               	nop	
 12426                           
 12427                           ;char_lcd.c: 10:     LATE2 = 0;
 12428  0060F4  94BE               	bcf	16318,2,c	;volatile
 12429                           
 12430                           ;char_lcd.c: 11:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 12431  0060F6  0E35               	movlw	53
 12432  0060F8                     u8237:
 12433  0060F8  2EE8               	decfsz	wreg,f,c
 12434  0060FA  D7FE               	bra	u8237
 12435  0060FC  F000               	nop	
 12436                           
 12437                           ;char_lcd.c: 12:     LATE2 = 1;
 12438  0060FE  84BE               	bsf	16318,2,c	;volatile
 12439                           
 12440                           ;char_lcd.c: 13:     if (longdelay) _delay((unsigned long)((2)*(64000000/4000.0)));
 12441  006100  5002               	movf	lcd_write@longdelay^0,w,c
 12442  006102  B4D8               	btfsc	status,2,c
 12443  006104  D008               	goto	l4882
 12444  006106  0E2A               	movlw	42
 12445  006108  6E03               	movwf	??_lcd_write^0,c
 12446  00610A  0E8E               	movlw	142
 12447  00610C                     u8247:
 12448  00610C  2EE8               	decfsz	wreg,f,c
 12449  00610E  D7FE               	bra	u8247
 12450  006110  2E03               	decfsz	??_lcd_write^0,f,c
 12451  006112  D7FC               	bra	u8247
 12452  006114  0012               	return	
 12453  006116                     l4882:
 12454  006116  0EA0               	movlw	160
 12455  006118                     u8257:
 12456  006118  D000               	nop2	
 12457  00611A  2EE8               	decfsz	wreg,f,c
 12458  00611C  D7FD               	bra	u8257
 12459  00611E  0012               	return		;funcret
 12460  006120                     __end_of_lcd_write:
 12461                           	opt callstack 0
 12462                           
 12463                           	psect	rparam
 12464  0000                     tosu	equ	0x3FFF
 12465                           tosh	equ	0x3FFE
 12466                           tosl	equ	0x3FFD
 12467                           stkptr	equ	0x3FFC
 12468                           pclatu	equ	0x3FFB
 12469                           pclath	equ	0x3FFA
 12470                           pcl	equ	0x3FF9
 12471                           tblptru	equ	0x3FF8
 12472                           tblptrh	equ	0x3FF7
 12473                           tblptrl	equ	0x3FF6
 12474                           tablat	equ	0x3FF5
 12475                           prodh	equ	0x3FF4
 12476                           prodl	equ	0x3FF3
 12477                           indf0	equ	0x3FEF
 12478                           postinc0	equ	0x3FEE
 12479                           postdec0	equ	0x3FED
 12480                           preinc0	equ	0x3FEC
 12481                           plusw0	equ	0x3FEB
 12482                           fsr0h	equ	0x3FEA
 12483                           fsr0l	equ	0x3FE9
 12484                           wreg	equ	0x3FE8
 12485                           indf1	equ	0x3FE7
 12486                           postinc1	equ	0x3FE6
 12487                           postdec1	equ	0x3FE5
 12488                           preinc1	equ	0x3FE4
 12489                           plusw1	equ	0x3FE3
 12490                           fsr1h	equ	0x3FE2
 12491                           fsr1l	equ	0x3FE1
 12492                           bsr	equ	0x3FE0
 12493                           indf2	equ	0x3FDF
 12494                           postinc2	equ	0x3FDE
 12495                           postdec2	equ	0x3FDD
 12496                           preinc2	equ	0x3FDC
 12497                           plusw2	equ	0x3FDB
 12498                           fsr2h	equ	0x3FDA
 12499                           fsr2l	equ	0x3FD9
 12500                           status	equ	0x3FD8


Data Sizes:
    Strings     214
    Constant    37
    Data        10
    BSS         156
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    160     160
    BANK3           256    256     256
    BANK4           256      2     168
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_22(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(1) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_17(CODE[4]), STR_16(CODE[4]), STR_13(CODE[4]), STR_12(CODE[4]), 
		 -> dbuf(BANK4[80]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), 
		 -> STR_6(CODE[17]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    S1173_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main_loop@batmsg(BANK0[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    memcpy@d1	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3
		 -> ackCmd(BANK4[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK4[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), 
		 -> STR_6(CODE[17]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), 
		 -> STR_6(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 20
		 -> STR_10(CODE[20]), STR_9(CODE[20]), STR_8(CODE[20]), STR_7(CODE[20]), 
		 -> STR_6(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 7
		 -> sprintf@f(BANK0[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK4[80]), 

    sp__memcpy	PTR void  size(2) Largest target is 256
		 -> txBuf(BIGRAMh[256]), 

    uart_send@buf	PTR unsigned char  size(2) Largest target is 3
		 -> ackCmd(BANK4[2]), stateCheckCmd(CODE[2]), volCheckCmd(CODE[3]), 

    handle_message@message	PTR unsigned char  size(2) Largest target is 256
		 -> uart_tasks@message(BANK3[256]), 

    lcd_print@string	PTR unsigned char  size(2) Largest target is 17
		 -> STR_11(CODE[13]), main_loop@batmsg(BANK0[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _updateButtonLight->___aldiv
    _uart_tasks->_handle_message
    _handle_message->_uart_send
    _uart_send->_memcpy
    _vfprintf->_vfpfcnvrt
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___fldiv->___fladd
    _atoi->_isspace
    _setLED->___flge
    ___flge->___flmul
    ___aldiv->___lmul
    _lcd_set_data_addr->_lcd_write
    _lcd_print->_lcd_write
    ___llmod->___lldiv
    _lcd_init->_lcd_write

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    _main_loop->_uart_tasks

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   65778
                                              0 BANK4      2     2      0
                           _lcd_init
                          _lcd_print
                          _main_loop
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           57    57      0   60592
                                            103 BANK0     57    57      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___lldiv
                            ___llmod
                             ___lmul
                           ___xxtofl
                          _lcd_print
                  _lcd_set_data_addr
                             _setLED
                            _sprintf
                          _uart_send
                         _uart_tasks
                  _updateButtonLight
 ---------------------------------------------------------------------------------
 (2) _updateButtonLight                                   12     8      4    1683
                                             26 COMRAM    12     8      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _uart_tasks                                         271   271      0    2294
                                             20 COMRAM    15    15      0
                                              0 BANK3    256   256      0
                     _handle_message
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _handle_message                                       4     1      3    1375
                                             16 COMRAM     4     1      3
                          _uart_send
 ---------------------------------------------------------------------------------
 (4) _uart_send                                            5     2      3     937
                                             11 COMRAM     5     2      3
                             _memcpy
                   _transmitChecksum
 ---------------------------------------------------------------------------------
 (3) _transmitChecksum                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                              11     5      6     371
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             14     8      6   32772
                                             89 BANK0     14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   31542
                                             85 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           47    44      3   30991
                                             92 COMRAM     3     0      3
                                             67 BANK0     18    18      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                              7     3      4     453
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              67    61      6   24736
                                              0 BANK0     67    61      6
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 10     5      5    3551
                                             14 COMRAM    10     5      5
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     220
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1334
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     834
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             55 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2505
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                              62    54      8    5016
                                              0 BANK0     62    54      8
                            ___aldiv
                            ___almod
                             ___flge
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     826
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8    1094
                                             80 COMRAM    12     4      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8    1516
                                             12 COMRAM    14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_set_data_addr                                    1     1      0    2086
                                              4 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2708
                                              4 COMRAM     5     3      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8    1071
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     770
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     2      4    2478
                                              4 COMRAM     6     2      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            4     2      2    2064
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_write
   _lcd_print
     _lcd_write
   _main_loop
     ___awdiv
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flge
       ___flmul (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___fldiv (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lmul
     ___xxtofl
     _lcd_print
       _lcd_write
     _lcd_set_data_addr
       _lcd_write
     _setLED
       ___aldiv
         ___lmul (ARG)
       ___almod
       ___flge
         ___flmul (ARG)
           ___fladd (ARG)
             ___xxtofl (ARG)
           ___fldiv (ARG)
             ___fladd (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _uart_send
       _memcpy
       _transmitChecksum
     _uart_tasks
       _handle_message
         _uart_send
           _memcpy
           _transmitChecksum
       _transmitChecksum
     _updateButtonLight
       ___aldiv
         ___lmul (ARG)
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMh           1D00      0       0      65        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      62        0.0%
BANK31             100      0       0      63        0.0%
BITBANK30          100      0       0      60        0.0%
BANK30             100      0       0      61        0.0%
BITBANK29          100      0       0      58        0.0%
BANK29             100      0       0      59        0.0%
BITBANK28          100      0       0      56        0.0%
BANK28             100      0       0      57        0.0%
BITBANK27          100      0       0      54        0.0%
BANK27             100      0       0      55        0.0%
BITBANK26          100      0       0      52        0.0%
BANK26             100      0       0      53        0.0%
BITBANK25          100      0       0      50        0.0%
BANK25             100      0       0      51        0.0%
BITBANK24          100      0       0      48        0.0%
BANK24             100      0       0      49        0.0%
BITBANK23          100      0       0      46        0.0%
BANK23             100      0       0      47        0.0%
BITBANK22          100      0       0      44        0.0%
BANK22             100      0       0      45        0.0%
BITBANK21          100      0       0      42        0.0%
BANK21             100      0       0      43        0.0%
BITBANK20          100      0       0      40        0.0%
BANK20             100      0       0      41        0.0%
BITBANK19          100      0       0      38        0.0%
BANK19             100      0       0      39        0.0%
BITBANK18          100      0       0      36        0.0%
BANK18             100      0       0      37        0.0%
BITBANK17          100      0       0      34        0.0%
BANK17             100      0       0      35        0.0%
BITBANK16          100      0       0      32        0.0%
BANK16             100      0       0      33        0.0%
BITBANK15          100      0       0      30        0.0%
BANK15             100      0       0      31        0.0%
BITBANK14          100      0       0      28        0.0%
BANK14             100      0       0      29        0.0%
BITBANK13          100      0       0      26        0.0%
BANK13             100      0       0      27        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK7           100      0       0      14        0.0%
BANK7              100      0       0      15        0.0%
BITBANK6           100      0       0      12        0.0%
BANK6              100      0       0      13        0.0%
BITBANK5           100      0       0      10        0.0%
BANK5              100      0       0      11        0.0%
BITBANK4           100      0       0       8        0.0%
BANK4              100      2      A8       9       65.6%
BITBANK3           100      0       0       6        0.0%
BANK3              100    100     100       7      100.0%
BIGRAMl             FF      0       0      66        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     A0      A0       5      100.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A7      64        0.0%
DATA                 0      0     2A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Oct 16 19:52:53 2019

     lcd_set_data_addr@addr 0005                ___fldiv@aexp 0037                ___fldiv@bexp 0036  
              ___fldiv@sign 002F                 __CFG_CP$OFF 000000                ___awdiv@sign 0006  
                        _on 0447  __size_of_updateButtonLight 00E6         ___wmul@multiplicand 0003  
               __CFG_LVP$ON 000000                         l203 54FC                         l233 39DC  
                       l323 35C2                         l325 35EE                         l267 2CC0  
                       l617 24D8                         l643 2892                         l743 5B96  
                       l576 5904                         l981 566E                         _pad 58CE  
               lcd_init@inc 000A                ___awmod@sign 0006                         wreg 003FE8  
              ___flmul@aexp 0045                ___flmul@bexp 004A                ___flmul@sign 0044  
              ___flmul@temp 004F                ___flmul@prod 004B               __CFG_BBEN$OFF 000000  
              __CFG_ZCD$OFF 000000                ___fltol@exp1 000A                        l1300 4970  
                      l1311 49DE                        l1136 5EE6                        l1312 49DA  
                      l1330 41A0                        l1340 43CC                        l1261 46DA  
                      l1245 4608                        l1270 4742                        l1246 45E6  
                      l1271 473E                        l1426 4F58                        l1371 5118  
                      l1347 4466                        l1339 43D0                        l4020 4A90  
                      l4012 4A80                        l4004 4A32                        l1524 60C0  
                      l4110 4378                        l1438 4BDA                        l4200 5C1C  
                      l4008 4A56                        l4040 414C                        l1378 519E  
                      l5002 580E                        l4018 4A8E                        l4042 4150  
                      l5100 3B1C                        l4204 5C2A                        l4220 5DCC  
                      l4140 4442                        l4116 4396                        l4060 4190  
                      l4044 4160                        l5012 5432                        l5014 5436  
                      l5104 3B3E                        l5040 36CC                        l4240 5E12  
                      l4232 5DFA                        l4224 5DDA                        l4216 5DC0  
                      l4152 4486                        l4136 4424                        l4312 571A  
                      l5200 4FEE                        l5024 5498                        l5122 3CB6  
                      l5114 3BE0                        l5042 36DC                        l4226 5DE2  
                      l4058 418C                        l4330 575A                        l4322 5732  
                      l5300 5186                        l5116 3C12                        l5036 36A2  
                      l4172 5BC4                        l4236 5E04                        l4252 5B04  
                      l4068 41BE                        l3604 44D0                        l4324 573E  
                      l4316 572A                        l6020 40D4                        l5204 5016  
                      l6100 2F06                        l5142 5A58                        l5070 38EC  
                      l5054 3790                        l5038 36B2                        l4342 615A  
                      l6014 409C                        l6030 40F0                        l6110 2F94  
                      l4272 5658                        l4264 560E                        l5072 38FC  
                      l4184 5BEA                        l4256 5B22                        l4248 5AD0  
                      l3640 453C                        l3632 451C                        l3608 44D4  
                      l6024 40DE                        l5232 50AA                        l5224 5082  
                      l5216 5050                        l5240 50B8                        l6200 3458  
                      l6120 303C                        l6112 2FA4                        l5250 5B48  
                      l5306 51C4                        l5138 5A14                        l5090 3A6A  
                      l5082 39CC                        l5066 38C2                        l5058 37D6  
                      l4186 5BF2                        l4178 5BD4                        l3706 464E  
                      l3562 5C4C                        l6042 6036                        l4354 5E3A  
                      l4362 5E80                        l5218 5056                        l5242 50BA  
                      l6210 356C                        l6122 307A                        l6106 2F64  
                      l6114 2FB0                        l5252 5B54                        l5324 5214  
                      l5308 51D0                        l4268 5642                        l4196 5C12  
                      l3708 4652                        l3716 4664                        l3628 4518  
                      l6044 6054                        l5180 4F9E                        l6212 3586  
                      l6108 2F7A                        l6132 31DE                        l5262 5B88  
                      l5270 5EA4                        l4278 56A6                        l5094 3A8C  
                      l5078 39A2                        l3902 4818                        l4286 61F4  
                      l3734 46FE                        l3750 471E                        l3726 46CA  
                      l3670 4596                        l4710 584E                        l6222 361A  
                      l6214 3596                        l6230 3662                        l6142 3244  
                      l6070 2CE0                        l6062 2C7A                        ?_pad 000F  
                      l5272 5EB0                        l3744 4714                        l4296 56C8  
                      l3824 53C4                        l4712 5858                        l6208 355A  
                      l6224 3640                        l6144 324C                        l6064 2C82  
                      l3922 4858                        l3906 481C                        l3770 4798  
                      l3682 45F4                        l3834 5416                        l5610 58FC  
                      l5194 4FDC                        l6154 327E                        l6082 2DB4  
                      l3940 48AE                        l3684 45F8                        l3828 53CE  
                      l5620 5954                        l5612 590E                        l5700 2358  
                      l6172 331E                        l6164 32EC                        l5278 5ED8  
                      l5294 514E                        l3934 4890                        l3926 485C  
                      l3782 47C6                        l5606 58EA                        l5710 2454  
                      l6190 33CE                        l6182 339A                        l5296 5154  
                      l5288 5130                        l4680 4E72                        l4664 4E0C  
                      l3784 47C8                        l3872 4C3A                        l5616 5924  
                      l5800 28AC                        l5704 23A2                        l6176 3336  
                      l6168 3306                        l5298 5160                        l4922 5FEA  
                      l4690 4EEA                        l4682 4E7A                        l4674 4E60  
                      l4666 4E0E                        l3778 47BE                        l3698 462C  
                      l3858 4B30                        l5626 5F18                        l5722 24BE  
                      l5706 2408                        l5650 2194                        l6178 3348  
                      l6098 2EF0                        l4940 553A                        l4684 4E7E  
                      l3972 496E                        l3948 48C6                        l3876 4C68  
                      l3868 4BFC                        l5812 295C                        l5740 253C  
                      l5732 24EE                        l6188 33C6                        l6276 4DF4  
                      l4934 5522                        l4918 5FD6                        l4686 4EAC  
                      l3966 4948                        l3958 4920                        l5590 61C0  
                      l5742 2540                        l5726 24E6                        l5670 2240  
                      l5638 2160                        l3984 49A4                        l5824 298C  
                      l5832 29AC                        l5840 29D0                        l5752 2562  
                      l5672 224A                        l4882 6116                        l4946 555C  
                      l4962 55AA                        l3978 4986                        l5586 61AA  
                      l5594 62B8                        l5914 2C30                        l5762 2596  
                      l5658 21AC                        l4948 5568                        l5596 62BC  
                      l5860 2AE8                        l5668 2224                        l5676 2276  
                      l4892 5272                        l4966 55C0                        l4958 559C  
                      l4982 57A4                        l5790 280E                        l5758 2586  
                      l5686 22EE                        l5694 230C                        l5848 2AA0  
                      l5784 27C0                        l5768 25D0                        l5776 272A  
                      l5944 3D6A                        l4994 57EA                        l4986 57B6  
                      l4978 5790                        l5970 3E72                        l5946 3D86  
                      l4898 52F8                        l4988 57C2                        l5876 2B38  
                      l5948 3D8E                        l4998 57F8                        l5878 2B42  
                      l5798 288A                        l5966 3E4E                        l5888 2BA2  
                      l5968 3E6A                        l5898 2BCE                        l5994 3FA6  
                      l5986 3F4C                        l5998 3FDC                        STR_1 20CB  
                      STR_2 2087                        STR_3 2098                        STR_4 20BA  
                      STR_5 2076                        STR_6 20A9                        STR_7 2062  
                      STR_8 203A                        STR_9 204E                        u4030 538A  
                      u4200 4BC0                        u4120 60A6                        u4130 60A8  
                      _T2PR 003FAB                        u4035 5380                        u4220 4C22  
                      u4205 4BB6                        u4150 4AF6                        u4080 540E  
                      u4160 4B16                        u6000 52F4                        u4225 4C18  
                      u4250 62A2                        u4090 5410                        u3530 5C44  
                      u4075 53F0                        u4155 4AEC                        u4260 62A4  
                      u3700 45CA                        u6020 5312                        u4430 49D4  
                      u3710 45CC                        u3550 5C86                        u6200 546A  
                      u4185 4B4A                        u4610 43C6                        u4186 4B50  
                      u4187 4B5E                        u6220 3688                        u3740 4610  
                      u3580 626E                        _PMD0 0039C0                        _PMD1 0039C1  
                      u6150 57C6                        u6310 3A7C                        u6230 3762  
                      u4710 5BF6                        u4470 4A40                        u3590 6270  
                      _PMD2 0039C2                        _PMD3 0039C3                        u6240 37A8  
                      u4480 4A64                        u7200 22C2                        _PMD4 0039C4  
                      _PMD5 0039C5                        u6090 556C                        u6330 3B2E  
                      u4650 4432                        u4570 41AC                        u3690 45BA  
                      u7210 22C4                        u7130 2182                        _PMD6 0039C6  
                      _PMD7 0039C7                        u6260 3892                        u5540 4E5C  
                      u4820 5B1E                        u4660 4450                        u4900 56EE  
                      u6350 3BCE                        u3950 47A4                        u3870 4722  
                      u7310 2508                        u6280 3972                        u5560 4F20  
                      u7160 21F8                        u5640 58A6                        u4905 56E4  
                      u6370 3C84                        u5570 4F22                        u4770 5DE6  
                      u3890 4738                        u7090 5F5E                        u7250 248C  
                      u7170 21FA                        u6380 5A4A                        u4940 5744  
                      u6390 5A8E                        u7350 255E                        u8070 33BC  
                      u8207 366A                        u6560 5B58                        u7600 2C1A  
                      u7520 2AC4                        u7280 24CC                        u6480 5010  
                      u8217 60E0                        u7097 5F50                        u4970 6156  
                      u4890 56B6                        u7610 2C1C                        u5930 52A4  
                      u8227 60EE                        u6387 5A3C                        u5940 52A6  
                      u8237 60F8                        u6397 5A80                        u8157 4DA4  
                      u6590 5EB4                        u6670 51DA                        u7710 3EB0  
                      u4990 5E64                        u5950 52BE                        u8247 610C  
                      u8167 4DBE                        u7720 3EB2                        u5960 52C0  
                      u8257 6118                        u5865 60DC                        u8177 2C7C  
                      u5866 60DE                        u7730 3EBE                        u5970 52D8  
                      u8187 3246                        u7580 2BB8                        u7660 3DCC  
                      u5980 52DA                        u7900 2EA4                        u4997 5E56  
                      u8197 33C8                        u7670 3DCE                        u5990 52F2  
                      u7680 3DDA                        u7920 2F18                        u7780 4058  
                      u7940 3030                        u7790 405A                        u7960 3228  
                      u7890 2E8C                        u7891 2E8A                        u7978 322C  
                      _WPUA 003A41                        _WPUB 003A51                        _WPUC 003A61  
                      _WPUD 003A71                        _WPUE 003A81               __CFG_FCMEN$ON 000000  
                      _dbuf 044C                        _atoi 4DFA                        _main 4C82  
                      _prec 0440                        _nout 043C                        pad@i 0015  
                      pad@p 0012                        fsr1h 003FE2                        fsr2h 003FDA  
                      indf1 003FE7                        indf2 003FDF                        fsr1l 003FE1  
                      pad@w 0017                        fsr2l 003FD9                _soundAmplify 2001  
             ___fpclassifyf 5334                        prodh 003FF4                        prodl 003FF3  
                      start FFFC             ___fldiv@new_exp 0030                 lcd_write@rs 0004  
              _tolower$1245 000D               __CFG_CSWEN$ON 000000                ___param_bank 000000  
                     ??_pad 0014               ___fltol@sign1 0009             __end_of___aldiv 55DA  
                     ?_atoi 0008             __end_of___almod 5828             __end_of___fladd 47EC  
                     ?_main 0001                       _ADCLK 003EFF               _main_loop$317 00E2  
             _main_loop$318 00E6               _main_loop$319 00EA               _main_loop$338 00EE  
                     _ADPCH 003EF1             __end_of___fldiv 4A98                       _ADREF 003EFD  
           __end_of___awdiv 5C38             __end_of___flneg 620E                       STR_10 2026  
                     STR_11 20DC                       STR_20 20F9                       STR_12 20E9  
                     STR_13 20F1                       STR_22 20F9                       STR_16 20ED  
                     STR_17 20F5               __CFG_WDTE$OFF 000000             __end_of___awmod 5E20  
           __end_of___flmul 44A4             __end_of___flsub 5FC6             __end_of___fltol 5774  
           __end_of___lldiv 5BB0             ___awdiv@divisor 0003                       _T2CLK 003FAE  
           __end_of___llmod 5F00                       _T2CON 003FAC                       _LATB4 01FDDC  
                     _LATC4 01FDE4                       _LATE0 01FDF0                       _LATE1 01FDF1  
                     _LATE2 01FDF2              __CFG_DEBUG$OFF 000000                       _U1TXB 003DEA  
           ___awdiv@counter 0005                vfpfcnvrt@fmt 005E                       _PORTA 003FCA  
                     _PORTB 003FCB                       _PORTC 003FCC                       _PORTD 003FCD  
                     _PORTE 003FCE                       _TRISA 003FC2                       _TRISB 003FC3  
                     _TRISC 003FC4                       _TRISD 003FC5                       _TRISE 003FC6  
       ___lmul@multiplicand 0005               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000                       _flags 0442                _DMA2CON0bits 003BDC  
                     _fputc 5C38                       _fputs 61A0             __end_of_isdigit 62AA  
                     _rxBuf 000100                       _txBuf 000200          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0015                       pad@fp 000F                       atoi@s 0008  
                     _width 043E                       _putch 633E             __end_of_isspace 6164  
           __end_of_isupper 6276               lcd_init@shift 0005                       tablat 003FF5  
                     status 003FD8             __end_of_sprintf 61A0              ?___fpclassifyf 0001  
           __end_of_tolower 60CE             __end_of_strncmp 58CE             __initialization 620E  
              __end_of_atoi 4F66                __end_of_main 4DFA              __CFG_SAFEN$OFF 000000  
                    ??_atoi 000A                      ??_main 04A6               __activetblptr 000003  
              _volume_level 044B              __CFG_MVECEN$ON 000000         lcd_init@cursorblink 0007  
                    _ADCON0 003EF8                      _ADCON1 003EF9                      _ADCON2 003EFA  
                    _ADCON3 003EFB                      ?_fputc 0001            ___llmod@dividend 000E  
                    ?_fputs 0009                      _ADRESH 003EF0                      _ADRESL 003EEF  
                    _CCPR2H 003F79                      _CCPR3H 003F75                      _CCPR2L 003F78  
                    _CCPR4H 003F71                      _CCPR3L 003F74                      _CCPR4L 003F70  
          ___awdiv@dividend 0001                      _ANSELA 003A40                      ?_putch 0001  
                    _ANSELB 003A50                      _ANSELC 003A60                      _ANSELD 003A70  
                    _ANSELE 003A80                      _U1CON0 003DF2                      _U1CON1 003DF3  
                    _U1CON2 003DF4                      _U1BRGH 003DF6                      _U1BRGL 003DF5  
                    _RB0PPS 003A08                      _ODCONA 003A42                      _ODCONB 003A52  
                    _ODCONC 003A62                      _RD4PPS 003A1C                      _ODCOND 003A72  
                    _ODCONE 003A82                      _RC7PPS 003A17                      _RD5PPS 003A1D  
                    _RD6PPS 003A1E                      _RD7PPS 003A1F              __CFG_WDTCCS$SC 000000  
                    _U1TXIF 01CD1C                      _INLVLA 003A44                      _INLVLB 003A54  
                    _INLVLC 003A64                      _INLVLD 003A74                      _INLVLE 003A84  
                    _PRLOCK 0039EF            __end_of___xxtofl 522E          lcd_write@longdelay 0002  
         ?_transmitChecksum 0001              __CFG_XINST$OFF 000000                vfprintf@cfmt 00B8  
          __end_of_lcd_init 5D36                      ___flge 55DA                      ___fleq 5A9C  
                    _ackCmd 04A4                      ___lmul 5FC6          ??_transmitChecksum 0001  
                 ??___aldiv 0015                   ??___almod 0009                   ??___fladd 0017  
                    ___wmul 62DC                   ??___fldiv 0027                   ??___awdiv 0005  
                 ??___flneg 0005              __CFG_STVREN$ON 000000                   ??___awmod 0005  
                 ??___flmul 0040                   ??___flsub 0059                   ??___fltol 0005  
                 ??___lldiv 0009                   ??___llmod 0016                      _efgtoa 20FE  
                    _floorf 4A98                      _memcpy 5E20                      _setLED 3672  
                    clear_0 6236            ___awdiv@quotient 0007             ___awmod@divisor 0003  
               setLED@shift 009A             ___awmod@counter 0005                      pad@buf 0010  
                    _strcpy 5F00                      _strlen 62AA              lcd_init@cursor 0006  
                    fputc@c 0001                      fputs@c 000C                      fputs@i 000D  
                    fputs@s 0009                   ??_isdigit 0003             ___fpclassifyf@e 0009  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                 ??_isspace 0003                main_loop@rel 00FC                main_loop@res 00F6  
              main_loop@pos 0444                main_loop@sum 0434                      tblptrh 003FF7  
                 ??_isupper 0003                      tblptrl 003FF6                      tblptru 003FF8  
                    putch@c 0001            __end_of_vfprintf 607A                   ??_sprintf 0060  
                 ??_tolower 0009                   ??_strncmp 0005           _lcd_set_data_addr 630A  
                ___flge@ff1 0051                  ___flge@ff2 0055             ??___fpclassifyf 0005  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0060  
   __end_of__initialization 623C                  ___flneg@f1 0001               lcd_write@data 0001  
        ?_lcd_set_data_addr 0001               ___rparam_used 000001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001         ??_lcd_set_data_addr 0005                __pidataBANK4 6334  
             __end_of_fputc 5CBA               __end_of_fputs 61D8               __end_of_putch 6340  
        __size_of_lcd_print 008E   __end_of_lcd_set_data_addr 6320          __size_of_lcd_write 0052  
                   ??_fputc 0004                     ??_fputs 000C             __CFG_PR1WAY$OFF 000000  
                   ??_putch 0001                  __pbssBANK4 0400          __size_of_main_loop 0A02  
                _efgtoa$620 006F                  _efgtoa$621 0071                  _efgtoa$630 0075  
                _efgtoa$631 0077                  _efgtoa$632 0079                  _efgtoa$626 0073  
                   ?___flge 0051                     ?___fleq 0001                     ?___lmul 0001  
                   ?___wmul 0001                     ?_efgtoa 0060                     _CCP2CON 003F7A  
                   _CCP3CON 003F76                     _CCP4CON 003F72                     ?_floorf 0038  
                   ?_memcpy 0001                     ?_setLED 0060              ___lmul@product 0009  
                   ?_strcpy 0001                     ?_strlen 0001          __size_of_uart_init 009C  
       __CFG_PWRTS$PWRT_OFF 000000          __size_of_uart_send 0076                     _U1TXCHK 003DEB  
                   _U1RXPPS 003AE5                   ?___xxtofl 0001          __size_of_vfpfcnvrt 0444  
                   _PWM6DCH 003F69                     _PWM6DCL 003F68                     _PWM8DCH 003F61  
                   _PWM8DCL 003F60                     _PWM6CON 003F6A                     _PWM8CON 003F62  
                   _SLRCONA 003A43                     _SLRCONB 003A53                     _SLRCONC 003A63  
                   _SLRCOND 003A73                     _SLRCONE 003A83     __size_of_handle_message 0106  
                 ?_lcd_init 0005                   _DMA1DPTRL 003BEC                     __Hparam 0000  
                   __Lparam 0000  __CFG_RSTOSC$HFINTOSC_64MHZ 000000                  _setLED$294 007C  
                _setLED$295 0080                  _setLED$288 0074                  _setLED$289 0078  
                   ___aldiv 5506             __size_of___flge 00D0             __size_of___fleq 008A  
                   ___almod 5774           __end_of_lcd_print 5A9C                     ___fladd 44A4  
                   ___fldiv 47EC                     ___awdiv 5BB0                     ___flneg 61D8  
           __size_of___lmul 005E                     ___awmod 5DAC                     ___flmul 4120  
                   ___flsub 5F68                     ___fltol 56AA           __end_of_lcd_write 6120  
                   ___lldiv 5B26             __size_of___wmul 002E                     ___llmod 5E92  
                 ?_vfprintf 00B5                __psmallconst 2000             __size_of_efgtoa 0B72  
         handle_message@len 0013           __end_of_main_loop 3672             __size_of_floorf 01EA  
                   __pcinit 620E             __size_of_memcpy 0072             __size_of_setLED 066A  
                   __ramtop 2000                     __ptext0 4C82                     __ptext1 5972  
                   __ptext2 2C70                     __ptext3 5420                     __ptext4 4F66  
                   __ptext5 522E                     __ptext6 5D36                     __ptext7 6320  
                   __ptext8 5E20                     __ptext9 6164             __CFG_WRTAPP$OFF 000000  
           __size_of_strcpy 0068             __size_of_strlen 0032                __size_of_pad 00A4  
                   _isdigit 6276                     _pairing 044A                  ??___xxtofl 0005  
          ___awmod@dividend 0001            ___aldiv@dividend 000D                     _isspace 6120  
           __CFG_WRTSAF$OFF 000000                     _isupper 6242                     efgtoa@c 0065  
                   efgtoa@d 0083                     efgtoa@e 009B                     efgtoa@f 0061  
                   efgtoa@g 0097                     efgtoa@h 008D                     efgtoa@i 0095  
                   efgtoa@l 0091                     efgtoa@m 007F                     efgtoa@n 009D  
                   efgtoa@p 0087                     efgtoa@t 007B                     efgtoa@u 009F  
                   efgtoa@w 008A                     atoi@neg 000E  __size_of_lcd_set_data_addr 0016  
                   _sprintf 6164                     _tolower 607A                  ??_lcd_init 0009  
                   _strncmp 5828        end_of_initialization 623C                     floorf@e 0046  
                   floorf@m 0042                     floorf@u 0048                     floorf@x 0038  
                   memcpy@d 0007                     memcpy@n 0005                     memcpy@s 0009  
                   setLED@b 008A                     setLED@g 0086                     setLED@r 0070  
                   fputc@fp 0003       updateButtonLight@step 001B                     fputs@fp 000B  
         __end_of_uart_init 5A0E           __end_of_uart_send 5DAC             ___lldiv@divisor 0005  
             main_loop@last 0400             ___lldiv@counter 000D           uart_tasks@bytePos 001F  
         __end_of_vfpfcnvrt 4120                  efgtoa@mode 008C           uart_tasks@message 0300  
                efgtoa@sign 0085            ___aldiv@quotient 0017                     postdec1 003FE5  
                   postdec2 003FDD                     postinc0 003FEE                     postinc1 003FE6  
                   postinc2 003FDE                  ??_vfprintf 0060       __CFG_WDTCPS$WDTCPS_31 000000  
                   strcpy@d 0009                     strlen@a 0003                     strcpy@s 0007  
                   strlen@s 0001                  _uart_tasks 4F66                   _PORTCbits 003FCC  
                 _PORTDbits 003FCD                 uart_tasks@i 001E                 ___fladd@grs 001E  
 __size_of_transmitChecksum 0014               ___xxtofl@sign 0009                 ___fldiv@grs 0032  
               ___fldiv@rem 002B            __CFG_FEXTOSC$OFF 000000                  lcd_init@on 0008  
     __end_of_stateCheckCmd 2026                 ___flmul@grs 0046                  lcd_print@i 0009  
            __end_of___flge 56AA              __end_of___fleq 5B26       uart_tasks@posInRawMsg 001D  
            __end_of___lmul 6024                 vfpfcnvrt@ap 005F                 vfpfcnvrt@ct 00AD  
               vfpfcnvrt@fp 005D              __end_of___wmul 630A              __end_of_efgtoa 2C70  
            __end_of_floorf 4C82              __end_of_memcpy 5E92              __end_of_setLED 3CDC  
                floorf@F524 0428              __end_of_strcpy 5F68              __end_of_strlen 62DC  
       start_initialization 620E              _handle_message 522E                 __end_of_pad 5972  
     __end_of___fpclassifyf 5420             ___llmod@divisor 0012             ___llmod@counter 0016  
          __CFG_LPBOREN$OFF 000000       handle_message@message 0011                 vfprintf@fmt 00B6  
                  ??___flge 0059                    ??___fleq 0009                    ??___lmul 0009  
                  ??___wmul 0005                  setLED@step 0064                    ??_efgtoa 0066  
               __pdataBANK4 049C                    ??_floorf 003C                    ??_memcpy 0007  
                  ??_setLED 0068                 ?_uart_tasks 0001            __CFG_IVT1WAY$OFF 000000  
               _bat_percent 04A0                    ??_strcpy 0005                    ??_strlen 0003  
                 ___fladd@a 0013                   ___fladd@b 000F                   ___fldiv@a 0023  
                 ___fldiv@b 001F      __end_of_handle_message 5334                   ___flmul@a 003C  
                 ___flmul@b 0038                   ___flsub@a 0055                   ___flsub@b 0051  
             __pcstackBANK0 0060               __pcstackBANK3 0300               __pcstackBANK4 04A6  
         __size_of___xxtofl 0164           __size_of_lcd_init 007C                   _atoi$1122 0010  
                 _atoi$1123 0014                   _atoi$1124 0012                    ?___aldiv 000D  
                  ?___almod 0001                    ?___fladd 000F                    ?___fldiv 001F  
                  ?___awdiv 0001                    ?___flneg 0001                    ?___awmod 0001  
                  ?___flmul 0038                    ?___flsub 0051                    ?___fltol 0001  
                  ?___lldiv 0001                    ?___llmod 000E            __CFG_PPS1WAY$OFF 000000  
          ___almod@dividend 0001                   _lcd_print 5A0E                   _connected 0448  
         __size_of_vfprintf 0056                   _lcd_write 60CE      __CFG_BBSIZE$BBSIZE_512 000000  
               __smallconst 2000            _transmitChecksum 6320                    ?_isdigit 0001  
                 _main_loop 2C70                    _DMA1CON0 003BFC                    _DMA1CON1 003BFD  
                  _DMA1AIRQ 003BFE                    _DMA2CON0 003BDC                    _DMA2CON1 003BDD  
                  _DMA2AIRQ 003BDE                    _DMA1DSAH 003BF1                    _DMA1DSAL 003BF0  
           ?_handle_message 0011                    _DMA2DSAH 003BD1                    _DMA2DSAL 003BD0  
                  _DMA1DSZH 003BEF                    _DMA1DSZL 003BEE                    _DMA2DSZH 003BCF  
                  _DMA2DSZL 003BCE                    _DMA1SSAH 003BFA                    _DMA1SIRQ 003BFF  
                  _DMA1SSAL 003BF9                    _DMA1SSAU 003BFB                    _DMA2SSAH 003BDA  
                  _DMA2SIRQ 003BDF                    _DMA2SSAL 003BD9                    _DMA2SSAU 003BDB  
                  _DMA1SSZH 003BF8                    _DMA1SSZL 003BF7                    _DMA2SSZH 003BD8  
                  _DMA2SSZL 003BD7                    ?_isspace 0001                    ?_isupper 0001  
                  _CCPTMRS0 003F5E            main_loop@lastAvg 00DE            main_loop@counter 0438  
          main_loop@lastSum 0430                    ?_sprintf 00B9                    ?_tolower 0007  
            __size_of_fputc 0082              __size_of_fputs 0038                    ?_strncmp 0001  
            __size_of_putch 0002             ___aldiv@divisor 0011             ___aldiv@counter 0015  
       __size_of_uart_tasks 0164              ___wmul@product 0005        updateButtonLight@dch 0023  
          uart_tasks@intPos 0020            uart_tasks@msgLen 0021                   _uart_init 5972  
                 _uart_send 5D36                   _vfpfcnvrt 3CDC                  ?_lcd_print 0005  
                _ADCON0bits 003EF8                  ?_lcd_write 0001           ___wmul@multiplier 0001  
                ?_main_loop 0001                   _streaming 0449                _isspace$1153 0007  
                vfpfcnvrt@c 00B4                  vfpfcnvrt@f 00B0           ___lmul@multiplier 0001  
                 copy_data0 6222               _ledBrightness 049C                  _DMA2SCNTIF 01CD2A  
                  __Hrparam 0000             lcd_print@string 0005                   memcpy@tmp 000B  
                vfprintf@ap 00B7                    __Lrparam 0000                  vfprintf@fp 00B5  
        __CFG_BOREN$SBORDIS 000000                   setLED@mod 0060                  ?_uart_init 0001  
                ?_uart_send 000C            __size_of___aldiv 00D4            __size_of___almod 00B4  
          __size_of___fladd 0348            __size_of___fldiv 02AC            __size_of___awdiv 0088  
          __size_of___flneg 0036            __size_of___awmod 0074            __size_of___flmul 0384  
          __size_of___flsub 005E            __size_of___fltol 00CA            __size_of___lldiv 008A  
          __size_of___llmod 006E                  ?_vfpfcnvrt 005D        __end_of_soundAmplify 2021  
         _updateButtonLight 5420          ___fpclassifyf@F463 042C                  sprintf@fmt 00BA  
                  ___xxtofl 50CA          ?_updateButtonLight 001B            __size_of_isdigit 0034  
          __size_of_isspace 0044                    __ptext10 6024                    __ptext11 3CDC  
                  __ptext20 5C38                    __ptext12 5828                    __ptext21 633E  
                  __ptext13 20FE                    __ptext30 47EC                    __ptext22 4A98  
                  __ptext14 607A                    __ptext31 5DAC                    __ptext23 5334  
                  __ptext15 6242                    __ptext40 5774                    __ptext32 5BB0  
                  __ptext24 56AA                    __ptext16 5F00                    __ptext41 5506  
                  __ptext33 4DFA                    __ptext25 5F68                    __ptext17 58CE  
                  __ptext42 630A                    __ptext34 6120                    __ptext26 44A4  
                  __ptext18 62AA                    __ptext43 5A0E                    __ptext35 6276  
                  __ptext27 61D8                    __ptext19 61A0                    __ptext44 50CA  
                  __ptext36 62DC                    __ptext28 4120                    __ptext45 5E92  
                  __ptext37 3672                    __ptext29 5A9C                    __ptext46 5B26  
                  __ptext38 5FC6                    __ptext47 5CBA                    __ptext39 55DA  
                  __ptext48 60CE            __size_of_isupper 0034                    _lcd_init 5CBA  
           ___almod@divisor 0005            __size_of_sprintf 003C            __size_of_tolower 0054  
           main_loop@absRes 00F2             ___almod@counter 0009         ??_updateButtonLight 001F  
                strcpy@dest 0001            __size_of_strncmp 00A6             main_loop@batmsg 00CD  
           main_loop@batlvl 00F4         __end_of_volCheckCmd 2024               __size_of_atoi 016C  
             __size_of_main 0178             main_loop@sample 00F8        __CFG_WDTCWS$WDTCWS_7 000000  
        __CFG_BORV$VBOR_190 000000                    efgtoa@fp 0060                    efgtoa@ne 0081  
                  efgtoa@pp 007D                    efgtoa@ou 006B             uart_tasks@rxLen 0019  
           uart_tasks@rxPos 0446               setLED@trueMod 0084         uart_tasks@msgOffset 001C  
                  _vfprintf 6024                ??_uart_tasks 0015   __end_of_updateButtonLight 5506  
               ??_lcd_print 0007                 ??_lcd_write 0003                 ??_main_loop 00C7  
                  memcpy@d1 0001                    memcpy@s1 0003                    setLED@sb 0092  
                  setLED@sg 008E                    setLED@sr 0096                    isdigit@c 0001  
        uart_tasks@checksum 001B                   sprintf@ap 00C1                    isspace@c 0001  
          ___lldiv@dividend 0001          __end_of_uart_tasks 50CA           __CFG_CLKOUTEN$OFF 000000  
                 strcpy@src 0003                    isupper@c 0001    __end_of_transmitChecksum 6334  
                 strncmp@_l 0001                   strncmp@_r 0002                 efgtoa@nmode 0089  
               ??_uart_init 0001                 ??_uart_send 000F            ??_handle_message 0014  
               ??_vfpfcnvrt 00A3               _vfpfcnvrt$651 00AB               _vfpfcnvrt$646 00A7  
             _vfpfcnvrt$647 00A9                    sprintf@f 00C2                    tolower@c 0007  
                  sprintf@s 00B9      __size_of___fpclassifyf 00EC                  _PRLOCKbits 0039EF  
          ___lldiv@quotient 0009          uart_tasks@zeroByte 0022                    strncmp@l 0006  
                  strncmp@n 0003                    strncmp@r 0007                ___aldiv@sign 0016  
             uart_tasks@val 0023                 _volCheckCmd 2021               ___fladd@signs 001B  
              uart_send@buf 000C                uart_send@len 000E                ___almod@sign 000A  
              ___fladd@aexp 001C                ___fladd@bexp 001D               _stateCheckCmd 2024  
    uart_tasks@rawMsgOffset 001A  
