

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 29 13:25:12 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18LF47K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=2
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	text39,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56  0000                     
    57                           ; Version 2.10
    58                           ; Generated 31/07/2019 GMT
    59                           ; 
    60                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    61                           ; All rights reserved.
    62                           ; 
    63                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    64                           ; 
    65                           ; Redistribution and use in source and binary forms, with or without modification, are
    66                           ; permitted provided that the following conditions are met:
    67                           ; 
    68                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    69                           ;        conditions and the following disclaimer.
    70                           ; 
    71                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    72                           ;        of conditions and the following disclaimer in the documentation and/or other
    73                           ;        materials provided with the distribution.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18LF47K42 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91  0000                     
    92                           	psect	idataCOMRAM
    93  00644C                     __pidataCOMRAM:
    94                           	opt callstack 0
    95                           
    96                           ;initializer for _ledBrightness
    97  00644C  FF                 	db	255
    98  0000                     _PMD7	set	14791
    99  0000                     _PMD6	set	14790
   100  0000                     _PMD5	set	14789
   101  0000                     _PMD4	set	14788
   102  0000                     _PMD3	set	14787
   103  0000                     _PMD2	set	14786
   104  0000                     _PMD1	set	14785
   105  0000                     _PMD0	set	14784
   106  0000                     _RD7PPS	set	14879
   107  0000                     _RD6PPS	set	14878
   108  0000                     _RD5PPS	set	14877
   109  0000                     _RD4PPS	set	14876
   110  0000                     _RC7PPS	set	14871
   111  0000                     _ODCONE	set	14978
   112  0000                     _SLRCONE	set	14979
   113  0000                     _INLVLE	set	14980
   114  0000                     _WPUE	set	14977
   115  0000                     _ANSELE	set	14976
   116  0000                     _ODCOND	set	14962
   117  0000                     _SLRCOND	set	14963
   118  0000                     _INLVLD	set	14964
   119  0000                     _WPUD	set	14961
   120  0000                     _ANSELD	set	14960
   121  0000                     _ODCONC	set	14946
   122  0000                     _SLRCONC	set	14947
   123  0000                     _INLVLC	set	14948
   124  0000                     _WPUC	set	14945
   125  0000                     _ANSELC	set	14944
   126  0000                     _ODCONB	set	14930
   127  0000                     _SLRCONB	set	14931
   128  0000                     _INLVLB	set	14932
   129  0000                     _WPUB	set	14929
   130  0000                     _ANSELB	set	14928
   131  0000                     _ODCONA	set	14914
   132  0000                     _SLRCONA	set	14915
   133  0000                     _INLVLA	set	14916
   134  0000                     _WPUA	set	14913
   135  0000                     _ANSELA	set	14912
   136  0000                     _ADREF	set	16125
   137  0000                     _ADCLK	set	16127
   138  0000                     _ADCON3	set	16123
   139  0000                     _ADCON2	set	16122
   140  0000                     _ADCON1	set	16121
   141  0000                     _ADCON0	set	16120
   142  0000                     _ADRESL	set	16111
   143  0000                     _ADRESH	set	16112
   144  0000                     _ADCON0bits	set	16120
   145  0000                     _ADPCH	set	16113
   146  0000                     _CCPTMRS0	set	16222
   147  0000                     _PORTEbits	set	16334
   148  0000                     _PORTBbits	set	16331
   149  0000                     _PWM8DCL	set	16224
   150  0000                     _PWM8DCH	set	16225
   151  0000                     _PWM6DCL	set	16232
   152  0000                     _PWM6DCH	set	16233
   153  0000                     _T2CON	set	16300
   154  0000                     _T2CLK	set	16302
   155  0000                     _T2PR	set	16299
   156  0000                     _PWM8CON	set	16226
   157  0000                     _PWM6CON	set	16234
   158  0000                     _CCP4CON	set	16242
   159  0000                     _CCP3CON	set	16246
   160  0000                     _CCP2CON	set	16250
   161  0000                     _PORTE	set	16334
   162  0000                     _TRISE	set	16326
   163  0000                     _PORTD	set	16333
   164  0000                     _TRISD	set	16325
   165  0000                     _PORTC	set	16332
   166  0000                     _TRISC	set	16324
   167  0000                     _PORTB	set	16331
   168  0000                     _TRISB	set	16323
   169  0000                     _PORTA	set	16330
   170  0000                     _TRISA	set	16322
   171  0000                     _PORTDbits	set	16333
   172  0000                     _PORTCbits	set	16332
   173  0000                     _CCPR4L	set	16240
   174  0000                     _CCPR4H	set	16241
   175  0000                     _CCPR2L	set	16248
   176  0000                     _CCPR2H	set	16249
   177  0000                     _CCPR3L	set	16244
   178  0000                     _CCPR3H	set	16245
   179                           
   180                           	psect	smallconst
   181  002000                     __psmallconst:
   182                           	opt callstack 0
   183  002000  00                 	db	0
   184  002001                     STR_1:
   185  002001  43                 	db	67	;'C'
   186  002002  68                 	db	104	;'h'
   187  002003  67                 	db	103	;'g'
   188  002004  20                 	db	32
   189  002005  66                 	db	102	;'f'
   190  002006  61                 	db	97	;'a'
   191  002007  75                 	db	117	;'u'
   192  002008  6C                 	db	108	;'l'
   193  002009  74                 	db	116	;'t'
   194  00200A  3A                 	db	58	;':'
   195  00200B  20                 	db	32
   196  00200C  25                 	db	37
   197  00200D  33                 	db	51	;'3'
   198  00200E  2E                 	db	46
   199  00200F  30                 	db	48	;'0'
   200  002010  66                 	db	102	;'f'
   201  002011  25                 	db	37
   202  002012  25                 	db	37
   203  002013  00                 	db	0
   204  002014                     STR_2:
   205  002014  46                 	db	70	;'F'
   206  002015  75                 	db	117	;'u'
   207  002016  6C                 	db	108	;'l'
   208  002017  6C                 	db	108	;'l'
   209  002018  20                 	db	32
   210  002019  43                 	db	67	;'C'
   211  00201A  68                 	db	104	;'h'
   212  00201B  67                 	db	103	;'g'
   213  00201C  3A                 	db	58	;':'
   214  00201D  20                 	db	32
   215  00201E  25                 	db	37
   216  00201F  33                 	db	51	;'3'
   217  002020  2E                 	db	46
   218  002021  30                 	db	48	;'0'
   219  002022  66                 	db	102	;'f'
   220  002023  25                 	db	37
   221  002024  25                 	db	37
   222  002025  00                 	db	0
   223  002026                     STR_3:
   224  002026  46                 	db	70	;'F'
   225  002027  61                 	db	97	;'a'
   226  002028  73                 	db	115	;'s'
   227  002029  74                 	db	116	;'t'
   228  00202A  20                 	db	32
   229  00202B  43                 	db	67	;'C'
   230  00202C  68                 	db	104	;'h'
   231  00202D  67                 	db	103	;'g'
   232  00202E  3A                 	db	58	;':'
   233  00202F  20                 	db	32
   234  002030  25                 	db	37
   235  002031  33                 	db	51	;'3'
   236  002032  2E                 	db	46
   237  002033  30                 	db	48	;'0'
   238  002034  66                 	db	102	;'f'
   239  002035  25                 	db	37
   240  002036  25                 	db	37
   241  002037  00                 	db	0
   242  002038                     STR_4:
   243  002038  42                 	db	66	;'B'
   244  002039  61                 	db	97	;'a'
   245  00203A  74                 	db	116	;'t'
   246  00203B  74                 	db	116	;'t'
   247  00203C  65                 	db	101	;'e'
   248  00203D  72                 	db	114	;'r'
   249  00203E  79                 	db	121	;'y'
   250  00203F  3A                 	db	58	;':'
   251  002040  20                 	db	32
   252  002041  25                 	db	37
   253  002042  33                 	db	51	;'3'
   254  002043  2E                 	db	46
   255  002044  30                 	db	48	;'0'
   256  002045  66                 	db	102	;'f'
   257  002046  25                 	db	37
   258  002047  25                 	db	37
   259  002048  00                 	db	0
   260  002049                     STR_5:
   261  002049  48                 	db	72	;'H'
   262  00204A  65                 	db	101	;'e'
   263  00204B  6C                 	db	108	;'l'
   264  00204C  6C                 	db	108	;'l'
   265  00204D  6F                 	db	111	;'o'
   266  00204E  20                 	db	32
   267  00204F  57                 	db	87	;'W'
   268  002050  6F                 	db	111	;'o'
   269  002051  72                 	db	114	;'r'
   270  002052  6C                 	db	108	;'l'
   271  002053  64                 	db	100	;'d'
   272  002054  21                 	db	33
   273  002055  00                 	db	0
   274  002056                     STR_6:
   275  002056  49                 	db	73	;'I'
   276  002057  4E                 	db	78	;'N'
   277  002058  46                 	db	70	;'F'
   278  002059  00                 	db	0
   279  00205A                     STR_10:
   280  00205A  4E                 	db	78	;'N'
   281  00205B  41                 	db	65	;'A'
   282  00205C  4E                 	db	78	;'N'
   283  00205D  00                 	db	0
   284  00205E                     STR_7:
   285  00205E  69                 	db	105	;'i'
   286  00205F  6E                 	db	110	;'n'
   287  002060  66                 	db	102	;'f'
   288  002061  00                 	db	0
   289  002062                     STR_11:
   290  002062  6E                 	db	110	;'n'
   291  002063  61                 	db	97	;'a'
   292  002064  6E                 	db	110	;'n'
   293  002065  00                 	db	0
   294  002066                     STR_14:
   295  002066  6C                 	db	108	;'l'
   296  002067  66                 	db	102	;'f'
   297  002068  00                 	db	0
   298  0000                     
   299                           ; #config settings
   300  002069  00                 	db	0	; dummy byte at the end
   301  0000                     
   302                           	psect	cinit
   303  0063D4                     __pcinit:
   304                           	opt callstack 0
   305  0063D4                     start_initialization:
   306                           	opt callstack 0
   307  0063D4                     __initialization:
   308                           	opt callstack 0
   309                           
   310                           ; Initialize objects allocated to COMRAM (1 bytes)
   311                           ; load TBLPTR registers with __pidataCOMRAM
   312  0063D4  0E4C               	movlw	low __pidataCOMRAM
   313  0063D6  6EF6               	movwf	tblptrl,c
   314  0063D8  0E64               	movlw	high __pidataCOMRAM
   315  0063DA  6EF7               	movwf	tblptrh,c
   316  0063DC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   317  0063DE  6EF8               	movwf	tblptru,c
   318  0063E0  0009               	tblrd		*+	;fetch initializer
   319  0063E2  006F FFD4  F05F    	movff	tablat,__pdataCOMRAM
   320                           
   321                           ; Clear objects allocated to BANK1 (114 bytes)
   322  0063E8  EE00  F100         	lfsr	0,__pbssBANK1
   323  0063EC  0E72               	movlw	114
   324  0063EE                     clear_0:
   325  0063EE  6AEE               	clrf	postinc0,c
   326  0063F0  06E8               	decf	wreg,f,c
   327  0063F2  E1FD               	bnz	clear_0
   328                           
   329                           ; Clear objects allocated to BANK0 (16 bytes)
   330  0063F4  EE00  F0DF         	lfsr	0,__pbssBANK0
   331  0063F8  0E10               	movlw	16
   332  0063FA                     clear_1:
   333  0063FA  6AEE               	clrf	postinc0,c
   334  0063FC  06E8               	decf	wreg,f,c
   335  0063FE  E1FD               	bnz	clear_1
   336  006400                     end_of_initialization:
   337                           	opt callstack 0
   338  006400                     __end_of__initialization:
   339                           	opt callstack 0
   340  006400  0100               	movlb	0
   341  006402  EFC3  F029         	goto	_main	;jump to C main() function
   342                           
   343                           	psect	dataCOMRAM
   344  00005F                     __pdataCOMRAM:
   345                           	opt callstack 0
   346  00005F                     _ledBrightness:
   347                           	opt callstack 0
   348  00005F                     	ds	1
   349                           
   350                           	psect	bssBANK0
   351  0000DF                     __pbssBANK0:
   352                           	opt callstack 0
   353  0000DF                     floorf@F524:
   354                           	opt callstack 0
   355  0000DF                     	ds	4
   356  0000E3                     ___fpclassifyf@F463:
   357                           	opt callstack 0
   358  0000E3                     	ds	4
   359  0000E7                     _nout:
   360                           	opt callstack 0
   361  0000E7                     	ds	2
   362  0000E9                     _width:
   363                           	opt callstack 0
   364  0000E9                     	ds	2
   365  0000EB                     _prec:
   366                           	opt callstack 0
   367  0000EB                     	ds	2
   368  0000ED                     _flags:
   369                           	opt callstack 0
   370  0000ED                     	ds	2
   371                           
   372                           	psect	bssBANK1
   373  000100                     __pbssBANK1:
   374                           	opt callstack 0
   375  000100                     main_loop@last:
   376                           	opt callstack 0
   377  000100                     	ds	20
   378  000114                     main_loop@lastSum:
   379                           	opt callstack 0
   380  000114                     	ds	4
   381  000118                     main_loop@sum:
   382                           	opt callstack 0
   383  000118                     	ds	4
   384  00011C                     main_loop@counter:
   385                           	opt callstack 0
   386  00011C                     	ds	4
   387  000120                     main_loop@pos:
   388                           	opt callstack 0
   389  000120                     	ds	2
   390  000122                     _dbuf:
   391                           	opt callstack 0
   392  000122                     	ds	80
   393                           
   394                           	psect	cstackBANK1
   395  000172                     __pcstackBANK1:
   396                           	opt callstack 0
   397  000172                     main_loop@batmsg:
   398                           	opt callstack 0
   399                           
   400                           ; 16 bytes @ 0x0
   401  000172                     	ds	16
   402  000182                     _main_loop$314:
   403                           	opt callstack 0
   404                           
   405                           ; 4 bytes @ 0x10
   406  000182                     	ds	4
   407  000186                     _main_loop$311:
   408                           	opt callstack 0
   409                           
   410                           ; 2 bytes @ 0x14
   411  000186                     	ds	2
   412  000188                     _main_loop$316:
   413                           	opt callstack 0
   414                           
   415                           ; 2 bytes @ 0x16
   416  000188                     	ds	2
   417  00018A                     _main_loop$317:
   418                           	opt callstack 0
   419                           
   420                           ; 2 bytes @ 0x18
   421  00018A                     	ds	2
   422  00018C                     main_loop@lastAvg:
   423                           	opt callstack 0
   424                           
   425                           ; 2 bytes @ 0x1A
   426  00018C                     	ds	2
   427  00018E                     main_loop@res:
   428                           	opt callstack 0
   429                           
   430                           ; 2 bytes @ 0x1C
   431  00018E                     	ds	2
   432  000190                     main_loop@bat_percent:
   433                           	opt callstack 0
   434                           
   435                           ; 4 bytes @ 0x1E
   436  000190                     	ds	4
   437  000194                     main_loop@sample:
   438                           	opt callstack 0
   439                           
   440                           ; 4 bytes @ 0x22
   441  000194                     	ds	4
   442                           
   443                           	psect	cstackBANK0
   444  000060                     __pcstackBANK0:
   445                           	opt callstack 0
   446  000060                     ?_efgtoa:
   447                           	opt callstack 0
   448  000060                     efgtoa@fp:
   449                           	opt callstack 0
   450                           
   451                           ; 2 bytes @ 0x0
   452  000060                     	ds	2
   453  000062                     efgtoa@f:
   454                           	opt callstack 0
   455                           
   456                           ; 4 bytes @ 0x2
   457  000062                     	ds	4
   458  000066                     efgtoa@c:
   459                           	opt callstack 0
   460                           
   461                           ; 1 bytes @ 0x6
   462  000066                     	ds	1
   463  000067                     ??_efgtoa:
   464                           
   465                           ; 1 bytes @ 0x7
   466  000067                     	ds	5
   467  00006C                     efgtoa@ou:
   468                           	opt callstack 0
   469                           
   470                           ; 4 bytes @ 0xC
   471  00006C                     	ds	4
   472  000070                     _efgtoa$515:
   473                           	opt callstack 0
   474                           
   475                           ; 2 bytes @ 0x10
   476  000070                     	ds	2
   477  000072                     _efgtoa$516:
   478                           	opt callstack 0
   479                           
   480                           ; 2 bytes @ 0x12
   481  000072                     	ds	2
   482  000074                     _efgtoa$521:
   483                           	opt callstack 0
   484                           
   485                           ; 2 bytes @ 0x14
   486  000074                     	ds	2
   487  000076                     _efgtoa$525:
   488                           	opt callstack 0
   489                           
   490                           ; 2 bytes @ 0x16
   491  000076                     	ds	2
   492  000078                     _efgtoa$526:
   493                           	opt callstack 0
   494                           
   495                           ; 2 bytes @ 0x18
   496  000078                     	ds	2
   497  00007A                     _efgtoa$527:
   498                           	opt callstack 0
   499                           
   500                           ; 2 bytes @ 0x1A
   501  00007A                     	ds	2
   502  00007C                     efgtoa@t:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x1C
   506  00007C                     	ds	2
   507  00007E                     efgtoa@pp:
   508                           	opt callstack 0
   509                           
   510                           ; 2 bytes @ 0x1E
   511  00007E                     	ds	2
   512  000080                     efgtoa@m:
   513                           	opt callstack 0
   514                           
   515                           ; 2 bytes @ 0x20
   516  000080                     	ds	2
   517  000082                     efgtoa@ne:
   518                           	opt callstack 0
   519                           
   520                           ; 2 bytes @ 0x22
   521  000082                     	ds	2
   522  000084                     efgtoa@d:
   523                           	opt callstack 0
   524                           
   525                           ; 2 bytes @ 0x24
   526  000084                     	ds	2
   527  000086                     efgtoa@sign:
   528                           	opt callstack 0
   529                           
   530                           ; 2 bytes @ 0x26
   531  000086                     	ds	2
   532  000088                     efgtoa@p:
   533                           	opt callstack 0
   534                           
   535                           ; 2 bytes @ 0x28
   536  000088                     	ds	2
   537  00008A                     efgtoa@nmode:
   538                           	opt callstack 0
   539                           
   540                           ; 1 bytes @ 0x2A
   541  00008A                     	ds	1
   542  00008B                     efgtoa@w:
   543                           	opt callstack 0
   544                           
   545                           ; 2 bytes @ 0x2B
   546  00008B                     	ds	2
   547  00008D                     efgtoa@mode:
   548                           	opt callstack 0
   549                           
   550                           ; 1 bytes @ 0x2D
   551  00008D                     	ds	1
   552  00008E                     efgtoa@h:
   553                           	opt callstack 0
   554                           
   555                           ; 4 bytes @ 0x2E
   556  00008E                     	ds	4
   557  000092                     efgtoa@l:
   558                           	opt callstack 0
   559                           
   560                           ; 4 bytes @ 0x32
   561  000092                     	ds	4
   562  000096                     efgtoa@i:
   563                           	opt callstack 0
   564                           
   565                           ; 2 bytes @ 0x36
   566  000096                     	ds	2
   567  000098                     efgtoa@g:
   568                           	opt callstack 0
   569                           
   570                           ; 4 bytes @ 0x38
   571  000098                     	ds	4
   572  00009C                     efgtoa@e:
   573                           	opt callstack 0
   574                           
   575                           ; 2 bytes @ 0x3C
   576  00009C                     	ds	2
   577  00009E                     efgtoa@n:
   578                           	opt callstack 0
   579                           
   580                           ; 2 bytes @ 0x3E
   581  00009E                     	ds	2
   582  0000A0                     efgtoa@u:
   583                           	opt callstack 0
   584                           
   585                           ; 4 bytes @ 0x40
   586  0000A0                     	ds	4
   587  0000A4                     ?_vfpfcnvrt:
   588                           	opt callstack 0
   589  0000A4                     vfpfcnvrt@fp:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0x44
   593  0000A4                     	ds	2
   594  0000A6                     vfpfcnvrt@fmt:
   595                           	opt callstack 0
   596                           
   597                           ; 2 bytes @ 0x46
   598  0000A6                     	ds	2
   599  0000A8                     vfpfcnvrt@ap:
   600                           	opt callstack 0
   601                           
   602                           ; 2 bytes @ 0x48
   603  0000A8                     	ds	2
   604  0000AA                     ??_vfpfcnvrt:
   605                           
   606                           ; 1 bytes @ 0x4A
   607  0000AA                     	ds	4
   608  0000AE                     _vfpfcnvrt$541:
   609                           	opt callstack 0
   610                           
   611                           ; 2 bytes @ 0x4E
   612  0000AE                     	ds	2
   613  0000B0                     _vfpfcnvrt$542:
   614                           	opt callstack 0
   615                           
   616                           ; 2 bytes @ 0x50
   617  0000B0                     	ds	2
   618  0000B2                     _vfpfcnvrt$546:
   619                           	opt callstack 0
   620                           
   621                           ; 2 bytes @ 0x52
   622  0000B2                     	ds	2
   623  0000B4                     vfpfcnvrt@f:
   624                           	opt callstack 0
   625                           
   626                           ; 4 bytes @ 0x54
   627  0000B4                     	ds	4
   628  0000B8                     vfpfcnvrt@ct:
   629                           	opt callstack 0
   630                           
   631                           ; 3 bytes @ 0x58
   632  0000B8                     	ds	3
   633  0000BB                     vfpfcnvrt@c:
   634                           	opt callstack 0
   635                           
   636                           ; 1 bytes @ 0x5B
   637  0000BB                     	ds	1
   638  0000BC                     ?_vfprintf:
   639                           	opt callstack 0
   640  0000BC                     vfprintf@fp:
   641                           	opt callstack 0
   642                           
   643                           ; 2 bytes @ 0x5C
   644  0000BC                     	ds	2
   645  0000BE                     vfprintf@fmt:
   646                           	opt callstack 0
   647                           
   648                           ; 2 bytes @ 0x5E
   649  0000BE                     	ds	2
   650  0000C0                     vfprintf@ap:
   651                           	opt callstack 0
   652                           
   653                           ; 2 bytes @ 0x60
   654  0000C0                     	ds	2
   655  0000C2                     ?_sprintf:
   656                           	opt callstack 0
   657  0000C2                     sprintf@s:
   658                           	opt callstack 0
   659                           
   660                           ; 2 bytes @ 0x62
   661  0000C2                     	ds	2
   662  0000C4                     sprintf@fmt:
   663                           	opt callstack 0
   664                           
   665                           ; 2 bytes @ 0x64
   666  0000C4                     	ds	8
   667  0000CC                     sprintf@ap:
   668                           	opt callstack 0
   669                           
   670                           ; 2 bytes @ 0x6C
   671  0000CC                     	ds	2
   672  0000CE                     sprintf@f:
   673                           	opt callstack 0
   674                           
   675                           ; 6 bytes @ 0x6E
   676  0000CE                     	ds	6
   677  0000D4                     ??_main_loop:
   678                           
   679                           ; 1 bytes @ 0x74
   680  0000D4                     	ds	9
   681  0000DD                     ??_main:
   682                           
   683                           ; 1 bytes @ 0x7D
   684  0000DD                     	ds	2
   685                           
   686                           	psect	cstackCOMRAM
   687  000001                     __pcstackCOMRAM:
   688                           	opt callstack 0
   689  000001                     ?_strlen:
   690                           	opt callstack 0
   691  000001                     ?___fpclassifyf:
   692                           	opt callstack 0
   693  000001                     ?_isupper:
   694                           	opt callstack 0
   695  000001                     ?_isdigit:
   696                           	opt callstack 0
   697  000001                     ?_strncmp:
   698                           	opt callstack 0
   699  000001                     ?_isspace:
   700                           	opt callstack 0
   701  000001                     ?___wmul:
   702                           	opt callstack 0
   703  000001                     ?___awdiv:
   704                           	opt callstack 0
   705  000001                     ?___awmod:
   706                           	opt callstack 0
   707  000001                     ?___lmul:
   708                           	opt callstack 0
   709  000001                     ?___flneg:
   710                           	opt callstack 0
   711  000001                     ?___fltol:
   712                           	opt callstack 0
   713  000001                     ?___xxtofl:
   714                           	opt callstack 0
   715  000001                     lcd_write@data:
   716                           	opt callstack 0
   717  000001                     ___wmul@multiplier:
   718                           	opt callstack 0
   719  000001                     ___awdiv@dividend:
   720                           	opt callstack 0
   721  000001                     ___awmod@dividend:
   722                           	opt callstack 0
   723  000001                     isdigit@c:
   724                           	opt callstack 0
   725  000001                     isspace@c:
   726                           	opt callstack 0
   727  000001                     isupper@c:
   728                           	opt callstack 0
   729  000001                     fputc@c:
   730                           	opt callstack 0
   731  000001                     strcpy@dest:
   732                           	opt callstack 0
   733  000001                     strlen@s:
   734                           	opt callstack 0
   735  000001                     strncmp@_l:
   736                           	opt callstack 0
   737  000001                     ___lmul@multiplier:
   738                           	opt callstack 0
   739  000001                     ___fleq@ff1:
   740                           	opt callstack 0
   741  000001                     ___flneg@f1:
   742                           	opt callstack 0
   743  000001                     ___fltol@f1:
   744                           	opt callstack 0
   745  000001                     ___xxtofl@val:
   746                           	opt callstack 0
   747  000001                     ___fpclassifyf@x:
   748                           	opt callstack 0
   749                           
   750                           ; 4 bytes @ 0x0
   751  000001                     	ds	1
   752  000002                     lcd_write@longdelay:
   753                           	opt callstack 0
   754                           
   755                           ; 1 bytes @ 0x1
   756  000002                     	ds	1
   757  000003                     ??_isupper:
   758  000003                     ??_isdigit:
   759  000003                     ??_isspace:
   760  000003                     ??_lcd_write:
   761  000003                     ___wmul@multiplicand:
   762                           	opt callstack 0
   763  000003                     ___awdiv@divisor:
   764                           	opt callstack 0
   765  000003                     ___awmod@divisor:
   766                           	opt callstack 0
   767  000003                     fputc@fp:
   768                           	opt callstack 0
   769  000003                     strcpy@src:
   770                           	opt callstack 0
   771  000003                     strlen@a:
   772                           	opt callstack 0
   773  000003                     strncmp@_r:
   774                           	opt callstack 0
   775                           
   776                           ; 2 bytes @ 0x2
   777  000003                     	ds	1
   778  000004                     lcd_write@rs:
   779                           	opt callstack 0
   780                           
   781                           ; 1 bytes @ 0x3
   782  000004                     	ds	1
   783  000005                     ??_fputc:
   784  000005                     ??___fpclassifyf:
   785  000005                     ??_strcpy:
   786  000005                     ??___fltol:
   787  000005                     ??___xxtofl:
   788  000005                     lcd_init@shift:
   789                           	opt callstack 0
   790  000005                     lcd_set_data_addr@addr:
   791                           	opt callstack 0
   792  000005                     ___awdiv@counter:
   793                           	opt callstack 0
   794  000005                     ___awmod@counter:
   795                           	opt callstack 0
   796  000005                     lcd_print@string:
   797                           	opt callstack 0
   798  000005                     ___wmul@product:
   799                           	opt callstack 0
   800  000005                     strncmp@n:
   801                           	opt callstack 0
   802  000005                     ___lmul@multiplicand:
   803                           	opt callstack 0
   804  000005                     ___fleq@ff2:
   805                           	opt callstack 0
   806                           
   807                           ; 4 bytes @ 0x4
   808  000005                     	ds	1
   809  000006                     lcd_init@cursor:
   810                           	opt callstack 0
   811  000006                     ___awdiv@sign:
   812                           	opt callstack 0
   813  000006                     ___awmod@sign:
   814                           	opt callstack 0
   815                           
   816                           ; 1 bytes @ 0x5
   817  000006                     	ds	1
   818  000007                     ??_lcd_print:
   819  000007                     ??_strncmp:
   820  000007                     ?_tolower:
   821                           	opt callstack 0
   822  000007                     lcd_init@cursorblink:
   823                           	opt callstack 0
   824  000007                     _isspace$1048:
   825                           	opt callstack 0
   826  000007                     ___awdiv@quotient:
   827                           	opt callstack 0
   828  000007                     strcpy@s:
   829                           	opt callstack 0
   830  000007                     tolower@c:
   831                           	opt callstack 0
   832                           
   833                           ; 2 bytes @ 0x6
   834  000007                     	ds	1
   835  000008                     ?_atoi:
   836                           	opt callstack 0
   837  000008                     lcd_init@on:
   838                           	opt callstack 0
   839  000008                     atoi@s:
   840                           	opt callstack 0
   841  000008                     strncmp@l:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x7
   845  000008                     	ds	1
   846  000009                     ??_lcd_init:
   847  000009                     ??_tolower:
   848  000009                     ??___fleq:
   849  000009                     lcd_print@i:
   850                           	opt callstack 0
   851  000009                     ___fltol@sign1:
   852                           	opt callstack 0
   853  000009                     ___xxtofl@sign:
   854                           	opt callstack 0
   855  000009                     ___fpclassifyf@e:
   856                           	opt callstack 0
   857  000009                     strcpy@d:
   858                           	opt callstack 0
   859  000009                     ___lmul@product:
   860                           	opt callstack 0
   861                           
   862                           ; 4 bytes @ 0x8
   863  000009                     	ds	1
   864  00000A                     ??_atoi:
   865  00000A                     lcd_init@inc:
   866                           	opt callstack 0
   867  00000A                     ___fltol@exp1:
   868                           	opt callstack 0
   869  00000A                     ___xxtofl@exp:
   870                           	opt callstack 0
   871  00000A                     fputs@s:
   872                           	opt callstack 0
   873  00000A                     strncmp@r:
   874                           	opt callstack 0
   875                           
   876                           ; 2 bytes @ 0x9
   877  00000A                     	ds	1
   878  00000B                     ___xxtofl@arg:
   879                           	opt callstack 0
   880  00000B                     ___fpclassifyf@u:
   881                           	opt callstack 0
   882                           
   883                           ; 4 bytes @ 0xA
   884  00000B                     	ds	1
   885  00000C                     fputs@fp:
   886                           	opt callstack 0
   887                           
   888                           ; 2 bytes @ 0xB
   889  00000C                     	ds	1
   890  00000D                     ?___lldiv:
   891                           	opt callstack 0
   892  00000D                     _tolower$1133:
   893                           	opt callstack 0
   894  00000D                     ___lldiv@dividend:
   895                           	opt callstack 0
   896                           
   897                           ; 4 bytes @ 0xC
   898  00000D                     	ds	1
   899  00000E                     fputs@c:
   900                           	opt callstack 0
   901  00000E                     atoi@neg:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0xD
   905  00000E                     	ds	1
   906  00000F                     ?___fladd:
   907                           	opt callstack 0
   908  00000F                     fputs@i:
   909                           	opt callstack 0
   910  00000F                     ___fladd@b:
   911                           	opt callstack 0
   912                           
   913                           ; 4 bytes @ 0xE
   914  00000F                     	ds	1
   915  000010                     _atoi$1017:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0xF
   919  000010                     	ds	1
   920  000011                     ?_pad:
   921                           	opt callstack 0
   922  000011                     pad@fp:
   923                           	opt callstack 0
   924  000011                     ___lldiv@divisor:
   925                           	opt callstack 0
   926                           
   927                           ; 4 bytes @ 0x10
   928  000011                     	ds	1
   929  000012                     _atoi$1019:
   930                           	opt callstack 0
   931                           
   932                           ; 2 bytes @ 0x11
   933  000012                     	ds	1
   934  000013                     pad@buf:
   935                           	opt callstack 0
   936  000013                     ___fladd@a:
   937                           	opt callstack 0
   938                           
   939                           ; 4 bytes @ 0x12
   940  000013                     	ds	1
   941  000014                     _atoi$1018:
   942                           	opt callstack 0
   943                           
   944                           ; 1 bytes @ 0x13
   945  000014                     	ds	1
   946  000015                     pad@p:
   947                           	opt callstack 0
   948  000015                     atoi@n:
   949                           	opt callstack 0
   950  000015                     ___lldiv@quotient:
   951                           	opt callstack 0
   952                           
   953                           ; 4 bytes @ 0x14
   954  000015                     	ds	2
   955  000017                     ??___fladd:
   956  000017                     ??_pad:
   957                           
   958                           ; 1 bytes @ 0x16
   959  000017                     	ds	1
   960  000018                     pad@i:
   961                           	opt callstack 0
   962                           
   963                           ; 2 bytes @ 0x17
   964  000018                     	ds	1
   965  000019                     ___lldiv@counter:
   966                           	opt callstack 0
   967                           
   968                           ; 1 bytes @ 0x18
   969  000019                     	ds	1
   970  00001A                     ?___llmod:
   971                           	opt callstack 0
   972  00001A                     pad@w:
   973                           	opt callstack 0
   974  00001A                     setLED@r:
   975                           	opt callstack 0
   976  00001A                     ___llmod@dividend:
   977                           	opt callstack 0
   978                           
   979                           ; 4 bytes @ 0x19
   980  00001A                     	ds	1
   981  00001B                     ___fladd@signs:
   982                           	opt callstack 0
   983                           
   984                           ; 1 bytes @ 0x1A
   985  00001B                     	ds	1
   986  00001C                     ___fladd@aexp:
   987                           	opt callstack 0
   988                           
   989                           ; 1 bytes @ 0x1B
   990  00001C                     	ds	1
   991  00001D                     ___fladd@bexp:
   992                           	opt callstack 0
   993                           
   994                           ; 1 bytes @ 0x1C
   995  00001D                     	ds	1
   996  00001E                     ___fladd@grs:
   997                           	opt callstack 0
   998  00001E                     setLED@g:
   999                           	opt callstack 0
  1000  00001E                     ___llmod@divisor:
  1001                           	opt callstack 0
  1002                           
  1003                           ; 4 bytes @ 0x1D
  1004  00001E                     	ds	1
  1005  00001F                     ?___fldiv:
  1006                           	opt callstack 0
  1007  00001F                     ___fldiv@b:
  1008                           	opt callstack 0
  1009                           
  1010                           ; 4 bytes @ 0x1E
  1011  00001F                     	ds	3
  1012  000022                     ___llmod@counter:
  1013                           	opt callstack 0
  1014  000022                     setLED@b:
  1015                           	opt callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x21
  1018  000022                     	ds	1
  1019  000023                     ___fldiv@a:
  1020                           	opt callstack 0
  1021                           
  1022                           ; 4 bytes @ 0x22
  1023  000023                     	ds	3
  1024  000026                     _setLED$291:
  1025                           	opt callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x25
  1028  000026                     	ds	1
  1029  000027                     ??___fldiv:
  1030                           
  1031                           ; 1 bytes @ 0x26
  1032  000027                     	ds	3
  1033  00002A                     _setLED$292:
  1034                           	opt callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x29
  1037  00002A                     	ds	1
  1038  00002B                     ___fldiv@rem:
  1039                           	opt callstack 0
  1040                           
  1041                           ; 4 bytes @ 0x2A
  1042  00002B                     	ds	3
  1043  00002E                     _setLED$293:
  1044                           	opt callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x2D
  1047  00002E                     	ds	1
  1048  00002F                     ___fldiv@sign:
  1049                           	opt callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x2E
  1052  00002F                     	ds	1
  1053  000030                     ___fldiv@new_exp:
  1054                           	opt callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x2F
  1057  000030                     	ds	2
  1058  000032                     _setLED$294:
  1059                           	opt callstack 0
  1060  000032                     ___fldiv@grs:
  1061                           	opt callstack 0
  1062                           
  1063                           ; 4 bytes @ 0x31
  1064  000032                     	ds	4
  1065  000036                     ___fldiv@bexp:
  1066                           	opt callstack 0
  1067  000036                     _setLED$295:
  1068                           	opt callstack 0
  1069                           
  1070                           ; 4 bytes @ 0x35
  1071  000036                     	ds	1
  1072  000037                     ___fldiv@aexp:
  1073                           	opt callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x36
  1076  000037                     	ds	1
  1077  000038                     ?_floorf:
  1078                           	opt callstack 0
  1079  000038                     ?___flmul:
  1080                           	opt callstack 0
  1081  000038                     ___flmul@b:
  1082                           	opt callstack 0
  1083  000038                     floorf@x:
  1084                           	opt callstack 0
  1085                           
  1086                           ; 4 bytes @ 0x37
  1087  000038                     	ds	2
  1088  00003A                     _setLED$296:
  1089                           	opt callstack 0
  1090                           
  1091                           ; 4 bytes @ 0x39
  1092  00003A                     	ds	2
  1093  00003C                     ??_floorf:
  1094  00003C                     ___flmul@a:
  1095                           	opt callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x3B
  1098  00003C                     	ds	2
  1099  00003E                     setLED@sr:
  1100                           	opt callstack 0
  1101                           
  1102                           ; 4 bytes @ 0x3D
  1103  00003E                     	ds	2
  1104  000040                     ??___flmul:
  1105                           
  1106                           ; 1 bytes @ 0x3F
  1107  000040                     	ds	2
  1108  000042                     setLED@sg:
  1109                           	opt callstack 0
  1110  000042                     floorf@m:
  1111                           	opt callstack 0
  1112                           
  1113                           ; 4 bytes @ 0x41
  1114  000042                     	ds	2
  1115  000044                     ___flmul@sign:
  1116                           	opt callstack 0
  1117                           
  1118                           ; 1 bytes @ 0x43
  1119  000044                     	ds	1
  1120  000045                     ___flmul@grs:
  1121                           	opt callstack 0
  1122                           
  1123                           ; 4 bytes @ 0x44
  1124  000045                     	ds	1
  1125  000046                     floorf@e:
  1126                           	opt callstack 0
  1127  000046                     setLED@sb:
  1128                           	opt callstack 0
  1129                           
  1130                           ; 4 bytes @ 0x45
  1131  000046                     	ds	2
  1132  000048                     floorf@u:
  1133                           	opt callstack 0
  1134                           
  1135                           ; 4 bytes @ 0x47
  1136  000048                     	ds	1
  1137  000049                     ___flmul@aexp:
  1138                           	opt callstack 0
  1139                           
  1140                           ; 1 bytes @ 0x48
  1141  000049                     	ds	1
  1142  00004A                     ___flmul@bexp:
  1143                           	opt callstack 0
  1144                           
  1145                           ; 1 bytes @ 0x49
  1146  00004A                     	ds	1
  1147  00004B                     ___flmul@prod:
  1148                           	opt callstack 0
  1149                           
  1150                           ; 4 bytes @ 0x4A
  1151  00004B                     	ds	4
  1152  00004F                     ___flmul@temp:
  1153                           	opt callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x4E
  1156  00004F                     	ds	2
  1157  000051                     ?___flsub:
  1158                           	opt callstack 0
  1159  000051                     ___flge@ff1:
  1160                           	opt callstack 0
  1161  000051                     ___flsub@b:
  1162                           	opt callstack 0
  1163                           
  1164                           ; 4 bytes @ 0x50
  1165  000051                     	ds	4
  1166  000055                     ___flge@ff2:
  1167                           	opt callstack 0
  1168  000055                     ___flsub@a:
  1169                           	opt callstack 0
  1170                           
  1171                           ; 4 bytes @ 0x54
  1172  000055                     	ds	4
  1173  000059                     ??___flge:
  1174                           
  1175                           ; 1 bytes @ 0x58
  1176  000059                     	ds	4
  1177  00005D                     vfprintf@cfmt:
  1178                           	opt callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x5C
  1181  00005D                     	ds	2
  1182  00005F                     
  1183                           ; 1 bytes @ 0x5E
  1184 ;;
  1185 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1186 ;;
  1187 ;; *************** function _main *****************
  1188 ;; Defined at:
  1189 ;;		line 168 in file "main.c"
  1190 ;; Parameters:    Size  Location     Type
  1191 ;;		None
  1192 ;; Auto vars:     Size  Location     Type
  1193 ;;		None
  1194 ;; Return value:  Size  Location     Type
  1195 ;;                  1    wreg      void 
  1196 ;; Registers used:
  1197 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1198 ;; Tracked objects:
  1199 ;;		On entry : 0/0
  1200 ;;		On exit  : 0/0
  1201 ;;		Unchanged: 0/0
  1202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1205 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1206 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1207 ;;Total ram usage:        2 bytes
  1208 ;; Hardware stack levels required when called:    9
  1209 ;; This function calls:
  1210 ;;		_lcd_init
  1211 ;;		_lcd_print
  1212 ;;		_main_loop
  1213 ;; This function is called by:
  1214 ;;		Startup code after reset
  1215 ;; This function uses a non-reentrant model
  1216 ;;
  1217                           
  1218                           	psect	text0
  1219  005386                     __ptext0:
  1220                           	opt callstack 0
  1221  005386                     _main:
  1222                           	opt callstack 22
  1223  005386                     
  1224                           ;main.c: 169:     TRISA = 0b00000000;
  1225  005386  0E00               	movlw	0
  1226  005388  6EC2               	movwf	194,c	;volatile
  1227                           
  1228                           ;main.c: 170:     PORTA = 0b00000000;
  1229  00538A  0E00               	movlw	0
  1230  00538C  6ECA               	movwf	202,c	;volatile
  1231                           
  1232                           ;main.c: 171:     ANSELA = 0b00000000;
  1233  00538E  0E00               	movlw	0
  1234  005390  013A               	movlb	58	; () banked
  1235  005392  6F40               	movwf	64,b	;volatile
  1236                           
  1237                           ;main.c: 172:     WPUA = 0b00000000;
  1238  005394  0E00               	movlw	0
  1239  005396  6F41               	movwf	65,b	;volatile
  1240  005398                     
  1241                           ; BSR set to: 58
  1242                           ;main.c: 173:     INLVLA = 0b11111111;
  1243  005398  6944               	setf	68,b	;volatile
  1244  00539A                     
  1245                           ; BSR set to: 58
  1246                           ;main.c: 174:     SLRCONA = 0b11111111;
  1247  00539A  6943               	setf	67,b	;volatile
  1248                           
  1249                           ;main.c: 175:     ODCONA = 0b00000000;
  1250  00539C  0E00               	movlw	0
  1251  00539E  6F42               	movwf	66,b	;volatile
  1252                           
  1253                           ;main.c: 177:     TRISB = 0b11001100;
  1254  0053A0  0ECC               	movlw	204
  1255  0053A2  6EC3               	movwf	195,c	;volatile
  1256                           
  1257                           ;main.c: 178:     PORTB = 0b00010000;
  1258  0053A4  0E10               	movlw	16
  1259  0053A6  6ECB               	movwf	203,c	;volatile
  1260                           
  1261                           ;main.c: 179:     ANSELB = 0b00000000;
  1262  0053A8  0E00               	movlw	0
  1263  0053AA  6F50               	movwf	80,b	;volatile
  1264                           
  1265                           ;main.c: 180:     WPUB = 0b11000000;
  1266  0053AC  0EC0               	movlw	192
  1267  0053AE  6F51               	movwf	81,b	;volatile
  1268  0053B0                     
  1269                           ; BSR set to: 58
  1270                           ;main.c: 181:     INLVLB = 0b11111111;
  1271  0053B0  6954               	setf	84,b	;volatile
  1272  0053B2                     
  1273                           ; BSR set to: 58
  1274                           ;main.c: 182:     SLRCONB = 0b11111111;
  1275  0053B2  6953               	setf	83,b	;volatile
  1276                           
  1277                           ;main.c: 183:     ODCONB = 0b00000000;
  1278  0053B4  0E00               	movlw	0
  1279  0053B6  6F52               	movwf	82,b	;volatile
  1280                           
  1281                           ;main.c: 185:     TRISC = 0b01101110;
  1282  0053B8  0E6E               	movlw	110
  1283  0053BA  6EC4               	movwf	196,c	;volatile
  1284                           
  1285                           ;main.c: 186:     PORTC = 0b00000000;
  1286  0053BC  0E00               	movlw	0
  1287  0053BE  6ECC               	movwf	204,c	;volatile
  1288                           
  1289                           ;main.c: 187:     ANSELC = 0b01100000;
  1290  0053C0  0E60               	movlw	96
  1291  0053C2  6F60               	movwf	96,b	;volatile
  1292                           
  1293                           ;main.c: 188:     WPUC = 0b00001110;
  1294  0053C4  0E0E               	movlw	14
  1295  0053C6  6F61               	movwf	97,b	;volatile
  1296  0053C8                     
  1297                           ; BSR set to: 58
  1298                           ;main.c: 189:     INLVLC = 0b11111111;
  1299  0053C8  6964               	setf	100,b	;volatile
  1300  0053CA                     
  1301                           ; BSR set to: 58
  1302                           ;main.c: 190:     SLRCONC = 0b11111111;
  1303  0053CA  6963               	setf	99,b	;volatile
  1304                           
  1305                           ;main.c: 191:     ODCONC = 0b00000000;
  1306  0053CC  0E00               	movlw	0
  1307  0053CE  6F62               	movwf	98,b	;volatile
  1308                           
  1309                           ;main.c: 193:     TRISD = 0b00001111;
  1310  0053D0  0E0F               	movlw	15
  1311  0053D2  6EC5               	movwf	197,c	;volatile
  1312                           
  1313                           ;main.c: 194:     PORTD = 0b00000000;
  1314  0053D4  0E00               	movlw	0
  1315  0053D6  6ECD               	movwf	205,c	;volatile
  1316                           
  1317                           ;main.c: 195:     ANSELD = 0b00001000;
  1318  0053D8  0E08               	movlw	8
  1319  0053DA  6F70               	movwf	112,b	;volatile
  1320                           
  1321                           ;main.c: 196:     WPUD = 0b00000111;
  1322  0053DC  0E07               	movlw	7
  1323  0053DE  6F71               	movwf	113,b	;volatile
  1324  0053E0                     
  1325                           ; BSR set to: 58
  1326                           ;main.c: 197:     INLVLD = 0b11111111;
  1327  0053E0  6974               	setf	116,b	;volatile
  1328  0053E2                     
  1329                           ; BSR set to: 58
  1330                           ;main.c: 198:     SLRCOND = 0b11111111;
  1331  0053E2  6973               	setf	115,b	;volatile
  1332                           
  1333                           ;main.c: 199:     ODCOND = 0b00000000;
  1334  0053E4  0E00               	movlw	0
  1335  0053E6  6F72               	movwf	114,b	;volatile
  1336                           
  1337                           ;main.c: 201:     TRISE = 0b11111000;
  1338  0053E8  0EF8               	movlw	248
  1339  0053EA  6EC6               	movwf	198,c	;volatile
  1340                           
  1341                           ;main.c: 202:     PORTE = 0b00000100;
  1342  0053EC  0E04               	movlw	4
  1343  0053EE  6ECE               	movwf	206,c	;volatile
  1344                           
  1345                           ;main.c: 203:     ANSELE = 0b11110000;
  1346  0053F0  0EF0               	movlw	240
  1347  0053F2  6F80               	movwf	128,b	;volatile
  1348                           
  1349                           ;main.c: 204:     WPUE = 0b00001000;
  1350  0053F4  0E08               	movlw	8
  1351  0053F6  6F81               	movwf	129,b	;volatile
  1352  0053F8                     
  1353                           ; BSR set to: 58
  1354                           ;main.c: 205:     INLVLE = 0b11111111;
  1355  0053F8  6984               	setf	132,b	;volatile
  1356  0053FA                     
  1357                           ; BSR set to: 58
  1358                           ;main.c: 206:     SLRCONE = 0b11111111;
  1359  0053FA  6983               	setf	131,b	;volatile
  1360                           
  1361                           ;main.c: 207:     ODCONE = 0b00000000;
  1362  0053FC  0E00               	movlw	0
  1363  0053FE  6F82               	movwf	130,b	;volatile
  1364                           
  1365                           ;main.c: 209:     PMD0 = 0b01111111;
  1366  005400  0E7F               	movlw	127
  1367  005402  0139               	movlb	57	; () banked
  1368  005404  6FC0               	movwf	192,b	;volatile
  1369                           
  1370                           ;main.c: 210:     PMD1 = 0b11111011;
  1371  005406  0EFB               	movlw	251
  1372  005408  6FC1               	movwf	193,b	;volatile
  1373                           
  1374                           ;main.c: 211:     PMD2 = 0b01000111;
  1375  00540A  0E47               	movlw	71
  1376  00540C  6FC2               	movwf	194,b	;volatile
  1377                           
  1378                           ;main.c: 212:     PMD3 = 0b01010001;
  1379  00540E  0E51               	movlw	81
  1380  005410  6FC3               	movwf	195,b	;volatile
  1381                           
  1382                           ;main.c: 213:     PMD4 = 0b11100000;
  1383  005412  0EE0               	movlw	224
  1384  005414  6FC4               	movwf	196,b	;volatile
  1385                           
  1386                           ;main.c: 214:     PMD5 = 0b00110111;
  1387  005416  0E37               	movlw	55
  1388  005418  6FC5               	movwf	197,b	;volatile
  1389                           
  1390                           ;main.c: 215:     PMD6 = 0b00111111;
  1391  00541A  0E3F               	movlw	63
  1392  00541C  6FC6               	movwf	198,b	;volatile
  1393                           
  1394                           ;main.c: 216:     PMD7 = 0b00000011;
  1395  00541E  0E03               	movlw	3
  1396  005420  6FC7               	movwf	199,b	;volatile
  1397                           
  1398                           ;main.c: 218:     ADCON0 = 0b10000100;
  1399  005422  0E84               	movlw	132
  1400  005424  013E               	movlb	62	; () banked
  1401  005426  6FF8               	movwf	248,b	;volatile
  1402                           
  1403                           ;main.c: 219:     ADCON1 = 0b00000000;
  1404  005428  0E00               	movlw	0
  1405  00542A  6FF9               	movwf	249,b	;volatile
  1406                           
  1407                           ;main.c: 220:     ADCON2 = 0b00000000;
  1408  00542C  0E00               	movlw	0
  1409  00542E  6FFA               	movwf	250,b	;volatile
  1410                           
  1411                           ;main.c: 221:     ADCON3 = 0b00000000;
  1412  005430  0E00               	movlw	0
  1413  005432  6FFB               	movwf	251,b	;volatile
  1414                           
  1415                           ;main.c: 222:     ADCLK = 0b00011111;
  1416  005434  0E1F               	movlw	31
  1417  005436  6FFF               	movwf	255,b	;volatile
  1418                           
  1419                           ;main.c: 223:     ADREF = 0b00000000;
  1420  005438  0E00               	movlw	0
  1421  00543A  6FFD               	movwf	253,b	;volatile
  1422                           
  1423                           ;main.c: 225:     RC7PPS = 0b001010;
  1424  00543C  0E0A               	movlw	10
  1425  00543E  013A               	movlb	58	; () banked
  1426  005440  6F17               	movwf	23,b	;volatile
  1427                           
  1428                           ;main.c: 226:     RD4PPS = 0b001011;
  1429  005442  0E0B               	movlw	11
  1430  005444  6F1C               	movwf	28,b	;volatile
  1431                           
  1432                           ;main.c: 227:     RD5PPS = 0b001100;
  1433  005446  0E0C               	movlw	12
  1434  005448  6F1D               	movwf	29,b	;volatile
  1435                           
  1436                           ;main.c: 228:     RD6PPS = 0b001110;
  1437  00544A  0E0E               	movlw	14
  1438  00544C  6F1E               	movwf	30,b	;volatile
  1439                           
  1440                           ;main.c: 229:     RD7PPS = 0b010000;
  1441  00544E  0E10               	movlw	16
  1442  005450  6F1F               	movwf	31,b	;volatile
  1443                           
  1444                           ;main.c: 231:     CCPTMRS0 = 0b01010101;
  1445  005452  0E55               	movlw	85
  1446  005454  013F               	movlb	63	; () banked
  1447  005456  6F5E               	movwf	94,b	;volatile
  1448                           
  1449                           ;main.c: 232:     CCP2CON = 0b10001111;
  1450  005458  0E8F               	movlw	143
  1451  00545A  6E7A               	movwf	122,c	;volatile
  1452                           
  1453                           ;main.c: 233:     CCP3CON = 0b10001111;
  1454  00545C  0E8F               	movlw	143
  1455  00545E  6E76               	movwf	118,c	;volatile
  1456                           
  1457                           ;main.c: 234:     CCP4CON = 0b10001111;
  1458  005460  0E8F               	movlw	143
  1459  005462  6E72               	movwf	114,c	;volatile
  1460                           
  1461                           ;main.c: 235:     PWM6CON = 0b10000000;
  1462  005464  0E80               	movlw	128
  1463  005466  6E6A               	movwf	106,c	;volatile
  1464                           
  1465                           ;main.c: 236:     PWM8CON = 0b10000000;
  1466  005468  0E80               	movlw	128
  1467  00546A  6E62               	movwf	98,c	;volatile
  1468  00546C                     
  1469                           ; BSR set to: 63
  1470                           ;main.c: 238:     T2PR = 255;
  1471  00546C  68AB               	setf	171,c	;volatile
  1472                           
  1473                           ;main.c: 239:     T2CLK = 0b0001;
  1474  00546E  0E01               	movlw	1
  1475  005470  6EAE               	movwf	174,c	;volatile
  1476                           
  1477                           ;main.c: 240:     T2CON = 0b10010000;
  1478  005472  0E90               	movlw	144
  1479  005474  6EAC               	movwf	172,c	;volatile
  1480                           
  1481                           ;main.c: 242:     CCPR2L = 0;
  1482  005476  0E00               	movlw	0
  1483  005478  6E78               	movwf	120,c	;volatile
  1484                           
  1485                           ;main.c: 243:     CCPR2H = 0;
  1486  00547A  0E00               	movlw	0
  1487  00547C  6E79               	movwf	121,c	;volatile
  1488                           
  1489                           ;main.c: 244:     CCPR3L = 0;
  1490  00547E  0E00               	movlw	0
  1491  005480  6E74               	movwf	116,c	;volatile
  1492                           
  1493                           ;main.c: 245:     CCPR3H = 0;
  1494  005482  0E00               	movlw	0
  1495  005484  6E75               	movwf	117,c	;volatile
  1496                           
  1497                           ;main.c: 246:     CCPR4L = 0;
  1498  005486  0E00               	movlw	0
  1499  005488  6E70               	movwf	112,c	;volatile
  1500                           
  1501                           ;main.c: 247:     CCPR4H = 0;
  1502  00548A  0E00               	movlw	0
  1503  00548C  6E71               	movwf	113,c	;volatile
  1504  00548E                     
  1505                           ; BSR set to: 63
  1506                           ;main.c: 248:     PWM6DCH = 255;
  1507  00548E  6869               	setf	105,c	;volatile
  1508  005490                     
  1509                           ; BSR set to: 63
  1510                           ;main.c: 249:     PWM6DCL = 255;
  1511  005490  6868               	setf	104,c	;volatile
  1512  005492                     
  1513                           ; BSR set to: 63
  1514                           ;main.c: 250:     PWM8DCH = 255;
  1515  005492  6861               	setf	97,c	;volatile
  1516  005494                     
  1517                           ; BSR set to: 63
  1518                           ;main.c: 251:     PWM8DCL = 255;
  1519  005494  6860               	setf	96,c	;volatile
  1520  005496                     
  1521                           ; BSR set to: 63
  1522                           ;main.c: 253:     PORTBbits.RB4 = 0;
  1523  005496  98CB               	bcf	203,4,c	;volatile
  1524  005498                     
  1525                           ; BSR set to: 63
  1526                           ;main.c: 254:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1527  005498  0E05               	movlw	5
  1528  00549A  0100               	movlb	0	; () banked
  1529  00549C  6FDE               	movwf	(??_main+1)& (0+255),b
  1530  00549E  0E0F               	movlw	15
  1531  0054A0  6FDD               	movwf	??_main& (0+255),b
  1532  0054A2  0EF1               	movlw	241
  1533  0054A4                     u5597:
  1534  0054A4  2EE8               	decfsz	wreg,f,c
  1535  0054A6  D7FE               	bra	u5597
  1536  0054A8  2FDD               	decfsz	??_main& (0+255),f,b
  1537  0054AA  D7FC               	bra	u5597
  1538  0054AC  2FDE               	decfsz	(??_main+1)& (0+255),f,b
  1539  0054AE  D7FA               	bra	u5597
  1540  0054B0                     
  1541                           ;main.c: 255:     PORTBbits.RB4 = 1;
  1542  0054B0  88CB               	bsf	203,4,c	;volatile
  1543  0054B2                     
  1544                           ;main.c: 257:     _delay((unsigned long)((50)*(64000000/4000.0)));
  1545  0054B2  0E05               	movlw	5
  1546  0054B4  0100               	movlb	0	; () banked
  1547  0054B6  6FDE               	movwf	(??_main+1)& (0+255),b
  1548  0054B8  0E0F               	movlw	15
  1549  0054BA  6FDD               	movwf	??_main& (0+255),b
  1550  0054BC  0EF1               	movlw	241
  1551  0054BE                     u5607:
  1552  0054BE  2EE8               	decfsz	wreg,f,c
  1553  0054C0  D7FE               	bra	u5607
  1554  0054C2  2FDD               	decfsz	??_main& (0+255),f,b
  1555  0054C4  D7FC               	bra	u5607
  1556  0054C6  2FDE               	decfsz	(??_main+1)& (0+255),f,b
  1557  0054C8  D7FA               	bra	u5607
  1558  0054CA                     
  1559                           ;main.c: 258:     lcd_init(1, 0, 0, 0, 1);
  1560  0054CA  0E00               	movlw	0
  1561  0054CC  6E05               	movwf	lcd_init@shift^0,c
  1562  0054CE  0E00               	movlw	0
  1563  0054D0  6E06               	movwf	lcd_init@cursor^0,c
  1564  0054D2  0E00               	movlw	0
  1565  0054D4  6E07               	movwf	lcd_init@cursorblink^0,c
  1566  0054D6  0E01               	movlw	1
  1567  0054D8  6E08               	movwf	lcd_init@on^0,c
  1568  0054DA  0E01               	movlw	1
  1569  0054DC  EC28  F030         	call	_lcd_init
  1570  0054E0                     
  1571                           ;main.c: 259:     lcd_print("Hello World!");
  1572  0054E0  0E49               	movlw	low STR_5
  1573  0054E2  6E05               	movwf	lcd_print@string^0,c
  1574  0054E4  0E20               	movlw	high STR_5
  1575  0054E6  6E06               	movwf	(lcd_print@string+1)^0,c
  1576  0054E8  ECDF  F02E         	call	_lcd_print	;wreg free
  1577  0054EC                     l4501:
  1578  0054EC  ECF8  F016         	call	_main_loop	;wreg free
  1579  0054F0  EF76  F02A         	goto	l4501
  1580  0054F4  EFFE  F0FF         	goto	start
  1581  0054F8                     __end_of_main:
  1582                           	opt callstack 0
  1583                           
  1584 ;; *************** function _main_loop *****************
  1585 ;; Defined at:
  1586 ;;		line 102 in file "main.c"
  1587 ;; Parameters:    Size  Location     Type
  1588 ;;		None
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  batmsg         16    0[BANK1 ] unsigned char [16]
  1591 ;;  bat_percent     4   30[BANK1 ] float 
  1592 ;;  sample          4   34[BANK1 ] long 
  1593 ;;  lastAvg         2   26[BANK1 ] unsigned short 
  1594 ;;  res             2   28[BANK1 ] short 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1605 ;;      Locals:         0       0      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1606 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1607 ;;      Totals:         0       9      38       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1608 ;;Total ram usage:       47 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    8
  1611 ;; This function calls:
  1612 ;;		___awdiv
  1613 ;;		___fladd
  1614 ;;		___fldiv
  1615 ;;		___flmul
  1616 ;;		___lldiv
  1617 ;;		___llmod
  1618 ;;		___lmul
  1619 ;;		___xxtofl
  1620 ;;		_lcd_print
  1621 ;;		_lcd_set_data_addr
  1622 ;;		_setLED
  1623 ;;		_sprintf
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           	psect	text1
  1630  002DF0                     __ptext1:
  1631                           	opt callstack 0
  1632  002DF0                     _main_loop:
  1633                           	opt callstack 22
  1634  002DF0                     
  1635                           ;main.c: 103:     static uint32_t counter = 0;;main.c: 104:     static uint32_t sum = 0;
      +                          ;main.c: 105:     static uint16_t last[10];;main.c: 106:     static uint32_t lastSum;;ma
      +                          in.c: 107:     static int16_t pos = 0;;main.c: 109:     ADPCH = 0b010101;
  1636  002DF0  0E15               	movlw	21
  1637  002DF2  013E               	movlb	62	; () banked
  1638  002DF4  6FF1               	movwf	241,b	;volatile
  1639  002DF6                     
  1640                           ; BSR set to: 62
  1641                           ;main.c: 110:     ADCON0bits.GO = 1;
  1642  002DF6  81F8               	bsf	248,0,b	;volatile
  1643                           
  1644                           ;main.c: 111:     while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000.0))
      +                          );
  1645  002DF8  EF02  F017         	goto	l4355
  1646  002DFC                     l4353:
  1647                           
  1648                           ; BSR set to: 62
  1649  002DFC  0E05               	movlw	5
  1650  002DFE                     u5617:
  1651  002DFE  2EE8               	decfsz	wreg,f,c
  1652  002E00  D7FE               	bra	u5617
  1653  002E02  F000               	nop	
  1654  002E04                     l4355:
  1655  002E04  013E               	movlb	62	; () banked
  1656  002E06  B1F8               	btfsc	248,0,b	;volatile
  1657  002E08  EF08  F017         	goto	u5411
  1658  002E0C  EF0A  F017         	goto	u5410
  1659  002E10                     u5411:
  1660  002E10  EFFE  F016         	goto	l4353
  1661  002E14                     u5410:
  1662  002E14                     
  1663                           ; BSR set to: 62
  1664                           ;main.c: 112:     int16_t res = ((ADRESH << 8) | ADRESL) - 1522;
  1665  002E14  51EF               	movf	239,w,b	;volatile
  1666  002E16  006F FBC0  F0D4    	movff	16112,??_main_loop	;volatile
  1667  002E1C  0100               	movlb	0	; () banked
  1668  002E1E  6BD5               	clrf	(??_main_loop+1)& (0+255),b
  1669  002E20  0060  F350  F0D5   	movff	??_main_loop,??_main_loop+1
  1670  002E26  6BD4               	clrf	??_main_loop& (0+255),b
  1671  002E28  13D4               	iorwf	??_main_loop& (0+255),f,b
  1672  002E2A  0E00               	movlw	0
  1673  002E2C  13D5               	iorwf	(??_main_loop+1)& (0+255),f,b
  1674  002E2E  0E0E               	movlw	14
  1675  002E30  25D4               	addwf	??_main_loop& (0+255),w,b
  1676  002E32  0101               	movlb	1	; () banked
  1677  002E34  6F8E               	movwf	main_loop@res& (0+255),b
  1678  002E36  0EFA               	movlw	250
  1679  002E38  0100               	movlb	0	; () banked
  1680  002E3A  21D5               	addwfc	(??_main_loop+1)& (0+255),w,b
  1681  002E3C  0101               	movlb	1	; () banked
  1682  002E3E  6F8F               	movwf	(main_loop@res+1)& (0+255),b
  1683                           
  1684                           ;main.c: 113:     sum += res < 0 ? -res : res;
  1685  002E40  BF8F               	btfsc	(main_loop@res+1)& (0+255),7,b
  1686  002E42  EF25  F017         	goto	u5421
  1687  002E46  EF27  F017         	goto	u5420
  1688  002E4A                     u5421:
  1689  002E4A  EF2F  F017         	goto	l216
  1690  002E4E                     u5420:
  1691  002E4E                     
  1692                           ; BSR set to: 1
  1693  002E4E  0060  F638  F186   	movff	main_loop@res,_main_loop$311
  1694  002E54  0060  F63C  F187   	movff	main_loop@res+1,_main_loop$311+1
  1695  002E5A  EF40  F017         	goto	l4361
  1696  002E5E                     l216:
  1697                           
  1698                           ; BSR set to: 1
  1699  002E5E  0060  F638  F0D4   	movff	main_loop@res,??_main_loop
  1700  002E64  0060  F63C  F0D5   	movff	main_loop@res+1,??_main_loop+1
  1701  002E6A  0100               	movlb	0	; () banked
  1702  002E6C  1FD4               	comf	??_main_loop& (0+255),f,b
  1703  002E6E  1FD5               	comf	(??_main_loop+1)& (0+255),f,b
  1704  002E70  4BD4               	infsnz	??_main_loop& (0+255),f,b
  1705  002E72  2BD5               	incf	(??_main_loop+1)& (0+255),f,b
  1706  002E74  0060  F350  F186   	movff	??_main_loop,_main_loop$311
  1707  002E7A  0060  F354  F187   	movff	??_main_loop+1,_main_loop$311+1
  1708  002E80                     l4361:
  1709  002E80  0060  F618  F0D4   	movff	_main_loop$311,??_main_loop
  1710  002E86  0060  F61C  F0D5   	movff	_main_loop$311+1,??_main_loop+1
  1711  002E8C  0E00               	movlw	0
  1712  002E8E  0100               	movlb	0	; () banked
  1713  002E90  BFD5               	btfsc	(??_main_loop+1)& (0+255),7,b
  1714  002E92  0EFF               	movlw	255
  1715  002E94  6FD6               	movwf	(??_main_loop+2)& (0+255),b
  1716  002E96  6FD7               	movwf	(??_main_loop+3)& (0+255),b
  1717  002E98  51D4               	movf	??_main_loop& (0+255),w,b
  1718  002E9A  0101               	movlb	1	; () banked
  1719  002E9C  2718               	addwf	main_loop@sum& (0+255),f,b
  1720  002E9E  0100               	movlb	0	; () banked
  1721  002EA0  51D5               	movf	(??_main_loop+1)& (0+255),w,b
  1722  002EA2  0101               	movlb	1	; () banked
  1723  002EA4  2319               	addwfc	(main_loop@sum+1)& (0+255),f,b
  1724  002EA6  0100               	movlb	0	; () banked
  1725  002EA8  51D6               	movf	(??_main_loop+2)& (0+255),w,b
  1726  002EAA  0101               	movlb	1	; () banked
  1727  002EAC  231A               	addwfc	(main_loop@sum+2)& (0+255),f,b
  1728  002EAE  0100               	movlb	0	; () banked
  1729  002EB0  51D7               	movf	(??_main_loop+3)& (0+255),w,b
  1730  002EB2  0101               	movlb	1	; () banked
  1731  002EB4  231B               	addwfc	(main_loop@sum+3)& (0+255),f,b
  1732  002EB6                     
  1733                           ; BSR set to: 1
  1734                           ;main.c: 115:     if (counter % 50 == 50 - 1) {
  1735  002EB6  0060  F470  F01A   	movff	main_loop@counter,___llmod@dividend
  1736  002EBC  0060  F474  F01B   	movff	main_loop@counter+1,___llmod@dividend+1
  1737  002EC2  0060  F478  F01C   	movff	main_loop@counter+2,___llmod@dividend+2
  1738  002EC8  0060  F47C  F01D   	movff	main_loop@counter+3,___llmod@dividend+3
  1739  002ECE  0E32               	movlw	50
  1740  002ED0  6E1E               	movwf	___llmod@divisor^0,c
  1741  002ED2  0E00               	movlw	0
  1742  002ED4  6E1F               	movwf	(___llmod@divisor+1)^0,c
  1743  002ED6  0E00               	movlw	0
  1744  002ED8  6E20               	movwf	(___llmod@divisor+2)^0,c
  1745  002EDA  0E00               	movlw	0
  1746  002EDC  6E21               	movwf	(___llmod@divisor+3)^0,c
  1747  002EDE  EC31  F02F         	call	___llmod	;wreg free
  1748  002EE2  0E31               	movlw	49
  1749  002EE4  181A               	xorwf	?___llmod^0,w,c
  1750  002EE6  101B               	iorwf	(?___llmod+1)^0,w,c
  1751  002EE8  101C               	iorwf	(?___llmod+2)^0,w,c
  1752  002EEA  101D               	iorwf	(?___llmod+3)^0,w,c
  1753  002EEC  A4D8               	btfss	status,2,c
  1754  002EEE  EF7B  F017         	goto	u5431
  1755  002EF2  EF7D  F017         	goto	u5430
  1756  002EF6                     u5431:
  1757  002EF6  EFC3  F019         	goto	l4405
  1758  002EFA                     u5430:
  1759  002EFA                     
  1760                           ;main.c: 116:         int32_t sample = sum / 50;
  1761  002EFA  0060  F460  F00D   	movff	main_loop@sum,___lldiv@dividend
  1762  002F00  0060  F464  F00E   	movff	main_loop@sum+1,___lldiv@dividend+1
  1763  002F06  0060  F468  F00F   	movff	main_loop@sum+2,___lldiv@dividend+2
  1764  002F0C  0060  F46C  F010   	movff	main_loop@sum+3,___lldiv@dividend+3
  1765  002F12  0E32               	movlw	50
  1766  002F14  6E11               	movwf	___lldiv@divisor^0,c
  1767  002F16  0E00               	movlw	0
  1768  002F18  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1769  002F1A  0E00               	movlw	0
  1770  002F1C  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1771  002F1E  0E00               	movlw	0
  1772  002F20  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1773  002F22  EC34  F02E         	call	___lldiv	;wreg free
  1774  002F26  0060  F034  F194   	movff	?___lldiv,main_loop@sample
  1775  002F2C  0060  F038  F195   	movff	?___lldiv+1,main_loop@sample+1
  1776  002F32  0060  F03C  F196   	movff	?___lldiv+2,main_loop@sample+2
  1777  002F38  0060  F040  F197   	movff	?___lldiv+3,main_loop@sample+3
  1778  002F3E                     
  1779                           ;main.c: 117:         sample -= 23;
  1780  002F3E  0EE9               	movlw	233
  1781  002F40  0101               	movlb	1	; () banked
  1782  002F42  2794               	addwf	main_loop@sample& (0+255),f,b
  1783  002F44  0EFF               	movlw	255
  1784  002F46  2395               	addwfc	(main_loop@sample+1)& (0+255),f,b
  1785  002F48  0EFF               	movlw	255
  1786  002F4A  2396               	addwfc	(main_loop@sample+2)& (0+255),f,b
  1787  002F4C  0EFF               	movlw	255
  1788  002F4E  2397               	addwfc	(main_loop@sample+3)& (0+255),f,b
  1789  002F50                     
  1790                           ; BSR set to: 1
  1791                           ;main.c: 118:         if (sample < 0) sample = 0;
  1792  002F50  BF97               	btfsc	(main_loop@sample+3)& (0+255),7,b
  1793  002F52  EFAF  F017         	goto	u5440
  1794  002F56  EFAD  F017         	goto	u5441
  1795  002F5A                     u5441:
  1796  002F5A  EFB7  F017         	goto	l4373
  1797  002F5E                     u5440:
  1798  002F5E                     
  1799                           ; BSR set to: 1
  1800  002F5E  0E00               	movlw	0
  1801  002F60  6F94               	movwf	main_loop@sample& (0+255),b
  1802  002F62  0E00               	movlw	0
  1803  002F64  6F95               	movwf	(main_loop@sample+1)& (0+255),b
  1804  002F66  0E00               	movlw	0
  1805  002F68  6F96               	movwf	(main_loop@sample+2)& (0+255),b
  1806  002F6A  0E00               	movlw	0
  1807  002F6C  6F97               	movwf	(main_loop@sample+3)& (0+255),b
  1808  002F6E                     l4373:
  1809                           
  1810                           ; BSR set to: 1
  1811                           ;main.c: 120:         uint16_t lastAvg = lastSum / 10 / 2;
  1812  002F6E  0060  F450  F00D   	movff	main_loop@lastSum,___lldiv@dividend
  1813  002F74  0060  F454  F00E   	movff	main_loop@lastSum+1,___lldiv@dividend+1
  1814  002F7A  0060  F458  F00F   	movff	main_loop@lastSum+2,___lldiv@dividend+2
  1815  002F80  0060  F45C  F010   	movff	main_loop@lastSum+3,___lldiv@dividend+3
  1816  002F86  0E0A               	movlw	10
  1817  002F88  6E11               	movwf	___lldiv@divisor^0,c
  1818  002F8A  0E00               	movlw	0
  1819  002F8C  6E12               	movwf	(___lldiv@divisor+1)^0,c
  1820  002F8E  0E00               	movlw	0
  1821  002F90  6E13               	movwf	(___lldiv@divisor+2)^0,c
  1822  002F92  0E00               	movlw	0
  1823  002F94  6E14               	movwf	(___lldiv@divisor+3)^0,c
  1824  002F96  EC34  F02E         	call	___lldiv	;wreg free
  1825  002F9A  90D8               	bcf	status,0,c
  1826  002F9C  3210               	rrcf	(?___lldiv+3)^0,f,c
  1827  002F9E  320F               	rrcf	(?___lldiv+2)^0,f,c
  1828  002FA0  320E               	rrcf	(?___lldiv+1)^0,f,c
  1829  002FA2  320D               	rrcf	?___lldiv^0,f,c
  1830  002FA4  0060  F034  F18C   	movff	?___lldiv,main_loop@lastAvg
  1831  002FAA  0060  F038  F18D   	movff	?___lldiv+1,main_loop@lastAvg+1
  1832  002FB0                     
  1833                           ;main.c: 123:         pos = (pos > (sample - lastAvg) * 300 ? pos : (sample - lastAvg) *
      +                           300);
  1834  002FB0  0060  F480  F0D4   	movff	main_loop@pos,??_main_loop
  1835  002FB6  0060  F484  F0D5   	movff	main_loop@pos+1,??_main_loop+1
  1836  002FBC  0E00               	movlw	0
  1837  002FBE  0100               	movlb	0	; () banked
  1838  002FC0  BFD5               	btfsc	(??_main_loop+1)& (0+255),7,b
  1839  002FC2  0EFF               	movlw	255
  1840  002FC4  6FD6               	movwf	(??_main_loop+2)& (0+255),b
  1841  002FC6  6FD7               	movwf	(??_main_loop+3)& (0+255),b
  1842  002FC8  0101               	movlb	1	; () banked
  1843  002FCA  518C               	movf	main_loop@lastAvg& (0+255),w,b
  1844  002FCC  0100               	movlb	0	; () banked
  1845  002FCE  6FD8               	movwf	(??_main_loop+4)& (0+255),b
  1846  002FD0  0101               	movlb	1	; () banked
  1847  002FD2  518D               	movf	(main_loop@lastAvg+1)& (0+255),w,b
  1848  002FD4  0100               	movlb	0	; () banked
  1849  002FD6  6FD9               	movwf	(??_main_loop+5)& (0+255),b
  1850  002FD8  6BDA               	clrf	(??_main_loop+6)& (0+255),b
  1851  002FDA  6BDB               	clrf	(??_main_loop+7)& (0+255),b
  1852  002FDC  51D8               	movf	(??_main_loop+4)& (0+255),w,b
  1853  002FDE  0101               	movlb	1	; () banked
  1854  002FE0  5D94               	subwf	main_loop@sample& (0+255),w,b
  1855  002FE2  6E01               	movwf	___lmul@multiplier^0,c
  1856  002FE4  0100               	movlb	0	; () banked
  1857  002FE6  51D9               	movf	(??_main_loop+5)& (0+255),w,b
  1858  002FE8  0101               	movlb	1	; () banked
  1859  002FEA  5995               	subwfb	(main_loop@sample+1)& (0+255),w,b
  1860  002FEC  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1861  002FEE  0100               	movlb	0	; () banked
  1862  002FF0  51DA               	movf	(??_main_loop+6)& (0+255),w,b
  1863  002FF2  0101               	movlb	1	; () banked
  1864  002FF4  5996               	subwfb	(main_loop@sample+2)& (0+255),w,b
  1865  002FF6  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1866  002FF8  0100               	movlb	0	; () banked
  1867  002FFA  51DB               	movf	(??_main_loop+7)& (0+255),w,b
  1868  002FFC  0101               	movlb	1	; () banked
  1869  002FFE  5997               	subwfb	(main_loop@sample+3)& (0+255),w,b
  1870  003000  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1871  003002  0E2C               	movlw	44
  1872  003004  6E05               	movwf	___lmul@multiplicand^0,c
  1873  003006  0E01               	movlw	1
  1874  003008  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1875  00300A  0E00               	movlw	0
  1876  00300C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1877  00300E  0E00               	movlw	0
  1878  003010  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1879  003012  ECEF  F02F         	call	___lmul	;wreg free
  1880  003016  0100               	movlb	0	; () banked
  1881  003018  51D4               	movf	??_main_loop& (0+255),w,b
  1882  00301A  5C01               	subwf	?___lmul^0,w,c
  1883  00301C  51D5               	movf	(??_main_loop+1)& (0+255),w,b
  1884  00301E  5802               	subwfb	(?___lmul+1)^0,w,c
  1885  003020  51D6               	movf	(??_main_loop+2)& (0+255),w,b
  1886  003022  5803               	subwfb	(?___lmul+2)^0,w,c
  1887  003024  5004               	movf	(?___lmul+3)^0,w,c
  1888  003026  0A80               	xorlw	128
  1889  003028  6FDC               	movwf	(??_main_loop+8)& (0+255),b
  1890  00302A  51D7               	movf	(??_main_loop+3)& (0+255),w,b
  1891  00302C  0A80               	xorlw	128
  1892  00302E  59DC               	subwfb	(??_main_loop+8)& (0+255),w,b
  1893  003030  A0D8               	btfss	status,0,c
  1894  003032  EF1D  F018         	goto	u5451
  1895  003036  EF1F  F018         	goto	u5450
  1896  00303A                     u5451:
  1897  00303A  EF54  F018         	goto	l4379
  1898  00303E                     u5450:
  1899  00303E                     
  1900                           ; BSR set to: 0
  1901  00303E  0101               	movlb	1	; () banked
  1902  003040  518C               	movf	main_loop@lastAvg& (0+255),w,b
  1903  003042  0100               	movlb	0	; () banked
  1904  003044  6FD4               	movwf	??_main_loop& (0+255),b
  1905  003046  0101               	movlb	1	; () banked
  1906  003048  518D               	movf	(main_loop@lastAvg+1)& (0+255),w,b
  1907  00304A  0100               	movlb	0	; () banked
  1908  00304C  6FD5               	movwf	(??_main_loop+1)& (0+255),b
  1909  00304E  6BD6               	clrf	(??_main_loop+2)& (0+255),b
  1910  003050  6BD7               	clrf	(??_main_loop+3)& (0+255),b
  1911  003052  51D4               	movf	??_main_loop& (0+255),w,b
  1912  003054  0101               	movlb	1	; () banked
  1913  003056  5D94               	subwf	main_loop@sample& (0+255),w,b
  1914  003058  6E01               	movwf	___lmul@multiplier^0,c
  1915  00305A  0100               	movlb	0	; () banked
  1916  00305C  51D5               	movf	(??_main_loop+1)& (0+255),w,b
  1917  00305E  0101               	movlb	1	; () banked
  1918  003060  5995               	subwfb	(main_loop@sample+1)& (0+255),w,b
  1919  003062  6E02               	movwf	(___lmul@multiplier+1)^0,c
  1920  003064  0100               	movlb	0	; () banked
  1921  003066  51D6               	movf	(??_main_loop+2)& (0+255),w,b
  1922  003068  0101               	movlb	1	; () banked
  1923  00306A  5996               	subwfb	(main_loop@sample+2)& (0+255),w,b
  1924  00306C  6E03               	movwf	(___lmul@multiplier+2)^0,c
  1925  00306E  0100               	movlb	0	; () banked
  1926  003070  51D7               	movf	(??_main_loop+3)& (0+255),w,b
  1927  003072  0101               	movlb	1	; () banked
  1928  003074  5997               	subwfb	(main_loop@sample+3)& (0+255),w,b
  1929  003076  6E04               	movwf	(___lmul@multiplier+3)^0,c
  1930  003078  0E2C               	movlw	44
  1931  00307A  6E05               	movwf	___lmul@multiplicand^0,c
  1932  00307C  0E01               	movlw	1
  1933  00307E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  1934  003080  0E00               	movlw	0
  1935  003082  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  1936  003084  0E00               	movlw	0
  1937  003086  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  1938  003088  ECEF  F02F         	call	___lmul	;wreg free
  1939  00308C  0060  F004  F182   	movff	?___lmul,_main_loop$314
  1940  003092  0060  F008  F183   	movff	?___lmul+1,_main_loop$314+1
  1941  003098  0060  F00C  F184   	movff	?___lmul+2,_main_loop$314+2
  1942  00309E  0060  F010  F185   	movff	?___lmul+3,_main_loop$314+3
  1943  0030A4  EF60  F018         	goto	l4381
  1944  0030A8                     l4379:
  1945                           
  1946                           ; BSR set to: 0
  1947  0030A8  0060  F480  F182   	movff	main_loop@pos,_main_loop$314
  1948  0030AE  0060  F484  F183   	movff	main_loop@pos+1,_main_loop$314+1
  1949  0030B4  0101               	movlb	1	; () banked
  1950  0030B6  0E00               	movlw	0
  1951  0030B8  BF83               	btfsc	(_main_loop$314+1)& (0+255),7,b
  1952  0030BA  0EFF               	movlw	-1
  1953  0030BC  6F84               	movwf	(_main_loop$314+2)& (0+255),b
  1954  0030BE  6F85               	movwf	(_main_loop$314+3)& (0+255),b
  1955  0030C0                     l4381:
  1956  0030C0  0060  F608  F120   	movff	_main_loop$314,main_loop@pos
  1957  0030C6  0060  F60C  F121   	movff	_main_loop$314+1,main_loop@pos+1
  1958  0030CC                     
  1959                           ;main.c: 125:         setLED(pos, 2048 - (pos < 2048 ? pos : 2048), 2048 - (pos < 2048 ?
      +                           pos : 2048));
  1960  0030CC  0101               	movlb	1	; () banked
  1961  0030CE  BF21               	btfsc	(main_loop@pos+1)& (0+255),7,b
  1962  0030D0  EF71  F018         	goto	u5461
  1963  0030D4  0E08               	movlw	8
  1964  0030D6  5D21               	subwf	(main_loop@pos+1)& (0+255),w,b
  1965  0030D8  A0D8               	btfss	status,0,c
  1966  0030DA  EF71  F018         	goto	u5461
  1967  0030DE  EF73  F018         	goto	u5460
  1968  0030E2                     u5461:
  1969  0030E2  EF79  F018         	goto	l226
  1970  0030E6                     u5460:
  1971  0030E6                     
  1972                           ; BSR set to: 1
  1973  0030E6  0E08               	movlw	8
  1974  0030E8  6F89               	movwf	(_main_loop$316+1)& (0+255),b
  1975  0030EA  0E00               	movlw	0
  1976  0030EC  6F88               	movwf	_main_loop$316& (0+255),b
  1977  0030EE  EF7F  F018         	goto	l4387
  1978  0030F2                     l226:
  1979                           
  1980                           ; BSR set to: 1
  1981  0030F2  0060  F480  F188   	movff	main_loop@pos,_main_loop$316
  1982  0030F8  0060  F484  F189   	movff	main_loop@pos+1,_main_loop$316+1
  1983  0030FE                     l4387:
  1984                           
  1985                           ; BSR set to: 1
  1986  0030FE  BF21               	btfsc	(main_loop@pos+1)& (0+255),7,b
  1987  003100  EF89  F018         	goto	u5471
  1988  003104  0E08               	movlw	8
  1989  003106  5D21               	subwf	(main_loop@pos+1)& (0+255),w,b
  1990  003108  A0D8               	btfss	status,0,c
  1991  00310A  EF89  F018         	goto	u5471
  1992  00310E  EF8B  F018         	goto	u5470
  1993  003112                     u5471:
  1994  003112  EF91  F018         	goto	l230
  1995  003116                     u5470:
  1996  003116                     
  1997                           ; BSR set to: 1
  1998  003116  0E08               	movlw	8
  1999  003118  6F8B               	movwf	(_main_loop$317+1)& (0+255),b
  2000  00311A  0E00               	movlw	0
  2001  00311C  6F8A               	movwf	_main_loop$317& (0+255),b
  2002  00311E  EF97  F018         	goto	l4391
  2003  003122                     l230:
  2004                           
  2005                           ; BSR set to: 1
  2006  003122  0060  F480  F18A   	movff	main_loop@pos,_main_loop$317
  2007  003128  0060  F484  F18B   	movff	main_loop@pos+1,_main_loop$317+1
  2008  00312E                     l4391:
  2009                           
  2010                           ; BSR set to: 1
  2011  00312E  0060  F480  F01A   	movff	main_loop@pos,setLED@r
  2012  003134  0060  F484  F01B   	movff	main_loop@pos+1,setLED@r+1
  2013  00313A  0E00               	movlw	0
  2014  00313C  BE1B               	btfsc	(setLED@r+1)^0,7,c
  2015  00313E  0EFF               	movlw	-1
  2016  003140  6E1C               	movwf	(setLED@r+2)^0,c
  2017  003142  6E1D               	movwf	(setLED@r+3)^0,c
  2018  003144  0E00               	movlw	0
  2019  003146  0100               	movlb	0	; () banked
  2020  003148  6FD4               	movwf	??_main_loop& (0+255),b
  2021  00314A  0E08               	movlw	8
  2022  00314C  6FD5               	movwf	(??_main_loop+1)& (0+255),b
  2023  00314E  0101               	movlb	1	; () banked
  2024  003150  518A               	movf	_main_loop$317& (0+255),w,b
  2025  003152  0100               	movlb	0	; () banked
  2026  003154  5FD4               	subwf	??_main_loop& (0+255),f,b
  2027  003156  0101               	movlb	1	; () banked
  2028  003158  518B               	movf	(_main_loop$317+1)& (0+255),w,b
  2029  00315A  0100               	movlb	0	; () banked
  2030  00315C  5BD5               	subwfb	(??_main_loop+1)& (0+255),f,b
  2031  00315E  0060  F350  F01E   	movff	??_main_loop,setLED@g
  2032  003164  0060  F354  F01F   	movff	??_main_loop+1,setLED@g+1
  2033  00316A  0E00               	movlw	0
  2034  00316C  BE1F               	btfsc	(setLED@g+1)^0,7,c
  2035  00316E  0EFF               	movlw	-1
  2036  003170  6E20               	movwf	(setLED@g+2)^0,c
  2037  003172  6E21               	movwf	(setLED@g+3)^0,c
  2038  003174  0E00               	movlw	0
  2039  003176  6FD6               	movwf	(??_main_loop+2)& (0+255),b
  2040  003178  0E08               	movlw	8
  2041  00317A  6FD7               	movwf	(??_main_loop+3)& (0+255),b
  2042  00317C  0101               	movlb	1	; () banked
  2043  00317E  5188               	movf	_main_loop$316& (0+255),w,b
  2044  003180  0100               	movlb	0	; () banked
  2045  003182  5FD6               	subwf	(??_main_loop+2)& (0+255),f,b
  2046  003184  0101               	movlb	1	; () banked
  2047  003186  5189               	movf	(_main_loop$316+1)& (0+255),w,b
  2048  003188  0100               	movlb	0	; () banked
  2049  00318A  5BD7               	subwfb	(??_main_loop+3)& (0+255),f,b
  2050  00318C  0060  F358  F022   	movff	??_main_loop+2,setLED@b
  2051  003192  0060  F35C  F023   	movff	??_main_loop+3,setLED@b+1
  2052  003198  0E00               	movlw	0
  2053  00319A  BE23               	btfsc	(setLED@b+1)^0,7,c
  2054  00319C  0EFF               	movlw	-1
  2055  00319E  6E24               	movwf	(setLED@b+2)^0,c
  2056  0031A0  6E25               	movwf	(setLED@b+3)^0,c
  2057  0031A2  EC44  F025         	call	_setLED	;wreg free
  2058                           
  2059                           ;main.c: 127:         pos = (pos - (pos / 70 + 1) > 0 ? pos - (pos / 70 + 1) : 0);
  2060  0031A6  0EFF               	movlw	255
  2061  0031A8  0100               	movlb	0	; () banked
  2062  0031AA  6FD4               	movwf	??_main_loop& (0+255),b
  2063  0031AC  0EFF               	movlw	255
  2064  0031AE  6FD5               	movwf	(??_main_loop+1)& (0+255),b
  2065  0031B0  0060  F480  F001   	movff	main_loop@pos,___awdiv@dividend
  2066  0031B6  0060  F484  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2067  0031BC  0E00               	movlw	0
  2068  0031BE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2069  0031C0  0E46               	movlw	70
  2070  0031C2  6E03               	movwf	___awdiv@divisor^0,c
  2071  0031C4  EC76  F02D         	call	___awdiv	;wreg free
  2072  0031C8  0060  F480  F0D6   	movff	main_loop@pos,??_main_loop+2
  2073  0031CE  0060  F484  F0D7   	movff	main_loop@pos+1,??_main_loop+3
  2074  0031D4  5001               	movf	?___awdiv^0,w,c
  2075  0031D6  0100               	movlb	0	; () banked
  2076  0031D8  5FD6               	subwf	(??_main_loop+2)& (0+255),f,b
  2077  0031DA  5002               	movf	(?___awdiv+1)^0,w,c
  2078  0031DC  5BD7               	subwfb	(??_main_loop+3)& (0+255),f,b
  2079  0031DE  51D4               	movf	??_main_loop& (0+255),w,b
  2080  0031E0  27D6               	addwf	(??_main_loop+2)& (0+255),f,b
  2081  0031E2  51D5               	movf	(??_main_loop+1)& (0+255),w,b
  2082  0031E4  23D7               	addwfc	(??_main_loop+3)& (0+255),f,b
  2083  0031E6  BFD7               	btfsc	(??_main_loop+3)& (0+255),7,b
  2084  0031E8  EF00  F019         	goto	u5480
  2085  0031EC  51D7               	movf	(??_main_loop+3)& (0+255),w,b
  2086  0031EE  E106               	bnz	u5481
  2087  0031F0  05D6               	decf	(??_main_loop+2)& (0+255),w,b
  2088  0031F2  B0D8               	btfsc	status,0,c
  2089  0031F4  EFFE  F018         	goto	u5481
  2090  0031F8  EF00  F019         	goto	u5480
  2091  0031FC                     u5481:
  2092  0031FC  EF07  F019         	goto	l4395
  2093  003200                     u5480:
  2094  003200                     
  2095                           ; BSR set to: 0
  2096  003200  0E00               	movlw	0
  2097  003202  0101               	movlb	1	; () banked
  2098  003204  6F21               	movwf	(main_loop@pos+1)& (0+255),b
  2099  003206  0E00               	movlw	0
  2100  003208  6F20               	movwf	main_loop@pos& (0+255),b
  2101  00320A  EF27  F019         	goto	l4397
  2102  00320E                     l4395:
  2103                           
  2104                           ; BSR set to: 0
  2105  00320E  0060  F480  F001   	movff	main_loop@pos,___awdiv@dividend
  2106  003214  0060  F484  F002   	movff	main_loop@pos+1,___awdiv@dividend+1
  2107  00321A  0E00               	movlw	0
  2108  00321C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2109  00321E  0E46               	movlw	70
  2110  003220  6E03               	movwf	___awdiv@divisor^0,c
  2111  003222  EC76  F02D         	call	___awdiv	;wreg free
  2112  003226  0060  F480  F0D4   	movff	main_loop@pos,??_main_loop
  2113  00322C  0060  F484  F0D5   	movff	main_loop@pos+1,??_main_loop+1
  2114  003232  5001               	movf	?___awdiv^0,w,c
  2115  003234  0100               	movlb	0	; () banked
  2116  003236  5FD4               	subwf	??_main_loop& (0+255),f,b
  2117  003238  5002               	movf	(?___awdiv+1)^0,w,c
  2118  00323A  5BD5               	subwfb	(??_main_loop+1)& (0+255),f,b
  2119  00323C  0EFF               	movlw	255
  2120  00323E  25D4               	addwf	??_main_loop& (0+255),w,b
  2121  003240  0101               	movlb	1	; () banked
  2122  003242  6F20               	movwf	main_loop@pos& (0+255),b
  2123  003244  0EFF               	movlw	255
  2124  003246  0100               	movlb	0	; () banked
  2125  003248  21D5               	addwfc	(??_main_loop+1)& (0+255),w,b
  2126  00324A  0101               	movlb	1	; () banked
  2127  00324C  6F21               	movwf	(main_loop@pos+1)& (0+255),b
  2128  00324E                     l4397:
  2129                           
  2130                           ; BSR set to: 1
  2131                           ;main.c: 129:         sum = 0;
  2132  00324E  0E00               	movlw	0
  2133  003250  6F18               	movwf	main_loop@sum& (0+255),b
  2134  003252  0E00               	movlw	0
  2135  003254  6F19               	movwf	(main_loop@sum+1)& (0+255),b
  2136  003256  0E00               	movlw	0
  2137  003258  6F1A               	movwf	(main_loop@sum+2)& (0+255),b
  2138  00325A  0E00               	movlw	0
  2139  00325C  6F1B               	movwf	(main_loop@sum+3)& (0+255),b
  2140  00325E                     
  2141                           ; BSR set to: 1
  2142                           ;main.c: 131:         lastSum -= last[(counter / 50) % 10];
  2143  00325E  0E32               	movlw	50
  2144  003260  6E11               	movwf	___lldiv@divisor^0,c
  2145  003262  0E00               	movlw	0
  2146  003264  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2147  003266  0E00               	movlw	0
  2148  003268  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2149  00326A  0E00               	movlw	0
  2150  00326C  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2151  00326E  0060  F470  F00D   	movff	main_loop@counter,___lldiv@dividend
  2152  003274  0060  F474  F00E   	movff	main_loop@counter+1,___lldiv@dividend+1
  2153  00327A  0060  F478  F00F   	movff	main_loop@counter+2,___lldiv@dividend+2
  2154  003280  0060  F47C  F010   	movff	main_loop@counter+3,___lldiv@dividend+3
  2155  003286  EC34  F02E         	call	___lldiv	;wreg free
  2156  00328A  0060  F034  F01A   	movff	?___lldiv,___llmod@dividend
  2157  003290  0060  F038  F01B   	movff	?___lldiv+1,___llmod@dividend+1
  2158  003296  0060  F03C  F01C   	movff	?___lldiv+2,___llmod@dividend+2
  2159  00329C  0060  F040  F01D   	movff	?___lldiv+3,___llmod@dividend+3
  2160  0032A2  0E0A               	movlw	10
  2161  0032A4  6E1E               	movwf	___llmod@divisor^0,c
  2162  0032A6  0E00               	movlw	0
  2163  0032A8  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2164  0032AA  0E00               	movlw	0
  2165  0032AC  6E20               	movwf	(___llmod@divisor+2)^0,c
  2166  0032AE  0E00               	movlw	0
  2167  0032B0  6E21               	movwf	(___llmod@divisor+3)^0,c
  2168  0032B2  EC31  F02F         	call	___llmod	;wreg free
  2169  0032B6  90D8               	bcf	status,0,c
  2170  0032B8  361A               	rlcf	?___llmod^0,f,c
  2171  0032BA  361B               	rlcf	(?___llmod+1)^0,f,c
  2172  0032BC  0E00               	movlw	low main_loop@last
  2173  0032BE  241A               	addwf	?___llmod^0,w,c
  2174  0032C0  6ED9               	movwf	fsr2l,c
  2175  0032C2  0E01               	movlw	high main_loop@last
  2176  0032C4  201B               	addwfc	(?___llmod+1)^0,w,c
  2177  0032C6  6EDA               	movwf	fsr2h,c
  2178  0032C8  006F FF78  F0D4    	movff	postinc2,??_main_loop
  2179  0032CE  006F FF74  F0D5    	movff	postdec2,??_main_loop+1
  2180  0032D4  0100               	movlb	0	; () banked
  2181  0032D6  51D4               	movf	??_main_loop& (0+255),w,b
  2182  0032D8  6FD6               	movwf	(??_main_loop+2)& (0+255),b
  2183  0032DA  51D5               	movf	(??_main_loop+1)& (0+255),w,b
  2184  0032DC  6FD7               	movwf	(??_main_loop+3)& (0+255),b
  2185  0032DE  6BD8               	clrf	(??_main_loop+4)& (0+255),b
  2186  0032E0  6BD9               	clrf	(??_main_loop+5)& (0+255),b
  2187  0032E2  51D6               	movf	(??_main_loop+2)& (0+255),w,b
  2188  0032E4  0101               	movlb	1	; () banked
  2189  0032E6  5F14               	subwf	main_loop@lastSum& (0+255),f,b
  2190  0032E8  0100               	movlb	0	; () banked
  2191  0032EA  51D7               	movf	(??_main_loop+3)& (0+255),w,b
  2192  0032EC  0101               	movlb	1	; () banked
  2193  0032EE  5B15               	subwfb	(main_loop@lastSum+1)& (0+255),f,b
  2194  0032F0  0100               	movlb	0	; () banked
  2195  0032F2  51D8               	movf	(??_main_loop+4)& (0+255),w,b
  2196  0032F4  0101               	movlb	1	; () banked
  2197  0032F6  5B16               	subwfb	(main_loop@lastSum+2)& (0+255),f,b
  2198  0032F8  0100               	movlb	0	; () banked
  2199  0032FA  51D9               	movf	(??_main_loop+5)& (0+255),w,b
  2200  0032FC  0101               	movlb	1	; () banked
  2201  0032FE  5B17               	subwfb	(main_loop@lastSum+3)& (0+255),f,b
  2202  003300                     
  2203                           ; BSR set to: 1
  2204                           ;main.c: 132:         lastSum += sample;
  2205  003300  5194               	movf	main_loop@sample& (0+255),w,b
  2206  003302  2714               	addwf	main_loop@lastSum& (0+255),f,b
  2207  003304  5195               	movf	(main_loop@sample+1)& (0+255),w,b
  2208  003306  2315               	addwfc	(main_loop@lastSum+1)& (0+255),f,b
  2209  003308  5196               	movf	(main_loop@sample+2)& (0+255),w,b
  2210  00330A  2316               	addwfc	(main_loop@lastSum+2)& (0+255),f,b
  2211  00330C  5197               	movf	(main_loop@sample+3)& (0+255),w,b
  2212  00330E  2317               	addwfc	(main_loop@lastSum+3)& (0+255),f,b
  2213  003310                     
  2214                           ; BSR set to: 1
  2215                           ;main.c: 133:         last[(counter / 50) % 10] = sample;
  2216  003310  0E32               	movlw	50
  2217  003312  6E11               	movwf	___lldiv@divisor^0,c
  2218  003314  0E00               	movlw	0
  2219  003316  6E12               	movwf	(___lldiv@divisor+1)^0,c
  2220  003318  0E00               	movlw	0
  2221  00331A  6E13               	movwf	(___lldiv@divisor+2)^0,c
  2222  00331C  0E00               	movlw	0
  2223  00331E  6E14               	movwf	(___lldiv@divisor+3)^0,c
  2224  003320  0060  F470  F00D   	movff	main_loop@counter,___lldiv@dividend
  2225  003326  0060  F474  F00E   	movff	main_loop@counter+1,___lldiv@dividend+1
  2226  00332C  0060  F478  F00F   	movff	main_loop@counter+2,___lldiv@dividend+2
  2227  003332  0060  F47C  F010   	movff	main_loop@counter+3,___lldiv@dividend+3
  2228  003338  EC34  F02E         	call	___lldiv	;wreg free
  2229  00333C  0060  F034  F01A   	movff	?___lldiv,___llmod@dividend
  2230  003342  0060  F038  F01B   	movff	?___lldiv+1,___llmod@dividend+1
  2231  003348  0060  F03C  F01C   	movff	?___lldiv+2,___llmod@dividend+2
  2232  00334E  0060  F040  F01D   	movff	?___lldiv+3,___llmod@dividend+3
  2233  003354  0E0A               	movlw	10
  2234  003356  6E1E               	movwf	___llmod@divisor^0,c
  2235  003358  0E00               	movlw	0
  2236  00335A  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2237  00335C  0E00               	movlw	0
  2238  00335E  6E20               	movwf	(___llmod@divisor+2)^0,c
  2239  003360  0E00               	movlw	0
  2240  003362  6E21               	movwf	(___llmod@divisor+3)^0,c
  2241  003364  EC31  F02F         	call	___llmod	;wreg free
  2242  003368  90D8               	bcf	status,0,c
  2243  00336A  361A               	rlcf	?___llmod^0,f,c
  2244  00336C  361B               	rlcf	(?___llmod+1)^0,f,c
  2245  00336E  0E00               	movlw	low main_loop@last
  2246  003370  241A               	addwf	?___llmod^0,w,c
  2247  003372  6ED9               	movwf	fsr2l,c
  2248  003374  0E01               	movlw	high main_loop@last
  2249  003376  201B               	addwfc	(?___llmod+1)^0,w,c
  2250  003378  6EDA               	movwf	fsr2h,c
  2251  00337A  0060  F653  FFDE   	movff	main_loop@sample,postinc2
  2252  003380  0060  F657  FFDD   	movff	main_loop@sample+1,postdec2
  2253  003386                     l4405:
  2254                           
  2255                           ;main.c: 136:     if (counter % 1000 == 999) {
  2256  003386  0060  F470  F01A   	movff	main_loop@counter,___llmod@dividend
  2257  00338C  0060  F474  F01B   	movff	main_loop@counter+1,___llmod@dividend+1
  2258  003392  0060  F478  F01C   	movff	main_loop@counter+2,___llmod@dividend+2
  2259  003398  0060  F47C  F01D   	movff	main_loop@counter+3,___llmod@dividend+3
  2260  00339E  0EE8               	movlw	232
  2261  0033A0  6E1E               	movwf	___llmod@divisor^0,c
  2262  0033A2  0E03               	movlw	3
  2263  0033A4  6E1F               	movwf	(___llmod@divisor+1)^0,c
  2264  0033A6  0E00               	movlw	0
  2265  0033A8  6E20               	movwf	(___llmod@divisor+2)^0,c
  2266  0033AA  0E00               	movlw	0
  2267  0033AC  6E21               	movwf	(___llmod@divisor+3)^0,c
  2268  0033AE  EC31  F02F         	call	___llmod	;wreg free
  2269  0033B2  0EE7               	movlw	231
  2270  0033B4  181A               	xorwf	?___llmod^0,w,c
  2271  0033B6  E109               	bnz	u5491
  2272  0033B8  0E03               	movlw	3
  2273  0033BA  181B               	xorwf	(?___llmod+1)^0,w,c
  2274  0033BC  101C               	iorwf	(?___llmod+2)^0,w,c
  2275  0033BE  101D               	iorwf	(?___llmod+3)^0,w,c
  2276  0033C0  A4D8               	btfss	status,2,c
  2277  0033C2  EFE5  F019         	goto	u5491
  2278  0033C6  EFE7  F019         	goto	u5490
  2279  0033CA                     u5491:
  2280  0033CA  EF13  F01A         	goto	l4421
  2281  0033CE                     u5490:
  2282  0033CE                     
  2283                           ;main.c: 137:         PORTCbits.RC0 = !PORTCbits.RC1;
  2284  0033CE  A2CC               	btfss	204,1,c	;volatile
  2285  0033D0  EFEC  F019         	goto	u5501
  2286  0033D4  EFF1  F019         	goto	u5500
  2287  0033D8                     u5501:
  2288  0033D8  0100               	movlb	0	; () banked
  2289  0033DA  6BD4               	clrf	??_main_loop& (0+255),b
  2290  0033DC  2BD4               	incf	??_main_loop& (0+255),f,b
  2291  0033DE  EFF3  F019         	goto	u5518
  2292  0033E2                     u5500:
  2293  0033E2  0100               	movlb	0	; () banked
  2294  0033E4  6BD4               	clrf	??_main_loop& (0+255),b
  2295  0033E6                     u5518:
  2296  0033E6  50CC               	movf	204,w,c	;volatile
  2297  0033E8  19D4               	xorwf	??_main_loop& (0+255),w,b
  2298  0033EA  0BFE               	andlw	-2
  2299  0033EC  19D4               	xorwf	??_main_loop& (0+255),w,b
  2300  0033EE  6ECC               	movwf	204,c	;volatile
  2301  0033F0                     
  2302                           ; BSR set to: 0
  2303                           ;main.c: 139:         ADPCH = 0b010110;
  2304  0033F0  0E16               	movlw	22
  2305  0033F2  013E               	movlb	62	; () banked
  2306  0033F4  6FF1               	movwf	241,b	;volatile
  2307  0033F6                     
  2308                           ; BSR set to: 62
  2309                           ;main.c: 140:         ADCON0bits.FM = 0;
  2310  0033F6  0EF3               	movlw	-13
  2311  0033F8  17F8               	andwf	248,f,b	;volatile
  2312  0033FA                     
  2313                           ; BSR set to: 62
  2314                           ;main.c: 141:         ADCON0bits.GO = 1;
  2315  0033FA  81F8               	bsf	248,0,b	;volatile
  2316                           
  2317                           ;main.c: 142:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  2318  0033FC  EF04  F01A         	goto	l4417
  2319  003400                     l4415:
  2320                           
  2321                           ; BSR set to: 62
  2322  003400  0E05               	movlw	5
  2323  003402                     u5627:
  2324  003402  2EE8               	decfsz	wreg,f,c
  2325  003404  D7FE               	bra	u5627
  2326  003406  F000               	nop	
  2327  003408                     l4417:
  2328  003408  013E               	movlb	62	; () banked
  2329  00340A  B1F8               	btfsc	248,0,b	;volatile
  2330  00340C  EF0A  F01A         	goto	u5521
  2331  003410  EF0C  F01A         	goto	u5520
  2332  003414                     u5521:
  2333  003414  EF00  F01A         	goto	l4415
  2334  003418                     u5520:
  2335  003418                     
  2336                           ; BSR set to: 62
  2337                           ;main.c: 143:         ledBrightness = ADRESH;
  2338  003418  006F FBC0  F05F    	movff	16112,_ledBrightness	;volatile
  2339  00341E                     
  2340                           ; BSR set to: 62
  2341                           ;main.c: 144:         ADCON0bits.FM = 1;
  2342  00341E  51F8               	movf	248,w,b	;volatile
  2343  003420  0BF3               	andlw	-13
  2344  003422  0904               	iorlw	4
  2345  003424  6FF8               	movwf	248,b	;volatile
  2346  003426                     l4421:
  2347                           
  2348                           ;main.c: 147:     if (++counter >= 100000) {
  2349  003426  0E01               	movlw	1
  2350  003428  0101               	movlb	1	; () banked
  2351  00342A  271C               	addwf	main_loop@counter& (0+255),f,b
  2352  00342C  0E00               	movlw	0
  2353  00342E  231D               	addwfc	(main_loop@counter+1)& (0+255),f,b
  2354  003430  231E               	addwfc	(main_loop@counter+2)& (0+255),f,b
  2355  003432  231F               	addwfc	(main_loop@counter+3)& (0+255),f,b
  2356  003434  511F               	movf	(main_loop@counter+3)& (0+255),w,b
  2357  003436  E10D               	bnz	u5530
  2358  003438  0EA0               	movlw	160
  2359  00343A  5D1C               	subwf	main_loop@counter& (0+255),w,b
  2360  00343C  0E86               	movlw	134
  2361  00343E  591D               	subwfb	(main_loop@counter+1)& (0+255),w,b
  2362  003440  0E01               	movlw	1
  2363  003442  591E               	subwfb	(main_loop@counter+2)& (0+255),w,b
  2364  003444  A0D8               	btfss	status,0,c
  2365  003446  EF27  F01A         	goto	u5531
  2366  00344A  EF29  F01A         	goto	u5530
  2367  00344E                     u5531:
  2368  00344E  EF2D  F01B         	goto	l241
  2369  003452                     u5530:
  2370  003452                     
  2371                           ; BSR set to: 1
  2372                           ;main.c: 148:         ADPCH = 0b011011;
  2373  003452  0E1B               	movlw	27
  2374  003454  013E               	movlb	62	; () banked
  2375  003456  6FF1               	movwf	241,b	;volatile
  2376  003458                     
  2377                           ; BSR set to: 62
  2378                           ;main.c: 149:         ADCON0bits.GO = 1;
  2379  003458  81F8               	bsf	248,0,b	;volatile
  2380                           
  2381                           ;main.c: 150:         while (ADCON0bits.GO) _delay((unsigned long)((1)*(64000000/4000000
      +                          .0)));
  2382  00345A  EF33  F01A         	goto	l4429
  2383  00345E                     l4427:
  2384                           
  2385                           ; BSR set to: 62
  2386  00345E  0E05               	movlw	5
  2387  003460                     u5637:
  2388  003460  2EE8               	decfsz	wreg,f,c
  2389  003462  D7FE               	bra	u5637
  2390  003464  F000               	nop	
  2391  003466                     l4429:
  2392  003466  013E               	movlb	62	; () banked
  2393  003468  B1F8               	btfsc	248,0,b	;volatile
  2394  00346A  EF39  F01A         	goto	u5541
  2395  00346E  EF3B  F01A         	goto	u5540
  2396  003472                     u5541:
  2397  003472  EF2F  F01A         	goto	l4427
  2398  003476                     u5540:
  2399  003476                     
  2400                           ; BSR set to: 62
  2401                           ;main.c: 151:         float bat_percent = (((ADRESH << 8) | ADRESL) - 2082.0f) / (3014.0
      +                          f - 2082.0f) * 100.0f;
  2402  003476  0E00               	movlw	0
  2403  003478  6E23               	movwf	___fldiv@a^0,c
  2404  00347A  0E00               	movlw	0
  2405  00347C  6E24               	movwf	(___fldiv@a+1)^0,c
  2406  00347E  0E69               	movlw	105
  2407  003480  6E25               	movwf	(___fldiv@a+2)^0,c
  2408  003482  0E44               	movlw	68
  2409  003484  6E26               	movwf	(___fldiv@a+3)^0,c
  2410  003486  0E00               	movlw	0
  2411  003488  6E13               	movwf	___fladd@a^0,c
  2412  00348A  0E20               	movlw	32
  2413  00348C  6E14               	movwf	(___fladd@a+1)^0,c
  2414  00348E  0E02               	movlw	2
  2415  003490  6E15               	movwf	(___fladd@a+2)^0,c
  2416  003492  0EC5               	movlw	197
  2417  003494  6E16               	movwf	(___fladd@a+3)^0,c
  2418  003496  51EF               	movf	239,w,b	;volatile
  2419  003498  006F FBC0  F0D4    	movff	16112,??_main_loop	;volatile
  2420  00349E  0100               	movlb	0	; () banked
  2421  0034A0  6BD5               	clrf	(??_main_loop+1)& (0+255),b
  2422  0034A2  0060  F350  F0D5   	movff	??_main_loop,??_main_loop+1
  2423  0034A8  6BD4               	clrf	??_main_loop& (0+255),b
  2424  0034AA  13D4               	iorwf	??_main_loop& (0+255),f,b
  2425  0034AC  0E00               	movlw	0
  2426  0034AE  13D5               	iorwf	(??_main_loop+1)& (0+255),f,b
  2427  0034B0  0060  F350  F001   	movff	??_main_loop,___xxtofl@val
  2428  0034B6  0060  F354  F002   	movff	??_main_loop+1,___xxtofl@val+1
  2429  0034BC  0E00               	movlw	0
  2430  0034BE  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  2431  0034C0  0EFF               	movlw	-1
  2432  0034C2  6E03               	movwf	(___xxtofl@val+2)^0,c
  2433  0034C4  6E04               	movwf	(___xxtofl@val+3)^0,c
  2434  0034C6  0E01               	movlw	1
  2435  0034C8  ECF2  F027         	call	___xxtofl
  2436  0034CC  0060  F004  F00F   	movff	?___xxtofl,___fladd@b
  2437  0034D2  0060  F008  F010   	movff	?___xxtofl+1,___fladd@b+1
  2438  0034D8  0060  F00C  F011   	movff	?___xxtofl+2,___fladd@b+2
  2439  0034DE  0060  F010  F012   	movff	?___xxtofl+3,___fladd@b+3
  2440  0034E4  ECA2  F01E         	call	___fladd	;wreg free
  2441  0034E8  0060  F03C  F01F   	movff	?___fladd,___fldiv@b
  2442  0034EE  0060  F040  F020   	movff	?___fladd+1,___fldiv@b+1
  2443  0034F4  0060  F044  F021   	movff	?___fladd+2,___fldiv@b+2
  2444  0034FA  0060  F048  F022   	movff	?___fladd+3,___fldiv@b+3
  2445  003500  EC65  F023         	call	___fldiv	;wreg free
  2446  003504  0060  F07C  F038   	movff	?___fldiv,___flmul@b
  2447  00350A  0060  F080  F039   	movff	?___fldiv+1,___flmul@b+1
  2448  003510  0060  F084  F03A   	movff	?___fldiv+2,___flmul@b+2
  2449  003516  0060  F088  F03B   	movff	?___fldiv+3,___flmul@b+3
  2450  00351C  0E00               	movlw	0
  2451  00351E  6E3C               	movwf	___flmul@a^0,c
  2452  003520  0E00               	movlw	0
  2453  003522  6E3D               	movwf	(___flmul@a+1)^0,c
  2454  003524  0EC8               	movlw	200
  2455  003526  6E3E               	movwf	(___flmul@a+2)^0,c
  2456  003528  0E42               	movlw	66
  2457  00352A  6E3F               	movwf	(___flmul@a+3)^0,c
  2458  00352C  EC20  F021         	call	___flmul	;wreg free
  2459  003530  0060  F0E0  F190   	movff	?___flmul,main_loop@bat_percent
  2460  003536  0060  F0E4  F191   	movff	?___flmul+1,main_loop@bat_percent+1
  2461  00353C  0060  F0E8  F192   	movff	?___flmul+2,main_loop@bat_percent+2
  2462  003542  0060  F0EC  F193   	movff	?___flmul+3,main_loop@bat_percent+3
  2463  003548                     
  2464                           ;main.c: 153:         char batmsg[16];;main.c: 154:         if (!PORTDbits.RD2) sprintf(
      +                          batmsg, "Chg fault: %3.0f%%", bat_percent);
  2465  003548  B4CD               	btfsc	205,2,c	;volatile
  2466  00354A  EFA9  F01A         	goto	u5551
  2467  00354E  EFAB  F01A         	goto	u5550
  2468  003552                     u5551:
  2469  003552  EFC4  F01A         	goto	l245
  2470  003556                     u5550:
  2471  003556  0E72               	movlw	low main_loop@batmsg
  2472  003558  0100               	movlb	0	; () banked
  2473  00355A  6FC2               	movwf	sprintf@s& (0+255),b
  2474  00355C  0E01               	movlw	high main_loop@batmsg
  2475  00355E  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  2476  003560  0E01               	movlw	low STR_1
  2477  003562  6FC4               	movwf	sprintf@fmt& (0+255),b
  2478  003564  0E20               	movlw	high STR_1
  2479  003566  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  2480  003568  0060  F640  F0C6   	movff	main_loop@bat_percent,?_sprintf+4
  2481  00356E  0060  F644  F0C7   	movff	main_loop@bat_percent+1,?_sprintf+5
  2482  003574  0060  F648  F0C8   	movff	main_loop@bat_percent+2,?_sprintf+6
  2483  00357A  0060  F64C  F0C9   	movff	main_loop@bat_percent+3,?_sprintf+7
  2484  003580  ECF1  F030         	call	_sprintf	;wreg free
  2485  003584  EF1B  F01B         	goto	l4443
  2486  003588                     l245:
  2487  003588  B2CD               	btfsc	205,1,c	;volatile
  2488  00358A  EFC9  F01A         	goto	u5561
  2489  00358E  EFCB  F01A         	goto	u5560
  2490  003592                     u5561:
  2491  003592  EFE4  F01A         	goto	l247
  2492  003596                     u5560:
  2493  003596  0E72               	movlw	low main_loop@batmsg
  2494  003598  0100               	movlb	0	; () banked
  2495  00359A  6FC2               	movwf	sprintf@s& (0+255),b
  2496  00359C  0E01               	movlw	high main_loop@batmsg
  2497  00359E  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  2498  0035A0  0E14               	movlw	low STR_2
  2499  0035A2  6FC4               	movwf	sprintf@fmt& (0+255),b
  2500  0035A4  0E20               	movlw	high STR_2
  2501  0035A6  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  2502  0035A8  0060  F640  F0C6   	movff	main_loop@bat_percent,?_sprintf+4
  2503  0035AE  0060  F644  F0C7   	movff	main_loop@bat_percent+1,?_sprintf+5
  2504  0035B4  0060  F648  F0C8   	movff	main_loop@bat_percent+2,?_sprintf+6
  2505  0035BA  0060  F64C  F0C9   	movff	main_loop@bat_percent+3,?_sprintf+7
  2506  0035C0  ECF1  F030         	call	_sprintf	;wreg free
  2507  0035C4  EF1B  F01B         	goto	l4443
  2508  0035C8                     l247:
  2509  0035C8  B0CD               	btfsc	205,0,c	;volatile
  2510  0035CA  EFE9  F01A         	goto	u5571
  2511  0035CE  EFEB  F01A         	goto	u5570
  2512  0035D2                     u5571:
  2513  0035D2  EF04  F01B         	goto	l4441
  2514  0035D6                     u5570:
  2515  0035D6  0E72               	movlw	low main_loop@batmsg
  2516  0035D8  0100               	movlb	0	; () banked
  2517  0035DA  6FC2               	movwf	sprintf@s& (0+255),b
  2518  0035DC  0E01               	movlw	high main_loop@batmsg
  2519  0035DE  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  2520  0035E0  0E26               	movlw	low STR_3
  2521  0035E2  6FC4               	movwf	sprintf@fmt& (0+255),b
  2522  0035E4  0E20               	movlw	high STR_3
  2523  0035E6  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  2524  0035E8  0060  F640  F0C6   	movff	main_loop@bat_percent,?_sprintf+4
  2525  0035EE  0060  F644  F0C7   	movff	main_loop@bat_percent+1,?_sprintf+5
  2526  0035F4  0060  F648  F0C8   	movff	main_loop@bat_percent+2,?_sprintf+6
  2527  0035FA  0060  F64C  F0C9   	movff	main_loop@bat_percent+3,?_sprintf+7
  2528  003600  ECF1  F030         	call	_sprintf	;wreg free
  2529  003604  EF1B  F01B         	goto	l4443
  2530  003608                     l4441:
  2531  003608  0E72               	movlw	low main_loop@batmsg
  2532  00360A  0100               	movlb	0	; () banked
  2533  00360C  6FC2               	movwf	sprintf@s& (0+255),b
  2534  00360E  0E01               	movlw	high main_loop@batmsg
  2535  003610  6FC3               	movwf	(sprintf@s+1)& (0+255),b
  2536  003612  0E38               	movlw	low STR_4
  2537  003614  6FC4               	movwf	sprintf@fmt& (0+255),b
  2538  003616  0E20               	movlw	high STR_4
  2539  003618  6FC5               	movwf	(sprintf@fmt+1)& (0+255),b
  2540  00361A  0060  F640  F0C6   	movff	main_loop@bat_percent,?_sprintf+4
  2541  003620  0060  F644  F0C7   	movff	main_loop@bat_percent+1,?_sprintf+5
  2542  003626  0060  F648  F0C8   	movff	main_loop@bat_percent+2,?_sprintf+6
  2543  00362C  0060  F64C  F0C9   	movff	main_loop@bat_percent+3,?_sprintf+7
  2544  003632  ECF1  F030         	call	_sprintf	;wreg free
  2545  003636                     l4443:
  2546                           
  2547                           ;main.c: 158:         lcd_set_data_addr(0);
  2548  003636  0E00               	movlw	0
  2549  003638  EC1A  F032         	call	_lcd_set_data_addr
  2550  00363C                     
  2551                           ;main.c: 159:         lcd_print(batmsg);
  2552  00363C  0E72               	movlw	low main_loop@batmsg
  2553  00363E  6E05               	movwf	lcd_print@string^0,c
  2554  003640  0E01               	movlw	high main_loop@batmsg
  2555  003642  6E06               	movwf	(lcd_print@string+1)^0,c
  2556  003644  ECDF  F02E         	call	_lcd_print	;wreg free
  2557  003648                     
  2558                           ;main.c: 161:         counter = 0;
  2559  003648  0E00               	movlw	0
  2560  00364A  0101               	movlb	1	; () banked
  2561  00364C  6F1C               	movwf	main_loop@counter& (0+255),b
  2562  00364E  0E00               	movlw	0
  2563  003650  6F1D               	movwf	(main_loop@counter+1)& (0+255),b
  2564  003652  0E00               	movlw	0
  2565  003654  6F1E               	movwf	(main_loop@counter+2)& (0+255),b
  2566  003656  0E00               	movlw	0
  2567  003658  6F1F               	movwf	(main_loop@counter+3)& (0+255),b
  2568  00365A                     l241:
  2569                           
  2570                           ; BSR set to: 1
  2571  00365A  0004               	clrwdt		;# 
  2572  00365C                     
  2573                           ;main.c: 165:     _delay((unsigned long)((10)*(64000000/4000000.0)));
  2574  00365C  0E35               	movlw	53
  2575  00365E                     u5647:
  2576  00365E  2EE8               	decfsz	wreg,f,c
  2577  003660  D7FE               	bra	u5647
  2578  003662  F000               	nop	
  2579  003664  0012               	return		;funcret
  2580  003666                     __end_of_main_loop:
  2581                           	opt callstack 0
  2582                           
  2583 ;; *************** function _sprintf *****************
  2584 ;; Defined at:
  2585 ;;		line 9 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_sprintf.c"
  2586 ;; Parameters:    Size  Location     Type
  2587 ;;  s               2   98[BANK0 ] PTR unsigned char 
  2588 ;;		 -> main_loop@batmsg(16), 
  2589 ;;  fmt             2  100[BANK0 ] PTR const unsigned char 
  2590 ;;		 -> STR_4(17), STR_3(18), STR_2(18), STR_1(19), 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  f               6  110[BANK0 ] struct _IO_FILE
  2593 ;;  ap              2  108[BANK0 ] PTR void [1]
  2594 ;;		 -> ?_sprintf(2), 
  2595 ;;  ret             2    0        int 
  2596 ;; Return value:  Size  Location     Type
  2597 ;;                  2   98[BANK0 ] int 
  2598 ;; Registers used:
  2599 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2600 ;; Tracked objects:
  2601 ;;		On entry : 0/0
  2602 ;;		On exit  : 0/0
  2603 ;;		Unchanged: 0/0
  2604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2605 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2606 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2608 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2609 ;;Total ram usage:       18 bytes
  2610 ;; Hardware stack levels used:    1
  2611 ;; Hardware stack levels required when called:    7
  2612 ;; This function calls:
  2613 ;;		_vfprintf
  2614 ;; This function is called by:
  2615 ;;		_main_loop
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text2
  2620  0061E2                     __ptext2:
  2621                           	opt callstack 0
  2622  0061E2                     _sprintf:
  2623                           	opt callstack 22
  2624  0061E2  0EC6               	movlw	low (?_sprintf+4)
  2625  0061E4  0100               	movlb	0	; () banked
  2626  0061E6  6FCC               	movwf	sprintf@ap& (0+255),b
  2627  0061E8  0E00               	movlw	high (?_sprintf+4)
  2628  0061EA  6FCD               	movwf	(sprintf@ap+1)& (0+255),b
  2629  0061EC  0060  F308  F0CE   	movff	sprintf@s,sprintf@f
  2630  0061F2  0060  F30C  F0CF   	movff	sprintf@s+1,sprintf@f+1
  2631  0061F8                     
  2632                           ; BSR set to: 0
  2633  0061F8  0E00               	movlw	0
  2634  0061FA  6FD1               	movwf	(sprintf@f+3)& (0+255),b
  2635  0061FC  0E00               	movlw	0
  2636  0061FE  6FD0               	movwf	(sprintf@f+2)& (0+255),b
  2637  006200                     
  2638                           ; BSR set to: 0
  2639  006200  0E00               	movlw	0
  2640  006202  6FD3               	movwf	(sprintf@f+5)& (0+255),b
  2641  006204  0E00               	movlw	0
  2642  006206  6FD2               	movwf	(sprintf@f+4)& (0+255),b
  2643  006208                     
  2644                           ; BSR set to: 0
  2645  006208  0ECE               	movlw	low sprintf@f
  2646  00620A  6FBC               	movwf	vfprintf@fp& (0+255),b
  2647  00620C  0E00               	movlw	high sprintf@f
  2648  00620E  6FBD               	movwf	(vfprintf@fp+1)& (0+255),b
  2649  006210  0060  F310  F0BE   	movff	sprintf@fmt,vfprintf@fmt
  2650  006216  0060  F314  F0BF   	movff	sprintf@fmt+1,vfprintf@fmt+1
  2651  00621C  0ECC               	movlw	low sprintf@ap
  2652  00621E  6FC0               	movwf	vfprintf@ap& (0+255),b
  2653  006220  0E00               	movlw	high sprintf@ap
  2654  006222  6FC1               	movwf	(vfprintf@ap+1)& (0+255),b
  2655  006224  EC79  F02F         	call	_vfprintf	;wreg free
  2656  006228  0100               	movlb	0	; () banked
  2657  00622A  51D0               	movf	(sprintf@f+2)& (0+255),w,b
  2658  00622C  25C2               	addwf	sprintf@s& (0+255),w,b
  2659  00622E  6ED9               	movwf	fsr2l,c
  2660  006230  51D1               	movf	(sprintf@f+3)& (0+255),w,b
  2661  006232  21C3               	addwfc	(sprintf@s+1)& (0+255),w,b
  2662  006234  6EDA               	movwf	fsr2h,c
  2663  006236  0E00               	movlw	0
  2664  006238  6EDF               	movwf	indf2,c
  2665  00623A                     
  2666                           ; BSR set to: 0
  2667  00623A  0012               	return		;funcret
  2668  00623C                     __end_of_sprintf:
  2669                           	opt callstack 0
  2670                           
  2671 ;; *************** function _vfprintf *****************
  2672 ;; Defined at:
  2673 ;;		line 1368 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  fp              2   92[BANK0 ] PTR struct _IO_FILE
  2676 ;;		 -> sprintf@f(6), 
  2677 ;;  fmt             2   94[BANK0 ] PTR const unsigned char 
  2678 ;;		 -> STR_4(17), STR_3(18), STR_2(18), STR_1(19), 
  2679 ;;  ap              2   96[BANK0 ] PTR PTR void 
  2680 ;;		 -> sprintf@ap(2), 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  cfmt            2   92[COMRAM] PTR unsigned char 
  2683 ;;		 -> STR_4(17), STR_3(18), STR_2(18), STR_1(19), 
  2684 ;; Return value:  Size  Location     Type
  2685 ;;                  2   92[BANK0 ] int 
  2686 ;; Registers used:
  2687 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2688 ;; Tracked objects:
  2689 ;;		On entry : 0/0
  2690 ;;		On exit  : 0/0
  2691 ;;		Unchanged: 0/0
  2692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2693 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2694 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2696 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2697 ;;Total ram usage:        8 bytes
  2698 ;; Hardware stack levels used:    1
  2699 ;; Hardware stack levels required when called:    6
  2700 ;; This function calls:
  2701 ;;		_vfpfcnvrt
  2702 ;; This function is called by:
  2703 ;;		_sprintf
  2704 ;; This function uses a non-reentrant model
  2705 ;;
  2706                           
  2707                           	psect	text3
  2708  005EF2                     __ptext3:
  2709                           	opt callstack 0
  2710  005EF2                     _vfprintf:
  2711                           	opt callstack 22
  2712  005EF2                     
  2713                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1368: int vfprintf(FI
      +                          LE *fp, const char *fmt, va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\co
      +                          mmon\doprnt.c: 1369: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1371:     char *cfmt;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c:
      +                           1373:     cfmt = (char *)fmt;
  2714  005EF2  0060  F2F8  F05D   	movff	vfprintf@fmt,vfprintf@cfmt
  2715  005EF8  0060  F2FC  F05E   	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2716  005EFE                     
  2717                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1374:     nout = 0;
  2718  005EFE  0E00               	movlw	0
  2719  005F00  0100               	movlb	0	; () banked
  2720  005F02  6FE8               	movwf	(_nout+1)& (0+255),b
  2721  005F04  0E00               	movlw	0
  2722  005F06  6FE7               	movwf	_nout& (0+255),b
  2723                           
  2724                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  2725  005F08  EF9D  F02F         	goto	l4203
  2726  005F0C                     l4201:
  2727                           
  2728                           ; BSR set to: 0
  2729                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1376:         nout +=
      +                           vfpfcnvrt(fp, &cfmt, ap);
  2730  005F0C  0060  F2F0  F0A4   	movff	vfprintf@fp,vfpfcnvrt@fp
  2731  005F12  0060  F2F4  F0A5   	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2732  005F18  0E5D               	movlw	low vfprintf@cfmt
  2733  005F1A  6FA6               	movwf	vfpfcnvrt@fmt& (0+255),b
  2734  005F1C  0E00               	movlw	high vfprintf@cfmt
  2735  005F1E  6FA7               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  2736  005F20  0060  F300  F0A8   	movff	vfprintf@ap,vfpfcnvrt@ap
  2737  005F26  0060  F304  F0A9   	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2738  005F2C  EC33  F01B         	call	_vfpfcnvrt	;wreg free
  2739  005F30  0100               	movlb	0	; () banked
  2740  005F32  51A4               	movf	?_vfpfcnvrt& (0+255),w,b
  2741  005F34  27E7               	addwf	_nout& (0+255),f,b
  2742  005F36  51A5               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  2743  005F38  23E8               	addwfc	(_nout+1)& (0+255),f,b
  2744  005F3A                     l4203:
  2745                           
  2746                           ; BSR set to: 0
  2747                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1375:     while (*cfm
      +                          t) {
  2748  005F3A  0060  F177  FFF6   	movff	vfprintf@cfmt,tblptrl
  2749  005F40  0060  F17B  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  2750  005F46                     	if	0	;tblptru may be non-zero
  2751  005F46                     	endif
  2752  005F46                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2753  005F46  0E00               	movlw	low (__mediumconst shr (0+16))
  2754  005F48  6EF8               	movwf	tblptru,c
  2755  005F4A                     	endif
  2756  005F4A  0008               	tblrd		*
  2757  005F4C  50F5               	movf	tablat,w,c
  2758  005F4E  0900               	iorlw	0
  2759  005F50  A4D8               	btfss	status,2,c
  2760  005F52  EFAD  F02F         	goto	u5121
  2761  005F56  EFAF  F02F         	goto	u5120
  2762  005F5A                     u5121:
  2763  005F5A  EF86  F02F         	goto	l4201
  2764  005F5E                     u5120:
  2765  005F5E                     
  2766                           ; BSR set to: 0
  2767                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1378:     return nout
      +                          ;
  2768  005F5E  0060  F39C  F0BC   	movff	_nout,?_vfprintf
  2769  005F64  0060  F3A0  F0BD   	movff	_nout+1,?_vfprintf+1
  2770  005F6A                     
  2771                           ; BSR set to: 0
  2772  005F6A  0012               	return		;funcret
  2773  005F6C                     __end_of_vfprintf:
  2774                           	opt callstack 0
  2775                           
  2776 ;; *************** function _vfpfcnvrt *****************
  2777 ;; Defined at:
  2778 ;;		line 670 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  2779 ;; Parameters:    Size  Location     Type
  2780 ;;  fp              2   68[BANK0 ] PTR struct _IO_FILE
  2781 ;;		 -> sprintf@f(6), 
  2782 ;;  fmt             2   70[BANK0 ] PTR PTR unsigned char 
  2783 ;;		 -> vfprintf@cfmt(2), 
  2784 ;;  ap              2   72[BANK0 ] PTR PTR void 
  2785 ;;		 -> sprintf@ap(2), 
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  llu             8    0        unsigned long long 
  2788 ;;  ll              8    0        long long 
  2789 ;;  f               4   84[BANK0 ] long long 
  2790 ;;  ct              3   88[BANK0 ] unsigned char [3]
  2791 ;;  vp              3    0        PTR void 
  2792 ;;  cp              3    0        PTR unsigned char 
  2793 ;;  i               2    0        int 
  2794 ;;  done            2    0        int 
  2795 ;;  c               1   91[BANK0 ] unsigned char 
  2796 ;; Return value:  Size  Location     Type
  2797 ;;                  2   68[BANK0 ] int 
  2798 ;; Registers used:
  2799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2800 ;; Tracked objects:
  2801 ;;		On entry : 0/0
  2802 ;;		On exit  : 0/0
  2803 ;;		Unchanged: 0/0
  2804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2805 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2806 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2807 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2808 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2809 ;;Total ram usage:       24 bytes
  2810 ;; Hardware stack levels used:    1
  2811 ;; Hardware stack levels required when called:    5
  2812 ;; This function calls:
  2813 ;;		_atoi
  2814 ;;		_efgtoa
  2815 ;;		_fputc
  2816 ;;		_isdigit
  2817 ;;		_isupper
  2818 ;;		_strncmp
  2819 ;;		_tolower
  2820 ;; This function is called by:
  2821 ;;		_vfprintf
  2822 ;; This function uses a non-reentrant model
  2823 ;;
  2824                           
  2825                           	psect	text4
  2826  003666                     __ptext4:
  2827                           	opt callstack 0
  2828  003666                     _vfpfcnvrt:
  2829                           	opt callstack 22
  2830  003666                     
  2831                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 670: static int vfpfc
      +                          nvrt(FILE *fp, char *fmt[], va_list ap);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99
      +                          \common\doprnt.c: 671: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 672:     char c, *cp, ct[3];;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 673:     int done, i;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\
      +                          doprnt.c: 674:     long long ll;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common
      +                          \doprnt.c: 675:     unsigned long long llu;
  2832  003666  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2833  00366C  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2834  003672  006F FF7B FFF6     	movff	postinc2,tblptrl
  2835  003678  006F FF77 FFF7     	movff	postdec2,tblptrh
  2836  00367E                     	if	0	;tblptru may be non-zero
  2837  00367E                     	endif
  2838  00367E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2839  00367E  0E00               	movlw	low (__mediumconst shr (0+16))
  2840  003680  6EF8               	movwf	tblptru,c
  2841  003682                     	endif
  2842  003682  0008               	tblrd		*
  2843  003684  50F5               	movf	tablat,w,c
  2844  003686  0A25               	xorlw	37
  2845  003688  A4D8               	btfss	status,2,c
  2846  00368A  EF49  F01B         	goto	u4911
  2847  00368E  EF4B  F01B         	goto	u4910
  2848  003692                     u4911:
  2849  003692  EF7C  F01E         	goto	l4167
  2850  003696                     u4910:
  2851  003696                     
  2852                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 681:         ++*fmt;
  2853  003696  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2854  00369C  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2855  0036A2  2ADE               	incf	postinc2,f,c
  2856  0036A4  0E00               	movlw	0
  2857  0036A6  22DD               	addwfc	postdec2,f,c
  2858  0036A8                     
  2859                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 683:         flags = 
      +                          width = 0;
  2860  0036A8  0E00               	movlw	0
  2861  0036AA  0100               	movlb	0	; () banked
  2862  0036AC  6FEA               	movwf	(_width+1)& (0+255),b
  2863  0036AE  0E00               	movlw	0
  2864  0036B0  6FE9               	movwf	_width& (0+255),b
  2865  0036B2  C0E9  F0ED         	movff	_width,_flags
  2866  0036B6  C0EA  F0EE         	movff	_width+1,_flags+1
  2867  0036BA                     
  2868                           ; BSR set to: 0
  2869                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 684:         prec = -
      +                          1;
  2870  0036BA  69EB               	setf	_prec& (0+255),b
  2871  0036BC  69EC               	setf	(_prec+1)& (0+255),b
  2872  0036BE                     
  2873                           ; BSR set to: 0
  2874                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 723:         if ((*fm
      +                          t)[0] == '*') {
  2875  0036BE  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2876  0036C4  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2877  0036CA  006F FF7B FFF6     	movff	postinc2,tblptrl
  2878  0036D0  006F FF77 FFF7     	movff	postdec2,tblptrh
  2879  0036D6                     	if	0	;tblptru may be non-zero
  2880  0036D6                     	endif
  2881  0036D6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2882  0036D6  0E00               	movlw	low (__mediumconst shr (0+16))
  2883  0036D8  6EF8               	movwf	tblptru,c
  2884  0036DA                     	endif
  2885  0036DA  0008               	tblrd		*
  2886  0036DC  50F5               	movf	tablat,w,c
  2887  0036DE  0A2A               	xorlw	42
  2888  0036E0  A4D8               	btfss	status,2,c
  2889  0036E2  EF75  F01B         	goto	u4921
  2890  0036E6  EF77  F01B         	goto	u4920
  2891  0036EA                     u4921:
  2892  0036EA  EFAA  F01B         	goto	l4083
  2893  0036EE                     u4920:
  2894  0036EE                     
  2895                           ; BSR set to: 0
  2896                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 724:             ++*f
      +                          mt;
  2897  0036EE  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2898  0036F4  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2899  0036FA  2ADE               	incf	postinc2,f,c
  2900  0036FC  0E00               	movlw	0
  2901  0036FE  22DD               	addwfc	postdec2,f,c
  2902                           
  2903                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 725:             widt
      +                          h = (*(int *)__va_arg(*(int **)ap, (int)0));
  2904  003700  0060  F2A3  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  2905  003706  0060  F2A7  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  2906  00370C  006F FF7C  F0AA    	movff	indf2,??_vfpfcnvrt
  2907  003712  0E02               	movlw	2
  2908  003714  26DE               	addwf	postinc2,f,c
  2909  003716  006F FF7C  F0AB    	movff	indf2,??_vfpfcnvrt+1
  2910  00371C  0E00               	movlw	0
  2911  00371E  22DD               	addwfc	postdec2,f,c
  2912  003720  0060  F2AB  FFD9   	movff	??_vfpfcnvrt,fsr2l
  2913  003726  0060  F2AF  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  2914  00372C  006F FF78  F0E9    	movff	postinc2,_width
  2915  003732  006F FF74  F0EA    	movff	postdec2,_width+1
  2916  003738                     
  2917                           ; BSR set to: 0
  2918                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 726:             if (
      +                          width < 0) {
  2919  003738  BFEA               	btfsc	(_width+1)& (0+255),7,b
  2920  00373A  EFA3  F01B         	goto	u4930
  2921  00373E  EFA1  F01B         	goto	u4931
  2922  003742                     u4931:
  2923  003742  EFFC  F01B         	goto	l4093
  2924  003746                     u4930:
  2925  003746                     
  2926                           ; BSR set to: 0
  2927                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 727:                 
      +                          flags |= (1 << 0);
  2928  003746  81ED               	bsf	_flags& (0+255),0,b
  2929                           
  2930                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 728:                 
      +                          width = -width;
  2931  003748  6DE9               	negf	_width& (0+255),b
  2932  00374A  1FEA               	comf	(_width+1)& (0+255),f,b
  2933  00374C  B0D8               	btfsc	status,0,c
  2934  00374E  2BEA               	incf	(_width+1)& (0+255),f,b
  2935  003750  EFFC  F01B         	goto	l4093
  2936  003754                     l4083:
  2937                           
  2938                           ; BSR set to: 0
  2939                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 731:             widt
      +                          h = atoi(*fmt);
  2940  003754  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2941  00375A  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2942  003760  006F FF78  F008    	movff	postinc2,atoi@s
  2943  003766  006F FF74  F009    	movff	postdec2,atoi@s+1
  2944  00376C  ECDE  F028         	call	_atoi	;wreg free
  2945  003770  0060  F020  F0E9   	movff	?_atoi,_width
  2946  003776  0060  F024  F0EA   	movff	?_atoi+1,_width+1
  2947                           
  2948                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 732:             whil
      +                          e ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2949  00377C  EFC9  F01B         	goto	l4087
  2950  003780                     l4085:
  2951                           
  2952                           ; BSR set to: 0
  2953                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 733:                 
      +                          ++*fmt;
  2954  003780  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2955  003786  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2956  00378C  2ADE               	incf	postinc2,f,c
  2957  00378E  0E00               	movlw	0
  2958  003790  22DD               	addwfc	postdec2,f,c
  2959  003792                     l4087:
  2960  003792  0ED0               	movlw	208
  2961  003794  0100               	movlb	0	; () banked
  2962  003796  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  2963  003798  0EFF               	movlw	255
  2964  00379A  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2965  00379C  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  2966  0037A2  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  2967  0037A8  006F FF7B FFF6     	movff	postinc2,tblptrl
  2968  0037AE  006F FF77 FFF7     	movff	postdec2,tblptrh
  2969  0037B4                     	if	0	;tblptru may be non-zero
  2970  0037B4                     	endif
  2971  0037B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  2972  0037B4  0E00               	movlw	low (__mediumconst shr (0+16))
  2973  0037B6  6EF8               	movwf	tblptru,c
  2974  0037B8                     	endif
  2975  0037B8  0008               	tblrd		*
  2976  0037BA  50F5               	movf	tablat,w,c
  2977  0037BC  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2978  0037BE  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2979  0037C0  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  2980  0037C2  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2981  0037C4  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2982  0037C6  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2983  0037C8  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2984  0037CA  E10A               	bnz	u4940
  2985  0037CC  0E0A               	movlw	10
  2986  0037CE  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2987  0037D0  A0D8               	btfss	status,0,c
  2988  0037D2  EFED  F01B         	goto	u4941
  2989  0037D6  EFF0  F01B         	goto	u4940
  2990  0037DA                     u4941:
  2991  0037DA  0E01               	movlw	1
  2992  0037DC  EFF1  F01B         	goto	u4950
  2993  0037E0                     u4940:
  2994  0037E0  0E00               	movlw	0
  2995  0037E2                     u4950:
  2996  0037E2  6FAE               	movwf	_vfpfcnvrt$541& (0+255),b
  2997  0037E4  6BAF               	clrf	(_vfpfcnvrt$541+1)& (0+255),b
  2998  0037E6                     
  2999                           ; BSR set to: 0
  3000  0037E6  51AE               	movf	_vfpfcnvrt$541& (0+255),w,b
  3001  0037E8  11AF               	iorwf	(_vfpfcnvrt$541+1)& (0+255),w,b
  3002  0037EA  A4D8               	btfss	status,2,c
  3003  0037EC  EFFA  F01B         	goto	u4961
  3004  0037F0  EFFC  F01B         	goto	u4960
  3005  0037F4                     u4961:
  3006  0037F4  EFC0  F01B         	goto	l4085
  3007  0037F8                     u4960:
  3008  0037F8                     l4093:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 740:         if ((*fm
      +                          t)[0] == '.') {
  3012  0037F8  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3013  0037FE  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3014  003804  006F FF7B FFF6     	movff	postinc2,tblptrl
  3015  00380A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3016  003810                     	if	0	;tblptru may be non-zero
  3017  003810                     	endif
  3018  003810                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3019  003810  0E00               	movlw	low (__mediumconst shr (0+16))
  3020  003812  6EF8               	movwf	tblptru,c
  3021  003814                     	endif
  3022  003814  0008               	tblrd		*
  3023  003816  50F5               	movf	tablat,w,c
  3024  003818  0A2E               	xorlw	46
  3025  00381A  A4D8               	btfss	status,2,c
  3026  00381C  EF12  F01C         	goto	u4971
  3027  003820  EF14  F01C         	goto	u4970
  3028  003824                     u4971:
  3029  003824  EFB2  F01C         	goto	l4113
  3030  003828                     u4970:
  3031  003828                     
  3032                           ; BSR set to: 0
  3033                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 741:             prec
      +                           = 0;
  3034  003828  0E00               	movlw	0
  3035  00382A  6FEC               	movwf	(_prec+1)& (0+255),b
  3036  00382C  0E00               	movlw	0
  3037  00382E  6FEB               	movwf	_prec& (0+255),b
  3038  003830                     
  3039                           ; BSR set to: 0
  3040                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 742:             ++*f
      +                          mt;
  3041  003830  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3042  003836  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3043  00383C  2ADE               	incf	postinc2,f,c
  3044  00383E  0E00               	movlw	0
  3045  003840  22DD               	addwfc	postdec2,f,c
  3046  003842                     
  3047                           ; BSR set to: 0
  3048                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 743:             if (
      +                          (*fmt)[0] == '*') {
  3049  003842  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3050  003848  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3051  00384E  006F FF7B FFF6     	movff	postinc2,tblptrl
  3052  003854  006F FF77 FFF7     	movff	postdec2,tblptrh
  3053  00385A                     	if	0	;tblptru may be non-zero
  3054  00385A                     	endif
  3055  00385A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3056  00385A  0E00               	movlw	low (__mediumconst shr (0+16))
  3057  00385C  6EF8               	movwf	tblptru,c
  3058  00385E                     	endif
  3059  00385E  0008               	tblrd		*
  3060  003860  50F5               	movf	tablat,w,c
  3061  003862  0A2A               	xorlw	42
  3062  003864  A4D8               	btfss	status,2,c
  3063  003866  EF37  F01C         	goto	u4981
  3064  00386A  EF39  F01C         	goto	u4980
  3065  00386E                     u4981:
  3066  00386E  EF60  F01C         	goto	l4103
  3067  003872                     u4980:
  3068  003872                     
  3069                           ; BSR set to: 0
  3070                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 744:                 
      +                          ++*fmt;
  3071  003872  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3072  003878  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3073  00387E  2ADE               	incf	postinc2,f,c
  3074  003880  0E00               	movlw	0
  3075  003882  22DD               	addwfc	postdec2,f,c
  3076                           
  3077                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 745:                 
      +                          prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3078  003884  0060  F2A3  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3079  00388A  0060  F2A7  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3080  003890  006F FF7C  F0AA    	movff	indf2,??_vfpfcnvrt
  3081  003896  0E02               	movlw	2
  3082  003898  26DE               	addwf	postinc2,f,c
  3083  00389A  006F FF7C  F0AB    	movff	indf2,??_vfpfcnvrt+1
  3084  0038A0  0E00               	movlw	0
  3085  0038A2  22DD               	addwfc	postdec2,f,c
  3086  0038A4  0060  F2AB  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3087  0038AA  0060  F2AF  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3088  0038B0  006F FF78  F0EB    	movff	postinc2,_prec
  3089  0038B6  006F FF74  F0EC    	movff	postdec2,_prec+1
  3090                           
  3091                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 746:             } el
      +                          se {
  3092  0038BC  EFB2  F01C         	goto	l4113
  3093  0038C0                     l4103:
  3094                           
  3095                           ; BSR set to: 0
  3096                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 747:                 
      +                          prec = atoi(*fmt);
  3097  0038C0  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3098  0038C6  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3099  0038CC  006F FF78  F008    	movff	postinc2,atoi@s
  3100  0038D2  006F FF74  F009    	movff	postdec2,atoi@s+1
  3101  0038D8  ECDE  F028         	call	_atoi	;wreg free
  3102  0038DC  0060  F020  F0EB   	movff	?_atoi,_prec
  3103  0038E2  0060  F024  F0EC   	movff	?_atoi+1,_prec+1
  3104                           
  3105                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 748:                 
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3106  0038E8  EF7F  F01C         	goto	l4107
  3107  0038EC                     l4105:
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 749:                 
      +                              ++*fmt;
  3111  0038EC  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3112  0038F2  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3113  0038F8  2ADE               	incf	postinc2,f,c
  3114  0038FA  0E00               	movlw	0
  3115  0038FC  22DD               	addwfc	postdec2,f,c
  3116  0038FE                     l4107:
  3117  0038FE  0ED0               	movlw	208
  3118  003900  0100               	movlb	0	; () banked
  3119  003902  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  3120  003904  0EFF               	movlw	255
  3121  003906  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3122  003908  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3123  00390E  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3124  003914  006F FF7B FFF6     	movff	postinc2,tblptrl
  3125  00391A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3126  003920                     	if	0	;tblptru may be non-zero
  3127  003920                     	endif
  3128  003920                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3129  003920  0E00               	movlw	low (__mediumconst shr (0+16))
  3130  003922  6EF8               	movwf	tblptru,c
  3131  003924                     	endif
  3132  003924  0008               	tblrd		*
  3133  003926  50F5               	movf	tablat,w,c
  3134  003928  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3135  00392A  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3136  00392C  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  3137  00392E  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3138  003930  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3139  003932  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3140  003934  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3141  003936  E10A               	bnz	u4990
  3142  003938  0E0A               	movlw	10
  3143  00393A  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3144  00393C  A0D8               	btfss	status,0,c
  3145  00393E  EFA3  F01C         	goto	u4991
  3146  003942  EFA6  F01C         	goto	u4990
  3147  003946                     u4991:
  3148  003946  0E01               	movlw	1
  3149  003948  EFA7  F01C         	goto	u5000
  3150  00394C                     u4990:
  3151  00394C  0E00               	movlw	0
  3152  00394E                     u5000:
  3153  00394E  6FB0               	movwf	_vfpfcnvrt$542& (0+255),b
  3154  003950  6BB1               	clrf	(_vfpfcnvrt$542+1)& (0+255),b
  3155  003952                     
  3156                           ; BSR set to: 0
  3157  003952  51B0               	movf	_vfpfcnvrt$542& (0+255),w,b
  3158  003954  11B1               	iorwf	(_vfpfcnvrt$542+1)& (0+255),w,b
  3159  003956  A4D8               	btfss	status,2,c
  3160  003958  EFB0  F01C         	goto	u5011
  3161  00395C  EFB2  F01C         	goto	u5010
  3162  003960                     u5011:
  3163  003960  EF76  F01C         	goto	l4105
  3164  003964                     u5010:
  3165  003964                     l4113:
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 757:         ct[0] = 
      +                          tolower((int)(*fmt)[0]);
  3169  003964  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3170  00396A  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3171  003970  006F FF7B FFF6     	movff	postinc2,tblptrl
  3172  003976  006F FF77 FFF7     	movff	postdec2,tblptrh
  3173  00397C                     	if	0	;tblptru may be non-zero
  3174  00397C                     	endif
  3175  00397C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3176  00397C  0E00               	movlw	low (__mediumconst shr (0+16))
  3177  00397E  6EF8               	movwf	tblptru,c
  3178  003980                     	endif
  3179  003980  0008               	tblrd		*
  3180  003982  50F5               	movf	tablat,w,c
  3181  003984  6E07               	movwf	tolower@c^0,c
  3182  003986  6A08               	clrf	(tolower@c+1)^0,c
  3183  003988  EC5F  F030         	call	_tolower	;wreg free
  3184  00398C  5007               	movf	?_tolower^0,w,c
  3185  00398E  0100               	movlb	0	; () banked
  3186  003990  6FB8               	movwf	vfpfcnvrt@ct& (0+255),b
  3187  003992                     
  3188                           ; BSR set to: 0
  3189                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 758:         if (ct[0
      +                          ]) {
  3190  003992  51B8               	movf	vfpfcnvrt@ct& (0+255),w,b
  3191  003994  B4D8               	btfsc	status,2,c
  3192  003996  EFCF  F01C         	goto	u5021
  3193  00399A  EFD1  F01C         	goto	u5020
  3194  00399E                     u5021:
  3195  00399E  EF1B  F01D         	goto	l4123
  3196  0039A2                     u5020:
  3197  0039A2                     
  3198                           ; BSR set to: 0
  3199                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 759:             ct[1
      +                          ] = tolower((int)(*fmt)[1]);
  3200  0039A2  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3201  0039A8  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3202  0039AE  006F FF78  F0AA    	movff	postinc2,??_vfpfcnvrt
  3203  0039B4  006F FF74  F0AB    	movff	postdec2,??_vfpfcnvrt+1
  3204  0039BA  0E01               	movlw	1
  3205  0039BC  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  3206  0039BE  0E00               	movlw	0
  3207  0039C0  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3208  0039C2  0060  F2AB  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3209  0039C8  0060  F2AF  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3210  0039CE                     	if	0	;tblptru may be non-zero
  3211  0039CE                     	endif
  3212  0039CE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3213  0039CE  0E00               	movlw	low (__mediumconst shr (0+16))
  3214  0039D0  6EF8               	movwf	tblptru,c
  3215  0039D2                     	endif
  3216  0039D2  0008               	tblrd		*
  3217  0039D4  50F5               	movf	tablat,w,c
  3218  0039D6  6E07               	movwf	tolower@c^0,c
  3219  0039D8  6A08               	clrf	(tolower@c+1)^0,c
  3220  0039DA  EC5F  F030         	call	_tolower	;wreg free
  3221  0039DE  5007               	movf	?_tolower^0,w,c
  3222  0039E0  0100               	movlb	0	; () banked
  3223  0039E2  6FB9               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3224  0039E4                     
  3225                           ; BSR set to: 0
  3226                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 760:             if (
      +                          ct[1]) {
  3227  0039E4  51B9               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3228  0039E6  B4D8               	btfsc	status,2,c
  3229  0039E8  EFF8  F01C         	goto	u5031
  3230  0039EC  EFFA  F01C         	goto	u5030
  3231  0039F0                     u5031:
  3232  0039F0  EF1B  F01D         	goto	l4123
  3233  0039F4                     u5030:
  3234  0039F4                     
  3235                           ; BSR set to: 0
  3236                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 761:                 
      +                          ct[2] = tolower((int)(*fmt)[2]);
  3237  0039F4  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3238  0039FA  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3239  003A00  006F FF78  F0AA    	movff	postinc2,??_vfpfcnvrt
  3240  003A06  006F FF74  F0AB    	movff	postdec2,??_vfpfcnvrt+1
  3241  003A0C  0E02               	movlw	2
  3242  003A0E  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  3243  003A10  0E00               	movlw	0
  3244  003A12  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3245  003A14  0060  F2AB  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3246  003A1A  0060  F2AF  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3247  003A20                     	if	0	;tblptru may be non-zero
  3248  003A20                     	endif
  3249  003A20                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3250  003A20  0E00               	movlw	low (__mediumconst shr (0+16))
  3251  003A22  6EF8               	movwf	tblptru,c
  3252  003A24                     	endif
  3253  003A24  0008               	tblrd		*
  3254  003A26  50F5               	movf	tablat,w,c
  3255  003A28  6E07               	movwf	tolower@c^0,c
  3256  003A2A  6A08               	clrf	(tolower@c+1)^0,c
  3257  003A2C  EC5F  F030         	call	_tolower	;wreg free
  3258  003A30  5007               	movf	?_tolower^0,w,c
  3259  003A32  0100               	movlb	0	; () banked
  3260  003A34  6FBA               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  3261  003A36                     l4123:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 920:         if (ct[0
      +                          ] == 'f') {
  3265  003A36  0E66               	movlw	102
  3266  003A38  19B8               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  3267  003A3A  A4D8               	btfss	status,2,c
  3268  003A3C  EF22  F01D         	goto	u5041
  3269  003A40  EF24  F01D         	goto	u5040
  3270  003A44                     u5041:
  3271  003A44  EF80  F01D         	goto	l4135
  3272  003A48                     u5040:
  3273  003A48                     
  3274                           ; BSR set to: 0
  3275                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 922:             c = 
      +                          (*fmt)[0];
  3276  003A48  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3277  003A4E  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3278  003A54  006F FF7B FFF6     	movff	postinc2,tblptrl
  3279  003A5A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3280  003A60                     	if	0	;tblptru may be non-zero
  3281  003A60                     	endif
  3282  003A60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3283  003A60  0E00               	movlw	low (__mediumconst shr (0+16))
  3284  003A62  6EF8               	movwf	tblptru,c
  3285  003A64                     	endif
  3286  003A64  0008               	tblrd		*
  3287  003A66  006F FFD4  F0BB    	movff	tablat,vfpfcnvrt@c
  3288  003A6C                     
  3289                           ; BSR set to: 0
  3290                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 923:             ++*f
      +                          mt;
  3291  003A6C  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3292  003A72  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3293  003A78  2ADE               	incf	postinc2,f,c
  3294  003A7A  0E00               	movlw	0
  3295  003A7C  22DD               	addwfc	postdec2,f,c
  3296  003A7E                     
  3297                           ; BSR set to: 0
  3298                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 924:             f = 
      +                          (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3299  003A7E  0060  F2A3  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3300  003A84  0060  F2A7  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3301  003A8A  006F FF7C  F0AA    	movff	indf2,??_vfpfcnvrt
  3302  003A90  0E04               	movlw	4
  3303  003A92  26DE               	addwf	postinc2,f,c
  3304  003A94  006F FF7C  F0AB    	movff	indf2,??_vfpfcnvrt+1
  3305  003A9A  0E00               	movlw	0
  3306  003A9C  22DD               	addwfc	postdec2,f,c
  3307  003A9E  0060  F2AB  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3308  003AA4  0060  F2AF  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3309  003AAA  006F FF78  F0B4    	movff	postinc2,vfpfcnvrt@f
  3310  003AB0  006F FF78  F0B5    	movff	postinc2,vfpfcnvrt@f+1
  3311  003AB6  006F FF78  F0B6    	movff	postinc2,vfpfcnvrt@f+2
  3312  003ABC  006F FF78  F0B7    	movff	postinc2,vfpfcnvrt@f+3
  3313  003AC2                     l4131:
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 926:             retu
      +                          rn efgtoa(fp, f, c);
  3317  003AC2  0060  F290  F060   	movff	vfpfcnvrt@fp,efgtoa@fp
  3318  003AC8  0060  F294  F061   	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  3319  003ACE  0060  F2D0  F062   	movff	vfpfcnvrt@f,efgtoa@f
  3320  003AD4  0060  F2D4  F063   	movff	vfpfcnvrt@f+1,efgtoa@f+1
  3321  003ADA  0060  F2D8  F064   	movff	vfpfcnvrt@f+2,efgtoa@f+2
  3322  003AE0  0060  F2DC  F065   	movff	vfpfcnvrt@f+3,efgtoa@f+3
  3323  003AE6  0060  F2EC  F066   	movff	vfpfcnvrt@c,efgtoa@c
  3324  003AEC  EC35  F010         	call	_efgtoa	;wreg free
  3325  003AF0  0060  F180  F0A4   	movff	?_efgtoa,?_vfpfcnvrt
  3326  003AF6  0060  F184  F0A5   	movff	?_efgtoa+1,?_vfpfcnvrt+1
  3327  003AFC  EFA1  F01E         	goto	l466
  3328  003B00                     l4135:
  3329                           
  3330                           ; BSR set to: 0
  3331                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 928:         if (!str
      +                          ncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  3332  003B00  0EB8               	movlw	low vfpfcnvrt@ct
  3333  003B02  6E01               	movwf	strncmp@_l^0,c
  3334  003B04  0E00               	movlw	high vfpfcnvrt@ct
  3335  003B06  6E02               	movwf	(strncmp@_l+1)^0,c
  3336  003B08  0E66               	movlw	low STR_14
  3337  003B0A  6E03               	movwf	strncmp@_r^0,c
  3338  003B0C  0E20               	movlw	high STR_14
  3339  003B0E  6E04               	movwf	(strncmp@_r+1)^0,c
  3340  003B10  0E00               	movlw	0
  3341  003B12  6E06               	movwf	(strncmp@n+1)^0,c
  3342  003B14  0E02               	movlw	2
  3343  003B16  6E05               	movwf	strncmp@n^0,c
  3344  003B18  EC18  F02C         	call	_strncmp	;wreg free
  3345  003B1C  5001               	movf	?_strncmp^0,w,c
  3346  003B1E  1002               	iorwf	(?_strncmp+1)^0,w,c
  3347  003B20  A4D8               	btfss	status,2,c
  3348  003B22  EF95  F01D         	goto	u5051
  3349  003B26  EF97  F01D         	goto	u5050
  3350  003B2A                     u5051:
  3351  003B2A  EF38  F01E         	goto	l4151
  3352  003B2E                     u5050:
  3353  003B2E                     
  3354                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 931:             if (
      +                          (0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  3355  003B2E  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3356  003B34  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3357  003B3A  006F FF78  F0AA    	movff	postinc2,??_vfpfcnvrt
  3358  003B40  006F FF74  F0AB    	movff	postdec2,??_vfpfcnvrt+1
  3359  003B46  0E01               	movlw	1
  3360  003B48  0100               	movlb	0	; () banked
  3361  003B4A  27AA               	addwf	??_vfpfcnvrt& (0+255),f,b
  3362  003B4C  0E00               	movlw	0
  3363  003B4E  23AB               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  3364  003B50  0060  F2AB  FFF6   	movff	??_vfpfcnvrt,tblptrl
  3365  003B56  0060  F2AF  FFF7   	movff	??_vfpfcnvrt+1,tblptrh
  3366  003B5C                     	if	0	;tblptru may be non-zero
  3367  003B5C                     	endif
  3368  003B5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3369  003B5C  0E00               	movlw	low (__mediumconst shr (0+16))
  3370  003B5E  6EF8               	movwf	tblptru,c
  3371  003B60                     	endif
  3372  003B60  0008               	tblrd		*
  3373  003B62  006F FFD4  F0BB    	movff	tablat,vfpfcnvrt@c
  3374  003B68  0EBF               	movlw	191
  3375  003B6A  6FAA               	movwf	??_vfpfcnvrt& (0+255),b
  3376  003B6C  0EFF               	movlw	255
  3377  003B6E  6FAB               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  3378  003B70  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3379  003B76  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3380  003B7C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3381  003B82  006F FF77 FFF7     	movff	postdec2,tblptrh
  3382  003B88                     	if	0	;tblptru may be non-zero
  3383  003B88                     	endif
  3384  003B88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3385  003B88  0E00               	movlw	low (__mediumconst shr (0+16))
  3386  003B8A  6EF8               	movwf	tblptru,c
  3387  003B8C                     	endif
  3388  003B8C  0008               	tblrd		*
  3389  003B8E  50F5               	movf	tablat,w,c
  3390  003B90  6FAC               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  3391  003B92  6BAD               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  3392  003B94  51AA               	movf	??_vfpfcnvrt& (0+255),w,b
  3393  003B96  27AC               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  3394  003B98  51AB               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  3395  003B9A  23AD               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  3396  003B9C  51AD               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  3397  003B9E  E10A               	bnz	u5060
  3398  003BA0  0E1A               	movlw	26
  3399  003BA2  5DAC               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  3400  003BA4  A0D8               	btfss	status,0,c
  3401  003BA6  EFD7  F01D         	goto	u5061
  3402  003BAA  EFDA  F01D         	goto	u5060
  3403  003BAE                     u5061:
  3404  003BAE  0E01               	movlw	1
  3405  003BB0  EFDB  F01D         	goto	u5070
  3406  003BB4                     u5060:
  3407  003BB4  0E00               	movlw	0
  3408  003BB6                     u5070:
  3409  003BB6  6FB2               	movwf	_vfpfcnvrt$546& (0+255),b
  3410  003BB8  6BB3               	clrf	(_vfpfcnvrt$546+1)& (0+255),b
  3411  003BBA                     
  3412                           ; BSR set to: 0
  3413  003BBA  51B2               	movf	_vfpfcnvrt$546& (0+255),w,b
  3414  003BBC  11B3               	iorwf	(_vfpfcnvrt$546+1)& (0+255),w,b
  3415  003BBE  B4D8               	btfsc	status,2,c
  3416  003BC0  EFE4  F01D         	goto	u5081
  3417  003BC4  EFE6  F01D         	goto	u5080
  3418  003BC8                     u5081:
  3419  003BC8  EF0A  F01E         	goto	l4145
  3420  003BCC                     u5080:
  3421  003BCC                     
  3422                           ; BSR set to: 0
  3423                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 932:                 
      +                          f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3424  003BCC  0060  F2A3  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3425  003BD2  0060  F2A7  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3426  003BD8  006F FF7C  F0AA    	movff	indf2,??_vfpfcnvrt
  3427  003BDE  0E04               	movlw	4
  3428  003BE0  26DE               	addwf	postinc2,f,c
  3429  003BE2  006F FF7C  F0AB    	movff	indf2,??_vfpfcnvrt+1
  3430  003BE8  0E00               	movlw	0
  3431  003BEA  22DD               	addwfc	postdec2,f,c
  3432  003BEC  0060  F2AB  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3433  003BF2  0060  F2AF  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3434  003BF8  006F FF78  F0B4    	movff	postinc2,vfpfcnvrt@f
  3435  003BFE  006F FF78  F0B5    	movff	postinc2,vfpfcnvrt@f+1
  3436  003C04  006F FF78  F0B6    	movff	postinc2,vfpfcnvrt@f+2
  3437  003C0A  006F FF78  F0B7    	movff	postinc2,vfpfcnvrt@f+3
  3438                           
  3439                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 933:             } el
      +                          se {
  3440  003C10  EF2C  F01E         	goto	l473
  3441  003C14                     l4145:
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 934:                 
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3445  003C14  0060  F2A3  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  3446  003C1A  0060  F2A7  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  3447  003C20  006F FF7C  F0AA    	movff	indf2,??_vfpfcnvrt
  3448  003C26  0E04               	movlw	4
  3449  003C28  26DE               	addwf	postinc2,f,c
  3450  003C2A  006F FF7C  F0AB    	movff	indf2,??_vfpfcnvrt+1
  3451  003C30  0E00               	movlw	0
  3452  003C32  22DD               	addwfc	postdec2,f,c
  3453  003C34  0060  F2AB  FFD9   	movff	??_vfpfcnvrt,fsr2l
  3454  003C3A  0060  F2AF  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  3455  003C40  006F FF78  F0B4    	movff	postinc2,vfpfcnvrt@f
  3456  003C46  006F FF78  F0B5    	movff	postinc2,vfpfcnvrt@f+1
  3457  003C4C  006F FF78  F0B6    	movff	postinc2,vfpfcnvrt@f+2
  3458  003C52  006F FF78  F0B7    	movff	postinc2,vfpfcnvrt@f+3
  3459  003C58                     l473:
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 936:             *fmt
      +                           += ((sizeof("lf")/sizeof("lf"[0]))-1);
  3463  003C58  0E02               	movlw	2
  3464  003C5A  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3465  003C60  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3466  003C66  26DE               	addwf	postinc2,f,c
  3467  003C68  0E00               	movlw	0
  3468  003C6A  22DD               	addwfc	postdec2,f,c
  3469  003C6C  EF61  F01D         	goto	l4131
  3470  003C70                     l4151:
  3471                           
  3472                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1350:         if ((*f
      +                          mt)[0] == '%') {
  3473  003C70  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3474  003C76  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3475  003C7C  006F FF7B FFF6     	movff	postinc2,tblptrl
  3476  003C82  006F FF77 FFF7     	movff	postdec2,tblptrh
  3477  003C88                     	if	0	;tblptru may be non-zero
  3478  003C88                     	endif
  3479  003C88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3480  003C88  0E00               	movlw	low (__mediumconst shr (0+16))
  3481  003C8A  6EF8               	movwf	tblptru,c
  3482  003C8C                     	endif
  3483  003C8C  0008               	tblrd		*
  3484  003C8E  50F5               	movf	tablat,w,c
  3485  003C90  0A25               	xorlw	37
  3486  003C92  A4D8               	btfss	status,2,c
  3487  003C94  EF4E  F01E         	goto	u5091
  3488  003C98  EF50  F01E         	goto	u5090
  3489  003C9C                     u5091:
  3490  003C9C  EF6C  F01E         	goto	l4161
  3491  003CA0                     u5090:
  3492  003CA0                     
  3493                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1351:             ++*
      +                          fmt;
  3494  003CA0  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3495  003CA6  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3496  003CAC  2ADE               	incf	postinc2,f,c
  3497  003CAE  0E00               	movlw	0
  3498  003CB0  22DD               	addwfc	postdec2,f,c
  3499  003CB2                     
  3500                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1352:             fpu
      +                          tc((int)'%', fp);
  3501  003CB2  0E00               	movlw	0
  3502  003CB4  6E02               	movwf	(fputc@c+1)^0,c
  3503  003CB6  0E25               	movlw	37
  3504  003CB8  6E01               	movwf	fputc@c^0,c
  3505  003CBA  0060  F290  F003   	movff	vfpfcnvrt@fp,fputc@fp
  3506  003CC0  0060  F294  F004   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3507  003CC6  EC0A  F02D         	call	_fputc	;wreg free
  3508  003CCA                     l4157:
  3509                           
  3510                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1353:             ret
      +                          urn 1;
  3511  003CCA  0E00               	movlw	0
  3512  003CCC  0100               	movlb	0	; () banked
  3513  003CCE  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3514  003CD0  0E01               	movlw	1
  3515  003CD2  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3516  003CD4  EFA1  F01E         	goto	l466
  3517  003CD8                     l4161:
  3518                           
  3519                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1357:         ++*fmt;
  3520  003CD8  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3521  003CDE  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3522  003CE4  2ADE               	incf	postinc2,f,c
  3523  003CE6  0E00               	movlw	0
  3524  003CE8  22DD               	addwfc	postdec2,f,c
  3525  003CEA                     
  3526                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1358:         return 
      +                          0;
  3527  003CEA  0E00               	movlw	0
  3528  003CEC  0100               	movlb	0	; () banked
  3529  003CEE  6FA5               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  3530  003CF0  0E00               	movlw	0
  3531  003CF2  6FA4               	movwf	?_vfpfcnvrt& (0+255),b
  3532  003CF4  EFA1  F01E         	goto	l466
  3533  003CF8                     l4167:
  3534                           
  3535                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1362:     fputc((int)
      +                          (*fmt)[0], fp);
  3536  003CF8  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3537  003CFE  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3538  003D04  006F FF7B FFF6     	movff	postinc2,tblptrl
  3539  003D0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  3540  003D10                     	if	0	;tblptru may be non-zero
  3541  003D10                     	endif
  3542  003D10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3543  003D10  0E00               	movlw	low (__mediumconst shr (0+16))
  3544  003D12  6EF8               	movwf	tblptru,c
  3545  003D14                     	endif
  3546  003D14  0008               	tblrd		*
  3547  003D16  50F5               	movf	tablat,w,c
  3548  003D18  6E01               	movwf	fputc@c^0,c
  3549  003D1A  6A02               	clrf	(fputc@c+1)^0,c
  3550  003D1C  0060  F290  F003   	movff	vfpfcnvrt@fp,fputc@fp
  3551  003D22  0060  F294  F004   	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3552  003D28  EC0A  F02D         	call	_fputc	;wreg free
  3553  003D2C                     
  3554                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  3555  003D2C  0060  F29B  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  3556  003D32  0060  F29F  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  3557  003D38  2ADE               	incf	postinc2,f,c
  3558  003D3A  0E00               	movlw	0
  3559  003D3C  22DD               	addwfc	postdec2,f,c
  3560  003D3E  EF65  F01E         	goto	l4157
  3561  003D42                     l466:
  3562  003D42  0012               	return		;funcret
  3563  003D44                     __end_of_vfpfcnvrt:
  3564                           	opt callstack 0
  3565                           
  3566 ;; *************** function _strncmp *****************
  3567 ;; Defined at:
  3568 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strncmp.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3571 ;;		 -> vfpfcnvrt@ct(3), 
  3572 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3573 ;;		 -> STR_16(3), 
  3574 ;;  n               2    4[COMRAM] unsigned int 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3577 ;;		 -> STR_16(3), 
  3578 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3579 ;;		 -> vfpfcnvrt@ct(3), 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  2    0[COMRAM] int 
  3582 ;; Registers used:
  3583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3589 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3590 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3591 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3592 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3593 ;;Total ram usage:       11 bytes
  3594 ;; Hardware stack levels used:    1
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_vfpfcnvrt
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text5
  3603  005830                     __ptext5:
  3604                           	opt callstack 0
  3605  005830                     _strncmp:
  3606                           	opt callstack 26
  3607  005830  0060  F004  F008   	movff	strncmp@_l,strncmp@l
  3608  005836  0060  F008  F009   	movff	strncmp@_l+1,strncmp@l+1
  3609  00583C  0060  F00C  F00A   	movff	strncmp@_r,strncmp@r
  3610  005842  0060  F010  F00B   	movff	strncmp@_r+1,strncmp@r+1
  3611  005848  0605               	decf	strncmp@n^0,f,c
  3612  00584A  A0D8               	btfss	status,0,c
  3613  00584C  0606               	decf	(strncmp@n+1)^0,f,c
  3614  00584E  2805               	incf	strncmp@n^0,w,c
  3615  005850  E106               	bnz	u4861
  3616  005852  2806               	incf	(strncmp@n+1)^0,w,c
  3617  005854  A4D8               	btfss	status,2,c
  3618  005856  EF2F  F02C         	goto	u4861
  3619  00585A  EF31  F02C         	goto	u4860
  3620  00585E                     u4861:
  3621  00585E  EF3E  F02C         	goto	l4055
  3622  005862                     u4860:
  3623  005862  0E00               	movlw	0
  3624  005864  6E02               	movwf	(?_strncmp+1)^0,c
  3625  005866  0E00               	movlw	0
  3626  005868  6E01               	movwf	?_strncmp^0,c
  3627  00586A  EF98  F02C         	goto	l1275
  3628  00586E                     l4053:
  3629  00586E  4A08               	infsnz	strncmp@l^0,f,c
  3630  005870  2A09               	incf	(strncmp@l+1)^0,f,c
  3631  005872  4A0A               	infsnz	strncmp@r^0,f,c
  3632  005874  2A0B               	incf	(strncmp@r+1)^0,f,c
  3633  005876  0605               	decf	strncmp@n^0,f,c
  3634  005878  A0D8               	btfss	status,0,c
  3635  00587A  0606               	decf	(strncmp@n+1)^0,f,c
  3636  00587C                     l4055:
  3637  00587C  0060  F023  FFD9   	movff	strncmp@l,fsr2l
  3638  005882  0060  F027  FFDA   	movff	strncmp@l+1,fsr2h
  3639  005888  50DF               	movf	indf2,w,c
  3640  00588A  B4D8               	btfsc	status,2,c
  3641  00588C  EF4A  F02C         	goto	u4871
  3642  005890  EF4C  F02C         	goto	u4870
  3643  005894                     u4871:
  3644  005894  EF81  F02C         	goto	l4063
  3645  005898                     u4870:
  3646  005898  0060  F02B  FFF6   	movff	strncmp@r,tblptrl
  3647  00589E  0060  F02F  FFF7   	movff	strncmp@r+1,tblptrh
  3648  0058A4                     	if	0	;tblptru may be non-zero
  3649  0058A4                     	endif
  3650  0058A4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3651  0058A4  0E00               	movlw	low (__mediumconst shr (0+16))
  3652  0058A6  6EF8               	movwf	tblptru,c
  3653  0058A8                     	endif
  3654  0058A8  0008               	tblrd		*
  3655  0058AA  50F5               	movf	tablat,w,c
  3656  0058AC  0900               	iorlw	0
  3657  0058AE  B4D8               	btfsc	status,2,c
  3658  0058B0  EF5C  F02C         	goto	u4881
  3659  0058B4  EF5E  F02C         	goto	u4880
  3660  0058B8                     u4881:
  3661  0058B8  EF81  F02C         	goto	l4063
  3662  0058BC                     u4880:
  3663  0058BC  5005               	movf	strncmp@n^0,w,c
  3664  0058BE  1006               	iorwf	(strncmp@n+1)^0,w,c
  3665  0058C0  B4D8               	btfsc	status,2,c
  3666  0058C2  EF65  F02C         	goto	u4891
  3667  0058C6  EF67  F02C         	goto	u4890
  3668  0058CA                     u4891:
  3669  0058CA  EF81  F02C         	goto	l4063
  3670  0058CE                     u4890:
  3671  0058CE  0060  F023  FFD9   	movff	strncmp@l,fsr2l
  3672  0058D4  0060  F027  FFDA   	movff	strncmp@l+1,fsr2h
  3673  0058DA  50DF               	movf	indf2,w,c
  3674  0058DC  6E07               	movwf	??_strncmp^0,c
  3675  0058DE  0060  F02B  FFF6   	movff	strncmp@r,tblptrl
  3676  0058E4  0060  F02F  FFF7   	movff	strncmp@r+1,tblptrh
  3677  0058EA                     	if	0	;tblptru may be non-zero
  3678  0058EA                     	endif
  3679  0058EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3680  0058EA  0E00               	movlw	low (__mediumconst shr (0+16))
  3681  0058EC  6EF8               	movwf	tblptru,c
  3682  0058EE                     	endif
  3683  0058EE  0008               	tblrd		*
  3684  0058F0  50F5               	movf	tablat,w,c
  3685  0058F2  1807               	xorwf	??_strncmp^0,w,c
  3686  0058F4  B4D8               	btfsc	status,2,c
  3687  0058F6  EF7F  F02C         	goto	u4901
  3688  0058FA  EF81  F02C         	goto	u4900
  3689  0058FE                     u4901:
  3690  0058FE  EF37  F02C         	goto	l4053
  3691  005902                     u4900:
  3692  005902                     l4063:
  3693  005902  0060  F023  FFD9   	movff	strncmp@l,fsr2l
  3694  005908  0060  F027  FFDA   	movff	strncmp@l+1,fsr2h
  3695  00590E  50DF               	movf	indf2,w,c
  3696  005910  6E07               	movwf	??_strncmp^0,c
  3697  005912  0060  F02B  FFF6   	movff	strncmp@r,tblptrl
  3698  005918  0060  F02F  FFF7   	movff	strncmp@r+1,tblptrh
  3699  00591E                     	if	0	;tblptru may be non-zero
  3700  00591E                     	endif
  3701  00591E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  3702  00591E  0E00               	movlw	low (__mediumconst shr (0+16))
  3703  005920  6EF8               	movwf	tblptru,c
  3704  005922                     	endif
  3705  005922  0008               	tblrd		*
  3706  005924  50F5               	movf	tablat,w,c
  3707  005926  5C07               	subwf	??_strncmp^0,w,c
  3708  005928  6E01               	movwf	?_strncmp^0,c
  3709  00592A  6A02               	clrf	(?_strncmp+1)^0,c
  3710  00592C  A0D8               	btfss	status,0,c
  3711  00592E  0602               	decf	(?_strncmp+1)^0,f,c
  3712  005930                     l1275:
  3713  005930  0012               	return		;funcret
  3714  005932                     __end_of_strncmp:
  3715                           	opt callstack 0
  3716                           
  3717 ;; *************** function _efgtoa *****************
  3718 ;; Defined at:
  3719 ;;		line 319 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;  fp              2    0[BANK0 ] PTR struct _IO_FILE
  3722 ;;		 -> sprintf@f(6), 
  3723 ;;  f               4    2[BANK0 ] PTR struct _IO_FILE
  3724 ;;  c               1    6[BANK0 ] unsigned char 
  3725 ;; Auto vars:     Size  Location     Type
  3726 ;;  u               4   64[BANK0 ] unsigned char 
  3727 ;;  g               4   56[BANK0 ] unsigned char 
  3728 ;;  l               4   50[BANK0 ] unsigned char 
  3729 ;;  h               4   46[BANK0 ] unsigned char 
  3730 ;;  ou              4   12[BANK0 ] unsigned char 
  3731 ;;  n               2   62[BANK0 ] int 
  3732 ;;  e               2   60[BANK0 ] int 
  3733 ;;  i               2   54[BANK0 ] int 
  3734 ;;  w               2   43[BANK0 ] int 
  3735 ;;  p               2   40[BANK0 ] int 
  3736 ;;  sign            2   38[BANK0 ] int 
  3737 ;;  d               2   36[BANK0 ] int 
  3738 ;;  ne              2   34[BANK0 ] int 
  3739 ;;  m               2   32[BANK0 ] int 
  3740 ;;  pp              2   30[BANK0 ] int 
  3741 ;;  t               2   28[BANK0 ] int 
  3742 ;;  mode            1   45[BANK0 ] unsigned char 
  3743 ;;  nmode           1   42[BANK0 ] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  2    0[BANK0 ] int 
  3746 ;; Registers used:
  3747 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3753 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3754 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3755 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3756 ;;      Totals:         0      68       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3757 ;;Total ram usage:       68 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    4
  3760 ;; This function calls:
  3761 ;;		___awdiv
  3762 ;;		___awmod
  3763 ;;		___fladd
  3764 ;;		___fldiv
  3765 ;;		___fleq
  3766 ;;		___flge
  3767 ;;		___flmul
  3768 ;;		___flneg
  3769 ;;		___flsub
  3770 ;;		___fltol
  3771 ;;		___fpclassifyf
  3772 ;;		_floorf
  3773 ;;		_isupper
  3774 ;;		_pad
  3775 ;;		_strcpy
  3776 ;;		_tolower
  3777 ;; This function is called by:
  3778 ;;		_vfpfcnvrt
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           
  3782                           	psect	text6
  3783  00206A                     __ptext6:
  3784                           	opt callstack 0
  3785  00206A                     _efgtoa:
  3786                           	opt callstack 22
  3787  00206A                     
  3788                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 319: static int efgto
      +                          a(FILE *fp, long double f, char c);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\comm
      +                          on\doprnt.c: 320: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 32
      +                          1:     char mode, nmode;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.
      +                          c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;F:\Programme\Microchip\xc8\v2.10\p
      +                          ic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;;F:\Programme\Microc
      +                          hip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 326:     sign = 0;
  3789  00206A  0E00               	movlw	0
  3790  00206C  0100               	movlb	0	; () banked
  3791  00206E  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  3792  002070  0E00               	movlw	0
  3793  002072  6F86               	movwf	efgtoa@sign& (0+255),b
  3794  002074                     
  3795                           ; BSR set to: 0
  3796                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 327:     g = f;
  3797  002074  0060  F188  F098   	movff	efgtoa@f,efgtoa@g
  3798  00207A  0060  F18C  F099   	movff	efgtoa@f+1,efgtoa@g+1
  3799  002080  0060  F190  F09A   	movff	efgtoa@f+2,efgtoa@g+2
  3800  002086  0060  F194  F09B   	movff	efgtoa@f+3,efgtoa@g+3
  3801  00208C                     
  3802                           ; BSR set to: 0
  3803                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 328:     if (g < 0.0)
      +                           {
  3804  00208C  BF9B               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3805  00208E  EF4D  F010         	goto	u4270
  3806  002092  EF4B  F010         	goto	u4271
  3807  002096                     u4271:
  3808  002096  EF6B  F010         	goto	l3717
  3809  00209A                     u4270:
  3810  00209A                     
  3811                           ; BSR set to: 0
  3812                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 329:         sign = 1
      +                          ;
  3813  00209A  0E00               	movlw	0
  3814  00209C  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  3815  00209E  0E01               	movlw	1
  3816  0020A0  6F86               	movwf	efgtoa@sign& (0+255),b
  3817  0020A2                     
  3818                           ; BSR set to: 0
  3819                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 330:         g = -g;
  3820  0020A2  0060  F260  F001   	movff	efgtoa@g,___flneg@f1
  3821  0020A8  0060  F264  F002   	movff	efgtoa@g+1,___flneg@f1+1
  3822  0020AE  0060  F268  F003   	movff	efgtoa@g+2,___flneg@f1+2
  3823  0020B4  0060  F26C  F004   	movff	efgtoa@g+3,___flneg@f1+3
  3824  0020BA  EC6F  F031         	call	___flneg	;wreg free
  3825  0020BE  0060  F004  F098   	movff	?___flneg,efgtoa@g
  3826  0020C4  0060  F008  F099   	movff	?___flneg+1,efgtoa@g+1
  3827  0020CA  0060  F00C  F09A   	movff	?___flneg+2,efgtoa@g+2
  3828  0020D0  0060  F010  F09B   	movff	?___flneg+3,efgtoa@g+3
  3829  0020D6                     l3717:
  3830                           
  3831                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  3832  0020D6  0E00               	movlw	0
  3833  0020D8  0100               	movlb	0	; () banked
  3834  0020DA  6F9F               	movwf	(efgtoa@n+1)& (0+255),b
  3835  0020DC  0E00               	movlw	0
  3836  0020DE  6F9E               	movwf	efgtoa@n& (0+255),b
  3837  0020E0                     
  3838                           ; BSR set to: 0
  3839                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 335:     w = width;
  3840  0020E0  0060  F3A4  F08B   	movff	_width,efgtoa@w
  3841  0020E6  0060  F3A8  F08C   	movff	_width+1,efgtoa@w+1
  3842  0020EC                     
  3843                           ; BSR set to: 0
  3844                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 336:     if (sign || 
      +                          (flags & (1 << 2))) {
  3845  0020EC  5186               	movf	efgtoa@sign& (0+255),w,b
  3846  0020EE  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3847  0020F0  A4D8               	btfss	status,2,c
  3848  0020F2  EF7D  F010         	goto	u4281
  3849  0020F6  EF7F  F010         	goto	u4280
  3850  0020FA                     u4281:
  3851  0020FA  EF86  F010         	goto	l3725
  3852  0020FE                     u4280:
  3853  0020FE                     
  3854                           ; BSR set to: 0
  3855  0020FE  A5ED               	btfss	_flags& (0+255),2,b
  3856  002100  EF84  F010         	goto	u4291
  3857  002104  EF86  F010         	goto	u4290
  3858  002108                     u4291:
  3859  002108  EFA1  F010         	goto	l3737
  3860  00210C                     u4290:
  3861  00210C                     l3725:
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 337:         dbuf[n] 
      +                          = sign ? '-' : '+';
  3865  00210C  5186               	movf	efgtoa@sign& (0+255),w,b
  3866  00210E  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3867  002110  A4D8               	btfss	status,2,c
  3868  002112  EF8D  F010         	goto	u4301
  3869  002116  EF8F  F010         	goto	u4300
  3870  00211A                     u4301:
  3871  00211A  EF95  F010         	goto	l3729
  3872  00211E                     u4300:
  3873  00211E                     
  3874                           ; BSR set to: 0
  3875  00211E  0E00               	movlw	0
  3876  002120  6F71               	movwf	(_efgtoa$515+1)& (0+255),b
  3877  002122  0E2B               	movlw	43
  3878  002124  6F70               	movwf	_efgtoa$515& (0+255),b
  3879  002126  EF99  F010         	goto	l3731
  3880  00212A                     l3729:
  3881                           
  3882                           ; BSR set to: 0
  3883  00212A  0E00               	movlw	0
  3884  00212C  6F71               	movwf	(_efgtoa$515+1)& (0+255),b
  3885  00212E  0E2D               	movlw	45
  3886  002130  6F70               	movwf	_efgtoa$515& (0+255),b
  3887  002132                     l3731:
  3888                           
  3889                           ; BSR set to: 0
  3890  002132  0060  F1C0  F122   	movff	_efgtoa$515,_dbuf
  3891  002138                     
  3892                           ; BSR set to: 0
  3893                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 338:         ++n;
  3894  002138  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  3895  00213A  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  3896  00213C                     
  3897                           ; BSR set to: 0
  3898                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 339:         --w;
  3899  00213C  078B               	decf	efgtoa@w& (0+255),f,b
  3900  00213E  A0D8               	btfss	status,0,c
  3901  002140  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  3902  002142                     l3737:
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 344:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3906  002142  0060  F260  F001   	movff	efgtoa@g,___fpclassifyf@x
  3907  002148  0060  F264  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  3908  00214E  0060  F268  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  3909  002154  0060  F26C  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  3910  00215A  EC7C  F02A         	call	___fpclassifyf	;wreg free
  3911  00215E  0401               	decf	?___fpclassifyf^0,w,c
  3912  002160  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3913  002162  A4D8               	btfss	status,2,c
  3914  002164  EFB6  F010         	goto	u4311
  3915  002168  EFB8  F010         	goto	u4310
  3916  00216C                     u4311:
  3917  00216C  EF15  F011         	goto	l3755
  3918  002170                     u4310:
  3919  002170  0EBF               	movlw	191
  3920  002172  0100               	movlb	0	; () banked
  3921  002174  6F67               	movwf	??_efgtoa& (0+255),b
  3922  002176  0EFF               	movlw	255
  3923  002178  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  3924  00217A  5166               	movf	efgtoa@c& (0+255),w,b
  3925  00217C  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  3926  00217E  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  3927  002180  5167               	movf	??_efgtoa& (0+255),w,b
  3928  002182  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  3929  002184  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  3930  002186  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3931  002188  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  3932  00218A  E10A               	bnz	u4320
  3933  00218C  0E1A               	movlw	26
  3934  00218E  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  3935  002190  A0D8               	btfss	status,0,c
  3936  002192  EFCD  F010         	goto	u4321
  3937  002196  EFD0  F010         	goto	u4320
  3938  00219A                     u4321:
  3939  00219A  0E01               	movlw	1
  3940  00219C  EFD1  F010         	goto	u4330
  3941  0021A0                     u4320:
  3942  0021A0  0E00               	movlw	0
  3943  0021A2                     u4330:
  3944  0021A2  6F72               	movwf	_efgtoa$516& (0+255),b
  3945  0021A4  6B73               	clrf	(_efgtoa$516+1)& (0+255),b
  3946  0021A6                     
  3947                           ; BSR set to: 0
  3948  0021A6  5172               	movf	_efgtoa$516& (0+255),w,b
  3949  0021A8  1173               	iorwf	(_efgtoa$516+1)& (0+255),w,b
  3950  0021AA  B4D8               	btfsc	status,2,c
  3951  0021AC  EFDA  F010         	goto	u4341
  3952  0021B0  EFDC  F010         	goto	u4340
  3953  0021B4                     u4341:
  3954  0021B4  EFEA  F010         	goto	l3747
  3955  0021B8                     u4340:
  3956  0021B8                     
  3957                           ; BSR set to: 0
  3958                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 345:             strc
      +                          py(&dbuf[n], "INF");
  3959  0021B8  0E22               	movlw	low _dbuf
  3960  0021BA  259E               	addwf	efgtoa@n& (0+255),w,b
  3961  0021BC  6E01               	movwf	strcpy@dest^0,c
  3962  0021BE  0E01               	movlw	high _dbuf
  3963  0021C0  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3964  0021C2  6E02               	movwf	(strcpy@dest+1)^0,c
  3965  0021C4  0E56               	movlw	low STR_6
  3966  0021C6  6E03               	movwf	strcpy@src^0,c
  3967  0021C8  0E20               	movlw	high STR_6
  3968  0021CA  6E04               	movwf	(strcpy@src+1)^0,c
  3969  0021CC  ECB6  F02F         	call	_strcpy	;wreg free
  3970                           
  3971                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 346:         } else {
  3972  0021D0  EFF6  F010         	goto	l3749
  3973  0021D4                     l3747:
  3974                           
  3975                           ; BSR set to: 0
  3976                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 347:             strc
      +                          py(&dbuf[n], "inf");
  3977  0021D4  0E22               	movlw	low _dbuf
  3978  0021D6  259E               	addwf	efgtoa@n& (0+255),w,b
  3979  0021D8  6E01               	movwf	strcpy@dest^0,c
  3980  0021DA  0E01               	movlw	high _dbuf
  3981  0021DC  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3982  0021DE  6E02               	movwf	(strcpy@dest+1)^0,c
  3983  0021E0  0E5E               	movlw	low STR_7
  3984  0021E2  6E03               	movwf	strcpy@src^0,c
  3985  0021E4  0E20               	movlw	high STR_7
  3986  0021E6  6E04               	movwf	(strcpy@src+1)^0,c
  3987  0021E8  ECB6  F02F         	call	_strcpy	;wreg free
  3988  0021EC                     l3749:
  3989                           
  3990                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 349:         w -= ((s
      +                          izeof("inf")/sizeof("inf"[0]))-1);
  3991  0021EC  0100               	movlb	0	; () banked
  3992  0021EE  0EFD               	movlw	253
  3993  0021F0  278B               	addwf	efgtoa@w& (0+255),f,b
  3994  0021F2  0EFF               	movlw	255
  3995  0021F4  238C               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3996  0021F6                     l3751:
  3997                           
  3998                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 350:         return p
      +                          ad(fp, &dbuf[0], w);
  3999  0021F6  0060  F180  F011   	movff	efgtoa@fp,pad@fp
  4000  0021FC  0060  F184  F012   	movff	efgtoa@fp+1,pad@fp+1
  4001  002202  0E22               	movlw	low _dbuf
  4002  002204  6E13               	movwf	pad@buf^0,c
  4003  002206  0E01               	movlw	high _dbuf
  4004  002208  6E14               	movwf	(pad@buf+1)^0,c
  4005  00220A  0060  F22C  F015   	movff	efgtoa@w,pad@p
  4006  002210  0060  F230  F016   	movff	efgtoa@w+1,pad@p+1
  4007  002216  EC99  F02C         	call	_pad	;wreg free
  4008  00221A  0060  F044  F060   	movff	?_pad,?_efgtoa
  4009  002220  0060  F048  F061   	movff	?_pad+1,?_efgtoa+1
  4010  002226  EFF7  F016         	goto	l366
  4011  00222A                     l3755:
  4012                           
  4013                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 353:         if ((0 ?
      +                           isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4014  00222A  0060  F260  F001   	movff	efgtoa@g,___fpclassifyf@x
  4015  002230  0060  F264  F002   	movff	efgtoa@g+1,___fpclassifyf@x+1
  4016  002236  0060  F268  F003   	movff	efgtoa@g+2,___fpclassifyf@x+2
  4017  00223C  0060  F26C  F004   	movff	efgtoa@g+3,___fpclassifyf@x+3
  4018  002242  EC7C  F02A         	call	___fpclassifyf	;wreg free
  4019  002246  5001               	movf	?___fpclassifyf^0,w,c
  4020  002248  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4021  00224A  A4D8               	btfss	status,2,c
  4022  00224C  EF2A  F011         	goto	u4351
  4023  002250  EF2C  F011         	goto	u4350
  4024  002254                     u4351:
  4025  002254  EF6C  F011         	goto	l3773
  4026  002258                     u4350:
  4027  002258  0EBF               	movlw	191
  4028  00225A  0100               	movlb	0	; () banked
  4029  00225C  6F67               	movwf	??_efgtoa& (0+255),b
  4030  00225E  0EFF               	movlw	255
  4031  002260  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4032  002262  5166               	movf	efgtoa@c& (0+255),w,b
  4033  002264  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  4034  002266  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  4035  002268  5167               	movf	??_efgtoa& (0+255),w,b
  4036  00226A  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4037  00226C  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4038  00226E  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4039  002270  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4040  002272  E10A               	bnz	u4360
  4041  002274  0E1A               	movlw	26
  4042  002276  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4043  002278  A0D8               	btfss	status,0,c
  4044  00227A  EF41  F011         	goto	u4361
  4045  00227E  EF44  F011         	goto	u4360
  4046  002282                     u4361:
  4047  002282  0E01               	movlw	1
  4048  002284  EF45  F011         	goto	u4370
  4049  002288                     u4360:
  4050  002288  0E00               	movlw	0
  4051  00228A                     u4370:
  4052  00228A  6F74               	movwf	_efgtoa$521& (0+255),b
  4053  00228C  6B75               	clrf	(_efgtoa$521+1)& (0+255),b
  4054  00228E                     
  4055                           ; BSR set to: 0
  4056  00228E  5174               	movf	_efgtoa$521& (0+255),w,b
  4057  002290  1175               	iorwf	(_efgtoa$521+1)& (0+255),w,b
  4058  002292  B4D8               	btfsc	status,2,c
  4059  002294  EF4E  F011         	goto	u4381
  4060  002298  EF50  F011         	goto	u4380
  4061  00229C                     u4381:
  4062  00229C  EF5E  F011         	goto	l3765
  4063  0022A0                     u4380:
  4064  0022A0                     
  4065                           ; BSR set to: 0
  4066                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 354:             strc
      +                          py(&dbuf[n], "NAN");
  4067  0022A0  0E22               	movlw	low _dbuf
  4068  0022A2  259E               	addwf	efgtoa@n& (0+255),w,b
  4069  0022A4  6E01               	movwf	strcpy@dest^0,c
  4070  0022A6  0E01               	movlw	high _dbuf
  4071  0022A8  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4072  0022AA  6E02               	movwf	(strcpy@dest+1)^0,c
  4073  0022AC  0E5A               	movlw	low STR_10
  4074  0022AE  6E03               	movwf	strcpy@src^0,c
  4075  0022B0  0E20               	movlw	high STR_10
  4076  0022B2  6E04               	movwf	(strcpy@src+1)^0,c
  4077  0022B4  ECB6  F02F         	call	_strcpy	;wreg free
  4078                           
  4079                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 355:         } else {
  4080  0022B8  EFF6  F010         	goto	l3749
  4081  0022BC                     l3765:
  4082                           
  4083                           ; BSR set to: 0
  4084                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 356:             strc
      +                          py(&dbuf[n], "nan");
  4085  0022BC  0E22               	movlw	low _dbuf
  4086  0022BE  259E               	addwf	efgtoa@n& (0+255),w,b
  4087  0022C0  6E01               	movwf	strcpy@dest^0,c
  4088  0022C2  0E01               	movlw	high _dbuf
  4089  0022C4  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4090  0022C6  6E02               	movwf	(strcpy@dest+1)^0,c
  4091  0022C8  0E62               	movlw	low STR_11
  4092  0022CA  6E03               	movwf	strcpy@src^0,c
  4093  0022CC  0E20               	movlw	high STR_11
  4094  0022CE  6E04               	movwf	(strcpy@src+1)^0,c
  4095  0022D0  ECB6  F02F         	call	_strcpy	;wreg free
  4096  0022D4  EFF6  F010         	goto	l3749
  4097  0022D8                     l3773:
  4098                           
  4099                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4100  0022D8  0E00               	movlw	0
  4101  0022DA  0100               	movlb	0	; () banked
  4102  0022DC  6FA0               	movwf	efgtoa@u& (0+255),b
  4103  0022DE  0E00               	movlw	0
  4104  0022E0  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4105  0022E2  0E80               	movlw	128
  4106  0022E4  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4107  0022E6  0E3F               	movlw	63
  4108  0022E8  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4109                           
  4110                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4111  0022EA  0E00               	movlw	0
  4112  0022EC  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4113  0022EE  0E00               	movlw	0
  4114  0022F0  6F9C               	movwf	efgtoa@e& (0+255),b
  4115  0022F2                     
  4116                           ; BSR set to: 0
  4117                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 365:     if (!(g == 0
      +                          .0)) {
  4118  0022F2  0060  F260  F001   	movff	efgtoa@g,___fleq@ff1
  4119  0022F8  0060  F264  F002   	movff	efgtoa@g+1,___fleq@ff1+1
  4120  0022FE  0060  F268  F003   	movff	efgtoa@g+2,___fleq@ff1+2
  4121  002304  0060  F26C  F004   	movff	efgtoa@g+3,___fleq@ff1+3
  4122  00230A  0E00               	movlw	0
  4123  00230C  6E05               	movwf	___fleq@ff2^0,c
  4124  00230E  0E00               	movlw	0
  4125  002310  6E06               	movwf	(___fleq@ff2+1)^0,c
  4126  002312  0E00               	movlw	0
  4127  002314  6E07               	movwf	(___fleq@ff2+2)^0,c
  4128  002316  0E00               	movlw	0
  4129  002318  6E08               	movwf	(___fleq@ff2+3)^0,c
  4130  00231A  EC8A  F02E         	call	___fleq	;wreg free
  4131  00231E  B0D8               	btfsc	status,0,c
  4132  002320  EF94  F011         	goto	u4391
  4133  002324  EF96  F011         	goto	u4390
  4134  002328                     u4391:
  4135  002328  EF3D  F012         	goto	l3791
  4136  00232C                     u4390:
  4137  00232C  EFBD  F011         	goto	l3783
  4138  002330                     l3779:
  4139                           
  4140                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 367:             u = 
      +                          u*10.0;
  4141  002330  0060  F280  F038   	movff	efgtoa@u,___flmul@b
  4142  002336  0060  F284  F039   	movff	efgtoa@u+1,___flmul@b+1
  4143  00233C  0060  F288  F03A   	movff	efgtoa@u+2,___flmul@b+2
  4144  002342  0060  F28C  F03B   	movff	efgtoa@u+3,___flmul@b+3
  4145  002348  0E00               	movlw	0
  4146  00234A  6E3C               	movwf	___flmul@a^0,c
  4147  00234C  0E00               	movlw	0
  4148  00234E  6E3D               	movwf	(___flmul@a+1)^0,c
  4149  002350  0E20               	movlw	32
  4150  002352  6E3E               	movwf	(___flmul@a+2)^0,c
  4151  002354  0E41               	movlw	65
  4152  002356  6E3F               	movwf	(___flmul@a+3)^0,c
  4153  002358  EC20  F021         	call	___flmul	;wreg free
  4154  00235C  0060  F0E0  F0A0   	movff	?___flmul,efgtoa@u
  4155  002362  0060  F0E4  F0A1   	movff	?___flmul+1,efgtoa@u+1
  4156  002368  0060  F0E8  F0A2   	movff	?___flmul+2,efgtoa@u+2
  4157  00236E  0060  F0EC  F0A3   	movff	?___flmul+3,efgtoa@u+3
  4158  002374                     
  4159                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 368:             ++e;
  4160  002374  0100               	movlb	0	; () banked
  4161  002376  4B9C               	infsnz	efgtoa@e& (0+255),f,b
  4162  002378  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  4163  00237A                     l3783:
  4164                           
  4165                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 366:         while (!
      +                          (g < (u*10.0))) {
  4166  00237A  0060  F260  F051   	movff	efgtoa@g,___flge@ff1
  4167  002380  0060  F264  F052   	movff	efgtoa@g+1,___flge@ff1+1
  4168  002386  0060  F268  F053   	movff	efgtoa@g+2,___flge@ff1+2
  4169  00238C  0060  F26C  F054   	movff	efgtoa@g+3,___flge@ff1+3
  4170  002392  0E00               	movlw	0
  4171  002394  6E3C               	movwf	___flmul@a^0,c
  4172  002396  0E00               	movlw	0
  4173  002398  6E3D               	movwf	(___flmul@a+1)^0,c
  4174  00239A  0E20               	movlw	32
  4175  00239C  6E3E               	movwf	(___flmul@a+2)^0,c
  4176  00239E  0E41               	movlw	65
  4177  0023A0  6E3F               	movwf	(___flmul@a+3)^0,c
  4178  0023A2  0060  F280  F038   	movff	efgtoa@u,___flmul@b
  4179  0023A8  0060  F284  F039   	movff	efgtoa@u+1,___flmul@b+1
  4180  0023AE  0060  F288  F03A   	movff	efgtoa@u+2,___flmul@b+2
  4181  0023B4  0060  F28C  F03B   	movff	efgtoa@u+3,___flmul@b+3
  4182  0023BA  EC20  F021         	call	___flmul	;wreg free
  4183  0023BE  0060  F0E0  F055   	movff	?___flmul,___flge@ff2
  4184  0023C4  0060  F0E4  F056   	movff	?___flmul+1,___flge@ff2+1
  4185  0023CA  0060  F0E8  F057   	movff	?___flmul+2,___flge@ff2+2
  4186  0023D0  0060  F0EC  F058   	movff	?___flmul+3,___flge@ff2+3
  4187  0023D6  EC96  F02B         	call	___flge	;wreg free
  4188  0023DA  B0D8               	btfsc	status,0,c
  4189  0023DC  EFF2  F011         	goto	u4401
  4190  0023E0  EFF4  F011         	goto	u4400
  4191  0023E4                     u4401:
  4192  0023E4  EF98  F011         	goto	l3779
  4193  0023E8                     u4400:
  4194  0023E8  EF1C  F012         	goto	l3789
  4195  0023EC                     l3785:
  4196                           
  4197                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 371:             u = 
      +                          u/10.0;
  4198  0023EC  0060  F280  F01F   	movff	efgtoa@u,___fldiv@b
  4199  0023F2  0060  F284  F020   	movff	efgtoa@u+1,___fldiv@b+1
  4200  0023F8  0060  F288  F021   	movff	efgtoa@u+2,___fldiv@b+2
  4201  0023FE  0060  F28C  F022   	movff	efgtoa@u+3,___fldiv@b+3
  4202  002404  0E00               	movlw	0
  4203  002406  6E23               	movwf	___fldiv@a^0,c
  4204  002408  0E00               	movlw	0
  4205  00240A  6E24               	movwf	(___fldiv@a+1)^0,c
  4206  00240C  0E20               	movlw	32
  4207  00240E  6E25               	movwf	(___fldiv@a+2)^0,c
  4208  002410  0E41               	movlw	65
  4209  002412  6E26               	movwf	(___fldiv@a+3)^0,c
  4210  002414  EC65  F023         	call	___fldiv	;wreg free
  4211  002418  0060  F07C  F0A0   	movff	?___fldiv,efgtoa@u
  4212  00241E  0060  F080  F0A1   	movff	?___fldiv+1,efgtoa@u+1
  4213  002424  0060  F084  F0A2   	movff	?___fldiv+2,efgtoa@u+2
  4214  00242A  0060  F088  F0A3   	movff	?___fldiv+3,efgtoa@u+3
  4215  002430                     
  4216                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 372:             --e;
  4217  002430  0100               	movlb	0	; () banked
  4218  002432  079C               	decf	efgtoa@e& (0+255),f,b
  4219  002434  A0D8               	btfss	status,0,c
  4220  002436  079D               	decf	(efgtoa@e+1)& (0+255),f,b
  4221  002438                     l3789:
  4222                           
  4223                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 370:         while (g
      +                           < u) {
  4224  002438  0060  F260  F051   	movff	efgtoa@g,___flge@ff1
  4225  00243E  0060  F264  F052   	movff	efgtoa@g+1,___flge@ff1+1
  4226  002444  0060  F268  F053   	movff	efgtoa@g+2,___flge@ff1+2
  4227  00244A  0060  F26C  F054   	movff	efgtoa@g+3,___flge@ff1+3
  4228  002450  0060  F280  F055   	movff	efgtoa@u,___flge@ff2
  4229  002456  0060  F284  F056   	movff	efgtoa@u+1,___flge@ff2+1
  4230  00245C  0060  F288  F057   	movff	efgtoa@u+2,___flge@ff2+2
  4231  002462  0060  F28C  F058   	movff	efgtoa@u+3,___flge@ff2+3
  4232  002468  EC96  F02B         	call	___flge	;wreg free
  4233  00246C  A0D8               	btfss	status,0,c
  4234  00246E  EF3B  F012         	goto	u4411
  4235  002472  EF3D  F012         	goto	u4410
  4236  002476                     u4411:
  4237  002476  EFF6  F011         	goto	l3785
  4238  00247A                     u4410:
  4239  00247A                     l3791:
  4240                           
  4241                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 377:     mode = tolow
      +                          er((int)c);
  4242  00247A  0060  F198  F007   	movff	efgtoa@c,tolower@c
  4243  002480  6A08               	clrf	(tolower@c+1)^0,c
  4244  002482  EC5F  F030         	call	_tolower	;wreg free
  4245  002486  5007               	movf	?_tolower^0,w,c
  4246  002488  0100               	movlb	0	; () banked
  4247  00248A  6F8D               	movwf	efgtoa@mode& (0+255),b
  4248  00248C                     
  4249                           ; BSR set to: 0
  4250                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 378:     nmode = mode
      +                          ;
  4251  00248C  0060  F234  F08A   	movff	efgtoa@mode,efgtoa@nmode
  4252  002492                     
  4253                           ; BSR set to: 0
  4254                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 379:     if (mode == 
      +                          'g') {
  4255  002492  0E67               	movlw	103
  4256  002494  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4257  002496  A4D8               	btfss	status,2,c
  4258  002498  EF50  F012         	goto	u4421
  4259  00249C  EF52  F012         	goto	u4420
  4260  0024A0                     u4421:
  4261  0024A0  EF7A  F012         	goto	l3805
  4262  0024A4                     u4420:
  4263  0024A4                     
  4264                           ; BSR set to: 0
  4265                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 380:   if (prec == 0)
      +                           {
  4266  0024A4  51EB               	movf	_prec& (0+255),w,b
  4267  0024A6  11EC               	iorwf	(_prec+1)& (0+255),w,b
  4268  0024A8  A4D8               	btfss	status,2,c
  4269  0024AA  EF59  F012         	goto	u4431
  4270  0024AE  EF5B  F012         	goto	u4430
  4271  0024B2                     u4431:
  4272  0024B2  EF5F  F012         	goto	l3801
  4273  0024B6                     u4430:
  4274  0024B6                     
  4275                           ; BSR set to: 0
  4276                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  4277  0024B6  0E00               	movlw	0
  4278  0024B8  6FEC               	movwf	(_prec+1)& (0+255),b
  4279  0024BA  0E01               	movlw	1
  4280  0024BC  6FEB               	movwf	_prec& (0+255),b
  4281  0024BE                     l3801:
  4282                           
  4283                           ; BSR set to: 0
  4284                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 383:         p = (0 <
      +                           prec) ? prec : 6;
  4285  0024BE  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  4286  0024C0  EF6C  F012         	goto	u4440
  4287  0024C4  51EC               	movf	(_prec+1)& (0+255),w,b
  4288  0024C6  E106               	bnz	u4441
  4289  0024C8  05EB               	decf	_prec& (0+255),w,b
  4290  0024CA  B0D8               	btfsc	status,0,c
  4291  0024CC  EF6A  F012         	goto	u4441
  4292  0024D0  EF6C  F012         	goto	u4440
  4293  0024D4                     u4441:
  4294  0024D4  EF72  F012         	goto	l384
  4295  0024D8                     u4440:
  4296  0024D8                     l3803:
  4297                           
  4298                           ; BSR set to: 0
  4299  0024D8  0E00               	movlw	0
  4300  0024DA  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  4301  0024DC  0E06               	movlw	6
  4302  0024DE  6F88               	movwf	efgtoa@p& (0+255),b
  4303  0024E0  EF83  F012         	goto	l3811
  4304  0024E4                     l384:
  4305                           
  4306                           ; BSR set to: 0
  4307  0024E4  0060  F3AC  F088   	movff	_prec,efgtoa@p
  4308  0024EA  0060  F3B0  F089   	movff	_prec+1,efgtoa@p+1
  4309  0024F0  EF83  F012         	goto	l3811
  4310  0024F4                     l3805:
  4311                           
  4312                           ; BSR set to: 0
  4313                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 385:         p = (pre
      +                          c < 0) ? 6 : prec;
  4314  0024F4  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  4315  0024F6  EF7F  F012         	goto	u4451
  4316  0024FA  EF81  F012         	goto	u4450
  4317  0024FE                     u4451:
  4318  0024FE  EF6C  F012         	goto	l3803
  4319  002502                     u4450:
  4320  002502  EF72  F012         	goto	l384
  4321  002506                     l3811:
  4322                           
  4323                           ; BSR set to: 0
  4324                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 389:     if (mode == 
      +                          'g') {
  4325  002506  0E67               	movlw	103
  4326  002508  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4327  00250A  A4D8               	btfss	status,2,c
  4328  00250C  EF8A  F012         	goto	u4461
  4329  002510  EF8C  F012         	goto	u4460
  4330  002514                     u4461:
  4331  002514  EFBD  F012         	goto	l3821
  4332  002518                     u4460:
  4333  002518                     
  4334                           ; BSR set to: 0
  4335                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 390:         if (!(e 
      +                          < -4) && !((p - 1) < e)) {
  4336  002518  AF9D               	btfss	(efgtoa@e+1)& (0+255),7,b
  4337  00251A  EF9A  F012         	goto	u4470
  4338  00251E  0EFC               	movlw	252
  4339  002520  5D9C               	subwf	efgtoa@e& (0+255),w,b
  4340  002522  0EFF               	movlw	255
  4341  002524  599D               	subwfb	(efgtoa@e+1)& (0+255),w,b
  4342  002526  A0D8               	btfss	status,0,c
  4343  002528  EF98  F012         	goto	u4471
  4344  00252C  EF9A  F012         	goto	u4470
  4345  002530                     u4471:
  4346  002530  EFBB  F012         	goto	l3819
  4347  002534                     u4470:
  4348  002534                     
  4349                           ; BSR set to: 0
  4350  002534  0EFF               	movlw	255
  4351  002536  6F67               	movwf	??_efgtoa& (0+255),b
  4352  002538  0EFF               	movlw	255
  4353  00253A  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  4354  00253C  0060  F220  F069   	movff	efgtoa@p,??_efgtoa+2
  4355  002542  0060  F224  F06A   	movff	efgtoa@p+1,??_efgtoa+3
  4356  002548  5167               	movf	??_efgtoa& (0+255),w,b
  4357  00254A  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  4358  00254C  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  4359  00254E  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4360  002550  519C               	movf	efgtoa@e& (0+255),w,b
  4361  002552  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  4362  002554  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  4363  002556  0A80               	xorlw	128
  4364  002558  6F6B               	movwf	(??_efgtoa+4)& (0+255),b
  4365  00255A  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  4366  00255C  0A80               	xorlw	128
  4367  00255E  596B               	subwfb	(??_efgtoa+4)& (0+255),w,b
  4368  002560  A0D8               	btfss	status,0,c
  4369  002562  EFB5  F012         	goto	u4481
  4370  002566  EFB7  F012         	goto	u4480
  4371  00256A                     u4481:
  4372  00256A  EFBB  F012         	goto	l3819
  4373  00256E                     u4480:
  4374  00256E                     
  4375                           ; BSR set to: 0
  4376                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 391:             nmod
      +                          e = 'f';
  4377  00256E  0E66               	movlw	102
  4378  002570  6F8A               	movwf	efgtoa@nmode& (0+255),b
  4379                           
  4380                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 392:         } else {
  4381  002572  EFBD  F012         	goto	l3821
  4382  002576                     l3819:
  4383                           
  4384                           ; BSR set to: 0
  4385                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 393:             nmod
      +                          e = 'e';
  4386  002576  0E65               	movlw	101
  4387  002578  6F8A               	movwf	efgtoa@nmode& (0+255),b
  4388  00257A                     l3821:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 398:     m = p;
  4392  00257A  0060  F220  F080   	movff	efgtoa@p,efgtoa@m
  4393  002580  0060  F224  F081   	movff	efgtoa@p+1,efgtoa@m+1
  4394  002586                     
  4395                           ; BSR set to: 0
  4396                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 399:     if (!(mode =
      +                          = 'g') || ((nmode == 'f') && (e < 0))) {
  4397  002586  0E67               	movlw	103
  4398  002588  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4399  00258A  A4D8               	btfss	status,2,c
  4400  00258C  EFCA  F012         	goto	u4491
  4401  002590  EFCC  F012         	goto	u4490
  4402  002594                     u4491:
  4403  002594  EFDC  F012         	goto	l3829
  4404  002598                     u4490:
  4405  002598                     
  4406                           ; BSR set to: 0
  4407  002598  0E66               	movlw	102
  4408  00259A  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4409  00259C  A4D8               	btfss	status,2,c
  4410  00259E  EFD3  F012         	goto	u4501
  4411  0025A2  EFD5  F012         	goto	u4500
  4412  0025A6                     u4501:
  4413  0025A6  EFDE  F012         	goto	l3831
  4414  0025AA                     u4500:
  4415  0025AA                     
  4416                           ; BSR set to: 0
  4417  0025AA  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4418  0025AC  EFDC  F012         	goto	u4510
  4419  0025B0  EFDA  F012         	goto	u4511
  4420  0025B4                     u4511:
  4421  0025B4  EFDE  F012         	goto	l3831
  4422  0025B8                     u4510:
  4423  0025B8                     l3829:
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 400:         ++m;
  4427  0025B8  4B80               	infsnz	efgtoa@m& (0+255),f,b
  4428  0025BA  2B81               	incf	(efgtoa@m+1)& (0+255),f,b
  4429  0025BC                     l3831:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 404:     if (nmode ==
      +                           'f') {
  4433  0025BC  0E66               	movlw	102
  4434  0025BE  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4435  0025C0  A4D8               	btfss	status,2,c
  4436  0025C2  EFE5  F012         	goto	u4521
  4437  0025C6  EFE7  F012         	goto	u4520
  4438  0025CA                     u4521:
  4439  0025CA  EF07  F013         	goto	l3841
  4440  0025CE                     u4520:
  4441  0025CE                     
  4442                           ; BSR set to: 0
  4443                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 405:         if (e < 
      +                          0) {
  4444  0025CE  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4445  0025D0  EFEE  F012         	goto	u4530
  4446  0025D4  EFEC  F012         	goto	u4531
  4447  0025D8                     u4531:
  4448  0025D8  EFFA  F012         	goto	l3837
  4449  0025DC                     u4530:
  4450  0025DC                     
  4451                           ; BSR set to: 0
  4452                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 406:             u = 
      +                          1.0;
  4453  0025DC  0E00               	movlw	0
  4454  0025DE  6FA0               	movwf	efgtoa@u& (0+255),b
  4455  0025E0  0E00               	movlw	0
  4456  0025E2  6FA1               	movwf	(efgtoa@u+1)& (0+255),b
  4457  0025E4  0E80               	movlw	128
  4458  0025E6  6FA2               	movwf	(efgtoa@u+2)& (0+255),b
  4459  0025E8  0E3F               	movlw	63
  4460  0025EA  6FA3               	movwf	(efgtoa@u+3)& (0+255),b
  4461                           
  4462                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 407:             e = 
      +                          0;
  4463  0025EC  0E00               	movlw	0
  4464  0025EE  6F9D               	movwf	(efgtoa@e+1)& (0+255),b
  4465  0025F0  0E00               	movlw	0
  4466  0025F2  6F9C               	movwf	efgtoa@e& (0+255),b
  4467  0025F4                     l3837:
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 409:         if (!(mo
      +                          de == 'g')) {
  4471  0025F4  0E67               	movlw	103
  4472  0025F6  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4473  0025F8  B4D8               	btfsc	status,2,c
  4474  0025FA  EF01  F013         	goto	u4541
  4475  0025FE  EF03  F013         	goto	u4540
  4476  002602                     u4541:
  4477  002602  EF07  F013         	goto	l3841
  4478  002606                     u4540:
  4479  002606                     
  4480                           ; BSR set to: 0
  4481                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 410:             m +=
      +                           e;
  4482  002606  519C               	movf	efgtoa@e& (0+255),w,b
  4483  002608  2780               	addwf	efgtoa@m& (0+255),f,b
  4484  00260A  519D               	movf	(efgtoa@e+1)& (0+255),w,b
  4485  00260C  2381               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4486  00260E                     l3841:
  4487                           
  4488                           ; BSR set to: 0
  4489                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  4490  00260E  0E00               	movlw	0
  4491  002610  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  4492  002612  0E00               	movlw	0
  4493  002614  6F96               	movwf	efgtoa@i& (0+255),b
  4494  002616                     
  4495                           ; BSR set to: 0
  4496                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 416:     h = g;
  4497  002616  0060  F260  F08E   	movff	efgtoa@g,efgtoa@h
  4498  00261C  0060  F264  F08F   	movff	efgtoa@g+1,efgtoa@h+1
  4499  002622  0060  F268  F090   	movff	efgtoa@g+2,efgtoa@h+2
  4500  002628  0060  F26C  F091   	movff	efgtoa@g+3,efgtoa@h+3
  4501  00262E                     
  4502                           ; BSR set to: 0
  4503                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  4504  00262E  0060  F280  F06C   	movff	efgtoa@u,efgtoa@ou
  4505  002634  0060  F284  F06D   	movff	efgtoa@u+1,efgtoa@ou+1
  4506  00263A  0060  F288  F06E   	movff	efgtoa@u+2,efgtoa@ou+2
  4507  002640  0060  F28C  F06F   	movff	efgtoa@u+3,efgtoa@ou+3
  4508                           
  4509                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  4510  002646  EFD2  F013         	goto	l3855
  4511  00264A                     l3847:
  4512                           
  4513                           ; BSR set to: 0
  4514                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 419:         l = floo
      +                          rf(h/u);
  4515  00264A  0060  F238  F01F   	movff	efgtoa@h,___fldiv@b
  4516  002650  0060  F23C  F020   	movff	efgtoa@h+1,___fldiv@b+1
  4517  002656  0060  F240  F021   	movff	efgtoa@h+2,___fldiv@b+2
  4518  00265C  0060  F244  F022   	movff	efgtoa@h+3,___fldiv@b+3
  4519  002662  0060  F280  F023   	movff	efgtoa@u,___fldiv@a
  4520  002668  0060  F284  F024   	movff	efgtoa@u+1,___fldiv@a+1
  4521  00266E  0060  F288  F025   	movff	efgtoa@u+2,___fldiv@a+2
  4522  002674  0060  F28C  F026   	movff	efgtoa@u+3,___fldiv@a+3
  4523  00267A  EC65  F023         	call	___fldiv	;wreg free
  4524  00267E  0060  F07C  F038   	movff	?___fldiv,floorf@x
  4525  002684  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  4526  00268A  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  4527  002690  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  4528  002696  ECC8  F026         	call	_floorf	;wreg free
  4529  00269A  0060  F0E0  F092   	movff	?_floorf,efgtoa@l
  4530  0026A0  0060  F0E4  F093   	movff	?_floorf+1,efgtoa@l+1
  4531  0026A6  0060  F0E8  F094   	movff	?_floorf+2,efgtoa@l+2
  4532  0026AC  0060  F0EC  F095   	movff	?_floorf+3,efgtoa@l+3
  4533                           
  4534                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 420:         d = (int
      +                          )l;
  4535  0026B2  0060  F248  F001   	movff	efgtoa@l,___fltol@f1
  4536  0026B8  0060  F24C  F002   	movff	efgtoa@l+1,___fltol@f1+1
  4537  0026BE  0060  F250  F003   	movff	efgtoa@l+2,___fltol@f1+2
  4538  0026C4  0060  F254  F004   	movff	efgtoa@l+3,___fltol@f1+3
  4539  0026CA  EC0B  F02B         	call	___fltol	;wreg free
  4540  0026CE  0060  F004  F084   	movff	?___fltol,efgtoa@d
  4541  0026D4  0060  F008  F085   	movff	?___fltol+1,efgtoa@d+1
  4542  0026DA                     
  4543                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 421:         h -= l*u
      +                          ;
  4544  0026DA  0060  F238  F051   	movff	efgtoa@h,___flsub@b
  4545  0026E0  0060  F23C  F052   	movff	efgtoa@h+1,___flsub@b+1
  4546  0026E6  0060  F240  F053   	movff	efgtoa@h+2,___flsub@b+2
  4547  0026EC  0060  F244  F054   	movff	efgtoa@h+3,___flsub@b+3
  4548  0026F2  0060  F280  F03C   	movff	efgtoa@u,___flmul@a
  4549  0026F8  0060  F284  F03D   	movff	efgtoa@u+1,___flmul@a+1
  4550  0026FE  0060  F288  F03E   	movff	efgtoa@u+2,___flmul@a+2
  4551  002704  0060  F28C  F03F   	movff	efgtoa@u+3,___flmul@a+3
  4552  00270A  0060  F248  F038   	movff	efgtoa@l,___flmul@b
  4553  002710  0060  F24C  F039   	movff	efgtoa@l+1,___flmul@b+1
  4554  002716  0060  F250  F03A   	movff	efgtoa@l+2,___flmul@b+2
  4555  00271C  0060  F254  F03B   	movff	efgtoa@l+3,___flmul@b+3
  4556  002722  EC20  F021         	call	___flmul	;wreg free
  4557  002726  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  4558  00272C  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  4559  002732  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  4560  002738  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  4561  00273E  EC93  F030         	call	___flsub	;wreg free
  4562  002742  0060  F144  F08E   	movff	?___flsub,efgtoa@h
  4563  002748  0060  F148  F08F   	movff	?___flsub+1,efgtoa@h+1
  4564  00274E  0060  F14C  F090   	movff	?___flsub+2,efgtoa@h+2
  4565  002754  0060  F150  F091   	movff	?___flsub+3,efgtoa@h+3
  4566  00275A                     
  4567                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 422:         u = u/10
      +                          .0;
  4568  00275A  0060  F280  F01F   	movff	efgtoa@u,___fldiv@b
  4569  002760  0060  F284  F020   	movff	efgtoa@u+1,___fldiv@b+1
  4570  002766  0060  F288  F021   	movff	efgtoa@u+2,___fldiv@b+2
  4571  00276C  0060  F28C  F022   	movff	efgtoa@u+3,___fldiv@b+3
  4572  002772  0E00               	movlw	0
  4573  002774  6E23               	movwf	___fldiv@a^0,c
  4574  002776  0E00               	movlw	0
  4575  002778  6E24               	movwf	(___fldiv@a+1)^0,c
  4576  00277A  0E20               	movlw	32
  4577  00277C  6E25               	movwf	(___fldiv@a+2)^0,c
  4578  00277E  0E41               	movlw	65
  4579  002780  6E26               	movwf	(___fldiv@a+3)^0,c
  4580  002782  EC65  F023         	call	___fldiv	;wreg free
  4581  002786  0060  F07C  F0A0   	movff	?___fldiv,efgtoa@u
  4582  00278C  0060  F080  F0A1   	movff	?___fldiv+1,efgtoa@u+1
  4583  002792  0060  F084  F0A2   	movff	?___fldiv+2,efgtoa@u+2
  4584  002798  0060  F088  F0A3   	movff	?___fldiv+3,efgtoa@u+3
  4585  00279E                     
  4586                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 423:         ++i;
  4587  00279E  0100               	movlb	0	; () banked
  4588  0027A0  4B96               	infsnz	efgtoa@i& (0+255),f,b
  4589  0027A2  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  4590  0027A4                     l3855:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 418:     while (i < m
      +                          ) {
  4594  0027A4  5180               	movf	efgtoa@m& (0+255),w,b
  4595  0027A6  5D96               	subwf	efgtoa@i& (0+255),w,b
  4596  0027A8  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  4597  0027AA  0A80               	xorlw	128
  4598  0027AC  6F67               	movwf	??_efgtoa& (0+255),b
  4599  0027AE  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  4600  0027B0  0A80               	xorlw	128
  4601  0027B2  5967               	subwfb	??_efgtoa& (0+255),w,b
  4602  0027B4  A0D8               	btfss	status,0,c
  4603  0027B6  EFDF  F013         	goto	u4551
  4604  0027BA  EFE1  F013         	goto	u4550
  4605  0027BE                     u4551:
  4606  0027BE  EF25  F013         	goto	l3847
  4607  0027C2                     u4550:
  4608  0027C2                     
  4609                           ; BSR set to: 0
  4610                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 427:     l = u*5.0;
  4611  0027C2  0060  F280  F038   	movff	efgtoa@u,___flmul@b
  4612  0027C8  0060  F284  F039   	movff	efgtoa@u+1,___flmul@b+1
  4613  0027CE  0060  F288  F03A   	movff	efgtoa@u+2,___flmul@b+2
  4614  0027D4  0060  F28C  F03B   	movff	efgtoa@u+3,___flmul@b+3
  4615  0027DA  0E00               	movlw	0
  4616  0027DC  6E3C               	movwf	___flmul@a^0,c
  4617  0027DE  0E00               	movlw	0
  4618  0027E0  6E3D               	movwf	(___flmul@a+1)^0,c
  4619  0027E2  0EA0               	movlw	160
  4620  0027E4  6E3E               	movwf	(___flmul@a+2)^0,c
  4621  0027E6  0E40               	movlw	64
  4622  0027E8  6E3F               	movwf	(___flmul@a+3)^0,c
  4623  0027EA  EC20  F021         	call	___flmul	;wreg free
  4624  0027EE  0060  F0E0  F092   	movff	?___flmul,efgtoa@l
  4625  0027F4  0060  F0E4  F093   	movff	?___flmul+1,efgtoa@l+1
  4626  0027FA  0060  F0E8  F094   	movff	?___flmul+2,efgtoa@l+2
  4627  002800  0060  F0EC  F095   	movff	?___flmul+3,efgtoa@l+3
  4628  002806                     
  4629                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 428:     if (h < l) {
  4630  002806  0060  F238  F051   	movff	efgtoa@h,___flge@ff1
  4631  00280C  0060  F23C  F052   	movff	efgtoa@h+1,___flge@ff1+1
  4632  002812  0060  F240  F053   	movff	efgtoa@h+2,___flge@ff1+2
  4633  002818  0060  F244  F054   	movff	efgtoa@h+3,___flge@ff1+3
  4634  00281E  0060  F248  F055   	movff	efgtoa@l,___flge@ff2
  4635  002824  0060  F24C  F056   	movff	efgtoa@l+1,___flge@ff2+1
  4636  00282A  0060  F250  F057   	movff	efgtoa@l+2,___flge@ff2+2
  4637  002830  0060  F254  F058   	movff	efgtoa@l+3,___flge@ff2+3
  4638  002836  EC96  F02B         	call	___flge	;wreg free
  4639  00283A  B0D8               	btfsc	status,0,c
  4640  00283C  EF22  F014         	goto	u4561
  4641  002840  EF24  F014         	goto	u4560
  4642  002844                     u4561:
  4643  002844  EF2F  F014         	goto	l3863
  4644  002848                     u4560:
  4645  002848                     
  4646                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 429:         l = 0.0;
  4647  002848  0E00               	movlw	0
  4648  00284A  0100               	movlb	0	; () banked
  4649  00284C  6F92               	movwf	efgtoa@l& (0+255),b
  4650  00284E  0E00               	movlw	0
  4651  002850  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  4652  002852  0E00               	movlw	0
  4653  002854  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  4654  002856  0E00               	movlw	0
  4655  002858  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  4656                           
  4657                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 430:     } else {
  4658  00285A  EF60  F014         	goto	l3869
  4659  00285E                     l3863:
  4660                           
  4661                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 432:         if ((h =
      +                          = l) && !(d % 2)) {
  4662  00285E  0060  F238  F001   	movff	efgtoa@h,___fleq@ff1
  4663  002864  0060  F23C  F002   	movff	efgtoa@h+1,___fleq@ff1+1
  4664  00286A  0060  F240  F003   	movff	efgtoa@h+2,___fleq@ff1+2
  4665  002870  0060  F244  F004   	movff	efgtoa@h+3,___fleq@ff1+3
  4666  002876  0060  F248  F005   	movff	efgtoa@l,___fleq@ff2
  4667  00287C  0060  F24C  F006   	movff	efgtoa@l+1,___fleq@ff2+1
  4668  002882  0060  F250  F007   	movff	efgtoa@l+2,___fleq@ff2+2
  4669  002888  0060  F254  F008   	movff	efgtoa@l+3,___fleq@ff2+3
  4670  00288E  EC8A  F02E         	call	___fleq	;wreg free
  4671  002892  A0D8               	btfss	status,0,c
  4672  002894  EF4E  F014         	goto	u4571
  4673  002898  EF50  F014         	goto	u4570
  4674  00289C                     u4571:
  4675  00289C  EF60  F014         	goto	l3869
  4676  0028A0                     u4570:
  4677  0028A0  0100               	movlb	0	; () banked
  4678  0028A2  B184               	btfsc	efgtoa@d& (0+255),0,b
  4679  0028A4  EF56  F014         	goto	u4581
  4680  0028A8  EF58  F014         	goto	u4580
  4681  0028AC                     u4581:
  4682  0028AC  EF60  F014         	goto	l3869
  4683  0028B0                     u4580:
  4684  0028B0                     
  4685                           ; BSR set to: 0
  4686                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 433:             l = 
      +                          0.0;
  4687  0028B0  0E00               	movlw	0
  4688  0028B2  6F92               	movwf	efgtoa@l& (0+255),b
  4689  0028B4  0E00               	movlw	0
  4690  0028B6  6F93               	movwf	(efgtoa@l+1)& (0+255),b
  4691  0028B8  0E00               	movlw	0
  4692  0028BA  6F94               	movwf	(efgtoa@l+2)& (0+255),b
  4693  0028BC  0E00               	movlw	0
  4694  0028BE  6F95               	movwf	(efgtoa@l+3)& (0+255),b
  4695  0028C0                     l3869:
  4696                           
  4697                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 438:     h = g + l;
  4698  0028C0  0060  F260  F00F   	movff	efgtoa@g,___fladd@b
  4699  0028C6  0060  F264  F010   	movff	efgtoa@g+1,___fladd@b+1
  4700  0028CC  0060  F268  F011   	movff	efgtoa@g+2,___fladd@b+2
  4701  0028D2  0060  F26C  F012   	movff	efgtoa@g+3,___fladd@b+3
  4702  0028D8  0060  F248  F013   	movff	efgtoa@l,___fladd@a
  4703  0028DE  0060  F24C  F014   	movff	efgtoa@l+1,___fladd@a+1
  4704  0028E4  0060  F250  F015   	movff	efgtoa@l+2,___fladd@a+2
  4705  0028EA  0060  F254  F016   	movff	efgtoa@l+3,___fladd@a+3
  4706  0028F0  ECA2  F01E         	call	___fladd	;wreg free
  4707  0028F4  0060  F03C  F08E   	movff	?___fladd,efgtoa@h
  4708  0028FA  0060  F040  F08F   	movff	?___fladd+1,efgtoa@h+1
  4709  002900  0060  F044  F090   	movff	?___fladd+2,efgtoa@h+2
  4710  002906  0060  F048  F091   	movff	?___fladd+3,efgtoa@h+3
  4711  00290C                     
  4712                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  4713  00290C  0060  F1B0  F0A0   	movff	efgtoa@ou,efgtoa@u
  4714  002912  0060  F1B4  F0A1   	movff	efgtoa@ou+1,efgtoa@u+1
  4715  002918  0060  F1B8  F0A2   	movff	efgtoa@ou+2,efgtoa@u+2
  4716  00291E  0060  F1BC  F0A3   	movff	efgtoa@ou+3,efgtoa@u+3
  4717  002924                     
  4718                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 442:     ne = (nmode 
      +                          == 'e') ? 0 : e;
  4719  002924  0E65               	movlw	101
  4720  002926  0100               	movlb	0	; () banked
  4721  002928  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4722  00292A  B4D8               	btfsc	status,2,c
  4723  00292C  EF9A  F014         	goto	u4591
  4724  002930  EF9C  F014         	goto	u4590
  4725  002934                     u4591:
  4726  002934  EFA4  F014         	goto	l3877
  4727  002938                     u4590:
  4728  002938                     
  4729                           ; BSR set to: 0
  4730  002938  0060  F270  F082   	movff	efgtoa@e,efgtoa@ne
  4731  00293E  0060  F274  F083   	movff	efgtoa@e+1,efgtoa@ne+1
  4732  002944  EFA8  F014         	goto	l410
  4733  002948                     l3877:
  4734                           
  4735                           ; BSR set to: 0
  4736  002948  0E00               	movlw	0
  4737  00294A  6F83               	movwf	(efgtoa@ne+1)& (0+255),b
  4738  00294C  0E00               	movlw	0
  4739  00294E  6F82               	movwf	efgtoa@ne& (0+255),b
  4740  002950                     l410:
  4741                           
  4742                           ; BSR set to: 0
  4743                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  4744  002950  0E00               	movlw	0
  4745  002952  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  4746  002954  0E00               	movlw	0
  4747  002956  6F7E               	movwf	efgtoa@pp& (0+255),b
  4748                           
  4749                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  4750  002958  0E00               	movlw	0
  4751  00295A  6F7D               	movwf	(efgtoa@t+1)& (0+255),b
  4752  00295C  0E00               	movlw	0
  4753  00295E  6F7C               	movwf	efgtoa@t& (0+255),b
  4754                           
  4755                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  4756  002960  0E00               	movlw	0
  4757  002962  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  4758  002964  0E00               	movlw	0
  4759  002966  6F96               	movwf	efgtoa@i& (0+255),b
  4760                           
  4761                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  4762  002968  EFD5  F015         	goto	l3927
  4763  00296C                     l3879:
  4764                           
  4765                           ; BSR set to: 0
  4766                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 447:         l = floo
      +                          rf(h/u);
  4767  00296C  0060  F238  F01F   	movff	efgtoa@h,___fldiv@b
  4768  002972  0060  F23C  F020   	movff	efgtoa@h+1,___fldiv@b+1
  4769  002978  0060  F240  F021   	movff	efgtoa@h+2,___fldiv@b+2
  4770  00297E  0060  F244  F022   	movff	efgtoa@h+3,___fldiv@b+3
  4771  002984  0060  F280  F023   	movff	efgtoa@u,___fldiv@a
  4772  00298A  0060  F284  F024   	movff	efgtoa@u+1,___fldiv@a+1
  4773  002990  0060  F288  F025   	movff	efgtoa@u+2,___fldiv@a+2
  4774  002996  0060  F28C  F026   	movff	efgtoa@u+3,___fldiv@a+3
  4775  00299C  EC65  F023         	call	___fldiv	;wreg free
  4776  0029A0  0060  F07C  F038   	movff	?___fldiv,floorf@x
  4777  0029A6  0060  F080  F039   	movff	?___fldiv+1,floorf@x+1
  4778  0029AC  0060  F084  F03A   	movff	?___fldiv+2,floorf@x+2
  4779  0029B2  0060  F088  F03B   	movff	?___fldiv+3,floorf@x+3
  4780  0029B8  ECC8  F026         	call	_floorf	;wreg free
  4781  0029BC  0060  F0E0  F092   	movff	?_floorf,efgtoa@l
  4782  0029C2  0060  F0E4  F093   	movff	?_floorf+1,efgtoa@l+1
  4783  0029C8  0060  F0E8  F094   	movff	?_floorf+2,efgtoa@l+2
  4784  0029CE  0060  F0EC  F095   	movff	?_floorf+3,efgtoa@l+3
  4785                           
  4786                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 448:         d = (int
      +                          )l;
  4787  0029D4  0060  F248  F001   	movff	efgtoa@l,___fltol@f1
  4788  0029DA  0060  F24C  F002   	movff	efgtoa@l+1,___fltol@f1+1
  4789  0029E0  0060  F250  F003   	movff	efgtoa@l+2,___fltol@f1+2
  4790  0029E6  0060  F254  F004   	movff	efgtoa@l+3,___fltol@f1+3
  4791  0029EC  EC0B  F02B         	call	___fltol	;wreg free
  4792  0029F0  0060  F004  F084   	movff	?___fltol,efgtoa@d
  4793  0029F6  0060  F008  F085   	movff	?___fltol+1,efgtoa@d+1
  4794  0029FC                     
  4795                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 449:         if (!(fl
      +                          ags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4796  0029FC  0100               	movlb	0	; () banked
  4797  0029FE  B9ED               	btfsc	_flags& (0+255),4,b
  4798  002A00  EF04  F015         	goto	u4601
  4799  002A04  EF06  F015         	goto	u4600
  4800  002A08                     u4601:
  4801  002A08  EF23  F015         	goto	l3891
  4802  002A0C                     u4600:
  4803  002A0C                     
  4804                           ; BSR set to: 0
  4805  002A0C  5184               	movf	efgtoa@d& (0+255),w,b
  4806  002A0E  1185               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4807  002A10  A4D8               	btfss	status,2,c
  4808  002A12  EF0D  F015         	goto	u4611
  4809  002A16  EF0F  F015         	goto	u4610
  4810  002A1A                     u4611:
  4811  002A1A  EF23  F015         	goto	l3891
  4812  002A1E                     u4610:
  4813  002A1E                     
  4814                           ; BSR set to: 0
  4815  002A1E  0E67               	movlw	103
  4816  002A20  198D               	xorwf	efgtoa@mode& (0+255),w,b
  4817  002A22  A4D8               	btfss	status,2,c
  4818  002A24  EF16  F015         	goto	u4621
  4819  002A28  EF18  F015         	goto	u4620
  4820  002A2C                     u4621:
  4821  002A2C  EF23  F015         	goto	l3891
  4822  002A30                     u4620:
  4823  002A30                     
  4824                           ; BSR set to: 0
  4825  002A30  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4826  002A32  EF1F  F015         	goto	u4630
  4827  002A36  EF1D  F015         	goto	u4631
  4828  002A3A                     u4631:
  4829  002A3A  EF23  F015         	goto	l3891
  4830  002A3E                     u4630:
  4831  002A3E                     
  4832                           ; BSR set to: 0
  4833                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 450:             ++t;
  4834  002A3E  4B7C               	infsnz	efgtoa@t& (0+255),f,b
  4835  002A40  2B7D               	incf	(efgtoa@t+1)& (0+255),f,b
  4836                           
  4837                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 451:         } else {
  4838  002A42  EF6D  F015         	goto	l3919
  4839  002A46                     l3891:
  4840                           
  4841                           ; BSR set to: 0
  4842                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 452:             if (
      +                          !pp && (ne < 0)) {
  4843  002A46  517E               	movf	efgtoa@pp& (0+255),w,b
  4844  002A48  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4845  002A4A  A4D8               	btfss	status,2,c
  4846  002A4C  EF2A  F015         	goto	u4641
  4847  002A50  EF2C  F015         	goto	u4640
  4848  002A54                     u4641:
  4849  002A54  EF56  F015         	goto	l3911
  4850  002A58                     u4640:
  4851  002A58                     
  4852                           ; BSR set to: 0
  4853  002A58  BF83               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4854  002A5A  EF33  F015         	goto	u4650
  4855  002A5E  EF31  F015         	goto	u4651
  4856  002A62                     u4651:
  4857  002A62  EF56  F015         	goto	l3911
  4858  002A66                     u4650:
  4859  002A66                     
  4860                           ; BSR set to: 0
  4861                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 453:                 
      +                          dbuf[n++] = '.';
  4862  002A66  0E22               	movlw	low _dbuf
  4863  002A68  259E               	addwf	efgtoa@n& (0+255),w,b
  4864  002A6A  6ED9               	movwf	fsr2l,c
  4865  002A6C  0E01               	movlw	high _dbuf
  4866  002A6E  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4867  002A70  6EDA               	movwf	fsr2h,c
  4868  002A72  0E2E               	movlw	46
  4869  002A74  6EDF               	movwf	indf2,c
  4870  002A76                     
  4871                           ; BSR set to: 0
  4872  002A76  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4873  002A78  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4874  002A7A                     
  4875                           ; BSR set to: 0
  4876                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 454:                 
      +                          --w;
  4877  002A7A  078B               	decf	efgtoa@w& (0+255),f,b
  4878  002A7C  A0D8               	btfss	status,0,c
  4879  002A7E  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4880  002A80                     
  4881                           ; BSR set to: 0
  4882                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 455:                 
      +                          pp = 1;
  4883  002A80  0E00               	movlw	0
  4884  002A82  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  4885  002A84  0E01               	movlw	1
  4886  002A86  6F7E               	movwf	efgtoa@pp& (0+255),b
  4887  002A88  EF56  F015         	goto	l3911
  4888  002A8C                     l3903:
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 458:                 
      +                          dbuf[n++] = '0';
  4892  002A8C  0E22               	movlw	low _dbuf
  4893  002A8E  259E               	addwf	efgtoa@n& (0+255),w,b
  4894  002A90  6ED9               	movwf	fsr2l,c
  4895  002A92  0E01               	movlw	high _dbuf
  4896  002A94  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4897  002A96  6EDA               	movwf	fsr2h,c
  4898  002A98  0E30               	movlw	48
  4899  002A9A  6EDF               	movwf	indf2,c
  4900  002A9C                     
  4901                           ; BSR set to: 0
  4902  002A9C  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4903  002A9E  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4904  002AA0                     
  4905                           ; BSR set to: 0
  4906                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 459:                 
      +                          --w;
  4907  002AA0  078B               	decf	efgtoa@w& (0+255),f,b
  4908  002AA2  A0D8               	btfss	status,0,c
  4909  002AA4  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4910  002AA6                     
  4911                           ; BSR set to: 0
  4912                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 460:                 
      +                          --t;
  4913  002AA6  077C               	decf	efgtoa@t& (0+255),f,b
  4914  002AA8  A0D8               	btfss	status,0,c
  4915  002AAA  077D               	decf	(efgtoa@t+1)& (0+255),f,b
  4916  002AAC                     l3911:
  4917                           
  4918                           ; BSR set to: 0
  4919                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 457:             whil
      +                          e (t) {
  4920  002AAC  517C               	movf	efgtoa@t& (0+255),w,b
  4921  002AAE  117D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4922  002AB0  A4D8               	btfss	status,2,c
  4923  002AB2  EF5D  F015         	goto	u4661
  4924  002AB6  EF5F  F015         	goto	u4660
  4925  002ABA                     u4661:
  4926  002ABA  EF46  F015         	goto	l3903
  4927  002ABE                     u4660:
  4928  002ABE                     
  4929                           ; BSR set to: 0
  4930                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 462:             dbuf
      +                          [n++] = '0' + d;
  4931  002ABE  0E22               	movlw	low _dbuf
  4932  002AC0  259E               	addwf	efgtoa@n& (0+255),w,b
  4933  002AC2  6ED9               	movwf	fsr2l,c
  4934  002AC4  0E01               	movlw	high _dbuf
  4935  002AC6  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4936  002AC8  6EDA               	movwf	fsr2h,c
  4937  002ACA  5184               	movf	efgtoa@d& (0+255),w,b
  4938  002ACC  0F30               	addlw	48
  4939  002ACE  6EDF               	movwf	indf2,c
  4940  002AD0                     
  4941                           ; BSR set to: 0
  4942  002AD0  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  4943  002AD2  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  4944  002AD4                     
  4945                           ; BSR set to: 0
  4946                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 463:             --w;
  4947  002AD4  078B               	decf	efgtoa@w& (0+255),f,b
  4948  002AD6  A0D8               	btfss	status,0,c
  4949  002AD8  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  4950  002ADA                     l3919:
  4951                           
  4952                           ; BSR set to: 0
  4953                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 465:         h -= l*u
      +                          ;
  4954  002ADA  0060  F238  F051   	movff	efgtoa@h,___flsub@b
  4955  002AE0  0060  F23C  F052   	movff	efgtoa@h+1,___flsub@b+1
  4956  002AE6  0060  F240  F053   	movff	efgtoa@h+2,___flsub@b+2
  4957  002AEC  0060  F244  F054   	movff	efgtoa@h+3,___flsub@b+3
  4958  002AF2  0060  F280  F03C   	movff	efgtoa@u,___flmul@a
  4959  002AF8  0060  F284  F03D   	movff	efgtoa@u+1,___flmul@a+1
  4960  002AFE  0060  F288  F03E   	movff	efgtoa@u+2,___flmul@a+2
  4961  002B04  0060  F28C  F03F   	movff	efgtoa@u+3,___flmul@a+3
  4962  002B0A  0060  F248  F038   	movff	efgtoa@l,___flmul@b
  4963  002B10  0060  F24C  F039   	movff	efgtoa@l+1,___flmul@b+1
  4964  002B16  0060  F250  F03A   	movff	efgtoa@l+2,___flmul@b+2
  4965  002B1C  0060  F254  F03B   	movff	efgtoa@l+3,___flmul@b+3
  4966  002B22  EC20  F021         	call	___flmul	;wreg free
  4967  002B26  0060  F0E0  F055   	movff	?___flmul,___flsub@a
  4968  002B2C  0060  F0E4  F056   	movff	?___flmul+1,___flsub@a+1
  4969  002B32  0060  F0E8  F057   	movff	?___flmul+2,___flsub@a+2
  4970  002B38  0060  F0EC  F058   	movff	?___flmul+3,___flsub@a+3
  4971  002B3E  EC93  F030         	call	___flsub	;wreg free
  4972  002B42  0060  F144  F08E   	movff	?___flsub,efgtoa@h
  4973  002B48  0060  F148  F08F   	movff	?___flsub+1,efgtoa@h+1
  4974  002B4E  0060  F14C  F090   	movff	?___flsub+2,efgtoa@h+2
  4975  002B54  0060  F150  F091   	movff	?___flsub+3,efgtoa@h+3
  4976  002B5A                     
  4977                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 466:         u = u/10
      +                          .0;
  4978  002B5A  0060  F280  F01F   	movff	efgtoa@u,___fldiv@b
  4979  002B60  0060  F284  F020   	movff	efgtoa@u+1,___fldiv@b+1
  4980  002B66  0060  F288  F021   	movff	efgtoa@u+2,___fldiv@b+2
  4981  002B6C  0060  F28C  F022   	movff	efgtoa@u+3,___fldiv@b+3
  4982  002B72  0E00               	movlw	0
  4983  002B74  6E23               	movwf	___fldiv@a^0,c
  4984  002B76  0E00               	movlw	0
  4985  002B78  6E24               	movwf	(___fldiv@a+1)^0,c
  4986  002B7A  0E20               	movlw	32
  4987  002B7C  6E25               	movwf	(___fldiv@a+2)^0,c
  4988  002B7E  0E41               	movlw	65
  4989  002B80  6E26               	movwf	(___fldiv@a+3)^0,c
  4990  002B82  EC65  F023         	call	___fldiv	;wreg free
  4991  002B86  0060  F07C  F0A0   	movff	?___fldiv,efgtoa@u
  4992  002B8C  0060  F080  F0A1   	movff	?___fldiv+1,efgtoa@u+1
  4993  002B92  0060  F084  F0A2   	movff	?___fldiv+2,efgtoa@u+2
  4994  002B98  0060  F088  F0A3   	movff	?___fldiv+3,efgtoa@u+3
  4995  002B9E                     
  4996                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 467:         --ne;
  4997  002B9E  0100               	movlb	0	; () banked
  4998  002BA0  0782               	decf	efgtoa@ne& (0+255),f,b
  4999  002BA2  A0D8               	btfss	status,0,c
  5000  002BA4  0783               	decf	(efgtoa@ne+1)& (0+255),f,b
  5001  002BA6                     
  5002                           ; BSR set to: 0
  5003                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5004  002BA6  4B96               	infsnz	efgtoa@i& (0+255),f,b
  5005  002BA8  2B97               	incf	(efgtoa@i+1)& (0+255),f,b
  5006  002BAA                     l3927:
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 446:     while ((i < 
      +                          m) && (n < (80 - 5))) {
  5010  002BAA  5180               	movf	efgtoa@m& (0+255),w,b
  5011  002BAC  5D96               	subwf	efgtoa@i& (0+255),w,b
  5012  002BAE  5197               	movf	(efgtoa@i+1)& (0+255),w,b
  5013  002BB0  0A80               	xorlw	128
  5014  002BB2  6F67               	movwf	??_efgtoa& (0+255),b
  5015  002BB4  5181               	movf	(efgtoa@m+1)& (0+255),w,b
  5016  002BB6  0A80               	xorlw	128
  5017  002BB8  5967               	subwfb	??_efgtoa& (0+255),w,b
  5018  002BBA  B0D8               	btfsc	status,0,c
  5019  002BBC  EFE2  F015         	goto	u4671
  5020  002BC0  EFE4  F015         	goto	u4670
  5021  002BC4                     u4671:
  5022  002BC4  EFF2  F015         	goto	l3931
  5023  002BC8                     u4670:
  5024  002BC8                     
  5025                           ; BSR set to: 0
  5026  002BC8  BF9F               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5027  002BCA  EFF0  F015         	goto	u4681
  5028  002BCE  519F               	movf	(efgtoa@n+1)& (0+255),w,b
  5029  002BD0  E109               	bnz	u4680
  5030  002BD2  0E4B               	movlw	75
  5031  002BD4  5D9E               	subwf	efgtoa@n& (0+255),w,b
  5032  002BD6  A0D8               	btfss	status,0,c
  5033  002BD8  EFF0  F015         	goto	u4681
  5034  002BDC  EFF2  F015         	goto	u4680
  5035  002BE0                     u4681:
  5036  002BE0  EFB6  F014         	goto	l3879
  5037  002BE4                     u4680:
  5038  002BE4                     l3931:
  5039                           
  5040                           ; BSR set to: 0
  5041                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 470:     if (!pp && (
      +                          flags & (1 << 4))) {
  5042  002BE4  517E               	movf	efgtoa@pp& (0+255),w,b
  5043  002BE6  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5044  002BE8  A4D8               	btfss	status,2,c
  5045  002BEA  EFF9  F015         	goto	u4691
  5046  002BEE  EFFB  F015         	goto	u4690
  5047  002BF2                     u4691:
  5048  002BF2  EF0C  F016         	goto	l3939
  5049  002BF6                     u4690:
  5050  002BF6                     
  5051                           ; BSR set to: 0
  5052  002BF6  A9ED               	btfss	_flags& (0+255),4,b
  5053  002BF8  EF00  F016         	goto	u4701
  5054  002BFC  EF02  F016         	goto	u4700
  5055  002C00                     u4701:
  5056  002C00  EF0C  F016         	goto	l3939
  5057  002C04                     u4700:
  5058  002C04                     
  5059                           ; BSR set to: 0
  5060                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 471:         dbuf[n++
      +                          ] = '.';
  5061  002C04  0E22               	movlw	low _dbuf
  5062  002C06  259E               	addwf	efgtoa@n& (0+255),w,b
  5063  002C08  6ED9               	movwf	fsr2l,c
  5064  002C0A  0E01               	movlw	high _dbuf
  5065  002C0C  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5066  002C0E  6EDA               	movwf	fsr2h,c
  5067  002C10  0E2E               	movlw	46
  5068  002C12  6EDF               	movwf	indf2,c
  5069  002C14                     
  5070                           ; BSR set to: 0
  5071  002C14  4B9E               	infsnz	efgtoa@n& (0+255),f,b
  5072  002C16  2B9F               	incf	(efgtoa@n+1)& (0+255),f,b
  5073  002C18                     l3939:
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] = '\
      +                          0';
  5077  002C18  0E22               	movlw	low _dbuf
  5078  002C1A  259E               	addwf	efgtoa@n& (0+255),w,b
  5079  002C1C  6ED9               	movwf	fsr2l,c
  5080  002C1E  0E01               	movlw	high _dbuf
  5081  002C20  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5082  002C22  6EDA               	movwf	fsr2h,c
  5083  002C24  0E00               	movlw	0
  5084  002C26  6EDF               	movwf	indf2,c
  5085  002C28                     
  5086                           ; BSR set to: 0
  5087                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 476:     if (nmode ==
      +                           'e') {
  5088  002C28  0E65               	movlw	101
  5089  002C2A  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  5090  002C2C  A4D8               	btfss	status,2,c
  5091  002C2E  EF1B  F016         	goto	u4711
  5092  002C32  EF1D  F016         	goto	u4710
  5093  002C36                     u4711:
  5094  002C36  EFFB  F010         	goto	l3751
  5095  002C3A                     u4710:
  5096  002C3A                     
  5097                           ; BSR set to: 0
  5098                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 477:         i = size
      +                          of(dbuf) - 1;
  5099  002C3A  0E00               	movlw	0
  5100  002C3C  6F97               	movwf	(efgtoa@i+1)& (0+255),b
  5101  002C3E  0E4F               	movlw	79
  5102  002C40  6F96               	movwf	efgtoa@i& (0+255),b
  5103  002C42                     
  5104                           ; BSR set to: 0
  5105                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 478:         dbuf[i] 
      +                          = '\0';
  5106  002C42  0E22               	movlw	low _dbuf
  5107  002C44  2596               	addwf	efgtoa@i& (0+255),w,b
  5108  002C46  6ED9               	movwf	fsr2l,c
  5109  002C48  0E01               	movlw	high _dbuf
  5110  002C4A  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5111  002C4C  6EDA               	movwf	fsr2h,c
  5112  002C4E  0E00               	movlw	0
  5113  002C50  6EDF               	movwf	indf2,c
  5114  002C52                     
  5115                           ; BSR set to: 0
  5116                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 479:         sign = 0
      +                          ;
  5117  002C52  0E00               	movlw	0
  5118  002C54  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5119  002C56  0E00               	movlw	0
  5120  002C58  6F86               	movwf	efgtoa@sign& (0+255),b
  5121  002C5A                     
  5122                           ; BSR set to: 0
  5123                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 480:         if (e < 
      +                          0) {
  5124  002C5A  BF9D               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5125  002C5C  EF34  F016         	goto	u4720
  5126  002C60  EF32  F016         	goto	u4721
  5127  002C64                     u4721:
  5128  002C64  EF3C  F016         	goto	l3955
  5129  002C68                     u4720:
  5130  002C68                     
  5131                           ; BSR set to: 0
  5132                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 481:             sign
      +                           = 1;
  5133  002C68  0E00               	movlw	0
  5134  002C6A  6F87               	movwf	(efgtoa@sign+1)& (0+255),b
  5135  002C6C  0E01               	movlw	1
  5136  002C6E  6F86               	movwf	efgtoa@sign& (0+255),b
  5137  002C70                     
  5138                           ; BSR set to: 0
  5139                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 482:             e = 
      +                          -e;
  5140  002C70  6D9C               	negf	efgtoa@e& (0+255),b
  5141  002C72  1F9D               	comf	(efgtoa@e+1)& (0+255),f,b
  5142  002C74  B0D8               	btfsc	status,0,c
  5143  002C76  2B9D               	incf	(efgtoa@e+1)& (0+255),f,b
  5144  002C78                     l3955:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 484:         p = 2;
  5148  002C78  0E00               	movlw	0
  5149  002C7A  6F89               	movwf	(efgtoa@p+1)& (0+255),b
  5150  002C7C  0E02               	movlw	2
  5151  002C7E  6F88               	movwf	efgtoa@p& (0+255),b
  5152                           
  5153                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  5154  002C80  EF73  F016         	goto	l3967
  5155  002C84                     l3957:
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 486:             --i;
  5159  002C84  0796               	decf	efgtoa@i& (0+255),f,b
  5160  002C86  A0D8               	btfss	status,0,c
  5161  002C88  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5162  002C8A                     
  5163                           ; BSR set to: 0
  5164                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 487:             dbuf
      +                          [i] = '0' + (e % 10);
  5165  002C8A  0E22               	movlw	low _dbuf
  5166  002C8C  2596               	addwf	efgtoa@i& (0+255),w,b
  5167  002C8E  6ED9               	movwf	fsr2l,c
  5168  002C90  0E01               	movlw	high _dbuf
  5169  002C92  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5170  002C94  6EDA               	movwf	fsr2h,c
  5171  002C96  0060  F270  F001   	movff	efgtoa@e,___awmod@dividend
  5172  002C9C  0060  F274  F002   	movff	efgtoa@e+1,___awmod@dividend+1
  5173  002CA2  0E00               	movlw	0
  5174  002CA4  6E04               	movwf	(___awmod@divisor+1)^0,c
  5175  002CA6  0E0A               	movlw	10
  5176  002CA8  6E03               	movwf	___awmod@divisor^0,c
  5177  002CAA  ECDA  F02D         	call	___awmod	;wreg free
  5178  002CAE  5001               	movf	?___awmod^0,w,c
  5179  002CB0  0F30               	addlw	48
  5180  002CB2  6EDF               	movwf	indf2,c
  5181  002CB4                     
  5182                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 488:             e = 
      +                          e / 10;
  5183  002CB4  0060  F270  F001   	movff	efgtoa@e,___awdiv@dividend
  5184  002CBA  0060  F274  F002   	movff	efgtoa@e+1,___awdiv@dividend+1
  5185  002CC0  0E00               	movlw	0
  5186  002CC2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  5187  002CC4  0E0A               	movlw	10
  5188  002CC6  6E03               	movwf	___awdiv@divisor^0,c
  5189  002CC8  EC76  F02D         	call	___awdiv	;wreg free
  5190  002CCC  0060  F004  F09C   	movff	?___awdiv,efgtoa@e
  5191  002CD2  0060  F008  F09D   	movff	?___awdiv+1,efgtoa@e+1
  5192  002CD8                     
  5193                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 489:             --p;
  5194  002CD8  0100               	movlb	0	; () banked
  5195  002CDA  0788               	decf	efgtoa@p& (0+255),f,b
  5196  002CDC  A0D8               	btfss	status,0,c
  5197  002CDE  0789               	decf	(efgtoa@p+1)& (0+255),f,b
  5198  002CE0                     
  5199                           ; BSR set to: 0
  5200                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 490:             --w;
  5201  002CE0  078B               	decf	efgtoa@w& (0+255),f,b
  5202  002CE2  A0D8               	btfss	status,0,c
  5203  002CE4  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5204  002CE6                     l3967:
  5205                           
  5206                           ; BSR set to: 0
  5207                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 485:         while (e
      +                           || (0 < p)) {
  5208  002CE6  519C               	movf	efgtoa@e& (0+255),w,b
  5209  002CE8  119D               	iorwf	(efgtoa@e+1)& (0+255),w,b
  5210  002CEA  A4D8               	btfss	status,2,c
  5211  002CEC  EF7A  F016         	goto	u4731
  5212  002CF0  EF7C  F016         	goto	u4730
  5213  002CF4                     u4731:
  5214  002CF4  EF42  F016         	goto	l3957
  5215  002CF8                     u4730:
  5216  002CF8                     
  5217                           ; BSR set to: 0
  5218  002CF8  BF89               	btfsc	(efgtoa@p+1)& (0+255),7,b
  5219  002CFA  EF89  F016         	goto	u4740
  5220  002CFE  5189               	movf	(efgtoa@p+1)& (0+255),w,b
  5221  002D00  E106               	bnz	u4741
  5222  002D02  0588               	decf	efgtoa@p& (0+255),w,b
  5223  002D04  B0D8               	btfsc	status,0,c
  5224  002D06  EF87  F016         	goto	u4741
  5225  002D0A  EF89  F016         	goto	u4740
  5226  002D0E                     u4741:
  5227  002D0E  EF42  F016         	goto	l3957
  5228  002D12                     u4740:
  5229  002D12                     
  5230                           ; BSR set to: 0
  5231                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 492:         --i;
  5232  002D12  0796               	decf	efgtoa@i& (0+255),f,b
  5233  002D14  A0D8               	btfss	status,0,c
  5234  002D16  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5235  002D18                     
  5236                           ; BSR set to: 0
  5237                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 493:         dbuf[i] 
      +                          = sign ? '-' : '+';
  5238  002D18  5186               	movf	efgtoa@sign& (0+255),w,b
  5239  002D1A  1187               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  5240  002D1C  A4D8               	btfss	status,2,c
  5241  002D1E  EF93  F016         	goto	u4751
  5242  002D22  EF95  F016         	goto	u4750
  5243  002D26                     u4751:
  5244  002D26  EF9B  F016         	goto	l3977
  5245  002D2A                     u4750:
  5246  002D2A                     
  5247                           ; BSR set to: 0
  5248  002D2A  0E00               	movlw	0
  5249  002D2C  6F77               	movwf	(_efgtoa$525+1)& (0+255),b
  5250  002D2E  0E2B               	movlw	43
  5251  002D30  6F76               	movwf	_efgtoa$525& (0+255),b
  5252  002D32  EF9F  F016         	goto	l3979
  5253  002D36                     l3977:
  5254                           
  5255                           ; BSR set to: 0
  5256  002D36  0E00               	movlw	0
  5257  002D38  6F77               	movwf	(_efgtoa$525+1)& (0+255),b
  5258  002D3A  0E2D               	movlw	45
  5259  002D3C  6F76               	movwf	_efgtoa$525& (0+255),b
  5260  002D3E                     l3979:
  5261                           
  5262                           ; BSR set to: 0
  5263  002D3E  0E22               	movlw	low _dbuf
  5264  002D40  2596               	addwf	efgtoa@i& (0+255),w,b
  5265  002D42  6ED9               	movwf	fsr2l,c
  5266  002D44  0E01               	movlw	high _dbuf
  5267  002D46  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5268  002D48  6EDA               	movwf	fsr2h,c
  5269  002D4A  0060  F1DB  FFDF   	movff	_efgtoa$525,indf2
  5270  002D50                     
  5271                           ; BSR set to: 0
  5272                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 494:         --w;
  5273  002D50  078B               	decf	efgtoa@w& (0+255),f,b
  5274  002D52  A0D8               	btfss	status,0,c
  5275  002D54  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5276  002D56                     
  5277                           ; BSR set to: 0
  5278                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 496:         dbuf[i] 
      +                          = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  5279  002D56  0796               	decf	efgtoa@i& (0+255),f,b
  5280  002D58  A0D8               	btfss	status,0,c
  5281  002D5A  0797               	decf	(efgtoa@i+1)& (0+255),f,b
  5282  002D5C                     
  5283                           ; BSR set to: 0
  5284  002D5C  0EBF               	movlw	191
  5285  002D5E  6F67               	movwf	??_efgtoa& (0+255),b
  5286  002D60  0EFF               	movlw	255
  5287  002D62  6F68               	movwf	(??_efgtoa+1)& (0+255),b
  5288  002D64  5166               	movf	efgtoa@c& (0+255),w,b
  5289  002D66  6F69               	movwf	(??_efgtoa+2)& (0+255),b
  5290  002D68  6B6A               	clrf	(??_efgtoa+3)& (0+255),b
  5291  002D6A  5167               	movf	??_efgtoa& (0+255),w,b
  5292  002D6C  2769               	addwf	(??_efgtoa+2)& (0+255),f,b
  5293  002D6E  5168               	movf	(??_efgtoa+1)& (0+255),w,b
  5294  002D70  236A               	addwfc	(??_efgtoa+3)& (0+255),f,b
  5295  002D72  516A               	movf	(??_efgtoa+3)& (0+255),w,b
  5296  002D74  E10A               	bnz	u4760
  5297  002D76  0E1A               	movlw	26
  5298  002D78  5D69               	subwf	(??_efgtoa+2)& (0+255),w,b
  5299  002D7A  A0D8               	btfss	status,0,c
  5300  002D7C  EFC2  F016         	goto	u4761
  5301  002D80  EFC5  F016         	goto	u4760
  5302  002D84                     u4761:
  5303  002D84  0E01               	movlw	1
  5304  002D86  EFC6  F016         	goto	u4770
  5305  002D8A                     u4760:
  5306  002D8A  0E00               	movlw	0
  5307  002D8C                     u4770:
  5308  002D8C  6F7A               	movwf	_efgtoa$527& (0+255),b
  5309  002D8E  6B7B               	clrf	(_efgtoa$527+1)& (0+255),b
  5310  002D90                     
  5311                           ; BSR set to: 0
  5312  002D90  517A               	movf	_efgtoa$527& (0+255),w,b
  5313  002D92  117B               	iorwf	(_efgtoa$527+1)& (0+255),w,b
  5314  002D94  A4D8               	btfss	status,2,c
  5315  002D96  EFCF  F016         	goto	u4781
  5316  002D9A  EFD1  F016         	goto	u4780
  5317  002D9E                     u4781:
  5318  002D9E  EFD7  F016         	goto	l3993
  5319  002DA2                     u4780:
  5320  002DA2                     
  5321                           ; BSR set to: 0
  5322  002DA2  0E00               	movlw	0
  5323  002DA4  6F79               	movwf	(_efgtoa$526+1)& (0+255),b
  5324  002DA6  0E65               	movlw	101
  5325  002DA8  6F78               	movwf	_efgtoa$526& (0+255),b
  5326  002DAA  EFDB  F016         	goto	l3995
  5327  002DAE                     l3993:
  5328                           
  5329                           ; BSR set to: 0
  5330  002DAE  0E00               	movlw	0
  5331  002DB0  6F79               	movwf	(_efgtoa$526+1)& (0+255),b
  5332  002DB2  0E45               	movlw	69
  5333  002DB4  6F78               	movwf	_efgtoa$526& (0+255),b
  5334  002DB6                     l3995:
  5335                           
  5336                           ; BSR set to: 0
  5337  002DB6  0E22               	movlw	low _dbuf
  5338  002DB8  2596               	addwf	efgtoa@i& (0+255),w,b
  5339  002DBA  6ED9               	movwf	fsr2l,c
  5340  002DBC  0E01               	movlw	high _dbuf
  5341  002DBE  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5342  002DC0  6EDA               	movwf	fsr2h,c
  5343  002DC2  0060  F1E3  FFDF   	movff	_efgtoa$526,indf2
  5344  002DC8                     
  5345                           ; BSR set to: 0
  5346                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 497:         --w;
  5347  002DC8  078B               	decf	efgtoa@w& (0+255),f,b
  5348  002DCA  A0D8               	btfss	status,0,c
  5349  002DCC  078C               	decf	(efgtoa@w+1)& (0+255),f,b
  5350  002DCE                     
  5351                           ; BSR set to: 0
  5352                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 498:         strcpy(&
      +                          dbuf[n], &dbuf[i]);
  5353  002DCE  0E22               	movlw	low _dbuf
  5354  002DD0  259E               	addwf	efgtoa@n& (0+255),w,b
  5355  002DD2  6E01               	movwf	strcpy@dest^0,c
  5356  002DD4  0E01               	movlw	high _dbuf
  5357  002DD6  219F               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5358  002DD8  6E02               	movwf	(strcpy@dest+1)^0,c
  5359  002DDA  0E22               	movlw	low _dbuf
  5360  002DDC  2596               	addwf	efgtoa@i& (0+255),w,b
  5361  002DDE  6E03               	movwf	strcpy@src^0,c
  5362  002DE0  0E01               	movlw	high _dbuf
  5363  002DE2  2197               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5364  002DE4  6E04               	movwf	(strcpy@src+1)^0,c
  5365  002DE6  ECB6  F02F         	call	_strcpy	;wreg free
  5366  002DEA  EFFB  F010         	goto	l3751
  5367  002DEE                     l366:
  5368  002DEE  0012               	return		;funcret
  5369  002DF0                     __end_of_efgtoa:
  5370                           	opt callstack 0
  5371                           
  5372 ;; *************** function _tolower *****************
  5373 ;; Defined at:
  5374 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\tolower.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  c               2    6[COMRAM] int 
  5377 ;; Auto vars:     Size  Location     Type
  5378 ;;		None
  5379 ;; Return value:  Size  Location     Type
  5380 ;;                  2    6[COMRAM] int 
  5381 ;; Registers used:
  5382 ;;		wreg, status,2, status,0
  5383 ;; Tracked objects:
  5384 ;;		On entry : 0/0
  5385 ;;		On exit  : 0/0
  5386 ;;		Unchanged: 0/0
  5387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5388 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5389 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5391 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5392 ;;Total ram usage:        8 bytes
  5393 ;; Hardware stack levels used:    1
  5394 ;; Hardware stack levels required when called:    1
  5395 ;; This function calls:
  5396 ;;		_isupper
  5397 ;; This function is called by:
  5398 ;;		_efgtoa
  5399 ;;		_vfpfcnvrt
  5400 ;; This function uses a non-reentrant model
  5401 ;;
  5402                           
  5403                           	psect	text7
  5404  0060BE                     __ptext7:
  5405                           	opt callstack 0
  5406  0060BE                     _tolower:
  5407                           	opt callstack 25
  5408  0060BE  0EBF               	movlw	191
  5409  0060C0  6E09               	movwf	??_tolower^0,c
  5410  0060C2  0EFF               	movlw	255
  5411  0060C4  6E0A               	movwf	(??_tolower+1)^0,c
  5412  0060C6  0060  F01C  F00B   	movff	tolower@c,??_tolower+2
  5413  0060CC  0060  F020  F00C   	movff	tolower@c+1,??_tolower+3
  5414  0060D2  5009               	movf	??_tolower^0,w,c
  5415  0060D4  260B               	addwf	(??_tolower+2)^0,f,c
  5416  0060D6  500A               	movf	(??_tolower+1)^0,w,c
  5417  0060D8  220C               	addwfc	(??_tolower+3)^0,f,c
  5418  0060DA  500C               	movf	(??_tolower+3)^0,w,c
  5419  0060DC  E10A               	bnz	u3400
  5420  0060DE  0E1A               	movlw	26
  5421  0060E0  5C0B               	subwf	(??_tolower+2)^0,w,c
  5422  0060E2  A0D8               	btfss	status,0,c
  5423  0060E4  EF76  F030         	goto	u3401
  5424  0060E8  EF79  F030         	goto	u3400
  5425  0060EC                     u3401:
  5426  0060EC  0E01               	movlw	1
  5427  0060EE  EF7A  F030         	goto	u3410
  5428  0060F2                     u3400:
  5429  0060F2  0E00               	movlw	0
  5430  0060F4                     u3410:
  5431  0060F4  6E0D               	movwf	_tolower$1133^0,c
  5432  0060F6  6A0E               	clrf	(_tolower$1133+1)^0,c
  5433  0060F8  500D               	movf	_tolower$1133^0,w,c
  5434  0060FA  100E               	iorwf	(_tolower$1133+1)^0,w,c
  5435  0060FC  B4D8               	btfsc	status,2,c
  5436  0060FE  EF83  F030         	goto	u3421
  5437  006102  EF85  F030         	goto	u3420
  5438  006106                     u3421:
  5439  006106  EF8C  F030         	goto	l1285
  5440  00610A                     u3420:
  5441  00610A  0E20               	movlw	32
  5442  00610C  1007               	iorwf	tolower@c^0,w,c
  5443  00610E  6E07               	movwf	?_tolower^0,c
  5444  006110  5008               	movf	(tolower@c+1)^0,w,c
  5445  006112  6E08               	movwf	(?_tolower+1)^0,c
  5446  006114  EF92  F030         	goto	l1290
  5447  006118                     l1285:
  5448  006118  0060  F01C  F007   	movff	tolower@c,?_tolower
  5449  00611E  0060  F020  F008   	movff	tolower@c+1,?_tolower+1
  5450  006124                     l1290:
  5451  006124  0012               	return		;funcret
  5452  006126                     __end_of_tolower:
  5453                           	opt callstack 0
  5454                           
  5455 ;; *************** function _isupper *****************
  5456 ;; Defined at:
  5457 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isupper.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  c               2    0[COMRAM] int 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  2    0[COMRAM] int 
  5464 ;; Registers used:
  5465 ;;		wreg, status,2, status,0
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5471 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5473 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5474 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5475 ;;Total ram usage:        6 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; This function calls:
  5478 ;;		Nothing
  5479 ;; This function is called by:
  5480 ;;		_efgtoa
  5481 ;;		_vfpfcnvrt
  5482 ;;		_tolower
  5483 ;; This function uses a non-reentrant model
  5484 ;;
  5485                           
  5486                           	psect	text8
  5487  00635C                     __ptext8:
  5488                           	opt callstack 0
  5489  00635C                     _isupper:
  5490                           	opt callstack 25
  5491  00635C  0EBF               	movlw	191
  5492  00635E  6E03               	movwf	??_isupper^0,c
  5493  006360  0EFF               	movlw	255
  5494  006362  6E04               	movwf	(??_isupper+1)^0,c
  5495  006364  0060  F004  F005   	movff	isupper@c,??_isupper+2
  5496  00636A  0060  F008  F006   	movff	isupper@c+1,??_isupper+3
  5497  006370  5003               	movf	??_isupper^0,w,c
  5498  006372  2605               	addwf	(??_isupper+2)^0,f,c
  5499  006374  5004               	movf	(??_isupper+1)^0,w,c
  5500  006376  2206               	addwfc	(??_isupper+3)^0,f,c
  5501  006378  5006               	movf	(??_isupper+3)^0,w,c
  5502  00637A  E10A               	bnz	u2860
  5503  00637C  0E1A               	movlw	26
  5504  00637E  5C05               	subwf	(??_isupper+2)^0,w,c
  5505  006380  A0D8               	btfss	status,0,c
  5506  006382  EFC5  F031         	goto	u2861
  5507  006386  EFC8  F031         	goto	u2860
  5508  00638A                     u2861:
  5509  00638A  0E01               	movlw	1
  5510  00638C  EFC9  F031         	goto	u2870
  5511  006390                     u2860:
  5512  006390  0E00               	movlw	0
  5513  006392                     u2870:
  5514  006392  6E01               	movwf	?_isupper^0,c
  5515  006394  6A02               	clrf	(?_isupper+1)^0,c
  5516  006396  0012               	return		;funcret
  5517  006398                     __end_of_isupper:
  5518                           	opt callstack 0
  5519                           
  5520 ;; *************** function _strcpy *****************
  5521 ;; Defined at:
  5522 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strcpy.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5525 ;;		 -> dbuf(80), 
  5526 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5527 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  5528 ;;		 -> dbuf(80), 
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;  d               2    8[COMRAM] PTR unsigned char 
  5531 ;;		 -> dbuf(80), 
  5532 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5533 ;;		 -> STR_11(4), STR_10(4), STR_7(4), STR_6(4), 
  5534 ;;		 -> dbuf(80), 
  5535 ;; Return value:  Size  Location     Type
  5536 ;;                  2    0[COMRAM] PTR unsigned char 
  5537 ;; Registers used:
  5538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5539 ;; Tracked objects:
  5540 ;;		On entry : 0/0
  5541 ;;		On exit  : 0/0
  5542 ;;		Unchanged: 0/0
  5543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5544 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5545 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5547 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5548 ;;Total ram usage:       10 bytes
  5549 ;; Hardware stack levels used:    1
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_efgtoa
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           	psect	text9
  5558  005F6C                     __ptext9:
  5559                           	opt callstack 0
  5560  005F6C                     _strcpy:
  5561                           	opt callstack 25
  5562  005F6C  0060  F00C  F007   	movff	strcpy@src,strcpy@s
  5563  005F72  0060  F010  F008   	movff	strcpy@src+1,strcpy@s+1
  5564  005F78  0060  F004  F009   	movff	strcpy@dest,strcpy@d
  5565  005F7E  0060  F008  F00A   	movff	strcpy@dest+1,strcpy@d+1
  5566  005F84                     l3201:
  5567  005F84  5007               	movf	strcpy@s^0,w,c
  5568  005F86  6E05               	movwf	??_strcpy^0,c
  5569  005F88  5008               	movf	(strcpy@s+1)^0,w,c
  5570  005F8A  6E06               	movwf	(??_strcpy+1)^0,c
  5571  005F8C  4A07               	infsnz	strcpy@s^0,f,c
  5572  005F8E  2A08               	incf	(strcpy@s+1)^0,f,c
  5573  005F90  0060  F017  FFF6   	movff	??_strcpy,tblptrl
  5574  005F96  0060  F01B  FFF7   	movff	??_strcpy+1,tblptrh
  5575  005F9C  0E00               	movlw	low (__smallconst shr (0+16))
  5576  005F9E  6EF8               	movwf	tblptru,c
  5577  005FA0  0060  F027  FFD9   	movff	strcpy@d,fsr2l
  5578  005FA6  0060  F02B  FFDA   	movff	strcpy@d+1,fsr2h
  5579  005FAC  4A09               	infsnz	strcpy@d^0,f,c
  5580  005FAE  2A0A               	incf	(strcpy@d+1)^0,f,c
  5581  005FB0  0E1F               	movlw	(high __ramtop+-1)
  5582  005FB2  64F7               	cpfsgt	tblptrh,c
  5583  005FB4  D003               	bra	u3387
  5584  005FB6  0008               	tblrd		*
  5585  005FB8  50F5               	movf	tablat,w,c
  5586  005FBA  D007               	bra	u3380
  5587  005FBC                     u3387:
  5588  005FBC  006F FFDB FFE1     	movff	tblptrl,fsr1l
  5589  005FC2  006F FFDF FFE2     	movff	tblptrh,fsr1h
  5590  005FC8  50E7               	movf	indf1,w,c
  5591  005FCA                     u3380:
  5592  005FCA  6EDF               	movwf	indf2,c
  5593  005FCC  50DF               	movf	indf2,w,c
  5594  005FCE  A4D8               	btfss	status,2,c
  5595  005FD0  EFEC  F02F         	goto	u3391
  5596  005FD4  EFEE  F02F         	goto	u3390
  5597  005FD8                     u3391:
  5598  005FD8  EFC2  F02F         	goto	l3201
  5599  005FDC                     u3390:
  5600  005FDC  0012               	return		;funcret
  5601  005FDE                     __end_of_strcpy:
  5602                           	opt callstack 0
  5603                           
  5604 ;; *************** function _pad *****************
  5605 ;; Defined at:
  5606 ;;		line 72 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5609 ;;		 -> sprintf@f(6), 
  5610 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5611 ;;		 -> dbuf(80), 
  5612 ;;  p               2   20[COMRAM] int 
  5613 ;; Auto vars:     Size  Location     Type
  5614 ;;  w               2   25[COMRAM] int 
  5615 ;;  i               2   23[COMRAM] int 
  5616 ;; Return value:  Size  Location     Type
  5617 ;;                  2   16[COMRAM] int 
  5618 ;; Registers used:
  5619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5620 ;; Tracked objects:
  5621 ;;		On entry : 0/0
  5622 ;;		On exit  : 0/0
  5623 ;;		Unchanged: 0/0
  5624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5625 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5626 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5627 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5628 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5629 ;;Total ram usage:       11 bytes
  5630 ;; Hardware stack levels used:    1
  5631 ;; Hardware stack levels required when called:    3
  5632 ;; This function calls:
  5633 ;;		_fputc
  5634 ;;		_fputs
  5635 ;;		_strlen
  5636 ;; This function is called by:
  5637 ;;		_efgtoa
  5638 ;; This function uses a non-reentrant model
  5639 ;;
  5640                           
  5641                           	psect	text10
  5642  005932                     __ptext10:
  5643                           	opt callstack 0
  5644  005932                     _pad:
  5645                           	opt callstack 22
  5646  005932                     
  5647                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 72: static int pad(FI
      +                          LE *fp, char *buf, int p);F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt
      +                          .c: 73: {;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 74:     int 
      +                          i, w;;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 77:     if (flag
      +                          s & (1 << 0)) {
  5648  005932  0100               	movlb	0	; () banked
  5649  005934  A1ED               	btfss	_flags& (0+255),0,b
  5650  005936  EF9F  F02C         	goto	u3271
  5651  00593A  EFA1  F02C         	goto	u3270
  5652  00593E                     u3271:
  5653  00593E  EFAF  F02C         	goto	l3159
  5654  005942                     u3270:
  5655  005942                     
  5656                           ; BSR set to: 0
  5657                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 78:         fputs((co
      +                          nst char *)buf, fp);
  5658  005942  0060  F04C  F00A   	movff	pad@buf,fputs@s
  5659  005948  0060  F050  F00B   	movff	pad@buf+1,fputs@s+1
  5660  00594E  0060  F044  F00C   	movff	pad@fp,fputs@fp
  5661  005954  0060  F048  F00D   	movff	pad@fp+1,fputs@fp+1
  5662  00595A  EC4A  F031         	call	_fputs	;wreg free
  5663  00595E                     l3159:
  5664                           
  5665                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 82:     w = (p < 0) ?
      +                           0 : p;
  5666  00595E  BE16               	btfsc	(pad@p+1)^0,7,c
  5667  005960  EFB4  F02C         	goto	u3281
  5668  005964  EFB6  F02C         	goto	u3280
  5669  005968                     u3281:
  5670  005968  EFBE  F02C         	goto	l3163
  5671  00596C                     u3280:
  5672  00596C  0060  F054  F01A   	movff	pad@p,pad@w
  5673  005972  0060  F058  F01B   	movff	pad@p+1,pad@w+1
  5674  005978  EFC2  F02C         	goto	l343
  5675  00597C                     l3163:
  5676  00597C  0E00               	movlw	0
  5677  00597E  6E1B               	movwf	(pad@w+1)^0,c
  5678  005980  0E00               	movlw	0
  5679  005982  6E1A               	movwf	pad@w^0,c
  5680  005984                     l343:
  5681                           
  5682                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5683  005984  0E00               	movlw	0
  5684  005986  6E19               	movwf	(pad@i+1)^0,c
  5685  005988  0E00               	movlw	0
  5686  00598A  6E18               	movwf	pad@i^0,c
  5687                           
  5688                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  5689  00598C  EFD6  F02C         	goto	l3169
  5690  005990                     l3165:
  5691                           
  5692                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 85:         fputc(' '
      +                          , fp);
  5693  005990  0E00               	movlw	0
  5694  005992  6E02               	movwf	(fputc@c+1)^0,c
  5695  005994  0E20               	movlw	32
  5696  005996  6E01               	movwf	fputc@c^0,c
  5697  005998  0060  F044  F003   	movff	pad@fp,fputc@fp
  5698  00599E  0060  F048  F004   	movff	pad@fp+1,fputc@fp+1
  5699  0059A4  EC0A  F02D         	call	_fputc	;wreg free
  5700  0059A8                     
  5701                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5702  0059A8  4A18               	infsnz	pad@i^0,f,c
  5703  0059AA  2A19               	incf	(pad@i+1)^0,f,c
  5704  0059AC                     l3169:
  5705                           
  5706                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 84:     while (i < w)
      +                           {
  5707  0059AC  501A               	movf	pad@w^0,w,c
  5708  0059AE  5C18               	subwf	pad@i^0,w,c
  5709  0059B0  5019               	movf	(pad@i+1)^0,w,c
  5710  0059B2  0A80               	xorlw	128
  5711  0059B4  6E17               	movwf	??_pad^0,c
  5712  0059B6  501B               	movf	(pad@w+1)^0,w,c
  5713  0059B8  0A80               	xorlw	128
  5714  0059BA  5817               	subwfb	??_pad^0,w,c
  5715  0059BC  A0D8               	btfss	status,0,c
  5716  0059BE  EFE3  F02C         	goto	u3291
  5717  0059C2  EFE5  F02C         	goto	u3290
  5718  0059C6                     u3291:
  5719  0059C6  EFC8  F02C         	goto	l3165
  5720  0059CA                     u3290:
  5721  0059CA                     
  5722                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 90:     if (!(flags &
      +                           (1 << 0))) {
  5723  0059CA  0100               	movlb	0	; () banked
  5724  0059CC  B1ED               	btfsc	_flags& (0+255),0,b
  5725  0059CE  EFEB  F02C         	goto	u3301
  5726  0059D2  EFED  F02C         	goto	u3300
  5727  0059D6                     u3301:
  5728  0059D6  EFFB  F02C         	goto	l3173
  5729  0059DA                     u3300:
  5730  0059DA                     
  5731                           ; BSR set to: 0
  5732                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 91:         fputs((co
      +                          nst char *)buf, fp);
  5733  0059DA  0060  F04C  F00A   	movff	pad@buf,fputs@s
  5734  0059E0  0060  F050  F00B   	movff	pad@buf+1,fputs@s+1
  5735  0059E6  0060  F044  F00C   	movff	pad@fp,fputs@fp
  5736  0059EC  0060  F048  F00D   	movff	pad@fp+1,fputs@fp+1
  5737  0059F2  EC4A  F031         	call	_fputs	;wreg free
  5738  0059F6                     l3173:
  5739                           
  5740                           ;F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\doprnt.c: 94:     return strlen
      +                          (buf) + w;
  5741  0059F6  0060  F04C  F001   	movff	pad@buf,strlen@s
  5742  0059FC  0060  F050  F002   	movff	pad@buf+1,strlen@s+1
  5743  005A02  EC8F  F031         	call	_strlen	;wreg free
  5744  005A06  501A               	movf	pad@w^0,w,c
  5745  005A08  2401               	addwf	?_strlen^0,w,c
  5746  005A0A  6E11               	movwf	?_pad^0,c
  5747  005A0C  501B               	movf	(pad@w+1)^0,w,c
  5748  005A0E  2002               	addwfc	(?_strlen+1)^0,w,c
  5749  005A10  6E12               	movwf	(?_pad+1)^0,c
  5750  005A12  0012               	return		;funcret
  5751  005A14                     __end_of_pad:
  5752                           	opt callstack 0
  5753                           
  5754 ;; *************** function _strlen *****************
  5755 ;; Defined at:
  5756 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\strlen.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5759 ;;		 -> dbuf(80), 
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5762 ;;		 -> dbuf(80), 
  5763 ;; Return value:  Size  Location     Type
  5764 ;;                  2    0[COMRAM] unsigned int 
  5765 ;; Registers used:
  5766 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5767 ;; Tracked objects:
  5768 ;;		On entry : 0/0
  5769 ;;		On exit  : 0/0
  5770 ;;		Unchanged: 0/0
  5771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5772 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5773 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5776 ;;Total ram usage:        4 bytes
  5777 ;; Hardware stack levels used:    1
  5778 ;; This function calls:
  5779 ;;		Nothing
  5780 ;; This function is called by:
  5781 ;;		_pad
  5782 ;; This function uses a non-reentrant model
  5783 ;;
  5784                           
  5785                           	psect	text11
  5786  00631E                     __ptext11:
  5787                           	opt callstack 0
  5788  00631E                     _strlen:
  5789                           	opt callstack 24
  5790  00631E  0060  F004  F003   	movff	strlen@s,strlen@a
  5791  006324  0060  F008  F004   	movff	strlen@s+1,strlen@a+1
  5792  00632A  EF99  F031         	goto	l2943
  5793  00632E                     l2941:
  5794  00632E  4A01               	infsnz	strlen@s^0,f,c
  5795  006330  2A02               	incf	(strlen@s+1)^0,f,c
  5796  006332                     l2943:
  5797  006332  0060  F007  FFD9   	movff	strlen@s,fsr2l
  5798  006338  0060  F00B  FFDA   	movff	strlen@s+1,fsr2h
  5799  00633E  50DF               	movf	indf2,w,c
  5800  006340  A4D8               	btfss	status,2,c
  5801  006342  EFA5  F031         	goto	u2851
  5802  006346  EFA7  F031         	goto	u2850
  5803  00634A                     u2851:
  5804  00634A  EF97  F031         	goto	l2941
  5805  00634E                     u2850:
  5806  00634E  5003               	movf	strlen@a^0,w,c
  5807  006350  5C01               	subwf	strlen@s^0,w,c
  5808  006352  6E01               	movwf	?_strlen^0,c
  5809  006354  5004               	movf	(strlen@a+1)^0,w,c
  5810  006356  5802               	subwfb	(strlen@s+1)^0,w,c
  5811  006358  6E02               	movwf	(?_strlen+1)^0,c
  5812  00635A  0012               	return		;funcret
  5813  00635C                     __end_of_strlen:
  5814                           	opt callstack 0
  5815                           
  5816 ;; *************** function _fputs *****************
  5817 ;; Defined at:
  5818 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputs.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5821 ;;		 -> dbuf(80), 
  5822 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5823 ;;		 -> sprintf@f(6), 
  5824 ;; Auto vars:     Size  Location     Type
  5825 ;;  i               2   14[COMRAM] int 
  5826 ;;  c               1   13[COMRAM] unsigned char 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  2    9[COMRAM] int 
  5829 ;; Registers used:
  5830 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5836 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5837 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5839 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5840 ;;Total ram usage:        7 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    2
  5843 ;; This function calls:
  5844 ;;		_fputc
  5845 ;; This function is called by:
  5846 ;;		_pad
  5847 ;; This function uses a non-reentrant model
  5848 ;;
  5849                           
  5850                           	psect	text12
  5851  006294                     __ptext12:
  5852                           	opt callstack 0
  5853  006294                     _fputs:
  5854                           	opt callstack 22
  5855  006294  0E00               	movlw	0
  5856  006296  6E10               	movwf	(fputs@i+1)^0,c
  5857  006298  0E00               	movlw	0
  5858  00629A  6E0F               	movwf	fputs@i^0,c
  5859  00629C  EF5E  F031         	goto	l2937
  5860  0062A0                     l2933:
  5861  0062A0  0060  F038  F001   	movff	fputs@c,fputc@c
  5862  0062A6  6A02               	clrf	(fputc@c+1)^0,c
  5863  0062A8  0060  F030  F003   	movff	fputs@fp,fputc@fp
  5864  0062AE  0060  F034  F004   	movff	fputs@fp+1,fputc@fp+1
  5865  0062B4  EC0A  F02D         	call	_fputc	;wreg free
  5866  0062B8  4A0F               	infsnz	fputs@i^0,f,c
  5867  0062BA  2A10               	incf	(fputs@i+1)^0,f,c
  5868  0062BC                     l2937:
  5869  0062BC  500F               	movf	fputs@i^0,w,c
  5870  0062BE  240A               	addwf	fputs@s^0,w,c
  5871  0062C0  6ED9               	movwf	fsr2l,c
  5872  0062C2  5010               	movf	(fputs@i+1)^0,w,c
  5873  0062C4  200B               	addwfc	(fputs@s+1)^0,w,c
  5874  0062C6  6EDA               	movwf	fsr2h,c
  5875  0062C8  50DF               	movf	indf2,w,c
  5876  0062CA  6E0E               	movwf	fputs@c^0,c
  5877  0062CC  500E               	movf	fputs@c^0,w,c
  5878  0062CE  A4D8               	btfss	status,2,c
  5879  0062D0  EF6C  F031         	goto	u2841
  5880  0062D4  EF6E  F031         	goto	u2840
  5881  0062D8                     u2841:
  5882  0062D8  EF50  F031         	goto	l2933
  5883  0062DC                     u2840:
  5884  0062DC  0012               	return		;funcret
  5885  0062DE                     __end_of_fputs:
  5886                           	opt callstack 0
  5887                           
  5888 ;; *************** function _fputc *****************
  5889 ;; Defined at:
  5890 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\nf_fputc.c"
  5891 ;; Parameters:    Size  Location     Type
  5892 ;;  c               2    0[COMRAM] int 
  5893 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5894 ;;		 -> sprintf@f(6), 
  5895 ;; Auto vars:     Size  Location     Type
  5896 ;;		None
  5897 ;; Return value:  Size  Location     Type
  5898 ;;                  2    0[COMRAM] int 
  5899 ;; Registers used:
  5900 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5901 ;; Tracked objects:
  5902 ;;		On entry : 0/0
  5903 ;;		On exit  : 0/0
  5904 ;;		Unchanged: 0/0
  5905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5906 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5908 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5909 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5910 ;;Total ram usage:        9 bytes
  5911 ;; Hardware stack levels used:    1
  5912 ;; Hardware stack levels required when called:    1
  5913 ;; This function calls:
  5914 ;;		_putch
  5915 ;; This function is called by:
  5916 ;;		_pad
  5917 ;;		_vfpfcnvrt
  5918 ;;		_fputs
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           	psect	text13
  5923  005A14                     __ptext13:
  5924                           	opt callstack 0
  5925  005A14                     _fputc:
  5926                           	opt callstack 25
  5927  005A14  5003               	movf	fputc@fp^0,w,c
  5928  005A16  1004               	iorwf	(fputc@fp+1)^0,w,c
  5929  005A18  B4D8               	btfsc	status,2,c
  5930  005A1A  EF11  F02D         	goto	u2801
  5931  005A1E  EF13  F02D         	goto	u2800
  5932  005A22                     u2801:
  5933  005A22  EF1C  F02D         	goto	l2921
  5934  005A26                     u2800:
  5935  005A26  5003               	movf	fputc@fp^0,w,c
  5936  005A28  1004               	iorwf	(fputc@fp+1)^0,w,c
  5937  005A2A  A4D8               	btfss	status,2,c
  5938  005A2C  EF1A  F02D         	goto	u2811
  5939  005A30  EF1C  F02D         	goto	u2810
  5940  005A34                     u2811:
  5941  005A34  EF21  F02D         	goto	l2923
  5942  005A38                     u2810:
  5943  005A38                     l2921:
  5944  005A38  5001               	movf	fputc@c^0,w,c
  5945  005A3A  EC25  F032         	call	_putch
  5946  005A3E  EF75  F02D         	goto	l1241
  5947  005A42                     l2923:
  5948  005A42  EE20 F004          	lfsr	2,4
  5949  005A46  5003               	movf	fputc@fp^0,w,c
  5950  005A48  26D9               	addwf	fsr2l,f,c
  5951  005A4A  5004               	movf	(fputc@fp+1)^0,w,c
  5952  005A4C  22DA               	addwfc	fsr2h,f,c
  5953  005A4E  50DE               	movf	postinc2,w,c
  5954  005A50  10DE               	iorwf	postinc2,w,c
  5955  005A52  B4D8               	btfsc	status,2,c
  5956  005A54  EF2E  F02D         	goto	u2821
  5957  005A58  EF30  F02D         	goto	u2820
  5958  005A5C                     u2821:
  5959  005A5C  EF4B  F02D         	goto	l2927
  5960  005A60                     u2820:
  5961  005A60  EE20 F004          	lfsr	2,4
  5962  005A64  5003               	movf	fputc@fp^0,w,c
  5963  005A66  26D9               	addwf	fsr2l,f,c
  5964  005A68  5004               	movf	(fputc@fp+1)^0,w,c
  5965  005A6A  22DA               	addwfc	fsr2h,f,c
  5966  005A6C  EE10 F002          	lfsr	1,2
  5967  005A70  5003               	movf	fputc@fp^0,w,c
  5968  005A72  26E1               	addwf	fsr1l,f,c
  5969  005A74  5004               	movf	(fputc@fp+1)^0,w,c
  5970  005A76  22E2               	addwfc	fsr1h,f,c
  5971  005A78  50DE               	movf	postinc2,w,c
  5972  005A7A  5CE6               	subwf	postinc1,w,c
  5973  005A7C  50E6               	movf	postinc1,w,c
  5974  005A7E  0A80               	xorlw	128
  5975  005A80  6E09               	movwf	(??_fputc+4)^0,c
  5976  005A82  50DE               	movf	postinc2,w,c
  5977  005A84  0A80               	xorlw	128
  5978  005A86  5809               	subwfb	(??_fputc+4)^0,w,c
  5979  005A88  B0D8               	btfsc	status,0,c
  5980  005A8A  EF49  F02D         	goto	u2831
  5981  005A8E  EF4B  F02D         	goto	u2830
  5982  005A92                     u2831:
  5983  005A92  EF75  F02D         	goto	l1241
  5984  005A96                     u2830:
  5985  005A96                     l2927:
  5986  005A96  EE20 F002          	lfsr	2,2
  5987  005A9A  5003               	movf	fputc@fp^0,w,c
  5988  005A9C  26D9               	addwf	fsr2l,f,c
  5989  005A9E  5004               	movf	(fputc@fp+1)^0,w,c
  5990  005AA0  22DA               	addwfc	fsr2h,f,c
  5991  005AA2  006F FF78  F005    	movff	postinc2,??_fputc
  5992  005AA8  006F FF74  F006    	movff	postdec2,??_fputc+1
  5993  005AAE  0060  F00F  FFD9   	movff	fputc@fp,fsr2l
  5994  005AB4  0060  F013  FFDA   	movff	fputc@fp+1,fsr2h
  5995  005ABA  006F FF78  F007    	movff	postinc2,??_fputc+2
  5996  005AC0  006F FF74  F008    	movff	postdec2,??_fputc+3
  5997  005AC6  5005               	movf	??_fputc^0,w,c
  5998  005AC8  2407               	addwf	(??_fputc+2)^0,w,c
  5999  005ACA  6ED9               	movwf	fsr2l,c
  6000  005ACC  5006               	movf	(??_fputc+1)^0,w,c
  6001  005ACE  2008               	addwfc	(??_fputc+3)^0,w,c
  6002  005AD0  6EDA               	movwf	fsr2h,c
  6003  005AD2  0060  F007  FFDF   	movff	fputc@c,indf2
  6004  005AD8  EE20 F002          	lfsr	2,2
  6005  005ADC  5003               	movf	fputc@fp^0,w,c
  6006  005ADE  26D9               	addwf	fsr2l,f,c
  6007  005AE0  5004               	movf	(fputc@fp+1)^0,w,c
  6008  005AE2  22DA               	addwfc	fsr2h,f,c
  6009  005AE4  2ADE               	incf	postinc2,f,c
  6010  005AE6  0E00               	movlw	0
  6011  005AE8  22DD               	addwfc	postdec2,f,c
  6012  005AEA                     l1241:
  6013  005AEA  0012               	return		;funcret
  6014  005AEC                     __end_of_fputc:
  6015                           	opt callstack 0
  6016                           
  6017 ;; *************** function _putch *****************
  6018 ;; Defined at:
  6019 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\putch.c"
  6020 ;; Parameters:    Size  Location     Type
  6021 ;;  c               1    wreg     unsigned char 
  6022 ;; Auto vars:     Size  Location     Type
  6023 ;;  c               1    0[COMRAM] unsigned char 
  6024 ;; Return value:  Size  Location     Type
  6025 ;;                  1    wreg      void 
  6026 ;; Registers used:
  6027 ;;		wreg
  6028 ;; Tracked objects:
  6029 ;;		On entry : 0/0
  6030 ;;		On exit  : 0/0
  6031 ;;		Unchanged: 0/0
  6032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6037 ;;Total ram usage:        0 bytes
  6038 ;; Hardware stack levels used:    1
  6039 ;; This function calls:
  6040 ;;		Nothing
  6041 ;; This function is called by:
  6042 ;;		_fputc
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	text14
  6047  00644A                     __ptext14:
  6048                           	opt callstack 0
  6049  00644A                     _putch:
  6050                           	opt callstack 25
  6051  00644A  0012               	return		;funcret
  6052  00644C                     __end_of_putch:
  6053                           	opt callstack 0
  6054                           
  6055 ;; *************** function _floorf *****************
  6056 ;; Defined at:
  6057 ;;		line 3 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\floorf.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;  x               4   55[COMRAM] float 
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;  u               4   71[COMRAM] struct .
  6062 ;;  m               4   65[COMRAM] unsigned long 
  6063 ;;  e               2   69[COMRAM] int 
  6064 ;; Return value:  Size  Location     Type
  6065 ;;                  4   55[COMRAM] float 
  6066 ;; Registers used:
  6067 ;;		wreg, status,2, status,0
  6068 ;; Tracked objects:
  6069 ;;		On entry : 0/0
  6070 ;;		On exit  : 0/0
  6071 ;;		Unchanged: 0/0
  6072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6073 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6074 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6075 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6076 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6077 ;;Total ram usage:       20 bytes
  6078 ;; Hardware stack levels used:    1
  6079 ;; This function calls:
  6080 ;;		Nothing
  6081 ;; This function is called by:
  6082 ;;		_efgtoa
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text15
  6087  004D90                     __ptext15:
  6088                           	opt callstack 0
  6089  004D90                     _floorf:
  6090                           	opt callstack 25
  6091  004D90  0060  F37C  F048   	movff	floorf@F524,floorf@u
  6092  004D96  0060  F380  F049   	movff	floorf@F524+1,floorf@u+1
  6093  004D9C  0060  F384  F04A   	movff	floorf@F524+2,floorf@u+2
  6094  004DA2  0060  F388  F04B   	movff	floorf@F524+3,floorf@u+3
  6095  004DA8  0060  F0E0  F048   	movff	floorf@x,floorf@u
  6096  004DAE  0060  F0E4  F049   	movff	floorf@x+1,floorf@u+1
  6097  004DB4  0060  F0E8  F04A   	movff	floorf@x+2,floorf@u+2
  6098  004DBA  0060  F0EC  F04B   	movff	floorf@x+3,floorf@u+3
  6099  004DC0  0E81               	movlw	129
  6100  004DC2  6E3C               	movwf	??_floorf^0,c
  6101  004DC4  0EFF               	movlw	255
  6102  004DC6  6E3D               	movwf	(??_floorf+1)^0,c
  6103  004DC8  0060  F120  F03E   	movff	floorf@u,??_floorf+2
  6104  004DCE  0060  F124  F03F   	movff	floorf@u+1,??_floorf+3
  6105  004DD4  0060  F128  F040   	movff	floorf@u+2,??_floorf+4
  6106  004DDA  0060  F12C  F041   	movff	floorf@u+3,??_floorf+5
  6107  004DE0  0E18               	movlw	24
  6108  004DE2  EFF8  F026         	goto	u3430
  6109  004DE6                     u3435:
  6110  004DE6  90D8               	bcf	status,0,c
  6111  004DE8  3241               	rrcf	(??_floorf+5)^0,f,c
  6112  004DEA  3240               	rrcf	(??_floorf+4)^0,f,c
  6113  004DEC  323F               	rrcf	(??_floorf+3)^0,f,c
  6114  004DEE  323E               	rrcf	(??_floorf+2)^0,f,c
  6115  004DF0                     u3430:
  6116  004DF0  2EE8               	decfsz	wreg,f,c
  6117  004DF2  EFF3  F026         	goto	u3435
  6118  004DF6  503E               	movf	(??_floorf+2)^0,w,c
  6119  004DF8  243C               	addwf	??_floorf^0,w,c
  6120  004DFA  6E46               	movwf	floorf@e^0,c
  6121  004DFC  0E00               	movlw	0
  6122  004DFE  203D               	addwfc	(??_floorf+1)^0,w,c
  6123  004E00  6E47               	movwf	(floorf@e+1)^0,c
  6124  004E02  BE47               	btfsc	(floorf@e+1)^0,7,c
  6125  004E04  EF0D  F027         	goto	u3441
  6126  004E08  5047               	movf	(floorf@e+1)^0,w,c
  6127  004E0A  E109               	bnz	u3440
  6128  004E0C  0E17               	movlw	23
  6129  004E0E  5C46               	subwf	floorf@e^0,w,c
  6130  004E10  A0D8               	btfss	status,0,c
  6131  004E12  EF0D  F027         	goto	u3441
  6132  004E16  EF0F  F027         	goto	u3440
  6133  004E1A                     u3441:
  6134  004E1A  EF1D  F027         	goto	l3219
  6135  004E1E                     u3440:
  6136  004E1E                     l3217:
  6137  004E1E  0060  F0E0  F038   	movff	floorf@x,?_floorf
  6138  004E24  0060  F0E4  F039   	movff	floorf@x+1,?_floorf+1
  6139  004E2A  0060  F0E8  F03A   	movff	floorf@x+2,?_floorf+2
  6140  004E30  0060  F0EC  F03B   	movff	floorf@x+3,?_floorf+3
  6141  004E36  EFF1  F027         	goto	l1202
  6142  004E3A                     l3219:
  6143  004E3A  BE47               	btfsc	(floorf@e+1)^0,7,c
  6144  004E3C  EF22  F027         	goto	u3451
  6145  004E40  EF24  F027         	goto	u3450
  6146  004E44                     u3451:
  6147  004E44  EF9D  F027         	goto	l3229
  6148  004E48                     u3450:
  6149  004E48  0060  F118  F03C   	movff	floorf@e,??_floorf
  6150  004E4E  0EFF               	movlw	255
  6151  004E50  6E3D               	movwf	(??_floorf+1)^0,c
  6152  004E52  0EFF               	movlw	255
  6153  004E54  6E3E               	movwf	(??_floorf+2)^0,c
  6154  004E56  0E7F               	movlw	127
  6155  004E58  6E3F               	movwf	(??_floorf+3)^0,c
  6156  004E5A  0E00               	movlw	0
  6157  004E5C  6E40               	movwf	(??_floorf+4)^0,c
  6158  004E5E                     u3465:
  6159  004E5E  663C               	tstfsz	??_floorf^0,c
  6160  004E60  EF34  F027         	goto	u3466
  6161  004E64  EF3C  F027         	goto	u3467
  6162  004E68                     u3466:
  6163  004E68  3440               	rlcf	(??_floorf+4)^0,w,c
  6164  004E6A  3240               	rrcf	(??_floorf+4)^0,f,c
  6165  004E6C  323F               	rrcf	(??_floorf+3)^0,f,c
  6166  004E6E  323E               	rrcf	(??_floorf+2)^0,f,c
  6167  004E70  323D               	rrcf	(??_floorf+1)^0,f,c
  6168  004E72  2E3C               	decfsz	??_floorf^0,f,c
  6169  004E74  EF2F  F027         	goto	u3465
  6170  004E78                     u3467:
  6171  004E78  0060  F0F4  F042   	movff	??_floorf+1,floorf@m
  6172  004E7E  0060  F0F8  F043   	movff	??_floorf+2,floorf@m+1
  6173  004E84  0060  F0FC  F044   	movff	??_floorf+3,floorf@m+2
  6174  004E8A  0060  F100  F045   	movff	??_floorf+4,floorf@m+3
  6175  004E90  5042               	movf	floorf@m^0,w,c
  6176  004E92  1448               	andwf	floorf@u^0,w,c
  6177  004E94  6E3C               	movwf	??_floorf^0,c
  6178  004E96  5043               	movf	(floorf@m+1)^0,w,c
  6179  004E98  1449               	andwf	(floorf@u+1)^0,w,c
  6180  004E9A  6E3D               	movwf	(??_floorf+1)^0,c
  6181  004E9C  5044               	movf	(floorf@m+2)^0,w,c
  6182  004E9E  144A               	andwf	(floorf@u+2)^0,w,c
  6183  004EA0  6E3E               	movwf	(??_floorf+2)^0,c
  6184  004EA2  5045               	movf	(floorf@m+3)^0,w,c
  6185  004EA4  144B               	andwf	(floorf@u+3)^0,w,c
  6186  004EA6  6E3F               	movwf	(??_floorf+3)^0,c
  6187  004EA8  503C               	movf	??_floorf^0,w,c
  6188  004EAA  103D               	iorwf	(??_floorf+1)^0,w,c
  6189  004EAC  103E               	iorwf	(??_floorf+2)^0,w,c
  6190  004EAE  103F               	iorwf	(??_floorf+3)^0,w,c
  6191  004EB0  A4D8               	btfss	status,2,c
  6192  004EB2  EF5D  F027         	goto	u3471
  6193  004EB6  EF5F  F027         	goto	u3470
  6194  004EBA                     u3471:
  6195  004EBA  EF61  F027         	goto	l3225
  6196  004EBE                     u3470:
  6197  004EBE  EF0F  F027         	goto	l3217
  6198  004EC2                     l3225:
  6199  004EC2  0060  F120  F03C   	movff	floorf@u,??_floorf
  6200  004EC8  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  6201  004ECE  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  6202  004ED4  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  6203  004EDA  0E20               	movlw	32
  6204  004EDC  EF75  F027         	goto	u3480
  6205  004EE0                     u3485:
  6206  004EE0  90D8               	bcf	status,0,c
  6207  004EE2  323F               	rrcf	(??_floorf+3)^0,f,c
  6208  004EE4  323E               	rrcf	(??_floorf+2)^0,f,c
  6209  004EE6  323D               	rrcf	(??_floorf+1)^0,f,c
  6210  004EE8  323C               	rrcf	??_floorf^0,f,c
  6211  004EEA                     u3480:
  6212  004EEA  2EE8               	decfsz	wreg,f,c
  6213  004EEC  EF70  F027         	goto	u3485
  6214  004EF0  503C               	movf	??_floorf^0,w,c
  6215  004EF2  103D               	iorwf	(??_floorf+1)^0,w,c
  6216  004EF4  103E               	iorwf	(??_floorf+2)^0,w,c
  6217  004EF6  103F               	iorwf	(??_floorf+3)^0,w,c
  6218  004EF8  B4D8               	btfsc	status,2,c
  6219  004EFA  EF81  F027         	goto	u3491
  6220  004EFE  EF83  F027         	goto	u3490
  6221  004F02                     u3491:
  6222  004F02  EF8B  F027         	goto	l1205
  6223  004F06                     u3490:
  6224  004F06  5042               	movf	floorf@m^0,w,c
  6225  004F08  2648               	addwf	floorf@u^0,f,c
  6226  004F0A  5043               	movf	(floorf@m+1)^0,w,c
  6227  004F0C  2249               	addwfc	(floorf@u+1)^0,f,c
  6228  004F0E  5044               	movf	(floorf@m+2)^0,w,c
  6229  004F10  224A               	addwfc	(floorf@u+2)^0,f,c
  6230  004F12  5045               	movf	(floorf@m+3)^0,w,c
  6231  004F14  224B               	addwfc	(floorf@u+3)^0,f,c
  6232  004F16                     l1205:
  6233  004F16  1C42               	comf	floorf@m^0,w,c
  6234  004F18  6E3C               	movwf	??_floorf^0,c
  6235  004F1A  1C43               	comf	(floorf@m+1)^0,w,c
  6236  004F1C  6E3D               	movwf	(??_floorf+1)^0,c
  6237  004F1E  1C44               	comf	(floorf@m+2)^0,w,c
  6238  004F20  6E3E               	movwf	(??_floorf+2)^0,c
  6239  004F22  1C45               	comf	(floorf@m+3)^0,w,c
  6240  004F24  6E3F               	movwf	(??_floorf+3)^0,c
  6241  004F26  503C               	movf	??_floorf^0,w,c
  6242  004F28  1648               	andwf	floorf@u^0,f,c
  6243  004F2A  503D               	movf	(??_floorf+1)^0,w,c
  6244  004F2C  1649               	andwf	(floorf@u+1)^0,f,c
  6245  004F2E  503E               	movf	(??_floorf+2)^0,w,c
  6246  004F30  164A               	andwf	(floorf@u+2)^0,f,c
  6247  004F32  503F               	movf	(??_floorf+3)^0,w,c
  6248  004F34  164B               	andwf	(floorf@u+3)^0,f,c
  6249  004F36  EFE5  F027         	goto	l3237
  6250  004F3A                     l3229:
  6251  004F3A  0060  F120  F03C   	movff	floorf@u,??_floorf
  6252  004F40  0060  F124  F03D   	movff	floorf@u+1,??_floorf+1
  6253  004F46  0060  F128  F03E   	movff	floorf@u+2,??_floorf+2
  6254  004F4C  0060  F12C  F03F   	movff	floorf@u+3,??_floorf+3
  6255  004F52  0E20               	movlw	32
  6256  004F54  EFB1  F027         	goto	u3500
  6257  004F58                     u3505:
  6258  004F58  90D8               	bcf	status,0,c
  6259  004F5A  323F               	rrcf	(??_floorf+3)^0,f,c
  6260  004F5C  323E               	rrcf	(??_floorf+2)^0,f,c
  6261  004F5E  323D               	rrcf	(??_floorf+1)^0,f,c
  6262  004F60  323C               	rrcf	??_floorf^0,f,c
  6263  004F62                     u3500:
  6264  004F62  2EE8               	decfsz	wreg,f,c
  6265  004F64  EFAC  F027         	goto	u3505
  6266  004F68  503C               	movf	??_floorf^0,w,c
  6267  004F6A  103D               	iorwf	(??_floorf+1)^0,w,c
  6268  004F6C  103E               	iorwf	(??_floorf+2)^0,w,c
  6269  004F6E  103F               	iorwf	(??_floorf+3)^0,w,c
  6270  004F70  A4D8               	btfss	status,2,c
  6271  004F72  EFBD  F027         	goto	u3511
  6272  004F76  EFBF  F027         	goto	u3510
  6273  004F7A                     u3511:
  6274  004F7A  EFC9  F027         	goto	l3233
  6275  004F7E                     u3510:
  6276  004F7E  0E00               	movlw	0
  6277  004F80  6E48               	movwf	floorf@u^0,c
  6278  004F82  0E00               	movlw	0
  6279  004F84  6E49               	movwf	(floorf@u+1)^0,c
  6280  004F86  0E00               	movlw	0
  6281  004F88  6E4A               	movwf	(floorf@u+2)^0,c
  6282  004F8A  0E00               	movlw	0
  6283  004F8C  6E4B               	movwf	(floorf@u+3)^0,c
  6284  004F8E  EFE5  F027         	goto	l3237
  6285  004F92                     l3233:
  6286  004F92  90D8               	bcf	status,0,c
  6287  004F94  3448               	rlcf	floorf@u^0,w,c
  6288  004F96  6E3C               	movwf	??_floorf^0,c
  6289  004F98  3449               	rlcf	(floorf@u+1)^0,w,c
  6290  004F9A  6E3D               	movwf	(??_floorf+1)^0,c
  6291  004F9C  344A               	rlcf	(floorf@u+2)^0,w,c
  6292  004F9E  6E3E               	movwf	(??_floorf+2)^0,c
  6293  004FA0  344B               	rlcf	(floorf@u+3)^0,w,c
  6294  004FA2  6E3F               	movwf	(??_floorf+3)^0,c
  6295  004FA4  503C               	movf	??_floorf^0,w,c
  6296  004FA6  103D               	iorwf	(??_floorf+1)^0,w,c
  6297  004FA8  103E               	iorwf	(??_floorf+2)^0,w,c
  6298  004FAA  103F               	iorwf	(??_floorf+3)^0,w,c
  6299  004FAC  B4D8               	btfsc	status,2,c
  6300  004FAE  EFDB  F027         	goto	u3521
  6301  004FB2  EFDD  F027         	goto	u3520
  6302  004FB6                     u3521:
  6303  004FB6  EFE5  F027         	goto	l3237
  6304  004FBA                     u3520:
  6305  004FBA  0E00               	movlw	0
  6306  004FBC  6E48               	movwf	floorf@u^0,c
  6307  004FBE  0E00               	movlw	0
  6308  004FC0  6E49               	movwf	(floorf@u+1)^0,c
  6309  004FC2  0E80               	movlw	128
  6310  004FC4  6E4A               	movwf	(floorf@u+2)^0,c
  6311  004FC6  0EBF               	movlw	191
  6312  004FC8  6E4B               	movwf	(floorf@u+3)^0,c
  6313  004FCA                     l3237:
  6314  004FCA  0060  F120  F038   	movff	floorf@u,?_floorf
  6315  004FD0  0060  F124  F039   	movff	floorf@u+1,?_floorf+1
  6316  004FD6  0060  F128  F03A   	movff	floorf@u+2,?_floorf+2
  6317  004FDC  0060  F12C  F03B   	movff	floorf@u+3,?_floorf+3
  6318  004FE2                     l1202:
  6319  004FE2  0012               	return		;funcret
  6320  004FE4                     __end_of_floorf:
  6321                           	opt callstack 0
  6322                           
  6323 ;; *************** function ___fpclassifyf *****************
  6324 ;; Defined at:
  6325 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__fpclassifyf.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  x               4    0[COMRAM] float 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  u               4   10[COMRAM] struct .
  6330 ;;  e               2    8[COMRAM] int 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  2    0[COMRAM] int 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6341 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6342 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6343 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6344 ;;Total ram usage:       14 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; This function calls:
  6347 ;;		Nothing
  6348 ;; This function is called by:
  6349 ;;		_efgtoa
  6350 ;; This function uses a non-reentrant model
  6351 ;;
  6352                           
  6353                           	psect	text16
  6354  0054F8                     __ptext16:
  6355                           	opt callstack 0
  6356  0054F8                     ___fpclassifyf:
  6357                           	opt callstack 25
  6358  0054F8  0060  F38C  F00B   	movff	___fpclassifyf@F463,___fpclassifyf@u
  6359  0054FE  0060  F390  F00C   	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6360  005504  0060  F394  F00D   	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6361  00550A  0060  F398  F00E   	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6362  005510  0060  F004  F00B   	movff	___fpclassifyf@x,___fpclassifyf@u
  6363  005516  0060  F008  F00C   	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6364  00551C  0060  F00C  F00D   	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6365  005522  0060  F010  F00E   	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6366  005528  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  6367  00552E  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6368  005534  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6369  00553A  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6370  005540  0E18               	movlw	24
  6371  005542  EFA8  F02A         	goto	u3310
  6372  005546                     u3315:
  6373  005546  90D8               	bcf	status,0,c
  6374  005548  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6375  00554A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6376  00554C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6377  00554E  3205               	rrcf	??___fpclassifyf^0,f,c
  6378  005550                     u3310:
  6379  005550  2EE8               	decfsz	wreg,f,c
  6380  005552  EFA3  F02A         	goto	u3315
  6381  005556  5005               	movf	??___fpclassifyf^0,w,c
  6382  005558  6E09               	movwf	___fpclassifyf@e^0,c
  6383  00555A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6384  00555C  5009               	movf	___fpclassifyf@e^0,w,c
  6385  00555E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6386  005560  A4D8               	btfss	status,2,c
  6387  005562  EFB5  F02A         	goto	u3321
  6388  005566  EFB7  F02A         	goto	u3320
  6389  00556A                     u3321:
  6390  00556A  EFD7  F02A         	goto	l3189
  6391  00556E                     u3320:
  6392  00556E  90D8               	bcf	status,0,c
  6393  005570  340B               	rlcf	___fpclassifyf@u^0,w,c
  6394  005572  6E05               	movwf	??___fpclassifyf^0,c
  6395  005574  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6396  005576  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6397  005578  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6398  00557A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6399  00557C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6400  00557E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6401  005580  5005               	movf	??___fpclassifyf^0,w,c
  6402  005582  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6403  005584  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6404  005586  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6405  005588  A4D8               	btfss	status,2,c
  6406  00558A  EFC9  F02A         	goto	u3331
  6407  00558E  EFCB  F02A         	goto	u3330
  6408  005592                     u3331:
  6409  005592  EFD1  F02A         	goto	l3185
  6410  005596                     u3330:
  6411  005596  0E00               	movlw	0
  6412  005598  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6413  00559A  0E02               	movlw	2
  6414  00559C  6E01               	movwf	?___fpclassifyf^0,c
  6415  00559E  EF0A  F02B         	goto	l1164
  6416  0055A2                     l3185:
  6417  0055A2  0E00               	movlw	0
  6418  0055A4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6419  0055A6  0E03               	movlw	3
  6420  0055A8  6E01               	movwf	?___fpclassifyf^0,c
  6421  0055AA  EF0A  F02B         	goto	l1164
  6422  0055AE                     l3189:
  6423  0055AE  2809               	incf	___fpclassifyf@e^0,w,c
  6424  0055B0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6425  0055B2  A4D8               	btfss	status,2,c
  6426  0055B4  EFDE  F02A         	goto	u3341
  6427  0055B8  EFE0  F02A         	goto	u3340
  6428  0055BC                     u3341:
  6429  0055BC  EF06  F02B         	goto	l3195
  6430  0055C0                     u3340:
  6431  0055C0  0060  F02C  F005   	movff	___fpclassifyf@u,??___fpclassifyf
  6432  0055C6  0060  F030  F006   	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6433  0055CC  0060  F034  F007   	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6434  0055D2  0060  F038  F008   	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6435  0055D8  0E09               	movlw	9
  6436  0055DA                     u3355:
  6437  0055DA  90D8               	bcf	status,0,c
  6438  0055DC  3605               	rlcf	??___fpclassifyf^0,f,c
  6439  0055DE  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6440  0055E0  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6441  0055E2  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6442  0055E4  2EE8               	decfsz	wreg,f,c
  6443  0055E6  EFED  F02A         	goto	u3355
  6444  0055EA  5005               	movf	??___fpclassifyf^0,w,c
  6445  0055EC  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6446  0055EE  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6447  0055F0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6448  0055F2  B4D8               	btfsc	status,2,c
  6449  0055F4  EFFE  F02A         	goto	u3361
  6450  0055F8  EF01  F02B         	goto	u3360
  6451  0055FC                     u3361:
  6452  0055FC  0E01               	movlw	1
  6453  0055FE  EF02  F02B         	goto	u3370
  6454  005602                     u3360:
  6455  005602  0E00               	movlw	0
  6456  005604                     u3370:
  6457  005604  6E01               	movwf	?___fpclassifyf^0,c
  6458  005606  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6459  005608  EF0A  F02B         	goto	l1164
  6460  00560C                     l3195:
  6461  00560C  0E00               	movlw	0
  6462  00560E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6463  005610  0E04               	movlw	4
  6464  005612  6E01               	movwf	?___fpclassifyf^0,c
  6465  005614                     l1164:
  6466  005614  0012               	return		;funcret
  6467  005616                     __end_of___fpclassifyf:
  6468                           	opt callstack 0
  6469                           
  6470 ;; *************** function ___fltol *****************
  6471 ;; Defined at:
  6472 ;;		line 43 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fltol.c"
  6473 ;; Parameters:    Size  Location     Type
  6474 ;;  f1              4    0[COMRAM] int 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  exp1            1    9[COMRAM] unsigned char 
  6477 ;;  sign1           1    8[COMRAM] unsigned char 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  4    0[COMRAM] long 
  6480 ;; Registers used:
  6481 ;;		wreg, status,2, status,0
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6487 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6488 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6490 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6491 ;;Total ram usage:       10 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; This function calls:
  6494 ;;		Nothing
  6495 ;; This function is called by:
  6496 ;;		_efgtoa
  6497 ;; This function uses a non-reentrant model
  6498 ;;
  6499                           
  6500                           	psect	text17
  6501  005616                     __ptext17:
  6502                           	opt callstack 0
  6503  005616                     ___fltol:
  6504                           	opt callstack 25
  6505  005616  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6506  005618  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6507  00561A  6E0A               	movwf	___fltol@exp1^0,c
  6508  00561C  500A               	movf	___fltol@exp1^0,w,c
  6509  00561E  A4D8               	btfss	status,2,c
  6510  005620  EF14  F02B         	goto	u4181
  6511  005624  EF16  F02B         	goto	u4180
  6512  005628                     u4181:
  6513  005628  EF20  F02B         	goto	l3657
  6514  00562C                     u4180:
  6515  00562C                     l3653:
  6516  00562C  0E00               	movlw	0
  6517  00562E  6E01               	movwf	?___fltol^0,c
  6518  005630  0E00               	movlw	0
  6519  005632  6E02               	movwf	(?___fltol+1)^0,c
  6520  005634  0E00               	movlw	0
  6521  005636  6E03               	movwf	(?___fltol+2)^0,c
  6522  005638  0E00               	movlw	0
  6523  00563A  6E04               	movwf	(?___fltol+3)^0,c
  6524  00563C  EF95  F02B         	goto	l780
  6525  005640                     l3657:
  6526  005640  0060  F004  F005   	movff	___fltol@f1,??___fltol
  6527  005646  0060  F008  F006   	movff	___fltol@f1+1,??___fltol+1
  6528  00564C  0060  F00C  F007   	movff	___fltol@f1+2,??___fltol+2
  6529  005652  0060  F010  F008   	movff	___fltol@f1+3,??___fltol+3
  6530  005658  0E20               	movlw	32
  6531  00565A  EF34  F02B         	goto	u4190
  6532  00565E                     u4195:
  6533  00565E  90D8               	bcf	status,0,c
  6534  005660  3208               	rrcf	(??___fltol+3)^0,f,c
  6535  005662  3207               	rrcf	(??___fltol+2)^0,f,c
  6536  005664  3206               	rrcf	(??___fltol+1)^0,f,c
  6537  005666  3205               	rrcf	??___fltol^0,f,c
  6538  005668                     u4190:
  6539  005668  2EE8               	decfsz	wreg,f,c
  6540  00566A  EF2F  F02B         	goto	u4195
  6541  00566E  5005               	movf	??___fltol^0,w,c
  6542  005670  6E09               	movwf	___fltol@sign1^0,c
  6543  005672  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6544  005674  0EFF               	movlw	255
  6545  005676  1601               	andwf	___fltol@f1^0,f,c
  6546  005678  0EFF               	movlw	255
  6547  00567A  1602               	andwf	(___fltol@f1+1)^0,f,c
  6548  00567C  0EFF               	movlw	255
  6549  00567E  1603               	andwf	(___fltol@f1+2)^0,f,c
  6550  005680  0E00               	movlw	0
  6551  005682  1604               	andwf	(___fltol@f1+3)^0,f,c
  6552  005684  0E96               	movlw	150
  6553  005686  5E0A               	subwf	___fltol@exp1^0,f,c
  6554  005688  BE0A               	btfsc	___fltol@exp1^0,7,c
  6555  00568A  EF4B  F02B         	goto	u4200
  6556  00568E  EF49  F02B         	goto	u4201
  6557  005692                     u4201:
  6558  005692  EF61  F02B         	goto	l3677
  6559  005696                     u4200:
  6560  005696  500A               	movf	___fltol@exp1^0,w,c
  6561  005698  0A80               	xorlw	128
  6562  00569A  0F97               	addlw	151
  6563  00569C  B0D8               	btfsc	status,0,c
  6564  00569E  EF53  F02B         	goto	u4211
  6565  0056A2  EF55  F02B         	goto	u4210
  6566  0056A6                     u4211:
  6567  0056A6  EF57  F02B         	goto	l3673
  6568  0056AA                     u4210:
  6569  0056AA  EF16  F02B         	goto	l3653
  6570  0056AE                     l3673:
  6571  0056AE  90D8               	bcf	status,0,c
  6572  0056B0  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6573  0056B2  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6574  0056B4  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6575  0056B6  3201               	rrcf	___fltol@f1^0,f,c
  6576  0056B8  3E0A               	incfsz	___fltol@exp1^0,f,c
  6577  0056BA  EF57  F02B         	goto	l3673
  6578  0056BE  EF79  F02B         	goto	l3687
  6579  0056C2                     l3677:
  6580  0056C2  0E1F               	movlw	31
  6581  0056C4  640A               	cpfsgt	___fltol@exp1^0,c
  6582  0056C6  EF67  F02B         	goto	u4221
  6583  0056CA  EF69  F02B         	goto	u4220
  6584  0056CE                     u4221:
  6585  0056CE  EF71  F02B         	goto	l3685
  6586  0056D2                     u4220:
  6587  0056D2  EF16  F02B         	goto	l3653
  6588  0056D6                     l3683:
  6589  0056D6  90D8               	bcf	status,0,c
  6590  0056D8  3601               	rlcf	___fltol@f1^0,f,c
  6591  0056DA  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6592  0056DC  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6593  0056DE  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6594  0056E0  060A               	decf	___fltol@exp1^0,f,c
  6595  0056E2                     l3685:
  6596  0056E2  500A               	movf	___fltol@exp1^0,w,c
  6597  0056E4  A4D8               	btfss	status,2,c
  6598  0056E6  EF77  F02B         	goto	u4231
  6599  0056EA  EF79  F02B         	goto	u4230
  6600  0056EE                     u4231:
  6601  0056EE  EF6B  F02B         	goto	l3683
  6602  0056F2                     u4230:
  6603  0056F2                     l3687:
  6604  0056F2  5009               	movf	___fltol@sign1^0,w,c
  6605  0056F4  B4D8               	btfsc	status,2,c
  6606  0056F6  EF7F  F02B         	goto	u4241
  6607  0056FA  EF81  F02B         	goto	u4240
  6608  0056FE                     u4241:
  6609  0056FE  EF89  F02B         	goto	l3691
  6610  005702                     u4240:
  6611  005702  1E04               	comf	(___fltol@f1+3)^0,f,c
  6612  005704  1E03               	comf	(___fltol@f1+2)^0,f,c
  6613  005706  1E02               	comf	(___fltol@f1+1)^0,f,c
  6614  005708  6C01               	negf	___fltol@f1^0,c
  6615  00570A  0E00               	movlw	0
  6616  00570C  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6617  00570E  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6618  005710  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6619  005712                     l3691:
  6620  005712  0060  F004  F001   	movff	___fltol@f1,?___fltol
  6621  005718  0060  F008  F002   	movff	___fltol@f1+1,?___fltol+1
  6622  00571E  0060  F00C  F003   	movff	___fltol@f1+2,?___fltol+2
  6623  005724  0060  F010  F004   	movff	___fltol@f1+3,?___fltol+3
  6624  00572A                     l780:
  6625  00572A  0012               	return		;funcret
  6626  00572C                     __end_of___fltol:
  6627                           	opt callstack 0
  6628                           
  6629 ;; *************** function ___flsub *****************
  6630 ;; Defined at:
  6631 ;;		line 245 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  b               4   80[COMRAM] long 
  6634 ;;  a               4   84[COMRAM] long 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  4   80[COMRAM] long 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6646 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6649 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6650 ;;Total ram usage:        8 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    1
  6653 ;; This function calls:
  6654 ;;		___fladd
  6655 ;; This function is called by:
  6656 ;;		_efgtoa
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text18
  6661  006126                     __ptext18:
  6662                           	opt callstack 0
  6663  006126                     ___flsub:
  6664                           	opt callstack 24
  6665  006126  0E00               	movlw	0
  6666  006128  1A55               	xorwf	___flsub@a^0,f,c
  6667  00612A  0E00               	movlw	0
  6668  00612C  1A56               	xorwf	(___flsub@a+1)^0,f,c
  6669  00612E  0E00               	movlw	0
  6670  006130  1A57               	xorwf	(___flsub@a+2)^0,f,c
  6671  006132  0E80               	movlw	128
  6672  006134  1A58               	xorwf	(___flsub@a+3)^0,f,c
  6673  006136  0060  F144  F00F   	movff	___flsub@b,___fladd@b
  6674  00613C  0060  F148  F010   	movff	___flsub@b+1,___fladd@b+1
  6675  006142  0060  F14C  F011   	movff	___flsub@b+2,___fladd@b+2
  6676  006148  0060  F150  F012   	movff	___flsub@b+3,___fladd@b+3
  6677  00614E  0060  F154  F013   	movff	___flsub@a,___fladd@a
  6678  006154  0060  F158  F014   	movff	___flsub@a+1,___fladd@a+1
  6679  00615A  0060  F15C  F015   	movff	___flsub@a+2,___fladd@a+2
  6680  006160  0060  F160  F016   	movff	___flsub@a+3,___fladd@a+3
  6681  006166  ECA2  F01E         	call	___fladd	;wreg free
  6682  00616A  0060  F03C  F051   	movff	?___fladd,?___flsub
  6683  006170  0060  F040  F052   	movff	?___fladd+1,?___flsub+1
  6684  006176  0060  F044  F053   	movff	?___fladd+2,?___flsub+2
  6685  00617C  0060  F048  F054   	movff	?___fladd+3,?___flsub+3
  6686  006182  0012               	return		;funcret
  6687  006184                     __end_of___flsub:
  6688                           	opt callstack 0
  6689                           
  6690 ;; *************** function ___fladd *****************
  6691 ;; Defined at:
  6692 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcadd.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  b               4   14[COMRAM] long 
  6695 ;;  a               4   18[COMRAM] long 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  grs             1   29[COMRAM] unsigned char 
  6698 ;;  bexp            1   28[COMRAM] unsigned char 
  6699 ;;  aexp            1   27[COMRAM] unsigned char 
  6700 ;;  signs           1   26[COMRAM] unsigned char 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  4   14[COMRAM] unsigned char 
  6703 ;; Registers used:
  6704 ;;		wreg, status,2, status,0
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6710 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6711 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6712 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6713 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6714 ;;Total ram usage:       16 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_main_loop
  6720 ;;		_efgtoa
  6721 ;;		___flsub
  6722 ;; This function uses a non-reentrant model
  6723 ;;
  6724                           
  6725                           	psect	text19
  6726  003D44                     __ptext19:
  6727                           	opt callstack 0
  6728  003D44                     ___fladd:
  6729                           	opt callstack 24
  6730  003D44  5012               	movf	(___fladd@b+3)^0,w,c
  6731  003D46  0B80               	andlw	128
  6732  003D48  6E1B               	movwf	___fladd@signs^0,c
  6733  003D4A  5012               	movf	(___fladd@b+3)^0,w,c
  6734  003D4C  2412               	addwf	(___fladd@b+3)^0,w,c
  6735  003D4E  6E1D               	movwf	___fladd@bexp^0,c
  6736  003D50  AE11               	btfss	(___fladd@b+2)^0,7,c
  6737  003D52  EFAD  F01E         	goto	u2881
  6738  003D56  EFAF  F01E         	goto	u2880
  6739  003D5A                     u2881:
  6740  003D5A  EFB0  F01E         	goto	l2959
  6741  003D5E                     u2880:
  6742  003D5E  801D               	bsf	___fladd@bexp^0,0,c
  6743  003D60                     l2959:
  6744  003D60  501D               	movf	___fladd@bexp^0,w,c
  6745  003D62  B4D8               	btfsc	status,2,c
  6746  003D64  EFB6  F01E         	goto	u2891
  6747  003D68  EFB8  F01E         	goto	u2890
  6748  003D6C                     u2891:
  6749  003D6C  EFCD  F01E         	goto	l2969
  6750  003D70                     u2890:
  6751  003D70  281D               	incf	___fladd@bexp^0,w,c
  6752  003D72  A4D8               	btfss	status,2,c
  6753  003D74  EFBE  F01E         	goto	u2901
  6754  003D78  EFC0  F01E         	goto	u2900
  6755  003D7C                     u2901:
  6756  003D7C  EFC8  F01E         	goto	l2965
  6757  003D80                     u2900:
  6758  003D80  0E00               	movlw	0
  6759  003D82  6E0F               	movwf	___fladd@b^0,c
  6760  003D84  0E00               	movlw	0
  6761  003D86  6E10               	movwf	(___fladd@b+1)^0,c
  6762  003D88  0E00               	movlw	0
  6763  003D8A  6E11               	movwf	(___fladd@b+2)^0,c
  6764  003D8C  0E00               	movlw	0
  6765  003D8E  6E12               	movwf	(___fladd@b+3)^0,c
  6766  003D90                     l2965:
  6767  003D90  8E11               	bsf	(___fladd@b+2)^0,7,c
  6768  003D92  0E00               	movlw	0
  6769  003D94  6E12               	movwf	(___fladd@b+3)^0,c
  6770  003D96  EFD5  F01E         	goto	l2971
  6771  003D9A                     l2969:
  6772  003D9A  0E00               	movlw	0
  6773  003D9C  6E0F               	movwf	___fladd@b^0,c
  6774  003D9E  0E00               	movlw	0
  6775  003DA0  6E10               	movwf	(___fladd@b+1)^0,c
  6776  003DA2  0E00               	movlw	0
  6777  003DA4  6E11               	movwf	(___fladd@b+2)^0,c
  6778  003DA6  0E00               	movlw	0
  6779  003DA8  6E12               	movwf	(___fladd@b+3)^0,c
  6780  003DAA                     l2971:
  6781  003DAA  5016               	movf	(___fladd@a+3)^0,w,c
  6782  003DAC  0B80               	andlw	128
  6783  003DAE  6E1C               	movwf	___fladd@aexp^0,c
  6784  003DB0  501B               	movf	___fladd@signs^0,w,c
  6785  003DB2  181C               	xorwf	___fladd@aexp^0,w,c
  6786  003DB4  B4D8               	btfsc	status,2,c
  6787  003DB6  EFDF  F01E         	goto	u2911
  6788  003DBA  EFE1  F01E         	goto	u2910
  6789  003DBE                     u2911:
  6790  003DBE  EFE2  F01E         	goto	l2977
  6791  003DC2                     u2910:
  6792  003DC2  8C1B               	bsf	___fladd@signs^0,6,c
  6793  003DC4                     l2977:
  6794  003DC4  5016               	movf	(___fladd@a+3)^0,w,c
  6795  003DC6  2416               	addwf	(___fladd@a+3)^0,w,c
  6796  003DC8  6E1C               	movwf	___fladd@aexp^0,c
  6797  003DCA  AE15               	btfss	(___fladd@a+2)^0,7,c
  6798  003DCC  EFEA  F01E         	goto	u2921
  6799  003DD0  EFEC  F01E         	goto	u2920
  6800  003DD4                     u2921:
  6801  003DD4  EFED  F01E         	goto	l2983
  6802  003DD8                     u2920:
  6803  003DD8  801C               	bsf	___fladd@aexp^0,0,c
  6804  003DDA                     l2983:
  6805  003DDA  501C               	movf	___fladd@aexp^0,w,c
  6806  003DDC  B4D8               	btfsc	status,2,c
  6807  003DDE  EFF3  F01E         	goto	u2931
  6808  003DE2  EFF5  F01E         	goto	u2930
  6809  003DE6                     u2931:
  6810  003DE6  EF0A  F01F         	goto	l2993
  6811  003DEA                     u2930:
  6812  003DEA  281C               	incf	___fladd@aexp^0,w,c
  6813  003DEC  A4D8               	btfss	status,2,c
  6814  003DEE  EFFB  F01E         	goto	u2941
  6815  003DF2  EFFD  F01E         	goto	u2940
  6816  003DF6                     u2941:
  6817  003DF6  EF05  F01F         	goto	l2989
  6818  003DFA                     u2940:
  6819  003DFA  0E00               	movlw	0
  6820  003DFC  6E13               	movwf	___fladd@a^0,c
  6821  003DFE  0E00               	movlw	0
  6822  003E00  6E14               	movwf	(___fladd@a+1)^0,c
  6823  003E02  0E00               	movlw	0
  6824  003E04  6E15               	movwf	(___fladd@a+2)^0,c
  6825  003E06  0E00               	movlw	0
  6826  003E08  6E16               	movwf	(___fladd@a+3)^0,c
  6827  003E0A                     l2989:
  6828  003E0A  8E15               	bsf	(___fladd@a+2)^0,7,c
  6829  003E0C  0E00               	movlw	0
  6830  003E0E  6E16               	movwf	(___fladd@a+3)^0,c
  6831  003E10  EF12  F01F         	goto	l2995
  6832  003E14                     l2993:
  6833  003E14  0E00               	movlw	0
  6834  003E16  6E13               	movwf	___fladd@a^0,c
  6835  003E18  0E00               	movlw	0
  6836  003E1A  6E14               	movwf	(___fladd@a+1)^0,c
  6837  003E1C  0E00               	movlw	0
  6838  003E1E  6E15               	movwf	(___fladd@a+2)^0,c
  6839  003E20  0E00               	movlw	0
  6840  003E22  6E16               	movwf	(___fladd@a+3)^0,c
  6841  003E24                     l2995:
  6842  003E24  501D               	movf	___fladd@bexp^0,w,c
  6843  003E26  5C1C               	subwf	___fladd@aexp^0,w,c
  6844  003E28  B0D8               	btfsc	status,0,c
  6845  003E2A  EF19  F01F         	goto	u2951
  6846  003E2E  EF1B  F01F         	goto	u2950
  6847  003E32                     u2951:
  6848  003E32  EF51  F01F         	goto	l3031
  6849  003E36                     u2950:
  6850  003E36  AC1B               	btfss	___fladd@signs^0,6,c
  6851  003E38  EF20  F01F         	goto	u2961
  6852  003E3C  EF22  F01F         	goto	u2960
  6853  003E40                     u2961:
  6854  003E40  EF24  F01F         	goto	l3001
  6855  003E44                     u2960:
  6856  003E44  0E80               	movlw	128
  6857  003E46  1A1B               	xorwf	___fladd@signs^0,f,c
  6858  003E48                     l3001:
  6859  003E48  0060  F074  F01E   	movff	___fladd@bexp,___fladd@grs
  6860  003E4E  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  6861  003E54  0060  F078  F01C   	movff	___fladd@grs,___fladd@aexp
  6862  003E5A  0060  F03C  F01E   	movff	___fladd@b,___fladd@grs
  6863  003E60  0060  F04C  F00F   	movff	___fladd@a,___fladd@b
  6864  003E66  0060  F078  F013   	movff	___fladd@grs,___fladd@a
  6865  003E6C  0060  F040  F01E   	movff	___fladd@b+1,___fladd@grs
  6866  003E72  0060  F050  F010   	movff	___fladd@a+1,___fladd@b+1
  6867  003E78  0060  F078  F014   	movff	___fladd@grs,___fladd@a+1
  6868  003E7E  0060  F044  F01E   	movff	___fladd@b+2,___fladd@grs
  6869  003E84  0060  F054  F011   	movff	___fladd@a+2,___fladd@b+2
  6870  003E8A  0060  F078  F015   	movff	___fladd@grs,___fladd@a+2
  6871  003E90  0060  F048  F01E   	movff	___fladd@b+3,___fladd@grs
  6872  003E96  0060  F058  F012   	movff	___fladd@a+3,___fladd@b+3
  6873  003E9C  0060  F078  F016   	movff	___fladd@grs,___fladd@a+3
  6874  003EA2                     l3031:
  6875  003EA2  0E00               	movlw	0
  6876  003EA4  6E1E               	movwf	___fladd@grs^0,c
  6877  003EA6  501D               	movf	___fladd@bexp^0,w,c
  6878  003EA8  0060  F070  F017   	movff	___fladd@aexp,??___fladd
  6879  003EAE  6A18               	clrf	(??___fladd+1)^0,c
  6880  003EB0  5E17               	subwf	??___fladd^0,f,c
  6881  003EB2  0E00               	movlw	0
  6882  003EB4  5A18               	subwfb	(??___fladd+1)^0,f,c
  6883  003EB6  BE18               	btfsc	(??___fladd+1)^0,7,c
  6884  003EB8  EF67  F01F         	goto	u2971
  6885  003EBC  5018               	movf	(??___fladd+1)^0,w,c
  6886  003EBE  E109               	bnz	u2970
  6887  003EC0  0E1A               	movlw	26
  6888  003EC2  5C17               	subwf	??___fladd^0,w,c
  6889  003EC4  A0D8               	btfss	status,0,c
  6890  003EC6  EF67  F01F         	goto	u2971
  6891  003ECA  EF69  F01F         	goto	u2970
  6892  003ECE                     u2971:
  6893  003ECE  EFA1  F01F         	goto	l1012
  6894  003ED2                     u2970:
  6895  003ED2  500F               	movf	___fladd@b^0,w,c
  6896  003ED4  1010               	iorwf	(___fladd@b+1)^0,w,c
  6897  003ED6  1011               	iorwf	(___fladd@b+2)^0,w,c
  6898  003ED8  1012               	iorwf	(___fladd@b+3)^0,w,c
  6899  003EDA  A4D8               	btfss	status,2,c
  6900  003EDC  EF72  F01F         	goto	u2981
  6901  003EE0  EF75  F01F         	goto	u2980
  6902  003EE4                     u2981:
  6903  003EE4  0E01               	movlw	1
  6904  003EE6  EF76  F01F         	goto	u2990
  6905  003EEA                     u2980:
  6906  003EEA  0E00               	movlw	0
  6907  003EEC                     u2990:
  6908  003EEC  6E1E               	movwf	___fladd@grs^0,c
  6909  003EEE  0E00               	movlw	0
  6910  003EF0  6E0F               	movwf	___fladd@b^0,c
  6911  003EF2  0E00               	movlw	0
  6912  003EF4  6E10               	movwf	(___fladd@b+1)^0,c
  6913  003EF6  0E00               	movlw	0
  6914  003EF8  6E11               	movwf	(___fladd@b+2)^0,c
  6915  003EFA  0E00               	movlw	0
  6916  003EFC  6E12               	movwf	(___fladd@b+3)^0,c
  6917  003EFE  0060  F070  F01D   	movff	___fladd@aexp,___fladd@bexp
  6918  003F04  EFAA  F01F         	goto	l1011
  6919  003F08                     l1013:
  6920  003F08  A01E               	btfss	___fladd@grs^0,0,c
  6921  003F0A  EF89  F01F         	goto	u3001
  6922  003F0E  EF8B  F01F         	goto	u3000
  6923  003F12                     u3001:
  6924  003F12  EF91  F01F         	goto	l3043
  6925  003F16                     u3000:
  6926  003F16  90D8               	bcf	status,0,c
  6927  003F18  301E               	rrcf	___fladd@grs^0,w,c
  6928  003F1A  0901               	iorlw	1
  6929  003F1C  6E1E               	movwf	___fladd@grs^0,c
  6930  003F1E  EF93  F01F         	goto	l3045
  6931  003F22                     l3043:
  6932  003F22  90D8               	bcf	status,0,c
  6933  003F24  321E               	rrcf	___fladd@grs^0,f,c
  6934  003F26                     l3045:
  6935  003F26  A00F               	btfss	___fladd@b^0,0,c
  6936  003F28  EF98  F01F         	goto	u3011
  6937  003F2C  EF9A  F01F         	goto	u3010
  6938  003F30                     u3011:
  6939  003F30  EF9B  F01F         	goto	l3049
  6940  003F34                     u3010:
  6941  003F34  8E1E               	bsf	___fladd@grs^0,7,c
  6942  003F36                     l3049:
  6943  003F36  3412               	rlcf	(___fladd@b+3)^0,w,c
  6944  003F38  3212               	rrcf	(___fladd@b+3)^0,f,c
  6945  003F3A  3211               	rrcf	(___fladd@b+2)^0,f,c
  6946  003F3C  3210               	rrcf	(___fladd@b+1)^0,f,c
  6947  003F3E  320F               	rrcf	___fladd@b^0,f,c
  6948  003F40  2A1D               	incf	___fladd@bexp^0,f,c
  6949  003F42                     l1012:
  6950  003F42  501C               	movf	___fladd@aexp^0,w,c
  6951  003F44  5C1D               	subwf	___fladd@bexp^0,w,c
  6952  003F46  A0D8               	btfss	status,0,c
  6953  003F48  EFA8  F01F         	goto	u3021
  6954  003F4C  EFAA  F01F         	goto	u3020
  6955  003F50                     u3021:
  6956  003F50  EF84  F01F         	goto	l1013
  6957  003F54                     u3020:
  6958  003F54                     l1011:
  6959  003F54  BC1B               	btfsc	___fladd@signs^0,6,c
  6960  003F56  EFAF  F01F         	goto	u3031
  6961  003F5A  EFB1  F01F         	goto	u3030
  6962  003F5E                     u3031:
  6963  003F5E  EFF1  F01F         	goto	l3077
  6964  003F62                     u3030:
  6965  003F62  501D               	movf	___fladd@bexp^0,w,c
  6966  003F64  A4D8               	btfss	status,2,c
  6967  003F66  EFB7  F01F         	goto	u3041
  6968  003F6A  EFB9  F01F         	goto	u3040
  6969  003F6E                     u3041:
  6970  003F6E  EFC3  F01F         	goto	l3059
  6971  003F72                     u3040:
  6972  003F72  0E00               	movlw	0
  6973  003F74  6E0F               	movwf	?___fladd^0,c
  6974  003F76  0E00               	movlw	0
  6975  003F78  6E10               	movwf	(?___fladd+1)^0,c
  6976  003F7A  0E00               	movlw	0
  6977  003F7C  6E11               	movwf	(?___fladd+2)^0,c
  6978  003F7E  0E00               	movlw	0
  6979  003F80  6E12               	movwf	(?___fladd+3)^0,c
  6980  003F82  EF1F  F021         	goto	l1020
  6981  003F86                     l3059:
  6982  003F86  5013               	movf	___fladd@a^0,w,c
  6983  003F88  260F               	addwf	___fladd@b^0,f,c
  6984  003F8A  5014               	movf	(___fladd@a+1)^0,w,c
  6985  003F8C  2210               	addwfc	(___fladd@b+1)^0,f,c
  6986  003F8E  5015               	movf	(___fladd@a+2)^0,w,c
  6987  003F90  2211               	addwfc	(___fladd@b+2)^0,f,c
  6988  003F92  5016               	movf	(___fladd@a+3)^0,w,c
  6989  003F94  2212               	addwfc	(___fladd@b+3)^0,f,c
  6990  003F96  A012               	btfss	(___fladd@b+3)^0,0,c
  6991  003F98  EFD0  F01F         	goto	u3051
  6992  003F9C  EFD2  F01F         	goto	u3050
  6993  003FA0                     u3051:
  6994  003FA0  EF7E  F020         	goto	l3113
  6995  003FA4                     u3050:
  6996  003FA4  A01E               	btfss	___fladd@grs^0,0,c
  6997  003FA6  EFD7  F01F         	goto	u3061
  6998  003FAA  EFD9  F01F         	goto	u3060
  6999  003FAE                     u3061:
  7000  003FAE  EFDF  F01F         	goto	l3067
  7001  003FB2                     u3060:
  7002  003FB2  90D8               	bcf	status,0,c
  7003  003FB4  301E               	rrcf	___fladd@grs^0,w,c
  7004  003FB6  0901               	iorlw	1
  7005  003FB8  6E1E               	movwf	___fladd@grs^0,c
  7006  003FBA  EFE1  F01F         	goto	l3069
  7007  003FBE                     l3067:
  7008  003FBE  90D8               	bcf	status,0,c
  7009  003FC0  321E               	rrcf	___fladd@grs^0,f,c
  7010  003FC2                     l3069:
  7011  003FC2  A00F               	btfss	___fladd@b^0,0,c
  7012  003FC4  EFE6  F01F         	goto	u3071
  7013  003FC8  EFE8  F01F         	goto	u3070
  7014  003FCC                     u3071:
  7015  003FCC  EFE9  F01F         	goto	l3073
  7016  003FD0                     u3070:
  7017  003FD0  8E1E               	bsf	___fladd@grs^0,7,c
  7018  003FD2                     l3073:
  7019  003FD2  3412               	rlcf	(___fladd@b+3)^0,w,c
  7020  003FD4  3212               	rrcf	(___fladd@b+3)^0,f,c
  7021  003FD6  3211               	rrcf	(___fladd@b+2)^0,f,c
  7022  003FD8  3210               	rrcf	(___fladd@b+1)^0,f,c
  7023  003FDA  320F               	rrcf	___fladd@b^0,f,c
  7024  003FDC  2A1D               	incf	___fladd@bexp^0,f,c
  7025  003FDE  EF7E  F020         	goto	l3113
  7026  003FE2                     l3077:
  7027  003FE2  5013               	movf	___fladd@a^0,w,c
  7028  003FE4  5C0F               	subwf	___fladd@b^0,w,c
  7029  003FE6  5014               	movf	(___fladd@a+1)^0,w,c
  7030  003FE8  5810               	subwfb	(___fladd@b+1)^0,w,c
  7031  003FEA  5015               	movf	(___fladd@a+2)^0,w,c
  7032  003FEC  5811               	subwfb	(___fladd@b+2)^0,w,c
  7033  003FEE  5012               	movf	(___fladd@b+3)^0,w,c
  7034  003FF0  0A80               	xorlw	128
  7035  003FF2  6E17               	movwf	??___fladd^0,c
  7036  003FF4  5016               	movf	(___fladd@a+3)^0,w,c
  7037  003FF6  0A80               	xorlw	128
  7038  003FF8  5817               	subwfb	??___fladd^0,w,c
  7039  003FFA  B0D8               	btfsc	status,0,c
  7040  003FFC  EF02  F020         	goto	u3081
  7041  004000  EF04  F020         	goto	u3080
  7042  004004                     u3081:
  7043  004004  EF2F  F020         	goto	l3087
  7044  004008                     u3080:
  7045  004008  500F               	movf	___fladd@b^0,w,c
  7046  00400A  5C13               	subwf	___fladd@a^0,w,c
  7047  00400C  6E17               	movwf	??___fladd^0,c
  7048  00400E  5010               	movf	(___fladd@b+1)^0,w,c
  7049  004010  5814               	subwfb	(___fladd@a+1)^0,w,c
  7050  004012  6E18               	movwf	(??___fladd+1)^0,c
  7051  004014  5011               	movf	(___fladd@b+2)^0,w,c
  7052  004016  5815               	subwfb	(___fladd@a+2)^0,w,c
  7053  004018  6E19               	movwf	(??___fladd+2)^0,c
  7054  00401A  5012               	movf	(___fladd@b+3)^0,w,c
  7055  00401C  5816               	subwfb	(___fladd@a+3)^0,w,c
  7056  00401E  6E1A               	movwf	(??___fladd+3)^0,c
  7057  004020  0EFF               	movlw	255
  7058  004022  2417               	addwf	??___fladd^0,w,c
  7059  004024  6E0F               	movwf	___fladd@b^0,c
  7060  004026  0EFF               	movlw	255
  7061  004028  2018               	addwfc	(??___fladd+1)^0,w,c
  7062  00402A  6E10               	movwf	(___fladd@b+1)^0,c
  7063  00402C  0EFF               	movlw	255
  7064  00402E  2019               	addwfc	(??___fladd+2)^0,w,c
  7065  004030  6E11               	movwf	(___fladd@b+2)^0,c
  7066  004032  0EFF               	movlw	255
  7067  004034  201A               	addwfc	(??___fladd+3)^0,w,c
  7068  004036  6E12               	movwf	(___fladd@b+3)^0,c
  7069  004038  0E80               	movlw	128
  7070  00403A  1A1B               	xorwf	___fladd@signs^0,f,c
  7071  00403C  6C1E               	negf	___fladd@grs^0,c
  7072  00403E  501E               	movf	___fladd@grs^0,w,c
  7073  004040  A4D8               	btfss	status,2,c
  7074  004042  EF25  F020         	goto	u3091
  7075  004046  EF27  F020         	goto	u3090
  7076  00404A                     u3091:
  7077  00404A  EF37  F020         	goto	l1028
  7078  00404E                     u3090:
  7079  00404E  0E01               	movlw	1
  7080  004050  260F               	addwf	___fladd@b^0,f,c
  7081  004052  0E00               	movlw	0
  7082  004054  2210               	addwfc	(___fladd@b+1)^0,f,c
  7083  004056  2211               	addwfc	(___fladd@b+2)^0,f,c
  7084  004058  2212               	addwfc	(___fladd@b+3)^0,f,c
  7085  00405A  EF37  F020         	goto	l1028
  7086  00405E                     l3087:
  7087  00405E  5013               	movf	___fladd@a^0,w,c
  7088  004060  5E0F               	subwf	___fladd@b^0,f,c
  7089  004062  5014               	movf	(___fladd@a+1)^0,w,c
  7090  004064  5A10               	subwfb	(___fladd@b+1)^0,f,c
  7091  004066  5015               	movf	(___fladd@a+2)^0,w,c
  7092  004068  5A11               	subwfb	(___fladd@b+2)^0,f,c
  7093  00406A  5016               	movf	(___fladd@a+3)^0,w,c
  7094  00406C  5A12               	subwfb	(___fladd@b+3)^0,f,c
  7095  00406E                     l1028:
  7096  00406E  500F               	movf	___fladd@b^0,w,c
  7097  004070  1010               	iorwf	(___fladd@b+1)^0,w,c
  7098  004072  1011               	iorwf	(___fladd@b+2)^0,w,c
  7099  004074  1012               	iorwf	(___fladd@b+3)^0,w,c
  7100  004076  A4D8               	btfss	status,2,c
  7101  004078  EF40  F020         	goto	u3101
  7102  00407C  EF42  F020         	goto	u3100
  7103  004080                     u3101:
  7104  004080  EF77  F020         	goto	l3111
  7105  004084                     u3100:
  7106  004084  501E               	movf	___fladd@grs^0,w,c
  7107  004086  A4D8               	btfss	status,2,c
  7108  004088  EF48  F020         	goto	u3111
  7109  00408C  EF4A  F020         	goto	u3110
  7110  004090                     u3111:
  7111  004090  EF77  F020         	goto	l3111
  7112  004094                     u3110:
  7113  004094  0E00               	movlw	0
  7114  004096  6E0F               	movwf	?___fladd^0,c
  7115  004098  0E00               	movlw	0
  7116  00409A  6E10               	movwf	(?___fladd+1)^0,c
  7117  00409C  0E00               	movlw	0
  7118  00409E  6E11               	movwf	(?___fladd+2)^0,c
  7119  0040A0  0E00               	movlw	0
  7120  0040A2  6E12               	movwf	(?___fladd+3)^0,c
  7121  0040A4  EF1F  F021         	goto	l1020
  7122  0040A8                     l3095:
  7123  0040A8  90D8               	bcf	status,0,c
  7124  0040AA  360F               	rlcf	___fladd@b^0,f,c
  7125  0040AC  3610               	rlcf	(___fladd@b+1)^0,f,c
  7126  0040AE  3611               	rlcf	(___fladd@b+2)^0,f,c
  7127  0040B0  3612               	rlcf	(___fladd@b+3)^0,f,c
  7128  0040B2  AE1E               	btfss	___fladd@grs^0,7,c
  7129  0040B4  EF5E  F020         	goto	u3121
  7130  0040B8  EF60  F020         	goto	u3120
  7131  0040BC                     u3121:
  7132  0040BC  EF61  F020         	goto	l3101
  7133  0040C0                     u3120:
  7134  0040C0  800F               	bsf	___fladd@b^0,0,c
  7135  0040C2                     l3101:
  7136  0040C2  A01E               	btfss	___fladd@grs^0,0,c
  7137  0040C4  EF66  F020         	goto	u3131
  7138  0040C8  EF68  F020         	goto	u3130
  7139  0040CC                     u3131:
  7140  0040CC  EF6C  F020         	goto	l3105
  7141  0040D0                     u3130:
  7142  0040D0  80D8               	bsf	status,0,c
  7143  0040D2  361E               	rlcf	___fladd@grs^0,f,c
  7144  0040D4  EF6E  F020         	goto	l3107
  7145  0040D8                     l3105:
  7146  0040D8  90D8               	bcf	status,0,c
  7147  0040DA  361E               	rlcf	___fladd@grs^0,f,c
  7148  0040DC                     l3107:
  7149  0040DC  501D               	movf	___fladd@bexp^0,w,c
  7150  0040DE  B4D8               	btfsc	status,2,c
  7151  0040E0  EF74  F020         	goto	u3141
  7152  0040E4  EF76  F020         	goto	u3140
  7153  0040E8                     u3141:
  7154  0040E8  EF77  F020         	goto	l3111
  7155  0040EC                     u3140:
  7156  0040EC  061D               	decf	___fladd@bexp^0,f,c
  7157  0040EE                     l3111:
  7158  0040EE  AE11               	btfss	(___fladd@b+2)^0,7,c
  7159  0040F0  EF7C  F020         	goto	u3151
  7160  0040F4  EF7E  F020         	goto	u3150
  7161  0040F8                     u3151:
  7162  0040F8  EF54  F020         	goto	l3095
  7163  0040FC                     u3150:
  7164  0040FC                     l3113:
  7165  0040FC  0E00               	movlw	0
  7166  0040FE  6E1C               	movwf	___fladd@aexp^0,c
  7167  004100  AE1E               	btfss	___fladd@grs^0,7,c
  7168  004102  EF85  F020         	goto	u3161
  7169  004106  EF87  F020         	goto	u3160
  7170  00410A                     u3161:
  7171  00410A  EFA0  F020         	goto	l1037
  7172  00410E                     u3160:
  7173  00410E  0060  F078  F017   	movff	___fladd@grs,??___fladd
  7174  004114  0E7F               	movlw	127
  7175  004116  1617               	andwf	??___fladd^0,f,c
  7176  004118  B4D8               	btfsc	status,2,c
  7177  00411A  EF91  F020         	goto	u3171
  7178  00411E  EF93  F020         	goto	u3170
  7179  004122                     u3171:
  7180  004122  EF97  F020         	goto	l1038
  7181  004126                     u3170:
  7182  004126                     l3119:
  7183  004126  0E01               	movlw	1
  7184  004128  6E1C               	movwf	___fladd@aexp^0,c
  7185  00412A  EFA0  F020         	goto	l1037
  7186  00412E                     l1038:
  7187  00412E  A00F               	btfss	___fladd@b^0,0,c
  7188  004130  EF9C  F020         	goto	u3181
  7189  004134  EF9E  F020         	goto	u3180
  7190  004138                     u3181:
  7191  004138  EFA0  F020         	goto	l1037
  7192  00413C                     u3180:
  7193  00413C  EF93  F020         	goto	l3119
  7194  004140                     l1037:
  7195  004140  501C               	movf	___fladd@aexp^0,w,c
  7196  004142  B4D8               	btfsc	status,2,c
  7197  004144  EFA6  F020         	goto	u3191
  7198  004148  EFA8  F020         	goto	u3190
  7199  00414C                     u3191:
  7200  00414C  EFDB  F020         	goto	l3131
  7201  004150                     u3190:
  7202  004150  0E01               	movlw	1
  7203  004152  260F               	addwf	___fladd@b^0,f,c
  7204  004154  0E00               	movlw	0
  7205  004156  2210               	addwfc	(___fladd@b+1)^0,f,c
  7206  004158  2211               	addwfc	(___fladd@b+2)^0,f,c
  7207  00415A  2212               	addwfc	(___fladd@b+3)^0,f,c
  7208  00415C  A012               	btfss	(___fladd@b+3)^0,0,c
  7209  00415E  EFB3  F020         	goto	u3201
  7210  004162  EFB5  F020         	goto	u3200
  7211  004166                     u3201:
  7212  004166  EFDB  F020         	goto	l3131
  7213  00416A                     u3200:
  7214  00416A  0060  F03C  F017   	movff	___fladd@b,??___fladd
  7215  004170  0060  F040  F018   	movff	___fladd@b+1,??___fladd+1
  7216  004176  0060  F044  F019   	movff	___fladd@b+2,??___fladd+2
  7217  00417C  0060  F048  F01A   	movff	___fladd@b+3,??___fladd+3
  7218  004182  341A               	rlcf	(??___fladd+3)^0,w,c
  7219  004184  321A               	rrcf	(??___fladd+3)^0,f,c
  7220  004186  3219               	rrcf	(??___fladd+2)^0,f,c
  7221  004188  3218               	rrcf	(??___fladd+1)^0,f,c
  7222  00418A  3217               	rrcf	??___fladd^0,f,c
  7223  00418C  0060  F05C  F00F   	movff	??___fladd,___fladd@b
  7224  004192  0060  F060  F010   	movff	??___fladd+1,___fladd@b+1
  7225  004198  0060  F064  F011   	movff	??___fladd+2,___fladd@b+2
  7226  00419E  0060  F068  F012   	movff	??___fladd+3,___fladd@b+3
  7227  0041A4  281D               	incf	___fladd@bexp^0,w,c
  7228  0041A6  B4D8               	btfsc	status,2,c
  7229  0041A8  EFD8  F020         	goto	u3211
  7230  0041AC  EFDA  F020         	goto	u3210
  7231  0041B0                     u3211:
  7232  0041B0  EFDB  F020         	goto	l3131
  7233  0041B4                     u3210:
  7234  0041B4  2A1D               	incf	___fladd@bexp^0,f,c
  7235  0041B6                     l3131:
  7236  0041B6  281D               	incf	___fladd@bexp^0,w,c
  7237  0041B8  B4D8               	btfsc	status,2,c
  7238  0041BA  EFE1  F020         	goto	u3221
  7239  0041BE  EFE3  F020         	goto	u3220
  7240  0041C2                     u3221:
  7241  0041C2  EFEB  F020         	goto	l3135
  7242  0041C6                     u3220:
  7243  0041C6  501D               	movf	___fladd@bexp^0,w,c
  7244  0041C8  A4D8               	btfss	status,2,c
  7245  0041CA  EFE9  F020         	goto	u3231
  7246  0041CE  EFEB  F020         	goto	u3230
  7247  0041D2                     u3231:
  7248  0041D2  EFFD  F020         	goto	l3139
  7249  0041D6                     u3230:
  7250  0041D6                     l3135:
  7251  0041D6  0E00               	movlw	0
  7252  0041D8  6E0F               	movwf	___fladd@b^0,c
  7253  0041DA  0E00               	movlw	0
  7254  0041DC  6E10               	movwf	(___fladd@b+1)^0,c
  7255  0041DE  0E00               	movlw	0
  7256  0041E0  6E11               	movwf	(___fladd@b+2)^0,c
  7257  0041E2  0E00               	movlw	0
  7258  0041E4  6E12               	movwf	(___fladd@b+3)^0,c
  7259  0041E6  501D               	movf	___fladd@bexp^0,w,c
  7260  0041E8  A4D8               	btfss	status,2,c
  7261  0041EA  EFF9  F020         	goto	u3241
  7262  0041EE  EFFB  F020         	goto	u3240
  7263  0041F2                     u3241:
  7264  0041F2  EFFD  F020         	goto	l3139
  7265  0041F6                     u3240:
  7266  0041F6  0E00               	movlw	0
  7267  0041F8  6E1B               	movwf	___fladd@signs^0,c
  7268  0041FA                     l3139:
  7269  0041FA  A01D               	btfss	___fladd@bexp^0,0,c
  7270  0041FC  EF02  F021         	goto	u3251
  7271  004200  EF04  F021         	goto	u3250
  7272  004204                     u3251:
  7273  004204  EF07  F021         	goto	l3143
  7274  004208                     u3250:
  7275  004208  8E11               	bsf	(___fladd@b+2)^0,7,c
  7276  00420A  EF08  F021         	goto	l3145
  7277  00420E                     l3143:
  7278  00420E  9E11               	bcf	(___fladd@b+2)^0,7,c
  7279  004210                     l3145:
  7280  004210  90D8               	bcf	status,0,c
  7281  004212  301D               	rrcf	___fladd@bexp^0,w,c
  7282  004214  6E12               	movwf	(___fladd@b+3)^0,c
  7283  004216  AE1B               	btfss	___fladd@signs^0,7,c
  7284  004218  EF10  F021         	goto	u3261
  7285  00421C  EF12  F021         	goto	u3260
  7286  004220                     u3261:
  7287  004220  EF13  F021         	goto	l3151
  7288  004224                     u3260:
  7289  004224  8E12               	bsf	(___fladd@b+3)^0,7,c
  7290  004226                     l3151:
  7291  004226  0060  F03C  F00F   	movff	___fladd@b,?___fladd
  7292  00422C  0060  F040  F010   	movff	___fladd@b+1,?___fladd+1
  7293  004232  0060  F044  F011   	movff	___fladd@b+2,?___fladd+2
  7294  004238  0060  F048  F012   	movff	___fladd@b+3,?___fladd+3
  7295  00423E                     l1020:
  7296  00423E  0012               	return		;funcret
  7297  004240                     __end_of___fladd:
  7298                           	opt callstack 0
  7299                           
  7300 ;; *************** function ___flneg *****************
  7301 ;; Defined at:
  7302 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flneg.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  f1              4    0[COMRAM] unsigned char 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  4    0[COMRAM] unsigned char 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2, status,0
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7316 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7319 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7320 ;;Total ram usage:        4 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_efgtoa
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text20
  7330  0062DE                     __ptext20:
  7331                           	opt callstack 0
  7332  0062DE                     ___flneg:
  7333                           	opt callstack 25
  7334  0062DE  5001               	movf	___flneg@f1^0,w,c
  7335  0062E0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7336  0062E2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7337  0062E4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7338  0062E6  B4D8               	btfsc	status,2,c
  7339  0062E8  EF78  F031         	goto	u4171
  7340  0062EC  EF7A  F031         	goto	u4170
  7341  0062F0                     u4171:
  7342  0062F0  EF82  F031         	goto	l3647
  7343  0062F4                     u4170:
  7344  0062F4  0E00               	movlw	0
  7345  0062F6  1A01               	xorwf	___flneg@f1^0,f,c
  7346  0062F8  0E00               	movlw	0
  7347  0062FA  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7348  0062FC  0E00               	movlw	0
  7349  0062FE  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7350  006300  0E80               	movlw	128
  7351  006302  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7352  006304                     l3647:
  7353  006304  0060  F004  F001   	movff	___flneg@f1,?___flneg
  7354  00630A  0060  F008  F002   	movff	___flneg@f1+1,?___flneg+1
  7355  006310  0060  F00C  F003   	movff	___flneg@f1+2,?___flneg+2
  7356  006316  0060  F010  F004   	movff	___flneg@f1+3,?___flneg+3
  7357  00631C  0012               	return		;funcret
  7358  00631E                     __end_of___flneg:
  7359                           	opt callstack 0
  7360                           
  7361 ;; *************** function ___flmul *****************
  7362 ;; Defined at:
  7363 ;;		line 8 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcmul.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  b               4   55[COMRAM] unsigned char 
  7366 ;;  a               4   59[COMRAM] unsigned char 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  prod            4   74[COMRAM] struct .
  7369 ;;  grs             4   68[COMRAM] unsigned long 
  7370 ;;  temp            2   78[COMRAM] struct .
  7371 ;;  bexp            1   73[COMRAM] unsigned char 
  7372 ;;  aexp            1   72[COMRAM] unsigned char 
  7373 ;;  sign            1   67[COMRAM] unsigned char 
  7374 ;; Return value:  Size  Location     Type
  7375 ;;                  4   55[COMRAM] unsigned char 
  7376 ;; Registers used:
  7377 ;;		wreg, status,2, status,0, prodl, prodh
  7378 ;; Tracked objects:
  7379 ;;		On entry : 0/0
  7380 ;;		On exit  : 0/0
  7381 ;;		Unchanged: 0/0
  7382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7383 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7384 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7385 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7386 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7387 ;;Total ram usage:       25 bytes
  7388 ;; Hardware stack levels used:    1
  7389 ;; This function calls:
  7390 ;;		Nothing
  7391 ;; This function is called by:
  7392 ;;		_main_loop
  7393 ;;		_efgtoa
  7394 ;; This function uses a non-reentrant model
  7395 ;;
  7396                           
  7397                           	psect	text21
  7398  004240                     __ptext21:
  7399                           	opt callstack 0
  7400  004240                     ___flmul:
  7401                           	opt callstack 25
  7402  004240  503B               	movf	(___flmul@b+3)^0,w,c
  7403  004242  0B80               	andlw	128
  7404  004244  6E44               	movwf	___flmul@sign^0,c
  7405  004246  503B               	movf	(___flmul@b+3)^0,w,c
  7406  004248  243B               	addwf	(___flmul@b+3)^0,w,c
  7407  00424A  6E4A               	movwf	___flmul@bexp^0,c
  7408  00424C  AE3A               	btfss	(___flmul@b+2)^0,7,c
  7409  00424E  EF2B  F021         	goto	u3781
  7410  004252  EF2D  F021         	goto	u3780
  7411  004256                     u3781:
  7412  004256  EF2E  F021         	goto	l3395
  7413  00425A                     u3780:
  7414  00425A  804A               	bsf	___flmul@bexp^0,0,c
  7415  00425C                     l3395:
  7416  00425C  504A               	movf	___flmul@bexp^0,w,c
  7417  00425E  B4D8               	btfsc	status,2,c
  7418  004260  EF34  F021         	goto	u3791
  7419  004264  EF36  F021         	goto	u3790
  7420  004268                     u3791:
  7421  004268  EF49  F021         	goto	l3403
  7422  00426C                     u3790:
  7423  00426C  284A               	incf	___flmul@bexp^0,w,c
  7424  00426E  A4D8               	btfss	status,2,c
  7425  004270  EF3C  F021         	goto	u3801
  7426  004274  EF3E  F021         	goto	u3800
  7427  004278                     u3801:
  7428  004278  EF46  F021         	goto	l3401
  7429  00427C                     u3800:
  7430  00427C  0E00               	movlw	0
  7431  00427E  6E38               	movwf	___flmul@b^0,c
  7432  004280  0E00               	movlw	0
  7433  004282  6E39               	movwf	(___flmul@b+1)^0,c
  7434  004284  0E00               	movlw	0
  7435  004286  6E3A               	movwf	(___flmul@b+2)^0,c
  7436  004288  0E00               	movlw	0
  7437  00428A  6E3B               	movwf	(___flmul@b+3)^0,c
  7438  00428C                     l3401:
  7439  00428C  8E3A               	bsf	(___flmul@b+2)^0,7,c
  7440  00428E  EF51  F021         	goto	l3405
  7441  004292                     l3403:
  7442  004292  0E00               	movlw	0
  7443  004294  6E38               	movwf	___flmul@b^0,c
  7444  004296  0E00               	movlw	0
  7445  004298  6E39               	movwf	(___flmul@b+1)^0,c
  7446  00429A  0E00               	movlw	0
  7447  00429C  6E3A               	movwf	(___flmul@b+2)^0,c
  7448  00429E  0E00               	movlw	0
  7449  0042A0  6E3B               	movwf	(___flmul@b+3)^0,c
  7450  0042A2                     l3405:
  7451  0042A2  503F               	movf	(___flmul@a+3)^0,w,c
  7452  0042A4  0B80               	andlw	128
  7453  0042A6  1A44               	xorwf	___flmul@sign^0,f,c
  7454  0042A8  503F               	movf	(___flmul@a+3)^0,w,c
  7455  0042AA  243F               	addwf	(___flmul@a+3)^0,w,c
  7456  0042AC  6E49               	movwf	___flmul@aexp^0,c
  7457  0042AE  AE3E               	btfss	(___flmul@a+2)^0,7,c
  7458  0042B0  EF5C  F021         	goto	u3811
  7459  0042B4  EF5E  F021         	goto	u3810
  7460  0042B8                     u3811:
  7461  0042B8  EF5F  F021         	goto	l3413
  7462  0042BC                     u3810:
  7463  0042BC  8049               	bsf	___flmul@aexp^0,0,c
  7464  0042BE                     l3413:
  7465  0042BE  5049               	movf	___flmul@aexp^0,w,c
  7466  0042C0  B4D8               	btfsc	status,2,c
  7467  0042C2  EF65  F021         	goto	u3821
  7468  0042C6  EF67  F021         	goto	u3820
  7469  0042CA                     u3821:
  7470  0042CA  EF7A  F021         	goto	l3421
  7471  0042CE                     u3820:
  7472  0042CE  2849               	incf	___flmul@aexp^0,w,c
  7473  0042D0  A4D8               	btfss	status,2,c
  7474  0042D2  EF6D  F021         	goto	u3831
  7475  0042D6  EF6F  F021         	goto	u3830
  7476  0042DA                     u3831:
  7477  0042DA  EF77  F021         	goto	l3419
  7478  0042DE                     u3830:
  7479  0042DE  0E00               	movlw	0
  7480  0042E0  6E3C               	movwf	___flmul@a^0,c
  7481  0042E2  0E00               	movlw	0
  7482  0042E4  6E3D               	movwf	(___flmul@a+1)^0,c
  7483  0042E6  0E00               	movlw	0
  7484  0042E8  6E3E               	movwf	(___flmul@a+2)^0,c
  7485  0042EA  0E00               	movlw	0
  7486  0042EC  6E3F               	movwf	(___flmul@a+3)^0,c
  7487  0042EE                     l3419:
  7488  0042EE  8E3E               	bsf	(___flmul@a+2)^0,7,c
  7489  0042F0  EF82  F021         	goto	l1097
  7490  0042F4                     l3421:
  7491  0042F4  0E00               	movlw	0
  7492  0042F6  6E3C               	movwf	___flmul@a^0,c
  7493  0042F8  0E00               	movlw	0
  7494  0042FA  6E3D               	movwf	(___flmul@a+1)^0,c
  7495  0042FC  0E00               	movlw	0
  7496  0042FE  6E3E               	movwf	(___flmul@a+2)^0,c
  7497  004300  0E00               	movlw	0
  7498  004302  6E3F               	movwf	(___flmul@a+3)^0,c
  7499  004304                     l1097:
  7500  004304  5049               	movf	___flmul@aexp^0,w,c
  7501  004306  B4D8               	btfsc	status,2,c
  7502  004308  EF88  F021         	goto	u3841
  7503  00430C  EF8A  F021         	goto	u3840
  7504  004310                     u3841:
  7505  004310  EF92  F021         	goto	l3425
  7506  004314                     u3840:
  7507  004314  504A               	movf	___flmul@bexp^0,w,c
  7508  004316  A4D8               	btfss	status,2,c
  7509  004318  EF90  F021         	goto	u3851
  7510  00431C  EF92  F021         	goto	u3850
  7511  004320                     u3851:
  7512  004320  EF9C  F021         	goto	l3429
  7513  004324                     u3850:
  7514  004324                     l3425:
  7515  004324  0E00               	movlw	0
  7516  004326  6E38               	movwf	?___flmul^0,c
  7517  004328  0E00               	movlw	0
  7518  00432A  6E39               	movwf	(?___flmul+1)^0,c
  7519  00432C  0E00               	movlw	0
  7520  00432E  6E3A               	movwf	(?___flmul+2)^0,c
  7521  004330  0E00               	movlw	0
  7522  004332  6E3B               	movwf	(?___flmul+3)^0,c
  7523  004334  EF64  F023         	goto	l1101
  7524  004338                     l3429:
  7525  004338  503E               	movf	(___flmul@a+2)^0,w,c
  7526  00433A  0238               	mulwf	___flmul@b^0,c
  7527  00433C  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7528  004342  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7529  004348  504F               	movf	___flmul@temp^0,w,c
  7530  00434A  6E45               	movwf	___flmul@grs^0,c
  7531  00434C  6A46               	clrf	(___flmul@grs+1)^0,c
  7532  00434E  6A47               	clrf	(___flmul@grs+2)^0,c
  7533  004350  6A48               	clrf	(___flmul@grs+3)^0,c
  7534  004352  5050               	movf	(___flmul@temp+1)^0,w,c
  7535  004354  6E4B               	movwf	___flmul@prod^0,c
  7536  004356  6A4C               	clrf	(___flmul@prod+1)^0,c
  7537  004358  6A4D               	clrf	(___flmul@prod+2)^0,c
  7538  00435A  6A4E               	clrf	(___flmul@prod+3)^0,c
  7539  00435C  503D               	movf	(___flmul@a+1)^0,w,c
  7540  00435E  0239               	mulwf	(___flmul@b+1)^0,c
  7541  004360  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7542  004366  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7543  00436C  504F               	movf	___flmul@temp^0,w,c
  7544  00436E  2645               	addwf	___flmul@grs^0,f,c
  7545  004370  0E00               	movlw	0
  7546  004372  2246               	addwfc	(___flmul@grs+1)^0,f,c
  7547  004374  2247               	addwfc	(___flmul@grs+2)^0,f,c
  7548  004376  2248               	addwfc	(___flmul@grs+3)^0,f,c
  7549  004378  5050               	movf	(___flmul@temp+1)^0,w,c
  7550  00437A  264B               	addwf	___flmul@prod^0,f,c
  7551  00437C  0E00               	movlw	0
  7552  00437E  224C               	addwfc	(___flmul@prod+1)^0,f,c
  7553  004380  224D               	addwfc	(___flmul@prod+2)^0,f,c
  7554  004382  224E               	addwfc	(___flmul@prod+3)^0,f,c
  7555  004384  503C               	movf	___flmul@a^0,w,c
  7556  004386  023A               	mulwf	(___flmul@b+2)^0,c
  7557  004388  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7558  00438E  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7559  004394  504F               	movf	___flmul@temp^0,w,c
  7560  004396  2645               	addwf	___flmul@grs^0,f,c
  7561  004398  0E00               	movlw	0
  7562  00439A  2246               	addwfc	(___flmul@grs+1)^0,f,c
  7563  00439C  2247               	addwfc	(___flmul@grs+2)^0,f,c
  7564  00439E  2248               	addwfc	(___flmul@grs+3)^0,f,c
  7565  0043A0  5050               	movf	(___flmul@temp+1)^0,w,c
  7566  0043A2  264B               	addwf	___flmul@prod^0,f,c
  7567  0043A4  0E00               	movlw	0
  7568  0043A6  224C               	addwfc	(___flmul@prod+1)^0,f,c
  7569  0043A8  224D               	addwfc	(___flmul@prod+2)^0,f,c
  7570  0043AA  224E               	addwfc	(___flmul@prod+3)^0,f,c
  7571  0043AC  0060  F11C  F048   	movff	___flmul@grs+2,___flmul@grs+3
  7572  0043B2  0060  F118  F047   	movff	___flmul@grs+1,___flmul@grs+2
  7573  0043B8  0060  F114  F046   	movff	___flmul@grs,___flmul@grs+1
  7574  0043BE  6A45               	clrf	___flmul@grs^0,c
  7575  0043C0  503C               	movf	___flmul@a^0,w,c
  7576  0043C2  0239               	mulwf	(___flmul@b+1)^0,c
  7577  0043C4  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7578  0043CA  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7579  0043D0  504F               	movf	___flmul@temp^0,w,c
  7580  0043D2  2645               	addwf	___flmul@grs^0,f,c
  7581  0043D4  5050               	movf	(___flmul@temp+1)^0,w,c
  7582  0043D6  2246               	addwfc	(___flmul@grs+1)^0,f,c
  7583  0043D8  0E00               	movlw	0
  7584  0043DA  2247               	addwfc	(___flmul@grs+2)^0,f,c
  7585  0043DC  0E00               	movlw	0
  7586  0043DE  2248               	addwfc	(___flmul@grs+3)^0,f,c
  7587  0043E0  503D               	movf	(___flmul@a+1)^0,w,c
  7588  0043E2  0238               	mulwf	___flmul@b^0,c
  7589  0043E4  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7590  0043EA  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7591  0043F0  504F               	movf	___flmul@temp^0,w,c
  7592  0043F2  2645               	addwf	___flmul@grs^0,f,c
  7593  0043F4  5050               	movf	(___flmul@temp+1)^0,w,c
  7594  0043F6  2246               	addwfc	(___flmul@grs+1)^0,f,c
  7595  0043F8  0E00               	movlw	0
  7596  0043FA  2247               	addwfc	(___flmul@grs+2)^0,f,c
  7597  0043FC  0E00               	movlw	0
  7598  0043FE  2248               	addwfc	(___flmul@grs+3)^0,f,c
  7599  004400  0060  F11C  F048   	movff	___flmul@grs+2,___flmul@grs+3
  7600  004406  0060  F118  F047   	movff	___flmul@grs+1,___flmul@grs+2
  7601  00440C  0060  F114  F046   	movff	___flmul@grs,___flmul@grs+1
  7602  004412  6A45               	clrf	___flmul@grs^0,c
  7603  004414  503C               	movf	___flmul@a^0,w,c
  7604  004416  0238               	mulwf	___flmul@b^0,c
  7605  004418  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7606  00441E  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7607  004424  504F               	movf	___flmul@temp^0,w,c
  7608  004426  2645               	addwf	___flmul@grs^0,f,c
  7609  004428  5050               	movf	(___flmul@temp+1)^0,w,c
  7610  00442A  2246               	addwfc	(___flmul@grs+1)^0,f,c
  7611  00442C  0E00               	movlw	0
  7612  00442E  2247               	addwfc	(___flmul@grs+2)^0,f,c
  7613  004430  0E00               	movlw	0
  7614  004432  2248               	addwfc	(___flmul@grs+3)^0,f,c
  7615  004434  503E               	movf	(___flmul@a+2)^0,w,c
  7616  004436  0239               	mulwf	(___flmul@b+1)^0,c
  7617  004438  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7618  00443E  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7619  004444  504F               	movf	___flmul@temp^0,w,c
  7620  004446  264B               	addwf	___flmul@prod^0,f,c
  7621  004448  5050               	movf	(___flmul@temp+1)^0,w,c
  7622  00444A  224C               	addwfc	(___flmul@prod+1)^0,f,c
  7623  00444C  0E00               	movlw	0
  7624  00444E  224D               	addwfc	(___flmul@prod+2)^0,f,c
  7625  004450  0E00               	movlw	0
  7626  004452  224E               	addwfc	(___flmul@prod+3)^0,f,c
  7627  004454  503D               	movf	(___flmul@a+1)^0,w,c
  7628  004456  023A               	mulwf	(___flmul@b+2)^0,c
  7629  004458  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7630  00445E  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7631  004464  504F               	movf	___flmul@temp^0,w,c
  7632  004466  264B               	addwf	___flmul@prod^0,f,c
  7633  004468  5050               	movf	(___flmul@temp+1)^0,w,c
  7634  00446A  224C               	addwfc	(___flmul@prod+1)^0,f,c
  7635  00446C  0E00               	movlw	0
  7636  00446E  224D               	addwfc	(___flmul@prod+2)^0,f,c
  7637  004470  0E00               	movlw	0
  7638  004472  224E               	addwfc	(___flmul@prod+3)^0,f,c
  7639  004474  503E               	movf	(___flmul@a+2)^0,w,c
  7640  004476  023A               	mulwf	(___flmul@b+2)^0,c
  7641  004478  006F FFCC  F04F    	movff	prodl,___flmul@temp
  7642  00447E  006F FFD0  F050    	movff	prodh,___flmul@temp+1
  7643  004484  504F               	movf	___flmul@temp^0,w,c
  7644  004486  6E40               	movwf	??___flmul^0,c
  7645  004488  5050               	movf	(___flmul@temp+1)^0,w,c
  7646  00448A  6E41               	movwf	(??___flmul+1)^0,c
  7647  00448C  6A42               	clrf	(??___flmul+2)^0,c
  7648  00448E  6A43               	clrf	(??___flmul+3)^0,c
  7649  004490  0060  F108  F043   	movff	??___flmul+2,??___flmul+3
  7650  004496  0060  F104  F042   	movff	??___flmul+1,??___flmul+2
  7651  00449C  0060  F100  F041   	movff	??___flmul,??___flmul+1
  7652  0044A2  6A40               	clrf	??___flmul^0,c
  7653  0044A4  5040               	movf	??___flmul^0,w,c
  7654  0044A6  264B               	addwf	___flmul@prod^0,f,c
  7655  0044A8  5041               	movf	(??___flmul+1)^0,w,c
  7656  0044AA  224C               	addwfc	(___flmul@prod+1)^0,f,c
  7657  0044AC  5042               	movf	(??___flmul+2)^0,w,c
  7658  0044AE  224D               	addwfc	(___flmul@prod+2)^0,f,c
  7659  0044B0  5043               	movf	(??___flmul+3)^0,w,c
  7660  0044B2  224E               	addwfc	(___flmul@prod+3)^0,f,c
  7661  0044B4  0060  F114  F040   	movff	___flmul@grs,??___flmul
  7662  0044BA  0060  F118  F041   	movff	___flmul@grs+1,??___flmul+1
  7663  0044C0  0060  F11C  F042   	movff	___flmul@grs+2,??___flmul+2
  7664  0044C6  0060  F120  F043   	movff	___flmul@grs+3,??___flmul+3
  7665  0044CC  0E19               	movlw	25
  7666  0044CE  EF6E  F022         	goto	u3860
  7667  0044D2                     u3865:
  7668  0044D2  90D8               	bcf	status,0,c
  7669  0044D4  3243               	rrcf	(??___flmul+3)^0,f,c
  7670  0044D6  3242               	rrcf	(??___flmul+2)^0,f,c
  7671  0044D8  3241               	rrcf	(??___flmul+1)^0,f,c
  7672  0044DA  3240               	rrcf	??___flmul^0,f,c
  7673  0044DC                     u3860:
  7674  0044DC  2EE8               	decfsz	wreg,f,c
  7675  0044DE  EF69  F022         	goto	u3865
  7676  0044E2  5040               	movf	??___flmul^0,w,c
  7677  0044E4  264B               	addwf	___flmul@prod^0,f,c
  7678  0044E6  5041               	movf	(??___flmul+1)^0,w,c
  7679  0044E8  224C               	addwfc	(___flmul@prod+1)^0,f,c
  7680  0044EA  5042               	movf	(??___flmul+2)^0,w,c
  7681  0044EC  224D               	addwfc	(___flmul@prod+2)^0,f,c
  7682  0044EE  5043               	movf	(??___flmul+3)^0,w,c
  7683  0044F0  224E               	addwfc	(___flmul@prod+3)^0,f,c
  7684  0044F2  0060  F11C  F048   	movff	___flmul@grs+2,___flmul@grs+3
  7685  0044F8  0060  F118  F047   	movff	___flmul@grs+1,___flmul@grs+2
  7686  0044FE  0060  F114  F046   	movff	___flmul@grs,___flmul@grs+1
  7687  004504  6A45               	clrf	___flmul@grs^0,c
  7688  004506  5049               	movf	___flmul@aexp^0,w,c
  7689  004508  0060  F128  F040   	movff	___flmul@bexp,??___flmul
  7690  00450E  6A41               	clrf	(??___flmul+1)^0,c
  7691  004510  2640               	addwf	??___flmul^0,f,c
  7692  004512  0E00               	movlw	0
  7693  004514  2241               	addwfc	(??___flmul+1)^0,f,c
  7694  004516  0E82               	movlw	130
  7695  004518  2440               	addwf	??___flmul^0,w,c
  7696  00451A  6E4F               	movwf	___flmul@temp^0,c
  7697  00451C  0EFF               	movlw	255
  7698  00451E  2041               	addwfc	(??___flmul+1)^0,w,c
  7699  004520  6E50               	movwf	(___flmul@temp+1)^0,c
  7700  004522  EFA8  F022         	goto	l3477
  7701  004526                     l3471:
  7702  004526  90D8               	bcf	status,0,c
  7703  004528  364B               	rlcf	___flmul@prod^0,f,c
  7704  00452A  364C               	rlcf	(___flmul@prod+1)^0,f,c
  7705  00452C  364D               	rlcf	(___flmul@prod+2)^0,f,c
  7706  00452E  364E               	rlcf	(___flmul@prod+3)^0,f,c
  7707  004530  AE48               	btfss	(___flmul@grs+3)^0,7,c
  7708  004532  EF9D  F022         	goto	u3871
  7709  004536  EF9F  F022         	goto	u3870
  7710  00453A                     u3871:
  7711  00453A  EFA0  F022         	goto	l1104
  7712  00453E                     u3870:
  7713  00453E  804B               	bsf	___flmul@prod^0,0,c
  7714  004540                     l1104:
  7715  004540  90D8               	bcf	status,0,c
  7716  004542  3645               	rlcf	___flmul@grs^0,f,c
  7717  004544  3646               	rlcf	(___flmul@grs+1)^0,f,c
  7718  004546  3647               	rlcf	(___flmul@grs+2)^0,f,c
  7719  004548  3648               	rlcf	(___flmul@grs+3)^0,f,c
  7720  00454A  064F               	decf	___flmul@temp^0,f,c
  7721  00454C  A0D8               	btfss	status,0,c
  7722  00454E  0650               	decf	(___flmul@temp+1)^0,f,c
  7723  004550                     l3477:
  7724  004550  AE4D               	btfss	(___flmul@prod+2)^0,7,c
  7725  004552  EFAD  F022         	goto	u3881
  7726  004556  EFAF  F022         	goto	u3880
  7727  00455A                     u3881:
  7728  00455A  EF93  F022         	goto	l3471
  7729  00455E                     u3880:
  7730  00455E  0E00               	movlw	0
  7731  004560  6E49               	movwf	___flmul@aexp^0,c
  7732  004562  AE48               	btfss	(___flmul@grs+3)^0,7,c
  7733  004564  EFB6  F022         	goto	u3891
  7734  004568  EFB8  F022         	goto	u3890
  7735  00456C                     u3891:
  7736  00456C  EFDC  F022         	goto	l1106
  7737  004570                     u3890:
  7738  004570  0EFF               	movlw	255
  7739  004572  1445               	andwf	___flmul@grs^0,w,c
  7740  004574  6E40               	movwf	??___flmul^0,c
  7741  004576  0EFF               	movlw	255
  7742  004578  1446               	andwf	(___flmul@grs+1)^0,w,c
  7743  00457A  6E41               	movwf	(??___flmul+1)^0,c
  7744  00457C  0EFF               	movlw	255
  7745  00457E  1447               	andwf	(___flmul@grs+2)^0,w,c
  7746  004580  6E42               	movwf	(??___flmul+2)^0,c
  7747  004582  0E7F               	movlw	127
  7748  004584  1448               	andwf	(___flmul@grs+3)^0,w,c
  7749  004586  6E43               	movwf	(??___flmul+3)^0,c
  7750  004588  5040               	movf	??___flmul^0,w,c
  7751  00458A  1041               	iorwf	(??___flmul+1)^0,w,c
  7752  00458C  1042               	iorwf	(??___flmul+2)^0,w,c
  7753  00458E  1043               	iorwf	(??___flmul+3)^0,w,c
  7754  004590  B4D8               	btfsc	status,2,c
  7755  004592  EFCD  F022         	goto	u3901
  7756  004596  EFCF  F022         	goto	u3900
  7757  00459A                     u3901:
  7758  00459A  EFD3  F022         	goto	l1107
  7759  00459E                     u3900:
  7760  00459E                     l3485:
  7761  00459E  0E01               	movlw	1
  7762  0045A0  6E49               	movwf	___flmul@aexp^0,c
  7763  0045A2  EFDC  F022         	goto	l1106
  7764  0045A6                     l1107:
  7765  0045A6  A04B               	btfss	___flmul@prod^0,0,c
  7766  0045A8  EFD8  F022         	goto	u3911
  7767  0045AC  EFDA  F022         	goto	u3910
  7768  0045B0                     u3911:
  7769  0045B0  EFDC  F022         	goto	l1106
  7770  0045B4                     u3910:
  7771  0045B4  EFCF  F022         	goto	l3485
  7772  0045B8                     l1106:
  7773  0045B8  5049               	movf	___flmul@aexp^0,w,c
  7774  0045BA  B4D8               	btfsc	status,2,c
  7775  0045BC  EFE2  F022         	goto	u3921
  7776  0045C0  EFE4  F022         	goto	u3920
  7777  0045C4                     u3921:
  7778  0045C4  EF10  F023         	goto	l3497
  7779  0045C8                     u3920:
  7780  0045C8  0E01               	movlw	1
  7781  0045CA  264B               	addwf	___flmul@prod^0,f,c
  7782  0045CC  0E00               	movlw	0
  7783  0045CE  224C               	addwfc	(___flmul@prod+1)^0,f,c
  7784  0045D0  224D               	addwfc	(___flmul@prod+2)^0,f,c
  7785  0045D2  224E               	addwfc	(___flmul@prod+3)^0,f,c
  7786  0045D4  A04E               	btfss	(___flmul@prod+3)^0,0,c
  7787  0045D6  EFEF  F022         	goto	u3931
  7788  0045DA  EFF1  F022         	goto	u3930
  7789  0045DE                     u3931:
  7790  0045DE  EF10  F023         	goto	l3497
  7791  0045E2                     u3930:
  7792  0045E2  0060  F12C  F040   	movff	___flmul@prod,??___flmul
  7793  0045E8  0060  F130  F041   	movff	___flmul@prod+1,??___flmul+1
  7794  0045EE  0060  F134  F042   	movff	___flmul@prod+2,??___flmul+2
  7795  0045F4  0060  F138  F043   	movff	___flmul@prod+3,??___flmul+3
  7796  0045FA  3443               	rlcf	(??___flmul+3)^0,w,c
  7797  0045FC  3243               	rrcf	(??___flmul+3)^0,f,c
  7798  0045FE  3242               	rrcf	(??___flmul+2)^0,f,c
  7799  004600  3241               	rrcf	(??___flmul+1)^0,f,c
  7800  004602  3240               	rrcf	??___flmul^0,f,c
  7801  004604  0060  F100  F04B   	movff	??___flmul,___flmul@prod
  7802  00460A  0060  F104  F04C   	movff	??___flmul+1,___flmul@prod+1
  7803  004610  0060  F108  F04D   	movff	??___flmul+2,___flmul@prod+2
  7804  004616  0060  F10C  F04E   	movff	??___flmul+3,___flmul@prod+3
  7805  00461C  4A4F               	infsnz	___flmul@temp^0,f,c
  7806  00461E  2A50               	incf	(___flmul@temp+1)^0,f,c
  7807  004620                     l3497:
  7808  004620  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  7809  004622  EF1B  F023         	goto	u3941
  7810  004626  5050               	movf	(___flmul@temp+1)^0,w,c
  7811  004628  E108               	bnz	u3940
  7812  00462A  284F               	incf	___flmul@temp^0,w,c
  7813  00462C  A0D8               	btfss	status,0,c
  7814  00462E  EF1B  F023         	goto	u3941
  7815  004632  EF1D  F023         	goto	u3940
  7816  004636                     u3941:
  7817  004636  EF27  F023         	goto	l3501
  7818  00463A                     u3940:
  7819  00463A  0E00               	movlw	0
  7820  00463C  6E4B               	movwf	___flmul@prod^0,c
  7821  00463E  0E00               	movlw	0
  7822  004640  6E4C               	movwf	(___flmul@prod+1)^0,c
  7823  004642  0E80               	movlw	128
  7824  004644  6E4D               	movwf	(___flmul@prod+2)^0,c
  7825  004646  0E7F               	movlw	127
  7826  004648  6E4E               	movwf	(___flmul@prod+3)^0,c
  7827  00464A  EF56  F023         	goto	l3513
  7828  00464E                     l3501:
  7829  00464E  BE50               	btfsc	(___flmul@temp+1)^0,7,c
  7830  004650  EF34  F023         	goto	u3950
  7831  004654  5050               	movf	(___flmul@temp+1)^0,w,c
  7832  004656  E106               	bnz	u3951
  7833  004658  044F               	decf	___flmul@temp^0,w,c
  7834  00465A  B0D8               	btfsc	status,0,c
  7835  00465C  EF32  F023         	goto	u3951
  7836  004660  EF34  F023         	goto	u3950
  7837  004664                     u3951:
  7838  004664  EF40  F023         	goto	l1114
  7839  004668                     u3950:
  7840  004668  0E00               	movlw	0
  7841  00466A  6E4B               	movwf	___flmul@prod^0,c
  7842  00466C  0E00               	movlw	0
  7843  00466E  6E4C               	movwf	(___flmul@prod+1)^0,c
  7844  004670  0E00               	movlw	0
  7845  004672  6E4D               	movwf	(___flmul@prod+2)^0,c
  7846  004674  0E00               	movlw	0
  7847  004676  6E4E               	movwf	(___flmul@prod+3)^0,c
  7848  004678  0E00               	movlw	0
  7849  00467A  6E44               	movwf	___flmul@sign^0,c
  7850  00467C  EF56  F023         	goto	l3513
  7851  004680                     l1114:
  7852  004680  0060  F13C  F04A   	movff	___flmul@temp,___flmul@bexp
  7853  004686  0EFF               	movlw	255
  7854  004688  164B               	andwf	___flmul@prod^0,f,c
  7855  00468A  0EFF               	movlw	255
  7856  00468C  164C               	andwf	(___flmul@prod+1)^0,f,c
  7857  00468E  0E7F               	movlw	127
  7858  004690  164D               	andwf	(___flmul@prod+2)^0,f,c
  7859  004692  0E00               	movlw	0
  7860  004694  164E               	andwf	(___flmul@prod+3)^0,f,c
  7861  004696  A04A               	btfss	___flmul@bexp^0,0,c
  7862  004698  EF50  F023         	goto	u3961
  7863  00469C  EF52  F023         	goto	u3960
  7864  0046A0                     u3961:
  7865  0046A0  EF53  F023         	goto	l3511
  7866  0046A4                     u3960:
  7867  0046A4  8E4D               	bsf	(___flmul@prod+2)^0,7,c
  7868  0046A6                     l3511:
  7869  0046A6  90D8               	bcf	status,0,c
  7870  0046A8  304A               	rrcf	___flmul@bexp^0,w,c
  7871  0046AA  6E4E               	movwf	(___flmul@prod+3)^0,c
  7872  0046AC                     l3513:
  7873  0046AC  5044               	movf	___flmul@sign^0,w,c
  7874  0046AE  124E               	iorwf	(___flmul@prod+3)^0,f,c
  7875  0046B0  0060  F12C  F038   	movff	___flmul@prod,?___flmul
  7876  0046B6  0060  F130  F039   	movff	___flmul@prod+1,?___flmul+1
  7877  0046BC  0060  F134  F03A   	movff	___flmul@prod+2,?___flmul+2
  7878  0046C2  0060  F138  F03B   	movff	___flmul@prod+3,?___flmul+3
  7879  0046C8                     l1101:
  7880  0046C8  0012               	return		;funcret
  7881  0046CA                     __end_of___flmul:
  7882                           	opt callstack 0
  7883                           
  7884 ;; *************** function ___flge *****************
  7885 ;; Defined at:
  7886 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\flge.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;  ff1             4   80[COMRAM] unsigned char 
  7889 ;;  ff2             4   84[COMRAM] unsigned char 
  7890 ;; Auto vars:     Size  Location     Type
  7891 ;;		None
  7892 ;; Return value:  Size  Location     Type
  7893 ;;		None               void
  7894 ;; Registers used:
  7895 ;;		wreg, status,2, status,0
  7896 ;; Tracked objects:
  7897 ;;		On entry : 0/0
  7898 ;;		On exit  : 0/0
  7899 ;;		Unchanged: 0/0
  7900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7901 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7904 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7905 ;;Total ram usage:       12 bytes
  7906 ;; Hardware stack levels used:    1
  7907 ;; This function calls:
  7908 ;;		Nothing
  7909 ;; This function is called by:
  7910 ;;		_efgtoa
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text22
  7915  00572C                     __ptext22:
  7916                           	opt callstack 0
  7917  00572C                     ___flge:
  7918                           	opt callstack 25
  7919  00572C  0E00               	movlw	0
  7920  00572E  1451               	andwf	___flge@ff1^0,w,c
  7921  005730  6E59               	movwf	??___flge^0,c
  7922  005732  0E00               	movlw	0
  7923  005734  1452               	andwf	(___flge@ff1+1)^0,w,c
  7924  005736  6E5A               	movwf	(??___flge+1)^0,c
  7925  005738  0E80               	movlw	128
  7926  00573A  1453               	andwf	(___flge@ff1+2)^0,w,c
  7927  00573C  6E5B               	movwf	(??___flge+2)^0,c
  7928  00573E  0E7F               	movlw	127
  7929  005740  1454               	andwf	(___flge@ff1+3)^0,w,c
  7930  005742  6E5C               	movwf	(??___flge+3)^0,c
  7931  005744  5059               	movf	??___flge^0,w,c
  7932  005746  105A               	iorwf	(??___flge+1)^0,w,c
  7933  005748  105B               	iorwf	(??___flge+2)^0,w,c
  7934  00574A  105C               	iorwf	(??___flge+3)^0,w,c
  7935  00574C  A4D8               	btfss	status,2,c
  7936  00574E  EFAB  F02B         	goto	u4121
  7937  005752  EFAD  F02B         	goto	u4120
  7938  005756                     u4121:
  7939  005756  EFB5  F02B         	goto	l3625
  7940  00575A                     u4120:
  7941  00575A  0E00               	movlw	0
  7942  00575C  6E51               	movwf	___flge@ff1^0,c
  7943  00575E  0E00               	movlw	0
  7944  005760  6E52               	movwf	(___flge@ff1+1)^0,c
  7945  005762  0E00               	movlw	0
  7946  005764  6E53               	movwf	(___flge@ff1+2)^0,c
  7947  005766  0E00               	movlw	0
  7948  005768  6E54               	movwf	(___flge@ff1+3)^0,c
  7949  00576A                     l3625:
  7950  00576A  0E00               	movlw	0
  7951  00576C  1455               	andwf	___flge@ff2^0,w,c
  7952  00576E  6E59               	movwf	??___flge^0,c
  7953  005770  0E00               	movlw	0
  7954  005772  1456               	andwf	(___flge@ff2+1)^0,w,c
  7955  005774  6E5A               	movwf	(??___flge+1)^0,c
  7956  005776  0E80               	movlw	128
  7957  005778  1457               	andwf	(___flge@ff2+2)^0,w,c
  7958  00577A  6E5B               	movwf	(??___flge+2)^0,c
  7959  00577C  0E7F               	movlw	127
  7960  00577E  1458               	andwf	(___flge@ff2+3)^0,w,c
  7961  005780  6E5C               	movwf	(??___flge+3)^0,c
  7962  005782  5059               	movf	??___flge^0,w,c
  7963  005784  105A               	iorwf	(??___flge+1)^0,w,c
  7964  005786  105B               	iorwf	(??___flge+2)^0,w,c
  7965  005788  105C               	iorwf	(??___flge+3)^0,w,c
  7966  00578A  A4D8               	btfss	status,2,c
  7967  00578C  EFCA  F02B         	goto	u4131
  7968  005790  EFCC  F02B         	goto	u4130
  7969  005794                     u4131:
  7970  005794  EFD4  F02B         	goto	l3629
  7971  005798                     u4130:
  7972  005798  0E00               	movlw	0
  7973  00579A  6E55               	movwf	___flge@ff2^0,c
  7974  00579C  0E00               	movlw	0
  7975  00579E  6E56               	movwf	(___flge@ff2+1)^0,c
  7976  0057A0  0E00               	movlw	0
  7977  0057A2  6E57               	movwf	(___flge@ff2+2)^0,c
  7978  0057A4  0E00               	movlw	0
  7979  0057A6  6E58               	movwf	(___flge@ff2+3)^0,c
  7980  0057A8                     l3629:
  7981  0057A8  AE54               	btfss	(___flge@ff1+3)^0,7,c
  7982  0057AA  EFD9  F02B         	goto	u4141
  7983  0057AE  EFDB  F02B         	goto	u4140
  7984  0057B2                     u4141:
  7985  0057B2  EFE4  F02B         	goto	l3633
  7986  0057B6                     u4140:
  7987  0057B6  6C51               	negf	___flge@ff1^0,c
  7988  0057B8  1E52               	comf	(___flge@ff1+1)^0,f,c
  7989  0057BA  B0D8               	btfsc	status,0,c
  7990  0057BC  2A52               	incf	(___flge@ff1+1)^0,f,c
  7991  0057BE  1E53               	comf	(___flge@ff1+2)^0,f,c
  7992  0057C0  B0D8               	btfsc	status,0,c
  7993  0057C2  2A53               	incf	(___flge@ff1+2)^0,f,c
  7994  0057C4  0E80               	movlw	128
  7995  0057C6  5654               	subfwb	(___flge@ff1+3)^0,f,c
  7996  0057C8                     l3633:
  7997  0057C8  AE58               	btfss	(___flge@ff2+3)^0,7,c
  7998  0057CA  EFE9  F02B         	goto	u4151
  7999  0057CE  EFEB  F02B         	goto	u4150
  8000  0057D2                     u4151:
  8001  0057D2  EFF4  F02B         	goto	l748
  8002  0057D6                     u4150:
  8003  0057D6  6C55               	negf	___flge@ff2^0,c
  8004  0057D8  1E56               	comf	(___flge@ff2+1)^0,f,c
  8005  0057DA  B0D8               	btfsc	status,0,c
  8006  0057DC  2A56               	incf	(___flge@ff2+1)^0,f,c
  8007  0057DE  1E57               	comf	(___flge@ff2+2)^0,f,c
  8008  0057E0  B0D8               	btfsc	status,0,c
  8009  0057E2  2A57               	incf	(___flge@ff2+2)^0,f,c
  8010  0057E4  0E80               	movlw	128
  8011  0057E6  5658               	subfwb	(___flge@ff2+3)^0,f,c
  8012  0057E8                     l748:
  8013  0057E8  0E00               	movlw	0
  8014  0057EA  1A51               	xorwf	___flge@ff1^0,f,c
  8015  0057EC  0E00               	movlw	0
  8016  0057EE  1A52               	xorwf	(___flge@ff1+1)^0,f,c
  8017  0057F0  0E00               	movlw	0
  8018  0057F2  1A53               	xorwf	(___flge@ff1+2)^0,f,c
  8019  0057F4  0E80               	movlw	128
  8020  0057F6  1A54               	xorwf	(___flge@ff1+3)^0,f,c
  8021  0057F8  0E00               	movlw	0
  8022  0057FA  1A55               	xorwf	___flge@ff2^0,f,c
  8023  0057FC  0E00               	movlw	0
  8024  0057FE  1A56               	xorwf	(___flge@ff2+1)^0,f,c
  8025  005800  0E00               	movlw	0
  8026  005802  1A57               	xorwf	(___flge@ff2+2)^0,f,c
  8027  005804  0E80               	movlw	128
  8028  005806  1A58               	xorwf	(___flge@ff2+3)^0,f,c
  8029  005808  5055               	movf	___flge@ff2^0,w,c
  8030  00580A  5C51               	subwf	___flge@ff1^0,w,c
  8031  00580C  5056               	movf	(___flge@ff2+1)^0,w,c
  8032  00580E  5852               	subwfb	(___flge@ff1+1)^0,w,c
  8033  005810  5057               	movf	(___flge@ff2+2)^0,w,c
  8034  005812  5853               	subwfb	(___flge@ff1+2)^0,w,c
  8035  005814  5058               	movf	(___flge@ff2+3)^0,w,c
  8036  005816  5854               	subwfb	(___flge@ff1+3)^0,w,c
  8037  005818  B0D8               	btfsc	status,0,c
  8038  00581A  EF11  F02C         	goto	u4161
  8039  00581E  EF13  F02C         	goto	u4160
  8040  005822                     u4161:
  8041  005822  EF16  F02C         	goto	l3639
  8042  005826                     u4160:
  8043  005826  90D8               	bcf	status,0,c
  8044  005828  EF17  F02C         	goto	l753
  8045  00582C                     l3639:
  8046  00582C  80D8               	bsf	status,0,c
  8047  00582E                     l753:
  8048  00582E  0012               	return		;funcret
  8049  005830                     __end_of___flge:
  8050                           	opt callstack 0
  8051                           
  8052 ;; *************** function ___fleq *****************
  8053 ;; Defined at:
  8054 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\fleq.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  ff1             4    0[COMRAM] unsigned char 
  8057 ;;  ff2             4    4[COMRAM] unsigned char 
  8058 ;; Auto vars:     Size  Location     Type
  8059 ;;		None
  8060 ;; Return value:  Size  Location     Type
  8061 ;;		None               void
  8062 ;; Registers used:
  8063 ;;		wreg, status,2, status,0
  8064 ;; Tracked objects:
  8065 ;;		On entry : 0/0
  8066 ;;		On exit  : 0/0
  8067 ;;		Unchanged: 0/0
  8068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8069 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8073 ;;Total ram usage:       12 bytes
  8074 ;; Hardware stack levels used:    1
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_efgtoa
  8079 ;; This function uses a non-reentrant model
  8080 ;;
  8081                           
  8082                           	psect	text23
  8083  005D14                     __ptext23:
  8084                           	opt callstack 0
  8085  005D14                     ___fleq:
  8086                           	opt callstack 25
  8087  005D14  0E00               	movlw	0
  8088  005D16  1401               	andwf	___fleq@ff1^0,w,c
  8089  005D18  6E09               	movwf	??___fleq^0,c
  8090  005D1A  0E00               	movlw	0
  8091  005D1C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8092  005D1E  6E0A               	movwf	(??___fleq+1)^0,c
  8093  005D20  0E80               	movlw	128
  8094  005D22  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8095  005D24  6E0B               	movwf	(??___fleq+2)^0,c
  8096  005D26  0E7F               	movlw	127
  8097  005D28  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8098  005D2A  6E0C               	movwf	(??___fleq+3)^0,c
  8099  005D2C  5009               	movf	??___fleq^0,w,c
  8100  005D2E  100A               	iorwf	(??___fleq+1)^0,w,c
  8101  005D30  100B               	iorwf	(??___fleq+2)^0,w,c
  8102  005D32  100C               	iorwf	(??___fleq+3)^0,w,c
  8103  005D34  A4D8               	btfss	status,2,c
  8104  005D36  EF9F  F02E         	goto	u4091
  8105  005D3A  EFA1  F02E         	goto	u4090
  8106  005D3E                     u4091:
  8107  005D3E  EFA9  F02E         	goto	l3609
  8108  005D42                     u4090:
  8109  005D42  0E00               	movlw	0
  8110  005D44  6E01               	movwf	___fleq@ff1^0,c
  8111  005D46  0E00               	movlw	0
  8112  005D48  6E02               	movwf	(___fleq@ff1+1)^0,c
  8113  005D4A  0E00               	movlw	0
  8114  005D4C  6E03               	movwf	(___fleq@ff1+2)^0,c
  8115  005D4E  0E00               	movlw	0
  8116  005D50  6E04               	movwf	(___fleq@ff1+3)^0,c
  8117  005D52                     l3609:
  8118  005D52  0E00               	movlw	0
  8119  005D54  1405               	andwf	___fleq@ff2^0,w,c
  8120  005D56  6E09               	movwf	??___fleq^0,c
  8121  005D58  0E00               	movlw	0
  8122  005D5A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8123  005D5C  6E0A               	movwf	(??___fleq+1)^0,c
  8124  005D5E  0E80               	movlw	128
  8125  005D60  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8126  005D62  6E0B               	movwf	(??___fleq+2)^0,c
  8127  005D64  0E7F               	movlw	127
  8128  005D66  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8129  005D68  6E0C               	movwf	(??___fleq+3)^0,c
  8130  005D6A  5009               	movf	??___fleq^0,w,c
  8131  005D6C  100A               	iorwf	(??___fleq+1)^0,w,c
  8132  005D6E  100B               	iorwf	(??___fleq+2)^0,w,c
  8133  005D70  100C               	iorwf	(??___fleq+3)^0,w,c
  8134  005D72  A4D8               	btfss	status,2,c
  8135  005D74  EFBE  F02E         	goto	u4101
  8136  005D78  EFC0  F02E         	goto	u4100
  8137  005D7C                     u4101:
  8138  005D7C  EFC8  F02E         	goto	l3613
  8139  005D80                     u4100:
  8140  005D80  0E00               	movlw	0
  8141  005D82  6E05               	movwf	___fleq@ff2^0,c
  8142  005D84  0E00               	movlw	0
  8143  005D86  6E06               	movwf	(___fleq@ff2+1)^0,c
  8144  005D88  0E00               	movlw	0
  8145  005D8A  6E07               	movwf	(___fleq@ff2+2)^0,c
  8146  005D8C  0E00               	movlw	0
  8147  005D8E  6E08               	movwf	(___fleq@ff2+3)^0,c
  8148  005D90                     l3613:
  8149  005D90  5005               	movf	___fleq@ff2^0,w,c
  8150  005D92  1801               	xorwf	___fleq@ff1^0,w,c
  8151  005D94  E10F               	bnz	u4110
  8152  005D96  5006               	movf	(___fleq@ff2+1)^0,w,c
  8153  005D98  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8154  005D9A  E10C               	bnz	u4110
  8155  005D9C  5007               	movf	(___fleq@ff2+2)^0,w,c
  8156  005D9E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8157  005DA0  E109               	bnz	u4110
  8158  005DA2  5008               	movf	(___fleq@ff2+3)^0,w,c
  8159  005DA4  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8160  005DA6  B4D8               	btfsc	status,2,c
  8161  005DA8  EFD8  F02E         	goto	u4111
  8162  005DAC  EFDA  F02E         	goto	u4110
  8163  005DB0                     u4111:
  8164  005DB0  EFDD  F02E         	goto	l3617
  8165  005DB4                     u4110:
  8166  005DB4  90D8               	bcf	status,0,c
  8167  005DB6  EFDE  F02E         	goto	l742
  8168  005DBA                     l3617:
  8169  005DBA  80D8               	bsf	status,0,c
  8170  005DBC                     l742:
  8171  005DBC  0012               	return		;funcret
  8172  005DBE                     __end_of___fleq:
  8173                           	opt callstack 0
  8174                           
  8175 ;; *************** function ___fldiv *****************
  8176 ;; Defined at:
  8177 ;;		line 11 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\sprcdiv.c"
  8178 ;; Parameters:    Size  Location     Type
  8179 ;;  b               4   30[COMRAM] unsigned char 
  8180 ;;  a               4   34[COMRAM] unsigned char 
  8181 ;; Auto vars:     Size  Location     Type
  8182 ;;  grs             4   49[COMRAM] unsigned long 
  8183 ;;  rem             4   42[COMRAM] unsigned long 
  8184 ;;  new_exp         2   47[COMRAM] short 
  8185 ;;  aexp            1   54[COMRAM] unsigned char 
  8186 ;;  bexp            1   53[COMRAM] unsigned char 
  8187 ;;  sign            1   46[COMRAM] unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  4   30[COMRAM] unsigned char 
  8190 ;; Registers used:
  8191 ;;		wreg, status,2, status,0
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8197 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8198 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8200 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8201 ;;Total ram usage:       25 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; This function calls:
  8204 ;;		Nothing
  8205 ;; This function is called by:
  8206 ;;		_main_loop
  8207 ;;		_efgtoa
  8208 ;; This function uses a non-reentrant model
  8209 ;;
  8210                           
  8211                           	psect	text24
  8212  0046CA                     __ptext24:
  8213                           	opt callstack 0
  8214  0046CA                     ___fldiv:
  8215                           	opt callstack 25
  8216  0046CA  5022               	movf	(___fldiv@b+3)^0,w,c
  8217  0046CC  0B80               	andlw	128
  8218  0046CE  6E2F               	movwf	___fldiv@sign^0,c
  8219  0046D0  5022               	movf	(___fldiv@b+3)^0,w,c
  8220  0046D2  2422               	addwf	(___fldiv@b+3)^0,w,c
  8221  0046D4  6E36               	movwf	___fldiv@bexp^0,c
  8222  0046D6  AE21               	btfss	(___fldiv@b+2)^0,7,c
  8223  0046D8  EF70  F023         	goto	u3551
  8224  0046DC  EF72  F023         	goto	u3550
  8225  0046E0                     u3551:
  8226  0046E0  EF73  F023         	goto	l3257
  8227  0046E4                     u3550:
  8228  0046E4  8036               	bsf	___fldiv@bexp^0,0,c
  8229  0046E6                     l3257:
  8230  0046E6  5036               	movf	___fldiv@bexp^0,w,c
  8231  0046E8  B4D8               	btfsc	status,2,c
  8232  0046EA  EF79  F023         	goto	u3561
  8233  0046EE  EF7B  F023         	goto	u3560
  8234  0046F2                     u3561:
  8235  0046F2  EF90  F023         	goto	l3267
  8236  0046F6                     u3560:
  8237  0046F6  2836               	incf	___fldiv@bexp^0,w,c
  8238  0046F8  A4D8               	btfss	status,2,c
  8239  0046FA  EF81  F023         	goto	u3571
  8240  0046FE  EF83  F023         	goto	u3570
  8241  004702                     u3571:
  8242  004702  EF8B  F023         	goto	l3263
  8243  004706                     u3570:
  8244  004706  0E00               	movlw	0
  8245  004708  6E1F               	movwf	___fldiv@b^0,c
  8246  00470A  0E00               	movlw	0
  8247  00470C  6E20               	movwf	(___fldiv@b+1)^0,c
  8248  00470E  0E00               	movlw	0
  8249  004710  6E21               	movwf	(___fldiv@b+2)^0,c
  8250  004712  0E00               	movlw	0
  8251  004714  6E22               	movwf	(___fldiv@b+3)^0,c
  8252  004716                     l3263:
  8253  004716  8E21               	bsf	(___fldiv@b+2)^0,7,c
  8254  004718  0E00               	movlw	0
  8255  00471A  6E22               	movwf	(___fldiv@b+3)^0,c
  8256  00471C  EF98  F023         	goto	l3269
  8257  004720                     l3267:
  8258  004720  0E00               	movlw	0
  8259  004722  6E1F               	movwf	___fldiv@b^0,c
  8260  004724  0E00               	movlw	0
  8261  004726  6E20               	movwf	(___fldiv@b+1)^0,c
  8262  004728  0E00               	movlw	0
  8263  00472A  6E21               	movwf	(___fldiv@b+2)^0,c
  8264  00472C  0E00               	movlw	0
  8265  00472E  6E22               	movwf	(___fldiv@b+3)^0,c
  8266  004730                     l3269:
  8267  004730  5026               	movf	(___fldiv@a+3)^0,w,c
  8268  004732  0B80               	andlw	128
  8269  004734  1A2F               	xorwf	___fldiv@sign^0,f,c
  8270  004736  5026               	movf	(___fldiv@a+3)^0,w,c
  8271  004738  2426               	addwf	(___fldiv@a+3)^0,w,c
  8272  00473A  6E37               	movwf	___fldiv@aexp^0,c
  8273  00473C  AE25               	btfss	(___fldiv@a+2)^0,7,c
  8274  00473E  EFA3  F023         	goto	u3581
  8275  004742  EFA5  F023         	goto	u3580
  8276  004746                     u3581:
  8277  004746  EFA6  F023         	goto	l3277
  8278  00474A                     u3580:
  8279  00474A  8037               	bsf	___fldiv@aexp^0,0,c
  8280  00474C                     l3277:
  8281  00474C  5037               	movf	___fldiv@aexp^0,w,c
  8282  00474E  B4D8               	btfsc	status,2,c
  8283  004750  EFAC  F023         	goto	u3591
  8284  004754  EFAE  F023         	goto	u3590
  8285  004758                     u3591:
  8286  004758  EFC3  F023         	goto	l3287
  8287  00475C                     u3590:
  8288  00475C  2837               	incf	___fldiv@aexp^0,w,c
  8289  00475E  A4D8               	btfss	status,2,c
  8290  004760  EFB4  F023         	goto	u3601
  8291  004764  EFB6  F023         	goto	u3600
  8292  004768                     u3601:
  8293  004768  EFBE  F023         	goto	l3283
  8294  00476C                     u3600:
  8295  00476C  0E00               	movlw	0
  8296  00476E  6E23               	movwf	___fldiv@a^0,c
  8297  004770  0E00               	movlw	0
  8298  004772  6E24               	movwf	(___fldiv@a+1)^0,c
  8299  004774  0E00               	movlw	0
  8300  004776  6E25               	movwf	(___fldiv@a+2)^0,c
  8301  004778  0E00               	movlw	0
  8302  00477A  6E26               	movwf	(___fldiv@a+3)^0,c
  8303  00477C                     l3283:
  8304  00477C  8E25               	bsf	(___fldiv@a+2)^0,7,c
  8305  00477E  0E00               	movlw	0
  8306  004780  6E26               	movwf	(___fldiv@a+3)^0,c
  8307  004782  EFCB  F023         	goto	l3289
  8308  004786                     l3287:
  8309  004786  0E00               	movlw	0
  8310  004788  6E23               	movwf	___fldiv@a^0,c
  8311  00478A  0E00               	movlw	0
  8312  00478C  6E24               	movwf	(___fldiv@a+1)^0,c
  8313  00478E  0E00               	movlw	0
  8314  004790  6E25               	movwf	(___fldiv@a+2)^0,c
  8315  004792  0E00               	movlw	0
  8316  004794  6E26               	movwf	(___fldiv@a+3)^0,c
  8317  004796                     l3289:
  8318  004796  5023               	movf	___fldiv@a^0,w,c
  8319  004798  1024               	iorwf	(___fldiv@a+1)^0,w,c
  8320  00479A  1025               	iorwf	(___fldiv@a+2)^0,w,c
  8321  00479C  1026               	iorwf	(___fldiv@a+3)^0,w,c
  8322  00479E  A4D8               	btfss	status,2,c
  8323  0047A0  EFD4  F023         	goto	u3611
  8324  0047A4  EFD6  F023         	goto	u3610
  8325  0047A8                     u3611:
  8326  0047A8  EFF2  F023         	goto	l3301
  8327  0047AC                     u3610:
  8328  0047AC  0E00               	movlw	0
  8329  0047AE  6E1F               	movwf	___fldiv@b^0,c
  8330  0047B0  0E00               	movlw	0
  8331  0047B2  6E20               	movwf	(___fldiv@b+1)^0,c
  8332  0047B4  0E00               	movlw	0
  8333  0047B6  6E21               	movwf	(___fldiv@b+2)^0,c
  8334  0047B8  0E00               	movlw	0
  8335  0047BA  6E22               	movwf	(___fldiv@b+3)^0,c
  8336  0047BC  0E80               	movlw	128
  8337  0047BE  1221               	iorwf	(___fldiv@b+2)^0,f,c
  8338  0047C0  0E7F               	movlw	127
  8339  0047C2  1222               	iorwf	(___fldiv@b+3)^0,f,c
  8340  0047C4                     l3295:
  8341  0047C4  502F               	movf	___fldiv@sign^0,w,c
  8342  0047C6  1222               	iorwf	(___fldiv@b+3)^0,f,c
  8343  0047C8  0060  F07C  F01F   	movff	___fldiv@b,?___fldiv
  8344  0047CE  0060  F080  F020   	movff	___fldiv@b+1,?___fldiv+1
  8345  0047D4  0060  F084  F021   	movff	___fldiv@b+2,?___fldiv+2
  8346  0047DA  0060  F088  F022   	movff	___fldiv@b+3,?___fldiv+3
  8347  0047E0  EF43  F025         	goto	l1065
  8348  0047E4                     l3301:
  8349  0047E4  5036               	movf	___fldiv@bexp^0,w,c
  8350  0047E6  A4D8               	btfss	status,2,c
  8351  0047E8  EFF8  F023         	goto	u3621
  8352  0047EC  EFFA  F023         	goto	u3620
  8353  0047F0                     u3621:
  8354  0047F0  EF04  F024         	goto	l3309
  8355  0047F4                     u3620:
  8356  0047F4  0E00               	movlw	0
  8357  0047F6  6E1F               	movwf	?___fldiv^0,c
  8358  0047F8  0E00               	movlw	0
  8359  0047FA  6E20               	movwf	(?___fldiv+1)^0,c
  8360  0047FC  0E00               	movlw	0
  8361  0047FE  6E21               	movwf	(?___fldiv+2)^0,c
  8362  004800  0E00               	movlw	0
  8363  004802  6E22               	movwf	(?___fldiv+3)^0,c
  8364  004804  EF43  F025         	goto	l1065
  8365  004808                     l3309:
  8366  004808  5037               	movf	___fldiv@aexp^0,w,c
  8367  00480A  0060  F0D8  F027   	movff	___fldiv@bexp,??___fldiv
  8368  004810  6A28               	clrf	(??___fldiv+1)^0,c
  8369  004812  5E27               	subwf	??___fldiv^0,f,c
  8370  004814  0E00               	movlw	0
  8371  004816  5A28               	subwfb	(??___fldiv+1)^0,f,c
  8372  004818  0E7F               	movlw	127
  8373  00481A  2427               	addwf	??___fldiv^0,w,c
  8374  00481C  6E30               	movwf	___fldiv@new_exp^0,c
  8375  00481E  0E00               	movlw	0
  8376  004820  2028               	addwfc	(??___fldiv+1)^0,w,c
  8377  004822  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  8378  004824  0060  F07C  F02B   	movff	___fldiv@b,___fldiv@rem
  8379  00482A  0060  F080  F02C   	movff	___fldiv@b+1,___fldiv@rem+1
  8380  004830  0060  F084  F02D   	movff	___fldiv@b+2,___fldiv@rem+2
  8381  004836  0060  F088  F02E   	movff	___fldiv@b+3,___fldiv@rem+3
  8382  00483C  0E00               	movlw	0
  8383  00483E  6E1F               	movwf	___fldiv@b^0,c
  8384  004840  0E00               	movlw	0
  8385  004842  6E20               	movwf	(___fldiv@b+1)^0,c
  8386  004844  0E00               	movlw	0
  8387  004846  6E21               	movwf	(___fldiv@b+2)^0,c
  8388  004848  0E00               	movlw	0
  8389  00484A  6E22               	movwf	(___fldiv@b+3)^0,c
  8390  00484C  0E00               	movlw	0
  8391  00484E  6E32               	movwf	___fldiv@grs^0,c
  8392  004850  0E00               	movlw	0
  8393  004852  6E33               	movwf	(___fldiv@grs+1)^0,c
  8394  004854  0E00               	movlw	0
  8395  004856  6E34               	movwf	(___fldiv@grs+2)^0,c
  8396  004858  0E00               	movlw	0
  8397  00485A  6E35               	movwf	(___fldiv@grs+3)^0,c
  8398  00485C  0E00               	movlw	0
  8399  00485E  6E37               	movwf	___fldiv@aexp^0,c
  8400  004860  EF6A  F024         	goto	l1067
  8401  004864                     l3319:
  8402  004864  5037               	movf	___fldiv@aexp^0,w,c
  8403  004866  B4D8               	btfsc	status,2,c
  8404  004868  EF38  F024         	goto	u3631
  8405  00486C  EF3A  F024         	goto	u3630
  8406  004870                     u3631:
  8407  004870  EF51  F024         	goto	l3327
  8408  004874                     u3630:
  8409  004874  90D8               	bcf	status,0,c
  8410  004876  362B               	rlcf	___fldiv@rem^0,f,c
  8411  004878  362C               	rlcf	(___fldiv@rem+1)^0,f,c
  8412  00487A  362D               	rlcf	(___fldiv@rem+2)^0,f,c
  8413  00487C  362E               	rlcf	(___fldiv@rem+3)^0,f,c
  8414  00487E  90D8               	bcf	status,0,c
  8415  004880  361F               	rlcf	___fldiv@b^0,f,c
  8416  004882  3620               	rlcf	(___fldiv@b+1)^0,f,c
  8417  004884  3621               	rlcf	(___fldiv@b+2)^0,f,c
  8418  004886  3622               	rlcf	(___fldiv@b+3)^0,f,c
  8419  004888  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  8420  00488A  EF49  F024         	goto	u3641
  8421  00488E  EF4B  F024         	goto	u3640
  8422  004892                     u3641:
  8423  004892  EF4C  F024         	goto	l1070
  8424  004896                     u3640:
  8425  004896  801F               	bsf	___fldiv@b^0,0,c
  8426  004898                     l1070:
  8427  004898  90D8               	bcf	status,0,c
  8428  00489A  3632               	rlcf	___fldiv@grs^0,f,c
  8429  00489C  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  8430  00489E  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  8431  0048A0  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  8432  0048A2                     l3327:
  8433  0048A2  5023               	movf	___fldiv@a^0,w,c
  8434  0048A4  5C2B               	subwf	___fldiv@rem^0,w,c
  8435  0048A6  5024               	movf	(___fldiv@a+1)^0,w,c
  8436  0048A8  582C               	subwfb	(___fldiv@rem+1)^0,w,c
  8437  0048AA  5025               	movf	(___fldiv@a+2)^0,w,c
  8438  0048AC  582D               	subwfb	(___fldiv@rem+2)^0,w,c
  8439  0048AE  5026               	movf	(___fldiv@a+3)^0,w,c
  8440  0048B0  582E               	subwfb	(___fldiv@rem+3)^0,w,c
  8441  0048B2  A0D8               	btfss	status,0,c
  8442  0048B4  EF5E  F024         	goto	u3651
  8443  0048B8  EF60  F024         	goto	u3650
  8444  0048BC                     u3651:
  8445  0048BC  EF69  F024         	goto	l3333
  8446  0048C0                     u3650:
  8447  0048C0  8C35               	bsf	(___fldiv@grs+3)^0,6,c
  8448  0048C2  5023               	movf	___fldiv@a^0,w,c
  8449  0048C4  5E2B               	subwf	___fldiv@rem^0,f,c
  8450  0048C6  5024               	movf	(___fldiv@a+1)^0,w,c
  8451  0048C8  5A2C               	subwfb	(___fldiv@rem+1)^0,f,c
  8452  0048CA  5025               	movf	(___fldiv@a+2)^0,w,c
  8453  0048CC  5A2D               	subwfb	(___fldiv@rem+2)^0,f,c
  8454  0048CE  5026               	movf	(___fldiv@a+3)^0,w,c
  8455  0048D0  5A2E               	subwfb	(___fldiv@rem+3)^0,f,c
  8456  0048D2                     l3333:
  8457  0048D2  2A37               	incf	___fldiv@aexp^0,f,c
  8458  0048D4                     l1067:
  8459  0048D4  0E19               	movlw	25
  8460  0048D6  6437               	cpfsgt	___fldiv@aexp^0,c
  8461  0048D8  EF70  F024         	goto	u3661
  8462  0048DC  EF72  F024         	goto	u3660
  8463  0048E0                     u3661:
  8464  0048E0  EF32  F024         	goto	l3319
  8465  0048E4                     u3660:
  8466  0048E4  502B               	movf	___fldiv@rem^0,w,c
  8467  0048E6  102C               	iorwf	(___fldiv@rem+1)^0,w,c
  8468  0048E8  102D               	iorwf	(___fldiv@rem+2)^0,w,c
  8469  0048EA  102E               	iorwf	(___fldiv@rem+3)^0,w,c
  8470  0048EC  B4D8               	btfsc	status,2,c
  8471  0048EE  EF7B  F024         	goto	u3671
  8472  0048F2  EF7D  F024         	goto	u3670
  8473  0048F6                     u3671:
  8474  0048F6  EF95  F024         	goto	l3345
  8475  0048FA                     u3670:
  8476  0048FA  8032               	bsf	___fldiv@grs^0,0,c
  8477  0048FC  EF95  F024         	goto	l3345
  8478  004900                     l3339:
  8479  004900  90D8               	bcf	status,0,c
  8480  004902  361F               	rlcf	___fldiv@b^0,f,c
  8481  004904  3620               	rlcf	(___fldiv@b+1)^0,f,c
  8482  004906  3621               	rlcf	(___fldiv@b+2)^0,f,c
  8483  004908  3622               	rlcf	(___fldiv@b+3)^0,f,c
  8484  00490A  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  8485  00490C  EF8A  F024         	goto	u3681
  8486  004910  EF8C  F024         	goto	u3680
  8487  004914                     u3681:
  8488  004914  EF8D  F024         	goto	l1076
  8489  004918                     u3680:
  8490  004918  801F               	bsf	___fldiv@b^0,0,c
  8491  00491A                     l1076:
  8492  00491A  90D8               	bcf	status,0,c
  8493  00491C  3632               	rlcf	___fldiv@grs^0,f,c
  8494  00491E  3633               	rlcf	(___fldiv@grs+1)^0,f,c
  8495  004920  3634               	rlcf	(___fldiv@grs+2)^0,f,c
  8496  004922  3635               	rlcf	(___fldiv@grs+3)^0,f,c
  8497  004924  0630               	decf	___fldiv@new_exp^0,f,c
  8498  004926  A0D8               	btfss	status,0,c
  8499  004928  0631               	decf	(___fldiv@new_exp+1)^0,f,c
  8500  00492A                     l3345:
  8501  00492A  AE21               	btfss	(___fldiv@b+2)^0,7,c
  8502  00492C  EF9A  F024         	goto	u3691
  8503  004930  EF9C  F024         	goto	u3690
  8504  004934                     u3691:
  8505  004934  EF80  F024         	goto	l3339
  8506  004938                     u3690:
  8507  004938  0E00               	movlw	0
  8508  00493A  6E37               	movwf	___fldiv@aexp^0,c
  8509  00493C  AE35               	btfss	(___fldiv@grs+3)^0,7,c
  8510  00493E  EFA3  F024         	goto	u3701
  8511  004942  EFA5  F024         	goto	u3700
  8512  004946                     u3701:
  8513  004946  EFC9  F024         	goto	l1078
  8514  00494A                     u3700:
  8515  00494A  0EFF               	movlw	255
  8516  00494C  1432               	andwf	___fldiv@grs^0,w,c
  8517  00494E  6E27               	movwf	??___fldiv^0,c
  8518  004950  0EFF               	movlw	255
  8519  004952  1433               	andwf	(___fldiv@grs+1)^0,w,c
  8520  004954  6E28               	movwf	(??___fldiv+1)^0,c
  8521  004956  0EFF               	movlw	255
  8522  004958  1434               	andwf	(___fldiv@grs+2)^0,w,c
  8523  00495A  6E29               	movwf	(??___fldiv+2)^0,c
  8524  00495C  0E7F               	movlw	127
  8525  00495E  1435               	andwf	(___fldiv@grs+3)^0,w,c
  8526  004960  6E2A               	movwf	(??___fldiv+3)^0,c
  8527  004962  5027               	movf	??___fldiv^0,w,c
  8528  004964  1028               	iorwf	(??___fldiv+1)^0,w,c
  8529  004966  1029               	iorwf	(??___fldiv+2)^0,w,c
  8530  004968  102A               	iorwf	(??___fldiv+3)^0,w,c
  8531  00496A  B4D8               	btfsc	status,2,c
  8532  00496C  EFBA  F024         	goto	u3711
  8533  004970  EFBC  F024         	goto	u3710
  8534  004974                     u3711:
  8535  004974  EFC0  F024         	goto	l1079
  8536  004978                     u3710:
  8537  004978                     l3353:
  8538  004978  0E01               	movlw	1
  8539  00497A  6E37               	movwf	___fldiv@aexp^0,c
  8540  00497C  EFC9  F024         	goto	l1078
  8541  004980                     l1079:
  8542  004980  A01F               	btfss	___fldiv@b^0,0,c
  8543  004982  EFC5  F024         	goto	u3721
  8544  004986  EFC7  F024         	goto	u3720
  8545  00498A                     u3721:
  8546  00498A  EFC9  F024         	goto	l1078
  8547  00498E                     u3720:
  8548  00498E  EFBC  F024         	goto	l3353
  8549  004992                     l1078:
  8550  004992  5037               	movf	___fldiv@aexp^0,w,c
  8551  004994  B4D8               	btfsc	status,2,c
  8552  004996  EFCF  F024         	goto	u3731
  8553  00499A  EFD1  F024         	goto	u3730
  8554  00499E                     u3731:
  8555  00499E  EFFD  F024         	goto	l3365
  8556  0049A2                     u3730:
  8557  0049A2  0E01               	movlw	1
  8558  0049A4  261F               	addwf	___fldiv@b^0,f,c
  8559  0049A6  0E00               	movlw	0
  8560  0049A8  2220               	addwfc	(___fldiv@b+1)^0,f,c
  8561  0049AA  2221               	addwfc	(___fldiv@b+2)^0,f,c
  8562  0049AC  2222               	addwfc	(___fldiv@b+3)^0,f,c
  8563  0049AE  A022               	btfss	(___fldiv@b+3)^0,0,c
  8564  0049B0  EFDC  F024         	goto	u3741
  8565  0049B4  EFDE  F024         	goto	u3740
  8566  0049B8                     u3741:
  8567  0049B8  EFFD  F024         	goto	l3365
  8568  0049BC                     u3740:
  8569  0049BC  0060  F07C  F027   	movff	___fldiv@b,??___fldiv
  8570  0049C2  0060  F080  F028   	movff	___fldiv@b+1,??___fldiv+1
  8571  0049C8  0060  F084  F029   	movff	___fldiv@b+2,??___fldiv+2
  8572  0049CE  0060  F088  F02A   	movff	___fldiv@b+3,??___fldiv+3
  8573  0049D4  342A               	rlcf	(??___fldiv+3)^0,w,c
  8574  0049D6  322A               	rrcf	(??___fldiv+3)^0,f,c
  8575  0049D8  3229               	rrcf	(??___fldiv+2)^0,f,c
  8576  0049DA  3228               	rrcf	(??___fldiv+1)^0,f,c
  8577  0049DC  3227               	rrcf	??___fldiv^0,f,c
  8578  0049DE  0060  F09C  F01F   	movff	??___fldiv,___fldiv@b
  8579  0049E4  0060  F0A0  F020   	movff	??___fldiv+1,___fldiv@b+1
  8580  0049EA  0060  F0A4  F021   	movff	??___fldiv+2,___fldiv@b+2
  8581  0049F0  0060  F0A8  F022   	movff	??___fldiv+3,___fldiv@b+3
  8582  0049F6  4A30               	infsnz	___fldiv@new_exp^0,f,c
  8583  0049F8  2A31               	incf	(___fldiv@new_exp+1)^0,f,c
  8584  0049FA                     l3365:
  8585  0049FA  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8586  0049FC  EF08  F025         	goto	u3751
  8587  004A00  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  8588  004A02  E108               	bnz	u3750
  8589  004A04  2830               	incf	___fldiv@new_exp^0,w,c
  8590  004A06  A0D8               	btfss	status,0,c
  8591  004A08  EF08  F025         	goto	u3751
  8592  004A0C  EF0A  F025         	goto	u3750
  8593  004A10                     u3751:
  8594  004A10  EF15  F025         	goto	l3369
  8595  004A14                     u3750:
  8596  004A14  0E00               	movlw	0
  8597  004A16  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  8598  004A18  6830               	setf	___fldiv@new_exp^0,c
  8599  004A1A  0E00               	movlw	0
  8600  004A1C  6E1F               	movwf	___fldiv@b^0,c
  8601  004A1E  0E00               	movlw	0
  8602  004A20  6E20               	movwf	(___fldiv@b+1)^0,c
  8603  004A22  0E00               	movlw	0
  8604  004A24  6E21               	movwf	(___fldiv@b+2)^0,c
  8605  004A26  0E00               	movlw	0
  8606  004A28  6E22               	movwf	(___fldiv@b+3)^0,c
  8607  004A2A                     l3369:
  8608  004A2A  BE31               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8609  004A2C  EF22  F025         	goto	u3760
  8610  004A30  5031               	movf	(___fldiv@new_exp+1)^0,w,c
  8611  004A32  E106               	bnz	u3761
  8612  004A34  0430               	decf	___fldiv@new_exp^0,w,c
  8613  004A36  B0D8               	btfsc	status,0,c
  8614  004A38  EF20  F025         	goto	u3761
  8615  004A3C  EF22  F025         	goto	u3760
  8616  004A40                     u3761:
  8617  004A40  EF30  F025         	goto	l3373
  8618  004A44                     u3760:
  8619  004A44  0E00               	movlw	0
  8620  004A46  6E31               	movwf	(___fldiv@new_exp+1)^0,c
  8621  004A48  0E00               	movlw	0
  8622  004A4A  6E30               	movwf	___fldiv@new_exp^0,c
  8623  004A4C  0E00               	movlw	0
  8624  004A4E  6E1F               	movwf	___fldiv@b^0,c
  8625  004A50  0E00               	movlw	0
  8626  004A52  6E20               	movwf	(___fldiv@b+1)^0,c
  8627  004A54  0E00               	movlw	0
  8628  004A56  6E21               	movwf	(___fldiv@b+2)^0,c
  8629  004A58  0E00               	movlw	0
  8630  004A5A  6E22               	movwf	(___fldiv@b+3)^0,c
  8631  004A5C  0E00               	movlw	0
  8632  004A5E  6E2F               	movwf	___fldiv@sign^0,c
  8633  004A60                     l3373:
  8634  004A60  0060  F0C0  F036   	movff	___fldiv@new_exp,___fldiv@bexp
  8635  004A66  A036               	btfss	___fldiv@bexp^0,0,c
  8636  004A68  EF38  F025         	goto	u3771
  8637  004A6C  EF3A  F025         	goto	u3770
  8638  004A70                     u3771:
  8639  004A70  EF3D  F025         	goto	l3379
  8640  004A74                     u3770:
  8641  004A74  8E21               	bsf	(___fldiv@b+2)^0,7,c
  8642  004A76  EF3E  F025         	goto	l3381
  8643  004A7A                     l3379:
  8644  004A7A  9E21               	bcf	(___fldiv@b+2)^0,7,c
  8645  004A7C                     l3381:
  8646  004A7C  90D8               	bcf	status,0,c
  8647  004A7E  3036               	rrcf	___fldiv@bexp^0,w,c
  8648  004A80  6E22               	movwf	(___fldiv@b+3)^0,c
  8649  004A82  EFE2  F023         	goto	l3295
  8650  004A86                     l1065:
  8651  004A86  0012               	return		;funcret
  8652  004A88                     __end_of___fldiv:
  8653                           	opt callstack 0
  8654                           
  8655 ;; *************** function ___awmod *****************
  8656 ;; Defined at:
  8657 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awmod.c"
  8658 ;; Parameters:    Size  Location     Type
  8659 ;;  dividend        2    0[COMRAM] int 
  8660 ;;  divisor         2    2[COMRAM] int 
  8661 ;; Auto vars:     Size  Location     Type
  8662 ;;  sign            1    5[COMRAM] unsigned char 
  8663 ;;  counter         1    4[COMRAM] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  2    0[COMRAM] int 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8673 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8674 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8676 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8677 ;;Total ram usage:        6 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; This function calls:
  8680 ;;		Nothing
  8681 ;; This function is called by:
  8682 ;;		_efgtoa
  8683 ;; This function uses a non-reentrant model
  8684 ;;
  8685                           
  8686                           	psect	text25
  8687  005BB4                     __ptext25:
  8688                           	opt callstack 0
  8689  005BB4                     ___awmod:
  8690                           	opt callstack 25
  8691  005BB4  0E00               	movlw	0
  8692  005BB6  6E06               	movwf	___awmod@sign^0,c
  8693  005BB8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  8694  005BBA  EFE3  F02D         	goto	u4030
  8695  005BBE  EFE1  F02D         	goto	u4031
  8696  005BC2                     u4031:
  8697  005BC2  EFE9  F02D         	goto	l3577
  8698  005BC6                     u4030:
  8699  005BC6  6C01               	negf	___awmod@dividend^0,c
  8700  005BC8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8701  005BCA  B0D8               	btfsc	status,0,c
  8702  005BCC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8703  005BCE  0E01               	movlw	1
  8704  005BD0  6E06               	movwf	___awmod@sign^0,c
  8705  005BD2                     l3577:
  8706  005BD2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  8707  005BD4  EFF0  F02D         	goto	u4040
  8708  005BD8  EFEE  F02D         	goto	u4041
  8709  005BDC                     u4041:
  8710  005BDC  EFF4  F02D         	goto	l3581
  8711  005BE0                     u4040:
  8712  005BE0  6C03               	negf	___awmod@divisor^0,c
  8713  005BE2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  8714  005BE4  B0D8               	btfsc	status,0,c
  8715  005BE6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  8716  005BE8                     l3581:
  8717  005BE8  5003               	movf	___awmod@divisor^0,w,c
  8718  005BEA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  8719  005BEC  B4D8               	btfsc	status,2,c
  8720  005BEE  EFFB  F02D         	goto	u4051
  8721  005BF2  EFFD  F02D         	goto	u4050
  8722  005BF6                     u4051:
  8723  005BF6  EF21  F02E         	goto	l3597
  8724  005BFA                     u4050:
  8725  005BFA  0E01               	movlw	1
  8726  005BFC  6E05               	movwf	___awmod@counter^0,c
  8727  005BFE  EF05  F02E         	goto	l3587
  8728  005C02                     l3585:
  8729  005C02  90D8               	bcf	status,0,c
  8730  005C04  3603               	rlcf	___awmod@divisor^0,f,c
  8731  005C06  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  8732  005C08  2A05               	incf	___awmod@counter^0,f,c
  8733  005C0A                     l3587:
  8734  005C0A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  8735  005C0C  EF0A  F02E         	goto	u4061
  8736  005C10  EF0C  F02E         	goto	u4060
  8737  005C14                     u4061:
  8738  005C14  EF01  F02E         	goto	l3585
  8739  005C18                     u4060:
  8740  005C18                     l3589:
  8741  005C18  5003               	movf	___awmod@divisor^0,w,c
  8742  005C1A  5C01               	subwf	___awmod@dividend^0,w,c
  8743  005C1C  5004               	movf	(___awmod@divisor+1)^0,w,c
  8744  005C1E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  8745  005C20  A0D8               	btfss	status,0,c
  8746  005C22  EF15  F02E         	goto	u4071
  8747  005C26  EF17  F02E         	goto	u4070
  8748  005C2A                     u4071:
  8749  005C2A  EF1B  F02E         	goto	l3593
  8750  005C2E                     u4070:
  8751  005C2E  5003               	movf	___awmod@divisor^0,w,c
  8752  005C30  5E01               	subwf	___awmod@dividend^0,f,c
  8753  005C32  5004               	movf	(___awmod@divisor+1)^0,w,c
  8754  005C34  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  8755  005C36                     l3593:
  8756  005C36  90D8               	bcf	status,0,c
  8757  005C38  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  8758  005C3A  3203               	rrcf	___awmod@divisor^0,f,c
  8759  005C3C  2E05               	decfsz	___awmod@counter^0,f,c
  8760  005C3E  EF0C  F02E         	goto	l3589
  8761  005C42                     l3597:
  8762  005C42  5006               	movf	___awmod@sign^0,w,c
  8763  005C44  B4D8               	btfsc	status,2,c
  8764  005C46  EF27  F02E         	goto	u4081
  8765  005C4A  EF29  F02E         	goto	u4080
  8766  005C4E                     u4081:
  8767  005C4E  EF2D  F02E         	goto	l3601
  8768  005C52                     u4080:
  8769  005C52  6C01               	negf	___awmod@dividend^0,c
  8770  005C54  1E02               	comf	(___awmod@dividend+1)^0,f,c
  8771  005C56  B0D8               	btfsc	status,0,c
  8772  005C58  2A02               	incf	(___awmod@dividend+1)^0,f,c
  8773  005C5A                     l3601:
  8774  005C5A  0060  F004  F001   	movff	___awmod@dividend,?___awmod
  8775  005C60  0060  F008  F002   	movff	___awmod@dividend+1,?___awmod+1
  8776  005C66  0012               	return		;funcret
  8777  005C68                     __end_of___awmod:
  8778                           	opt callstack 0
  8779                           
  8780 ;; *************** function ___awdiv *****************
  8781 ;; Defined at:
  8782 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\awdiv.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  dividend        2    0[COMRAM] int 
  8785 ;;  divisor         2    2[COMRAM] int 
  8786 ;; Auto vars:     Size  Location     Type
  8787 ;;  quotient        2    6[COMRAM] int 
  8788 ;;  sign            1    5[COMRAM] unsigned char 
  8789 ;;  counter         1    4[COMRAM] unsigned char 
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  2    0[COMRAM] int 
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8799 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8802 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8803 ;;Total ram usage:        8 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; This function calls:
  8806 ;;		Nothing
  8807 ;; This function is called by:
  8808 ;;		_main_loop
  8809 ;;		_efgtoa
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text26
  8814  005AEC                     __ptext26:
  8815                           	opt callstack 0
  8816  005AEC                     ___awdiv:
  8817                           	opt callstack 25
  8818  005AEC  0E00               	movlw	0
  8819  005AEE  6E06               	movwf	___awdiv@sign^0,c
  8820  005AF0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  8821  005AF2  EF7F  F02D         	goto	u3970
  8822  005AF6  EF7D  F02D         	goto	u3971
  8823  005AFA                     u3971:
  8824  005AFA  EF85  F02D         	goto	l3533
  8825  005AFE                     u3970:
  8826  005AFE  6C03               	negf	___awdiv@divisor^0,c
  8827  005B00  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  8828  005B02  B0D8               	btfsc	status,0,c
  8829  005B04  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  8830  005B06  0E01               	movlw	1
  8831  005B08  6E06               	movwf	___awdiv@sign^0,c
  8832  005B0A                     l3533:
  8833  005B0A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  8834  005B0C  EF8C  F02D         	goto	u3980
  8835  005B10  EF8A  F02D         	goto	u3981
  8836  005B14                     u3981:
  8837  005B14  EF92  F02D         	goto	l3539
  8838  005B18                     u3980:
  8839  005B18  6C01               	negf	___awdiv@dividend^0,c
  8840  005B1A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  8841  005B1C  B0D8               	btfsc	status,0,c
  8842  005B1E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  8843  005B20  0E01               	movlw	1
  8844  005B22  1A06               	xorwf	___awdiv@sign^0,f,c
  8845  005B24                     l3539:
  8846  005B24  0E00               	movlw	0
  8847  005B26  6E08               	movwf	(___awdiv@quotient+1)^0,c
  8848  005B28  0E00               	movlw	0
  8849  005B2A  6E07               	movwf	___awdiv@quotient^0,c
  8850  005B2C  5003               	movf	___awdiv@divisor^0,w,c
  8851  005B2E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  8852  005B30  B4D8               	btfsc	status,2,c
  8853  005B32  EF9D  F02D         	goto	u3991
  8854  005B36  EF9F  F02D         	goto	u3990
  8855  005B3A                     u3991:
  8856  005B3A  EFC7  F02D         	goto	l3561
  8857  005B3E                     u3990:
  8858  005B3E  0E01               	movlw	1
  8859  005B40  6E05               	movwf	___awdiv@counter^0,c
  8860  005B42  EFA7  F02D         	goto	l3547
  8861  005B46                     l3545:
  8862  005B46  90D8               	bcf	status,0,c
  8863  005B48  3603               	rlcf	___awdiv@divisor^0,f,c
  8864  005B4A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  8865  005B4C  2A05               	incf	___awdiv@counter^0,f,c
  8866  005B4E                     l3547:
  8867  005B4E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  8868  005B50  EFAC  F02D         	goto	u4001
  8869  005B54  EFAE  F02D         	goto	u4000
  8870  005B58                     u4001:
  8871  005B58  EFA3  F02D         	goto	l3545
  8872  005B5C                     u4000:
  8873  005B5C                     l3549:
  8874  005B5C  90D8               	bcf	status,0,c
  8875  005B5E  3607               	rlcf	___awdiv@quotient^0,f,c
  8876  005B60  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  8877  005B62  5003               	movf	___awdiv@divisor^0,w,c
  8878  005B64  5C01               	subwf	___awdiv@dividend^0,w,c
  8879  005B66  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8880  005B68  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  8881  005B6A  A0D8               	btfss	status,0,c
  8882  005B6C  EFBA  F02D         	goto	u4011
  8883  005B70  EFBC  F02D         	goto	u4010
  8884  005B74                     u4011:
  8885  005B74  EFC1  F02D         	goto	l3557
  8886  005B78                     u4010:
  8887  005B78  5003               	movf	___awdiv@divisor^0,w,c
  8888  005B7A  5E01               	subwf	___awdiv@dividend^0,f,c
  8889  005B7C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  8890  005B7E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  8891  005B80  8007               	bsf	___awdiv@quotient^0,0,c
  8892  005B82                     l3557:
  8893  005B82  90D8               	bcf	status,0,c
  8894  005B84  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  8895  005B86  3203               	rrcf	___awdiv@divisor^0,f,c
  8896  005B88  2E05               	decfsz	___awdiv@counter^0,f,c
  8897  005B8A  EFAE  F02D         	goto	l3549
  8898  005B8E                     l3561:
  8899  005B8E  5006               	movf	___awdiv@sign^0,w,c
  8900  005B90  B4D8               	btfsc	status,2,c
  8901  005B92  EFCD  F02D         	goto	u4021
  8902  005B96  EFCF  F02D         	goto	u4020
  8903  005B9A                     u4021:
  8904  005B9A  EFD3  F02D         	goto	l3565
  8905  005B9E                     u4020:
  8906  005B9E  6C07               	negf	___awdiv@quotient^0,c
  8907  005BA0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  8908  005BA2  B0D8               	btfsc	status,0,c
  8909  005BA4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  8910  005BA6                     l3565:
  8911  005BA6  0060  F01C  F001   	movff	___awdiv@quotient,?___awdiv
  8912  005BAC  0060  F020  F002   	movff	___awdiv@quotient+1,?___awdiv+1
  8913  005BB2  0012               	return		;funcret
  8914  005BB4                     __end_of___awdiv:
  8915                           	opt callstack 0
  8916                           
  8917 ;; *************** function _atoi *****************
  8918 ;; Defined at:
  8919 ;;		line 4 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\atoi.c"
  8920 ;; Parameters:    Size  Location     Type
  8921 ;;  s               2    7[COMRAM] PTR const unsigned char 
  8922 ;;		 -> STR_4(17), STR_3(18), STR_2(18), STR_1(19), 
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;  n               2   20[COMRAM] int 
  8925 ;;  neg             2   13[COMRAM] int 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  2    7[COMRAM] int 
  8928 ;; Registers used:
  8929 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8935 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8936 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8938 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8939 ;;Total ram usage:       15 bytes
  8940 ;; Hardware stack levels used:    1
  8941 ;; Hardware stack levels required when called:    1
  8942 ;; This function calls:
  8943 ;;		___wmul
  8944 ;;		_isdigit
  8945 ;;		_isspace
  8946 ;; This function is called by:
  8947 ;;		_vfpfcnvrt
  8948 ;; This function uses a non-reentrant model
  8949 ;;
  8950                           
  8951                           	psect	text27
  8952  0051BC                     __ptext27:
  8953                           	opt callstack 0
  8954  0051BC                     _atoi:
  8955                           	opt callstack 25
  8956  0051BC  0E00               	movlw	0
  8957  0051BE  6E16               	movwf	(atoi@n+1)^0,c
  8958  0051C0  0E00               	movlw	0
  8959  0051C2  6E15               	movwf	atoi@n^0,c
  8960  0051C4  0E00               	movlw	0
  8961  0051C6  6E0F               	movwf	(atoi@neg+1)^0,c
  8962  0051C8  0E00               	movlw	0
  8963  0051CA  6E0E               	movwf	atoi@neg^0,c
  8964  0051CC  EFEA  F028         	goto	l4009
  8965  0051D0                     l4007:
  8966  0051D0  4A08               	infsnz	atoi@s^0,f,c
  8967  0051D2  2A09               	incf	(atoi@s+1)^0,f,c
  8968  0051D4                     l4009:
  8969  0051D4  0E01               	movlw	1
  8970  0051D6  6E14               	movwf	_atoi$1018^0,c
  8971  0051D8  0060  F023  FFF6   	movff	atoi@s,tblptrl
  8972  0051DE  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  8973  0051E4                     	if	0	;tblptru may be non-zero
  8974  0051E4                     	endif
  8975  0051E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8976  0051E4  0E00               	movlw	low (__mediumconst shr (0+16))
  8977  0051E6  6EF8               	movwf	tblptru,c
  8978  0051E8                     	endif
  8979  0051E8  0008               	tblrd		*
  8980  0051EA  50F5               	movf	tablat,w,c
  8981  0051EC  0A20               	xorlw	32
  8982  0051EE  B4D8               	btfsc	status,2,c
  8983  0051F0  EFFC  F028         	goto	u4791
  8984  0051F4  EFFE  F028         	goto	u4790
  8985  0051F8                     u4791:
  8986  0051F8  EF1F  F029         	goto	l4017
  8987  0051FC                     u4790:
  8988  0051FC  0EF7               	movlw	247
  8989  0051FE  6E0A               	movwf	??_atoi^0,c
  8990  005200  0EFF               	movlw	255
  8991  005202  6E0B               	movwf	(??_atoi+1)^0,c
  8992  005204  0060  F023  FFF6   	movff	atoi@s,tblptrl
  8993  00520A  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  8994  005210                     	if	0	;tblptru may be non-zero
  8995  005210                     	endif
  8996  005210                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8997  005210  0E00               	movlw	low (__mediumconst shr (0+16))
  8998  005212  6EF8               	movwf	tblptru,c
  8999  005214                     	endif
  9000  005214  0008               	tblrd		*
  9001  005216  50F5               	movf	tablat,w,c
  9002  005218  6E0C               	movwf	(??_atoi+2)^0,c
  9003  00521A  6A0D               	clrf	(??_atoi+3)^0,c
  9004  00521C  500A               	movf	??_atoi^0,w,c
  9005  00521E  260C               	addwf	(??_atoi+2)^0,f,c
  9006  005220  500B               	movf	(??_atoi+1)^0,w,c
  9007  005222  220D               	addwfc	(??_atoi+3)^0,f,c
  9008  005224  500D               	movf	(??_atoi+3)^0,w,c
  9009  005226  E109               	bnz	u4800
  9010  005228  0E05               	movlw	5
  9011  00522A  5C0C               	subwf	(??_atoi+2)^0,w,c
  9012  00522C  A0D8               	btfss	status,0,c
  9013  00522E  EF1B  F029         	goto	u4801
  9014  005232  EF1D  F029         	goto	u4800
  9015  005236                     u4801:
  9016  005236  EF1F  F029         	goto	l4017
  9017  00523A                     u4800:
  9018  00523A  0E00               	movlw	0
  9019  00523C  6E14               	movwf	_atoi$1018^0,c
  9020  00523E                     l4017:
  9021  00523E  0060  F050  F010   	movff	_atoi$1018,_atoi$1017
  9022  005244  6A11               	clrf	(_atoi$1017+1)^0,c
  9023  005246  5010               	movf	_atoi$1017^0,w,c
  9024  005248  1011               	iorwf	(_atoi$1017+1)^0,w,c
  9025  00524A  A4D8               	btfss	status,2,c
  9026  00524C  EF2A  F029         	goto	u4811
  9027  005250  EF2C  F029         	goto	u4810
  9028  005254                     u4811:
  9029  005254  EFE8  F028         	goto	l4007
  9030  005258                     u4810:
  9031  005258  EF36  F029         	goto	l4027
  9032  00525C                     l4023:
  9033  00525C  0E00               	movlw	0
  9034  00525E  6E0F               	movwf	(atoi@neg+1)^0,c
  9035  005260  0E01               	movlw	1
  9036  005262  6E0E               	movwf	atoi@neg^0,c
  9037  005264                     l4025:
  9038  005264  4A08               	infsnz	atoi@s^0,f,c
  9039  005266  2A09               	incf	(atoi@s+1)^0,f,c
  9040  005268  EF75  F029         	goto	l4033
  9041  00526C                     l4027:
  9042  00526C  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9043  005272  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  9044  005278                     	if	0	;tblptru may be non-zero
  9045  005278                     	endif
  9046  005278                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9047  005278  0E00               	movlw	low (__mediumconst shr (0+16))
  9048  00527A  6EF8               	movwf	tblptru,c
  9049  00527C                     	endif
  9050  00527C  0008               	tblrd		*
  9051  00527E  50F5               	movf	tablat,w,c
  9052  005280  6E0A               	movwf	??_atoi^0,c
  9053  005282  6A0B               	clrf	(??_atoi+1)^0,c
  9054                           
  9055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9056                           ; Switch size 1, requested type "simple"
  9057                           ; Number of cases is 1, Range of values is 0 to 0
  9058                           ; switch strategies available:
  9059                           ; Name         Instructions Cycles
  9060                           ; simple_byte            4     3 (average)
  9061                           ;	Chosen strategy is simple_byte
  9062  005284  500B               	movf	(??_atoi+1)^0,w,c
  9063  005286  0A00               	xorlw	0	; case 0
  9064  005288  B4D8               	btfsc	status,2,c
  9065  00528A  EF49  F029         	goto	l4539
  9066  00528E  EF75  F029         	goto	l4033
  9067  005292                     l4539:
  9068                           
  9069                           ; Switch size 1, requested type "simple"
  9070                           ; Number of cases is 2, Range of values is 43 to 45
  9071                           ; switch strategies available:
  9072                           ; Name         Instructions Cycles
  9073                           ; simple_byte            7     4 (average)
  9074                           ;	Chosen strategy is simple_byte
  9075  005292  500A               	movf	??_atoi^0,w,c
  9076  005294  0A2B               	xorlw	43	; case 43
  9077  005296  B4D8               	btfsc	status,2,c
  9078  005298  EF32  F029         	goto	l4025
  9079  00529C  0A06               	xorlw	6	; case 45
  9080  00529E  B4D8               	btfsc	status,2,c
  9081  0052A0  EF2E  F029         	goto	l4023
  9082  0052A4  EF75  F029         	goto	l4033
  9083  0052A8                     l4029:
  9084  0052A8  0060  F054  F001   	movff	atoi@n,___wmul@multiplier
  9085  0052AE  0060  F058  F002   	movff	atoi@n+1,___wmul@multiplier+1
  9086  0052B4  0E00               	movlw	0
  9087  0052B6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  9088  0052B8  0E0A               	movlw	10
  9089  0052BA  6E03               	movwf	___wmul@multiplicand^0,c
  9090  0052BC  EC03  F032         	call	___wmul	;wreg free
  9091  0052C0  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9092  0052C6  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  9093  0052CC                     	if	0	;tblptru may be non-zero
  9094  0052CC                     	endif
  9095  0052CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9096  0052CC  0E00               	movlw	low (__mediumconst shr (0+16))
  9097  0052CE  6EF8               	movwf	tblptru,c
  9098  0052D0                     	endif
  9099  0052D0  0008               	tblrd		*
  9100  0052D2  50F5               	movf	tablat,w,c
  9101  0052D4  5E01               	subwf	?___wmul^0,f,c
  9102  0052D6  0E00               	movlw	0
  9103  0052D8  5A02               	subwfb	(?___wmul+1)^0,f,c
  9104  0052DA  0E30               	movlw	48
  9105  0052DC  2401               	addwf	?___wmul^0,w,c
  9106  0052DE  6E15               	movwf	atoi@n^0,c
  9107  0052E0  0E00               	movlw	0
  9108  0052E2  2002               	addwfc	(?___wmul+1)^0,w,c
  9109  0052E4  6E16               	movwf	(atoi@n+1)^0,c
  9110  0052E6  EF32  F029         	goto	l4025
  9111  0052EA                     l4033:
  9112  0052EA  0ED0               	movlw	208
  9113  0052EC  6E0A               	movwf	??_atoi^0,c
  9114  0052EE  0EFF               	movlw	255
  9115  0052F0  6E0B               	movwf	(??_atoi+1)^0,c
  9116  0052F2  0060  F023  FFF6   	movff	atoi@s,tblptrl
  9117  0052F8  0060  F027  FFF7   	movff	atoi@s+1,tblptrh
  9118  0052FE                     	if	0	;tblptru may be non-zero
  9119  0052FE                     	endif
  9120  0052FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9121  0052FE  0E00               	movlw	low (__mediumconst shr (0+16))
  9122  005300  6EF8               	movwf	tblptru,c
  9123  005302                     	endif
  9124  005302  0008               	tblrd		*
  9125  005304  50F5               	movf	tablat,w,c
  9126  005306  6E0C               	movwf	(??_atoi+2)^0,c
  9127  005308  6A0D               	clrf	(??_atoi+3)^0,c
  9128  00530A  500A               	movf	??_atoi^0,w,c
  9129  00530C  260C               	addwf	(??_atoi+2)^0,f,c
  9130  00530E  500B               	movf	(??_atoi+1)^0,w,c
  9131  005310  220D               	addwfc	(??_atoi+3)^0,f,c
  9132  005312  500D               	movf	(??_atoi+3)^0,w,c
  9133  005314  E10A               	bnz	u4820
  9134  005316  0E0A               	movlw	10
  9135  005318  5C0C               	subwf	(??_atoi+2)^0,w,c
  9136  00531A  A0D8               	btfss	status,0,c
  9137  00531C  EF92  F029         	goto	u4821
  9138  005320  EF95  F029         	goto	u4820
  9139  005324                     u4821:
  9140  005324  0E01               	movlw	1
  9141  005326  EF96  F029         	goto	u4830
  9142  00532A                     u4820:
  9143  00532A  0E00               	movlw	0
  9144  00532C                     u4830:
  9145  00532C  6E12               	movwf	_atoi$1019^0,c
  9146  00532E  6A13               	clrf	(_atoi$1019+1)^0,c
  9147  005330  5012               	movf	_atoi$1019^0,w,c
  9148  005332  1013               	iorwf	(_atoi$1019+1)^0,w,c
  9149  005334  A4D8               	btfss	status,2,c
  9150  005336  EF9F  F029         	goto	u4841
  9151  00533A  EFA1  F029         	goto	u4840
  9152  00533E                     u4841:
  9153  00533E  EF54  F029         	goto	l4029
  9154  005342                     u4840:
  9155  005342  500E               	movf	atoi@neg^0,w,c
  9156  005344  100F               	iorwf	(atoi@neg+1)^0,w,c
  9157  005346  A4D8               	btfss	status,2,c
  9158  005348  EFA8  F029         	goto	u4851
  9159  00534C  EFAA  F029         	goto	u4850
  9160  005350                     u4851:
  9161  005350  EFBC  F029         	goto	l1193
  9162  005354                     u4850:
  9163  005354  0060  F054  F00A   	movff	atoi@n,??_atoi
  9164  00535A  0060  F058  F00B   	movff	atoi@n+1,??_atoi+1
  9165  005360  1E0A               	comf	??_atoi^0,f,c
  9166  005362  1E0B               	comf	(??_atoi+1)^0,f,c
  9167  005364  4A0A               	infsnz	??_atoi^0,f,c
  9168  005366  2A0B               	incf	(??_atoi+1)^0,f,c
  9169  005368  0060  F028  F008   	movff	??_atoi,?_atoi
  9170  00536E  0060  F02C  F009   	movff	??_atoi+1,?_atoi+1
  9171  005374  EFC2  F029         	goto	l1196
  9172  005378                     l1193:
  9173  005378  0060  F054  F008   	movff	atoi@n,?_atoi
  9174  00537E  0060  F058  F009   	movff	atoi@n+1,?_atoi+1
  9175  005384                     l1196:
  9176  005384  0012               	return		;funcret
  9177  005386                     __end_of_atoi:
  9178                           	opt callstack 0
  9179                           
  9180 ;; *************** function _isspace *****************
  9181 ;; Defined at:
  9182 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isspace.c"
  9183 ;; Parameters:    Size  Location     Type
  9184 ;;  c               2    0[COMRAM] int 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;		None
  9187 ;; Return value:  Size  Location     Type
  9188 ;;                  2    0[COMRAM] int 
  9189 ;; Registers used:
  9190 ;;		wreg, status,2, status,0
  9191 ;; Tracked objects:
  9192 ;;		On entry : 0/0
  9193 ;;		On exit  : 0/0
  9194 ;;		Unchanged: 0/0
  9195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9198 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9199 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9200 ;;Total ram usage:        7 bytes
  9201 ;; Hardware stack levels used:    1
  9202 ;; This function calls:
  9203 ;;		Nothing
  9204 ;; This function is called by:
  9205 ;;		_atoi
  9206 ;; This function uses a non-reentrant model
  9207 ;;
  9208                           
  9209                           	psect	text28
  9210  00623C                     __ptext28:
  9211                           	opt callstack 0
  9212  00623C                     _isspace:
  9213                           	opt callstack 25
  9214  00623C  0E01               	movlw	1
  9215  00623E  6E07               	movwf	_isspace$1048^0,c
  9216  006240  0E20               	movlw	32
  9217  006242  1801               	xorwf	isspace@c^0,w,c
  9218  006244  1002               	iorwf	(isspace@c+1)^0,w,c
  9219  006246  B4D8               	btfsc	status,2,c
  9220  006248  EF28  F031         	goto	u4251
  9221  00624C  EF2A  F031         	goto	u4250
  9222  006250                     u4251:
  9223  006250  EF45  F031         	goto	l3703
  9224  006254                     u4250:
  9225  006254  0EF7               	movlw	247
  9226  006256  6E03               	movwf	??_isspace^0,c
  9227  006258  0EFF               	movlw	255
  9228  00625A  6E04               	movwf	(??_isspace+1)^0,c
  9229  00625C  0060  F004  F005   	movff	isspace@c,??_isspace+2
  9230  006262  0060  F008  F006   	movff	isspace@c+1,??_isspace+3
  9231  006268  5003               	movf	??_isspace^0,w,c
  9232  00626A  2605               	addwf	(??_isspace+2)^0,f,c
  9233  00626C  5004               	movf	(??_isspace+1)^0,w,c
  9234  00626E  2206               	addwfc	(??_isspace+3)^0,f,c
  9235  006270  5006               	movf	(??_isspace+3)^0,w,c
  9236  006272  E109               	bnz	u4260
  9237  006274  0E05               	movlw	5
  9238  006276  5C05               	subwf	(??_isspace+2)^0,w,c
  9239  006278  A0D8               	btfss	status,0,c
  9240  00627A  EF41  F031         	goto	u4261
  9241  00627E  EF43  F031         	goto	u4260
  9242  006282                     u4261:
  9243  006282  EF45  F031         	goto	l3703
  9244  006286                     u4260:
  9245  006286  0E00               	movlw	0
  9246  006288  6E07               	movwf	_isspace$1048^0,c
  9247  00628A                     l3703:
  9248  00628A  0060  F01C  F001   	movff	_isspace$1048,?_isspace
  9249  006290  6A02               	clrf	(?_isspace+1)^0,c
  9250  006292  0012               	return		;funcret
  9251  006294                     __end_of_isspace:
  9252                           	opt callstack 0
  9253                           
  9254 ;; *************** function _isdigit *****************
  9255 ;; Defined at:
  9256 ;;		line 5 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\isdigit.c"
  9257 ;; Parameters:    Size  Location     Type
  9258 ;;  c               2    0[COMRAM] int 
  9259 ;; Auto vars:     Size  Location     Type
  9260 ;;		None
  9261 ;; Return value:  Size  Location     Type
  9262 ;;                  2    0[COMRAM] int 
  9263 ;; Registers used:
  9264 ;;		wreg, status,2, status,0
  9265 ;; Tracked objects:
  9266 ;;		On entry : 0/0
  9267 ;;		On exit  : 0/0
  9268 ;;		Unchanged: 0/0
  9269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9272 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9273 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9274 ;;Total ram usage:        6 bytes
  9275 ;; Hardware stack levels used:    1
  9276 ;; This function calls:
  9277 ;;		Nothing
  9278 ;; This function is called by:
  9279 ;;		_vfpfcnvrt
  9280 ;;		_atoi
  9281 ;; This function uses a non-reentrant model
  9282 ;;
  9283                           
  9284                           	psect	text29
  9285  006398                     __ptext29:
  9286                           	opt callstack 0
  9287  006398                     _isdigit:
  9288                           	opt callstack 26
  9289  006398  0ED0               	movlw	208
  9290  00639A  6E03               	movwf	??_isdigit^0,c
  9291  00639C  0EFF               	movlw	255
  9292  00639E  6E04               	movwf	(??_isdigit+1)^0,c
  9293  0063A0  0060  F004  F005   	movff	isdigit@c,??_isdigit+2
  9294  0063A6  0060  F008  F006   	movff	isdigit@c+1,??_isdigit+3
  9295  0063AC  5003               	movf	??_isdigit^0,w,c
  9296  0063AE  2605               	addwf	(??_isdigit+2)^0,f,c
  9297  0063B0  5004               	movf	(??_isdigit+1)^0,w,c
  9298  0063B2  2206               	addwfc	(??_isdigit+3)^0,f,c
  9299  0063B4  5006               	movf	(??_isdigit+3)^0,w,c
  9300  0063B6  E10A               	bnz	u3530
  9301  0063B8  0E0A               	movlw	10
  9302  0063BA  5C05               	subwf	(??_isdigit+2)^0,w,c
  9303  0063BC  A0D8               	btfss	status,0,c
  9304  0063BE  EFE3  F031         	goto	u3531
  9305  0063C2  EFE6  F031         	goto	u3530
  9306  0063C6                     u3531:
  9307  0063C6  0E01               	movlw	1
  9308  0063C8  EFE7  F031         	goto	u3540
  9309  0063CC                     u3530:
  9310  0063CC  0E00               	movlw	0
  9311  0063CE                     u3540:
  9312  0063CE  6E01               	movwf	?_isdigit^0,c
  9313  0063D0  6A02               	clrf	(?_isdigit+1)^0,c
  9314  0063D2  0012               	return		;funcret
  9315  0063D4                     __end_of_isdigit:
  9316                           	opt callstack 0
  9317                           
  9318 ;; *************** function ___wmul *****************
  9319 ;; Defined at:
  9320 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul16.c"
  9321 ;; Parameters:    Size  Location     Type
  9322 ;;  multiplier      2    0[COMRAM] unsigned int 
  9323 ;;  multiplicand    2    2[COMRAM] unsigned int 
  9324 ;; Auto vars:     Size  Location     Type
  9325 ;;  product         2    4[COMRAM] unsigned int 
  9326 ;; Return value:  Size  Location     Type
  9327 ;;                  2    0[COMRAM] unsigned int 
  9328 ;; Registers used:
  9329 ;;		wreg, status,2, status,0, prodl, prodh
  9330 ;; Tracked objects:
  9331 ;;		On entry : 0/0
  9332 ;;		On exit  : 0/0
  9333 ;;		Unchanged: 0/0
  9334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9338 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9339 ;;Total ram usage:        6 bytes
  9340 ;; Hardware stack levels used:    1
  9341 ;; This function calls:
  9342 ;;		Nothing
  9343 ;; This function is called by:
  9344 ;;		_atoi
  9345 ;; This function uses a non-reentrant model
  9346 ;;
  9347                           
  9348                           	psect	text30
  9349  006406                     __ptext30:
  9350                           	opt callstack 0
  9351  006406                     ___wmul:
  9352                           	opt callstack 25
  9353  006406  5001               	movf	___wmul@multiplier^0,w,c
  9354  006408  0203               	mulwf	___wmul@multiplicand^0,c
  9355  00640A  006F FFCC  F005    	movff	prodl,___wmul@product
  9356  006410  006F FFD0  F006    	movff	prodh,___wmul@product+1
  9357  006416  5001               	movf	___wmul@multiplier^0,w,c
  9358  006418  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  9359  00641A  50F3               	movf	243,w,c
  9360  00641C  2606               	addwf	(___wmul@product+1)^0,f,c
  9361  00641E  5002               	movf	(___wmul@multiplier+1)^0,w,c
  9362  006420  0203               	mulwf	___wmul@multiplicand^0,c
  9363  006422  50F3               	movf	243,w,c
  9364  006424  2606               	addwf	(___wmul@product+1)^0,f,c
  9365  006426  0060  F014  F001   	movff	___wmul@product,?___wmul
  9366  00642C  0060  F018  F002   	movff	___wmul@product+1,?___wmul+1
  9367  006432  0012               	return		;funcret
  9368  006434                     __end_of___wmul:
  9369                           	opt callstack 0
  9370                           
  9371 ;; *************** function _setLED *****************
  9372 ;; Defined at:
  9373 ;;		line 89 in file "main.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  r               4   25[COMRAM] unsigned long 
  9376 ;;  g               4   29[COMRAM] unsigned long 
  9377 ;;  b               4   33[COMRAM] unsigned long 
  9378 ;; Auto vars:     Size  Location     Type
  9379 ;;  sb              4   69[COMRAM] unsigned long 
  9380 ;;  sg              4   65[COMRAM] unsigned long 
  9381 ;;  sr              4   61[COMRAM] unsigned long 
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2, status,0, cstack
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9391 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9392 ;;      Locals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9394 ;;      Totals:        48       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9395 ;;Total ram usage:       48 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:    1
  9398 ;; This function calls:
  9399 ;;		___lldiv
  9400 ;;		___lmul
  9401 ;; This function is called by:
  9402 ;;		_main_loop
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text31
  9407  004A88                     __ptext31:
  9408                           	opt callstack 0
  9409  004A88                     _setLED:
  9410                           	opt callstack 28
  9411  004A88                     
  9412                           ;main.c: 90:     uint32_t sr = r * ledBrightness / 255;
  9413  004A88  505F               	movf	_ledBrightness^0,w,c
  9414  004A8A  6E01               	movwf	___lmul@multiplier^0,c
  9415  004A8C  6A02               	clrf	(___lmul@multiplier+1)^0,c
  9416  004A8E  6A03               	clrf	(___lmul@multiplier+2)^0,c
  9417  004A90  6A04               	clrf	(___lmul@multiplier+3)^0,c
  9418  004A92  0060  F068  F005   	movff	setLED@r,___lmul@multiplicand
  9419  004A98  0060  F06C  F006   	movff	setLED@r+1,___lmul@multiplicand+1
  9420  004A9E  0060  F070  F007   	movff	setLED@r+2,___lmul@multiplicand+2
  9421  004AA4  0060  F074  F008   	movff	setLED@r+3,___lmul@multiplicand+3
  9422  004AAA  ECEF  F02F         	call	___lmul	;wreg free
  9423  004AAE  0060  F004  F00D   	movff	?___lmul,___lldiv@dividend
  9424  004AB4  0060  F008  F00E   	movff	?___lmul+1,___lldiv@dividend+1
  9425  004ABA  0060  F00C  F00F   	movff	?___lmul+2,___lldiv@dividend+2
  9426  004AC0  0060  F010  F010   	movff	?___lmul+3,___lldiv@dividend+3
  9427  004AC6  0EFF               	movlw	255
  9428  004AC8  6E11               	movwf	___lldiv@divisor^0,c
  9429  004ACA  0E00               	movlw	0
  9430  004ACC  6E12               	movwf	(___lldiv@divisor+1)^0,c
  9431  004ACE  0E00               	movlw	0
  9432  004AD0  6E13               	movwf	(___lldiv@divisor+2)^0,c
  9433  004AD2  0E00               	movlw	0
  9434  004AD4  6E14               	movwf	(___lldiv@divisor+3)^0,c
  9435  004AD6  EC34  F02E         	call	___lldiv	;wreg free
  9436  004ADA  0060  F034  F03E   	movff	?___lldiv,setLED@sr
  9437  004AE0  0060  F038  F03F   	movff	?___lldiv+1,setLED@sr+1
  9438  004AE6  0060  F03C  F040   	movff	?___lldiv+2,setLED@sr+2
  9439  004AEC  0060  F040  F041   	movff	?___lldiv+3,setLED@sr+3
  9440                           
  9441                           ;main.c: 91:     uint32_t sg = g * ledBrightness / 255;
  9442  004AF2  505F               	movf	_ledBrightness^0,w,c
  9443  004AF4  6E01               	movwf	___lmul@multiplier^0,c
  9444  004AF6  6A02               	clrf	(___lmul@multiplier+1)^0,c
  9445  004AF8  6A03               	clrf	(___lmul@multiplier+2)^0,c
  9446  004AFA  6A04               	clrf	(___lmul@multiplier+3)^0,c
  9447  004AFC  0060  F078  F005   	movff	setLED@g,___lmul@multiplicand
  9448  004B02  0060  F07C  F006   	movff	setLED@g+1,___lmul@multiplicand+1
  9449  004B08  0060  F080  F007   	movff	setLED@g+2,___lmul@multiplicand+2
  9450  004B0E  0060  F084  F008   	movff	setLED@g+3,___lmul@multiplicand+3
  9451  004B14  ECEF  F02F         	call	___lmul	;wreg free
  9452  004B18  0060  F004  F00D   	movff	?___lmul,___lldiv@dividend
  9453  004B1E  0060  F008  F00E   	movff	?___lmul+1,___lldiv@dividend+1
  9454  004B24  0060  F00C  F00F   	movff	?___lmul+2,___lldiv@dividend+2
  9455  004B2A  0060  F010  F010   	movff	?___lmul+3,___lldiv@dividend+3
  9456  004B30  0EFF               	movlw	255
  9457  004B32  6E11               	movwf	___lldiv@divisor^0,c
  9458  004B34  0E00               	movlw	0
  9459  004B36  6E12               	movwf	(___lldiv@divisor+1)^0,c
  9460  004B38  0E00               	movlw	0
  9461  004B3A  6E13               	movwf	(___lldiv@divisor+2)^0,c
  9462  004B3C  0E00               	movlw	0
  9463  004B3E  6E14               	movwf	(___lldiv@divisor+3)^0,c
  9464  004B40  EC34  F02E         	call	___lldiv	;wreg free
  9465  004B44  0060  F034  F042   	movff	?___lldiv,setLED@sg
  9466  004B4A  0060  F038  F043   	movff	?___lldiv+1,setLED@sg+1
  9467  004B50  0060  F03C  F044   	movff	?___lldiv+2,setLED@sg+2
  9468  004B56  0060  F040  F045   	movff	?___lldiv+3,setLED@sg+3
  9469                           
  9470                           ;main.c: 92:     uint32_t sb = b * ledBrightness / 255;
  9471  004B5C  505F               	movf	_ledBrightness^0,w,c
  9472  004B5E  6E01               	movwf	___lmul@multiplier^0,c
  9473  004B60  6A02               	clrf	(___lmul@multiplier+1)^0,c
  9474  004B62  6A03               	clrf	(___lmul@multiplier+2)^0,c
  9475  004B64  6A04               	clrf	(___lmul@multiplier+3)^0,c
  9476  004B66  0060  F088  F005   	movff	setLED@b,___lmul@multiplicand
  9477  004B6C  0060  F08C  F006   	movff	setLED@b+1,___lmul@multiplicand+1
  9478  004B72  0060  F090  F007   	movff	setLED@b+2,___lmul@multiplicand+2
  9479  004B78  0060  F094  F008   	movff	setLED@b+3,___lmul@multiplicand+3
  9480  004B7E  ECEF  F02F         	call	___lmul	;wreg free
  9481  004B82  0060  F004  F00D   	movff	?___lmul,___lldiv@dividend
  9482  004B88  0060  F008  F00E   	movff	?___lmul+1,___lldiv@dividend+1
  9483  004B8E  0060  F00C  F00F   	movff	?___lmul+2,___lldiv@dividend+2
  9484  004B94  0060  F010  F010   	movff	?___lmul+3,___lldiv@dividend+3
  9485  004B9A  0EFF               	movlw	255
  9486  004B9C  6E11               	movwf	___lldiv@divisor^0,c
  9487  004B9E  0E00               	movlw	0
  9488  004BA0  6E12               	movwf	(___lldiv@divisor+1)^0,c
  9489  004BA2  0E00               	movlw	0
  9490  004BA4  6E13               	movwf	(___lldiv@divisor+2)^0,c
  9491  004BA6  0E00               	movlw	0
  9492  004BA8  6E14               	movwf	(___lldiv@divisor+3)^0,c
  9493  004BAA  EC34  F02E         	call	___lldiv	;wreg free
  9494  004BAE  0060  F034  F046   	movff	?___lldiv,setLED@sb
  9495  004BB4  0060  F038  F047   	movff	?___lldiv+1,setLED@sb+1
  9496  004BBA  0060  F03C  F048   	movff	?___lldiv+2,setLED@sb+2
  9497  004BC0  0060  F040  F049   	movff	?___lldiv+3,setLED@sb+3
  9498  004BC6                     
  9499                           ;main.c: 94:     CCPR3H = (sr < 4095 ? sr : 4095) >> 8;
  9500  004BC6  5041               	movf	(setLED@sr+3)^0,w,c
  9501  004BC8  1040               	iorwf	(setLED@sr+2)^0,w,c
  9502  004BCA  E10A               	bnz	u5180
  9503  004BCC  283E               	incf	setLED@sr^0,w,c
  9504  004BCE  0E0F               	movlw	15
  9505  004BD0  583F               	subwfb	(setLED@sr+1)^0,w,c
  9506  004BD2  A0D8               	btfss	status,0,c
  9507  004BD4  EFEE  F025         	goto	u5181
  9508  004BD8  EFF0  F025         	goto	u5180
  9509  004BDC                     u5181:
  9510  004BDC  EFFA  F025         	goto	l176
  9511  004BE0                     u5180:
  9512  004BE0  0EFF               	movlw	255
  9513  004BE2  6E26               	movwf	_setLED$291^0,c
  9514  004BE4  0E0F               	movlw	15
  9515  004BE6  6E27               	movwf	(_setLED$291+1)^0,c
  9516  004BE8  0E00               	movlw	0
  9517  004BEA  6E28               	movwf	(_setLED$291+2)^0,c
  9518  004BEC  0E00               	movlw	0
  9519  004BEE  6E29               	movwf	(_setLED$291+3)^0,c
  9520  004BF0  EF06  F026         	goto	l178
  9521  004BF4                     l176:
  9522  004BF4  0060  F0F8  F026   	movff	setLED@sr,_setLED$291
  9523  004BFA  0060  F0FC  F027   	movff	setLED@sr+1,_setLED$291+1
  9524  004C00  0060  F100  F028   	movff	setLED@sr+2,_setLED$291+2
  9525  004C06  0060  F104  F029   	movff	setLED@sr+3,_setLED$291+3
  9526  004C0C                     l178:
  9527  004C0C  0060  F09F  FF75   	movff	_setLED$291+1,16245	;volatile
  9528  004C12                     
  9529                           ;main.c: 95:     CCPR3L = (sr < 4095 ? sr : 4095) & 0xff;
  9530  004C12  5041               	movf	(setLED@sr+3)^0,w,c
  9531  004C14  1040               	iorwf	(setLED@sr+2)^0,w,c
  9532  004C16  E10A               	bnz	u5190
  9533  004C18  283E               	incf	setLED@sr^0,w,c
  9534  004C1A  0E0F               	movlw	15
  9535  004C1C  583F               	subwfb	(setLED@sr+1)^0,w,c
  9536  004C1E  A0D8               	btfss	status,0,c
  9537  004C20  EF14  F026         	goto	u5191
  9538  004C24  EF16  F026         	goto	u5190
  9539  004C28                     u5191:
  9540  004C28  EF20  F026         	goto	l180
  9541  004C2C                     u5190:
  9542  004C2C  0EFF               	movlw	255
  9543  004C2E  6E2A               	movwf	_setLED$292^0,c
  9544  004C30  0E0F               	movlw	15
  9545  004C32  6E2B               	movwf	(_setLED$292+1)^0,c
  9546  004C34  0E00               	movlw	0
  9547  004C36  6E2C               	movwf	(_setLED$292+2)^0,c
  9548  004C38  0E00               	movlw	0
  9549  004C3A  6E2D               	movwf	(_setLED$292+3)^0,c
  9550  004C3C  EF2C  F026         	goto	l182
  9551  004C40                     l180:
  9552  004C40  0060  F0F8  F02A   	movff	setLED@sr,_setLED$292
  9553  004C46  0060  F0FC  F02B   	movff	setLED@sr+1,_setLED$292+1
  9554  004C4C  0060  F100  F02C   	movff	setLED@sr+2,_setLED$292+2
  9555  004C52  0060  F104  F02D   	movff	setLED@sr+3,_setLED$292+3
  9556  004C58                     l182:
  9557  004C58  0060  F0AB  FF74   	movff	_setLED$292,16244	;volatile
  9558  004C5E                     
  9559                           ;main.c: 96:     CCPR2H = (sg < 4095 ? sg : 4095) >> 8;
  9560  004C5E  5045               	movf	(setLED@sg+3)^0,w,c
  9561  004C60  1044               	iorwf	(setLED@sg+2)^0,w,c
  9562  004C62  E10A               	bnz	u5200
  9563  004C64  2842               	incf	setLED@sg^0,w,c
  9564  004C66  0E0F               	movlw	15
  9565  004C68  5843               	subwfb	(setLED@sg+1)^0,w,c
  9566  004C6A  A0D8               	btfss	status,0,c
  9567  004C6C  EF3A  F026         	goto	u5201
  9568  004C70  EF3C  F026         	goto	u5200
  9569  004C74                     u5201:
  9570  004C74  EF46  F026         	goto	l184
  9571  004C78                     u5200:
  9572  004C78  0EFF               	movlw	255
  9573  004C7A  6E2E               	movwf	_setLED$293^0,c
  9574  004C7C  0E0F               	movlw	15
  9575  004C7E  6E2F               	movwf	(_setLED$293+1)^0,c
  9576  004C80  0E00               	movlw	0
  9577  004C82  6E30               	movwf	(_setLED$293+2)^0,c
  9578  004C84  0E00               	movlw	0
  9579  004C86  6E31               	movwf	(_setLED$293+3)^0,c
  9580  004C88  EF52  F026         	goto	l186
  9581  004C8C                     l184:
  9582  004C8C  0060  F108  F02E   	movff	setLED@sg,_setLED$293
  9583  004C92  0060  F10C  F02F   	movff	setLED@sg+1,_setLED$293+1
  9584  004C98  0060  F110  F030   	movff	setLED@sg+2,_setLED$293+2
  9585  004C9E  0060  F114  F031   	movff	setLED@sg+3,_setLED$293+3
  9586  004CA4                     l186:
  9587  004CA4  0060  F0BF  FF79   	movff	_setLED$293+1,16249	;volatile
  9588  004CAA                     
  9589                           ;main.c: 97:     CCPR2L = (sg < 4095 ? sg : 4095) & 0xff;
  9590  004CAA  5045               	movf	(setLED@sg+3)^0,w,c
  9591  004CAC  1044               	iorwf	(setLED@sg+2)^0,w,c
  9592  004CAE  E10A               	bnz	u5210
  9593  004CB0  2842               	incf	setLED@sg^0,w,c
  9594  004CB2  0E0F               	movlw	15
  9595  004CB4  5843               	subwfb	(setLED@sg+1)^0,w,c
  9596  004CB6  A0D8               	btfss	status,0,c
  9597  004CB8  EF60  F026         	goto	u5211
  9598  004CBC  EF62  F026         	goto	u5210
  9599  004CC0                     u5211:
  9600  004CC0  EF6C  F026         	goto	l188
  9601  004CC4                     u5210:
  9602  004CC4  0EFF               	movlw	255
  9603  004CC6  6E32               	movwf	_setLED$294^0,c
  9604  004CC8  0E0F               	movlw	15
  9605  004CCA  6E33               	movwf	(_setLED$294+1)^0,c
  9606  004CCC  0E00               	movlw	0
  9607  004CCE  6E34               	movwf	(_setLED$294+2)^0,c
  9608  004CD0  0E00               	movlw	0
  9609  004CD2  6E35               	movwf	(_setLED$294+3)^0,c
  9610  004CD4  EF78  F026         	goto	l190
  9611  004CD8                     l188:
  9612  004CD8  0060  F108  F032   	movff	setLED@sg,_setLED$294
  9613  004CDE  0060  F10C  F033   	movff	setLED@sg+1,_setLED$294+1
  9614  004CE4  0060  F110  F034   	movff	setLED@sg+2,_setLED$294+2
  9615  004CEA  0060  F114  F035   	movff	setLED@sg+3,_setLED$294+3
  9616  004CF0                     l190:
  9617  004CF0  0060  F0CB  FF78   	movff	_setLED$294,16248	;volatile
  9618  004CF6                     
  9619                           ;main.c: 98:     CCPR4H = (sb < 4095 ? sb : 4095) >> 8;
  9620  004CF6  5049               	movf	(setLED@sb+3)^0,w,c
  9621  004CF8  1048               	iorwf	(setLED@sb+2)^0,w,c
  9622  004CFA  E10A               	bnz	u5220
  9623  004CFC  2846               	incf	setLED@sb^0,w,c
  9624  004CFE  0E0F               	movlw	15
  9625  004D00  5847               	subwfb	(setLED@sb+1)^0,w,c
  9626  004D02  A0D8               	btfss	status,0,c
  9627  004D04  EF86  F026         	goto	u5221
  9628  004D08  EF88  F026         	goto	u5220
  9629  004D0C                     u5221:
  9630  004D0C  EF92  F026         	goto	l192
  9631  004D10                     u5220:
  9632  004D10  0EFF               	movlw	255
  9633  004D12  6E36               	movwf	_setLED$295^0,c
  9634  004D14  0E0F               	movlw	15
  9635  004D16  6E37               	movwf	(_setLED$295+1)^0,c
  9636  004D18  0E00               	movlw	0
  9637  004D1A  6E38               	movwf	(_setLED$295+2)^0,c
  9638  004D1C  0E00               	movlw	0
  9639  004D1E  6E39               	movwf	(_setLED$295+3)^0,c
  9640  004D20  EF9E  F026         	goto	l194
  9641  004D24                     l192:
  9642  004D24  0060  F118  F036   	movff	setLED@sb,_setLED$295
  9643  004D2A  0060  F11C  F037   	movff	setLED@sb+1,_setLED$295+1
  9644  004D30  0060  F120  F038   	movff	setLED@sb+2,_setLED$295+2
  9645  004D36  0060  F124  F039   	movff	setLED@sb+3,_setLED$295+3
  9646  004D3C                     l194:
  9647  004D3C  0060  F0DF  FF71   	movff	_setLED$295+1,16241	;volatile
  9648  004D42                     
  9649                           ;main.c: 99:     CCPR4L = (sb < 4095 ? sb : 4095) & 0xff;
  9650  004D42  5049               	movf	(setLED@sb+3)^0,w,c
  9651  004D44  1048               	iorwf	(setLED@sb+2)^0,w,c
  9652  004D46  E10A               	bnz	u5230
  9653  004D48  2846               	incf	setLED@sb^0,w,c
  9654  004D4A  0E0F               	movlw	15
  9655  004D4C  5847               	subwfb	(setLED@sb+1)^0,w,c
  9656  004D4E  A0D8               	btfss	status,0,c
  9657  004D50  EFAC  F026         	goto	u5231
  9658  004D54  EFAE  F026         	goto	u5230
  9659  004D58                     u5231:
  9660  004D58  EFB8  F026         	goto	l196
  9661  004D5C                     u5230:
  9662  004D5C  0EFF               	movlw	255
  9663  004D5E  6E3A               	movwf	_setLED$296^0,c
  9664  004D60  0E0F               	movlw	15
  9665  004D62  6E3B               	movwf	(_setLED$296+1)^0,c
  9666  004D64  0E00               	movlw	0
  9667  004D66  6E3C               	movwf	(_setLED$296+2)^0,c
  9668  004D68  0E00               	movlw	0
  9669  004D6A  6E3D               	movwf	(_setLED$296+3)^0,c
  9670  004D6C  EFC4  F026         	goto	l198
  9671  004D70                     l196:
  9672  004D70  0060  F118  F03A   	movff	setLED@sb,_setLED$296
  9673  004D76  0060  F11C  F03B   	movff	setLED@sb+1,_setLED$296+1
  9674  004D7C  0060  F120  F03C   	movff	setLED@sb+2,_setLED$296+2
  9675  004D82  0060  F124  F03D   	movff	setLED@sb+3,_setLED$296+3
  9676  004D88                     l198:
  9677  004D88  0060  F0EB  FF70   	movff	_setLED$296,16240	;volatile
  9678  004D8E  0012               	return		;funcret
  9679  004D90                     __end_of_setLED:
  9680                           	opt callstack 0
  9681                           
  9682 ;; *************** function ___lmul *****************
  9683 ;; Defined at:
  9684 ;;		line 15 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\Umul32.c"
  9685 ;; Parameters:    Size  Location     Type
  9686 ;;  multiplier      4    0[COMRAM] unsigned long 
  9687 ;;  multiplicand    4    4[COMRAM] unsigned long 
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;  product         4    8[COMRAM] unsigned long 
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  4    0[COMRAM] unsigned long 
  9692 ;; Registers used:
  9693 ;;		wreg, status,2, status,0
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9699 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9700 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9702 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9703 ;;Total ram usage:       12 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; This function calls:
  9706 ;;		Nothing
  9707 ;; This function is called by:
  9708 ;;		_setLED
  9709 ;;		_main_loop
  9710 ;; This function uses a non-reentrant model
  9711 ;;
  9712                           
  9713                           	psect	text32
  9714  005FDE                     __ptext32:
  9715                           	opt callstack 0
  9716  005FDE                     ___lmul:
  9717                           	opt callstack 28
  9718  005FDE  0E00               	movlw	0
  9719  005FE0  6E09               	movwf	___lmul@product^0,c
  9720  005FE2  0E00               	movlw	0
  9721  005FE4  6E0A               	movwf	(___lmul@product+1)^0,c
  9722  005FE6  0E00               	movlw	0
  9723  005FE8  6E0B               	movwf	(___lmul@product+2)^0,c
  9724  005FEA  0E00               	movlw	0
  9725  005FEC  6E0C               	movwf	(___lmul@product+3)^0,c
  9726  005FEE                     l4207:
  9727  005FEE  A001               	btfss	___lmul@multiplier^0,0,c
  9728  005FF0  EFFC  F02F         	goto	u5131
  9729  005FF4  EFFE  F02F         	goto	u5130
  9730  005FF8                     u5131:
  9731  005FF8  EF06  F030         	goto	l4211
  9732  005FFC                     u5130:
  9733  005FFC  5005               	movf	___lmul@multiplicand^0,w,c
  9734  005FFE  2609               	addwf	___lmul@product^0,f,c
  9735  006000  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  9736  006002  220A               	addwfc	(___lmul@product+1)^0,f,c
  9737  006004  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  9738  006006  220B               	addwfc	(___lmul@product+2)^0,f,c
  9739  006008  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  9740  00600A  220C               	addwfc	(___lmul@product+3)^0,f,c
  9741  00600C                     l4211:
  9742  00600C  90D8               	bcf	status,0,c
  9743  00600E  3605               	rlcf	___lmul@multiplicand^0,f,c
  9744  006010  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  9745  006012  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  9746  006014  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  9747  006016  90D8               	bcf	status,0,c
  9748  006018  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  9749  00601A  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  9750  00601C  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  9751  00601E  3201               	rrcf	___lmul@multiplier^0,f,c
  9752  006020  5001               	movf	___lmul@multiplier^0,w,c
  9753  006022  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  9754  006024  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  9755  006026  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  9756  006028  A4D8               	btfss	status,2,c
  9757  00602A  EF19  F030         	goto	u5141
  9758  00602E  EF1B  F030         	goto	u5140
  9759  006032                     u5141:
  9760  006032  EFF7  F02F         	goto	l4207
  9761  006036                     u5140:
  9762  006036  0060  F024  F001   	movff	___lmul@product,?___lmul
  9763  00603C  0060  F028  F002   	movff	___lmul@product+1,?___lmul+1
  9764  006042  0060  F02C  F003   	movff	___lmul@product+2,?___lmul+2
  9765  006048  0060  F030  F004   	movff	___lmul@product+3,?___lmul+3
  9766  00604E  0012               	return		;funcret
  9767  006050                     __end_of___lmul:
  9768                           	opt callstack 0
  9769                           
  9770 ;; *************** function ___lldiv *****************
  9771 ;; Defined at:
  9772 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\__lldiv.c"
  9773 ;; Parameters:    Size  Location     Type
  9774 ;;  dividend        4   12[COMRAM] unsigned long 
  9775 ;;  divisor         4   16[COMRAM] unsigned long 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  quotient        4   20[COMRAM] unsigned long 
  9778 ;;  counter         1   24[COMRAM] unsigned char 
  9779 ;; Return value:  Size  Location     Type
  9780 ;;                  4   12[COMRAM] unsigned long 
  9781 ;; Registers used:
  9782 ;;		wreg, status,2, status,0
  9783 ;; Tracked objects:
  9784 ;;		On entry : 0/0
  9785 ;;		On exit  : 0/0
  9786 ;;		Unchanged: 0/0
  9787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9788 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9789 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9791 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9792 ;;Total ram usage:       13 bytes
  9793 ;; Hardware stack levels used:    1
  9794 ;; This function calls:
  9795 ;;		Nothing
  9796 ;; This function is called by:
  9797 ;;		_setLED
  9798 ;;		_main_loop
  9799 ;; This function uses a non-reentrant model
  9800 ;;
  9801                           
  9802                           	psect	text33
  9803  005C68                     __ptext33:
  9804                           	opt callstack 0
  9805  005C68                     ___lldiv:
  9806                           	opt callstack 28
  9807  005C68  0E00               	movlw	0
  9808  005C6A  6E15               	movwf	___lldiv@quotient^0,c
  9809  005C6C  0E00               	movlw	0
  9810  005C6E  6E16               	movwf	(___lldiv@quotient+1)^0,c
  9811  005C70  0E00               	movlw	0
  9812  005C72  6E17               	movwf	(___lldiv@quotient+2)^0,c
  9813  005C74  0E00               	movlw	0
  9814  005C76  6E18               	movwf	(___lldiv@quotient+3)^0,c
  9815  005C78  5011               	movf	___lldiv@divisor^0,w,c
  9816  005C7A  1012               	iorwf	(___lldiv@divisor+1)^0,w,c
  9817  005C7C  1013               	iorwf	(___lldiv@divisor+2)^0,w,c
  9818  005C7E  1014               	iorwf	(___lldiv@divisor+3)^0,w,c
  9819  005C80  B4D8               	btfsc	status,2,c
  9820  005C82  EF45  F02E         	goto	u5151
  9821  005C86  EF47  F02E         	goto	u5150
  9822  005C8A                     u5151:
  9823  005C8A  EF7D  F02E         	goto	l510
  9824  005C8E                     u5150:
  9825  005C8E  0E01               	movlw	1
  9826  005C90  6E19               	movwf	___lldiv@counter^0,c
  9827  005C92  EF51  F02E         	goto	l4223
  9828  005C96                     l4221:
  9829  005C96  90D8               	bcf	status,0,c
  9830  005C98  3611               	rlcf	___lldiv@divisor^0,f,c
  9831  005C9A  3612               	rlcf	(___lldiv@divisor+1)^0,f,c
  9832  005C9C  3613               	rlcf	(___lldiv@divisor+2)^0,f,c
  9833  005C9E  3614               	rlcf	(___lldiv@divisor+3)^0,f,c
  9834  005CA0  2A19               	incf	___lldiv@counter^0,f,c
  9835  005CA2                     l4223:
  9836  005CA2  AE14               	btfss	(___lldiv@divisor+3)^0,7,c
  9837  005CA4  EF56  F02E         	goto	u5161
  9838  005CA8  EF58  F02E         	goto	u5160
  9839  005CAC                     u5161:
  9840  005CAC  EF4B  F02E         	goto	l4221
  9841  005CB0                     u5160:
  9842  005CB0                     l4225:
  9843  005CB0  90D8               	bcf	status,0,c
  9844  005CB2  3615               	rlcf	___lldiv@quotient^0,f,c
  9845  005CB4  3616               	rlcf	(___lldiv@quotient+1)^0,f,c
  9846  005CB6  3617               	rlcf	(___lldiv@quotient+2)^0,f,c
  9847  005CB8  3618               	rlcf	(___lldiv@quotient+3)^0,f,c
  9848  005CBA  5011               	movf	___lldiv@divisor^0,w,c
  9849  005CBC  5C0D               	subwf	___lldiv@dividend^0,w,c
  9850  005CBE  5012               	movf	(___lldiv@divisor+1)^0,w,c
  9851  005CC0  580E               	subwfb	(___lldiv@dividend+1)^0,w,c
  9852  005CC2  5013               	movf	(___lldiv@divisor+2)^0,w,c
  9853  005CC4  580F               	subwfb	(___lldiv@dividend+2)^0,w,c
  9854  005CC6  5014               	movf	(___lldiv@divisor+3)^0,w,c
  9855  005CC8  5810               	subwfb	(___lldiv@dividend+3)^0,w,c
  9856  005CCA  A0D8               	btfss	status,0,c
  9857  005CCC  EF6A  F02E         	goto	u5171
  9858  005CD0  EF6C  F02E         	goto	u5170
  9859  005CD4                     u5171:
  9860  005CD4  EF75  F02E         	goto	l4233
  9861  005CD8                     u5170:
  9862  005CD8  5011               	movf	___lldiv@divisor^0,w,c
  9863  005CDA  5E0D               	subwf	___lldiv@dividend^0,f,c
  9864  005CDC  5012               	movf	(___lldiv@divisor+1)^0,w,c
  9865  005CDE  5A0E               	subwfb	(___lldiv@dividend+1)^0,f,c
  9866  005CE0  5013               	movf	(___lldiv@divisor+2)^0,w,c
  9867  005CE2  5A0F               	subwfb	(___lldiv@dividend+2)^0,f,c
  9868  005CE4  5014               	movf	(___lldiv@divisor+3)^0,w,c
  9869  005CE6  5A10               	subwfb	(___lldiv@dividend+3)^0,f,c
  9870  005CE8  8015               	bsf	___lldiv@quotient^0,0,c
  9871  005CEA                     l4233:
  9872  005CEA  90D8               	bcf	status,0,c
  9873  005CEC  3214               	rrcf	(___lldiv@divisor+3)^0,f,c
  9874  005CEE  3213               	rrcf	(___lldiv@divisor+2)^0,f,c
  9875  005CF0  3212               	rrcf	(___lldiv@divisor+1)^0,f,c
  9876  005CF2  3211               	rrcf	___lldiv@divisor^0,f,c
  9877  005CF4  2E19               	decfsz	___lldiv@counter^0,f,c
  9878  005CF6  EF58  F02E         	goto	l4225
  9879  005CFA                     l510:
  9880  005CFA  0060  F054  F00D   	movff	___lldiv@quotient,?___lldiv
  9881  005D00  0060  F058  F00E   	movff	___lldiv@quotient+1,?___lldiv+1
  9882  005D06  0060  F05C  F00F   	movff	___lldiv@quotient+2,?___lldiv+2
  9883  005D0C  0060  F060  F010   	movff	___lldiv@quotient+3,?___lldiv+3
  9884  005D12  0012               	return		;funcret
  9885  005D14                     __end_of___lldiv:
  9886                           	opt callstack 0
  9887                           
  9888 ;; *************** function _lcd_set_data_addr *****************
  9889 ;; Defined at:
  9890 ;;		line 38 in file "char_lcd.c"
  9891 ;; Parameters:    Size  Location     Type
  9892 ;;  addr            1    wreg     unsigned char 
  9893 ;; Auto vars:     Size  Location     Type
  9894 ;;  addr            1    4[COMRAM] unsigned char 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  1    wreg      void 
  9897 ;; Registers used:
  9898 ;;		wreg, status,2, status,0, cstack
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9905 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9907 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9908 ;;Total ram usage:        1 bytes
  9909 ;; Hardware stack levels used:    1
  9910 ;; Hardware stack levels required when called:    1
  9911 ;; This function calls:
  9912 ;;		_lcd_write
  9913 ;; This function is called by:
  9914 ;;		_main_loop
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           	psect	text34
  9919  006434                     __ptext34:
  9920                           	opt callstack 0
  9921  006434                     _lcd_set_data_addr:
  9922                           	opt callstack 28
  9923                           
  9924                           ;incstack = 0
  9925                           ;lcd_set_data_addr@addr stored from wreg
  9926  006434  6E05               	movwf	lcd_set_data_addr@addr^0,c
  9927  006436                     
  9928                           ;char_lcd.c: 39:     lcd_write(0, 0b10000000 | (addr & 0b01111111), 0);
  9929  006436  5005               	movf	lcd_set_data_addr@addr^0,w,c
  9930  006438  0B7F               	andlw	127
  9931  00643A  0980               	iorlw	128
  9932  00643C  6E01               	movwf	lcd_write@data^0,c
  9933  00643E  0E00               	movlw	0
  9934  006440  6E02               	movwf	lcd_write@longdelay^0,c
  9935  006442  0E00               	movlw	0
  9936  006444  ECC2  F030         	call	_lcd_write
  9937  006448  0012               	return		;funcret
  9938  00644A                     __end_of_lcd_set_data_addr:
  9939                           	opt callstack 0
  9940                           
  9941 ;; *************** function _lcd_print *****************
  9942 ;; Defined at:
  9943 ;;		line 53 in file "char_lcd.c"
  9944 ;; Parameters:    Size  Location     Type
  9945 ;;  string          2    4[COMRAM] PTR unsigned char 
  9946 ;;		 -> STR_5(13), main_loop@batmsg(16), 
  9947 ;; Auto vars:     Size  Location     Type
  9948 ;;  i               1    8[COMRAM] unsigned char 
  9949 ;; Return value:  Size  Location     Type
  9950 ;;                  1    wreg      void 
  9951 ;; Registers used:
  9952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9953 ;; Tracked objects:
  9954 ;;		On entry : 0/0
  9955 ;;		On exit  : 0/0
  9956 ;;		Unchanged: 0/0
  9957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9961 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9962 ;;Total ram usage:        5 bytes
  9963 ;; Hardware stack levels used:    1
  9964 ;; Hardware stack levels required when called:    1
  9965 ;; This function calls:
  9966 ;;		_lcd_write
  9967 ;; This function is called by:
  9968 ;;		_main_loop
  9969 ;;		_main
  9970 ;; This function uses a non-reentrant model
  9971 ;;
  9972                           
  9973                           	psect	text35
  9974  005DBE                     __ptext35:
  9975                           	opt callstack 0
  9976  005DBE                     _lcd_print:
  9977                           	opt callstack 28
  9978  005DBE                     
  9979                           ;char_lcd.c: 54:     uint8_t i = 0;
  9980  005DBE  0E00               	movlw	0
  9981  005DC0  6E09               	movwf	lcd_print@i^0,c
  9982                           
  9983                           ;char_lcd.c: 55:     while (string[i] != 0 && i < 255) {
  9984  005DC2  EF05  F02F         	goto	l4283
  9985  005DC6                     l4279:
  9986                           
  9987                           ;char_lcd.c: 56:         lcd_write(1, string[i++], 0);
  9988  005DC6  5009               	movf	lcd_print@i^0,w,c
  9989  005DC8  2405               	addwf	lcd_print@string^0,w,c
  9990  005DCA  6E07               	movwf	??_lcd_print^0,c
  9991  005DCC  0E00               	movlw	0
  9992  005DCE  2006               	addwfc	(lcd_print@string+1)^0,w,c
  9993  005DD0  6E08               	movwf	(??_lcd_print+1)^0,c
  9994  005DD2  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
  9995  005DD8  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
  9996  005DDE  0E00               	movlw	low (__smallconst shr (0+16))
  9997  005DE0  6EF8               	movwf	tblptru,c
  9998  005DE2  0E1F               	movlw	(high __ramtop+-1)
  9999  005DE4  64F7               	cpfsgt	tblptrh,c
 10000  005DE6  D003               	bra	u5247
 10001  005DE8  0008               	tblrd		*
 10002  005DEA  50F5               	movf	tablat,w,c
 10003  005DEC  D007               	bra	u5240
 10004  005DEE                     u5247:
 10005  005DEE  006F FFDB FFE1     	movff	tblptrl,fsr1l
 10006  005DF4  006F FFDF FFE2     	movff	tblptrh,fsr1h
 10007  005DFA  50E7               	movf	indf1,w,c
 10008  005DFC                     u5240:
 10009  005DFC  6E01               	movwf	lcd_write@data^0,c
 10010  005DFE  0E00               	movlw	0
 10011  005E00  6E02               	movwf	lcd_write@longdelay^0,c
 10012  005E02  0E01               	movlw	1
 10013  005E04  ECC2  F030         	call	_lcd_write
 10014  005E08  2A09               	incf	lcd_print@i^0,f,c
 10015  005E0A                     l4283:
 10016                           
 10017                           ;char_lcd.c: 55:     while (string[i] != 0 && i < 255) {
 10018  005E0A  5009               	movf	lcd_print@i^0,w,c
 10019  005E0C  2405               	addwf	lcd_print@string^0,w,c
 10020  005E0E  6E07               	movwf	??_lcd_print^0,c
 10021  005E10  0E00               	movlw	0
 10022  005E12  2006               	addwfc	(lcd_print@string+1)^0,w,c
 10023  005E14  6E08               	movwf	(??_lcd_print+1)^0,c
 10024  005E16  0060  F01F  FFF6   	movff	??_lcd_print,tblptrl
 10025  005E1C  0060  F023  FFF7   	movff	??_lcd_print+1,tblptrh
 10026  005E22  0E00               	movlw	low (__smallconst shr (0+16))
 10027  005E24  6EF8               	movwf	tblptru,c
 10028  005E26  0E1F               	movlw	(high __ramtop+-1)
 10029  005E28  64F7               	cpfsgt	tblptrh,c
 10030  005E2A  D003               	bra	u5257
 10031  005E2C  0008               	tblrd		*
 10032  005E2E  50F5               	movf	tablat,w,c
 10033  005E30  D007               	bra	u5250
 10034  005E32                     u5257:
 10035  005E32  006F FFDB FFE1     	movff	tblptrl,fsr1l
 10036  005E38  006F FFDF FFE2     	movff	tblptrh,fsr1h
 10037  005E3E  50E7               	movf	indf1,w,c
 10038  005E40                     u5250:
 10039  005E40  0900               	iorlw	0
 10040  005E42  B4D8               	btfsc	status,2,c
 10041  005E44  EF26  F02F         	goto	u5261
 10042  005E48  EF28  F02F         	goto	u5260
 10043  005E4C                     u5261:
 10044  005E4C  EF30  F02F         	goto	l302
 10045  005E50                     u5260:
 10046  005E50  2809               	incf	lcd_print@i^0,w,c
 10047  005E52  A4D8               	btfss	status,2,c
 10048  005E54  EF2E  F02F         	goto	u5271
 10049  005E58  EF30  F02F         	goto	u5270
 10050  005E5C                     u5271:
 10051  005E5C  EFE3  F02E         	goto	l4279
 10052  005E60                     u5270:
 10053  005E60                     l302:
 10054  005E60  0012               	return		;funcret
 10055  005E62                     __end_of_lcd_print:
 10056                           	opt callstack 0
 10057                           
 10058 ;; *************** function ___xxtofl *****************
 10059 ;; Defined at:
 10060 ;;		line 10 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\xxtofl.c"
 10061 ;; Parameters:    Size  Location     Type
 10062 ;;  sign            1    wreg     unsigned char 
 10063 ;;  val             4    0[COMRAM] long 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  sign            1    8[COMRAM] unsigned char 
 10066 ;;  arg             4   10[COMRAM] unsigned long 
 10067 ;;  exp             1    9[COMRAM] unsigned char 
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  4    0[COMRAM] unsigned char 
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10077 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10078 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10079 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10080 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10081 ;;Total ram usage:       14 bytes
 10082 ;; Hardware stack levels used:    1
 10083 ;; This function calls:
 10084 ;;		Nothing
 10085 ;; This function is called by:
 10086 ;;		_main_loop
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           	psect	text36
 10091  004FE4                     __ptext36:
 10092                           	opt callstack 0
 10093  004FE4                     ___xxtofl:
 10094                           	opt callstack 29
 10095                           
 10096                           ;incstack = 0
 10097                           ;___xxtofl@sign stored from wreg
 10098  004FE4  6E09               	movwf	___xxtofl@sign^0,c
 10099  004FE6  5009               	movf	___xxtofl@sign^0,w,c
 10100  004FE8  B4D8               	btfsc	status,2,c
 10101  004FEA  EFF9  F027         	goto	u5311
 10102  004FEE  EFFB  F027         	goto	u5310
 10103  004FF2                     u5311:
 10104  004FF2  EF25  F028         	goto	l1138
 10105  004FF6                     u5310:
 10106  004FF6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10107  004FF8  EF02  F028         	goto	u5320
 10108  004FFC  EF00  F028         	goto	u5321
 10109  005000                     u5321:
 10110  005000  EF25  F028         	goto	l1138
 10111  005004                     u5320:
 10112  005004  0060  F004  F005   	movff	___xxtofl@val,??___xxtofl
 10113  00500A  0060  F008  F006   	movff	___xxtofl@val+1,??___xxtofl+1
 10114  005010  0060  F00C  F007   	movff	___xxtofl@val+2,??___xxtofl+2
 10115  005016  0060  F010  F008   	movff	___xxtofl@val+3,??___xxtofl+3
 10116  00501C  1E05               	comf	??___xxtofl^0,f,c
 10117  00501E  1E06               	comf	(??___xxtofl+1)^0,f,c
 10118  005020  1E07               	comf	(??___xxtofl+2)^0,f,c
 10119  005022  1E08               	comf	(??___xxtofl+3)^0,f,c
 10120  005024  2A05               	incf	??___xxtofl^0,f,c
 10121  005026  0E00               	movlw	0
 10122  005028  2206               	addwfc	(??___xxtofl+1)^0,f,c
 10123  00502A  2207               	addwfc	(??___xxtofl+2)^0,f,c
 10124  00502C  2208               	addwfc	(??___xxtofl+3)^0,f,c
 10125  00502E  0060  F014  F00B   	movff	??___xxtofl,___xxtofl@arg
 10126  005034  0060  F018  F00C   	movff	??___xxtofl+1,___xxtofl@arg+1
 10127  00503A  0060  F01C  F00D   	movff	??___xxtofl+2,___xxtofl@arg+2
 10128  005040  0060  F020  F00E   	movff	??___xxtofl+3,___xxtofl@arg+3
 10129  005046  EF31  F028         	goto	l4309
 10130  00504A                     l1138:
 10131  00504A  0060  F004  F00B   	movff	___xxtofl@val,___xxtofl@arg
 10132  005050  0060  F008  F00C   	movff	___xxtofl@val+1,___xxtofl@arg+1
 10133  005056  0060  F00C  F00D   	movff	___xxtofl@val+2,___xxtofl@arg+2
 10134  00505C  0060  F010  F00E   	movff	___xxtofl@val+3,___xxtofl@arg+3
 10135  005062                     l4309:
 10136  005062  5001               	movf	___xxtofl@val^0,w,c
 10137  005064  1002               	iorwf	(___xxtofl@val+1)^0,w,c
 10138  005066  1003               	iorwf	(___xxtofl@val+2)^0,w,c
 10139  005068  1004               	iorwf	(___xxtofl@val+3)^0,w,c
 10140  00506A  A4D8               	btfss	status,2,c
 10141  00506C  EF3A  F028         	goto	u5331
 10142  005070  EF3C  F028         	goto	u5330
 10143  005074                     u5331:
 10144  005074  EF46  F028         	goto	l4315
 10145  005078                     u5330:
 10146  005078  0E00               	movlw	0
 10147  00507A  6E01               	movwf	?___xxtofl^0,c
 10148  00507C  0E00               	movlw	0
 10149  00507E  6E02               	movwf	(?___xxtofl+1)^0,c
 10150  005080  0E00               	movlw	0
 10151  005082  6E03               	movwf	(?___xxtofl+2)^0,c
 10152  005084  0E00               	movlw	0
 10153  005086  6E04               	movwf	(?___xxtofl+3)^0,c
 10154  005088  EFDD  F028         	goto	l1141
 10155  00508C                     l4315:
 10156  00508C  0E96               	movlw	150
 10157  00508E  6E0A               	movwf	___xxtofl@exp^0,c
 10158  005090  EF50  F028         	goto	l4319
 10159  005094                     l4317:
 10160  005094  2A0A               	incf	___xxtofl@exp^0,f,c
 10161  005096  90D8               	bcf	status,0,c
 10162  005098  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10163  00509A  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10164  00509C  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10165  00509E  320B               	rrcf	___xxtofl@arg^0,f,c
 10166  0050A0                     l4319:
 10167  0050A0  0E00               	movlw	0
 10168  0050A2  140B               	andwf	___xxtofl@arg^0,w,c
 10169  0050A4  6E05               	movwf	??___xxtofl^0,c
 10170  0050A6  0E00               	movlw	0
 10171  0050A8  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10172  0050AA  6E06               	movwf	(??___xxtofl+1)^0,c
 10173  0050AC  0E00               	movlw	0
 10174  0050AE  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10175  0050B0  6E07               	movwf	(??___xxtofl+2)^0,c
 10176  0050B2  0EFE               	movlw	254
 10177  0050B4  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10178  0050B6  6E08               	movwf	(??___xxtofl+3)^0,c
 10179  0050B8  5005               	movf	??___xxtofl^0,w,c
 10180  0050BA  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10181  0050BC  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10182  0050BE  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10183  0050C0  A4D8               	btfss	status,2,c
 10184  0050C2  EF65  F028         	goto	u5341
 10185  0050C6  EF67  F028         	goto	u5340
 10186  0050CA                     u5341:
 10187  0050CA  EF4A  F028         	goto	l4317
 10188  0050CE                     u5340:
 10189  0050CE  EF75  F028         	goto	l1145
 10190  0050D2                     l4321:
 10191  0050D2  2A0A               	incf	___xxtofl@exp^0,f,c
 10192  0050D4  0E01               	movlw	1
 10193  0050D6  260B               	addwf	___xxtofl@arg^0,f,c
 10194  0050D8  0E00               	movlw	0
 10195  0050DA  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
 10196  0050DC  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
 10197  0050DE  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
 10198  0050E0  90D8               	bcf	status,0,c
 10199  0050E2  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
 10200  0050E4  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
 10201  0050E6  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
 10202  0050E8  320B               	rrcf	___xxtofl@arg^0,f,c
 10203  0050EA                     l1145:
 10204  0050EA  0E00               	movlw	0
 10205  0050EC  140B               	andwf	___xxtofl@arg^0,w,c
 10206  0050EE  6E05               	movwf	??___xxtofl^0,c
 10207  0050F0  0E00               	movlw	0
 10208  0050F2  140C               	andwf	(___xxtofl@arg+1)^0,w,c
 10209  0050F4  6E06               	movwf	(??___xxtofl+1)^0,c
 10210  0050F6  0E00               	movlw	0
 10211  0050F8  140D               	andwf	(___xxtofl@arg+2)^0,w,c
 10212  0050FA  6E07               	movwf	(??___xxtofl+2)^0,c
 10213  0050FC  0EFF               	movlw	255
 10214  0050FE  140E               	andwf	(___xxtofl@arg+3)^0,w,c
 10215  005100  6E08               	movwf	(??___xxtofl+3)^0,c
 10216  005102  5005               	movf	??___xxtofl^0,w,c
 10217  005104  1006               	iorwf	(??___xxtofl+1)^0,w,c
 10218  005106  1007               	iorwf	(??___xxtofl+2)^0,w,c
 10219  005108  1008               	iorwf	(??___xxtofl+3)^0,w,c
 10220  00510A  A4D8               	btfss	status,2,c
 10221  00510C  EF8A  F028         	goto	u5351
 10222  005110  EF8C  F028         	goto	u5350
 10223  005114                     u5351:
 10224  005114  EF69  F028         	goto	l4321
 10225  005118                     u5350:
 10226  005118  EF94  F028         	goto	l4329
 10227  00511C                     l4327:
 10228  00511C  060A               	decf	___xxtofl@exp^0,f,c
 10229  00511E  90D8               	bcf	status,0,c
 10230  005120  360B               	rlcf	___xxtofl@arg^0,f,c
 10231  005122  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
 10232  005124  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
 10233  005126  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
 10234  005128                     l4329:
 10235  005128  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
 10236  00512A  EF99  F028         	goto	u5361
 10237  00512E  EF9B  F028         	goto	u5360
 10238  005132                     u5361:
 10239  005132  EFA3  F028         	goto	l1152
 10240  005136                     u5360:
 10241  005136  0E02               	movlw	2
 10242  005138  600A               	cpfslt	___xxtofl@exp^0,c
 10243  00513A  EFA1  F028         	goto	u5371
 10244  00513E  EFA3  F028         	goto	u5370
 10245  005142                     u5371:
 10246  005142  EF8E  F028         	goto	l4327
 10247  005146                     u5370:
 10248  005146                     l1152:
 10249  005146  B00A               	btfsc	___xxtofl@exp^0,0,c
 10250  005148  EFA8  F028         	goto	u5381
 10251  00514C  EFAA  F028         	goto	u5380
 10252  005150                     u5381:
 10253  005150  EFAB  F028         	goto	l4335
 10254  005154                     u5380:
 10255  005154  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
 10256  005156                     l4335:
 10257  005156  90D8               	bcf	status,0,c
 10258  005158  320A               	rrcf	___xxtofl@exp^0,f,c
 10259  00515A  0060  F028  F005   	movff	___xxtofl@exp,??___xxtofl
 10260  005160  6A06               	clrf	(??___xxtofl+1)^0,c
 10261  005162  6A07               	clrf	(??___xxtofl+2)^0,c
 10262  005164  6A08               	clrf	(??___xxtofl+3)^0,c
 10263  005166  0060  F014  F008   	movff	??___xxtofl,??___xxtofl+3
 10264  00516C  6A07               	clrf	(??___xxtofl+2)^0,c
 10265  00516E  6A06               	clrf	(??___xxtofl+1)^0,c
 10266  005170  6A05               	clrf	??___xxtofl^0,c
 10267  005172  5005               	movf	??___xxtofl^0,w,c
 10268  005174  120B               	iorwf	___xxtofl@arg^0,f,c
 10269  005176  5006               	movf	(??___xxtofl+1)^0,w,c
 10270  005178  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
 10271  00517A  5007               	movf	(??___xxtofl+2)^0,w,c
 10272  00517C  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
 10273  00517E  5008               	movf	(??___xxtofl+3)^0,w,c
 10274  005180  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
 10275  005182  5009               	movf	___xxtofl@sign^0,w,c
 10276  005184  B4D8               	btfsc	status,2,c
 10277  005186  EFC7  F028         	goto	u5391
 10278  00518A  EFC9  F028         	goto	u5390
 10279  00518E                     u5391:
 10280  00518E  EFD1  F028         	goto	l4345
 10281  005192                     u5390:
 10282  005192  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
 10283  005194  EFD0  F028         	goto	u5400
 10284  005198  EFCE  F028         	goto	u5401
 10285  00519C                     u5401:
 10286  00519C  EFD1  F028         	goto	l4345
 10287  0051A0                     u5400:
 10288  0051A0  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
 10289  0051A2                     l4345:
 10290  0051A2  0060  F02C  F001   	movff	___xxtofl@arg,?___xxtofl
 10291  0051A8  0060  F030  F002   	movff	___xxtofl@arg+1,?___xxtofl+1
 10292  0051AE  0060  F034  F003   	movff	___xxtofl@arg+2,?___xxtofl+2
 10293  0051B4  0060  F038  F004   	movff	___xxtofl@arg+3,?___xxtofl+3
 10294  0051BA                     l1141:
 10295  0051BA  0012               	return		;funcret
 10296  0051BC                     __end_of___xxtofl:
 10297                           	opt callstack 0
 10298                           
 10299 ;; *************** function ___llmod *****************
 10300 ;; Defined at:
 10301 ;;		line 7 in file "F:\Programme\Microchip\xc8\v2.10\pic\sources\c99\common\llmod.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;  dividend        4   25[COMRAM] unsigned long 
 10304 ;;  divisor         4   29[COMRAM] unsigned long 
 10305 ;; Auto vars:     Size  Location     Type
 10306 ;;  counter         1   33[COMRAM] unsigned char 
 10307 ;; Return value:  Size  Location     Type
 10308 ;;                  4   25[COMRAM] unsigned long 
 10309 ;; Registers used:
 10310 ;;		wreg, status,2, status,0
 10311 ;; Tracked objects:
 10312 ;;		On entry : 0/0
 10313 ;;		On exit  : 0/0
 10314 ;;		Unchanged: 0/0
 10315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10316 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10317 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10319 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10320 ;;Total ram usage:        9 bytes
 10321 ;; Hardware stack levels used:    1
 10322 ;; This function calls:
 10323 ;;		Nothing
 10324 ;; This function is called by:
 10325 ;;		_main_loop
 10326 ;; This function uses a non-reentrant model
 10327 ;;
 10328                           
 10329                           	psect	text37
 10330  005E62                     __ptext37:
 10331                           	opt callstack 0
 10332  005E62                     ___llmod:
 10333                           	opt callstack 29
 10334  005E62  501E               	movf	___llmod@divisor^0,w,c
 10335  005E64  101F               	iorwf	(___llmod@divisor+1)^0,w,c
 10336  005E66  1020               	iorwf	(___llmod@divisor+2)^0,w,c
 10337  005E68  1021               	iorwf	(___llmod@divisor+3)^0,w,c
 10338  005E6A  B4D8               	btfsc	status,2,c
 10339  005E6C  EF3A  F02F         	goto	u5281
 10340  005E70  EF3C  F02F         	goto	u5280
 10341  005E74                     u5281:
 10342  005E74  EF6C  F02F         	goto	l903
 10343  005E78                     u5280:
 10344  005E78  0E01               	movlw	1
 10345  005E7A  6E22               	movwf	___llmod@counter^0,c
 10346  005E7C  EF46  F02F         	goto	l4293
 10347  005E80                     l4291:
 10348  005E80  90D8               	bcf	status,0,c
 10349  005E82  361E               	rlcf	___llmod@divisor^0,f,c
 10350  005E84  361F               	rlcf	(___llmod@divisor+1)^0,f,c
 10351  005E86  3620               	rlcf	(___llmod@divisor+2)^0,f,c
 10352  005E88  3621               	rlcf	(___llmod@divisor+3)^0,f,c
 10353  005E8A  2A22               	incf	___llmod@counter^0,f,c
 10354  005E8C                     l4293:
 10355  005E8C  AE21               	btfss	(___llmod@divisor+3)^0,7,c
 10356  005E8E  EF4B  F02F         	goto	u5291
 10357  005E92  EF4D  F02F         	goto	u5290
 10358  005E96                     u5291:
 10359  005E96  EF40  F02F         	goto	l4291
 10360  005E9A                     u5290:
 10361  005E9A                     l4295:
 10362  005E9A  501E               	movf	___llmod@divisor^0,w,c
 10363  005E9C  5C1A               	subwf	___llmod@dividend^0,w,c
 10364  005E9E  501F               	movf	(___llmod@divisor+1)^0,w,c
 10365  005EA0  581B               	subwfb	(___llmod@dividend+1)^0,w,c
 10366  005EA2  5020               	movf	(___llmod@divisor+2)^0,w,c
 10367  005EA4  581C               	subwfb	(___llmod@dividend+2)^0,w,c
 10368  005EA6  5021               	movf	(___llmod@divisor+3)^0,w,c
 10369  005EA8  581D               	subwfb	(___llmod@dividend+3)^0,w,c
 10370  005EAA  A0D8               	btfss	status,0,c
 10371  005EAC  EF5A  F02F         	goto	u5301
 10372  005EB0  EF5C  F02F         	goto	u5300
 10373  005EB4                     u5301:
 10374  005EB4  EF64  F02F         	goto	l4299
 10375  005EB8                     u5300:
 10376  005EB8  501E               	movf	___llmod@divisor^0,w,c
 10377  005EBA  5E1A               	subwf	___llmod@dividend^0,f,c
 10378  005EBC  501F               	movf	(___llmod@divisor+1)^0,w,c
 10379  005EBE  5A1B               	subwfb	(___llmod@dividend+1)^0,f,c
 10380  005EC0  5020               	movf	(___llmod@divisor+2)^0,w,c
 10381  005EC2  5A1C               	subwfb	(___llmod@dividend+2)^0,f,c
 10382  005EC4  5021               	movf	(___llmod@divisor+3)^0,w,c
 10383  005EC6  5A1D               	subwfb	(___llmod@dividend+3)^0,f,c
 10384  005EC8                     l4299:
 10385  005EC8  90D8               	bcf	status,0,c
 10386  005ECA  3221               	rrcf	(___llmod@divisor+3)^0,f,c
 10387  005ECC  3220               	rrcf	(___llmod@divisor+2)^0,f,c
 10388  005ECE  321F               	rrcf	(___llmod@divisor+1)^0,f,c
 10389  005ED0  321E               	rrcf	___llmod@divisor^0,f,c
 10390  005ED2  2E22               	decfsz	___llmod@counter^0,f,c
 10391  005ED4  EF4D  F02F         	goto	l4295
 10392  005ED8                     l903:
 10393  005ED8  0060  F068  F01A   	movff	___llmod@dividend,?___llmod
 10394  005EDE  0060  F06C  F01B   	movff	___llmod@dividend+1,?___llmod+1
 10395  005EE4  0060  F070  F01C   	movff	___llmod@dividend+2,?___llmod+2
 10396  005EEA  0060  F074  F01D   	movff	___llmod@dividend+3,?___llmod+3
 10397  005EF0  0012               	return		;funcret
 10398  005EF2                     __end_of___llmod:
 10399                           	opt callstack 0
 10400                           
 10401 ;; *************** function _lcd_init *****************
 10402 ;; Defined at:
 10403 ;;		line 17 in file "char_lcd.c"
 10404 ;; Parameters:    Size  Location     Type
 10405 ;;  inc             1    wreg     _Bool 
 10406 ;;  shift           1    4[COMRAM] _Bool 
 10407 ;;  cursor          1    5[COMRAM] _Bool 
 10408 ;;  cursorblink     1    6[COMRAM] _Bool 
 10409 ;;  on              1    7[COMRAM] _Bool 
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;  inc             1    9[COMRAM] _Bool 
 10412 ;; Return value:  Size  Location     Type
 10413 ;;                  1    wreg      void 
 10414 ;; Registers used:
 10415 ;;		wreg, status,2, status,0, cstack
 10416 ;; Tracked objects:
 10417 ;;		On entry : 0/0
 10418 ;;		On exit  : 0/0
 10419 ;;		Unchanged: 0/0
 10420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10423 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10424 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10425 ;;Total ram usage:        6 bytes
 10426 ;; Hardware stack levels used:    1
 10427 ;; Hardware stack levels required when called:    1
 10428 ;; This function calls:
 10429 ;;		_lcd_write
 10430 ;; This function is called by:
 10431 ;;		_main
 10432 ;; This function uses a non-reentrant model
 10433 ;;
 10434                           
 10435                           	psect	text38
 10436  006050                     __ptext38:
 10437                           	opt callstack 0
 10438  006050                     _lcd_init:
 10439                           	opt callstack 29
 10440                           
 10441                           ;incstack = 0
 10442                           ;lcd_init@inc stored from wreg
 10443  006050  6E0A               	movwf	lcd_init@inc^0,c
 10444  006052                     
 10445                           ;char_lcd.c: 18:     lcd_write(0, 0b00110011, 0);
 10446  006052  0E33               	movlw	51
 10447  006054  6E01               	movwf	lcd_write@data^0,c
 10448  006056  0E00               	movlw	0
 10449  006058  6E02               	movwf	lcd_write@longdelay^0,c
 10450  00605A  0E00               	movlw	0
 10451  00605C  ECC2  F030         	call	_lcd_write
 10452                           
 10453                           ;char_lcd.c: 19:     lcd_write(0, 0b00110011, 0);
 10454  006060  0E33               	movlw	51
 10455  006062  6E01               	movwf	lcd_write@data^0,c
 10456  006064  0E00               	movlw	0
 10457  006066  6E02               	movwf	lcd_write@longdelay^0,c
 10458  006068  0E00               	movlw	0
 10459  00606A  ECC2  F030         	call	_lcd_write
 10460                           
 10461                           ;char_lcd.c: 20:     lcd_write(0, 0b00110011, 0);
 10462  00606E  0E33               	movlw	51
 10463  006070  6E01               	movwf	lcd_write@data^0,c
 10464  006072  0E00               	movlw	0
 10465  006074  6E02               	movwf	lcd_write@longdelay^0,c
 10466  006076  0E00               	movlw	0
 10467  006078  ECC2  F030         	call	_lcd_write
 10468  00607C                     
 10469                           ;char_lcd.c: 21:     lcd_write(0, 0b00000100 | (inc << 1) | shift, 0);
 10470  00607C  500A               	movf	lcd_init@inc^0,w,c
 10471  00607E  240A               	addwf	lcd_init@inc^0,w,c
 10472  006080  1005               	iorwf	lcd_init@shift^0,w,c
 10473  006082  0904               	iorlw	4
 10474  006084  6E01               	movwf	lcd_write@data^0,c
 10475  006086  0E00               	movlw	0
 10476  006088  6E02               	movwf	lcd_write@longdelay^0,c
 10477  00608A  0E00               	movlw	0
 10478  00608C  ECC2  F030         	call	_lcd_write
 10479  006090                     
 10480                           ;char_lcd.c: 22:     lcd_write(0, 0b00001000 | (on << 2) | (cursor << 1) | cursorblink ,
      +                           0);
 10481  006090  90D8               	bcf	status,0,c
 10482  006092  3406               	rlcf	lcd_init@cursor^0,w,c
 10483  006094  6E09               	movwf	??_lcd_init^0,c
 10484  006096  4408               	rlncf	lcd_init@on^0,w,c
 10485  006098  46E8               	rlncf	wreg,f,c
 10486  00609A  0BFC               	andlw	252
 10487  00609C  1009               	iorwf	??_lcd_init^0,w,c
 10488  00609E  1007               	iorwf	lcd_init@cursorblink^0,w,c
 10489  0060A0  0908               	iorlw	8
 10490  0060A2  6E01               	movwf	lcd_write@data^0,c
 10491  0060A4  0E00               	movlw	0
 10492  0060A6  6E02               	movwf	lcd_write@longdelay^0,c
 10493  0060A8  0E00               	movlw	0
 10494  0060AA  ECC2  F030         	call	_lcd_write
 10495                           
 10496                           ;char_lcd.c: 23:     lcd_write(0, 0b00000001, 1);
 10497  0060AE  0E01               	movlw	1
 10498  0060B0  6E01               	movwf	lcd_write@data^0,c
 10499  0060B2  0E01               	movlw	1
 10500  0060B4  6E02               	movwf	lcd_write@longdelay^0,c
 10501  0060B6  0E00               	movlw	0
 10502  0060B8  ECC2  F030         	call	_lcd_write
 10503  0060BC  0012               	return		;funcret
 10504  0060BE                     __end_of_lcd_init:
 10505                           	opt callstack 0
 10506                           
 10507 ;; *************** function _lcd_write *****************
 10508 ;; Defined at:
 10509 ;;		line 3 in file "char_lcd.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;  rs              1    wreg     _Bool 
 10512 ;;  data            1    0[COMRAM] unsigned char 
 10513 ;;  longdelay       1    1[COMRAM] _Bool 
 10514 ;; Auto vars:     Size  Location     Type
 10515 ;;  rs              1    3[COMRAM] _Bool 
 10516 ;; Return value:  Size  Location     Type
 10517 ;;                  1    wreg      void 
 10518 ;; Registers used:
 10519 ;;		wreg, status,2
 10520 ;; Tracked objects:
 10521 ;;		On entry : 0/0
 10522 ;;		On exit  : 0/0
 10523 ;;		Unchanged: 0/0
 10524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10525 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10526 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10527 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10528 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10529 ;;Total ram usage:        4 bytes
 10530 ;; Hardware stack levels used:    1
 10531 ;; This function calls:
 10532 ;;		Nothing
 10533 ;; This function is called by:
 10534 ;;		_lcd_init
 10535 ;;		_lcd_set_data_addr
 10536 ;;		_lcd_print
 10537 ;;		_lcd_clear
 10538 ;;		_lcd_home
 10539 ;;		_lcd_set_char_addr
 10540 ;;		_lcd_write_byte
 10541 ;;		_lcd_write_data
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text39
 10546  006184                     __ptext39:
 10547                           	opt callstack 0
 10548  006184                     _lcd_write:
 10549                           	opt callstack 28
 10550                           
 10551                           ;incstack = 0
 10552                           ;lcd_write@rs stored from wreg
 10553  006184  6E04               	movwf	lcd_write@rs^0,c
 10554  006186                     
 10555                           ;char_lcd.c: 4:     PORTEbits.RE2 = 1;
 10556  006186  84CE               	bsf	206,2,c	;volatile
 10557                           
 10558                           ;char_lcd.c: 5:     PORTEbits.RE1 = 0;
 10559  006188  92CE               	bcf	206,1,c	;volatile
 10560  00618A                     
 10561                           ;char_lcd.c: 6:     PORTEbits.RE0 = rs;
 10562  00618A  B004               	btfsc	lcd_write@rs^0,0,c
 10563  00618C  D002               	bra	u5105
 10564  00618E  90CE               	bcf	206,0,c	;volatile
 10565  006190  D001               	bra	u5106
 10566  006192                     u5105:
 10567  006192  80CE               	bsf	206,0,c	;volatile
 10568  006194                     u5106:
 10569  006194                     
 10570                           ;char_lcd.c: 7:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 10571  006194  0E35               	movlw	53
 10572  006196                     u5657:
 10573  006196  2EE8               	decfsz	wreg,f,c
 10574  006198  D7FE               	bra	u5657
 10575  00619A  F000               	nop	
 10576  00619C                     
 10577                           ;char_lcd.c: 8:     PORTA = data;
 10578  00619C  0060  F007  FFCA   	movff	lcd_write@data,16330	;volatile
 10579  0061A2                     
 10580                           ;char_lcd.c: 9:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 10581  0061A2  0E35               	movlw	53
 10582  0061A4                     u5667:
 10583  0061A4  2EE8               	decfsz	wreg,f,c
 10584  0061A6  D7FE               	bra	u5667
 10585  0061A8  F000               	nop	
 10586  0061AA                     
 10587                           ;char_lcd.c: 10:     PORTEbits.RE2 = 0;
 10588  0061AA  94CE               	bcf	206,2,c	;volatile
 10589  0061AC                     
 10590                           ;char_lcd.c: 11:     _delay((unsigned long)((10)*(64000000/4000000.0)));
 10591  0061AC  0E35               	movlw	53
 10592  0061AE                     u5677:
 10593  0061AE  2EE8               	decfsz	wreg,f,c
 10594  0061B0  D7FE               	bra	u5677
 10595  0061B2  F000               	nop	
 10596  0061B4                     
 10597                           ;char_lcd.c: 12:     PORTEbits.RE2 = 1;
 10598  0061B4  84CE               	bsf	206,2,c	;volatile
 10599  0061B6                     
 10600                           ;char_lcd.c: 13:     if (longdelay) _delay((unsigned long)((2)*(64000000/4000.0)));
 10601  0061B6  5002               	movf	lcd_write@longdelay^0,w,c
 10602  0061B8  B4D8               	btfsc	status,2,c
 10603  0061BA  EFE1  F030         	goto	u5111
 10604  0061BE  EFE3  F030         	goto	u5110
 10605  0061C2                     u5111:
 10606  0061C2  EFEC  F030         	goto	l4195
 10607  0061C6                     u5110:
 10608  0061C6  0E2A               	movlw	42
 10609  0061C8  6E03               	movwf	??_lcd_write^0,c
 10610  0061CA  0E8E               	movlw	142
 10611  0061CC                     u5687:
 10612  0061CC  2EE8               	decfsz	wreg,f,c
 10613  0061CE  D7FE               	bra	u5687
 10614  0061D0  2E03               	decfsz	??_lcd_write^0,f,c
 10615  0061D2  D7FC               	bra	u5687
 10616  0061D4  EFF0  F030         	goto	l270
 10617  0061D8                     l4195:
 10618  0061D8  0EA0               	movlw	160
 10619  0061DA                     u5697:
 10620  0061DA  D000               	nop2	
 10621  0061DC  2EE8               	decfsz	wreg,f,c
 10622  0061DE  D7FD               	bra	u5697
 10623  0061E0                     l270:
 10624  0061E0  0012               	return		;funcret
 10625  0061E2                     __end_of_lcd_write:
 10626                           	opt callstack 0
 10627                           
 10628                           	psect	rparam
 10629  0000                     tosu	equ	0x3FFF
 10630                           tosh	equ	0x3FFE
 10631                           tosl	equ	0x3FFD
 10632                           stkptr	equ	0x3FFC
 10633                           pclatu	equ	0x3FFB
 10634                           pclath	equ	0x3FFA
 10635                           pcl	equ	0x3FF9
 10636                           tblptru	equ	0x3FF8
 10637                           tblptrh	equ	0x3FF7
 10638                           tblptrl	equ	0x3FF6
 10639                           tablat	equ	0x3FF5
 10640                           prodh	equ	0x3FF4
 10641                           prodl	equ	0x3FF3
 10642                           indf0	equ	0x3FEF
 10643                           postinc0	equ	0x3FEE
 10644                           postdec0	equ	0x3FED
 10645                           preinc0	equ	0x3FEC
 10646                           plusw0	equ	0x3FEB
 10647                           fsr0h	equ	0x3FEA
 10648                           fsr0l	equ	0x3FE9
 10649                           wreg	equ	0x3FE8
 10650                           indf1	equ	0x3FE7
 10651                           postinc1	equ	0x3FE6
 10652                           postdec1	equ	0x3FE5
 10653                           preinc1	equ	0x3FE4
 10654                           plusw1	equ	0x3FE3
 10655                           fsr1h	equ	0x3FE2
 10656                           fsr1l	equ	0x3FE1
 10657                           bsr	equ	0x3FE0
 10658                           indf2	equ	0x3FDF
 10659                           postinc2	equ	0x3FDE
 10660                           postdec2	equ	0x3FDD
 10661                           preinc2	equ	0x3FDC
 10662                           plusw2	equ	0x3FDB
 10663                           fsr2h	equ	0x3FDA
 10664                           fsr2l	equ	0x3FD9
 10665                           status	equ	0x3FD8


Data Sizes:
    Strings     104
    Constant    0
    Data        1
    BSS         130
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160    127     143
    BANK1           256     38     152
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_16(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_11(CODE[4]), STR_10(CODE[4]), STR_7(CODE[4]), STR_6(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[17]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[19]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK1[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK1[16]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1061_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK1[16]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> main_loop@batmsg(BANK1[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[17]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[19]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[17]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[19]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 19
		 -> STR_4(CODE[17]), STR_3(CODE[18]), STR_2(CODE[18]), STR_1(CODE[19]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    lcd_print@string	PTR unsigned char  size(2) Largest target is 16
		 -> STR_5(CODE[13]), main_loop@batmsg(BANK1[16]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___fladd->___xxtofl
    ___flmul->___fldiv
    ___flge->___flmul
    ___fldiv->___fladd
    _atoi->_isspace
    _setLED->___lldiv
    ___lldiv->___lmul
    _lcd_set_data_addr->_lcd_write
    _lcd_print->_lcd_write
    ___llmod->___lldiv
    _lcd_init->_lcd_write

Critical Paths under _main in BANK0

    _main->_main_loop
    _main_loop->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _main->_main_loop

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   53274
                                            125 BANK0      2     2      0
                           _lcd_init
                          _lcd_print
                          _main_loop
 ---------------------------------------------------------------------------------
 (1) _main_loop                                           47    47      0   48512
                                            116 BANK0      9     9      0
                                              0 BANK1     38    38      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___lldiv
                            ___llmod
                             ___lmul
                           ___xxtofl
                          _lcd_print
                  _lcd_set_data_addr
                             _setLED
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   29353
                                             98 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   28538
                                             92 COMRAM     2     2      0
                                             92 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           50    44      6   28158
                                             68 BANK0     24    18      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   22453
                                              0 BANK0     68    61      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     490
                                             55 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    3041
                                             80 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    2566
                                             14 COMRAM    16     8      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    2504
                                             55 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     638
                                             80 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2159
                                             30 COMRAM    25    17      8
                            ___fladd (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1304
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _setLED                                              48    36     12    2909
                                             25 COMRAM    48    36     12
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     978
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1226
                                             12 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_set_data_addr                                    1     1      0    2064
                                              4 COMRAM     1     1      0
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            5     3      2    2306
                                              4 COMRAM     5     3      2
                          _lcd_write
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             25 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     2      4    2456
                                              4 COMRAM     6     2      4
                          _lcd_write
 ---------------------------------------------------------------------------------
 (3) _lcd_write                                            4     2      2    2042
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_init
     _lcd_write
   _lcd_print
     _lcd_write
   _main_loop
     ___awdiv
     ___fladd
       ___xxtofl (ARG)
     ___fldiv
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___fladd (ARG)
         ___xxtofl (ARG)
       ___fldiv (ARG)
         ___fladd (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___lldiv
       ___lmul (ARG)
     ___llmod
       ___lldiv (ARG)
         ___lmul (ARG)
     ___lmul
     ___xxtofl
     _lcd_print
       _lcd_write
     _lcd_set_data_addr
       _lcd_write
     _setLED
       ___lldiv
         ___lmul (ARG)
       ___lmul
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
               ___xxtofl (ARG)
             ___fldiv
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___fladd (ARG)
                 ___xxtofl (ARG)
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
                 ___xxtofl (ARG)
               ___flmul (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___fldiv (ARG)
                   ___fladd (ARG)
                     ___xxtofl (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
                 ___fladd (ARG)
                   ___xxtofl (ARG)
                 ___xxtofl (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     26      98       7       59.4%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7F      8F       5       89.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     186      58        0.0%
DATA                 0      0     186       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 29 13:25:12 2019

     lcd_set_data_addr@addr 0005                ___fldiv@aexp 0037                ___fldiv@bexp 0036  
              ___fldiv@sign 002F                 __CFG_CP$OFF 000000                ___awdiv@sign 0006  
       ___wmul@multiplicand 0003                 __CFG_LVP$ON 000000                         l302 5E60  
                       l230 3122                         l240 3418                         l216 2E5E  
                       l241 365A                         l410 2950                         l226 30F2  
                       l251 3664                         l180 4C40                         l245 3588  
                       l270 61E0                         l510 5CFA                         l190 4CF0  
                       l182 4C58                         l343 5984                         l247 35C8  
                       l192 4D24                         l184 4C8C                         l176 4BF4  
                       l273 60BC                         l194 4D3C                         l186 4CA4  
                       l178 4C0C                         l346 59CA                         l196 4D70  
                       l188 4CD8                         l348 5A12                         l285 6448  
                       l517 5D12                         l198 4D88                         l366 2DEE  
                       l199 4D8E                         l384 24E4                         l480 5F6A  
                       l473 3C58                         l714 5BB2                         l466 3D42  
                       l483 6432                         l910 5EF0                         l494 6036  
                       l742 5DBC                         l903 5ED8                         l495 604E  
                       l727 5C66                         l479 5F5E                         l753 582E  
                       l748 57E8                         l780 572A                         l757 631C  
                       _pad 5932                 lcd_init@inc 000A                ___awmod@sign 0006  
                       wreg 003FE8                ___flmul@aexp 0049                ___flmul@bexp 004A  
              ___flmul@sign 0044                ___flmul@temp 004F                ___flmul@prod 004B  
             __CFG_BBEN$OFF 000000                __CFG_ZCD$OFF 000000                ___fltol@exp1 000A  
                      l1011 3F54                        l1020 423E                        l1012 3F42  
                      l1101 46C8                        l1013 3F08                        l1104 4540  
                      l1114 4680                        l1106 45B8                        l1202 4FE2  
                      l1107 45A6                        l1212 63D2                        l1220 6292  
                      l1028 406E                        l1141 51BA                        l1037 4140  
                      l1053 6182                        l1205 4F16                        l1070 4898  
                      l1038 412E                        l1152 5146                        l1145 50EA  
                      l1065 4A86                        l3001 3E48                        l1241 5AEA  
                      l1138 504A                        l1226 6396                        l1067 48D4  
                      l3011 3E66                        l3003 3E4E                        l1076 491A  
                      l1164 5614                        l3101 40C2                        l3021 3E84  
                      l3013 3E6C                        l3005 3E54                        l1078 4992  
                      l1079 4980                        l3103 40D0                        l3111 40EE  
                      l3023 3E8A                        l3015 3E72                        l3007 3E5A  
                      l3031 3EA2                        l1271 635A                        l1256 623A  
                      l1193 5378                        l1097 4304                        l3105 40D8  
                      l3113 40FC                        l3041 3F16                        l3033 3EA6  
                      l3025 3E90                        l3017 3E78                        l3009 3E60  
                      l1249 62DC                        l1265 5FDC                        l3201 5F84  
                      l1290 6124                        l4011 51D8                        l3123 4150  
                      l3131 41B6                        l3115 4100                        l3107 40DC  
                      l3051 3F40                        l3043 3F22                        l3035 3ED2  
                      l3027 3E96                        l3019 3E7E                        l1259 644A  
                      l3203 60BE                        l1275 5930                        l1196 5384  
                      l4021 5246                        l4013 51FC                        l4005 51BC  
                      l3301 47E4                        l3141 4208                        l3133 41C6  
                      l3125 415C                        l3117 410E                        l3109 40EC  
                      l3061 3F96                        l3053 3F62                        l3045 3F26  
                      l3037 3EEE                        l3029 3E9C                        l3221 4E48  
                      l3213 4D90                        l1285 6118                        l4101 3872  
                      l4023 525C                        l4015 523A                        l4007 51D0  
                      l3311 4824                        l3303 47F4                        l3151 4226  
                      l3143 420E                        l3135 41D6                        l3127 416A  
                      l3119 4126                        l3071 3FD0                        l3063 3FA4  
                      l3055 3F72                        l3047 3F34                        l3039 3EFE  
                      l3231 4F7E                        l3215 4DC0                        l3207 60F8  
                      l4111 3952                        l4103 38C0                        l3241 6398  
                      l4041 5354                        l4033 52EA                        l4025 5264  
                      l4017 523E                        l4009 51D4                        l3321 4874  
                      l3313 483C                        l3305 47F4                        l3401 428C  
                      l3145 4210                        l3137 41F6                        l3129 41B4  
                      l3081 403C                        l3073 3FD2                        l3065 3FB2  
                      l3049 3F36                        l3233 4F92                        l3225 4EC2  
                      l3217 4E1E                        l3161 596C                        l3209 610A  
                      l4121 39F4                        l4105 38EC                        l4113 3964  
                      l4201 5F0C                        l4211 600C                        l4027 526C  
                      l3331 48C2                        l3323 4888                        l3315 484C  
                      l3251 46CA                        l3411 42BC                        l3403 4292  
                      l3147 4216                        l3139 41FA                        l3091 4094  
                      l3083 403E                        l3075 3FDC                        l3067 3FBE  
                      l3059 3F86                        l3235 4FBA                        l3227 4F06  
                      l3219 4E3A                        l3171 59DA                        l3163 597C  
                      l3155 5932                        l4131 3AC2                        l4123 3A36  
                      l4115 3992                        l4107 38FE                        l4203 5F3A  
                      l4301 5ED2                        l4221 5C96                        l4213 6016  
                      l4205 5FDE                        l3245 6406                        l4037 5330  
                      l4029 52A8                        l3341 490A                        l3333 48D2  
                      l3325 4896                        l3317 485C                        l3309 4808  
                      l3261 4706                        l3253 46D6                        l3501 464E  
                      l3421 42F4                        l3413 42BE                        l3405 42A2  
                      l3149 4224                        l3085 404E                        l3069 3FC2  
                      l3077 3FE2                        l3181 556E                        l3237 4FCA  
                      l3229 4F3A                        l3173 59F6                        l3165 5990  
                      l3157 5942                        l4061 58CE                        l4053 586E  
                      l4141 3BBA                        l4125 3A48                        l4117 39A2  
                      l4311 5078                        l4303 4FE6                        l4231 5CE8  
                      l4223 5CA2                        l4215 5C68                        l4207 5FEE  
                      l3247 6426                        l4039 5342                        l3351 494A  
                      l3343 4918                        l3335 48E4                        l3327 48A2  
                      l3319 4864                        l3271 4736                        l3263 4716  
                      l3255 46E4                        l3511 46A6                        l3503 4668  
                      l3431 4348                        l3423 4314                        l3415 42CE  
                      l3407 42A8                        l3095 40A8                        l3079 4008  
                      l3087 405E                        l3191 55C0                        l3183 5596  
                      l3167 59A8                        l3159 595E                        l4063 5902  
                      l4055 587C                        l4047 5830                        l4143 3BCC  
                      l4151 3C70                        l4127 3A6C                        l4135 3B00  
                      l4119 39E4                        l4071 36A8                        l4321 50D2  
                      l4305 4FF6                        l4233 5CEA                        l4225 5CB0  
                      l4217 5C78                        l4209 5FFC                        l4241 4BE0  
                      l3601 5C5A                        l3361 49BC                        l3353 4978  
                      l3337 48FA                        l3345 492A                        l3329 48C0  
                      l3281 476C                        l3273 473C                        l3265 4718  
                      l3257 46E6                        l3505 4686                        l3513 46AC  
                      l3441 43A0                        l3433 4352                        l3425 4324  
                      l3417 42DE                        l3409 42AE                        l3097 40B2  
                      l3089 4084                        l3521 6136                        l3185 55A2  
                      l3177 54F8                        l3169 59AC                        l4057 5898  
                      l4049 5862                        l4153 3CA0                        l4161 3CD8  
                      l4145 3C14                        l4137 3B2E                        l4129 3A7E  
                      l4081 3746                        l4073 36BA                        l4401 3300  
                      l4331 5136                        l4323 50D4                        l4315 508C  
                      l4307 5004                        l4235 5CF4                        l4227 5CBA  
                      l4219 5C8E                        l4251 4CAA                        l4243 4C12  
                      l3531 5B06                        l3371 4A44                        l3363 49F6  
                      l3347 4938                        l3339 4900                        l3291 47AC  
                      l3283 477C                        l3275 474A                        l3259 46F6  
                      l3267 4720                        l3611 5D80                        l3515 46B0  
                      l3507 4696                        l3451 43F0                        l3443 43AC  
                      l3435 436C                        l3419 42EE                        l3099 40C0  
                      l3195 560C                        l3179 5528                        l4059 58BC  
                      l4163 3CEA                        l4155 3CB2                        l4091 37E6  
                      l4083 3754                        l4075 36BE                        l4067 3666  
                      l4411 33F6                        l4403 3310                        l4181 619C  
                      l4341 5192                        l4333 5154                        l4325 50E0  
                      l4317 5094                        l4309 5062                        l4229 5CD8  
                      l4261 4D5C                        l4253 4CC4                        l4245 4C2C  
                      l4237 4A88                        l3701 6286                        l3541 5B2C  
                      l3533 5B0A                        l3525 5AEC                        l3381 4A7C  
                      l3373 4A60                        l3357 49A2                        l3365 49FA  
                      l3349 493C                        l3293 47BC                        l3285 477E  
                      l3277 474C                        l3269 4730                        l3613 5D90  
                      l3605 5D14                        l3621 572C                        l3509 46A4  
                      l3461 4464                        l3453 4400                        l3445 43C0  
                      l3437 4378                        l3429 4338                        l3189 55AE  
                      l4157 3CCA                        l4085 3780                        l4093 37F8  
                      l4077 36EE                        l4069 3696                        l4413 33FA  
                      l4421 3426                        l4405 3386                        l4501 54EC  
                      l4191 61B6                        l4183 61A2                        l4175 6186  
                      l4343 51A0                        l4335 5156                        l4327 511C  
                      l4319 50A0                        l4255 4CF6                        l4247 4C5E  
                      l4239 4BC6                        l3703 628A                        l3551 5B62  
                      l3543 5B3E                        l3535 5B18                        l3527 5AF0  
                      l3375 4A66                        l3367 4A14                        l3359 49AE  
                      l3295 47C4                        l3279 475C                        l3287 4786  
                      l3615 5DB4                        l3607 5D42                        l3631 57B6  
                      l3623 575A                        l3471 4526                        l3463 4484  
                      l3455 4424                        l3447 43D0                        l3439 4394  
                      l3391 424C                        l3519 6126                        l3199 5F6C  
                      l3711 208C                        l4095 3828                        l4087 3792  
                      l4079 3738                        l4167 3CF8                        l4271 6228  
                      l4263 61E2                        l4431 3476                        l4423 3452  
                      l4415 3400                        l4407 33CE                        l4351 2DF6  
                      l4193 61C6                        l4185 61AA                        l4177 618A  
                      l4345 51A2                        l4337 515A                        l4329 5128  
                      l4281 5E08                        l4257 4D10                        l4249 4C78  
                      l3553 5B78                        l3545 5B46                        l3561 5B8E  
                      l3537 5B20                        l3529 5AFE                        l3377 4A74  
                      l3369 4A2A                        l3297 47C8                        l3289 4796  
                      l3617 5DBA                        l3609 5D52                        l3633 57C8  
                      l3625 576A                        l3481 4562                        l3473 4530  
                      l3465 44B4                        l3457 4434                        l3449 43E0  
                      l3393 425A                        l2921 5A38                        l3801 24BE  
                      l3721 20EC                        l3713 209A                        l4169 3D2C  
                      l4097 3830                        l4265 61F8                        l4441 3608  
                      l4433 3548                        l4425 3458                        l4417 3408  
                      l4409 33F0                        l4361 2E80                        l4353 2DFC  
                      l4195 61D8                        l4187 61AC                        l4179 6194  
                      l4451 6052                        l4291 5E80                        l4339 5182  
                      l4283 5E0A                        l4275 6436                        l4259 4D42  
                      l3563 5B9E                        l3555 5B80                        l3547 5B4E  
                      l3539 5B24                        l3571 5BB8                        l3379 4A7A  
                      l3635 57D6                        l3627 5798                        l3491 45D4  
                      l3483 4570                        l3475 453E                        l3467 44F2  
                      l3459 4454                        l3395 425C                        l3643 62DE  
                      l3651 5616                        l2923 5A42                        l2931 6294  
                      l3811 2506                        l3803 24D8                        l3731 2132  
                      l3723 20FE                        l3715 20A2                        l3707 206A  
                      l4099 3842                        l4267 6200                        l4443 3636  
                      l4435 3556                        l4427 345E                        l4419 341E  
                      l4371 2F5E                        l4363 2EB6                        l4355 2E04  
                      l4189 61B4                        l4453 607C                        l4293 5E8C  
                      l4285 5E50                        l4277 5DBE                        l3565 5BA6  
                      l3557 5B82                        l3549 5B5C                        l3581 5BE8  
                      l3573 5BC6                        l3637 5826                        l3629 57A8  
                      l3493 45E2                        l3485 459E                        l3477 4550  
                      l3469 4506                        l3397 426C                        l3389 4240  
                      l3645 62F4                        l3661 5674                        l3653 562C  
                      l2925 5A60                        l2917 5A14                        l2933 62A0  
                      l2941 632E                        l3901 2A80                        l3813 2518  
                      l3821 257A                        l3805 24F4                        l3733 2138  
                      l3725 210C                        l3717 20D6                        l3709 2074  
                      l4197 5EF2                        l4269 6208                        l4445 363C  
                      l4437 3596                        l4429 3466                        l4381 30C0  
                      l4373 2F6E                        l4365 2EFA                        l4357 2E14  
                      l4349 2DF0                        l4461 539A                        ?_pad 0011  
                      l4455 6090                        l4295 5E9A                        l4287 5E62  
                      l4279 5DC6                        l3559 5B88                        l3591 5C2E  
                      l3583 5BFA                        l3575 5BCE                        l3639 582C  
                      l3495 461C                        l3479 455E                        l3399 427C  
                      l3647 6304                        l3663 5684                        l2927 5A96  
                      l2919 5A26                        l2935 62B8                        l2943 6332  
                      l3903 2A8C                        l3911 2AAC                        l3831 25BC  
                      l3823 2586                        l3815 2534                        l3751 21F6  
                      l3743 21A6                        l3735 213C                        l3727 211E  
                      l3719 20E0                        l4199 5EFE                        l4447 3648  
                      l4439 35D6                        l4391 312E                        l4383 30CC  
                      l4375 2FB0                        l4367 2F3E                        l4359 2E4E  
                      l4471 53E0                        l4463 53B0                        l4297 5EB8  
                      l4289 5E78                        l3593 5C36                        l3585 5C02  
                      l3577 5BD2                        l3569 5BB4                        l3489 45C8  
                      l3497 4620                        l2961 3D70                        l2953 3D44  
                      l3673 56AE                        l3665 5688                        l3657 5640  
                      l2937 62BC                        l2945 634E                        l3921 2B5A  
                      l3913 2ABE                        l3905 2A9C                        l3833 25CE  
                      l3841 260E                        l3825 2598                        l3817 256E  
                      l3761 228E                        l3745 21B8                        l3729 212A  
                      l3737 2142                        l4449 365C                        l4393 3200  
                      l4385 30E6                        l4377 303E                        l4369 2F50  
                      l4481 548E                        l4473 53E2                        l4465 53B2  
                      l4457 5386                        l4299 5EC8                        l4539 5292  
                      l3595 5C3C                        l3587 5C0A                        l3579 5BE0  
                      l3499 463A                        l2971 3DAA                        l2963 3D80  
                      l2955 3D50                        l3691 5712                        l3683 56D6  
                      l3675 56B8                        l3667 5696                        l3659 5672  
                      l2939 631E                        l3931 2BE4                        l3923 2B9E  
                      l3915 2AD0                        l3907 2AA0                        l3851 275A  
                      l3843 2616                        l3835 25DC                        l3827 25AA  
                      l3819 2576                        l3763 22A0                        l3747 21D4  
                      l3739 2170                        l3755 222A                        l4395 320E  
                      l4387 30FE                        l4379 30A8                        l4491 5498  
                      l4483 5490                        l4475 53F8                        l4467 53C8  
                      l4459 5398                        l3589 5C18                        l3597 5C42  
                      l2981 3DD8                        l2973 3DB0                        l2965 3D90  
                      l2957 3D5E                        l3685 56E2                        l3677 56C2  
                      l2949 635C                        l3941 2C28                        l3933 2BF6  
                      l3925 2BA6                        l3917 2AD4                        l3909 2AA6  
                      l3861 2848                        l3853 279E                        l3845 262E  
                      l3837 25F4                        l3829 25B8                        l3781 2374  
                      l3765 22BC                        l3757 2258                        l3773 22D8  
                      l3749 21EC                        l4397 324E                        l4389 3116  
                      l4493 54B0                        l4485 5492                        l4477 53FA  
                      l4469 53CA                        l3695 623C                        l3599 5C52  
                      l2991 3E0C                        l2983 3DDA                        l2975 3DC2  
                      l2967 3D92                        l2959 3D60                        l3687 56F2  
                      l3951 2C68                        l3943 2C3A                        l3935 2C04  
                      l3919 2ADA                        l3927 2BAA                        l3871 290C  
                      l3863 285E                        l3847 264A                        l3855 27A4  
                      l3839 2606                        l3783 237A                        l3791 247A  
                      l3775 22F2                        l4399 325E                        l4495 54B2  
                      l4487 5494                        l4479 546C                        l3697 6240  
                      l2985 3DEA                        l2993 3E14                        l2977 3DC4  
                      l2969 3D9A                        l3689 5702                        l3961 2CB4  
                      l3953 2C70                        l3945 2C42                        l3937 2C14  
                      l3929 2BC8                        l3881 29FC                        l3873 2924  
                      l3865 28A0                        l3857 27C2                        l3849 26DA  
                      l3793 248C                        l3785 23EC                        l4497 54CA  
                      l4489 5496                        l3699 6254                        l2995 3E24  
                      l2987 3DFA                        l2979 3DCA                        l3971 2D12  
                      l3963 2CD8                        l3955 2C78                        l3947 2C52  
                      l3939 2C18                        l3883 2A0C                        l3891 2A46  
                      l3875 2938                        l3867 28B0                        l3859 2806  
                      l3795 2492                        l3787 2430                        l3779 2330  
                      l4499 54E0                        l2997 3E36                        l2989 3E0A  
                      l3981 2D50                        l3973 2D18                        l3965 2CE0  
                      l3957 2C84                        l3949 2C5A                        l3893 2A58  
                      l3885 2A1E                        l3877 2948                        l3869 28C0  
                      l3797 24A4                        l3789 2438                        l2999 3E44  
                      l3991 2DA2                        l3983 2D56                        l3975 2D2A  
                      l3959 2C8A                        l3967 2CE6                        l3895 2A66  
                      l3887 2A30                        l3879 296C                        l3799 24B6  
                      l3993 2DAE                        l3985 2D5C                        l3977 2D36  
                      l3969 2CF8                        l3897 2A76                        l3889 2A3E  
                      l3995 2DB6                        l3979 2D3E                        l3899 2A7A  
                      l3997 2DC8                        l3989 2D90                        l3999 2DCE  
                      STR_1 2001                        STR_2 2014                        STR_3 2026  
                      STR_4 2038                        STR_5 2049                        STR_6 2056  
                      STR_7 205E                        u3000 3F16                        u3001 3F12  
                      u3010 3F34                        u3011 3F30                        u3100 4084  
                      u3020 3F54                        u3101 4080                        u3021 3F50  
                      u3110 4094                        u3030 3F62                        u3111 4090  
                      u3031 3F5E                        u4000 5B5C                        u3200 416A  
                      u3120 40C0                        u3040 3F72                        u4001 5B58  
                      u3201 4166                        u3121 40BC                        u3041 3F6E  
                      u4010 5B78                        u3210 41B4                        u3130 40D0  
                      u3050 3FA4                        u4011 5B74                        u3211 41B0  
                      u3131 40CC                        u3051 3FA0                        u4020 5B9E  
                      u4100 5D80                        u3220 41C6                        u3140 40EC  
                      u3060 3FB2                        u3300 59DA                        u4021 5B9A  
                      u4101 5D7C                        u3221 41C2                        u3141 40E8  
                      u3061 3FAE                        u3301 59D6                        u4030 5BC6  
                      u4110 5DB4                        u3230 41D6                        u3150 40FC  
                      u3070 3FD0                        u3310 5550                        u4031 5BC2  
                      u4111 5DB0                        u3231 41D2                        u3151 40F8  
                      u3071 3FCC                        u4040 5BE0                        u4120 575A  
                      u3240 41F6                        u3160 410E                        u3080 4008  
                      u4200 5696                        u3320 556E                        u3400 60F2  
                      u5000 394E                        u4041 5BDC                        u4121 5756  
                      u3241 41F2                        u3161 410A                        u3081 4004  
                      u4201 5692                        u3321 556A                        u3401 60EC  
                      u4050 5BFA                        u4130 5798                        u3250 4208  
                      u3170 4126                        u3090 404E                        u4210 56AA  
                      u3330 5596                        u3410 60F4                        u5010 3964  
                      _T2PR 003FAB                        u4051 5BF6                        u4131 5794  
                      u3251 4204                        u3171 4122                        u3091 404A  
                      u4211 56A6                        u3331 5592                        u3315 5546  
                      u5011 3960                        u4060 5C18                        u4140 57B6  
                      u3260 4224                        u3180 413C                        u4220 56D2  
                      u3340 55C0                        u3500 4F62                        u3420 610A  
                      u4300 211E                        u5020 39A2                        u4061 5C14  
                      u4141 57B2                        u3261 4220                        u3181 4138  
                      u4221 56CE                        u3341 55BC                        u3421 6106  
                      u4301 211A                        u5021 399E                        u5110 61C6  
                      u4070 5C2E                        u4150 57D6                        u3190 4150  
                      u4230 56F2                        u3510 4F7E                        u3430 4DF0  
                      u3270 5942                        u4310 2170                        u5030 39F4  
                      u5111 61C2                        u4071 5C2A                        u4151 57D2  
                      u3191 414C                        u4231 56EE                        u3511 4F7A  
                      u3271 593E                        u4311 216C                        u5031 39F0  
                      u5200 4C78                        u4080 5C52                        u3600 476C  
                      u4160 5826                        u4240 5702                        u3360 5602  
                      u3520 4FBA                        u3440 4E1E                        u2800 5A26  
                      u3280 596C                        u4400 23E8                        u4320 21A0  
                      u5040 3A48                        u5120 5F5E                        u5105 6192  
                      u5201 4C74                        u4081 5C4E                        u3601 4768  
                      u4161 5822                        u4241 56FE                        u3361 55FC  
                      u3521 4FB6                        u3505 4F58                        u3441 4E1A  
                      u2801 5A22                        u3281 5968                        u4401 23E4  
                      u4321 219A                        u5041 3A44                        u5121 5F5A  
                      u5106 6194                        u5130 5FFC                        u5210 4CC4  
                      u3530 63CC                        u4250 6254                        u3610 47AC  
                      u4090 5D42                        u4170 62F4                        u3370 5604  
                      u3450 4E48                        u2810 5A38                        u3290 59CA  
                      u4410 247A                        u4330 21A2                        u5050 3B2E  
                      u5131 5FF8                        u5211 4CC0                        u3531 63C6  
                      u4251 6250                        u3611 47A8                        u4091 5D3E  
                      u4171 62F0                        u3355 55DA                        u3451 4E44  
                      u3435 4DE6                        u2811 5A34                        u3291 59C6  
                      u4411 2476                        u5051 3B2A                        u5300 5EB8  
                      u5140 6036                        u5220 4D10                        u3540 63CE  
                      u4260 6286                        u3700 494A                        u3620 47F4  
                      u2900 3D80                        u4180 562C                        u2820 5A60  
                      u3380 5FCA                        u4500 25AA                        u4420 24A4  
                      u4340 21B8                        u5060 3BB4                        u5301 5EB4  
                      u5141 6032                        u5221 4D0C                        u4261 6282  
                      u3701 4946                        u3621 47F0                        u2901 3D7C  
                      u4181 5628                        u2821 5A5C                        u4501 25A6  
                      u4421 24A0                        u4341 21B4                        u5061 3BAE  
                      u5310 4FF6                        u5150 5C8E                        u5230 4D5C  
                      u3710 4978                        u3630 4874                        u3550 46E4  
                      u2910 3DC2                        u4190 5668                        u3470 4EBE  
                      u2830 5A96                        u3390 5FDC                        u4510 25B8  
                      u4430 24B6                        u4350 2258                        u4270 209A  
                      u5070 3BB6                        u5311 4FF2                        u5151 5C8A  
                      u5231 4D58                        u3711 4974                        u3631 4870  
                      u3551 46E0                        u2911 3DBE                        u3471 4EBA  
                      u2831 5A92                        u3391 5FD8                        u4511 25B4  
                      u4431 24B2                        u4351 2254                        u4271 2096  
                      u5400 51A0                        u5320 5004                        u5240 5DFC  
                      u5160 5CB0                        u3720 498E                        u3640 4896  
                      u3560 46F6                        u3800 427C                        u2920 3DD8  
                      u3480 4EEA                        u2840 62DC                        u4600 2A0C  
                      u4520 25CE                        u4440 24D8                        u4360 2288  
                      u4280 20FE                        u5080 3BCC                        u5401 519C  
                      u5321 5000                        u5161 5CAC                        u3721 498A  
                      u3641 4892                        u3561 46F2                        u3801 4278  
                      u2921 3DD4                        u3465 4E5E                        u2841 62D8  
                      u4601 2A08                        u4521 25CA                        u4441 24D4  
                      u4361 2282                        u4281 20FA                        u5081 3BC8  
                      u5330 5078                        u5250 5E40                        u5170 5CD8  
                      u3730 49A2                        u3650 48C0                        u3570 4706  
                      u3810 42BC                        u2930 3DEA                        u3490 4F06  
                      u3466 4E68                        u2850 634E                        u4610 2A1E  
                      u4530 25DC                        u4450 2502                        u4370 228A  
                      u4290 210C                        u5090 3CA0                        u5410 2E14  
                      u5331 5074                        u5171 5CD4                        u3731 499E  
                      u3651 48BC                        u3571 4702                        u3811 42B8  
                      u2931 3DE6                        u4195 565E                        u3491 4F02  
                      u3467 4E78                        u2851 634A                        u3387 5FBC  
                      u4611 2A1A                        u4531 25D8                        u4451 24FE  
                      u4291 2108                        u5091 3C9C                        u5411 2E10  
                      u5340 50CE                        u5260 5E50                        u5180 4BE0  
                      u3740 49BC                        u3660 48E4                        u3580 474A  
                      u3900 459E                        u3820 42CE                        u2940 3DFA  
                      u2860 6390                        u4700 2C04                        u4620 2A30  
                      u4540 2606                        u4460 2518                        u4380 22A0  
                      u5500 33E2                        u5420 2E4E                        _PMD0 0039C0  
                      u5341 50CA                        u5261 5E4C                        u5181 4BDC  
                      u3741 49B8                        u3661 48E0                        u3581 4746  
                      u3901 459A                        u3821 42CA                        u2941 3DF6  
                      u3485 4EE0                        u2861 638A                        u4701 2C00  
                      u4621 2A2C                        u4541 2602                        u4461 2514  
                      u4381 229C                        u5501 33D8                        u5421 2E4A  
                      _PMD1 0039C1                        u5350 5118                        u5270 5E60  
                      u5190 4C2C                        u3750 4A14                        u3670 48FA  
                      u3590 475C                        u3910 45B4                        u3830 42DE  
                      u2950 3E36                        u2870 6392                        u4710 2C3A  
                      u4630 2A3E                        u4550 27C2                        u4470 2534  
                      u4390 232C                        u5430 2EFA                        _PMD2 0039C2  
                      u5351 5114                        u5271 5E5C                        u5247 5DEE  
                      u5191 4C28                        u3751 4A10                        u3671 48F6  
                      u3591 4758                        u3911 45B0                        u3831 42DA  
                      u2951 3E32                        u4711 2C36                        u4631 2A3A  
                      u4551 27BE                        u4471 2530                        u4391 2328  
                      u5431 2EF6                        _PMD3 0039C3                        u5280 5E78  
                      u5360 5136                        u4800 523A                        u3760 4A44  
                      u3680 4918                        u3920 45C8                        u3840 4314  
                      u2960 3E44                        u2880 3D5E                        u4720 2C68  
                      u4640 2A58                        u4560 2848                        u4480 256E  
                      u5520 3418                        u5440 2F5E                        _PMD4 0039C4  
                      u5281 5E74                        u5361 5132                        u5257 5E32  
                      u4801 5236                        u3761 4A40                        u3681 4914  
                      u3921 45C4                        u3841 4310                        u2961 3E40  
                      u2881 3D5A                        u4721 2C64                        u4641 2A54  
                      u4561 2844                        u4481 256A                        u5521 3414  
                      u5441 2F5A                        _PMD5 0039C5                        u5290 5E9A  
                      u5370 5146                        u4810 5258                        u3770 4A74  
                      u3690 4938                        u3930 45E2                        u3850 4324  
                      u2970 3ED2                        u2890 3D70                        u4730 2CF8  
                      u4650 2A66                        u4570 28A0                        u4490 2598  
                      u5530 3452                        u5450 303E                        _PMD6 0039C6  
                      u5291 5E96                        u5371 5142                        u4811 5254  
                      u3771 4A70                        u3691 4934                        u3931 45DE  
                      u3851 4320                        u2971 3ECE                        u2891 3D6C  
                      u4731 2CF4                        u4651 2A62                        u4571 289C  
                      u4491 2594                        u5531 344E                        u5451 303A  
                      _PMD7 0039C7                        u5380 5154                        u4820 532A  
                      u3940 463A                        u3860 44DC                        u3780 425A  
                      u2980 3EEA                        u4740 2D12                        u4660 2ABE  
                      u4580 28B0                        u4900 5902                        u5540 3476  
                      u5460 30E6                        u5381 5150                        u4821 5324  
                      u3941 4636                        u3781 4256                        u2981 3EE4  
                      u4741 2D0E                        u4661 2ABA                        u4581 28AC  
                      u4901 58FE                        u5541 3472                        u5461 30E2  
                      u5390 5192                        u4830 532C                        u3950 4668  
                      u3870 453E                        u3790 426C                        u2990 3EEC  
                      u4750 2D2A                        u4670 2BC8                        u4590 2938  
                      u4910 3696                        u5550 3556                        u5518 33E6  
                      u5470 3116                        u5391 518E                        u3951 4664  
                      u3871 453A                        u3791 4268                        u4751 2D26  
                      u4671 2BC4                        u4591 2934                        u4911 3692  
                      u5551 3552                        u5471 3112                        u5607 54BE  
                      u4840 5342                        u3960 46A4                        u3880 455E  
                      u4760 2D8A                        u4680 2BE4                        u4920 36EE  
                      u5560 3596                        u5480 3200                        u4841 533E  
                      u3961 46A0                        u3881 455A                        u3865 44D2  
                      u4761 2D84                        u4681 2BE0                        u4921 36EA  
                      u5561 3592                        u5481 31FC                        u5617 2DFE  
                      u4850 5354                        u3970 5AFE                        u3890 4570  
                      u4770 2D8C                        u4690 2BF6                        u4930 3746  
                      u5570 35D6                        u5490 33CE                        u4851 5350  
                      u3971 5AFA                        u3891 456C                        u4691 2BF2  
                      u4931 3742                        u5571 35D2                        u5627 3402  
                      u5491 33CA                        u3980 5B18                        u4780 2DA2  
                      u4860 5862                        u4940 37E0                        u3981 5B14  
                      u4781 2D9E                        u4861 585E                        u4941 37DA  
                      u5637 3460                        u4790 51FC                        u3990 5B3E  
                      u4870 5898                        u4950 37E2                        u4791 51F8  
                      u3991 5B3A                        u4871 5894                        u5647 365E  
                      u4880 58BC                        u4960 37F8                        u5657 6196  
                      u4881 58B8                        u4961 37F4                        u4890 58CE  
                      u4970 3828                        u5667 61A4                        u4891 58CA  
                      u4971 3824                        u4980 3872                        u5677 61AE  
                      u4981 386E                        u5597 54A4                        u4990 394C  
                      u5687 61CC                        u4991 3946                        u5697 61DA  
                      _WPUA 003A41                        _WPUB 003A51                        _WPUC 003A61  
                      _WPUD 003A71                        _WPUE 003A81               __CFG_FCMEN$ON 000000  
                      _dbuf 0122                        _atoi 51BC                        _main 5386  
                      _prec 00EB                        _nout 00E7                        pad@i 0018  
                      pad@p 0015                        fsr1h 003FE2                        fsr2h 003FDA  
                      indf1 003FE7                        indf2 003FDF                        fsr1l 003FE1  
                      pad@w 001A                        fsr2l 003FD9               ___fpclassifyf 54F8  
                      prodh 003FF4                        prodl 003FF3                        start FFFC  
           ___fldiv@new_exp 0030                 lcd_write@rs 0004                _tolower$1133 000D  
             __CFG_CSWEN$ON 000000                ___param_bank 000000                       ??_pad 0017  
             ___fltol@sign1 0009                       ?_atoi 0008             __end_of___fladd 4240  
                     ?_main 0001                       _ADCLK 003EFF               _main_loop$311 0186  
             _main_loop$314 0182               _main_loop$316 0188               _main_loop$317 018A  
                     _ADPCH 003EF1             __end_of___fldiv 4A88                       _ADREF 003EFD  
           __end_of___awdiv 5BB4             __end_of___flneg 631E                       STR_10 205A  
                     STR_11 2062                       STR_14 2066                       STR_16 2066  
             __CFG_WDTE$OFF 000000             __end_of___awmod 5C68             __end_of___flmul 46CA  
           __end_of___flsub 6184             __end_of___fltol 572C             __end_of___lldiv 5D14  
           ___awdiv@divisor 0003                       _T2CLK 003FAE             __end_of___llmod 5EF2  
                     _T2CON 003FAC              __CFG_DEBUG$OFF 000000             ___awdiv@counter 0005  
              vfpfcnvrt@fmt 00A6                       _PORTA 003FCA                       _PORTB 003FCB  
                     _PORTC 003FCC                       _PORTD 003FCD                       _PORTE 003FCE  
                     _TRISA 003FC2                       _TRISB 003FC3                       _TRISC 003FC4  
                     _TRISD 003FC5                       _TRISE 003FC6         ___lmul@multiplicand 0005  
      main_loop@bat_percent 0190               __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000  
             __CFG_WRTD$OFF 000000                       _flags 00ED                       _fputc 5A14  
                     _fputs 6294             __end_of_isdigit 63D4          __CFG_MCLRE$EXTMCLR 000000  
                     atoi@n 0015                       pad@fp 0011                       atoi@s 0008  
                     _width 00E9                       _putch 644A             __end_of_isspace 6294  
           __end_of_isupper 6398               lcd_init@shift 0005                       tablat 003FF5  
                     status 003FD8             __end_of_sprintf 623C              ?___fpclassifyf 0001  
           __end_of_tolower 6126             __end_of_strncmp 5932             __initialization 63D4  
              __end_of_atoi 5386                __end_of_main 54F8              __CFG_SAFEN$OFF 000000  
                    ??_atoi 000A                      ??_main 00DD               __activetblptr 000003  
            __CFG_MVECEN$ON 000000         lcd_init@cursorblink 0007                      _ADCON0 003EF8  
                    _ADCON1 003EF9                      _ADCON2 003EFA                      _ADCON3 003EFB  
                    ?_fputc 0001            ___llmod@dividend 001A                      ?_fputs 000A  
                    _ADRESH 003EF0                      _ADRESL 003EEF                      _CCPR2H 003F79  
                    _CCPR3H 003F75                      _CCPR2L 003F78                      _CCPR4H 003F71  
                    _CCPR3L 003F74                      _CCPR4L 003F70            ___awdiv@dividend 0001  
                    _ANSELA 003A40                      ?_putch 0001                      _ANSELB 003A50  
                    _ANSELC 003A60                      _ANSELD 003A70                      _ANSELE 003A80  
                    _ODCONA 003A42                      _ODCONB 003A52                      _ODCONC 003A62  
                    _RD4PPS 003A1C                      _ODCOND 003A72                      _ODCONE 003A82  
                    _RC7PPS 003A17                      _RD5PPS 003A1D                      _RD6PPS 003A1E  
                    _RD7PPS 003A1F              __CFG_WDTCCS$SC 000000                      _INLVLA 003A44  
                    _INLVLB 003A54                      _INLVLC 003A64                      _INLVLD 003A74  
                    _INLVLE 003A84            __end_of___xxtofl 51BC          lcd_write@longdelay 0002  
            __CFG_XINST$OFF 000000                vfprintf@cfmt 005D            __end_of_lcd_init 60BE  
                    ___flge 572C                      ___fleq 5D14                      ___lmul 5FDE  
                 ??___fladd 0017                      ___wmul 6406                   ??___fldiv 0027  
                 ??___awdiv 0005                   ??___flneg 0005              __CFG_STVREN$ON 000000  
                 ??___awmod 0005                   ??___flmul 0040                   ??___flsub 0059  
                 ??___fltol 0005                   ??___lldiv 0015                   ??___llmod 0022  
                    _efgtoa 206A                      _floorf 4D90                      _setLED 4A88  
                    clear_0 63EE                      clear_1 63FA            ___awdiv@quotient 0007  
           ___awmod@divisor 0003             ___awmod@counter 0005                      pad@buf 0013  
                    _strcpy 5F6C                      _strlen 631E              lcd_init@cursor 0006  
                    fputc@c 0001                      fputs@c 000E                      fputs@i 000F  
              __pdataCOMRAM 005F                      fputs@s 000A                   ??_isdigit 0003  
           ___fpclassifyf@e 0009             ___fpclassifyf@u 000B             ___fpclassifyf@x 0001  
              __mediumconst 0000                   ??_isspace 0003                main_loop@res 018E  
              main_loop@pos 0120                main_loop@sum 0118                      tblptrh 003FF7  
                 ??_isupper 0003                      tblptrl 003FF6                      tblptru 003FF8  
                    putch@c 0001            __end_of_vfprintf 5F6C                   ??_sprintf 005F  
                 ??_tolower 0009                   ??_strncmp 0007           _lcd_set_data_addr 6434  
                ___flge@ff1 0051                  ___flge@ff2 0055             ??___fpclassifyf 0005  
              ___xxtofl@arg 000B                ___xxtofl@exp 000A                ___xxtofl@val 0001  
                ___fleq@ff1 0001                  ___fleq@ff2 0005                  __accesstop 0060  
   __end_of__initialization 6400                  ___flneg@f1 0001               lcd_write@data 0001  
        ?_lcd_set_data_addr 0001               ___rparam_used 000001                  ___fltol@f1 0001  
            __pcstackCOMRAM 0001         ??_lcd_set_data_addr 0005               __end_of_fputc 5AEC  
             __end_of_fputs 62DE               __end_of_putch 644C          __size_of_lcd_print 00A4  
 __end_of_lcd_set_data_addr 644A          __size_of_lcd_write 005E                     ??_fputc 0005  
                   ??_fputs 000E             __CFG_PR1WAY$OFF 000000                     ??_putch 0001  
                __pbssBANK0 00DF                  __pbssBANK1 0100          __size_of_main_loop 0876  
                _efgtoa$521 0074                  _efgtoa$515 0070                  _efgtoa$516 0072  
                _efgtoa$525 0076                  _efgtoa$526 0078                  _efgtoa$527 007A  
                   ?___flge 0051                     ?___fleq 0001                     ?___lmul 0001  
                   ?___wmul 0001                     ?_efgtoa 0060                     _CCP2CON 003F7A  
                   _CCP3CON 003F76                     _CCP4CON 003F72                     ?_floorf 0038  
                   ?_setLED 001A              ___lmul@product 0009                     ?_strcpy 0001  
                   ?_strlen 0001         __CFG_PWRTS$PWRT_OFF 000000                   ?___xxtofl 0001  
        __size_of_vfpfcnvrt 06DE                     _PWM6DCH 003F69                     _PWM6DCL 003F68  
                   _PWM8DCH 003F61                     _PWM8DCL 003F60                     _PWM6CON 003F6A  
                   _PWM8CON 003F62                     _SLRCONA 003A43                     _SLRCONB 003A53  
                   _SLRCONC 003A63                     _SLRCOND 003A73                     _SLRCONE 003A83  
                 ?_lcd_init 0005                     __Hparam 0000                     __Lparam 0000  
__CFG_RSTOSC$HFINTOSC_64MHZ 000000                  _setLED$291 0026                  _setLED$292 002A  
                _setLED$293 002E                  _setLED$294 0032                  _setLED$295 0036  
                _setLED$296 003A             __size_of___flge 0104             __size_of___fleq 00AA  
         __end_of_lcd_print 5E62                     ___fladd 3D44                     ___fldiv 46CA  
                   ___awdiv 5AEC                     ___flneg 62DE             __size_of___lmul 0072  
                   ___awmod 5BB4                     ___flmul 4240                     ___flsub 6126  
                   ___fltol 5616           __end_of_lcd_write 61E2                     ___lldiv 5C68  
           __size_of___wmul 002E                     ___llmod 5E62                   ?_vfprintf 00BC  
              __psmallconst 2000             __size_of_efgtoa 0D86           __end_of_main_loop 3666  
           __size_of_floorf 0254                     __pcinit 63D4             __size_of_setLED 0308  
                   __ramtop 2000                     __ptext0 5386                     __ptext1 2DF0  
                   __ptext2 61E2                     __ptext3 5EF2                     __ptext4 3666  
                   __ptext5 5830                     __ptext6 206A                     __ptext7 60BE  
                   __ptext8 635C                     __ptext9 5F6C             __CFG_WRTAPP$OFF 000000  
           __size_of_strcpy 0072             __size_of_strlen 003E                __size_of_pad 00E2  
                   _isdigit 6398                  ??___xxtofl 0005            ___awmod@dividend 0001  
                   _isspace 623C             __CFG_WRTSAF$OFF 000000                     _isupper 635C  
                   efgtoa@c 0066                     efgtoa@d 0084                     efgtoa@e 009C  
                   efgtoa@f 0062                     efgtoa@g 0098                     efgtoa@h 008E  
                   efgtoa@i 0096                     efgtoa@l 0092                     efgtoa@m 0080  
                   efgtoa@n 009E                     efgtoa@p 0088                     efgtoa@t 007C  
                   efgtoa@u 00A0                     efgtoa@w 008B                     atoi@neg 000E  
__size_of_lcd_set_data_addr 0016                     _sprintf 61E2                     _tolower 60BE  
                ??_lcd_init 0009                     _strncmp 5830        end_of_initialization 6400  
                   floorf@e 0046                     floorf@m 0042                     floorf@u 0048  
                   floorf@x 0038                     setLED@b 0022                     setLED@g 001E  
                   setLED@r 001A                     fputc@fp 0003                     fputs@fp 000C  
           ___lldiv@divisor 0011               main_loop@last 0100             ___lldiv@counter 0019  
         __end_of_vfpfcnvrt 3D44                  efgtoa@mode 008D                  efgtoa@sign 0086  
                   postdec2 003FDD                     postinc0 003FEE                     postinc1 003FE6  
                   postinc2 003FDE                  ??_vfprintf 005D       __CFG_WDTCPS$WDTCPS_31 000000  
                   strcpy@d 0009                     strlen@a 0003                     strcpy@s 0007  
                   strlen@s 0001                   _PORTBbits 003FCB                   _PORTCbits 003FCC  
                 _PORTDbits 003FCD                   _PORTEbits 003FCE                 ___fladd@grs 001E  
             ___xxtofl@sign 0009                 ___fldiv@grs 0032                 ___fldiv@rem 002B  
          __CFG_FEXTOSC$OFF 000000                  lcd_init@on 0008                 ___flmul@grs 0045  
                lcd_print@i 0009              __end_of___flge 5830              __end_of___fleq 5DBE  
            __end_of___lmul 6050                 vfpfcnvrt@ap 00A8                 vfpfcnvrt@ct 00B8  
               vfpfcnvrt@fp 00A4              __end_of___wmul 6434               __pidataCOMRAM 644C  
            __end_of_efgtoa 2DF0              __end_of_floorf 4FE4              __end_of_setLED 4D90  
                floorf@F524 00DF              __end_of_strcpy 5FDE              __end_of_strlen 635C  
       start_initialization 63D4                 __end_of_pad 5A14       __end_of___fpclassifyf 5616  
           ___llmod@divisor 001E             ___llmod@counter 0022            __CFG_LPBOREN$OFF 000000  
               vfprintf@fmt 00BE                    ??___flge 0059                    ??___fleq 0009  
                  ??___lmul 0009                    ??___wmul 0005                    ??_efgtoa 0067  
                  ??_floorf 003C                    ??_setLED 0026            __CFG_IVT1WAY$OFF 000000  
                  ??_strcpy 0005                    ??_strlen 0003                   ___fladd@a 0013  
                 ___fladd@b 000F                   ___fldiv@a 0023                   ___fldiv@b 001F  
                 ___flmul@a 003C                   ___flmul@b 0038                   ___flsub@a 0055  
                 ___flsub@b 0051               __pcstackBANK0 0060               __pcstackBANK1 0172  
         __size_of___xxtofl 01D8           __size_of_lcd_init 006E                   _atoi$1017 0010  
                 _atoi$1018 0014                   _atoi$1019 0012                    ?___fladd 000F  
                  ?___fldiv 001F                    ?___awdiv 0001                    ?___flneg 0001  
                  ?___awmod 0001                    ?___flmul 0038                    ?___flsub 0051  
                  ?___fltol 0001                    ?___lldiv 000D                    ?___llmod 001A  
          __CFG_PPS1WAY$OFF 000000                   _lcd_print 5DBE           __size_of_vfprintf 007A  
                 _lcd_write 6184      __CFG_BBSIZE$BBSIZE_512 000000                 __smallconst 2000  
                  ?_isdigit 0001                   _main_loop 2DF0                    ?_isspace 0001  
                  ?_isupper 0001                    _CCPTMRS0 003F5E            main_loop@lastAvg 018C  
          main_loop@counter 011C            main_loop@lastSum 0114                    ?_sprintf 00C2  
                  ?_tolower 0007              __size_of_fputc 00D8              __size_of_fputs 004A  
                  ?_strncmp 0001              __size_of_putch 0002              ___wmul@product 0005  
                 _vfpfcnvrt 3666                  ?_lcd_print 0005                  _ADCON0bits 003EF8  
                ?_lcd_write 0001           ___wmul@multiplier 0001                  ?_main_loop 0001  
              _isspace$1048 0007                  vfpfcnvrt@c 00BB                  vfpfcnvrt@f 00B4  
         ___lmul@multiplier 0001               _ledBrightness 005F                    __Hrparam 0000  
           lcd_print@string 0005                  vfprintf@ap 00C0                    __Lrparam 0000  
                vfprintf@fp 00BC          __CFG_BOREN$SBORDIS 000000            __size_of___fladd 04FC  
          __size_of___fldiv 03BE            __size_of___awdiv 00C8            __size_of___flneg 0040  
          __size_of___awmod 00B4            __size_of___flmul 048A            __size_of___flsub 005E  
          __size_of___fltol 0116            __size_of___lldiv 00AC            __size_of___llmod 0090  
                ?_vfpfcnvrt 00A4          ___fpclassifyf@F463 00E3                  sprintf@fmt 00C4  
                  ___xxtofl 4FE4            __size_of_isdigit 003C            __size_of_isspace 0058  
                  __ptext10 5932                    __ptext11 631E                    __ptext20 62DE  
                  __ptext12 6294                    __ptext21 4240                    __ptext13 5A14  
                  __ptext30 6406                    __ptext22 572C                    __ptext14 644A  
                  __ptext31 4A88                    __ptext23 5D14                    __ptext15 4D90  
                  __ptext32 5FDE                    __ptext24 46CA                    __ptext16 54F8  
                  __ptext33 5C68                    __ptext25 5BB4                    __ptext17 5616  
                  __ptext34 6434                    __ptext26 5AEC                    __ptext18 6126  
                  __ptext35 5DBE                    __ptext27 51BC                    __ptext19 3D44  
                  __ptext36 4FE4                    __ptext28 623C                    __ptext37 5E62  
                  __ptext29 6398                    __ptext38 6050                    __ptext39 6184  
          __size_of_isupper 003C                    _lcd_init 6050            __size_of_sprintf 005A  
          __size_of_tolower 0068                  strcpy@dest 0001            __size_of_strncmp 0102  
           main_loop@batmsg 0172               __size_of_atoi 01CA               __size_of_main 0172  
           main_loop@sample 0194        __CFG_WDTCWS$WDTCWS_7 000000          __CFG_BORV$VBOR_190 000000  
                  efgtoa@fp 0060                    efgtoa@ne 0082                    efgtoa@pp 007E  
                  efgtoa@ou 006C                    _vfprintf 5EF2                 ??_lcd_print 0007  
               ??_lcd_write 0003                 ??_main_loop 00D4                    setLED@sb 0046  
                  setLED@sg 0042                    setLED@sr 003E                    isdigit@c 0001  
                 sprintf@ap 00CC                    isspace@c 0001            ___lldiv@dividend 000D  
         __CFG_CLKOUTEN$OFF 000000                   strcpy@src 0003                    isupper@c 0001  
                 strncmp@_l 0001                   strncmp@_r 0003                 efgtoa@nmode 008A  
               ??_vfpfcnvrt 00AA               _vfpfcnvrt$541 00AE               _vfpfcnvrt$542 00B0  
             _vfpfcnvrt$546 00B2                    sprintf@f 00CE                    tolower@c 0007  
                  sprintf@s 00C2      __size_of___fpclassifyf 011E            ___lldiv@quotient 0015  
                  strncmp@l 0008                    strncmp@n 0005                    strncmp@r 000A  
             ___fladd@signs 001B                ___fladd@aexp 001C                ___fladd@bexp 001D  
